digraph  {
n0 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_Basic_Http_Auth()", label="Entry RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_Basic_Http_Auth()", span="15-15"];
n1 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_Basic_Http_Auth()", label="Uri baseUrl = new Uri(''http://localhost:8888/'')", span="17-17"];
n2 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_Basic_Http_Auth()", label="SimpleServer.Create(baseUrl.AbsoluteUri, UsernamePasswordEchoHandler)", span="18-18"];
d3 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_Basic_Http_Auth()", color=green, community=0, label="var client = new RestClient(baseUrl)\r\n                             {\r\n                                 Authenticator = new HttpBasicAuthenticator(''\\ntestuser'', ''testpassword'')\r\n                             }", prediction=0, span="21-24"];
n8 [cluster="System.Uri.Uri(string)", label="Entry System.Uri.Uri(string)", span="0-0"];
n9 [cluster="RestSharp.IntegrationTests.Helpers.SimpleServer.Create(string, System.Action<System.Net.HttpListenerContext>, System.Net.AuthenticationSchemes)", label="Entry RestSharp.IntegrationTests.Helpers.SimpleServer.Create(string, System.Action<System.Net.HttpListenerContext>, System.Net.AuthenticationSchemes)", span="19-19"];
n4 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_Basic_Http_Auth()", label="var request = new RestRequest(''test'')", span="24-24"];
n5 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_Basic_Http_Auth()", label="var response = client.Execute(request)", span="25-25"];
n10 [cluster="RestSharp.RestClient.RestClient(System.Uri)", label="Entry RestSharp.RestClient.RestClient(System.Uri)", span="153-153"];
n11 [cluster="RestSharp.HttpBasicAuthenticator.HttpBasicAuthenticator(string, string)", label="Entry RestSharp.HttpBasicAuthenticator.HttpBasicAuthenticator(string, string)", span="26-26"];
n12 [cluster="RestSharp.RestRequest.RestRequest(string)", label="Entry RestSharp.RestRequest.RestRequest(string)", span="86-86"];
n6 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_Basic_Http_Auth()", label="Assert.AreEqual(''testuser|testpassword'', response.Content)", span="27-27"];
n7 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_Basic_Http_Auth()", label="Exit RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_Basic_Http_Auth()", span="15-15"];
n15 [cluster="RestSharp.IntegrationTests.AuthenticationTests.UsernamePasswordEchoHandler(System.Net.HttpListenerContext)", label="Entry RestSharp.IntegrationTests.AuthenticationTests.UsernamePasswordEchoHandler(System.Net.HttpListenerContext)", span="31-31"];
n16 [cluster="RestSharp.IntegrationTests.AuthenticationTests.UsernamePasswordEchoHandler(System.Net.HttpListenerContext)", label="var header = context.Request.Headers[''Authorization'']", span="33-33"];
n18 [cluster="RestSharp.IntegrationTests.AuthenticationTests.UsernamePasswordEchoHandler(System.Net.HttpListenerContext)", label="context.Response.OutputStream.WriteStringUtf8(string.Join(''|'', parts))", span="36-36"];
n17 [cluster="RestSharp.IntegrationTests.AuthenticationTests.UsernamePasswordEchoHandler(System.Net.HttpListenerContext)", label="var parts = Encoding.ASCII.GetString(Convert.FromBase64String(header.Substring(''Basic ''.Length))).Split(':')", span="34-34"];
n20 [cluster="string.Substring(int)", label="Entry string.Substring(int)", span="0-0"];
n21 [cluster="System.Convert.FromBase64String(string)", label="Entry System.Convert.FromBase64String(string)", span="0-0"];
n22 [cluster="System.Text.Encoding.GetString(byte[])", label="Entry System.Text.Encoding.GetString(byte[])", span="0-0"];
n23 [cluster="string.Split(params char[])", label="Entry string.Split(params char[])", span="0-0"];
n19 [cluster="RestSharp.IntegrationTests.AuthenticationTests.UsernamePasswordEchoHandler(System.Net.HttpListenerContext)", label="Exit RestSharp.IntegrationTests.AuthenticationTests.UsernamePasswordEchoHandler(System.Net.HttpListenerContext)", span="31-31"];
n24 [cluster="string.Join(string, params string[])", label="Entry string.Join(string, params string[])", span="0-0"];
n25 [cluster="System.IO.Stream.WriteStringUtf8(string)", label="Entry System.IO.Stream.WriteStringUtf8(string)", span="7-7"];
n26 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", label="Entry RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", span="40-40"];
n27 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", label="var baseUrl = new Uri(''https://api.twitter.com'')", span="42-42"];
n28 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", label="var client = new RestClient(baseUrl)\r\n                         {\r\n                             Authenticator = OAuth1Authenticator.ForRequestToken(''\\nCONSUMER_KEY'', ''CONSUMER_SECRET'')\r\n                         }", span="43-46"];
n29 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", label="var request = new RestRequest(''oauth/request_token'')", span="47-47"];
n30 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", label="var response = client.Execute(request)", span="48-48"];
n39 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", label="var url = client.BuildUri(request).ToString()", span="62-62"];
n43 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", label="client.Authenticator = OAuth1Authenticator.ForAccessToken(\r\n                ''P5QziWtocYmgWAhvlegxw'', ''jBs07SIxJ0kodeU9QtLEs1W1LRgQb9u5Lc987BA94'', \\noauthToken,\r\n                oauthTokenSecret, verifier)", span="69-71"];
n44 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", label="response = client.Execute(request)", span="72-72"];
n53 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", label="client.Authenticator = OAuth1Authenticator.ForProtectedResource(\r\n                ''P5QziWtocYmgWAhvlegxw'', ''jBs07SIxJ0kodeU9QtLEs1W1LRgQb9u5Lc987BA94'', \\noauthToken,\r\n                oauthTokenSecret)", span="84-86"];
n54 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", label="response = client.Execute(request)", span="87-87"];
n58 [cluster="RestSharp.Authenticators.OAuth1Authenticator.ForRequestToken(string, string)", label="Entry RestSharp.Authenticators.OAuth1Authenticator.ForRequestToken(string, string)", span="65-65"];
n31 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", label="Assert.NotNull(response)", span="50-50"];
n32 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", label="Assert.AreEqual(HttpStatusCode.OK, response.StatusCode)", span="51-51"];
n33 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", label="var qs = HttpUtility.ParseQueryString(response.Content)", span="53-53"];
n34 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", label="var oauthToken = qs[''oauth_token'']", span="54-54"];
n35 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", label="var oauthTokenSecret = qs[''oauth_token_secret'']", span="55-55"];
n36 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", label="Assert.NotNull(oauthToken)", span="57-57"];
n38 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", label="request = new RestRequest(''oauth/authorize?oauth_token='' + oauthToken)", span="60-60"];
n37 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", label="Assert.NotNull(oauthTokenSecret)", span="58-58"];
n40 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", label="Process.Start(url)", span="64-64"];
n62 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", label="Entry RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", span="282-282"];
n63 [cluster="System.Uri.ToString()", label="Entry System.Uri.ToString()", span="0-0"];
n41 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", label="string verifier = ''123456''", span="66-66"];
n64 [cluster="System.Diagnostics.Process.Start(string)", label="Entry System.Diagnostics.Process.Start(string)", span="0-0"];
n42 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", label="request = new RestRequest(''oauth/access_token'')", span="68-68"];
n45 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", label="Assert.NotNull(response)", span="74-74"];
n46 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", label="Assert.AreEqual(HttpStatusCode.OK, response.StatusCode)", span="75-75"];
n47 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", label="qs = HttpUtility.ParseQueryString(response.Content)", span="77-77"];
n48 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", label="oauthToken = qs[''oauth_token'']", span="78-78"];
n49 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", label="oauthTokenSecret = qs[''oauth_token_secret'']", span="79-79"];
n50 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", label="Assert.NotNull(oauthToken)", span="80-80"];
n51 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", label="Assert.NotNull(oauthTokenSecret)", span="81-81"];
n52 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", label="request = new RestRequest(''account/verify_credentials.xml'')", span="83-83"];
n55 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", label="Assert.NotNull(response)", span="89-89"];
n56 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", label="Assert.AreEqual(HttpStatusCode.OK, response.StatusCode)", span="90-90"];
n57 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", label="Exit RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", span="40-40"];
m1_24 [cluster="RestSharp.IRestRequest.AddCookie(string, string)", file="IRestRequest.cs", label="Entry RestSharp.IRestRequest.AddCookie(string, string)", span="279-279"];
m1_25 [cluster="RestSharp.IRestRequest.AddCookie(string, string)", file="IRestRequest.cs", label="Exit RestSharp.IRestRequest.AddCookie(string, string)", span="279-279"];
m1_2 [cluster="RestSharp.IRestRequest.AddBody(object)", file="IRestRequest.cs", label="Entry RestSharp.IRestRequest.AddBody(object)", span="178-178"];
m1_3 [cluster="RestSharp.IRestRequest.AddBody(object)", file="IRestRequest.cs", label="Exit RestSharp.IRestRequest.AddBody(object)", span="178-178"];
m1_22 [cluster="RestSharp.IRestRequest.AddHeader(string, string)", file="IRestRequest.cs", label="Entry RestSharp.IRestRequest.AddHeader(string, string)", span="271-271"];
m1_23 [cluster="RestSharp.IRestRequest.AddHeader(string, string)", file="IRestRequest.cs", label="Exit RestSharp.IRestRequest.AddHeader(string, string)", span="271-271"];
m1_26 [cluster="RestSharp.IRestRequest.AddUrlSegment(string, string)", file="IRestRequest.cs", label="Entry RestSharp.IRestRequest.AddUrlSegment(string, string)", span="287-287"];
m1_27 [cluster="RestSharp.IRestRequest.AddUrlSegment(string, string)", file="IRestRequest.cs", label="Exit RestSharp.IRestRequest.AddUrlSegment(string, string)", span="287-287"];
m1_12 [cluster="RestSharp.IRestRequest.AddObject(object)", file="IRestRequest.cs", label="Entry RestSharp.IRestRequest.AddObject(object)", span="219-219"];
m1_13 [cluster="RestSharp.IRestRequest.AddObject(object)", file="IRestRequest.cs", label="Exit RestSharp.IRestRequest.AddObject(object)", span="219-219"];
m1_4 [cluster="RestSharp.IRestRequest.AddJsonBody(object)", file="IRestRequest.cs", label="Entry RestSharp.IRestRequest.AddJsonBody(object)", span="185-185"];
m1_5 [cluster="RestSharp.IRestRequest.AddJsonBody(object)", file="IRestRequest.cs", label="Exit RestSharp.IRestRequest.AddJsonBody(object)", span="185-185"];
m1_14 [cluster="RestSharp.IRestRequest.AddParameter(RestSharp.Parameter)", file="IRestRequest.cs", label="Entry RestSharp.IRestRequest.AddParameter(RestSharp.Parameter)", span="226-226"];
m1_15 [cluster="RestSharp.IRestRequest.AddParameter(RestSharp.Parameter)", file="IRestRequest.cs", label="Exit RestSharp.IRestRequest.AddParameter(RestSharp.Parameter)", span="226-226"];
m1_18 [cluster="RestSharp.IRestRequest.AddParameter(string, object, RestSharp.ParameterType)", file="IRestRequest.cs", label="Entry RestSharp.IRestRequest.AddParameter(string, object, RestSharp.ParameterType)", span="248-248"];
m1_19 [cluster="RestSharp.IRestRequest.AddParameter(string, object, RestSharp.ParameterType)", file="IRestRequest.cs", label="Exit RestSharp.IRestRequest.AddParameter(string, object, RestSharp.ParameterType)", span="248-248"];
m1_28 [cluster="RestSharp.IRestRequest.AddQueryParameter(string, string)", file="IRestRequest.cs", label="Entry RestSharp.IRestRequest.AddQueryParameter(string, string)", span="295-295"];
m1_29 [cluster="RestSharp.IRestRequest.AddQueryParameter(string, string)", file="IRestRequest.cs", label="Exit RestSharp.IRestRequest.AddQueryParameter(string, string)", span="295-295"];
m1_20 [cluster="RestSharp.IRestRequest.AddParameter(string, object, string, RestSharp.ParameterType)", file="IRestRequest.cs", label="Entry RestSharp.IRestRequest.AddParameter(string, object, string, RestSharp.ParameterType)", span="263-263"];
m1_21 [cluster="RestSharp.IRestRequest.AddParameter(string, object, string, RestSharp.ParameterType)", file="IRestRequest.cs", label="Exit RestSharp.IRestRequest.AddParameter(string, object, string, RestSharp.ParameterType)", span="263-263"];
m1_6 [cluster="RestSharp.IRestRequest.AddXmlBody(object)", file="IRestRequest.cs", label="Entry RestSharp.IRestRequest.AddXmlBody(object)", span="192-192"];
m1_7 [cluster="RestSharp.IRestRequest.AddXmlBody(object)", file="IRestRequest.cs", label="Exit RestSharp.IRestRequest.AddXmlBody(object)", span="192-192"];
m1_8 [cluster="RestSharp.IRestRequest.AddXmlBody(object, string)", file="IRestRequest.cs", label="Entry RestSharp.IRestRequest.AddXmlBody(object, string)", span="201-201"];
m1_9 [cluster="RestSharp.IRestRequest.AddXmlBody(object, string)", file="IRestRequest.cs", label="Exit RestSharp.IRestRequest.AddXmlBody(object, string)", span="201-201"];
m1_10 [cluster="RestSharp.IRestRequest.AddObject(object, params string[])", file="IRestRequest.cs", label="Entry RestSharp.IRestRequest.AddObject(object, params string[])", span="212-212"];
m1_11 [cluster="RestSharp.IRestRequest.AddObject(object, params string[])", file="IRestRequest.cs", label="Exit RestSharp.IRestRequest.AddObject(object, params string[])", span="212-212"];
m1_0 [cluster="RestSharp.IRestRequest.AddBody(object, string)", file="IRestRequest.cs", label="Entry RestSharp.IRestRequest.AddBody(object, string)", span="170-170"];
m1_1 [cluster="RestSharp.IRestRequest.AddBody(object, string)", file="IRestRequest.cs", label="Exit RestSharp.IRestRequest.AddBody(object, string)", span="170-170"];
m1_16 [cluster="RestSharp.IRestRequest.AddParameter(string, object)", file="IRestRequest.cs", label="Entry RestSharp.IRestRequest.AddParameter(string, object)", span="234-234"];
m1_17 [cluster="RestSharp.IRestRequest.AddParameter(string, object)", file="IRestRequest.cs", label="Exit RestSharp.IRestRequest.AddParameter(string, object)", span="234-234"];
m1_30 [cluster="RestSharp.IRestRequest.IncreaseNumAttempts()", file="IRestRequest.cs", label="Entry RestSharp.IRestRequest.IncreaseNumAttempts()", span="299-299"];
m1_31 [cluster="RestSharp.IRestRequest.IncreaseNumAttempts()", file="IRestRequest.cs", label="Exit RestSharp.IRestRequest.IncreaseNumAttempts()", span="299-299"];
m2_170 [cluster="object.ChangeType(System.Type, System.Globalization.CultureInfo)", file="JsonDeserializer.cs", label="Entry object.ChangeType(System.Type, System.Globalization.CultureInfo)", span="82-82"];
m2_58 [cluster="System.Type.GetProperties()", file="JsonDeserializer.cs", label="Entry System.Type.GetProperties()", span="0-0"];
m2_168 [cluster="System.Convert.ToString(object, System.IFormatProvider)", file="JsonDeserializer.cs", label="Entry System.Convert.ToString(object, System.IFormatProvider)", span="0-0"];
m2_82 [cluster="System.Activator.CreateInstance(System.Type)", file="JsonDeserializer.cs", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m2_19 [cluster="System.Activator.CreateInstance<T>()", file="JsonDeserializer.cs", label="Entry System.Activator.CreateInstance<T>()", span="0-0"];
m2_178 [cluster="System.Guid.Guid(string)", file="JsonDeserializer.cs", label="Entry System.Guid.Guid(string)", span="0-0"];
m2_25 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildDictionary(System.Type, object)", file="JsonDeserializer.cs", label="Entry RestSharp.Deserializers.JsonDeserializer.BuildDictionary(System.Type, object)", span="116-116"];
m2_72 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildDictionary(System.Type, object)", file="JsonDeserializer.cs", label="var valueType = type.GetGenericArguments()[1]", span="120-120"];
m2_70 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildDictionary(System.Type, object)", file="JsonDeserializer.cs", label="var dict = (IDictionary)Activator.CreateInstance(type)", span="118-118"];
m2_71 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildDictionary(System.Type, object)", file="JsonDeserializer.cs", label="var keyType = type.GetGenericArguments()[0]", span="119-119"];
m2_73 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildDictionary(System.Type, object)", file="JsonDeserializer.cs", label="(IDictionary<string, object>)parent", span="122-122"];
m2_76 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildDictionary(System.Type, object)", file="JsonDeserializer.cs", label="valueType.IsGenericType && valueType.GetGenericTypeDefinition() == typeof(List<>)", span="130-130"];
m2_77 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildDictionary(System.Type, object)", file="JsonDeserializer.cs", label="item = BuildList(valueType, child.Value)", span="132-132"];
m2_78 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildDictionary(System.Type, object)", file="JsonDeserializer.cs", label="item = ConvertValue(valueType, child.Value)", span="136-136"];
m2_79 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildDictionary(System.Type, object)", file="JsonDeserializer.cs", label="dict.Add(key, item)", span="139-139"];
m2_80 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildDictionary(System.Type, object)", file="JsonDeserializer.cs", label="return dict;", span="142-142"];
m2_74 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildDictionary(System.Type, object)", file="JsonDeserializer.cs", label="var key = keyType != typeof (string) ? \r\n                    Convert.ChangeType(child.Key, keyType, CultureInfo.InvariantCulture) : \r\n                    \\nchild.Key", span="124-126"];
m2_75 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildDictionary(System.Type, object)", file="JsonDeserializer.cs", label="object item", span="128-128"];
m2_81 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildDictionary(System.Type, object)", file="JsonDeserializer.cs", label="Exit RestSharp.Deserializers.JsonDeserializer.BuildDictionary(System.Type, object)", span="116-116"];
m2_174 [cluster="string.ParseJsonDate(System.Globalization.CultureInfo)", file="JsonDeserializer.cs", label="Entry string.ParseJsonDate(System.Globalization.CultureInfo)", span="119-119"];
m2_182 [cluster="System.Type.IsSubclassOfRawGeneric(System.Type)", file="JsonDeserializer.cs", label="Entry System.Type.IsSubclassOfRawGeneric(System.Type)", span="56-56"];
m2_112 [cluster="lambda expression", file="JsonDeserializer.cs", label="Entry lambda expression", span="148-148"];
m2_67 [cluster="lambda expression", file="JsonDeserializer.cs", label="Entry lambda expression", span="74-74"];
m2_68 [cluster="lambda expression", file="JsonDeserializer.cs", label="p.CanWrite", span="74-74"];
m2_69 [cluster="lambda expression", file="JsonDeserializer.cs", label="Exit lambda expression", span="74-74"];
m2_113 [cluster="lambda expression", file="JsonDeserializer.cs", label="x.IsGenericType && x.GetGenericTypeDefinition() == typeof(IList<>)", span="148-148"];
m2_114 [cluster="lambda expression", file="JsonDeserializer.cs", label="Exit lambda expression", span="148-148"];
m2_23 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, object)", file="JsonDeserializer.cs", label="Entry RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, object)", span="145-145"];
m2_88 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, object)", file="JsonDeserializer.cs", label="var list = (IList)Activator.CreateInstance(type)", span="147-147"];
m2_89 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, object)", file="JsonDeserializer.cs", label="var listType = type.GetInterfaces().First(x => x.IsGenericType && x.GetGenericTypeDefinition() == typeof(IList<>))", span="148-148"];
m2_91 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, object)", file="JsonDeserializer.cs", label="parent is IList", span="151-151"];
m2_92 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, object)", file="JsonDeserializer.cs", label="(IList)parent", span="153-153"];
m2_104 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, object)", file="JsonDeserializer.cs", label="list.Add(ConvertValue(itemType, parent))", span="185-185"];
m2_95 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, object)", file="JsonDeserializer.cs", label="list.Add(item)", span="158-158"];
m2_98 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, object)", file="JsonDeserializer.cs", label="list.Add(null)", span="164-164"];
m2_99 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, object)", file="JsonDeserializer.cs", label="list.Add(element.ToString())", span="168-168"];
m2_101 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, object)", file="JsonDeserializer.cs", label="list.Add(null)", span="174-174"];
m2_103 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, object)", file="JsonDeserializer.cs", label="list.Add(item)", span="179-179"];
m2_105 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, object)", file="JsonDeserializer.cs", label="return list;", span="188-188"];
m2_90 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, object)", file="JsonDeserializer.cs", label="var itemType = listType.GetGenericArguments()[0]", span="149-149"];
m2_93 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, object)", file="JsonDeserializer.cs", label="itemType.IsPrimitive", span="155-155"];
m2_94 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, object)", file="JsonDeserializer.cs", label="var item = ConvertValue(itemType, element)", span="157-157"];
m2_102 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, object)", file="JsonDeserializer.cs", label="var item = ConvertValue(itemType, element)", span="178-178"];
m2_97 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, object)", file="JsonDeserializer.cs", label="element == null", span="162-162"];
m2_100 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, object)", file="JsonDeserializer.cs", label="element == null", span="172-172"];
m2_96 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, object)", file="JsonDeserializer.cs", label="itemType == typeof(string)", span="160-160"];
m2_106 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, object)", file="JsonDeserializer.cs", label="Exit RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, object)", span="145-145"];
m2_179 [cluster="System.TimeSpan.TryParse(string, out System.TimeSpan)", file="JsonDeserializer.cs", label="Entry System.TimeSpan.TryParse(string, out System.TimeSpan)", span="0-0"];
m2_176 [cluster="decimal.Parse(string, System.Globalization.NumberStyles, System.IFormatProvider)", file="JsonDeserializer.cs", label="Entry decimal.Parse(string, System.Globalization.NumberStyles, System.IFormatProvider)", span="0-0"];
m2_20 [cluster="object.GetType()", file="JsonDeserializer.cs", label="Entry object.GetType()", span="0-0"];
m2_169 [cluster="string.IsNullOrEmpty(string)", file="JsonDeserializer.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m2_177 [cluster="decimal.Parse(string, System.IFormatProvider)", file="JsonDeserializer.cs", label="Entry decimal.Parse(string, System.IFormatProvider)", span="0-0"];
m2_171 [cluster="System.Type.FindEnumValue(string, System.Globalization.CultureInfo)", file="JsonDeserializer.cs", label="Entry System.Type.FindEnumValue(string, System.Globalization.CultureInfo)", span="99-99"];
m2_181 [cluster="RestSharp.Deserializers.JsonDeserializer.CreateAndMap(System.Type, object)", file="JsonDeserializer.cs", label="Entry RestSharp.Deserializers.JsonDeserializer.CreateAndMap(System.Type, object)", span="331-331"];
m2_183 [cluster="RestSharp.Deserializers.JsonDeserializer.CreateAndMap(System.Type, object)", file="JsonDeserializer.cs", label="var instance = Activator.CreateInstance(type)", span="333-333"];
m2_184 [cluster="RestSharp.Deserializers.JsonDeserializer.CreateAndMap(System.Type, object)", file="JsonDeserializer.cs", label="Map(instance, (IDictionary<string, object>)element)", span="335-335"];
m2_185 [cluster="RestSharp.Deserializers.JsonDeserializer.CreateAndMap(System.Type, object)", file="JsonDeserializer.cs", label="return instance;", span="337-337"];
m2_186 [cluster="RestSharp.Deserializers.JsonDeserializer.CreateAndMap(System.Type, object)", file="JsonDeserializer.cs", label="Exit RestSharp.Deserializers.JsonDeserializer.CreateAndMap(System.Type, object)", span="331-331"];
m2_84 [cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", file="JsonDeserializer.cs", label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0"];
m2_172 [cluster="System.Uri.Uri(string, System.UriKind)", file="JsonDeserializer.cs", label="Entry System.Uri.Uri(string, System.UriKind)", span="0-0"];
m2_83 [cluster="System.Type.GetGenericArguments()", file="JsonDeserializer.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m2_22 [cluster="RestSharp.Deserializers.JsonDeserializer.FindRoot(string)", file="JsonDeserializer.cs", label="Entry RestSharp.Deserializers.JsonDeserializer.FindRoot(string)", span="59-59"];
m2_27 [cluster="RestSharp.Deserializers.JsonDeserializer.FindRoot(string)", file="JsonDeserializer.cs", label="var data = (IDictionary<string, object>)SimpleJson.DeserializeObject(content)", span="61-61"];
m2_28 [cluster="RestSharp.Deserializers.JsonDeserializer.FindRoot(string)", file="JsonDeserializer.cs", label="RootElement.HasValue() && data.ContainsKey(RootElement)", span="63-63"];
m2_29 [cluster="RestSharp.Deserializers.JsonDeserializer.FindRoot(string)", file="JsonDeserializer.cs", label="return data[RootElement];", span="65-65"];
m2_30 [cluster="RestSharp.Deserializers.JsonDeserializer.FindRoot(string)", file="JsonDeserializer.cs", label="return data;", span="68-68"];
m2_31 [cluster="RestSharp.Deserializers.JsonDeserializer.FindRoot(string)", file="JsonDeserializer.cs", label="Exit RestSharp.Deserializers.JsonDeserializer.FindRoot(string)", span="59-59"];
m2_107 [cluster="System.Type.GetInterfaces()", file="JsonDeserializer.cs", label="Entry System.Type.GetInterfaces()", span="0-0"];
m2_175 [cluster="string.Contains(string)", file="JsonDeserializer.cs", label="Entry string.Contains(string)", span="0-0"];
m2_86 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file="JsonDeserializer.cs", label="Entry RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", span="191-191"];
m2_115 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file="JsonDeserializer.cs", label="var stringValue = Convert.ToString(value, Culture)", span="193-193"];
m2_116 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file="JsonDeserializer.cs", label="type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>)", span="196-196"];
m2_119 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file="JsonDeserializer.cs", label="type = type.GetGenericArguments()[0]", span="202-202"];
m2_120 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file="JsonDeserializer.cs", label="type == typeof(Object) && value != null", span="205-205"];
m2_121 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file="JsonDeserializer.cs", label="type = value.GetType()", span="207-207"];
m2_122 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file="JsonDeserializer.cs", label="type.IsPrimitive", span="210-210"];
m2_123 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file="JsonDeserializer.cs", label="return value.ChangeType(type, Culture);", span="212-212"];
m2_124 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file="JsonDeserializer.cs", label="type.IsEnum", span="215-215"];
m2_125 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file="JsonDeserializer.cs", label="return type.FindEnumValue(stringValue, Culture);", span="217-217"];
m2_126 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file="JsonDeserializer.cs", label="type == typeof(Uri)", span="220-220"];
m2_128 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file="JsonDeserializer.cs", label="type == typeof(string)", span="225-225"];
m2_130 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file="JsonDeserializer.cs", label="type == typeof(DateTime)\r\n#if !PocketPC\r\n                || type == typeof(DateTimeOffset)", span="230-232"];
m2_131 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file="JsonDeserializer.cs", label="DateTime dt", span="236-236"];
m2_135 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file="JsonDeserializer.cs", label="type == typeof(DateTime)", span="251-251"];
m2_137 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file="JsonDeserializer.cs", label="type == typeof(DateTimeOffset)", span="256-256"];
m2_139 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file="JsonDeserializer.cs", label="type == typeof(Decimal)", span="262-262"];
m2_140 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file="JsonDeserializer.cs", label="value is double", span="264-264"];
m2_141 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file="JsonDeserializer.cs", label="return (decimal)((double)value);", span="265-265"];
m2_145 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file="JsonDeserializer.cs", label="type == typeof(Guid)", span="272-272"];
m2_147 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file="JsonDeserializer.cs", label="type == typeof(TimeSpan)", span="276-276"];
m2_148 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file="JsonDeserializer.cs", label="TimeSpan timeSpan", span="278-278"];
m2_152 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file="JsonDeserializer.cs", label="type.IsGenericType", span="287-287"];
m2_153 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file="JsonDeserializer.cs", label="var genericTypeDef = type.GetGenericTypeDefinition()", span="289-289"];
m2_155 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file="JsonDeserializer.cs", label="return BuildList(type, value);", span="293-293"];
m2_157 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file="JsonDeserializer.cs", label="var keyType = type.GetGenericArguments()[0]", span="298-298"];
m2_159 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file="JsonDeserializer.cs", label="return BuildDictionary(type, value);", span="303-303"];
m2_160 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file="JsonDeserializer.cs", label="return CreateAndMap(type, value);", span="309-309"];
m2_161 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file="JsonDeserializer.cs", label="type.IsSubclassOfRawGeneric(typeof(List<>))", span="312-312"];
m2_162 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file="JsonDeserializer.cs", label="return BuildList(type, value);", span="315-315"];
m2_163 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file="JsonDeserializer.cs", label="type == typeof(JsonObject)", span="317-317"];
m2_164 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file="JsonDeserializer.cs", label="return BuildDictionary(typeof(Dictionary<string, object>), value);", span="320-320"];
m2_165 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file="JsonDeserializer.cs", label="return CreateAndMap(type, value);", span="325-325"];
m2_117 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file="JsonDeserializer.cs", label="String.IsNullOrEmpty(stringValue)", span="199-199"];
m2_127 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file="JsonDeserializer.cs", label="return new Uri(stringValue, UriKind.RelativeOrAbsolute);", span="222-222"];
m2_129 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file="JsonDeserializer.cs", label="return stringValue;", span="227-227"];
m2_133 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", color=green, community=0, file="JsonDeserializer.cs", label="dt = DateTime.ParseExact(stringValue, DateFormat, Culture,\r\n                        DateTimeStyles.AssumeUniversal | DateTimeStyles.AdjustToUniversal)", prediction=1, span="240-241"];
m2_134 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file="JsonDeserializer.cs", label="dt = stringValue.ParseJsonDate(Culture)", span="245-245"];
m2_142 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file="JsonDeserializer.cs", label="stringValue.Contains(''e'')", span="267-267"];
m2_143 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file="JsonDeserializer.cs", label="return Decimal.Parse(stringValue, NumberStyles.Float, Culture);", span="268-268"];
m2_144 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file="JsonDeserializer.cs", label="return Decimal.Parse(stringValue, Culture);", span="270-270"];
m2_146 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file="JsonDeserializer.cs", label="return string.IsNullOrEmpty(stringValue) ? Guid.Empty : new Guid(stringValue);", span="274-274"];
m2_149 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file="JsonDeserializer.cs", label="TimeSpan.TryParse(stringValue, out timeSpan)", span="279-279"];
m2_151 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file="JsonDeserializer.cs", label="return XmlConvert.ToTimeSpan(stringValue);", span="285-285"];
m2_118 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file="JsonDeserializer.cs", label="return null;", span="200-200"];
m2_132 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file="JsonDeserializer.cs", label="DateFormat.HasValue()", span="238-238"];
m2_136 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file="JsonDeserializer.cs", label="return dt;", span="253-253"];
m2_138 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file="JsonDeserializer.cs", label="return (DateTimeOffset)dt;", span="258-258"];
m2_166 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file="JsonDeserializer.cs", label="return null;", span="328-328"];
m2_150 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file="JsonDeserializer.cs", label="return timeSpan;", span="281-281"];
m2_154 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file="JsonDeserializer.cs", label="genericTypeDef == typeof(List<>)", span="291-291"];
m2_156 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file="JsonDeserializer.cs", label="genericTypeDef == typeof(Dictionary<,>)", span="296-296"];
m2_158 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file="JsonDeserializer.cs", label="keyType == typeof(string)", span="301-301"];
m2_167 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file="JsonDeserializer.cs", label="Exit RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", span="191-191"];
m2_24 [cluster="RestSharp.SimpleJson.DeserializeObject(string)", file="JsonDeserializer.cs", label="Entry RestSharp.SimpleJson.DeserializeObject(string)", span="542-542"];
m2_63 [cluster="string.GetNameVariants(System.Globalization.CultureInfo)", file="JsonDeserializer.cs", label="Entry string.GetNameVariants(System.Globalization.CultureInfo)", span="407-407"];
m2_110 [cluster="System.Collections.IList.Add(object)", file="JsonDeserializer.cs", label="Entry System.Collections.IList.Add(object)", span="0-0"];
m2_111 [cluster="object.ToString()", file="JsonDeserializer.cs", label="Entry object.ToString()", span="0-0"];
m2_173 [cluster="System.DateTime.ParseExact(string, string, System.IFormatProvider, System.Globalization.DateTimeStyles)", file="JsonDeserializer.cs", label="Entry System.DateTime.ParseExact(string, string, System.IFormatProvider, System.Globalization.DateTimeStyles)", span="0-0"];
m2_87 [cluster="System.Collections.IDictionary.Add(object, object)", file="JsonDeserializer.cs", label="Entry System.Collections.IDictionary.Add(object, object)", span="0-0"];
m2_32 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="JsonDeserializer.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m2_85 [cluster="System.Type.GetGenericTypeDefinition()", file="JsonDeserializer.cs", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
m2_26 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, System.Collections.Generic.IDictionary<string, object>)", file="JsonDeserializer.cs", label="Entry RestSharp.Deserializers.JsonDeserializer.Map(object, System.Collections.Generic.IDictionary<string, object>)", span="71-71"];
m2_45 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, System.Collections.Generic.IDictionary<string, object>)", file="JsonDeserializer.cs", label="object value = null", span="94-94"];
m2_33 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, System.Collections.Generic.IDictionary<string, object>)", file="JsonDeserializer.cs", label="var objType = target.GetType()", span="73-73"];
m2_44 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, System.Collections.Generic.IDictionary<string, object>)", file="JsonDeserializer.cs", label="var currentData = data", span="93-93"];
m2_55 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, System.Collections.Generic.IDictionary<string, object>)", file="JsonDeserializer.cs", label="prop.SetValue(target, ConvertValue(type, value), null)", span="110-110"];
m2_56 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, System.Collections.Generic.IDictionary<string, object>)", file="JsonDeserializer.cs", label="return target;", span="113-113"];
m2_34 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, System.Collections.Generic.IDictionary<string, object>)", file="JsonDeserializer.cs", label="var props = objType.GetProperties().Where(p => p.CanWrite).ToList()", span="74-74"];
m2_48 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, System.Collections.Generic.IDictionary<string, object>)", file="JsonDeserializer.cs", label="var actualName = parts[i].GetNameVariants(Culture).FirstOrDefault(currentData.ContainsKey)", span="98-98"];
m2_51 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, System.Collections.Generic.IDictionary<string, object>)", file="JsonDeserializer.cs", label="value = currentData[actualName]", span="104-104"];
m2_52 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, System.Collections.Generic.IDictionary<string, object>)", file="JsonDeserializer.cs", label="currentData = (IDictionary<string, object>)currentData[actualName]", span="106-106"];
m2_35 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, System.Collections.Generic.IDictionary<string, object>)", file="JsonDeserializer.cs", label=props, span="76-76"];
m2_36 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, System.Collections.Generic.IDictionary<string, object>)", file="JsonDeserializer.cs", label="var type = prop.PropertyType", span="78-78"];
m2_37 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, System.Collections.Generic.IDictionary<string, object>)", file="JsonDeserializer.cs", label="var attributes = prop.GetCustomAttributes(typeof(DeserializeAsAttribute), false)", span="79-79"];
m2_42 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, System.Collections.Generic.IDictionary<string, object>)", file="JsonDeserializer.cs", label="name = prop.Name", span="89-89"];
m2_38 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, System.Collections.Generic.IDictionary<string, object>)", file="JsonDeserializer.cs", label="string name", span="80-80"];
m2_39 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, System.Collections.Generic.IDictionary<string, object>)", file="JsonDeserializer.cs", label="attributes.Length > 0", span="82-82"];
m2_40 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, System.Collections.Generic.IDictionary<string, object>)", file="JsonDeserializer.cs", label="var attribute = (DeserializeAsAttribute)attributes[0]", span="84-84"];
m2_43 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, System.Collections.Generic.IDictionary<string, object>)", file="JsonDeserializer.cs", label="var parts = name.Split('.')", span="92-92"];
m2_41 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, System.Collections.Generic.IDictionary<string, object>)", file="JsonDeserializer.cs", label="name = attribute.Name", span="85-85"];
m2_47 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, System.Collections.Generic.IDictionary<string, object>)", file="JsonDeserializer.cs", label="i < parts.Length", span="96-96"];
m2_50 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, System.Collections.Generic.IDictionary<string, object>)", file="JsonDeserializer.cs", label="i == parts.Length - 1", span="103-103"];
m2_54 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, System.Collections.Generic.IDictionary<string, object>)", file="JsonDeserializer.cs", label="value != null", span="109-109"];
m2_49 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, System.Collections.Generic.IDictionary<string, object>)", file="JsonDeserializer.cs", label="actualName == null", span="100-100"];
m2_46 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, System.Collections.Generic.IDictionary<string, object>)", file="JsonDeserializer.cs", label="var i = 0", span="96-96"];
m2_53 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, System.Collections.Generic.IDictionary<string, object>)", file="JsonDeserializer.cs", label="++i", span="96-96"];
m2_57 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, System.Collections.Generic.IDictionary<string, object>)", file="JsonDeserializer.cs", label="Exit RestSharp.Deserializers.JsonDeserializer.Map(object, System.Collections.Generic.IDictionary<string, object>)", span="71-71"];
m2_21 [cluster="string.HasValue()", file="JsonDeserializer.cs", label="Entry string.HasValue()", span="98-98"];
m2_3 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file="JsonDeserializer.cs", label="Entry RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.IRestResponse)", span="26-26"];
m2_4 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file="JsonDeserializer.cs", label="var target = Activator.CreateInstance<T>()", span="28-28"];
m2_8 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file="JsonDeserializer.cs", label="var root = FindRoot(response.Content)", span="36-36"];
m2_10 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file="JsonDeserializer.cs", label="var data = SimpleJson.DeserializeObject(response.Content)", span="41-41"];
m2_13 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file="JsonDeserializer.cs", label="var root = FindRoot(response.Content)", span="47-47"];
m2_15 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file="JsonDeserializer.cs", label="var root = FindRoot(response.Content)", span="52-52"];
m2_5 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file="JsonDeserializer.cs", label="target is IList", span="30-30"];
m2_6 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file="JsonDeserializer.cs", label="var objType = target.GetType()", span="32-32"];
m2_12 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file="JsonDeserializer.cs", label="target is IDictionary", span="45-45"];
m2_14 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file="JsonDeserializer.cs", label="target = (T)BuildDictionary(target.GetType(), root)", span="48-48"];
m2_16 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file="JsonDeserializer.cs", label="target = (T)Map(target, (IDictionary<string, object>)root)", span="53-53"];
m2_9 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file="JsonDeserializer.cs", label="target = (T)BuildList(objType, root)", span="37-37"];
m2_11 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file="JsonDeserializer.cs", label="target = (T)BuildList(objType, data)", span="42-42"];
m2_7 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file="JsonDeserializer.cs", label="RootElement.HasValue()", span="34-34"];
m2_17 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file="JsonDeserializer.cs", label="return target;", span="56-56"];
m2_18 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file="JsonDeserializer.cs", label="Exit RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.IRestResponse)", span="26-26"];
m2_0 [cluster="RestSharp.Deserializers.JsonDeserializer.JsonDeserializer()", file="JsonDeserializer.cs", label="Entry RestSharp.Deserializers.JsonDeserializer.JsonDeserializer()", span="21-21"];
m2_1 [cluster="RestSharp.Deserializers.JsonDeserializer.JsonDeserializer()", file="JsonDeserializer.cs", label="Culture = CultureInfo.InvariantCulture", span="23-23"];
m2_2 [cluster="RestSharp.Deserializers.JsonDeserializer.JsonDeserializer()", file="JsonDeserializer.cs", label="Exit RestSharp.Deserializers.JsonDeserializer.JsonDeserializer()", span="21-21"];
m3_405 [cluster="System.TimeSpan.TimeSpan(int, int, int, int, int)", file="JsonTests.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int, int, int)", span="0-0"];
m3_429 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_DateTime()", span="620-620"];
m3_430 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime()", file="JsonTests.cs", label="var payload = this.GetPayLoad<DateTimeTestStructure>(''datetimes.txt'')", span="622-622"];
m3_431 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime()", file="JsonTests.cs", label="Assert.AreEqual(\r\n                new DateTime(2011, 6, 30, 8, 15, 46, 929, DateTimeKind.Utc),\r\n                payload.DateTime)", span="624-626"];
m3_432 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_DateTime()", span="620-620"];
m3_341 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", span="767-767"];
m3_523 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="int i = 0", span="789-789"];
m3_510 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="var doc = new JsonObject()", span="769-769"];
m3_511 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="doc[''name''] = ''John Sheehan''", span="771-771"];
m3_512 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="doc[''start_date''] = new DateTime(2009, 9, 25, 0, 6, 1, DateTimeKind.Utc)", span="772-772"];
m3_513 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="doc[''age''] = 28", span="773-773"];
m3_514 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="doc[''percent''] = 99.9999m", span="774-774"];
m3_515 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="doc[''big_number''] = long.MaxValue", span="775-775"];
m3_516 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="doc[''is_cool''] = false", span="776-776"];
m3_517 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="doc[''ignore''] = ''dummy''", span="777-777"];
m3_518 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="doc[''read_only''] = ''dummy''", span="778-778"];
m3_519 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="doc[''url''] = ''http://example.com''", span="779-779"];
m3_520 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="doc[''url_path''] = ''/foo/bar''", span="780-780"];
m3_521 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="doc[''best_friend''] = new JsonObject\r\n            {\r\n                {''name'', ''The Fonz''},\r\n                {''since'', \\n1952}\r\n            }", span="781-785"];
m3_527 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="doc[''friends''] = friendsArray", span="798-798"];
m3_529 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="doc[''foes''] = foesArray", span="806-806"];
m3_530 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="return doc.ToString();", span="808-808"];
m3_522 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="var friendsArray = new JsonArray()", span="787-787"];
m3_525 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="friendsArray.Add(new JsonObject\r\n                {\r\n                    {''name'', ''Friend'' + i},\r\n                    {''\\nsince'', DateTime.Now.Year - i}\r\n                })", span="791-795"];
m3_524 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="i < 10", span="789-789"];
m3_526 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="i++", span="789-789"];
m3_528 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="var foesArray = new JsonObject\r\n            {\r\n                {''dict1'', new JsonObject {{''nickname'', ''Foe 1''}}},\r\n                {''\\ndict2'', new JsonObject {{''nickname'', ''Foe 2''}}}\r\n            }", span="800-804"];
m3_531 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", span="767-767"];
m3_319 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", span="473-473"];
m3_320 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="var doc = this.CreateJsonWithUnderscores()", span="475-475"];
m3_321 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="var d = new JsonDeserializer()", span="476-476"];
m3_322 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="var response = new RestResponse { Content = doc }", span="477-477"];
m3_323 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="var p = d.Deserialize<PersonForJson>(response)", span="478-478"];
m3_324 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(''John Sheehan'', p.Name)", span="480-480"];
m3_325 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(new DateTime(2009, 9, 25, 0, 6, 1), p.StartDate)", span="481-481"];
m3_326 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(28, p.Age)", span="482-482"];
m3_327 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(long.MaxValue, p.BigNumber)", span="483-483"];
m3_328 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(99.9999m, p.Percent)", span="484-484"];
m3_329 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(false, p.IsCool)", span="485-485"];
m3_330 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="486-486"];
m3_331 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="487-487"];
m3_332 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.NotNull(p.Friends)", span="488-488"];
m3_333 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(10, p.Friends.Count)", span="489-489"];
m3_334 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.NotNull(p.BestFriend)", span="490-490"];
m3_335 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(''The Fonz'', p.BestFriend.Name)", span="491-491"];
m3_336 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(1952, p.BestFriend.Since)", span="492-492"];
m3_337 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.IsNotEmpty(p.Foes)", span="493-493"];
m3_338 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(''Foe 1'', p.Foes[''dict1''].Nickname)", span="494-494"];
m3_339 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(''Foe 2'', p.Foes[''dict2''].Nickname)", span="495-495"];
m3_340 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", span="473-473"];
m3_447 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeLocal()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeLocal()", span="659-659"];
m3_448 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeLocal()", file="JsonTests.cs", label="var payload = this.GetPayLoad<Iso8601DateTimeTestStructure>(''iso8601datetimes.txt'')", span="661-661"];
m3_449 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeLocal()", file="JsonTests.cs", label="Assert.AreEqual(\r\n                new DateTime(2012, 7, 19, 10, 23, 25, DateTimeKind.Utc),\r\n                payload.DateTimeLocal)", span="663-665"];
m3_450 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeLocal()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeLocal()", span="659-659"];
m3_455 [cluster="System.DateTime.ToUniversalTime()", file="JsonTests.cs", label="Entry System.DateTime.ToUniversalTime()", span="0-0"];
m3_424 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_JsonNet_Dates()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_JsonNet_Dates()", span="610-610"];
m3_425 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_JsonNet_Dates()", file="JsonTests.cs", label="var person = this.GetPayLoad<PersonForJson>(''person.json.txt'')", span="612-612"];
m3_426 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_JsonNet_Dates()", file="JsonTests.cs", label="Assert.AreEqual(\r\n                new DateTime(2011, 6, 30, 8, 15, 46, 929, DateTimeKind.Utc),\r\n                person.StartDate)", span="614-616"];
m3_427 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_JsonNet_Dates()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_JsonNet_Dates()", span="610-610"];
m3_342 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root_Alternative_Culture()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root_Alternative_Culture()", span="499-499"];
m3_343 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root_Alternative_Culture()", file="JsonTests.cs", label="new CultureChange(ALTERNATIVE_CULTURE)", span="501-501"];
m3_344 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root_Alternative_Culture()", file="JsonTests.cs", label="this.Can_Deserialize_Names_With_Underscores_With_Default_Root()", span="503-503"];
m3_345 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root_Alternative_Culture()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root_Alternative_Culture()", span="499-499"];
m3_132 [cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="JsonTests.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0"];
m3_479 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", span="956-956"];
m3_608 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", file="JsonTests.cs", label="var doc = new JsonObject()", span="958-958"];
m3_609 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", file="JsonTests.cs", label="doc[''Thing1''] = ''Thing1''", span="960-960"];
m3_610 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", file="JsonTests.cs", label="doc[''Thing2''] = ''Thing2''", span="961-961"];
m3_611 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", file="JsonTests.cs", label="doc[''ThingRed''] = ''ThingRed''", span="962-962"];
m3_612 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", file="JsonTests.cs", label="doc[''ThingBlue''] = ''ThingBlue''", span="963-963"];
m3_613 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", file="JsonTests.cs", label="return doc.ToString();", span="965-965"];
m3_614 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", span="956-956"];
m3_407 [cluster="System.TimeSpan.TimeSpan(int, int, int, int)", file="JsonTests.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int, int)", span="0-0"];
m3_404 [cluster="System.TimeSpan.TimeSpan(long)", file="JsonTests.cs", label="Entry System.TimeSpan.TimeSpan(long)", span="0-0"];
m3_14 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", span="48-48"];
m3_15 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", file="JsonTests.cs", label="string content = ''{\''one\'':\''oneOneOne\'', \''two\'':\''twoTwoTwo\'', \''three\'':3}''", span="50-50"];
m3_16 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", file="JsonTests.cs", label="var json = new JsonDeserializer()", span="51-51"];
m3_17 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", file="JsonTests.cs", label="var output = json.Deserialize<SimpleStruct>(new RestResponse { Content = content })", span="52-52"];
m3_18 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", file="JsonTests.cs", label="Assert.NotNull(output)", span="54-54"];
m3_19 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", file="JsonTests.cs", label="Assert.AreEqual(''oneOneOne'', output.One)", span="55-55"];
m3_20 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", file="JsonTests.cs", label="Assert.AreEqual(''twoTwoTwo'', output.Two)", span="56-56"];
m3_21 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", file="JsonTests.cs", label="Assert.AreEqual(3, output.Three)", span="57-57"];
m3_22 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", span="48-48"];
m3_104 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", span="185-185"];
m3_105 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file="JsonTests.cs", label="Guid id1 = new Guid(''b0e5c11f-e944-478c-aadd-753b956d0c8c'')", span="187-187"];
m3_106 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file="JsonTests.cs", label="Guid id2 = new Guid(''809399fa-21c4-4dca-8dcd-34cb697fbca0'')", span="188-188"];
m3_108 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file="JsonTests.cs", label="data[''Ids''] = new JsonArray { id1, id2 }", span="191-191"];
m3_113 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file="JsonTests.cs", label="Assert.AreEqual(id1, p.Ids[0])", span="198-198"];
m3_107 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file="JsonTests.cs", label="var data = new JsonObject()", span="189-189"];
m3_114 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file="JsonTests.cs", label="Assert.AreEqual(id2, p.Ids[1])", span="199-199"];
m3_109 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file="JsonTests.cs", label="var d = new JsonDeserializer()", span="193-193"];
m3_110 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file="JsonTests.cs", label="var response = new RestResponse { Content = data.ToString() }", span="194-194"];
m3_111 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file="JsonTests.cs", label="var p = d.Deserialize<GuidList>(response)", span="195-195"];
m3_112 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file="JsonTests.cs", label="Assert.AreEqual(2, p.Ids.Count)", span="197-197"];
m3_115 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", span="185-185"];
m3_31 [cluster="System.IO.File.ReadAllText(string)", file="JsonTests.cs", label="Entry System.IO.File.ReadAllText(string)", span="0-0"];
m3_39 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", span="83-83"];
m3_40 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", file="JsonTests.cs", label="var doc = File.ReadAllText(Path.Combine(''SampleData'', ''jsonlists.txt''))", span="85-85"];
m3_41 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", file="JsonTests.cs", label="var json = new JsonDeserializer()", span="86-86"];
m3_42 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", file="JsonTests.cs", label="var output = json.Deserialize<JsonLists>(new RestResponse { Content = doc })", span="87-87"];
m3_43 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", file="JsonTests.cs", label="Assert.IsNotEmpty(output.Names)", span="89-89"];
m3_44 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", file="JsonTests.cs", label="Assert.IsNotEmpty(output.Numbers)", span="90-90"];
m3_45 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", span="83-83"];
m3_368 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root_Alternative_Culture()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root_Alternative_Culture()", span="534-534"];
m3_369 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root_Alternative_Culture()", file="JsonTests.cs", label="new CultureChange(ALTERNATIVE_CULTURE)", span="536-536"];
m3_370 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root_Alternative_Culture()", file="JsonTests.cs", label="this.Can_Deserialize_Names_With_Dashes_With_Default_Root()", span="538-538"];
m3_371 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root_Alternative_Culture()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root_Alternative_Culture()", span="534-534"];
m3_133 [cluster="System.DateTime.AddSeconds(double)", file="JsonTests.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m3_185 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Json_Using_DeserializeAs_Attribute()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Json_Using_DeserializeAs_Attribute()", span="284-284"];
m3_186 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Json_Using_DeserializeAs_Attribute()", file="JsonTests.cs", label="string content = ''{\''sid\'':\''asdasdasdasdasdasdasda\'',\''friendlyName\'':\''VeryNiceName\'',\''oddballPropertyName\'':\''blahblah\''}''", span="286-286"];
m3_187 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Json_Using_DeserializeAs_Attribute()", file="JsonTests.cs", label="var json = new JsonDeserializer { RootElement = ''users'' }", span="287-287"];
m3_188 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Json_Using_DeserializeAs_Attribute()", file="JsonTests.cs", label="var output = json.Deserialize<Oddball>(new RestResponse { Content = content })", span="288-288"];
m3_189 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Json_Using_DeserializeAs_Attribute()", file="JsonTests.cs", label="Assert.NotNull(output)", span="290-290"];
m3_190 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Json_Using_DeserializeAs_Attribute()", file="JsonTests.cs", label="Assert.AreEqual(''blahblah'', output.GoodPropertyName)", span="291-291"];
m3_191 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Json_Using_DeserializeAs_Attribute()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Json_Using_DeserializeAs_Attribute()", span="284-284"];
m3_406 [cluster="System.TimeSpan.TimeSpan(int, int, int)", file="JsonTests.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int)", span="0-0"];
m3_433 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", span="630-630"];
m3_434 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", file="JsonTests.cs", label="var payload = this.GetPayLoad<DateTimeTestStructure>(''datetimes.txt'')", span="632-632"];
m3_435 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", file="JsonTests.cs", label="Assert.NotNull(payload.NullableDateTimeWithValue)", span="634-634"];
m3_436 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", file="JsonTests.cs", label="Assert.AreEqual(\r\n                new DateTime(2011, 6, 30, 8, 15, 46, 929, DateTimeKind.Utc),\r\n                payload.NullableDateTimeWithValue.Value)", span="635-637"];
m3_437 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", span="630-630"];
m3_149 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonTests.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m3_247 [cluster="RestSharp.Tests.JsonTests.Deserialization_Of_Undefined_Int_Value_Returns_Enum_Default()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Deserialization_Of_Undefined_Int_Value_Returns_Enum_Default()", span="368-368"];
m3_248 [cluster="RestSharp.Tests.JsonTests.Deserialization_Of_Undefined_Int_Value_Returns_Enum_Default()", file="JsonTests.cs", label="string data = @''{ ''''Integer'''' : 1024 }''", span="370-370"];
m3_249 [cluster="RestSharp.Tests.JsonTests.Deserialization_Of_Undefined_Int_Value_Returns_Enum_Default()", file="JsonTests.cs", label="var response = new RestResponse { Content = data }", span="371-371"];
m3_250 [cluster="RestSharp.Tests.JsonTests.Deserialization_Of_Undefined_Int_Value_Returns_Enum_Default()", file="JsonTests.cs", label="var json = new JsonDeserializer()", span="372-372"];
m3_251 [cluster="RestSharp.Tests.JsonTests.Deserialization_Of_Undefined_Int_Value_Returns_Enum_Default()", file="JsonTests.cs", label="var result = json.Deserialize<JsonEnumsTestStructure>(response)", span="373-373"];
m3_252 [cluster="RestSharp.Tests.JsonTests.Deserialization_Of_Undefined_Int_Value_Returns_Enum_Default()", file="JsonTests.cs", label="Assert.AreEqual(Disposition.Friendly, result.Integer)", span="375-375"];
m3_253 [cluster="RestSharp.Tests.JsonTests.Deserialization_Of_Undefined_Int_Value_Returns_Enum_Default()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Deserialization_Of_Undefined_Int_Value_Returns_Enum_Default()", span="368-368"];
m3_490 [cluster="RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", span="968-968"];
m3_615 [cluster="RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", file="JsonTests.cs", label="var doc = new JsonObject()", span="970-970"];
m3_616 [cluster="RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", file="JsonTests.cs", label="doc[''Thing1''] = new JsonArray { ''Value1'', ''Value2'' }", span="972-972"];
m3_617 [cluster="RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", file="JsonTests.cs", label="doc[''Thing2''] = ''Thing2''", span="973-973"];
m3_618 [cluster="RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", file="JsonTests.cs", label="doc[''ThingRed''] = new JsonObject { { ''Name'', ''ThingRed'' }, { ''Color'', ''Red'' } }", span="974-974"];
m3_619 [cluster="RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", file="JsonTests.cs", label="doc[''ThingBlue''] = new JsonObject { { ''Name'', ''ThingBlue'' }, { ''Color'', ''Blue'' } }", span="975-975"];
m3_620 [cluster="RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", file="JsonTests.cs", label="return doc.ToString();", span="977-977"];
m3_621 [cluster="RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", span="968-968"];
m3_304 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.CreateJson()", span="875-875"];
m3_563 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="var doc = new JsonObject()", span="877-877"];
m3_564 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''Name''] = ''John Sheehan''", span="879-879"];
m3_565 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''StartDate''] = new DateTime(2009, 9, 25, 0, 6, 1, DateTimeKind.Utc)", span="880-880"];
m3_566 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''Age''] = 28", span="881-881"];
m3_567 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''Percent''] = 99.9999m", span="882-882"];
m3_568 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''BigNumber''] = long.MaxValue", span="883-883"];
m3_569 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''IsCool''] = false", span="884-884"];
m3_570 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''Ignore''] = ''dummy''", span="885-885"];
m3_571 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''ReadOnly''] = ''dummy''", span="886-886"];
m3_572 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''Url''] = ''http://example.com''", span="887-887"];
m3_573 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''UrlPath''] = ''/foo/bar''", span="888-888"];
m3_574 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''Order''] = ''third''", span="889-889"];
m3_575 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''Disposition''] = ''so_so''", span="890-890"];
m3_576 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''Guid''] = new Guid(GUID_STRING).ToString()", span="891-891"];
m3_577 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''EmptyGuid''] = ''''", span="892-892"];
m3_578 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''BestFriend''] = new JsonObject\r\n            {\r\n                {''Name'', ''The Fonz''},\r\n                {''Since'', \\n1952}\r\n            }", span="893-897"];
m3_584 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''Friends''] = friendsArray", span="910-910"];
m3_586 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''Foes''] = foesArray", span="918-918"];
m3_587 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="return doc.ToString();", span="920-920"];
m3_579 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="var friendsArray = new JsonArray()", span="899-899"];
m3_580 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="int i = 0", span="901-901"];
m3_582 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="friendsArray.Add(new JsonObject\r\n                {\r\n                    {''Name'', ''Friend'' + i},\r\n                    {''\\nSince'', DateTime.Now.Year - i}\r\n                })", span="903-907"];
m3_581 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="i < 10", span="901-901"];
m3_583 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="i++", span="901-901"];
m3_585 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="var foesArray = new JsonObject\r\n            {\r\n                {''dict1'', new JsonObject {{''Nickname'', ''Foe 1''}}},\r\n                {''\\ndict2'', new JsonObject {{''Nickname'', ''Foe 2''}}}\r\n            }", span="912-916"];
m3_588 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.CreateJson()", span="875-875"];
m3_9 [cluster="RestSharp.RestResponse.RestResponse()", file="JsonTests.cs", label="Entry RestSharp.RestResponse.RestResponse()", span="173-173"];
m3_11 [cluster="decimal.Parse(string, System.Globalization.NumberStyles, System.IFormatProvider)", file="JsonTests.cs", label="Entry decimal.Parse(string, System.Globalization.NumberStyles, System.IFormatProvider)", span="0-0"];
m3_30 [cluster="System.IO.Path.Combine(string, string)", file="JsonTests.cs", label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m3_46 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", span="94-94"];
m3_47 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", file="JsonTests.cs", label="string content = ''{\''users\'':[\''johnsheehan\'',\''jagregory\'',\''drusellers\'',\''structuremap\'']}''", span="96-96"];
m3_48 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", file="JsonTests.cs", label="var json = new JsonDeserializer { RootElement = ''users'' }", span="97-97"];
m3_49 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", file="JsonTests.cs", label="var output = json.Deserialize<List<string>>(new RestResponse { Content = content })", span="98-98"];
m3_50 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", file="JsonTests.cs", label="Assert.IsNotEmpty(output)", span="100-100"];
m3_51 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", span="94-94"];
m3_438 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Null()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Null()", span="641-641"];
m3_439 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Null()", file="JsonTests.cs", label="var payload = this.GetPayLoad<DateTimeTestStructure>(''datetimes.txt'')", span="643-643"];
m3_440 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Null()", file="JsonTests.cs", label="Assert.Null(payload.NullableDateTimeWithNull)", span="645-645"];
m3_441 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Null()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Null()", span="641-641"];
m3_311 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", span="460-460"];
m3_312 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", file="JsonTests.cs", label="var data = File.ReadAllText(Path.Combine(''SampleData'', ''underscore_prefix.txt''))", span="462-462"];
m3_313 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", file="JsonTests.cs", label="var response = new RestResponse { Content = data }", span="463-463"];
m3_314 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", file="JsonTests.cs", label="var json = new JsonDeserializer { RootElement = ''User'' }", span="464-464"];
m3_315 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", file="JsonTests.cs", label="var output = json.Deserialize<SOUser>(response)", span="466-466"];
m3_316 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", file="JsonTests.cs", label="Assert.AreEqual(''John Sheehan'', output.DisplayName)", span="468-468"];
m3_317 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", file="JsonTests.cs", label="Assert.AreEqual(1786, output.Id)", span="469-469"];
m3_318 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", span="460-460"];
m3_372 [cluster="RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", span="543-543"];
m3_373 [cluster="RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", file="JsonTests.cs", label="var doc = this.CreateJson()", span="545-545"];
m3_374 [cluster="RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", file="JsonTests.cs", label="var d = new JsonDeserializer()", span="546-546"];
m3_375 [cluster="RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", file="JsonTests.cs", label="var response = new RestResponse { Content = doc }", span="547-547"];
m3_376 [cluster="RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", file="JsonTests.cs", label="var p = d.Deserialize<PersonForJson>(response)", span="548-548"];
m3_377 [cluster="RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", file="JsonTests.cs", label="Assert.Null(p.IgnoreProxy)", span="550-550"];
m3_378 [cluster="RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", span="543-543"];
m3_134 [cluster="System.DateTime.ToString(string)", file="JsonTests.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m3_442 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTimeOffset()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_DateTimeOffset()", span="649-649"];
m3_443 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTimeOffset()", file="JsonTests.cs", label="var payload = this.GetPayLoad<DateTimeTestStructure>(''datetimes.txt'')", span="651-651"];
m3_444 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTimeOffset()", file="JsonTests.cs", label="Assert.AreEqual(\r\n                new DateTime(2011, 6, 30, 8, 15, 46, 929, DateTimeKind.Utc).ToString(''yyyy-MM-dd HH:mm:ss.fff''),\r\n                \\npayload.DateTimeOffset.ToString(''yyyy-MM-dd HH:mm:ss.fff''))", span="653-655"];
m3_445 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTimeOffset()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_DateTimeOffset()", span="649-649"];
m3_153 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", span="241-241"];
m3_154 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", file="JsonTests.cs", label="var doc = this.CreateJsonWithNullValues()", span="243-243"];
m3_155 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", file="JsonTests.cs", label="var json = new JsonDeserializer()", span="244-244"];
m3_156 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", file="JsonTests.cs", label="var output = json.Deserialize<NullableValues>(new RestResponse { Content = doc })", span="245-245"];
m3_157 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Assert.Null(output.Id)", span="247-247"];
m3_158 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Assert.Null(output.StartDate)", span="248-248"];
m3_159 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Assert.Null(output.UniqueId)", span="249-249"];
m3_160 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", span="241-241"];
m3_386 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", span="565-565"];
m3_387 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file="JsonTests.cs", label="var payload = this.GetPayLoad<TimeSpanTestStructure>(''timespans.txt'')", span="567-567"];
m3_388 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file="JsonTests.cs", label="Assert.AreEqual(new TimeSpan(468006), payload.Tick)", span="569-569"];
m3_389 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file="JsonTests.cs", label="Assert.AreEqual(new TimeSpan(0, 0, 0, 0, 125), payload.Millisecond)", span="570-570"];
m3_390 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file="JsonTests.cs", label="Assert.AreEqual(new TimeSpan(0, 0, 8), payload.Second)", span="571-571"];
m3_391 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file="JsonTests.cs", label="Assert.AreEqual(new TimeSpan(0, 55, 2), payload.Minute)", span="572-572"];
m3_392 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file="JsonTests.cs", label="Assert.AreEqual(new TimeSpan(21, 30, 7), payload.Hour)", span="573-573"];
m3_393 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file="JsonTests.cs", label="Assert.Null(payload.NullableWithoutValue)", span="574-574"];
m3_394 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file="JsonTests.cs", label="Assert.NotNull(payload.NullableWithValue)", span="575-575"];
m3_395 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file="JsonTests.cs", label="Assert.AreEqual(new TimeSpan(21, 30, 7), payload.NullableWithValue.Value)", span="576-576"];
m3_396 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file="JsonTests.cs", label="Assert.AreEqual(new TimeSpan(0, 0, 10), payload.IsoSecond)", span="577-577"];
m3_397 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file="JsonTests.cs", label="Assert.AreEqual(new TimeSpan(0, 3, 23), payload.IsoMinute)", span="578-578"];
m3_398 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file="JsonTests.cs", label="Assert.AreEqual(new TimeSpan(5, 4, 9), payload.IsoHour)", span="579-579"];
m3_399 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file="JsonTests.cs", label="Assert.AreEqual(new TimeSpan(1, 19, 27, 13), payload.IsoDay)", span="580-580"];
m3_400 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file="JsonTests.cs", label="Assert.AreEqual(new TimeSpan(64, 3, 14, 19), payload.IsoMonth)", span="582-582"];
m3_401 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file="JsonTests.cs", label="Assert.AreEqual(new TimeSpan(365, 9, 27, 48), payload.IsoYear)", span="584-584"];
m3_402 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", span="565-565"];
m3_219 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", span="332-332"];
m3_220 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file="JsonTests.cs", label="var data = File.ReadAllText(Path.Combine(''SampleData'', ''jsonenums.txt''))", span="334-334"];
m3_221 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file="JsonTests.cs", label="var response = new RestResponse { Content = data }", span="335-335"];
m3_222 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file="JsonTests.cs", label="var json = new JsonDeserializer()", span="336-336"];
m3_223 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file="JsonTests.cs", label="var output = json.Deserialize<JsonEnumsTestStructure>(response)", span="337-337"];
m3_224 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file="JsonTests.cs", label="Assert.AreEqual(Disposition.Friendly, output.Upper)", span="339-339"];
m3_225 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file="JsonTests.cs", label="Assert.AreEqual(Disposition.Friendly, output.Lower)", span="340-340"];
m3_226 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file="JsonTests.cs", label="Assert.AreEqual(Disposition.SoSo, output.CamelCased)", span="341-341"];
m3_227 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file="JsonTests.cs", label="Assert.AreEqual(Disposition.SoSo, output.Underscores)", span="342-342"];
m3_228 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file="JsonTests.cs", label="Assert.AreEqual(Disposition.SoSo, output.LowerUnderscores)", span="343-343"];
m3_229 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file="JsonTests.cs", label="Assert.AreEqual(Disposition.SoSo, output.Dashes)", span="344-344"];
m3_230 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file="JsonTests.cs", label="Assert.AreEqual(Disposition.SoSo, output.LowerDashes)", span="345-345"];
m3_231 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file="JsonTests.cs", label="Assert.AreEqual(Disposition.SoSo, output.Integer)", span="346-346"];
m3_232 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", span="332-332"];
m3_589 [cluster="System.Guid.ToString()", file="JsonTests.cs", label="Entry System.Guid.ToString()", span="0-0"];
m3_204 [cluster="RestSharp.Tests.SimpleJson.SerializeObject(object)", file="JsonTests.cs", label="Entry RestSharp.Tests.SimpleJson.SerializeObject(object)", span="610-610"];
m3_451 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeZulu()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeZulu()", span="669-669"];
m3_452 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeZulu()", file="JsonTests.cs", label="var payload = this.GetPayLoad<Iso8601DateTimeTestStructure>(''iso8601datetimes.txt'')", span="671-671"];
m3_453 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeZulu()", file="JsonTests.cs", label="Assert.AreEqual(\r\n                new DateTime(2012, 7, 19, 10, 23, 25, 544, DateTimeKind.Utc),\r\n                payload.DateTimeUtc.ToUniversalTime())", span="673-675"];
m3_454 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeZulu()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeZulu()", span="669-669"];
m3_10 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file="JsonTests.cs", label="Entry RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.IRestResponse)", span="26-26"];
m3_428 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, int, System.DateTimeKind)", file="JsonTests.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m3_90 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", span="161-161"];
m3_91 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", file="JsonTests.cs", label="var doc = File.ReadAllText(Path.Combine(''SampleData'', ''jsondictionary_KeysType.txt''))", span="163-163"];
m3_92 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", file="JsonTests.cs", label="var json = new JsonDeserializer()", span="164-164"];
m3_93 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", file="JsonTests.cs", label="var output = json.Deserialize<Dictionary<int, object>>(new RestResponse { Content = doc })", span="165-165"];
m3_94 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", file="JsonTests.cs", label="Assert.AreEqual(output.Keys.Count, 2)", span="167-167"];
m3_95 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", file="JsonTests.cs", label="var firstKeysVal = output.FirstOrDefault().Value", span="169-169"];
m3_96 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", file="JsonTests.cs", label="Assert.IsInstanceOf<IDictionary>(firstKeysVal)", span="171-171"];
m3_97 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", span="161-161"];
m3_23 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Select_Tokens()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Select_Tokens()", span="61-61"];
m3_24 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Select_Tokens()", file="JsonTests.cs", label="var data = File.ReadAllText(Path.Combine(''SampleData'', ''jsonarray.txt''))", span="63-63"];
m3_25 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Select_Tokens()", file="JsonTests.cs", label="var response = new RestResponse { Content = data }", span="64-64"];
m3_26 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Select_Tokens()", file="JsonTests.cs", label="var json = new JsonDeserializer()", span="65-65"];
m3_27 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Select_Tokens()", file="JsonTests.cs", label="var output = json.Deserialize<StatusComplexList>(response)", span="66-66"];
m3_28 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Select_Tokens()", file="JsonTests.cs", label="Assert.AreEqual(4, output.Count)", span="68-68"];
m3_29 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Select_Tokens()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Select_Tokens()", span="61-61"];
m3_498 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Object_Type_Property_With_Primitive_Vale()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Object_Type_Property_With_Primitive_Vale()", span="747-747"];
m3_499 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Object_Type_Property_With_Primitive_Vale()", file="JsonTests.cs", label="var payload = this.GetPayLoad<ObjectProperties>(''objectproperty.txt'')", span="749-749"];
m3_500 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Object_Type_Property_With_Primitive_Vale()", file="JsonTests.cs", label="Assert.AreEqual(42L, payload.ObjectProperty)", span="751-751"];
m3_501 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Object_Type_Property_With_Primitive_Vale()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Object_Type_Property_With_Primitive_Vale()", span="747-747"];
m3_480 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", span="722-722"];
m3_481 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", file="JsonTests.cs", label="var doc = this.CreateDynamicJsonStringDictionary()", span="724-724"];
m3_482 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", file="JsonTests.cs", label="var d = new JsonDeserializer()", span="725-725"];
m3_483 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", file="JsonTests.cs", label="var response = new RestResponse { Content = doc }", span="726-726"];
m3_484 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", file="JsonTests.cs", label="var bd = d.Deserialize<Dictionary<string, string>>(response)", span="727-727"];
m3_485 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", file="JsonTests.cs", label="Assert.AreEqual(''[\''Value1\'',\''Value2\'']'', bd[''Thing1''])", span="729-729"];
m3_486 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", file="JsonTests.cs", label="Assert.AreEqual(''Thing2'', bd[''Thing2''])", span="730-730"];
m3_487 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", file="JsonTests.cs", label="Assert.AreEqual(''{\''Name\'':\''ThingRed\'',\''Color\'':\''Red\''}'', bd[''ThingRed''])", span="731-731"];
m3_488 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", file="JsonTests.cs", label="Assert.AreEqual(''{\''Name\'':\''ThingBlue\'',\''Color\'':\''Blue\''}'', bd[''ThingBlue''])", span="732-732"];
m3_489 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", span="722-722"];
m3_408 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", span="588-588"];
m3_409 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", file="JsonTests.cs", label="var doc = this.CreateIsoDateJson()", span="590-590"];
m3_410 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", file="JsonTests.cs", label="var d = new JsonDeserializer()", span="591-591"];
m3_411 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", file="JsonTests.cs", label="var response = new RestResponse { Content = doc }", span="592-592"];
m3_412 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", file="JsonTests.cs", label="var bd = d.Deserialize<Birthdate>(response)", span="593-593"];
m3_413 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", file="JsonTests.cs", label="Assert.AreEqual(new DateTime(1910, 9, 25, 9, 30, 25, DateTimeKind.Utc), bd.Value)", span="595-595"];
m3_414 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", span="588-588"];
m3_446 [cluster="System.DateTimeOffset.ToString(string)", file="JsonTests.cs", label="Entry System.DateTimeOffset.ToString(string)", span="0-0"];
m3_367 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.CreateJsonWithDashes()", span="811-811"];
m3_533 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="var doc = new JsonObject()", span="813-813"];
m3_534 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="doc[''name''] = ''John Sheehan''", span="815-815"];
m3_535 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="doc[''start-date''] = new DateTime(2009, 9, 25, 0, 6, 1, DateTimeKind.Utc)", span="816-816"];
m3_536 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="doc[''age''] = 28", span="817-817"];
m3_537 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="doc[''percent''] = 99.9999m", span="818-818"];
m3_538 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="doc[''big-number''] = long.MaxValue", span="819-819"];
m3_539 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="doc[''is-cool''] = false", span="820-820"];
m3_540 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="doc[''ignore''] = ''dummy''", span="821-821"];
m3_541 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="doc[''read-only''] = ''dummy''", span="822-822"];
m3_542 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="doc[''url''] = ''http://example.com''", span="823-823"];
m3_543 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="doc[''url-path''] = ''/foo/bar''", span="824-824"];
m3_544 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="doc[''best-friend''] = new JsonObject\r\n            {\r\n                {''name'', ''The Fonz''},\r\n                {''since'', \\n1952}\r\n            }", span="826-830"];
m3_550 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="doc[''friends''] = friendsArray", span="843-843"];
m3_552 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="doc[''foes''] = foesArray", span="851-851"];
m3_553 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="return doc.ToString();", span="853-853"];
m3_545 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="var friendsArray = new JsonArray()", span="832-832"];
m3_546 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="int i = 0", span="834-834"];
m3_548 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="friendsArray.Add(new JsonObject\r\n                {\r\n                    {''name'', ''Friend'' + i},\r\n                    {''\\nsince'', DateTime.Now.Year - i}\r\n                })", span="836-840"];
m3_547 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="i < 10", span="834-834"];
m3_549 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="i++", span="834-834"];
m3_551 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="var foesArray = new JsonObject\r\n            {\r\n                {''dict1'', new JsonObject {{''nickname'', ''Foe 1''}}},\r\n                {''\\ndict2'', new JsonObject {{''nickname'', ''Foe 2''}}}\r\n            }", span="845-849"];
m3_554 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.CreateJsonWithDashes()", span="811-811"];
m3_278 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", span="421-421"];
m3_279 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="var doc = this.CreateJson()", span="423-423"];
m3_280 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="var d = new JsonDeserializer()", span="424-424"];
m3_281 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="var response = new RestResponse { Content = doc }", span="425-425"];
m3_282 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="var p = d.Deserialize<PersonForJson>(response)", span="426-426"];
m3_283 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(''John Sheehan'', p.Name)", span="428-428"];
m3_284 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(new DateTime(2009, 9, 25, 0, 6, 1, DateTimeKind.Utc), p.StartDate)", span="429-429"];
m3_285 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(28, p.Age)", span="430-430"];
m3_286 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(long.MaxValue, p.BigNumber)", span="431-431"];
m3_287 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(99.9999m, p.Percent)", span="432-432"];
m3_288 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(false, p.IsCool)", span="433-433"];
m3_289 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="434-434"];
m3_290 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="435-435"];
m3_291 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(Guid.Empty, p.EmptyGuid)", span="436-436"];
m3_292 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(new Guid(GUID_STRING), p.Guid)", span="437-437"];
m3_293 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(Order.Third, p.Order)", span="438-438"];
m3_294 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(Disposition.SoSo, p.Disposition)", span="439-439"];
m3_295 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.NotNull(p.Friends)", span="440-440"];
m3_296 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(10, p.Friends.Count)", span="441-441"];
m3_297 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.NotNull(p.BestFriend)", span="442-442"];
m3_298 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(''The Fonz'', p.BestFriend.Name)", span="443-443"];
m3_299 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(1952, p.BestFriend.Since)", span="444-444"];
m3_300 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.IsNotEmpty(p.Foes)", span="445-445"];
m3_301 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(''Foe 1'', p.Foes[''dict1''].Nickname)", span="446-446"];
m3_302 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(''Foe 2'', p.Foes[''dict2''].Nickname)", span="447-447"];
m3_303 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", span="421-421"];
m3_171 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithEmptyValues()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.CreateJsonWithEmptyValues()", span="934-934"];
m3_596 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithEmptyValues()", file="JsonTests.cs", label="var doc = new JsonObject()", span="936-936"];
m3_597 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithEmptyValues()", file="JsonTests.cs", label="doc[''Id''] = ''''", span="938-938"];
m3_598 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithEmptyValues()", file="JsonTests.cs", label="doc[''StartDate''] = ''''", span="939-939"];
m3_599 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithEmptyValues()", file="JsonTests.cs", label="doc[''UniqueId''] = ''''", span="940-940"];
m3_600 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithEmptyValues()", file="JsonTests.cs", label="return doc.ToString();", span="942-942"];
m3_601 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithEmptyValues()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.CreateJsonWithEmptyValues()", span="934-934"];
m3_192 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", span="295-295"];
m3_193 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file="JsonTests.cs", label="var culture = CultureInfo.InvariantCulture", span="297-297"];
m3_194 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file="JsonTests.cs", label="string format = ''dd yyyy MMM, hh:mm ss tt''", span="298-298"];
m3_196 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file="JsonTests.cs", label="var formatted = new { StartDate = date.ToString(format, culture) }", span="300-300"];
m3_199 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file="JsonTests.cs", label="var json = new JsonDeserializer { DateFormat = format, Culture = culture }", span="303-303"];
m3_195 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file="JsonTests.cs", label="var date = new DateTime(2010, 2, 8, 11, 11, 11)", span="299-299"];
m3_197 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file="JsonTests.cs", label="var data = SimpleJson.SerializeObject(formatted)", span="301-301"];
m3_200 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file="JsonTests.cs", label="var output = json.Deserialize<PersonForJson>(response)", span="304-304"];
m3_201 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file="JsonTests.cs", label="Assert.AreEqual(date, output.StartDate)", span="306-306"];
m3_198 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file="JsonTests.cs", label="var response = new RestResponse { Content = data }", span="302-302"];
m3_202 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", span="295-295"];
m3_0 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", span="36-36"];
m3_1 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", file="JsonTests.cs", label="string content = ''{ \''Value\'': 4.8e-04 }''", span="38-38"];
m3_2 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", file="JsonTests.cs", label="var json = new JsonDeserializer()", span="39-39"];
m3_3 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", file="JsonTests.cs", label="var output = json.Deserialize<DecimalNumber>(new RestResponse { Content = content })", span="40-40"];
m3_4 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", file="JsonTests.cs", label="var expected = Decimal.Parse(''4.8e-04'', NumberStyles.Float, CultureInfo.InvariantCulture)", span="41-41"];
m3_5 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", file="JsonTests.cs", label="Assert.NotNull(output)", span="43-43"];
m3_6 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", file="JsonTests.cs", label="Assert.AreEqual(expected, output.Value)", span="44-44"];
m3_7 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", span="36-36"];
m3_117 [cluster="RestSharp.Tests.JsonObject.JsonObject()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonObject.JsonObject()", span="134-134"];
m3_52 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", span="104-104"];
m3_53 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", file="JsonTests.cs", label="string content = ''{\''users\'':[\''johnsheehan\'',\''jagregory\'',null,\''drusellers\'',\''structuremap\'']}''", span="106-106"];
m3_54 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", file="JsonTests.cs", label="var json = new JsonDeserializer { RootElement = ''users'' }", span="107-107"];
m3_55 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", file="JsonTests.cs", label="var output = json.Deserialize<List<string>>(new RestResponse { Content = content })", span="108-108"];
m3_56 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", file="JsonTests.cs", label="Assert.IsNotEmpty(output)", span="110-110"];
m3_57 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", file="JsonTests.cs", label="Assert.AreEqual(null, output[2])", span="111-111"];
m3_58 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", file="JsonTests.cs", label="Assert.AreEqual(5, output.Count)", span="112-112"];
m3_59 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", span="104-104"];
m3_233 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", span="350-350"];
m3_234 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file="JsonTests.cs", label="var data = File.ReadAllText(Path.Combine(''SampleData'', ''jsonenumtypes.txt''))", span="352-352"];
m3_235 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file="JsonTests.cs", label="var response = new RestResponse { Content = data }", span="353-353"];
m3_236 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file="JsonTests.cs", label="var json = new JsonDeserializer()", span="354-354"];
m3_237 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file="JsonTests.cs", label="var output = json.Deserialize<JsonEnumTypesTestStructure>(response)", span="355-355"];
m3_238 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file="JsonTests.cs", label="Assert.AreEqual(ByteEnum.EnumMin, output.ByteEnumType)", span="357-357"];
m3_239 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file="JsonTests.cs", label="Assert.AreEqual(SByteEnum.EnumMin, output.SByteEnumType)", span="358-358"];
m3_240 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file="JsonTests.cs", label="Assert.AreEqual(ShortEnum.EnumMin, output.ShortEnumType)", span="359-359"];
m3_241 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file="JsonTests.cs", label="Assert.AreEqual(UShortEnum.EnumMin, output.UShortEnumType)", span="360-360"];
m3_242 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file="JsonTests.cs", label="Assert.AreEqual(IntEnum.EnumMin, output.IntEnumType)", span="361-361"];
m3_243 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file="JsonTests.cs", label="Assert.AreEqual(UIntEnum.EnumMin, output.UIntEnumType)", span="362-362"];
m3_244 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file="JsonTests.cs", label="Assert.AreEqual(LongEnum.EnumMin, output.LongEnumType)", span="363-363"];
m3_245 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file="JsonTests.cs", label="Assert.AreEqual(ULongEnum.EnumMin, output.ULongEnumType)", span="364-364"];
m3_246 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", span="350-350"];
m3_119 [cluster="RestSharp.Tests.JsonObject.ToString()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonObject.ToString()", span="342-342"];
m3_306 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root_Alternative_Culture()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root_Alternative_Culture()", span="451-451"];
m3_307 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root_Alternative_Culture()", file="JsonTests.cs", label="new CultureChange(ALTERNATIVE_CULTURE)", span="453-453"];
m3_308 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root_Alternative_Culture()", file="JsonTests.cs", label="this.Can_Deserialize_With_Default_Root()", span="455-455"];
m3_309 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root_Alternative_Culture()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root_Alternative_Culture()", span="451-451"];
m3_120 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", span="203-203"];
m3_121 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file="JsonTests.cs", label="DateTime item1 = new DateTime(2010, 2, 8, 11, 11, 11)", span="205-205"];
m3_122 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file="JsonTests.cs", label="DateTime item2 = item1.AddSeconds(12345)", span="206-206"];
m3_124 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file="JsonTests.cs", label="data[''Items''] = new JsonArray { item1.ToString(''u''), item2.ToString(''u'') }", span="209-209"];
m3_129 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file="JsonTests.cs", label="Assert.AreEqual(item1, p.Items[0])", span="216-216"];
m3_123 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file="JsonTests.cs", label="var data = new JsonObject()", span="207-207"];
m3_130 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file="JsonTests.cs", label="Assert.AreEqual(item2, p.Items[1])", span="217-217"];
m3_125 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file="JsonTests.cs", label="var d = new JsonDeserializer()", span="211-211"];
m3_126 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file="JsonTests.cs", label="var response = new RestResponse { Content = data.ToString() }", span="212-212"];
m3_127 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file="JsonTests.cs", label="var p = d.Deserialize<GenericWithList<DateTime>>(response)", span="213-213"];
m3_128 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file="JsonTests.cs", label="Assert.AreEqual(2, p.Items.Count)", span="215-215"];
m3_131 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", span="203-203"];
m3_60 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Item_Without_Array()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Item_Without_Array()", span="116-116"];
m3_61 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Item_Without_Array()", file="JsonTests.cs", label="string content = ''{\''users\'':\''johnsheehan\''}''", span="118-118"];
m3_62 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Item_Without_Array()", file="JsonTests.cs", label="var json = new JsonDeserializer { RootElement = ''users'' }", span="119-119"];
m3_63 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Item_Without_Array()", file="JsonTests.cs", label="var output = json.Deserialize<List<string>>(new RestResponse { Content = content })", span="120-120"];
m3_64 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Item_Without_Array()", file="JsonTests.cs", label="Assert.True(output.SequenceEqual(new[] { ''johnsheehan'' }))", span="122-122"];
m3_65 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Item_Without_Array()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Item_Without_Array()", span="116-116"];
m3_270 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", span="407-407"];
m3_271 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", file="JsonTests.cs", label="var doc = new JsonObject()", span="409-409"];
m3_272 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", file="JsonTests.cs", label="doc[''IsCool''] = 1", span="411-411"];
m3_274 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", file="JsonTests.cs", label="var response = new RestResponse { Content = doc.ToString() }", span="414-414"];
m3_273 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", file="JsonTests.cs", label="var d = new JsonDeserializer()", span="413-413"];
m3_275 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", file="JsonTests.cs", label="var p = d.Deserialize<PersonForJson>(response)", span="415-415"];
m3_276 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", file="JsonTests.cs", label="Assert.True(p.IsCool)", span="417-417"];
m3_277 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", span="407-407"];
m3_74 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", span="136-136"];
m3_75 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", file="JsonTests.cs", label="var doc = File.ReadAllText(Path.Combine(''SampleData'', ''sojson.txt''))", span="138-138"];
m3_76 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", file="JsonTests.cs", label="var json = new JsonDeserializer { RootElement = ''User'' }", span="139-139"];
m3_77 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", file="JsonTests.cs", label="var output = json.Deserialize<SOUser>(new RestResponse { Content = doc })", span="141-141"];
m3_78 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", file="JsonTests.cs", label="Assert.AreEqual(''John Sheehan'', output.DisplayName)", span="143-143"];
m3_79 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", span="136-136"];
m3_184 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", span="945-945"];
m3_602 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", file="JsonTests.cs", label="var doc = new JsonObject()", span="947-947"];
m3_603 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", file="JsonTests.cs", label="doc[''Id''] = 123", span="949-949"];
m3_604 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", file="JsonTests.cs", label="doc[''StartDate''] = new DateTime(2010, 2, 21, 9, 35, 00, DateTimeKind.Utc)", span="950-950"];
m3_605 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", file="JsonTests.cs", label="doc[''UniqueId''] = new Guid(GUID_STRING).ToString()", span="951-951"];
m3_606 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", file="JsonTests.cs", label="return doc.ToString();", span="953-953"];
m3_607 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", span="945-945"];
m3_415 [cluster="RestSharp.Tests.JsonTests.CreateIsoDateJson()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.CreateIsoDateJson()", span="856-856"];
m3_555 [cluster="RestSharp.Tests.JsonTests.CreateIsoDateJson()", file="JsonTests.cs", label="var bd = new Birthdate\r\n            {\r\n                Value = new DateTime(1910, 9, 25, 9, 30, 25, DateTimeKind.Utc)\r\n            }", span="858-861"];
m3_556 [cluster="RestSharp.Tests.JsonTests.CreateIsoDateJson()", file="JsonTests.cs", label="return SimpleJson.SerializeObject(bd);", span="863-863"];
m3_557 [cluster="RestSharp.Tests.JsonTests.CreateIsoDateJson()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.CreateIsoDateJson()", span="856-856"];
m3_88 [cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="JsonTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0"];
m3_423 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateJson()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.CreateUnixDateJson()", span="866-866"];
m3_559 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateJson()", file="JsonTests.cs", label="var doc = new JsonObject()", span="868-868"];
m3_560 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateJson()", file="JsonTests.cs", label="doc[''Value''] = 1309421746", span="870-870"];
m3_561 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateJson()", file="JsonTests.cs", label="return doc.ToString();", span="872-872"];
m3_562 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateJson()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.CreateUnixDateJson()", span="866-866"];
m3_460 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", span="689-689"];
m3_461 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", file="JsonTests.cs", label="var payload = this.GetPayLoad<DateTimeTestStructure>(''datetimes.txt'')", span="691-691"];
m3_462 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", file="JsonTests.cs", label="Assert.NotNull(payload.NullableDateTimeOffsetWithValue)", span="693-693"];
m3_463 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", file="JsonTests.cs", label="Assert.AreEqual(\r\n                new DateTime(2011, 6, 30, 8, 15, 46, 929, DateTimeKind.Utc).ToString(''yyyy-MM-dd HH:mm:ss.fff''),\r\n                \\npayload.NullableDateTimeOffsetWithValue.Value.ToString(''yyyy-MM-dd HH:mm:ss.fff''))", span="694-696"];
m3_464 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", span="689-689"];
m3_205 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", span="310-310"];
m3_206 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", file="JsonTests.cs", label="var data = File.ReadAllText(Path.Combine(''SampleData'', ''jsonarray.txt''))", span="312-312"];
m3_207 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", file="JsonTests.cs", label="var response = new RestResponse { Content = data }", span="313-313"];
m3_208 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", file="JsonTests.cs", label="var json = new JsonDeserializer()", span="314-314"];
m3_209 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", file="JsonTests.cs", label="var output = json.Deserialize<List<status>>(response)", span="315-315"];
m3_210 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", file="JsonTests.cs", label="Assert.AreEqual(4, output.Count)", span="317-317"];
m3_211 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", span="310-310"];
m3_456 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeWithOffset()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeWithOffset()", span="679-679"];
m3_457 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeWithOffset()", file="JsonTests.cs", label="var payload = this.GetPayLoad<Iso8601DateTimeTestStructure>(''iso8601datetimes.txt'')", span="681-681"];
m3_458 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeWithOffset()", file="JsonTests.cs", label="Assert.AreEqual(\r\n                new DateTime(2012, 7, 19, 10, 23, 25, 544, DateTimeKind.Utc),\r\n                payload.DateTimeWithOffset.ToUniversalTime())", span="683-685"];
m3_459 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeWithOffset()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeWithOffset()", span="679-679"];
m3_172 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", span="265-265"];
m3_173 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file="JsonTests.cs", label="var doc = this.CreateJsonWithoutEmptyValues()", span="267-267"];
m3_174 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file="JsonTests.cs", label="var json = new JsonDeserializer()", span="268-268"];
m3_175 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file="JsonTests.cs", label="var output = json.Deserialize<NullableValues>(new RestResponse { Content = doc })", span="269-269"];
m3_176 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Assert.NotNull(output.Id)", span="271-271"];
m3_177 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Assert.NotNull(output.StartDate)", span="272-272"];
m3_178 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Assert.NotNull(output.UniqueId)", span="273-273"];
m3_179 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Assert.AreEqual(123, output.Id)", span="275-275"];
m3_180 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Assert.NotNull(output.StartDate)", span="276-276"];
m3_181 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Assert.AreEqual(\r\n                new DateTime(2010, 2, 21, 9, 35, 00, DateTimeKind.Utc),\r\n                output.StartDate.Value)", span="277-279"];
m3_182 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Assert.AreEqual(new Guid(GUID_STRING), output.UniqueId)", span="280-280"];
m3_183 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", span="265-265"];
m3_416 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", span="599-599"];
m3_417 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", file="JsonTests.cs", label="var doc = this.CreateUnixDateJson()", span="601-601"];
m3_418 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", file="JsonTests.cs", label="var d = new JsonDeserializer()", span="602-602"];
m3_419 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", file="JsonTests.cs", label="var response = new RestResponse { Content = doc }", span="603-603"];
m3_420 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", file="JsonTests.cs", label="var bd = d.Deserialize<Birthdate>(response)", span="604-604"];
m3_421 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", file="JsonTests.cs", label="Assert.AreEqual(new DateTime(2011, 6, 30, 8, 15, 46, DateTimeKind.Utc), bd.Value)", span="606-606"];
m3_422 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", span="599-599"];
m3_68 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Toplevel_Item_Without_Array()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Toplevel_Item_Without_Array()", span="126-126"];
m3_69 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Toplevel_Item_Without_Array()", file="JsonTests.cs", label="string content = ''\''johnsheehan\''''", span="128-128"];
m3_70 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Toplevel_Item_Without_Array()", file="JsonTests.cs", label="var json = new JsonDeserializer()", span="129-129"];
m3_71 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Toplevel_Item_Without_Array()", file="JsonTests.cs", label="var output = json.Deserialize<List<string>>(new RestResponse { Content = content })", span="130-130"];
m3_72 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Toplevel_Item_Without_Array()", file="JsonTests.cs", label="Assert.True(output.SequenceEqual(new[] { ''johnsheehan'' }))", span="132-132"];
m3_73 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Toplevel_Item_Without_Array()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Toplevel_Item_Without_Array()", span="126-126"];
m3_379 [cluster="RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", span="554-554"];
m3_380 [cluster="RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="JsonTests.cs", label="var doc = this.CreateJson()", span="556-556"];
m3_381 [cluster="RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="JsonTests.cs", label="var response = new RestResponse { Content = doc }", span="557-557"];
m3_382 [cluster="RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="JsonTests.cs", label="var d = new JsonDeserializer()", span="558-558"];
m3_383 [cluster="RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="JsonTests.cs", label="var p = d.Deserialize<PersonForJson>(response)", span="559-559"];
m3_384 [cluster="RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="JsonTests.cs", label="Assert.Null(p.ReadOnlyProxy)", span="561-561"];
m3_385 [cluster="RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", span="554-554"];
m3_161 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", span="923-923"];
m3_590 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", file="JsonTests.cs", label="var doc = new JsonObject()", span="925-925"];
m3_591 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", file="JsonTests.cs", label="doc[''Id''] = null", span="927-927"];
m3_592 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", file="JsonTests.cs", label="doc[''StartDate''] = null", span="928-928"];
m3_593 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", file="JsonTests.cs", label="doc[''UniqueId''] = null", span="929-929"];
m3_594 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", file="JsonTests.cs", label="return doc.ToString();", span="931-931"];
m3_595 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", span="923-923"];
m3_212 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_Inherited_List()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_Inherited_List()", span="321-321"];
m3_213 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_Inherited_List()", file="JsonTests.cs", label="var data = File.ReadAllText(Path.Combine(''SampleData'', ''jsonarray.txt''))", span="323-323"];
m3_214 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_Inherited_List()", file="JsonTests.cs", label="var response = new RestResponse { Content = data }", span="324-324"];
m3_215 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_Inherited_List()", file="JsonTests.cs", label="var json = new JsonDeserializer()", span="325-325"];
m3_216 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_Inherited_List()", file="JsonTests.cs", label="var output = json.Deserialize<StatusList>(response)", span="326-326"];
m3_217 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_Inherited_List()", file="JsonTests.cs", label="Assert.AreEqual(4, output.Count)", span="328-328"];
m3_218 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_Inherited_List()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_Inherited_List()", span="321-321"];
m3_116 [cluster="System.Guid.Guid(string)", file="JsonTests.cs", label="Entry System.Guid.Guid(string)", span="0-0"];
m3_502 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", span="755-755"];
m3_503 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", file="JsonTests.cs", label="var doc = File.ReadAllText(Path.Combine(''SampleData'', ''jsondictionary.txt''))", span="757-757"];
m3_504 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", file="JsonTests.cs", label="var json = new JsonDeserializer { RootElement = ''response'' }", span="758-758"];
m3_505 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", file="JsonTests.cs", label="var output = json.Deserialize<EmployeeTracker>(new RestResponse { Content = doc })", span="760-760"];
m3_506 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", file="JsonTests.cs", label="Assert.IsNotEmpty(output.EmployeesMail)", span="762-762"];
m3_507 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", file="JsonTests.cs", label="Assert.IsNotEmpty(output.EmployeesTime)", span="763-763"];
m3_508 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", file="JsonTests.cs", label="Assert.IsNotEmpty(output.EmployeesPay)", span="764-764"];
m3_509 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", span="755-755"];
m3_203 [cluster="System.DateTime.ToString(string, System.IFormatProvider)", file="JsonTests.cs", label="Entry System.DateTime.ToString(string, System.IFormatProvider)", span="0-0"];
m3_150 [cluster="System.DateTime.ToString()", file="JsonTests.cs", label="Entry System.DateTime.ToString()", span="0-0"];
m3_558 [cluster="RestSharp.Tests.Birthdate.Birthdate()", file="JsonTests.cs", label="Entry RestSharp.Tests.Birthdate.Birthdate()", span="148-148"];
m3_532 [cluster="System.Collections.Generic.List<T>.Add(T)", file="JsonTests.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m3_118 [cluster="RestSharp.Tests.JsonArray.JsonArray()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonArray.JsonArray()", span="91-91"];
m3_491 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Decimal_With_Four_Zeros_After_Floating_Point()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Decimal_With_Four_Zeros_After_Floating_Point()", span="736-736"];
m3_492 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Decimal_With_Four_Zeros_After_Floating_Point()", file="JsonTests.cs", label="string json = ''{\''Value\'':0.00005557}''", span="738-738"];
m3_493 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Decimal_With_Four_Zeros_After_Floating_Point()", file="JsonTests.cs", label="var response = new RestResponse { Content = json }", span="739-739"];
m3_494 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Decimal_With_Four_Zeros_After_Floating_Point()", file="JsonTests.cs", label="var d = new JsonDeserializer()", span="740-740"];
m3_495 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Decimal_With_Four_Zeros_After_Floating_Point()", file="JsonTests.cs", label="var result = d.Deserialize<DecimalNumber>(response)", span="741-741"];
m3_496 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Decimal_With_Four_Zeros_After_Floating_Point()", file="JsonTests.cs", label="Assert.AreEqual(result.Value, .00005557m)", span="743-743"];
m3_497 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Decimal_With_Four_Zeros_After_Floating_Point()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Decimal_With_Four_Zeros_After_Floating_Point()", span="736-736"];
m3_346 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", span="508-508"];
m3_347 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="var doc = this.CreateJsonWithDashes()", span="510-510"];
m3_348 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="var d = new JsonDeserializer()", span="511-511"];
m3_349 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="var response = new RestResponse { Content = doc }", span="512-512"];
m3_350 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="var p = d.Deserialize<PersonForJson>(response)", span="513-513"];
m3_351 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(''John Sheehan'', p.Name)", span="515-515"];
m3_352 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(28, p.Age)", span="517-517"];
m3_353 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(long.MaxValue, p.BigNumber)", span="518-518"];
m3_354 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(99.9999m, p.Percent)", span="519-519"];
m3_355 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(false, p.IsCool)", span="520-520"];
m3_356 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="521-521"];
m3_357 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="522-522"];
m3_358 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.NotNull(p.Friends)", span="523-523"];
m3_359 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(10, p.Friends.Count)", span="524-524"];
m3_360 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.NotNull(p.BestFriend)", span="525-525"];
m3_361 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(''The Fonz'', p.BestFriend.Name)", span="526-526"];
m3_362 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(1952, p.BestFriend.Since)", span="527-527"];
m3_363 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.IsNotEmpty(p.Foes)", span="528-528"];
m3_364 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(''Foe 1'', p.Foes[''dict1''].Nickname)", span="529-529"];
m3_365 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(''Foe 2'', p.Foes[''dict2''].Nickname)", span="530-530"];
m3_366 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", span="508-508"];
m3_32 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", span="72-72"];
m3_33 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", file="JsonTests.cs", label="var doc = File.ReadAllText(Path.Combine(''SampleData'', ''4sq.txt''))", span="74-74"];
m3_34 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", file="JsonTests.cs", label="var json = new JsonDeserializer { RootElement = ''response'' }", span="75-75"];
m3_35 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", file="JsonTests.cs", label="var output = json.Deserialize<VenuesResponse>(new RestResponse { Content = doc })", span="77-77"];
m3_36 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", file="JsonTests.cs", label="Assert.IsNotEmpty(output.Groups)", span="79-79"];
m3_37 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", span="72-72"];
m3_403 [cluster="RestSharp.Tests.JsonTests.GetPayLoad<T>(string)", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.GetPayLoad<T>(string)", span="980-980"];
m3_622 [cluster="RestSharp.Tests.JsonTests.GetPayLoad<T>(string)", file="JsonTests.cs", label="var doc = File.ReadAllText(Path.Combine(''SampleData'', fileName))", span="982-982"];
m3_623 [cluster="RestSharp.Tests.JsonTests.GetPayLoad<T>(string)", file="JsonTests.cs", label="var response = new RestResponse { Content = doc }", span="983-983"];
m3_624 [cluster="RestSharp.Tests.JsonTests.GetPayLoad<T>(string)", file="JsonTests.cs", label="var d = new JsonDeserializer()", span="984-984"];
m3_625 [cluster="RestSharp.Tests.JsonTests.GetPayLoad<T>(string)", file="JsonTests.cs", label="return d.Deserialize<T>(response);", span="986-986"];
m3_626 [cluster="RestSharp.Tests.JsonTests.GetPayLoad<T>(string)", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.GetPayLoad<T>(string)", span="980-980"];
m3_80 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", span="147-147"];
m3_81 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", file="JsonTests.cs", label="var doc = File.ReadAllText(Path.Combine(''SampleData'', ''jsondictionary.txt''))", span="149-149"];
m3_82 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", file="JsonTests.cs", label="var json = new JsonDeserializer()", span="150-150"];
m3_83 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", file="JsonTests.cs", label="var output = json.Deserialize<Dictionary<string, object>>(new RestResponse { Content = doc })", span="151-151"];
m3_84 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", file="JsonTests.cs", label="Assert.AreEqual(output.Keys.Count, 3)", span="153-153"];
m3_85 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", file="JsonTests.cs", label="var firstKeysVal = output.FirstOrDefault().Value", span="155-155"];
m3_86 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", file="JsonTests.cs", label="Assert.IsInstanceOf<IDictionary>(firstKeysVal)", span="157-157"];
m3_87 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", span="147-147"];
m3_262 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", span="393-393"];
m3_263 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", file="JsonTests.cs", label="var doc = new JsonObject()", span="395-395"];
m3_264 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", file="JsonTests.cs", label="doc[''Age''] = ''28''", span="397-397"];
m3_266 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", file="JsonTests.cs", label="var response = new RestResponse { Content = doc.ToString() }", span="400-400"];
m3_265 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", file="JsonTests.cs", label="var d = new JsonDeserializer()", span="399-399"];
m3_267 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", file="JsonTests.cs", label="var p = d.Deserialize<PersonForJson>(response)", span="401-401"];
m3_268 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", file="JsonTests.cs", label="Assert.AreEqual(28, p.Age)", span="403-403"];
m3_269 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", span="393-393"];
m3_305 [cluster="System.Uri.Uri(string, System.UriKind)", file="JsonTests.cs", label="Entry System.Uri.Uri(string, System.UriKind)", span="0-0"];
m3_465 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Null()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Null()", span="700-700"];
m3_466 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Null()", file="JsonTests.cs", label="var payload = this.GetPayLoad<DateTimeTestStructure>(''datetimes.txt'')", span="702-702"];
m3_467 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Null()", file="JsonTests.cs", label="Assert.Null(payload.NullableDateTimeOffsetWithNull)", span="704-704"];
m3_468 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Null()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Null()", span="700-700"];
m3_469 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", span="708-708"];
m3_470 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file="JsonTests.cs", label="var doc = this.CreateJsonStringDictionary()", span="710-710"];
m3_471 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file="JsonTests.cs", label="var d = new JsonDeserializer()", span="711-711"];
m3_472 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file="JsonTests.cs", label="var response = new RestResponse { Content = doc }", span="712-712"];
m3_473 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file="JsonTests.cs", label="var bd = d.Deserialize<Dictionary<string, string>>(response)", span="713-713"];
m3_474 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file="JsonTests.cs", label="Assert.AreEqual(bd[''Thing1''], ''Thing1'')", span="715-715"];
m3_475 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file="JsonTests.cs", label="Assert.AreEqual(bd[''Thing2''], ''Thing2'')", span="716-716"];
m3_476 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file="JsonTests.cs", label="Assert.AreEqual(bd[''ThingRed''], ''ThingRed'')", span="717-717"];
m3_477 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file="JsonTests.cs", label="Assert.AreEqual(bd[''ThingBlue''], ''ThingBlue'')", span="718-718"];
m3_478 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", span="708-708"];
m3_135 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", span="221-221"];
m3_136 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", color=green, community=0, file="JsonTests.cs", label="DateTime item0 = new DateTime(2010, 2, 8, 11, 11, 11, DateTimeKind.Local)", prediction=2, span="223-223"];
m3_137 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", color=green, community=0, file="JsonTests.cs", label="DateTime item1 = new DateTime(2011, 2, 8, 11, 11, 11, DateTimeKind.Utc)", prediction=3, span="224-224"];
m3_140 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", color=green, community=0, file="JsonTests.cs", label="data[''Items''] = new JsonArray\r\n                            {\r\n                                item0.ToString(),\r\n                                \\nitem1.ToString(),\r\n                                item2.ToString(),\r\n                                ''/Date(1309421746929+\\n0000)/''\r\n                            }", prediction=4, span="228-234"];
m3_144 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", color=green, community=0, file="JsonTests.cs", label="Assert.AreNotEqual(item0.Kind, p.Items[0].Kind)", prediction=2, span="240-240"];
m3_138 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", color=green, community=0, file="JsonTests.cs", label="DateTime item2 = new DateTime(2012, 2, 8, 11, 11, 11, DateTimeKind.Unspecified)", prediction=6, span="225-225"];
m3_145 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", color=green, community=0, file="JsonTests.cs", label="Assert.AreEqual(item1.Kind, p.Items[1].Kind)", prediction=3, span="241-241"];
m3_141 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", file="JsonTests.cs", label="var d = new JsonDeserializer()", span="230-230"];
m3_139 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", file="JsonTests.cs", label="var data = new JsonObject()", span="226-226"];
m3_146 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", color=green, community=0, file="JsonTests.cs", label="Assert.AreEqual(DateTimeKind.Utc, p.Items[2].Kind)", prediction=3, span="242-242"];
m3_142 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", file="JsonTests.cs", label="var response = new RestResponse { Content = data.ToString() }", span="231-231"];
m3_143 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", file="JsonTests.cs", label="var p = d.Deserialize<GenericWithList<DateTime>>(response)", span="232-232"];
m3_147 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", color=green, community=0, file="JsonTests.cs", label="Assert.AreEqual(DateTimeKind.Utc, p.Items[3].Kind)", prediction=3, span="243-243"];
m3_148 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", span="221-221"];
m3_310 [cluster="RestSharp.Tests.CultureChange.CultureChange(string)", file="JsonTests.cs", label="Entry RestSharp.Tests.CultureChange.CultureChange(string)", span="10-10"];
m3_98 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", span="175-175"];
m3_99 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", file="JsonTests.cs", label="var doc = File.ReadAllText(Path.Combine(''SampleData'', ''GenericWithList.txt''))", span="177-177"];
m3_100 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", file="JsonTests.cs", label="var json = new JsonDeserializer()", span="178-178"];
m3_101 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", file="JsonTests.cs", label="var output = json.Deserialize<Generic<GenericWithList<Foe>>>(new RestResponse { Content = doc })", span="179-179"];
m3_102 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", file="JsonTests.cs", label="Assert.AreEqual(''Foe sho'', output.Data.Items[0].Nickname)", span="181-181"];
m3_103 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", span="175-175"];
m3_254 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", span="379-379"];
m3_260 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", file="JsonTests.cs", label="Assert.AreEqual(new Guid(GUID_STRING), p.Guid)", span="389-389"];
m3_255 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", file="JsonTests.cs", label="var doc = new JsonObject()", span="381-381"];
m3_256 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", file="JsonTests.cs", label="doc[''Guid''] = GUID_STRING", span="383-383"];
m3_258 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", file="JsonTests.cs", label="var response = new RestResponse { Content = doc.ToString() }", span="386-386"];
m3_257 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", file="JsonTests.cs", label="var d = new JsonDeserializer()", span="385-385"];
m3_259 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", file="JsonTests.cs", label="var p = d.Deserialize<PersonForJson>(response)", span="387-387"];
m3_261 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", span="379-379"];
m3_163 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", span="253-253"];
m3_164 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="JsonTests.cs", label="var doc = this.CreateJsonWithEmptyValues()", span="255-255"];
m3_165 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="JsonTests.cs", label="var json = new JsonDeserializer()", span="256-256"];
m3_166 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="JsonTests.cs", label="var output = json.Deserialize<NullableValues>(new RestResponse { Content = doc })", span="257-257"];
m3_167 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Assert.Null(output.Id)", span="259-259"];
m3_168 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Assert.Null(output.StartDate)", span="260-260"];
m3_169 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Assert.Null(output.UniqueId)", span="261-261"];
m3_170 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", span="253-253"];
m3_8 [cluster="RestSharp.Deserializers.JsonDeserializer.JsonDeserializer()", file="JsonTests.cs", label="Entry RestSharp.Deserializers.JsonDeserializer.JsonDeserializer()", span="21-21"];
m6_8_258 [cluster="RestSharp.Tests.XmlDeserializerTests.Ignore_Protected_Property_That_Exists_In_Data()", file=merged, label="Entry RestSharp.Tests.XmlDeserializerTests.Ignore_Protected_Property_That_Exists_In_Data()", span="361-361"];
m6_8_259 [cluster="RestSharp.Tests.XmlDeserializerTests.Ignore_Protected_Property_That_Exists_In_Data()", file=merged, label="var doc = CreateElementsXml()", span="363-363"];
m6_8_260 [cluster="RestSharp.Tests.XmlDeserializerTests.Ignore_Protected_Property_That_Exists_In_Data()", file=merged, label="var response = new RestResponse { Content = doc }", span="364-364"];
m6_8_261 [cluster="RestSharp.Tests.XmlDeserializerTests.Ignore_Protected_Property_That_Exists_In_Data()", file=merged, label="var d = new XmlDeserializer()", span="365-365"];
m6_8_262 [cluster="RestSharp.Tests.XmlDeserializerTests.Ignore_Protected_Property_That_Exists_In_Data()", file=merged, label="var p = d.Deserialize<PersonForXml>(response)", span="366-366"];
m6_8_263 [cluster="RestSharp.Tests.XmlDeserializerTests.Ignore_Protected_Property_That_Exists_In_Data()", file=merged, label="Assert.Null(p.IgnoreProxy)", span="368-368"];
m6_8_264 [cluster="RestSharp.Tests.XmlDeserializerTests.Ignore_Protected_Property_That_Exists_In_Data()", file=merged, label="Exit RestSharp.Tests.XmlDeserializerTests.Ignore_Protected_Property_That_Exists_In_Data()", span="361-361"];
m6_8_472 [cluster="System.TimeSpan.FromHours(double)", file=merged, label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m6_8_199 [cluster="System.TimeSpan.TimeSpan(int, int, int, int, int)", file=merged, label="Entry System.TimeSpan.TimeSpan(int, int, int, int, int)", span="0-0"];
m6_3_405 [cluster="System.TimeSpan.TimeSpan(int, int, int, int, int)", file=merged, label="Entry System.TimeSpan.TimeSpan(int, int, int, int, int)", span="0-0"];
m6_3_429 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_DateTime()", span="620-620"];
m6_3_430 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime()", file=merged, label="var payload = this.GetPayLoad<DateTimeTestStructure>(''datetimes.txt'')", span="622-622"];
m6_3_431 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime()", file=merged, label="Assert.AreEqual(\r\n                new DateTime(2011, 6, 30, 8, 15, 46, 929, DateTimeKind.Utc),\r\n                payload.DateTime)", span="624-626"];
m6_3_432 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_DateTime()", span="620-620"];
m6_7_9 [cluster="RestSharp.Serializers.JsonSerializer.JsonSerializer()", file=merged, label="Entry RestSharp.Serializers.JsonSerializer.JsonSerializer()", span="12-12"];
m6_6_34 [cluster="RestSharp.RestRequestAsyncHandle.RestRequestAsyncHandle()", file=merged, label="Entry RestSharp.RestRequestAsyncHandle.RestRequestAsyncHandle()", span="8-8"];
m6_8_435 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", file=merged, label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", span="586-586"];
m6_8_436 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", file=merged, label="var doc = CreateXmlWithAttributesAndNullValues()", span="588-588"];
m6_8_437 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", file=merged, label="var xml = new XmlDeserializer()", span="589-589"];
m6_8_438 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", file=merged, label="var output = xml.Deserialize<NullableValues>(new RestResponse { Content = doc })", span="590-590"];
m6_8_439 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", file=merged, label="Assert.Null(output.Id)", span="592-592"];
m6_8_440 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", file=merged, label="Assert.Null(output.StartDate)", span="593-593"];
m6_8_441 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", file=merged, label="Assert.Null(output.UniqueId)", span="594-594"];
m6_8_442 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", file=merged, label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", span="586-586"];
m6_1_6 [cluster="RestSharp.IRestRequest.AddXmlBody(object)", file=merged, label="Entry RestSharp.IRestRequest.AddXmlBody(object)", span="192-192"];
m6_1_7 [cluster="RestSharp.IRestRequest.AddXmlBody(object)", file=merged, label="Exit RestSharp.IRestRequest.AddXmlBody(object)", span="192-192"];
m6_3_341 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="Entry RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", span="767-767"];
m6_3_523 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="int i = 0", span="789-789"];
m6_3_510 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="var doc = new JsonObject()", span="769-769"];
m6_3_511 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="doc[''name''] = ''John Sheehan''", span="771-771"];
m6_3_512 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="doc[''start_date''] = new DateTime(2009, 9, 25, 0, 6, 1, DateTimeKind.Utc)", span="772-772"];
m6_3_513 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="doc[''age''] = 28", span="773-773"];
m6_3_514 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="doc[''percent''] = 99.9999m", span="774-774"];
m6_3_515 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="doc[''big_number''] = long.MaxValue", span="775-775"];
m6_3_516 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="doc[''is_cool''] = false", span="776-776"];
m6_3_517 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="doc[''ignore''] = ''dummy''", span="777-777"];
m6_3_518 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="doc[''read_only''] = ''dummy''", span="778-778"];
m6_3_519 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="doc[''url''] = ''http://example.com''", span="779-779"];
m6_3_520 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="doc[''url_path''] = ''/foo/bar''", span="780-780"];
m6_3_521 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="doc[''best_friend''] = new JsonObject\r\n            {\r\n                {''name'', ''The Fonz''},\r\n                {''since'', \\n1952}\r\n            }", span="781-785"];
m6_3_527 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="doc[''friends''] = friendsArray", span="798-798"];
m6_3_529 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="doc[''foes''] = foesArray", span="806-806"];
m6_3_530 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="return doc.ToString();", span="808-808"];
m6_3_522 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="var friendsArray = new JsonArray()", span="787-787"];
m6_3_525 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="friendsArray.Add(new JsonObject\r\n                {\r\n                    {''name'', ''Friend'' + i},\r\n                    {''\\nsince'', DateTime.Now.Year - i}\r\n                })", span="791-795"];
m6_3_524 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="i < 10", span="789-789"];
m6_3_526 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="i++", span="789-789"];
m6_3_528 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="var foesArray = new JsonObject\r\n            {\r\n                {''dict1'', new JsonObject {{''nickname'', ''Foe 1''}}},\r\n                {''\\ndict2'', new JsonObject {{''nickname'', ''Foe 2''}}}\r\n            }", span="800-804"];
m6_3_531 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="Exit RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", span="767-767"];
m6_8_0 [cluster="RestSharp.Tests.XmlDeserializerTests.PathFor(string)", file=merged, label="Entry RestSharp.Tests.XmlDeserializerTests.PathFor(string)", span="34-34"];
m6_8_1 [cluster="RestSharp.Tests.XmlDeserializerTests.PathFor(string)", file=merged, label="return Path.Combine(this.sampleDataPath, sampleFile);", span="36-36"];
m6_8_2 [cluster="RestSharp.Tests.XmlDeserializerTests.PathFor(string)", file=merged, label="Exit RestSharp.Tests.XmlDeserializerTests.PathFor(string)", span="34-34"];
m6_3_319 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", span="473-473"];
m6_3_320 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="var doc = this.CreateJsonWithUnderscores()", span="475-475"];
m6_3_321 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="var d = new JsonDeserializer()", span="476-476"];
m6_3_322 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="var response = new RestResponse { Content = doc }", span="477-477"];
m6_3_323 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="var p = d.Deserialize<PersonForJson>(response)", span="478-478"];
m6_3_324 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="Assert.AreEqual(''John Sheehan'', p.Name)", span="480-480"];
m6_3_325 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="Assert.AreEqual(new DateTime(2009, 9, 25, 0, 6, 1), p.StartDate)", span="481-481"];
m6_3_326 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="Assert.AreEqual(28, p.Age)", span="482-482"];
m6_3_327 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="Assert.AreEqual(long.MaxValue, p.BigNumber)", span="483-483"];
m6_3_328 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="Assert.AreEqual(99.9999m, p.Percent)", span="484-484"];
m6_3_329 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="Assert.AreEqual(false, p.IsCool)", span="485-485"];
m6_3_330 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="Assert.AreEqual(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="486-486"];
m6_3_331 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="Assert.AreEqual(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="487-487"];
m6_3_332 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="Assert.NotNull(p.Friends)", span="488-488"];
m6_3_333 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="Assert.AreEqual(10, p.Friends.Count)", span="489-489"];
m6_3_334 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="Assert.NotNull(p.BestFriend)", span="490-490"];
m6_3_335 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="Assert.AreEqual(''The Fonz'', p.BestFriend.Name)", span="491-491"];
m6_3_336 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="Assert.AreEqual(1952, p.BestFriend.Since)", span="492-492"];
m6_3_337 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="Assert.IsNotEmpty(p.Foes)", span="493-493"];
m6_3_338 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="Assert.AreEqual(''Foe 1'', p.Foes[''dict1''].Nickname)", span="494-494"];
m6_3_339 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="Assert.AreEqual(''Foe 2'', p.Foes[''dict2''].Nickname)", span="495-495"];
m6_3_340 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", span="473-473"];
m6_2_174 [cluster="string.ParseJsonDate(System.Globalization.CultureInfo)", file=merged, label="Entry string.ParseJsonDate(System.Globalization.CultureInfo)", span="119-119"];
m6_3_447 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeLocal()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeLocal()", span="659-659"];
m6_3_448 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeLocal()", file=merged, label="var payload = this.GetPayLoad<Iso8601DateTimeTestStructure>(''iso8601datetimes.txt'')", span="661-661"];
m6_3_449 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeLocal()", file=merged, label="Assert.AreEqual(\r\n                new DateTime(2012, 7, 19, 10, 23, 25, DateTimeKind.Utc),\r\n                payload.DateTimeLocal)", span="663-665"];
m6_3_450 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeLocal()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeLocal()", span="659-659"];
m6_7_34 [cluster="lambda expression", file=merged, label="Entry lambda expression", span="134-140"];
m6_2_112 [cluster="lambda expression", file=merged, label="Entry lambda expression", span="148-148"];
m6_2_67 [cluster="lambda expression", file=merged, label="Entry lambda expression", span="74-74"];
m6_2_68 [cluster="lambda expression", file=merged, label="p.CanWrite", span="74-74"];
m6_2_69 [cluster="lambda expression", file=merged, label="Exit lambda expression", span="74-74"];
m6_2_113 [cluster="lambda expression", file=merged, label="x.IsGenericType && x.GetGenericTypeDefinition() == typeof(IList<>)", span="148-148"];
m6_2_114 [cluster="lambda expression", file=merged, label="Exit lambda expression", span="148-148"];
m6_6_77 [cluster="lambda expression", file=merged, label="Entry lambda expression", span="162-162"];
m6_6_37 [cluster="lambda expression", file=merged, label="ProcessResponse(request, r, asyncHandle, callback)", span="91-91"];
m6_6_41 [cluster="lambda expression", file=merged, label="ctx.Post(s => cb(resp), null)", span="99-99"];
m6_6_45 [cluster="lambda expression", file=merged, label="cb(resp)", span="99-99"];
m6_6_36 [cluster="lambda expression", file=merged, label="Entry lambda expression", span="91-91"];
m6_6_38 [cluster="lambda expression", file=merged, label="Exit lambda expression", span="91-91"];
m6_6_40 [cluster="lambda expression", file=merged, label="Entry lambda expression", span="99-99"];
m6_6_42 [cluster="lambda expression", file=merged, label="Exit lambda expression", span="99-99"];
m6_6_44 [cluster="lambda expression", file=merged, label="Entry lambda expression", span="99-99"];
m6_6_46 [cluster="lambda expression", file=merged, label="Exit lambda expression", span="99-99"];
m6_6_65 [cluster="lambda expression", file=merged, label="DeserializeResponse(request, callback, response, asyncHandle)", span="134-134"];
m6_6_64 [cluster="lambda expression", file=merged, label="Entry lambda expression", span="134-134"];
m6_6_66 [cluster="lambda expression", file=merged, label="Exit lambda expression", span="134-134"];
m6_6_72 [cluster="lambda expression", file=merged, label="DeserializeResponse(request, callback, response, asyncHandle)", span="148-148"];
m6_6_71 [cluster="lambda expression", file=merged, label="Entry lambda expression", span="148-148"];
m6_6_73 [cluster="lambda expression", file=merged, label="Exit lambda expression", span="148-148"];
m6_6_78 [cluster="lambda expression", file=merged, label="DeserializeResponse(request, callback, response, asyncHandle)", span="162-162"];
m6_6_79 [cluster="lambda expression", file=merged, label="Exit lambda expression", span="162-162"];
m6_7_135 [cluster="lambda expression", file=merged, label="Entry lambda expression", span="416-416"];
m6_7_10 [cluster="lambda expression", file=merged, label="Entry lambda expression", span="70-70"];
m6_7_11 [cluster="lambda expression", file=merged, label="Exit lambda expression", span="70-70"];
m6_7_137 [cluster="lambda expression", file=merged, label="Exit lambda expression", span="416-416"];
m6_7_35 [cluster="lambda expression", file=merged, label="var file = new StreamReader(path)", span="136-136"];
m6_7_36 [cluster="lambda expression", file=merged, label="file.BaseStream.CopyTo(s)", span="138-138"];
m6_7_136 [cluster="lambda expression", file=merged, label="Uri.CheckHostName(Regex.Split(host, portSplit)[0]) == UriHostNameType.Unknown", span="416-416"];
m6_7_37 [cluster="lambda expression", file=merged, label="Exit lambda expression", span="134-140"];
m6_1_2 [cluster="RestSharp.IRestRequest.AddBody(object)", file=merged, label="Entry RestSharp.IRestRequest.AddBody(object)", span="178-178"];
m6_1_3 [cluster="RestSharp.IRestRequest.AddBody(object)", file=merged, label="Exit RestSharp.IRestRequest.AddBody(object)", span="178-178"];
m6_6_47 [cluster="System.Action<T>.Invoke(T)", file=merged, label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m6_1_18 [cluster="RestSharp.IRestRequest.AddParameter(string, object, RestSharp.ParameterType)", file=merged, label="Entry RestSharp.IRestRequest.AddParameter(string, object, RestSharp.ParameterType)", span="248-248"];
m6_1_19 [cluster="RestSharp.IRestRequest.AddParameter(string, object, RestSharp.ParameterType)", file=merged, label="Exit RestSharp.IRestRequest.AddParameter(string, object, RestSharp.ParameterType)", span="248-248"];
m6_6_61 [cluster="RestSharp.RestClient.ExecuteAsync<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>)", file=merged, label="Entry RestSharp.RestClient.ExecuteAsync<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>)", span="130-130"];
m6_6_62 [cluster="RestSharp.RestClient.ExecuteAsync<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>)", file=merged, label="return ExecuteAsync(request,\r\n                (response, asyncHandle) => DeserializeResponse(request, callback, response, asyncHandle));", span="133-134"];
m6_6_63 [cluster="RestSharp.RestClient.ExecuteAsync<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>)", file=merged, label="Exit RestSharp.RestClient.ExecuteAsync<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>)", span="130-130"];
m6_21 [cluster="System.Convert.FromBase64String(string)", file=merged, label="Entry System.Convert.FromBase64String(string)", span="0-0"];
m6_8_408 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Goodreads_Xml()", file=merged, label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Goodreads_Xml()", span="548-548"];
m6_8_409 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Goodreads_Xml()", file=merged, label="var xmlpath = this.PathFor(''Goodreads.xml'')", span="550-550"];
m6_8_410 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Goodreads_Xml()", file=merged, label="var doc = XDocument.Load(xmlpath)", span="551-551"];
m6_8_411 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Goodreads_Xml()", file=merged, label="var response = new RestResponse { Content = doc.ToString() }", span="552-552"];
m6_8_412 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Goodreads_Xml()", file=merged, label="var d = new XmlDeserializer()", span="553-553"];
m6_8_413 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Goodreads_Xml()", file=merged, label="var output = d.Deserialize<GoodReadsReviewCollection>(response)", span="554-554"];
m6_8_414 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Goodreads_Xml()", file=merged, label="Assert.AreEqual(2, output.Reviews.Count)", span="556-556"];
m6_8_415 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Goodreads_Xml()", file=merged, label="Assert.AreEqual(''1208943892'', output.Reviews[0].Id)", span="557-557"];
m6_8_416 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Goodreads_Xml()", file=merged, label="Assert.AreEqual(''1198344567'', output.Reviews[1].Id)", span="558-558"];
m6_8_417 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Goodreads_Xml()", file=merged, label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Goodreads_Xml()", span="548-548"];
m6_6_48 [cluster="RestSharp.RestClient.DoAsGetAsync(RestSharp.IHttp, System.Action<RestSharp.HttpResponse>, string)", file=merged, label="Entry RestSharp.RestClient.DoAsGetAsync(RestSharp.IHttp, System.Action<RestSharp.HttpResponse>, string)", span="107-107"];
m6_6_49 [cluster="RestSharp.RestClient.DoAsGetAsync(RestSharp.IHttp, System.Action<RestSharp.HttpResponse>, string)", file=merged, label="return http.AsGetAsync(response_cb, method);", span="109-109"];
m6_6_50 [cluster="RestSharp.RestClient.DoAsGetAsync(RestSharp.IHttp, System.Action<RestSharp.HttpResponse>, string)", file=merged, label="Exit RestSharp.RestClient.DoAsGetAsync(RestSharp.IHttp, System.Action<RestSharp.HttpResponse>, string)", span="107-107"];
m6_3_455 [cluster="System.DateTime.ToUniversalTime()", file=merged, label="Entry System.DateTime.ToUniversalTime()", span="0-0"];
m6_2_177 [cluster="decimal.Parse(string, System.IFormatProvider)", file=merged, label="Entry decimal.Parse(string, System.IFormatProvider)", span="0-0"];
m6_58 [cluster="RestSharp.Authenticators.OAuth1Authenticator.ForRequestToken(string, string)", file=merged, label="Entry RestSharp.Authenticators.OAuth1Authenticator.ForRequestToken(string, string)", span="65-65"];
m6_1_30 [cluster="RestSharp.IRestRequest.IncreaseNumAttempts()", file=merged, label="Entry RestSharp.IRestRequest.IncreaseNumAttempts()", span="299-299"];
m6_1_31 [cluster="RestSharp.IRestRequest.IncreaseNumAttempts()", file=merged, label="Exit RestSharp.IRestRequest.IncreaseNumAttempts()", span="299-299"];
m6_7_114 [cluster="RestSharp.RestRequest.AddParameter(RestSharp.Parameter)", file=merged, label="Entry RestSharp.RestRequest.AddParameter(RestSharp.Parameter)", span="339-339"];
m6_7_115 [cluster="RestSharp.RestRequest.AddParameter(RestSharp.Parameter)", file=merged, label="this.Parameters.Add(p)", span="341-341"];
m6_7_116 [cluster="RestSharp.RestRequest.AddParameter(RestSharp.Parameter)", file=merged, label="return this;", span="342-342"];
m6_7_117 [cluster="RestSharp.RestRequest.AddParameter(RestSharp.Parameter)", file=merged, label="Exit RestSharp.RestRequest.AddParameter(RestSharp.Parameter)", span="339-339"];
m6_7_109 [cluster="RestSharp.RestRequest.AddParameter(string, object)", file=merged, label="Entry RestSharp.RestRequest.AddParameter(string, object)", span="351-351"];
m6_7_118 [cluster="RestSharp.RestRequest.AddParameter(string, object)", file=merged, label="return this.AddParameter(new Parameter\r\n                                     {\r\n                                         Name = \\nname,\r\n                                         Value = value,\r\n                                         Type = ParameterType.GetOrPost\r\n                                     });", span="353-358"];
m6_7_119 [cluster="RestSharp.RestRequest.AddParameter(string, object)", file=merged, label="Exit RestSharp.RestRequest.AddParameter(string, object)", span="351-351"];
m6_25 [cluster="System.IO.Stream.WriteStringUtf8(string)", file=merged, label="Entry System.IO.Stream.WriteStringUtf8(string)", span="7-7"];
m6_6_35 [cluster="System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", file=merged, label="Entry System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", span="0-0"];
m6_3_424 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_JsonNet_Dates()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_JsonNet_Dates()", span="610-610"];
m6_3_425 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_JsonNet_Dates()", file=merged, label="var person = this.GetPayLoad<PersonForJson>(''person.json.txt'')", span="612-612"];
m6_3_426 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_JsonNet_Dates()", file=merged, label="Assert.AreEqual(\r\n                new DateTime(2011, 6, 30, 8, 15, 46, 929, DateTimeKind.Utc),\r\n                person.StartDate)", span="614-616"];
m6_3_427 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_JsonNet_Dates()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_JsonNet_Dates()", span="610-610"];
m6_7_133 [cluster="System.Func<T, TResult>.Invoke(T)", file=merged, label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m6_3_342 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root_Alternative_Culture()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root_Alternative_Culture()", span="499-499"];
m6_3_343 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root_Alternative_Culture()", file=merged, label="new CultureChange(ALTERNATIVE_CULTURE)", span="501-501"];
m6_3_344 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root_Alternative_Culture()", file=merged, label="this.Can_Deserialize_Names_With_Underscores_With_Default_Root()", span="503-503"];
m6_3_345 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root_Alternative_Culture()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root_Alternative_Culture()", span="499-499"];
m6_1_10 [cluster="RestSharp.IRestRequest.AddObject(object, params string[])", file=merged, label="Entry RestSharp.IRestRequest.AddObject(object, params string[])", span="212-212"];
m6_1_11 [cluster="RestSharp.IRestRequest.AddObject(object, params string[])", file=merged, label="Exit RestSharp.IRestRequest.AddObject(object, params string[])", span="212-212"];
m6_8_166 [cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file=merged, label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0"];
m6_3_132 [cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file=merged, label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0"];
m6_7_110 [cluster="RestSharp.RestRequest.AddObject(object)", file=merged, label="Entry RestSharp.RestRequest.AddObject(object)", span="328-328"];
m6_7_111 [cluster="RestSharp.RestRequest.AddObject(object)", file=merged, label="this.AddObject(obj, new string[] { })", span="330-330"];
m6_7_112 [cluster="RestSharp.RestRequest.AddObject(object)", file=merged, label="return this;", span="331-331"];
m6_7_113 [cluster="RestSharp.RestRequest.AddObject(object)", file=merged, label="Exit RestSharp.RestRequest.AddObject(object)", span="328-328"];
m6_3_479 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", file=merged, label="Entry RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", span="956-956"];
m6_3_608 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", file=merged, label="var doc = new JsonObject()", span="958-958"];
m6_3_609 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", file=merged, label="doc[''Thing1''] = ''Thing1''", span="960-960"];
m6_3_610 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", file=merged, label="doc[''Thing2''] = ''Thing2''", span="961-961"];
m6_3_611 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", file=merged, label="doc[''ThingRed''] = ''ThingRed''", span="962-962"];
m6_3_612 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", file=merged, label="doc[''ThingBlue''] = ''ThingBlue''", span="963-963"];
m6_3_613 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", file=merged, label="return doc.ToString();", span="965-965"];
m6_3_614 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", file=merged, label="Exit RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", span="956-956"];
m6_6_12 [cluster="RestSharp.RestClient.ExecuteAsyncGet(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring)", file=merged, label="Entry RestSharp.RestClient.ExecuteAsyncGet(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring)", span="61-61"];
m6_6_13 [cluster="RestSharp.RestClient.ExecuteAsyncGet(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring)", file=merged, label="return ExecuteAsync(request, callback, httpMethod, DoAsGetAsync);", span="64-64"];
m6_6_14 [cluster="RestSharp.RestClient.ExecuteAsyncGet(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring)", file=merged, label="Exit RestSharp.RestClient.ExecuteAsyncGet(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring)", span="61-61"];
m6_8_320 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file=merged, label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", span="437-437"];
m6_8_321 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file=merged, label="var doc = CreateLowercaseUnderscoresXml()", span="439-439"];
m6_8_322 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file=merged, label="var response = new RestResponse { Content = doc }", span="440-440"];
m6_8_323 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file=merged, label="var d = new XmlDeserializer()", span="441-441"];
m6_8_324 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file=merged, label="var p = d.Deserialize<PersonForXml>(response)", span="442-442"];
m6_8_325 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file=merged, label="Assert.AreEqual(''John Sheehan'', p.Name)", span="444-444"];
m6_8_326 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file=merged, label="Assert.AreEqual(new DateTime(2009, 9, 25, 0, 6, 1), p.StartDate)", span="445-445"];
m6_8_327 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file=merged, label="Assert.AreEqual(28, p.Age)", span="446-446"];
m6_8_328 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file=merged, label="Assert.AreEqual(long.MaxValue, p.BigNumber)", span="447-447"];
m6_8_329 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file=merged, label="Assert.AreEqual(99.9999m, p.Percent)", span="448-448"];
m6_8_330 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file=merged, label="Assert.AreEqual(false, p.IsCool)", span="449-449"];
m6_8_331 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file=merged, label="Assert.AreEqual(new Guid(GUID_STRING), p.UniqueId)", span="450-450"];
m6_8_332 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file=merged, label="Assert.AreEqual(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="451-451"];
m6_8_333 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file=merged, label="Assert.AreEqual(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="452-452"];
m6_8_334 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file=merged, label="Assert.NotNull(p.Friends)", span="453-453"];
m6_8_335 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file=merged, label="Assert.AreEqual(10, p.Friends.Count)", span="454-454"];
m6_8_336 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file=merged, label="Assert.NotNull(p.BestFriend)", span="455-455"];
m6_8_337 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file=merged, label="Assert.AreEqual(''The Fonz'', p.BestFriend.Name)", span="456-456"];
m6_8_338 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file=merged, label="Assert.AreEqual(1952, p.BestFriend.Since)", span="457-457"];
m6_8_339 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file=merged, label="Assert.NotNull(p.Foes)", span="458-458"];
m6_8_340 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file=merged, label="Assert.AreEqual(5, p.Foes.Count)", span="459-459"];
m6_8_341 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file=merged, label="Assert.AreEqual(''Yankees'', p.Foes.Team)", span="460-460"];
m6_8_342 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file=merged, label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", span="437-437"];
m6_2_87 [cluster="System.Collections.IDictionary.Add(object, object)", file=merged, label="Entry System.Collections.IDictionary.Add(object, object)", span="0-0"];
m6_3_407 [cluster="System.TimeSpan.TimeSpan(int, int, int, int)", file=merged, label="Entry System.TimeSpan.TimeSpan(int, int, int, int)", span="0-0"];
m6_8_398 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file=merged, label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Google_Weather_Xml()", span="534-534"];
m6_8_399 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file=merged, label="var xmlpath = this.PathFor(''GoogleWeather.xml'')", span="536-536"];
m6_8_400 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file=merged, label="var doc = XDocument.Load(xmlpath)", span="537-537"];
m6_8_401 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file=merged, label="var response = new RestResponse { Content = doc.ToString() }", span="538-538"];
m6_8_402 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file=merged, label="var d = new XmlDeserializer()", span="539-539"];
m6_8_403 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file=merged, label="var output = d.Deserialize<xml_api_reply>(response)", span="540-540"];
m6_8_404 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file=merged, label="Assert.IsNotEmpty(output.weather)", span="542-542"];
m6_8_405 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file=merged, label="Assert.AreEqual(4, output.weather.Count)", span="543-543"];
m6_8_406 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file=merged, label="Assert.AreEqual(''Sunny'', output.weather[0].condition.data)", span="544-544"];
m6_8_407 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file=merged, label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Google_Weather_Xml()", span="534-534"];
m6_8_197 [cluster="System.TimeSpan.TimeSpan(long)", file=merged, label="Entry System.TimeSpan.TimeSpan(long)", span="0-0"];
m6_3_404 [cluster="System.TimeSpan.TimeSpan(long)", file=merged, label="Entry System.TimeSpan.TimeSpan(long)", span="0-0"];
m6_2_85 [cluster="System.Type.GetGenericTypeDefinition()", file=merged, label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
m6_1_12 [cluster="RestSharp.IRestRequest.AddObject(object)", file=merged, label="Entry RestSharp.IRestRequest.AddObject(object)", span="219-219"];
m6_1_13 [cluster="RestSharp.IRestRequest.AddObject(object)", file=merged, label="Exit RestSharp.IRestRequest.AddObject(object)", span="219-219"];
m6_1_4 [cluster="RestSharp.IRestRequest.AddJsonBody(object)", file=merged, label="Entry RestSharp.IRestRequest.AddJsonBody(object)", span="185-185"];
m6_1_5 [cluster="RestSharp.IRestRequest.AddJsonBody(object)", file=merged, label="Exit RestSharp.IRestRequest.AddJsonBody(object)", span="185-185"];
m6_1_28 [cluster="RestSharp.IRestRequest.AddQueryParameter(string, string)", file=merged, label="Entry RestSharp.IRestRequest.AddQueryParameter(string, string)", span="295-295"];
m6_1_29 [cluster="RestSharp.IRestRequest.AddQueryParameter(string, string)", file=merged, label="Exit RestSharp.IRestRequest.AddQueryParameter(string, string)", span="295-295"];
m6_3_14 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", span="48-48"];
m6_3_15 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", file=merged, label="string content = ''{\''one\'':\''oneOneOne\'', \''two\'':\''twoTwoTwo\'', \''three\'':3}''", span="50-50"];
m6_3_16 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", file=merged, label="var json = new JsonDeserializer()", span="51-51"];
m6_3_17 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", file=merged, label="var output = json.Deserialize<SimpleStruct>(new RestResponse { Content = content })", span="52-52"];
m6_3_18 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", file=merged, label="Assert.NotNull(output)", span="54-54"];
m6_3_19 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", file=merged, label="Assert.AreEqual(''oneOneOne'', output.One)", span="55-55"];
m6_3_20 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", file=merged, label="Assert.AreEqual(''twoTwoTwo'', output.Two)", span="56-56"];
m6_3_21 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", file=merged, label="Assert.AreEqual(3, output.Three)", span="57-57"];
m6_3_22 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", span="48-48"];
m6_3_104 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", span="185-185"];
m6_3_105 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file=merged, label="Guid id1 = new Guid(''b0e5c11f-e944-478c-aadd-753b956d0c8c'')", span="187-187"];
m6_3_106 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file=merged, label="Guid id2 = new Guid(''809399fa-21c4-4dca-8dcd-34cb697fbca0'')", span="188-188"];
m6_3_108 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file=merged, label="data[''Ids''] = new JsonArray { id1, id2 }", span="191-191"];
m6_3_113 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file=merged, label="Assert.AreEqual(id1, p.Ids[0])", span="198-198"];
m6_3_107 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file=merged, label="var data = new JsonObject()", span="189-189"];
m6_3_114 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file=merged, label="Assert.AreEqual(id2, p.Ids[1])", span="199-199"];
m6_3_109 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file=merged, label="var d = new JsonDeserializer()", span="193-193"];
m6_3_110 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file=merged, label="var response = new RestResponse { Content = data.ToString() }", span="194-194"];
m6_3_111 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file=merged, label="var p = d.Deserialize<GuidList>(response)", span="195-195"];
m6_3_112 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file=merged, label="Assert.AreEqual(2, p.Ids.Count)", span="197-197"];
m6_3_115 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", span="185-185"];
m6_8_114 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", file=merged, label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", span="190-190"];
m6_8_115 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", file=merged, label="var xmlpath = this.PathFor(''NestedListSample.xml'')", span="192-192"];
m6_8_116 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", file=merged, label="var doc = XDocument.Load(xmlpath)", span="193-193"];
m6_8_117 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", file=merged, label="var xml = new XmlDeserializer()", span="194-194"];
m6_8_118 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", file=merged, label="var output = xml.Deserialize<InlineListSample>(new RestResponse { Content = doc.ToString() })", span="195-195"];
m6_8_119 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", file=merged, label="Assert.IsNotEmpty(output.images)", span="197-197"];
m6_8_120 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", file=merged, label="Assert.AreEqual(4, output.images.Count)", span="198-198"];
m6_8_121 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", file=merged, label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", span="190-190"];
m6_3_31 [cluster="System.IO.File.ReadAllText(string)", file=merged, label="Entry System.IO.File.ReadAllText(string)", span="0-0"];
m6_8_624 [cluster="System.DateTime.ToString(System.IFormatProvider)", file=merged, label="Entry System.DateTime.ToString(System.IFormatProvider)", span="0-0"];
m6_1_16 [cluster="RestSharp.IRestRequest.AddParameter(string, object)", file=merged, label="Entry RestSharp.IRestRequest.AddParameter(string, object)", span="234-234"];
m6_1_17 [cluster="RestSharp.IRestRequest.AddParameter(string, object)", file=merged, label="Exit RestSharp.IRestRequest.AddParameter(string, object)", span="234-234"];
m6_8_443 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValues()", file=merged, label="Entry RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValues()", span="896-896"];
m6_8_636 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValues()", file=merged, label="var doc = new XDocument()", span="898-898"];
m6_8_637 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValues()", file=merged, label="var root = new XElement(''NullableValues'')", span="899-899"];
m6_8_641 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValues()", file=merged, label="doc.Add(root)", span="908-908"];
m6_8_642 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValues()", file=merged, label="return doc.ToString();", span="910-910"];
m6_8_638 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValues()", file=merged, label="var idElement = new XElement(''Id'', null)", span="900-900"];
m6_8_640 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValues()", file=merged, label="root.Add(idElement,\r\n                new XElement(''StartDate'', null),\r\n                new XElement(''UniqueId'', null))", span="904-906"];
m6_8_639 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValues()", file=merged, label="idElement.SetAttributeValue(''SomeAttribute'', ''SomeAttribute_Value'')", span="902-902"];
m6_8_643 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValues()", file=merged, label="Exit RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValues()", span="896-896"];
m6_3_39 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", span="83-83"];
m6_3_40 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", file=merged, label="var doc = File.ReadAllText(Path.Combine(''SampleData'', ''jsonlists.txt''))", span="85-85"];
m6_3_41 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", file=merged, label="var json = new JsonDeserializer()", span="86-86"];
m6_3_42 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", file=merged, label="var output = json.Deserialize<JsonLists>(new RestResponse { Content = doc })", span="87-87"];
m6_3_43 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", file=merged, label="Assert.IsNotEmpty(output.Names)", span="89-89"];
m6_3_44 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", file=merged, label="Assert.IsNotEmpty(output.Numbers)", span="90-90"];
m6_3_45 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", span="83-83"];
m6_3_368 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root_Alternative_Culture()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root_Alternative_Culture()", span="534-534"];
m6_3_369 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root_Alternative_Culture()", file=merged, label="new CultureChange(ALTERNATIVE_CULTURE)", span="536-536"];
m6_3_370 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root_Alternative_Culture()", file=merged, label="this.Can_Deserialize_Names_With_Dashes_With_Default_Root()", span="538-538"];
m6_3_371 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root_Alternative_Culture()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root_Alternative_Culture()", span="534-534"];
m6_8_122 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", file=merged, label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", span="202-202"];
m6_8_123 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", file=merged, label="var doc = CreateXmlWithEmptyNestedList()", span="204-204"];
m6_8_124 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", file=merged, label="var xml = new XmlDeserializer()", span="205-205"];
m6_8_125 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", file=merged, label="var output = xml.Deserialize<EmptyListSample>(new RestResponse { Content = doc })", span="206-206"];
m6_8_126 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", file=merged, label="Assert.NotNull(output.images)", span="208-208"];
m6_8_127 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", file=merged, label="Assert.NotNull(output.Images)", span="209-209"];
m6_8_128 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", file=merged, label="Assert.IsEmpty(output.images)", span="210-210"];
m6_8_129 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", file=merged, label="Assert.IsEmpty(output.Images)", span="211-211"];
m6_8_130 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", file=merged, label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", span="202-202"];
m6_8_296 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file=merged, label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", span="410-410"];
m6_8_297 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file=merged, label="var doc = CreateDashesXml()", span="412-412"];
m6_8_298 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file=merged, label="var response = new RestResponse { Content = doc }", span="413-413"];
m6_8_299 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file=merged, label="var d = new XmlDeserializer()", span="414-414"];
m6_8_300 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file=merged, label="var p = d.Deserialize<PersonForXml>(response)", span="415-415"];
m6_8_301 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file=merged, label="Assert.AreEqual(''John Sheehan'', p.Name)", span="417-417"];
m6_8_302 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file=merged, label="Assert.AreEqual(new DateTime(2009, 9, 25, 0, 6, 1), p.StartDate)", span="418-418"];
m6_8_303 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file=merged, label="Assert.AreEqual(28, p.Age)", span="419-419"];
m6_8_304 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file=merged, label="Assert.AreEqual(long.MaxValue, p.BigNumber)", span="420-420"];
m6_8_305 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file=merged, label="Assert.AreEqual(99.9999m, p.Percent)", span="421-421"];
m6_8_306 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file=merged, label="Assert.AreEqual(false, p.IsCool)", span="422-422"];
m6_8_307 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file=merged, label="Assert.AreEqual(new Guid(GUID_STRING), p.UniqueId)", span="423-423"];
m6_8_308 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file=merged, label="Assert.AreEqual(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="424-424"];
m6_8_309 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file=merged, label="Assert.AreEqual(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="425-425"];
m6_8_310 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file=merged, label="Assert.NotNull(p.Friends)", span="426-426"];
m6_8_311 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file=merged, label="Assert.AreEqual(10, p.Friends.Count)", span="427-427"];
m6_8_312 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file=merged, label="Assert.NotNull(p.BestFriend)", span="428-428"];
m6_8_313 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file=merged, label="Assert.AreEqual(''The Fonz'', p.BestFriend.Name)", span="429-429"];
m6_8_314 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file=merged, label="Assert.AreEqual(1952, p.BestFriend.Since)", span="430-430"];
m6_8_315 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file=merged, label="Assert.NotNull(p.Foes)", span="431-431"];
m6_8_316 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file=merged, label="Assert.AreEqual(5, p.Foes.Count)", span="432-432"];
m6_8_317 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file=merged, label="Assert.AreEqual(''Yankees'', p.Foes.Team)", span="433-433"];
m6_8_318 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file=merged, label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", span="410-410"];
m6_6_60 [cluster="System.Action<T1, T2>.Invoke(T1, T2)", file=merged, label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0"];
m6_24 [cluster="string.Join(string, params string[])", file=merged, label="Entry string.Join(string, params string[])", span="0-0"];
m6_6_11 [cluster="RestSharp.RestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring, System.Func<RestSharp.IHttp, System.Action<RestSharp.HttpResponse>, string, System.Net.HttpWebRequest>)", file=merged, label="Entry RestSharp.RestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring, System.Func<RestSharp.IHttp, System.Action<RestSharp.HttpResponse>, string, System.Net.HttpWebRequest>)", span="80-80"];
m6_6_19 [cluster="RestSharp.RestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring, System.Func<RestSharp.IHttp, System.Action<RestSharp.HttpResponse>, string, System.Net.HttpWebRequest>)", file=merged, label="var http = HttpFactory.Create()", span="84-84"];
m6_6_20 [cluster="RestSharp.RestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring, System.Func<RestSharp.IHttp, System.Action<RestSharp.HttpResponse>, string, System.Net.HttpWebRequest>)", file=merged, label="AuthenticateIfNeeded(this, request)", span="85-85"];
m6_6_21 [cluster="RestSharp.RestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring, System.Func<RestSharp.IHttp, System.Action<RestSharp.HttpResponse>, string, System.Net.HttpWebRequest>)", file=merged, label="ConfigureHttp(request, http)", span="87-87"];
m6_6_22 [cluster="RestSharp.RestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring, System.Func<RestSharp.IHttp, System.Action<RestSharp.HttpResponse>, string, System.Net.HttpWebRequest>)", file=merged, label="var asyncHandle = new RestRequestAsyncHandle()", span="89-89"];
m6_6_23 [cluster="RestSharp.RestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring, System.Func<RestSharp.IHttp, System.Action<RestSharp.HttpResponse>, string, System.Net.HttpWebRequest>)", file=merged, label="Action<HttpResponse> response_cb = r => ProcessResponse(request, r, asyncHandle, callback)", span="91-91"];
m6_6_28 [cluster="RestSharp.RestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring, System.Func<RestSharp.IHttp, System.Action<RestSharp.HttpResponse>, string, System.Net.HttpWebRequest>)", file=merged, label="asyncHandle.WebRequest = getWebRequest(http, response_cb, httpMethod)", span="103-103"];
m6_6_29 [cluster="RestSharp.RestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring, System.Func<RestSharp.IHttp, System.Action<RestSharp.HttpResponse>, string, System.Net.HttpWebRequest>)", file=merged, label="return asyncHandle;", span="104-104"];
m6_6_24 [cluster="RestSharp.RestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring, System.Func<RestSharp.IHttp, System.Action<RestSharp.HttpResponse>, string, System.Net.HttpWebRequest>)", file=merged, label="UseSynchronizationContext && SynchronizationContext.Current != null", span="94-94"];
m6_6_26 [cluster="RestSharp.RestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring, System.Func<RestSharp.IHttp, System.Action<RestSharp.HttpResponse>, string, System.Net.HttpWebRequest>)", file=merged, label="var cb = response_cb", span="97-97"];
m6_6_27 [cluster="RestSharp.RestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring, System.Func<RestSharp.IHttp, System.Action<RestSharp.HttpResponse>, string, System.Net.HttpWebRequest>)", file=merged, label="response_cb = resp => ctx.Post(s => cb(resp), null)", span="99-99"];
m6_6_25 [cluster="RestSharp.RestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring, System.Func<RestSharp.IHttp, System.Action<RestSharp.HttpResponse>, string, System.Net.HttpWebRequest>)", file=merged, label="var ctx = SynchronizationContext.Current", span="96-96"];
m6_6_30 [cluster="RestSharp.RestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring, System.Func<RestSharp.IHttp, System.Action<RestSharp.HttpResponse>, string, System.Net.HttpWebRequest>)", file=merged, label="Exit RestSharp.RestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring, System.Func<RestSharp.IHttp, System.Action<RestSharp.HttpResponse>, string, System.Net.HttpWebRequest>)", span="80-80"];
m6_1_26 [cluster="RestSharp.IRestRequest.AddUrlSegment(string, string)", file=merged, label="Entry RestSharp.IRestRequest.AddUrlSegment(string, string)", span="287-287"];
m6_1_27 [cluster="RestSharp.IRestRequest.AddUrlSegment(string, string)", file=merged, label="Exit RestSharp.IRestRequest.AddUrlSegment(string, string)", span="287-287"];
m6_3_133 [cluster="System.DateTime.AddSeconds(double)", file=merged, label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m6_3_185 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Json_Using_DeserializeAs_Attribute()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Json_Using_DeserializeAs_Attribute()", span="284-284"];
m6_3_186 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Json_Using_DeserializeAs_Attribute()", file=merged, label="string content = ''{\''sid\'':\''asdasdasdasdasdasdasda\'',\''friendlyName\'':\''VeryNiceName\'',\''oddballPropertyName\'':\''blahblah\''}''", span="286-286"];
m6_3_187 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Json_Using_DeserializeAs_Attribute()", file=merged, label="var json = new JsonDeserializer { RootElement = ''users'' }", span="287-287"];
m6_3_188 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Json_Using_DeserializeAs_Attribute()", file=merged, label="var output = json.Deserialize<Oddball>(new RestResponse { Content = content })", span="288-288"];
m6_3_189 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Json_Using_DeserializeAs_Attribute()", file=merged, label="Assert.NotNull(output)", span="290-290"];
m6_3_190 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Json_Using_DeserializeAs_Attribute()", file=merged, label="Assert.AreEqual(''blahblah'', output.GoodPropertyName)", span="291-291"];
m6_3_191 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Json_Using_DeserializeAs_Attribute()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Json_Using_DeserializeAs_Attribute()", span="284-284"];
m6_9 [cluster="RestSharp.IntegrationTests.Helpers.SimpleServer.Create(string, System.Action<System.Net.HttpListenerContext>, System.Net.AuthenticationSchemes)", file=merged, label="Entry RestSharp.IntegrationTests.Helpers.SimpleServer.Create(string, System.Action<System.Net.HttpListenerContext>, System.Net.AuthenticationSchemes)", span="19-19"];
m6_7_102 [cluster="System.Type.GetProperties()", file=merged, label="Entry System.Type.GetProperties()", span="0-0"];
m6_2_58 [cluster="System.Type.GetProperties()", file=merged, label="Entry System.Type.GetProperties()", span="0-0"];
m6_7_0 [cluster="RestSharp.RestRequest.RestRequest()", file=merged, label="Entry RestSharp.RestRequest.RestRequest()", span="63-63"];
m6_7_1 [cluster="RestSharp.RestRequest.RestRequest()", file=merged, label="this.Parameters = new List<Parameter>()", span="65-65"];
m6_7_2 [cluster="RestSharp.RestRequest.RestRequest()", file=merged, label="this.Files = new List<FileParameter>()", span="66-66"];
m6_7_3 [cluster="RestSharp.RestRequest.RestRequest()", file=merged, label="this.XmlSerializer = new XmlSerializer()", span="67-67"];
m6_7_4 [cluster="RestSharp.RestRequest.RestRequest()", file=merged, label="this.JsonSerializer = new JsonSerializer()", span="68-68"];
m6_7_5 [cluster="RestSharp.RestRequest.RestRequest()", file=merged, label="this.OnBeforeDeserialization = r => { }", span="70-70"];
m6_7_6 [cluster="RestSharp.RestRequest.RestRequest()", file=merged, label="Exit RestSharp.RestRequest.RestRequest()", span="63-63"];
m6_2_168 [cluster="System.Convert.ToString(object, System.IFormatProvider)", file=merged, label="Entry System.Convert.ToString(object, System.IFormatProvider)", span="0-0"];
m6_7_8 [cluster="RestSharp.Serializers.XmlSerializer.XmlSerializer()", file=merged, label="Entry RestSharp.Serializers.XmlSerializer.XmlSerializer()", span="33-33"];
m6_7_123 [cluster="RestSharp.RestRequest.AddParameter(string, object, string, RestSharp.ParameterType)", file=merged, label="Entry RestSharp.RestRequest.AddParameter(string, object, string, RestSharp.ParameterType)", span="394-394"];
m6_7_124 [cluster="RestSharp.RestRequest.AddParameter(string, object, string, RestSharp.ParameterType)", file=merged, label="return this.AddParameter(new Parameter\r\n            {\r\n                Name = name,\r\n                Value = value,\r\n                \\nContentType = contentType,\r\n                Type = type\r\n            });", span="396-402"];
m6_7_125 [cluster="RestSharp.RestRequest.AddParameter(string, object, string, RestSharp.ParameterType)", file=merged, label="Exit RestSharp.RestRequest.AddParameter(string, object, string, RestSharp.ParameterType)", span="394-394"];
m6_7_146 [cluster="RestSharp.RestRequest.AddQueryParameter(string, string)", file=merged, label="Entry RestSharp.RestRequest.AddQueryParameter(string, string)", span="454-454"];
m6_7_147 [cluster="RestSharp.RestRequest.AddQueryParameter(string, string)", file=merged, label="return this.AddParameter(name, value, ParameterType.QueryString);", span="456-456"];
m6_7_148 [cluster="RestSharp.RestRequest.AddQueryParameter(string, string)", file=merged, label="Exit RestSharp.RestRequest.AddQueryParameter(string, string)", span="454-454"];
m6_7_103 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file=merged, label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0"];
m6_8_295 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file=merged, label="Entry RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", span="635-635"];
m6_8_488 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file=merged, label="int i = 0", span="657-657"];
m6_8_473 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file=merged, label="var doc = new XDocument()", span="637-637"];
m6_8_474 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file=merged, label="var root = new XElement(''Person'')", span="638-638"];
m6_8_500 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file=merged, label="doc.Add(root)", span="676-676"];
m6_8_501 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file=merged, label="return doc.ToString();", span="678-678"];
m6_8_475 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file=merged, label="root.Add(new XElement(''Name'', ''John Sheehan''))", span="640-640"];
m6_8_476 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file=merged, label="root.Add(new XElement(''Start_Date'', new DateTime(2009, 9, 25, 0, 6, 1)))", span="641-641"];
m6_8_477 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file=merged, label="root.Add(new XAttribute(''Age'', 28))", span="642-642"];
m6_8_478 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file=merged, label="root.Add(new XElement(''Percent'', 99.9999m))", span="643-643"];
m6_8_479 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file=merged, label="root.Add(new XElement(''Big_Number'', long.MaxValue))", span="644-644"];
m6_8_480 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file=merged, label="root.Add(new XAttribute(''Is_Cool'', false))", span="645-645"];
m6_8_481 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file=merged, label="root.Add(new XElement(''Ignore'', ''dummy''))", span="646-646"];
m6_8_482 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file=merged, label="root.Add(new XAttribute(''Read_Only'', ''dummy''))", span="647-647"];
m6_8_483 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file=merged, label="root.Add(new XElement(''Unique_Id'', new Guid(GUID_STRING)))", span="648-648"];
m6_8_484 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file=merged, label="root.Add(new XElement(''Url'', ''http://example.com''))", span="649-649"];
m6_8_485 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file=merged, label="root.Add(new XElement(''Url_Path'', ''/foo/bar''))", span="650-650"];
m6_8_486 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file=merged, label="root.Add(new XElement(''Best_Friend'',\r\n                new XElement(''Name'', ''The Fonz''),\r\n                new XAttribute(''\\nSince'', 1952)))", span="651-653"];
m6_8_492 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file=merged, label="root.Add(friends)", span="664-664"];
m6_8_499 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file=merged, label="root.Add(foes)", span="675-675"];
m6_8_487 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file=merged, label="var friends = new XElement(''Friends'')", span="655-655"];
m6_8_490 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file=merged, label="friends.Add(new XElement(''Friend'',\r\n                    new XElement(''Name'', ''Friend'' + i),\r\n                    new XAttribute(''\\nSince'', DateTime.Now.Year - i)))", span="659-661"];
m6_8_489 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file=merged, label="i < 10", span="657-657"];
m6_8_491 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file=merged, label="i++", span="657-657"];
m6_8_493 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file=merged, label="var foes = new XElement(''Foes'')", span="666-666"];
m6_8_494 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file=merged, label="foes.Add(new XAttribute(''Team'', ''Yankees''))", span="668-668"];
m6_8_497 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file=merged, label="foes.Add(new XElement(''Foe'', new XElement(''Nickname'', ''Foe'' + i)))", span="672-672"];
m6_8_495 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file=merged, label="int i = 0", span="670-670"];
m6_8_496 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file=merged, label="i < 5", span="670-670"];
m6_8_498 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file=merged, label="i++", span="670-670"];
m6_8_502 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file=merged, label="Exit RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", span="635-635"];
m6_7_15 [cluster="RestSharp.RestRequest.RestRequest(string)", file=merged, label="Entry RestSharp.RestRequest.RestRequest(string)", span="86-86"];
m6_12 [cluster="RestSharp.RestRequest.RestRequest(string)", file=merged, label="Entry RestSharp.RestRequest.RestRequest(string)", span="86-86"];
m6_7_16 [cluster="RestSharp.RestRequest.RestRequest(string)", file=merged, label="Exit RestSharp.RestRequest.RestRequest(string)", span="86-86"];
m6_8_376 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowerCasedRootElementWithDashesXml()", file=merged, label="Entry RestSharp.Tests.XmlDeserializerTests.CreateLowerCasedRootElementWithDashesXml()", span="773-773"];
m6_8_564 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowerCasedRootElementWithDashesXml()", file=merged, label="var doc = new XDocument()", span="775-775"];
m6_8_565 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowerCasedRootElementWithDashesXml()", file=merged, label="var root = new XElement(''incoming-invoices'',\r\n                new XElement(''incoming-invoice'', new XElement(''concept-id'', \\n45)))", span="776-777"];
m6_8_566 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowerCasedRootElementWithDashesXml()", file=merged, label="doc.Add(root)", span="779-779"];
m6_8_567 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowerCasedRootElementWithDashesXml()", file=merged, label="return doc.ToString();", span="781-781"];
m6_8_568 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowerCasedRootElementWithDashesXml()", file=merged, label="Exit RestSharp.Tests.XmlDeserializerTests.CreateLowerCasedRootElementWithDashesXml()", span="773-773"];
m6_8_195 [cluster="System.TimeSpan.TimeSpan(int, int, int)", file=merged, label="Entry System.TimeSpan.TimeSpan(int, int, int)", span="0-0"];
m6_3_406 [cluster="System.TimeSpan.TimeSpan(int, int, int)", file=merged, label="Entry System.TimeSpan.TimeSpan(int, int, int)", span="0-0"];
m6_3_433 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", span="630-630"];
m6_3_434 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", file=merged, label="var payload = this.GetPayLoad<DateTimeTestStructure>(''datetimes.txt'')", span="632-632"];
m6_3_435 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", file=merged, label="Assert.NotNull(payload.NullableDateTimeWithValue)", span="634-634"];
m6_3_436 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", file=merged, label="Assert.AreEqual(\r\n                new DateTime(2011, 6, 30, 8, 15, 46, 929, DateTimeKind.Utc),\r\n                payload.NullableDateTimeWithValue.Value)", span="635-637"];
m6_3_437 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", span="630-630"];
m6_3_149 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file=merged, label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m6_11 [cluster="RestSharp.HttpBasicAuthenticator.HttpBasicAuthenticator(string, string)", file=merged, label="Entry RestSharp.HttpBasicAuthenticator.HttpBasicAuthenticator(string, string)", span="26-26"];
m6_3_247 [cluster="RestSharp.Tests.JsonTests.Deserialization_Of_Undefined_Int_Value_Returns_Enum_Default()", file=merged, label="Entry RestSharp.Tests.JsonTests.Deserialization_Of_Undefined_Int_Value_Returns_Enum_Default()", span="368-368"];
m6_3_248 [cluster="RestSharp.Tests.JsonTests.Deserialization_Of_Undefined_Int_Value_Returns_Enum_Default()", file=merged, label="string data = @''{ ''''Integer'''' : 1024 }''", span="370-370"];
m6_3_249 [cluster="RestSharp.Tests.JsonTests.Deserialization_Of_Undefined_Int_Value_Returns_Enum_Default()", file=merged, label="var response = new RestResponse { Content = data }", span="371-371"];
m6_3_250 [cluster="RestSharp.Tests.JsonTests.Deserialization_Of_Undefined_Int_Value_Returns_Enum_Default()", file=merged, label="var json = new JsonDeserializer()", span="372-372"];
m6_3_251 [cluster="RestSharp.Tests.JsonTests.Deserialization_Of_Undefined_Int_Value_Returns_Enum_Default()", file=merged, label="var result = json.Deserialize<JsonEnumsTestStructure>(response)", span="373-373"];
m6_3_252 [cluster="RestSharp.Tests.JsonTests.Deserialization_Of_Undefined_Int_Value_Returns_Enum_Default()", file=merged, label="Assert.AreEqual(Disposition.Friendly, result.Integer)", span="375-375"];
m6_3_253 [cluster="RestSharp.Tests.JsonTests.Deserialization_Of_Undefined_Int_Value_Returns_Enum_Default()", file=merged, label="Exit RestSharp.Tests.JsonTests.Deserialization_Of_Undefined_Int_Value_Returns_Enum_Default()", span="368-368"];
m6_7_7 [cluster="System.Collections.Generic.List<T>.List()", file=merged, label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m6_8_26 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Into_Struct()", file=merged, label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Into_Struct()", span="66-66"];
m6_8_27 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Into_Struct()", file=merged, label="string content = ''<root><one>oneOneOne</one><two>twoTwoTwo</two><three>3</three></root>''", span="68-68"];
m6_8_28 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Into_Struct()", file=merged, label="var xml = new XmlDeserializer()", span="69-69"];
m6_8_29 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Into_Struct()", file=merged, label="var output = xml.Deserialize<SimpleStruct>(new RestResponse { Content = content })", span="70-70"];
m6_8_30 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Into_Struct()", file=merged, label="Assert.NotNull(output)", span="72-72"];
m6_8_31 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Into_Struct()", file=merged, label="Assert.AreEqual(''oneOneOne'', output.One)", span="73-73"];
m6_8_32 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Into_Struct()", file=merged, label="Assert.AreEqual(''twoTwoTwo'', output.Two)", span="74-74"];
m6_8_33 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Into_Struct()", file=merged, label="Assert.AreEqual(3, output.Three)", span="75-75"];
m6_8_34 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Into_Struct()", file=merged, label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Into_Struct()", span="66-66"];
m6_3_490 [cluster="RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", file=merged, label="Entry RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", span="968-968"];
m6_3_615 [cluster="RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", file=merged, label="var doc = new JsonObject()", span="970-970"];
m6_3_616 [cluster="RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", file=merged, label="doc[''Thing1''] = new JsonArray { ''Value1'', ''Value2'' }", span="972-972"];
m6_3_617 [cluster="RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", file=merged, label="doc[''Thing2''] = ''Thing2''", span="973-973"];
m6_3_618 [cluster="RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", file=merged, label="doc[''ThingRed''] = new JsonObject { { ''Name'', ''ThingRed'' }, { ''Color'', ''Red'' } }", span="974-974"];
m6_3_619 [cluster="RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", file=merged, label="doc[''ThingBlue''] = new JsonObject { { ''Name'', ''ThingBlue'' }, { ''Color'', ''Blue'' } }", span="975-975"];
m6_3_620 [cluster="RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", file=merged, label="return doc.ToString();", span="977-977"];
m6_3_621 [cluster="RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", file=merged, label="Exit RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", span="968-968"];
m6_3_304 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="Entry RestSharp.Tests.JsonTests.CreateJson()", span="875-875"];
m6_3_563 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="var doc = new JsonObject()", span="877-877"];
m6_3_564 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="doc[''Name''] = ''John Sheehan''", span="879-879"];
m6_3_565 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="doc[''StartDate''] = new DateTime(2009, 9, 25, 0, 6, 1, DateTimeKind.Utc)", span="880-880"];
m6_3_566 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="doc[''Age''] = 28", span="881-881"];
m6_3_567 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="doc[''Percent''] = 99.9999m", span="882-882"];
m6_3_568 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="doc[''BigNumber''] = long.MaxValue", span="883-883"];
m6_3_569 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="doc[''IsCool''] = false", span="884-884"];
m6_3_570 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="doc[''Ignore''] = ''dummy''", span="885-885"];
m6_3_571 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="doc[''ReadOnly''] = ''dummy''", span="886-886"];
m6_3_572 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="doc[''Url''] = ''http://example.com''", span="887-887"];
m6_3_573 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="doc[''UrlPath''] = ''/foo/bar''", span="888-888"];
m6_3_574 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="doc[''Order''] = ''third''", span="889-889"];
m6_3_575 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="doc[''Disposition''] = ''so_so''", span="890-890"];
m6_3_576 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="doc[''Guid''] = new Guid(GUID_STRING).ToString()", span="891-891"];
m6_3_577 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="doc[''EmptyGuid''] = ''''", span="892-892"];
m6_3_578 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="doc[''BestFriend''] = new JsonObject\r\n            {\r\n                {''Name'', ''The Fonz''},\r\n                {''Since'', \\n1952}\r\n            }", span="893-897"];
m6_3_584 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="doc[''Friends''] = friendsArray", span="910-910"];
m6_3_586 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="doc[''Foes''] = foesArray", span="918-918"];
m6_3_587 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="return doc.ToString();", span="920-920"];
m6_3_579 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="var friendsArray = new JsonArray()", span="899-899"];
m6_3_580 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="int i = 0", span="901-901"];
m6_3_582 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="friendsArray.Add(new JsonObject\r\n                {\r\n                    {''Name'', ''Friend'' + i},\r\n                    {''\\nSince'', DateTime.Now.Year - i}\r\n                })", span="903-907"];
m6_3_581 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="i < 10", span="901-901"];
m6_3_583 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="i++", span="901-901"];
m6_3_585 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="var foesArray = new JsonObject\r\n            {\r\n                {''dict1'', new JsonObject {{''Nickname'', ''Foe 1''}}},\r\n                {''\\ndict2'', new JsonObject {{''Nickname'', ''Foe 2''}}}\r\n            }", span="912-916"];
m6_3_588 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="Exit RestSharp.Tests.JsonTests.CreateJson()", span="875-875"];
m6_6_0 [cluster="RestSharp.RestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>)", file=merged, label="Entry RestSharp.RestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>)", span="33-33"];
m6_6_1 [cluster="RestSharp.RestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>)", file=merged, label="string method = Enum.GetName(typeof (Method), request.Method)", span="39-39"];
m6_6_2 [cluster="RestSharp.RestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>)", file=merged, label="request.Method", span="42-42"];
m6_6_7 [cluster="RestSharp.RestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>)", file=merged, label="return ExecuteAsync(request, callback, method, DoAsPostAsync);", span="48-48"];
m6_6_8 [cluster="RestSharp.RestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>)", file=merged, label="return ExecuteAsync(request, callback, method, DoAsGetAsync);", span="51-51"];
m6_6_3 [cluster="RestSharp.RestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>)", file=merged, label="Method.MERGE", span="44-44"];
m6_6_4 [cluster="RestSharp.RestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>)", file=merged, label="Method.PATCH", span="45-45"];
m6_6_5 [cluster="RestSharp.RestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>)", file=merged, label="Method.POST", span="46-46"];
m6_6_6 [cluster="RestSharp.RestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>)", file=merged, label="Method.PUT", span="47-47"];
m6_6_9 [cluster="RestSharp.RestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>)", file=merged, label="Exit RestSharp.RestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>)", span="33-33"];
m6_2_23 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, object)", file=merged, label="Entry RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, object)", span="145-145"];
m6_2_88 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, object)", file=merged, label="var list = (IList)Activator.CreateInstance(type)", span="147-147"];
m6_2_89 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, object)", file=merged, label="var listType = type.GetInterfaces().First(x => x.IsGenericType && x.GetGenericTypeDefinition() == typeof(IList<>))", span="148-148"];
m6_2_91 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, object)", file=merged, label="parent is IList", span="151-151"];
m6_2_92 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, object)", file=merged, label="(IList)parent", span="153-153"];
m6_2_104 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, object)", file=merged, label="list.Add(ConvertValue(itemType, parent))", span="185-185"];
m6_2_95 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, object)", file=merged, label="list.Add(item)", span="158-158"];
m6_2_98 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, object)", file=merged, label="list.Add(null)", span="164-164"];
m6_2_99 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, object)", file=merged, label="list.Add(element.ToString())", span="168-168"];
m6_2_101 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, object)", file=merged, label="list.Add(null)", span="174-174"];
m6_2_103 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, object)", file=merged, label="list.Add(item)", span="179-179"];
m6_2_105 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, object)", file=merged, label="return list;", span="188-188"];
m6_2_90 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, object)", file=merged, label="var itemType = listType.GetGenericArguments()[0]", span="149-149"];
m6_2_93 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, object)", file=merged, label="itemType.IsPrimitive", span="155-155"];
m6_2_94 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, object)", file=merged, label="var item = ConvertValue(itemType, element)", span="157-157"];
m6_2_102 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, object)", file=merged, label="var item = ConvertValue(itemType, element)", span="178-178"];
m6_2_97 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, object)", file=merged, label="element == null", span="162-162"];
m6_2_100 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, object)", file=merged, label="element == null", span="172-172"];
m6_2_96 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, object)", file=merged, label="itemType == typeof(string)", span="160-160"];
m6_2_106 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, object)", file=merged, label="Exit RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, object)", span="145-145"];
m6_2_179 [cluster="System.TimeSpan.TryParse(string, out System.TimeSpan)", file=merged, label="Entry System.TimeSpan.TryParse(string, out System.TimeSpan)", span="0-0"];
m6_8_14 [cluster="RestSharp.RestResponse.RestResponse()", file=merged, label="Entry RestSharp.RestResponse.RestResponse()", span="173-173"];
m6_3_9 [cluster="RestSharp.RestResponse.RestResponse()", file=merged, label="Entry RestSharp.RestResponse.RestResponse()", span="173-173"];
m6_3_11 [cluster="decimal.Parse(string, System.Globalization.NumberStyles, System.IFormatProvider)", file=merged, label="Entry decimal.Parse(string, System.Globalization.NumberStyles, System.IFormatProvider)", span="0-0"];
m6_2_176 [cluster="decimal.Parse(string, System.Globalization.NumberStyles, System.IFormatProvider)", file=merged, label="Entry decimal.Parse(string, System.Globalization.NumberStyles, System.IFormatProvider)", span="0-0"];
m6_7_17 [cluster="RestSharp.RestRequest.RestRequest(string, RestSharp.Method)", file=merged, label="Entry RestSharp.RestRequest.RestRequest(string, RestSharp.Method)", span="93-93"];
m6_7_18 [cluster="RestSharp.RestRequest.RestRequest(string, RestSharp.Method)", file=merged, label="this.Resource = resource", span="95-95"];
m6_7_19 [cluster="RestSharp.RestRequest.RestRequest(string, RestSharp.Method)", file=merged, label="this.Method = method", span="96-96"];
m6_7_20 [cluster="RestSharp.RestRequest.RestRequest(string, RestSharp.Method)", file=merged, label="Exit RestSharp.RestRequest.RestRequest(string, RestSharp.Method)", span="93-93"];
m6_7_66 [cluster="RestSharp.Serializers.ISerializer.Serialize(object)", file=merged, label="Entry RestSharp.Serializers.ISerializer.Serialize(object)", span="20-20"];
m6_8_272 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file=merged, label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", span="383-383"];
m6_8_273 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file=merged, label="var doc = CreateUnderscoresXml()", span="385-385"];
m6_8_274 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file=merged, label="var response = new RestResponse { Content = doc }", span="386-386"];
m6_8_275 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file=merged, label="var d = new XmlDeserializer()", span="387-387"];
m6_8_276 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file=merged, label="var p = d.Deserialize<PersonForXml>(response)", span="388-388"];
m6_8_277 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file=merged, label="Assert.AreEqual(''John Sheehan'', p.Name)", span="390-390"];
m6_8_278 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file=merged, label="Assert.AreEqual(new DateTime(2009, 9, 25, 0, 6, 1), p.StartDate)", span="391-391"];
m6_8_279 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file=merged, label="Assert.AreEqual(28, p.Age)", span="392-392"];
m6_8_280 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file=merged, label="Assert.AreEqual(long.MaxValue, p.BigNumber)", span="393-393"];
m6_8_281 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file=merged, label="Assert.AreEqual(99.9999m, p.Percent)", span="394-394"];
m6_8_282 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file=merged, label="Assert.AreEqual(false, p.IsCool)", span="395-395"];
m6_8_283 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file=merged, label="Assert.AreEqual(new Guid(GUID_STRING), p.UniqueId)", span="396-396"];
m6_8_284 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file=merged, label="Assert.AreEqual(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="397-397"];
m6_8_285 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file=merged, label="Assert.AreEqual(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="398-398"];
m6_8_286 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file=merged, label="Assert.NotNull(p.Friends)", span="399-399"];
m6_8_287 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file=merged, label="Assert.AreEqual(10, p.Friends.Count)", span="400-400"];
m6_8_288 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file=merged, label="Assert.NotNull(p.BestFriend)", span="401-401"];
m6_8_289 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file=merged, label="Assert.AreEqual(''The Fonz'', p.BestFriend.Name)", span="402-402"];
m6_8_290 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file=merged, label="Assert.AreEqual(1952, p.BestFriend.Since)", span="403-403"];
m6_8_291 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file=merged, label="Assert.NotNull(p.Foes)", span="404-404"];
m6_8_292 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file=merged, label="Assert.AreEqual(5, p.Foes.Count)", span="405-405"];
m6_8_293 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file=merged, label="Assert.AreEqual(''Yankees'', p.Foes.Team)", span="406-406"];
m6_8_294 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file=merged, label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", span="383-383"];
m6_7_101 [cluster="object.GetType()", file=merged, label="Entry object.GetType()", span="0-0"];
m6_2_20 [cluster="object.GetType()", file=merged, label="Entry object.GetType()", span="0-0"];
m6_6_43 [cluster="System.Threading.SynchronizationContext.Post(System.Threading.SendOrPostCallback, object)", file=merged, label="Entry System.Threading.SynchronizationContext.Post(System.Threading.SendOrPostCallback, object)", span="0-0"];
m6_7_75 [cluster="RestSharp.RestRequest.AddXmlBody(object)", file=merged, label="Entry RestSharp.RestRequest.AddXmlBody(object)", span="247-247"];
m6_7_76 [cluster="RestSharp.RestRequest.AddXmlBody(object)", file=merged, label="this.RequestFormat = DataFormat.Xml", span="249-249"];
m6_7_77 [cluster="RestSharp.RestRequest.AddXmlBody(object)", file=merged, label="return this.AddBody(obj, '''');", span="250-250"];
m6_7_78 [cluster="RestSharp.RestRequest.AddXmlBody(object)", file=merged, label="Exit RestSharp.RestRequest.AddXmlBody(object)", span="247-247"];
m6_8_3 [cluster="System.IO.Path.Combine(string, string)", file=merged, label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m6_3_30 [cluster="System.IO.Path.Combine(string, string)", file=merged, label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m6_3_46 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", span="94-94"];
m6_3_47 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", file=merged, label="string content = ''{\''users\'':[\''johnsheehan\'',\''jagregory\'',\''drusellers\'',\''structuremap\'']}''", span="96-96"];
m6_3_48 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", file=merged, label="var json = new JsonDeserializer { RootElement = ''users'' }", span="97-97"];
m6_3_49 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", file=merged, label="var output = json.Deserialize<List<string>>(new RestResponse { Content = content })", span="98-98"];
m6_3_50 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", file=merged, label="Assert.IsNotEmpty(output)", span="100-100"];
m6_3_51 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", span="94-94"];
m6_3_438 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Null()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Null()", span="641-641"];
m6_3_439 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Null()", file=merged, label="var payload = this.GetPayLoad<DateTimeTestStructure>(''datetimes.txt'')", span="643-643"];
m6_3_440 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Null()", file=merged, label="Assert.Null(payload.NullableDateTimeWithNull)", span="645-645"];
m6_3_441 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Null()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Null()", span="641-641"];
m6_8_214 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file=merged, label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", span="312-312"];
m6_8_215 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file=merged, label="var doc = CreateElementsXml()", span="314-314"];
m6_8_216 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file=merged, label="var response = new RestResponse { Content = doc }", span="315-315"];
m6_8_217 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file=merged, label="var d = new XmlDeserializer()", span="316-316"];
m6_8_218 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file=merged, label="var p = d.Deserialize<PersonForXml>(response)", span="317-317"];
m6_8_219 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file=merged, label="Assert.AreEqual(''John Sheehan'', p.Name)", span="319-319"];
m6_8_220 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file=merged, label="Assert.AreEqual(new DateTime(2009, 9, 25, 0, 6, 1), p.StartDate)", span="320-320"];
m6_8_221 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file=merged, label="Assert.AreEqual(28, p.Age)", span="321-321"];
m6_8_222 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file=merged, label="Assert.AreEqual(long.MaxValue, p.BigNumber)", span="322-322"];
m6_8_223 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file=merged, label="Assert.AreEqual(99.9999m, p.Percent)", span="323-323"];
m6_8_224 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file=merged, label="Assert.AreEqual(false, p.IsCool)", span="324-324"];
m6_8_225 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file=merged, label="Assert.AreEqual(new Guid(GUID_STRING), p.UniqueId)", span="325-325"];
m6_8_226 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file=merged, label="Assert.AreEqual(Guid.Empty, p.EmptyGuid)", span="326-326"];
m6_8_227 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file=merged, label="Assert.AreEqual(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="327-327"];
m6_8_228 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file=merged, label="Assert.AreEqual(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="328-328"];
m6_8_229 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file=merged, label="Assert.AreEqual(Order.Third, p.Order)", span="329-329"];
m6_8_230 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file=merged, label="Assert.AreEqual(Disposition.SoSo, p.Disposition)", span="330-330"];
m6_8_231 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file=merged, label="Assert.NotNull(p.Friends)", span="331-331"];
m6_8_232 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file=merged, label="Assert.AreEqual(10, p.Friends.Count)", span="332-332"];
m6_8_233 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file=merged, label="Assert.NotNull(p.BestFriend)", span="333-333"];
m6_8_234 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file=merged, label="Assert.AreEqual(''The Fonz'', p.BestFriend.Name)", span="334-334"];
m6_8_235 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file=merged, label="Assert.AreEqual(1952, p.BestFriend.Since)", span="335-335"];
m6_8_236 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file=merged, label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", span="312-312"];
m6_8_237 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file=merged, label="Entry RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", span="784-784"];
m6_8_569 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file=merged, label="var doc = new XDocument()", span="786-786"];
m6_8_570 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file=merged, label="var root = new XElement(''Person'')", span="787-787"];
m6_8_592 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file=merged, label="doc.Add(root)", span="817-817"];
m6_8_593 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file=merged, label="return doc.ToString();", span="819-819"];
m6_8_571 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file=merged, label="root.Add(new XElement(''Name'', ''John Sheehan''))", span="789-789"];
m6_8_572 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file=merged, label="root.Add(new XElement(''StartDate'', new DateTime(2009, 9, 25, 0, 6, 1)))", span="790-790"];
m6_8_573 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file=merged, label="root.Add(new XElement(''Age'', 28))", span="791-791"];
m6_8_574 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file=merged, label="root.Add(new XElement(''Percent'', 99.9999m))", span="792-792"];
m6_8_575 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file=merged, label="root.Add(new XElement(''BigNumber'', long.MaxValue))", span="793-793"];
m6_8_576 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file=merged, label="root.Add(new XElement(''IsCool'', false))", span="794-794"];
m6_8_577 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file=merged, label="root.Add(new XElement(''Ignore'', ''dummy''))", span="795-795"];
m6_8_578 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file=merged, label="root.Add(new XElement(''ReadOnly'', ''dummy''))", span="796-796"];
m6_8_579 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file=merged, label="root.Add(new XElement(''UniqueId'', new Guid(GUID_STRING)))", span="797-797"];
m6_8_580 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file=merged, label="root.Add(new XElement(''EmptyGuid'', ''''))", span="798-798"];
m6_8_581 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file=merged, label="root.Add(new XElement(''Url'', ''http://example.com''))", span="799-799"];
m6_8_582 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file=merged, label="root.Add(new XElement(''UrlPath'', ''/foo/bar''))", span="800-800"];
m6_8_583 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file=merged, label="root.Add(new XElement(''Order'', ''third''))", span="801-801"];
m6_8_584 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file=merged, label="root.Add(new XElement(''Disposition'', ''so-so''))", span="802-802"];
m6_8_585 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file=merged, label="root.Add(new XElement(''BestFriend'',\r\n                new XElement(''Name'', ''The Fonz''),\r\n                new XElement(''\\nSince'', 1952)))", span="803-805"];
m6_8_591 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file=merged, label="root.Add(friends)", span="816-816"];
m6_8_586 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file=merged, label="var friends = new XElement(''Friends'')", span="807-807"];
m6_8_587 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file=merged, label="int i = 0", span="809-809"];
m6_8_589 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file=merged, label="friends.Add(new XElement(''Friend'',\r\n                    new XElement(''Name'', ''Friend'' + i),\r\n                    new XElement(''\\nSince'', DateTime.Now.Year - i)))", span="811-813"];
m6_8_588 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file=merged, label="i < 10", span="809-809"];
m6_8_590 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file=merged, label="i++", span="809-809"];
m6_8_594 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file=merged, label="Exit RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", span="784-784"];
m6_8_427 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_String()", file=merged, label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_String()", span="574-574"];
m6_8_428 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_String()", file=merged, label="var xmlpath = this.PathFor(''boolean_from_string.xml'')", span="576-576"];
m6_8_429 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_String()", file=merged, label="var doc = XDocument.Load(xmlpath)", span="577-577"];
m6_8_430 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_String()", file=merged, label="var response = new RestResponse { Content = doc.ToString() }", span="578-578"];
m6_8_431 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_String()", file=merged, label="var d = new XmlDeserializer()", span="579-579"];
m6_8_432 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_String()", file=merged, label="var output = d.Deserialize<BooleanTest>(response)", span="580-580"];
m6_8_433 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_String()", file=merged, label="Assert.True(output.Value)", span="582-582"];
m6_8_434 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_String()", file=merged, label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_String()", span="574-574"];
m6_7_83 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file=merged, label="Entry RestSharp.RestRequest.AddObject(object, params string[])", span="275-275"];
m6_7_84 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file=merged, label="var type = obj.GetType()", span="278-278"];
m6_7_87 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file=merged, label="bool isAllowed = includedProperties.Length == 0 ||\r\n                                 (includedProperties.Length > 0 && includedProperties.Contains(\\nprop.Name))", span="283-284"];
m6_7_90 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file=merged, label="var val = prop.GetValue(obj, null)", span="290-290"];
m6_7_85 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file=merged, label="var props = type.GetProperties()", span="279-279"];
m6_7_86 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file=merged, label=props, span="281-281"];
m6_7_89 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file=merged, label="var propType = prop.PropertyType", span="289-289"];
m6_7_98 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file=merged, label="this.AddParameter(prop.Name, val)", span="317-317"];
m6_7_99 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file=merged, label="return this;", span="320-320"];
m6_7_88 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file=merged, label="!isAllowed", span="286-286"];
m6_7_92 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file=merged, label="propType.IsArray", span="295-295"];
m6_7_93 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file=merged, label="var elementType = propType.GetElementType()", span="297-297"];
m6_7_91 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file=merged, label="val == null", span="292-292"];
m6_7_94 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file=merged, label="((Array)val).Length > 0 &&\r\n                        elementType != null &&\r\n                        (elementType.IsPrimitive|| \\nelementType.IsValueType || elementType == typeof(string))", span="299-301"];
m6_7_95 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file=merged, label="var values = (from object item in ((Array)val)\r\n                                      select item.ToString())\r\n                                     \\n.ToArray<string>()", span="304-306"];
m6_7_97 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file=merged, label="val = string.Join('','', (string[])val)", span="313-313"];
m6_7_96 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file=merged, label="val = string.Join('','', values)", span="308-308"];
m6_7_100 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file=merged, label="Exit RestSharp.RestRequest.AddObject(object, params string[])", span="275-275"];
m6_2_171 [cluster="System.Type.FindEnumValue(string, System.Globalization.CultureInfo)", file=merged, label="Entry System.Type.FindEnumValue(string, System.Globalization.CultureInfo)", span="99-99"];
m6_6_67 [cluster="RestSharp.RestClient.DeserializeResponse<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>, \\nRestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle)", file=merged, label="Entry RestSharp.RestClient.DeserializeResponse<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>, \\nRestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle)", span="165-165"];
m6_6_80 [cluster="RestSharp.RestClient.DeserializeResponse<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>, \\nRestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle)", file=merged, label="IRestResponse<T> restResponse", span="169-169"];
m6_6_81 [cluster="RestSharp.RestClient.DeserializeResponse<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>, \\nRestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle)", file=merged, label="restResponse = Deserialize<T>(request, response)", span="173-173"];
m6_6_83 [cluster="RestSharp.RestClient.DeserializeResponse<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>, \\nRestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle)", file=merged, label="restResponse = new RestResponse<T>\r\n                {\r\n                    Request = request,\r\n                    ResponseStatus = \\nResponseStatus.Error,\r\n                    ErrorMessage = ex.Message,\r\n                    ErrorException = ex\r\n                }", span="177-183"];
m6_6_84 [cluster="RestSharp.RestClient.DeserializeResponse<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>, \\nRestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle)", file=merged, label="callback(restResponse, asyncHandle)", span="186-186"];
m6_6_82 [cluster="RestSharp.RestClient.DeserializeResponse<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>, \\nRestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle)", file=merged, label=Exception, span="175-175"];
m6_6_85 [cluster="RestSharp.RestClient.DeserializeResponse<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>, \\nRestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle)", file=merged, label="Exit RestSharp.RestClient.DeserializeResponse<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>, \\nRestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle)", span="165-165"];
m6_7_134 [cluster="System.ArgumentException.ArgumentException(string, string)", file=merged, label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m6_6_87 [cluster="RestSharp.RestResponse<T>.RestResponse()", file=merged, label="Entry RestSharp.RestResponse<T>.RestResponse()", span="141-141"];
m6_2_181 [cluster="RestSharp.Deserializers.JsonDeserializer.CreateAndMap(System.Type, object)", file=merged, label="Entry RestSharp.Deserializers.JsonDeserializer.CreateAndMap(System.Type, object)", span="331-331"];
m6_2_183 [cluster="RestSharp.Deserializers.JsonDeserializer.CreateAndMap(System.Type, object)", file=merged, label="var instance = Activator.CreateInstance(type)", span="333-333"];
m6_2_184 [cluster="RestSharp.Deserializers.JsonDeserializer.CreateAndMap(System.Type, object)", file=merged, label="Map(instance, (IDictionary<string, object>)element)", span="335-335"];
m6_2_185 [cluster="RestSharp.Deserializers.JsonDeserializer.CreateAndMap(System.Type, object)", file=merged, label="return instance;", span="337-337"];
m6_2_186 [cluster="RestSharp.Deserializers.JsonDeserializer.CreateAndMap(System.Type, object)", file=merged, label="Exit RestSharp.Deserializers.JsonDeserializer.CreateAndMap(System.Type, object)", span="331-331"];
m6_3_311 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", span="460-460"];
m6_3_312 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", file=merged, label="var data = File.ReadAllText(Path.Combine(''SampleData'', ''underscore_prefix.txt''))", span="462-462"];
m6_3_313 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", file=merged, label="var response = new RestResponse { Content = data }", span="463-463"];
m6_3_314 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", file=merged, label="var json = new JsonDeserializer { RootElement = ''User'' }", span="464-464"];
m6_3_315 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", file=merged, label="var output = json.Deserialize<SOUser>(response)", span="466-466"];
m6_3_316 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", file=merged, label="Assert.AreEqual(''John Sheehan'', output.DisplayName)", span="468-468"];
m6_3_317 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", file=merged, label="Assert.AreEqual(1786, output.Id)", span="469-469"];
m6_3_318 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", span="460-460"];
m6_20 [cluster="string.Substring(int)", file=merged, label="Entry string.Substring(int)", span="0-0"];
m6_2_22 [cluster="RestSharp.Deserializers.JsonDeserializer.FindRoot(string)", file=merged, label="Entry RestSharp.Deserializers.JsonDeserializer.FindRoot(string)", span="59-59"];
m6_2_27 [cluster="RestSharp.Deserializers.JsonDeserializer.FindRoot(string)", file=merged, label="var data = (IDictionary<string, object>)SimpleJson.DeserializeObject(content)", span="61-61"];
m6_2_28 [cluster="RestSharp.Deserializers.JsonDeserializer.FindRoot(string)", file=merged, label="RootElement.HasValue() && data.ContainsKey(RootElement)", span="63-63"];
m6_2_29 [cluster="RestSharp.Deserializers.JsonDeserializer.FindRoot(string)", file=merged, label="return data[RootElement];", span="65-65"];
m6_2_30 [cluster="RestSharp.Deserializers.JsonDeserializer.FindRoot(string)", file=merged, label="return data;", span="68-68"];
m6_2_31 [cluster="RestSharp.Deserializers.JsonDeserializer.FindRoot(string)", file=merged, label="Exit RestSharp.Deserializers.JsonDeserializer.FindRoot(string)", span="59-59"];
m6_8 [cluster="System.Uri.Uri(string)", file=merged, label="Entry System.Uri.Uri(string)", span="0-0"];
m6_3_372 [cluster="RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", file=merged, label="Entry RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", span="543-543"];
m6_3_373 [cluster="RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", file=merged, label="var doc = this.CreateJson()", span="545-545"];
m6_3_374 [cluster="RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", file=merged, label="var d = new JsonDeserializer()", span="546-546"];
m6_3_375 [cluster="RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", file=merged, label="var response = new RestResponse { Content = doc }", span="547-547"];
m6_3_376 [cluster="RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", file=merged, label="var p = d.Deserialize<PersonForJson>(response)", span="548-548"];
m6_3_377 [cluster="RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", file=merged, label="Assert.Null(p.IgnoreProxy)", span="550-550"];
m6_3_378 [cluster="RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", file=merged, label="Exit RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", span="543-543"];
m6_3_134 [cluster="System.DateTime.ToString(string)", file=merged, label="Entry System.DateTime.ToString(string)", span="0-0"];
m6_8_35 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", file=merged, label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", span="79-79"];
m6_8_36 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", file=merged, label="var xmlpath = this.PathFor(''xmllists.xml'')", span="81-81"];
m6_8_37 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", file=merged, label="var doc = XDocument.Load(xmlpath)", span="82-82"];
m6_8_38 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", file=merged, label="var xml = new XmlDeserializer()", span="83-83"];
m6_8_39 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", file=merged, label="var output = xml.Deserialize<SimpleTypesListSample>(new RestResponse { Content = doc.ToString() })", span="84-84"];
m6_8_40 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", file=merged, label="Assert.IsNotEmpty(output.Names)", span="86-86"];
m6_8_41 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", file=merged, label="Assert.IsNotEmpty(output.Numbers)", span="87-87"];
m6_8_42 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", file=merged, label="Assert.False(output.Names[0].Length == 0)", span="88-88"];
m6_8_43 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", file=merged, label="Assert.False(output.Numbers.Sum() == 0)", span="89-89"];
m6_8_44 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", file=merged, label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", span="79-79"];
m6_2_86 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file=merged, label="Entry RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", span="191-191"];
m6_2_115 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file=merged, label="var stringValue = Convert.ToString(value, Culture)", span="193-193"];
m6_2_116 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file=merged, label="type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>)", span="196-196"];
m6_2_119 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file=merged, label="type = type.GetGenericArguments()[0]", span="202-202"];
m6_2_120 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file=merged, label="type == typeof(Object) && value != null", span="205-205"];
m6_2_121 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file=merged, label="type = value.GetType()", span="207-207"];
m6_2_122 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file=merged, label="type.IsPrimitive", span="210-210"];
m6_2_123 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file=merged, label="return value.ChangeType(type, Culture);", span="212-212"];
m6_2_124 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file=merged, label="type.IsEnum", span="215-215"];
m6_2_125 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file=merged, label="return type.FindEnumValue(stringValue, Culture);", span="217-217"];
m6_2_126 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file=merged, label="type == typeof(Uri)", span="220-220"];
m6_2_128 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file=merged, label="type == typeof(string)", span="225-225"];
m6_2_130 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file=merged, label="type == typeof(DateTime)\r\n#if !PocketPC\r\n                || type == typeof(DateTimeOffset)", span="230-232"];
m6_2_131 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file=merged, label="DateTime dt", span="236-236"];
m6_2_135 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file=merged, label="type == typeof(DateTime)", span="251-251"];
m6_2_137 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file=merged, label="type == typeof(DateTimeOffset)", span="256-256"];
m6_2_139 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file=merged, label="type == typeof(Decimal)", span="262-262"];
m6_2_140 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file=merged, label="value is double", span="264-264"];
m6_2_141 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file=merged, label="return (decimal)((double)value);", span="265-265"];
m6_2_145 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file=merged, label="type == typeof(Guid)", span="272-272"];
m6_2_147 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file=merged, label="type == typeof(TimeSpan)", span="276-276"];
m6_2_148 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file=merged, label="TimeSpan timeSpan", span="278-278"];
m6_2_152 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file=merged, label="type.IsGenericType", span="287-287"];
m6_2_153 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file=merged, label="var genericTypeDef = type.GetGenericTypeDefinition()", span="289-289"];
m6_2_155 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file=merged, label="return BuildList(type, value);", span="293-293"];
m6_2_157 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file=merged, label="var keyType = type.GetGenericArguments()[0]", span="298-298"];
m6_2_159 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file=merged, label="return BuildDictionary(type, value);", span="303-303"];
m6_2_160 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file=merged, label="return CreateAndMap(type, value);", span="309-309"];
m6_2_161 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file=merged, label="type.IsSubclassOfRawGeneric(typeof(List<>))", span="312-312"];
m6_2_162 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file=merged, label="return BuildList(type, value);", span="315-315"];
m6_2_163 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file=merged, label="type == typeof(JsonObject)", span="317-317"];
m6_2_164 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file=merged, label="return BuildDictionary(typeof(Dictionary<string, object>), value);", span="320-320"];
m6_2_165 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file=merged, label="return CreateAndMap(type, value);", span="325-325"];
m6_2_117 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file=merged, label="String.IsNullOrEmpty(stringValue)", span="199-199"];
m6_2_127 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file=merged, label="return new Uri(stringValue, UriKind.RelativeOrAbsolute);", span="222-222"];
m6_2_129 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file=merged, label="return stringValue;", span="227-227"];
m6_2_133 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", color=green, community=0, file=merged, label="dt = DateTime.ParseExact(stringValue, DateFormat, Culture,\r\n                        DateTimeStyles.AssumeUniversal | DateTimeStyles.AdjustToUniversal)", prediction=10, span="240-241"];
m6_2_134 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file=merged, label="dt = stringValue.ParseJsonDate(Culture)", span="245-245"];
m6_2_142 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file=merged, label="stringValue.Contains(''e'')", span="267-267"];
m6_2_143 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file=merged, label="return Decimal.Parse(stringValue, NumberStyles.Float, Culture);", span="268-268"];
m6_2_144 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file=merged, label="return Decimal.Parse(stringValue, Culture);", span="270-270"];
m6_2_146 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file=merged, label="return string.IsNullOrEmpty(stringValue) ? Guid.Empty : new Guid(stringValue);", span="274-274"];
m6_2_149 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file=merged, label="TimeSpan.TryParse(stringValue, out timeSpan)", span="279-279"];
m6_2_151 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file=merged, label="return XmlConvert.ToTimeSpan(stringValue);", span="285-285"];
m6_2_118 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file=merged, label="return null;", span="200-200"];
m6_2_132 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file=merged, label="DateFormat.HasValue()", span="238-238"];
m6_2_136 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file=merged, label="return dt;", span="253-253"];
m6_2_138 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file=merged, label="return (DateTimeOffset)dt;", span="258-258"];
m6_2_166 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file=merged, label="return null;", span="328-328"];
m6_2_150 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file=merged, label="return timeSpan;", span="281-281"];
m6_2_154 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file=merged, label="genericTypeDef == typeof(List<>)", span="291-291"];
m6_2_156 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file=merged, label="genericTypeDef == typeof(Dictionary<,>)", span="296-296"];
m6_2_158 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file=merged, label="keyType == typeof(string)", span="301-301"];
m6_2_167 [cluster="RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", file=merged, label="Exit RestSharp.Deserializers.JsonDeserializer.ConvertValue(System.Type, object)", span="191-191"];
m6_8_151 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithNullValues()", file=merged, label="Entry RestSharp.Tests.XmlDeserializerTests.CreateXmlWithNullValues()", span="847-847"];
m6_8_612 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithNullValues()", file=merged, label="var doc = new XDocument()", span="849-849"];
m6_8_613 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithNullValues()", file=merged, label="var root = new XElement(''NullableValues'')", span="850-850"];
m6_8_615 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithNullValues()", file=merged, label="doc.Add(root)", span="856-856"];
m6_8_616 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithNullValues()", file=merged, label="return doc.ToString();", span="858-858"];
m6_8_614 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithNullValues()", file=merged, label="root.Add(new XElement(''Id'', null),\r\n                new XElement(''StartDate'', null),\r\n                new XElement(''UniqueId'', \\nnull))", span="852-854"];
m6_8_617 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithNullValues()", file=merged, label="Exit RestSharp.Tests.XmlDeserializerTests.CreateXmlWithNullValues()", span="847-847"];
m6_7_104 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file=merged, label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
m6_3_442 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTimeOffset()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_DateTimeOffset()", span="649-649"];
m6_3_443 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTimeOffset()", file=merged, label="var payload = this.GetPayLoad<DateTimeTestStructure>(''datetimes.txt'')", span="651-651"];
m6_3_444 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTimeOffset()", file=merged, label="Assert.AreEqual(\r\n                new DateTime(2011, 6, 30, 8, 15, 46, 929, DateTimeKind.Utc).ToString(''yyyy-MM-dd HH:mm:ss.fff''),\r\n                \\npayload.DateTimeOffset.ToString(''yyyy-MM-dd HH:mm:ss.fff''))", span="653-655"];
m6_3_445 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTimeOffset()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_DateTimeOffset()", span="649-649"];
m6_3_153 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", span="241-241"];
m6_3_154 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", file=merged, label="var doc = this.CreateJsonWithNullValues()", span="243-243"];
m6_3_155 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", file=merged, label="var json = new JsonDeserializer()", span="244-244"];
m6_3_156 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", file=merged, label="var output = json.Deserialize<NullableValues>(new RestResponse { Content = doc })", span="245-245"];
m6_3_157 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", file=merged, label="Assert.Null(output.Id)", span="247-247"];
m6_3_158 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", file=merged, label="Assert.Null(output.StartDate)", span="248-248"];
m6_3_159 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", file=merged, label="Assert.Null(output.UniqueId)", span="249-249"];
m6_3_160 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", span="241-241"];
m6_6_59 [cluster="RestSharp.RestClient.ConvertToRestResponse(RestSharp.IRestRequest, RestSharp.HttpResponse)", file=merged, label="Entry RestSharp.RestClient.ConvertToRestResponse(RestSharp.IRestRequest, RestSharp.HttpResponse)", span="533-533"];
m6_6_39 [cluster="RestSharp.RestClient.ProcessResponse(RestSharp.IRestRequest, RestSharp.HttpResponse, RestSharp.RestRequestAsyncHandle, System.Action<\\nRestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>)", file=merged, label="Entry RestSharp.RestClient.ProcessResponse(RestSharp.IRestRequest, RestSharp.HttpResponse, RestSharp.RestRequestAsyncHandle, System.Action<\\nRestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>)", span="117-117"];
m6_6_56 [cluster="RestSharp.RestClient.ProcessResponse(RestSharp.IRestRequest, RestSharp.HttpResponse, RestSharp.RestRequestAsyncHandle, System.Action<\\nRestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>)", file=merged, label="var restResponse = ConvertToRestResponse(request, httpResponse)", span="120-120"];
m6_6_57 [cluster="RestSharp.RestClient.ProcessResponse(RestSharp.IRestRequest, RestSharp.HttpResponse, RestSharp.RestRequestAsyncHandle, System.Action<\\nRestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>)", file=merged, label="callback(restResponse, asyncHandle)", span="121-121"];
m6_6_58 [cluster="RestSharp.RestClient.ProcessResponse(RestSharp.IRestRequest, RestSharp.HttpResponse, RestSharp.RestRequestAsyncHandle, System.Action<\\nRestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>)", file=merged, label="Exit RestSharp.RestClient.ProcessResponse(RestSharp.IRestRequest, RestSharp.HttpResponse, RestSharp.RestRequestAsyncHandle, System.Action<\\nRestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>)", span="117-117"];
m6_7_106 [cluster="object.ToString()", file=merged, label="Entry object.ToString()", span="0-0"];
m6_2_111 [cluster="object.ToString()", file=merged, label="Entry object.ToString()", span="0-0"];
m6_3_386 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", span="565-565"];
m6_3_387 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file=merged, label="var payload = this.GetPayLoad<TimeSpanTestStructure>(''timespans.txt'')", span="567-567"];
m6_3_388 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file=merged, label="Assert.AreEqual(new TimeSpan(468006), payload.Tick)", span="569-569"];
m6_3_389 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file=merged, label="Assert.AreEqual(new TimeSpan(0, 0, 0, 0, 125), payload.Millisecond)", span="570-570"];
m6_3_390 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file=merged, label="Assert.AreEqual(new TimeSpan(0, 0, 8), payload.Second)", span="571-571"];
m6_3_391 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file=merged, label="Assert.AreEqual(new TimeSpan(0, 55, 2), payload.Minute)", span="572-572"];
m6_3_392 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file=merged, label="Assert.AreEqual(new TimeSpan(21, 30, 7), payload.Hour)", span="573-573"];
m6_3_393 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file=merged, label="Assert.Null(payload.NullableWithoutValue)", span="574-574"];
m6_3_394 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file=merged, label="Assert.NotNull(payload.NullableWithValue)", span="575-575"];
m6_3_395 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file=merged, label="Assert.AreEqual(new TimeSpan(21, 30, 7), payload.NullableWithValue.Value)", span="576-576"];
m6_3_396 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file=merged, label="Assert.AreEqual(new TimeSpan(0, 0, 10), payload.IsoSecond)", span="577-577"];
m6_3_397 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file=merged, label="Assert.AreEqual(new TimeSpan(0, 3, 23), payload.IsoMinute)", span="578-578"];
m6_3_398 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file=merged, label="Assert.AreEqual(new TimeSpan(5, 4, 9), payload.IsoHour)", span="579-579"];
m6_3_399 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file=merged, label="Assert.AreEqual(new TimeSpan(1, 19, 27, 13), payload.IsoDay)", span="580-580"];
m6_3_400 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file=merged, label="Assert.AreEqual(new TimeSpan(64, 3, 14, 19), payload.IsoMonth)", span="582-582"];
m6_3_401 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file=merged, label="Assert.AreEqual(new TimeSpan(365, 9, 27, 48), payload.IsoYear)", span="584-584"];
m6_3_402 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", span="565-565"];
m6_8_91 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", file=merged, label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", span="154-154"];
m6_8_92 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", file=merged, label="var xmlpath = this.PathFor(''InlineListSample.xml'')", span="156-156"];
m6_8_93 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", file=merged, label="var doc = XDocument.Load(xmlpath)", span="157-157"];
m6_8_94 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", file=merged, label="var xml = new XmlDeserializer()", span="158-158"];
m6_8_95 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", file=merged, label="var output = xml.Deserialize<InlineListSample>(new RestResponse { Content = doc.ToString() })", span="159-159"];
m6_8_96 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", file=merged, label="Assert.IsNotEmpty(output.images)", span="161-161"];
m6_8_97 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", file=merged, label="Assert.AreEqual(4, output.images.Count)", span="162-162"];
m6_8_98 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", file=merged, label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", span="154-154"];
m6_8_15 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file=merged, label="Entry RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.IRestResponse)", span="44-44"];
m6_2_32 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file=merged, label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m6_3_219 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", span="332-332"];
m6_3_220 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file=merged, label="var data = File.ReadAllText(Path.Combine(''SampleData'', ''jsonenums.txt''))", span="334-334"];
m6_3_221 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file=merged, label="var response = new RestResponse { Content = data }", span="335-335"];
m6_3_222 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file=merged, label="var json = new JsonDeserializer()", span="336-336"];
m6_3_223 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file=merged, label="var output = json.Deserialize<JsonEnumsTestStructure>(response)", span="337-337"];
m6_3_224 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file=merged, label="Assert.AreEqual(Disposition.Friendly, output.Upper)", span="339-339"];
m6_3_225 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file=merged, label="Assert.AreEqual(Disposition.Friendly, output.Lower)", span="340-340"];
m6_3_226 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file=merged, label="Assert.AreEqual(Disposition.SoSo, output.CamelCased)", span="341-341"];
m6_3_227 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file=merged, label="Assert.AreEqual(Disposition.SoSo, output.Underscores)", span="342-342"];
m6_3_228 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file=merged, label="Assert.AreEqual(Disposition.SoSo, output.LowerUnderscores)", span="343-343"];
m6_3_229 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file=merged, label="Assert.AreEqual(Disposition.SoSo, output.Dashes)", span="344-344"];
m6_3_230 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file=merged, label="Assert.AreEqual(Disposition.SoSo, output.LowerDashes)", span="345-345"];
m6_3_231 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file=merged, label="Assert.AreEqual(Disposition.SoSo, output.Integer)", span="346-346"];
m6_3_232 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", span="332-332"];
m6_3_589 [cluster="System.Guid.ToString()", file=merged, label="Entry System.Guid.ToString()", span="0-0"];
m6_3_204 [cluster="RestSharp.Tests.SimpleJson.SerializeObject(object)", file=merged, label="Entry RestSharp.Tests.SimpleJson.SerializeObject(object)", span="610-610"];
m6_3_451 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeZulu()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeZulu()", span="669-669"];
m6_3_452 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeZulu()", file=merged, label="var payload = this.GetPayLoad<Iso8601DateTimeTestStructure>(''iso8601datetimes.txt'')", span="671-671"];
m6_3_453 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeZulu()", file=merged, label="Assert.AreEqual(\r\n                new DateTime(2012, 7, 19, 10, 23, 25, 544, DateTimeKind.Utc),\r\n                payload.DateTimeUtc.ToUniversalTime())", span="673-675"];
m6_3_454 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeZulu()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeZulu()", span="669-669"];
m6_7_120 [cluster="RestSharp.Parameter.Parameter()", file=merged, label="Entry RestSharp.Parameter.Parameter()", span="21-21"];
m6_7_39 [cluster="System.IO.Stream.CopyTo(System.IO.Stream)", file=merged, label="Entry System.IO.Stream.CopyTo(System.IO.Stream)", span="0-0"];
m6_3_10 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file=merged, label="Entry RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.IRestResponse)", span="26-26"];
m6_2_3 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file=merged, label="Entry RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.IRestResponse)", span="26-26"];
m6_2_4 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file=merged, label="var target = Activator.CreateInstance<T>()", span="28-28"];
m6_2_8 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file=merged, label="var root = FindRoot(response.Content)", span="36-36"];
m6_2_10 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file=merged, label="var data = SimpleJson.DeserializeObject(response.Content)", span="41-41"];
m6_2_13 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file=merged, label="var root = FindRoot(response.Content)", span="47-47"];
m6_2_15 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file=merged, label="var root = FindRoot(response.Content)", span="52-52"];
m6_2_5 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file=merged, label="target is IList", span="30-30"];
m6_2_6 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file=merged, label="var objType = target.GetType()", span="32-32"];
m6_2_12 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file=merged, label="target is IDictionary", span="45-45"];
m6_2_14 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file=merged, label="target = (T)BuildDictionary(target.GetType(), root)", span="48-48"];
m6_2_16 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file=merged, label="target = (T)Map(target, (IDictionary<string, object>)root)", span="53-53"];
m6_2_9 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file=merged, label="target = (T)BuildList(objType, root)", span="37-37"];
m6_2_11 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file=merged, label="target = (T)BuildList(objType, data)", span="42-42"];
m6_2_7 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file=merged, label="RootElement.HasValue()", span="34-34"];
m6_2_17 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file=merged, label="return target;", span="56-56"];
m6_2_18 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file=merged, label="Exit RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.IRestResponse)", span="26-26"];
m6_8_18 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute_for_List()", file=merged, label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute_for_List()", span="54-54"];
m6_8_19 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute_for_List()", file=merged, label="string content =\r\n                ''<document><response><oddballRootName><sid>1</sid><friendlyName>Jackson</friendlyName><oddballPropertyName>\\noddball</oddballPropertyName></oddballRootName></response><response><oddballRootName><sid>1</sid><friendlyName>Jackson</friendlyName><\\noddballPropertyName>evenball</oddballPropertyName></oddballRootName></response></document>''", span="56-57"];
m6_8_20 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute_for_List()", file=merged, label="var xml = new XmlDeserializer()", span="58-58"];
m6_8_21 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute_for_List()", file=merged, label="List<Oddball> output = xml.Deserialize<List<Oddball>>(new RestResponse { Content = content })", span="59-59"];
m6_8_22 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute_for_List()", file=merged, label="Assert.NotNull(output)", span="61-61"];
m6_8_23 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute_for_List()", color=green, community=0, file=merged, label="Assert.AreEqual(''1'', output[0].Sid)", prediction=11, span="62-62"];
m6_8_24 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute_for_List()", file=merged, label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute_for_List()", span="54-54"];
m6_3_428 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, int, System.DateTimeKind)", file=merged, label="Entry System.DateTime.DateTime(int, int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m6_8_13 [cluster="RestSharp.Deserializers.XmlDeserializer.XmlDeserializer()", file=merged, label="Entry RestSharp.Deserializers.XmlDeserializer.XmlDeserializer()", span="39-39"];
m6_8_75 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Directly_To_Lists_Off_Root_Element()", file=merged, label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Directly_To_Lists_Off_Root_Element()", span="130-130"];
m6_8_76 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Directly_To_Lists_Off_Root_Element()", file=merged, label="var xmlpath = this.PathFor(''directlists.xml'')", span="132-132"];
m6_8_77 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Directly_To_Lists_Off_Root_Element()", file=merged, label="var doc = XDocument.Load(xmlpath)", span="133-133"];
m6_8_78 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Directly_To_Lists_Off_Root_Element()", file=merged, label="var xml = new XmlDeserializer()", span="134-134"];
m6_8_79 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Directly_To_Lists_Off_Root_Element()", file=merged, label="var output = xml.Deserialize<List<Database>>(new RestResponse { Content = doc.ToString() })", span="135-135"];
m6_8_80 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Directly_To_Lists_Off_Root_Element()", file=merged, label="Assert.IsNotEmpty(output)", span="137-137"];
m6_8_81 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Directly_To_Lists_Off_Root_Element()", file=merged, label="Assert.AreEqual(2, output.Count)", span="138-138"];
m6_8_82 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Directly_To_Lists_Off_Root_Element()", file=merged, label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Directly_To_Lists_Off_Root_Element()", span="130-130"];
m6_8_389 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lastfm_Xml()", file=merged, label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lastfm_Xml()", span="520-520"];
m6_8_390 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lastfm_Xml()", file=merged, label="var xmlpath = this.PathFor(''Lastfm.xml'')", span="522-522"];
m6_8_391 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lastfm_Xml()", file=merged, label="var doc = XDocument.Load(xmlpath)", span="523-523"];
m6_8_392 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lastfm_Xml()", file=merged, label="var response = new RestResponse { Content = doc.ToString() }", span="524-524"];
m6_8_393 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lastfm_Xml()", file=merged, label="var d = new XmlDeserializer()", span="525-525"];
m6_8_394 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lastfm_Xml()", file=merged, label="var output = d.Deserialize<SampleClasses.Lastfm.Event>(response)", span="526-526"];
m6_8_395 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lastfm_Xml()", file=merged, label="Assert.AreEqual(''http://www.last.fm/event/328799+Philip+Glass+at+Barbican+Centre+on+12+June+2008'', output.url)", span="529-529"];
m6_8_396 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lastfm_Xml()", file=merged, label="Assert.AreEqual(''http://www.last.fm/venue/8777860+Barbican+Centre'', output.venue.url)", span="530-530"];
m6_8_397 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lastfm_Xml()", file=merged, label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lastfm_Xml()", span="520-520"];
m6_8_377 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Eventful_Xml()", file=merged, label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Eventful_Xml()", span="504-504"];
m6_8_378 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Eventful_Xml()", file=merged, label="var xmlpath = this.PathFor(''eventful.xml'')", span="506-506"];
m6_8_379 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Eventful_Xml()", file=merged, label="var doc = XDocument.Load(xmlpath)", span="507-507"];
m6_8_380 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Eventful_Xml()", file=merged, label="var response = new RestResponse { Content = doc.ToString() }", span="508-508"];
m6_8_381 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Eventful_Xml()", file=merged, label="var d = new XmlDeserializer()", span="509-509"];
m6_8_382 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Eventful_Xml()", file=merged, label="var output = d.Deserialize<VenueSearch>(response)", span="510-510"];
m6_8_383 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Eventful_Xml()", file=merged, label="Assert.IsNotEmpty(output.venues)", span="512-512"];
m6_8_384 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Eventful_Xml()", file=merged, label="Assert.AreEqual(3, output.venues.Count)", span="513-513"];
m6_8_385 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Eventful_Xml()", file=merged, label="Assert.AreEqual(''Tivoli'', output.venues[0].name)", span="514-514"];
m6_8_386 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Eventful_Xml()", file=merged, label="Assert.AreEqual(''http://eventful.com/brisbane/venues/tivoli-/V0-001-002169294-8'', output.venues[1].url)", span="515-515"];
m6_8_387 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Eventful_Xml()", file=merged, label="Assert.AreEqual(''V0-001-000266914-3'', output.venues[2].id)", span="516-516"];
m6_8_388 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Eventful_Xml()", file=merged, label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Eventful_Xml()", span="504-504"];
m6_3_90 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", span="161-161"];
m6_3_91 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", file=merged, label="var doc = File.ReadAllText(Path.Combine(''SampleData'', ''jsondictionary_KeysType.txt''))", span="163-163"];
m6_3_92 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", file=merged, label="var json = new JsonDeserializer()", span="164-164"];
m6_3_93 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", file=merged, label="var output = json.Deserialize<Dictionary<int, object>>(new RestResponse { Content = doc })", span="165-165"];
m6_3_94 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", file=merged, label="Assert.AreEqual(output.Keys.Count, 2)", span="167-167"];
m6_3_95 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", file=merged, label="var firstKeysVal = output.FirstOrDefault().Value", span="169-169"];
m6_3_96 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", file=merged, label="Assert.IsInstanceOf<IDictionary>(firstKeysVal)", span="171-171"];
m6_3_97 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", span="161-161"];
m6_3_23 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Select_Tokens()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Select_Tokens()", span="61-61"];
m6_3_24 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Select_Tokens()", file=merged, label="var data = File.ReadAllText(Path.Combine(''SampleData'', ''jsonarray.txt''))", span="63-63"];
m6_3_25 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Select_Tokens()", file=merged, label="var response = new RestResponse { Content = data }", span="64-64"];
m6_3_26 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Select_Tokens()", file=merged, label="var json = new JsonDeserializer()", span="65-65"];
m6_3_27 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Select_Tokens()", file=merged, label="var output = json.Deserialize<StatusComplexList>(response)", span="66-66"];
m6_3_28 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Select_Tokens()", file=merged, label="Assert.AreEqual(4, output.Count)", span="68-68"];
m6_3_29 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Select_Tokens()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Select_Tokens()", span="61-61"];
m6_7_105 [cluster="System.Type.GetElementType()", file=merged, label="Entry System.Type.GetElementType()", span="0-0"];
m6_8_257 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file=merged, label="Entry RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", span="822-822"];
m6_8_595 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file=merged, label="var doc = new XDocument()", span="824-824"];
m6_8_596 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file=merged, label="var root = new XElement(''Person'')", span="825-825"];
m6_8_609 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file=merged, label="doc.Add(root)", span="842-842"];
m6_8_610 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file=merged, label="return doc.ToString();", span="844-844"];
m6_8_597 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file=merged, label="root.Add(new XAttribute(''Name'', ''John Sheehan''))", span="827-827"];
m6_8_598 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file=merged, label="root.Add(new XAttribute(''StartDate'', new DateTime(2009, 9, 25, 0, 6, 1)))", span="828-828"];
m6_8_599 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file=merged, label="root.Add(new XAttribute(''Age'', 28))", span="829-829"];
m6_8_600 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file=merged, label="root.Add(new XAttribute(''Percent'', 99.9999m))", span="830-830"];
m6_8_601 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file=merged, label="root.Add(new XAttribute(''BigNumber'', long.MaxValue))", span="831-831"];
m6_8_602 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file=merged, label="root.Add(new XAttribute(''IsCool'', false))", span="832-832"];
m6_8_603 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file=merged, label="root.Add(new XAttribute(''Ignore'', ''dummy''))", span="833-833"];
m6_8_604 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file=merged, label="root.Add(new XAttribute(''ReadOnly'', ''dummy''))", span="834-834"];
m6_8_605 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file=merged, label="root.Add(new XAttribute(''UniqueId'', new Guid(GUID_STRING)))", span="835-835"];
m6_8_606 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file=merged, label="root.Add(new XAttribute(''Url'', ''http://example.com''))", span="836-836"];
m6_8_607 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file=merged, label="root.Add(new XAttribute(''UrlPath'', ''/foo/bar''))", span="837-837"];
m6_8_608 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file=merged, label="root.Add(new XElement(''BestFriend'',\r\n                new XAttribute(''Name'', ''The Fonz''),\r\n                new XAttribute(''\\nSince'', 1952)))", span="838-840"];
m6_8_611 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file=merged, label="Exit RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", span="822-822"];
m6_3_498 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Object_Type_Property_With_Primitive_Vale()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Object_Type_Property_With_Primitive_Vale()", span="747-747"];
m6_3_499 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Object_Type_Property_With_Primitive_Vale()", file=merged, label="var payload = this.GetPayLoad<ObjectProperties>(''objectproperty.txt'')", span="749-749"];
m6_3_500 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Object_Type_Property_With_Primitive_Vale()", file=merged, label="Assert.AreEqual(42L, payload.ObjectProperty)", span="751-751"];
m6_3_501 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Object_Type_Property_With_Primitive_Vale()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Object_Type_Property_With_Primitive_Vale()", span="747-747"];
m6_8_418 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_Number()", file=merged, label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_Number()", span="562-562"];
m6_8_419 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_Number()", file=merged, label="var xmlpath = this.PathFor(''boolean_from_number.xml'')", span="564-564"];
m6_8_420 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_Number()", file=merged, label="var doc = XDocument.Load(xmlpath)", span="565-565"];
m6_8_421 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_Number()", file=merged, label="var response = new RestResponse { Content = doc.ToString() }", span="566-566"];
m6_8_422 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_Number()", file=merged, label="var d = new XmlDeserializer()", span="567-567"];
m6_8_423 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_Number()", file=merged, label="var output = d.Deserialize<BooleanTest>(response)", span="568-568"];
m6_8_424 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_Number()", file=merged, label="Assert.True(output.Value)", span="570-570"];
m6_8_425 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_Number()", file=merged, label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_Number()", span="562-562"];
m6_26 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", file=merged, label="Entry RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", span="40-40"];
m6_27 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", file=merged, label="var baseUrl = new Uri(''https://api.twitter.com'')", span="42-42"];
m6_28 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", file=merged, label="var client = new RestClient(baseUrl)\r\n                         {\r\n                             Authenticator = OAuth1Authenticator.ForRequestToken(''\\nCONSUMER_KEY'', ''CONSUMER_SECRET'')\r\n                         }", span="43-46"];
m6_29 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", file=merged, label="var request = new RestRequest(''oauth/request_token'')", span="47-47"];
m6_30 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", file=merged, label="var response = client.Execute(request)", span="48-48"];
m6_39 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", file=merged, label="var url = client.BuildUri(request).ToString()", span="62-62"];
m6_43 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", file=merged, label="client.Authenticator = OAuth1Authenticator.ForAccessToken(\r\n                ''P5QziWtocYmgWAhvlegxw'', ''jBs07SIxJ0kodeU9QtLEs1W1LRgQb9u5Lc987BA94'', \\noauthToken,\r\n                oauthTokenSecret, verifier)", span="69-71"];
m6_44 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", file=merged, label="response = client.Execute(request)", span="72-72"];
m6_53 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", file=merged, label="client.Authenticator = OAuth1Authenticator.ForProtectedResource(\r\n                ''P5QziWtocYmgWAhvlegxw'', ''jBs07SIxJ0kodeU9QtLEs1W1LRgQb9u5Lc987BA94'', \\noauthToken,\r\n                oauthTokenSecret)", span="84-86"];
m6_54 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", file=merged, label="response = client.Execute(request)", span="87-87"];
m6_31 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", file=merged, label="Assert.NotNull(response)", span="50-50"];
m6_32 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", file=merged, label="Assert.AreEqual(HttpStatusCode.OK, response.StatusCode)", span="51-51"];
m6_33 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", file=merged, label="var qs = HttpUtility.ParseQueryString(response.Content)", span="53-53"];
m6_34 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", file=merged, label="var oauthToken = qs[''oauth_token'']", span="54-54"];
m6_35 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", file=merged, label="var oauthTokenSecret = qs[''oauth_token_secret'']", span="55-55"];
m6_36 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", file=merged, label="Assert.NotNull(oauthToken)", span="57-57"];
m6_38 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", file=merged, label="request = new RestRequest(''oauth/authorize?oauth_token='' + oauthToken)", span="60-60"];
m6_37 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", file=merged, label="Assert.NotNull(oauthTokenSecret)", span="58-58"];
m6_40 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", file=merged, label="Process.Start(url)", span="64-64"];
m6_41 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", file=merged, label="string verifier = ''123456''", span="66-66"];
m6_42 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", file=merged, label="request = new RestRequest(''oauth/access_token'')", span="68-68"];
m6_45 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", file=merged, label="Assert.NotNull(response)", span="74-74"];
m6_46 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", file=merged, label="Assert.AreEqual(HttpStatusCode.OK, response.StatusCode)", span="75-75"];
m6_47 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", file=merged, label="qs = HttpUtility.ParseQueryString(response.Content)", span="77-77"];
m6_48 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", file=merged, label="oauthToken = qs[''oauth_token'']", span="78-78"];
m6_49 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", file=merged, label="oauthTokenSecret = qs[''oauth_token_secret'']", span="79-79"];
m6_50 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", file=merged, label="Assert.NotNull(oauthToken)", span="80-80"];
m6_51 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", file=merged, label="Assert.NotNull(oauthTokenSecret)", span="81-81"];
m6_52 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", file=merged, label="request = new RestRequest(''account/verify_credentials.xml'')", span="83-83"];
m6_55 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", file=merged, label="Assert.NotNull(response)", span="89-89"];
m6_56 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", file=merged, label="Assert.AreEqual(HttpStatusCode.OK, response.StatusCode)", span="90-90"];
m6_57 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", file=merged, label="Exit RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_OAuth()", span="40-40"];
m6_8_343 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file=merged, label="Entry RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", span="681-681"];
m6_8_504 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file=merged, label="var doc = new XDocument()", span="683-683"];
m6_8_505 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file=merged, label="var root = new XElement(''Person'')", span="684-684"];
m6_8_531 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file=merged, label="doc.Add(root)", span="722-722"];
m6_8_532 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file=merged, label="return doc.ToString();", span="724-724"];
m6_8_506 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file=merged, label="root.Add(new XElement(''Name'', ''John Sheehan''))", span="686-686"];
m6_8_507 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file=merged, label="root.Add(new XElement(''start_date'', new DateTime(2009, 9, 25, 0, 6, 1)))", span="687-687"];
m6_8_508 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file=merged, label="root.Add(new XAttribute(''Age'', 28))", span="688-688"];
m6_8_509 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file=merged, label="root.Add(new XElement(''Percent'', 99.9999m))", span="689-689"];
m6_8_510 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file=merged, label="root.Add(new XElement(''big_number'', long.MaxValue))", span="690-690"];
m6_8_511 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file=merged, label="root.Add(new XAttribute(''is_cool'', false))", span="691-691"];
m6_8_512 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file=merged, label="root.Add(new XElement(''Ignore'', ''dummy''))", span="692-692"];
m6_8_513 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file=merged, label="root.Add(new XAttribute(''read_only'', ''dummy''))", span="693-693"];
m6_8_514 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file=merged, label="root.Add(new XElement(''unique_id'', new Guid(GUID_STRING)))", span="694-694"];
m6_8_515 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file=merged, label="root.Add(new XElement(''Url'', ''http://example.com''))", span="695-695"];
m6_8_516 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file=merged, label="root.Add(new XElement(''url_path'', ''/foo/bar''))", span="696-696"];
m6_8_517 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file=merged, label="root.Add(new XElement(''best_friend'',\r\n                new XElement(''name'', ''The Fonz''),\r\n                new XAttribute(''\\nSince'', 1952)))", span="697-699"];
m6_8_523 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file=merged, label="root.Add(friends)", span="710-710"];
m6_8_530 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file=merged, label="root.Add(foes)", span="721-721"];
m6_8_518 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file=merged, label="var friends = new XElement(''Friends'')", span="701-701"];
m6_8_519 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file=merged, label="int i = 0", span="703-703"];
m6_8_521 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file=merged, label="friends.Add(new XElement(''Friend'',\r\n                    new XElement(''Name'', ''Friend'' + i),\r\n                    new XAttribute(''\\nSince'', DateTime.Now.Year - i)))", span="705-707"];
m6_8_520 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file=merged, label="i < 10", span="703-703"];
m6_8_522 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file=merged, label="i++", span="703-703"];
m6_8_524 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file=merged, label="var foes = new XElement(''Foes'')", span="712-712"];
m6_8_525 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file=merged, label="foes.Add(new XAttribute(''Team'', ''Yankees''))", span="714-714"];
m6_8_528 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file=merged, label="foes.Add(new XElement(''Foe'', new XElement(''Nickname'', ''Foe'' + i)))", span="718-718"];
m6_8_526 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file=merged, label="int i = 0", span="716-716"];
m6_8_527 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file=merged, label="i < 5", span="716-716"];
m6_8_529 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file=merged, label="i++", span="716-716"];
m6_8_533 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file=merged, label="Exit RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", span="681-681"];
m6_3_480 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", span="722-722"];
m6_3_481 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", file=merged, label="var doc = this.CreateDynamicJsonStringDictionary()", span="724-724"];
m6_3_482 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", file=merged, label="var d = new JsonDeserializer()", span="725-725"];
m6_3_483 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", file=merged, label="var response = new RestResponse { Content = doc }", span="726-726"];
m6_3_484 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", file=merged, label="var bd = d.Deserialize<Dictionary<string, string>>(response)", span="727-727"];
m6_3_485 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", file=merged, label="Assert.AreEqual(''[\''Value1\'',\''Value2\'']'', bd[''Thing1''])", span="729-729"];
m6_3_486 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", file=merged, label="Assert.AreEqual(''Thing2'', bd[''Thing2''])", span="730-730"];
m6_3_487 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", file=merged, label="Assert.AreEqual(''{\''Name\'':\''ThingRed\'',\''Color\'':\''Red\''}'', bd[''ThingRed''])", span="731-731"];
m6_3_488 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", file=merged, label="Assert.AreEqual(''{\''Name\'':\''ThingBlue\'',\''Color\'':\''Blue\''}'', bd[''ThingBlue''])", span="732-732"];
m6_3_489 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", span="722-722"];
m6_7_149 [cluster="RestSharp.RestRequest.IncreaseNumAttempts()", file=merged, label="Entry RestSharp.RestRequest.IncreaseNumAttempts()", span="553-553"];
m6_7_150 [cluster="RestSharp.RestRequest.IncreaseNumAttempts()", file=merged, label="this.Attempts++", span="555-555"];
m6_7_151 [cluster="RestSharp.RestRequest.IncreaseNumAttempts()", file=merged, label="Exit RestSharp.RestRequest.IncreaseNumAttempts()", span="553-553"];
m6_3_408 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", span="588-588"];
m6_3_409 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", file=merged, label="var doc = this.CreateIsoDateJson()", span="590-590"];
m6_3_410 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", file=merged, label="var d = new JsonDeserializer()", span="591-591"];
m6_3_411 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", file=merged, label="var response = new RestResponse { Content = doc }", span="592-592"];
m6_3_412 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", file=merged, label="var bd = d.Deserialize<Birthdate>(response)", span="593-593"];
m6_3_413 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", file=merged, label="Assert.AreEqual(new DateTime(1910, 9, 25, 9, 30, 25, DateTimeKind.Utc), bd.Value)", span="595-595"];
m6_3_414 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", span="588-588"];
m6_3_446 [cluster="System.DateTimeOffset.ToString(string)", file=merged, label="Entry System.DateTimeOffset.ToString(string)", span="0-0"];
m6_8_239 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file=merged, label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", span="339-339"];
m6_8_240 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file=merged, label="var doc = CreateAttributesXml()", span="341-341"];
m6_8_241 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file=merged, label="var response = new RestResponse { Content = doc }", span="342-342"];
m6_8_242 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file=merged, label="var d = new XmlDeserializer()", span="343-343"];
m6_8_243 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file=merged, label="var p = d.Deserialize<PersonForXml>(response)", span="344-344"];
m6_8_244 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file=merged, label="Assert.AreEqual(''John Sheehan'', p.Name)", span="346-346"];
m6_8_245 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file=merged, label="Assert.AreEqual(new DateTime(2009, 9, 25, 0, 6, 1), p.StartDate)", span="347-347"];
m6_8_246 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file=merged, label="Assert.AreEqual(28, p.Age)", span="348-348"];
m6_8_247 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file=merged, label="Assert.AreEqual(long.MaxValue, p.BigNumber)", span="349-349"];
m6_8_248 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file=merged, label="Assert.AreEqual(99.9999m, p.Percent)", span="350-350"];
m6_8_249 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file=merged, label="Assert.AreEqual(false, p.IsCool)", span="351-351"];
m6_8_250 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file=merged, label="Assert.AreEqual(new Guid(GUID_STRING), p.UniqueId)", span="352-352"];
m6_8_251 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file=merged, label="Assert.AreEqual(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="353-353"];
m6_8_252 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file=merged, label="Assert.AreEqual(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="354-354"];
m6_8_253 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file=merged, label="Assert.NotNull(p.BestFriend)", span="355-355"];
m6_8_254 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file=merged, label="Assert.AreEqual(''The Fonz'', p.BestFriend.Name)", span="356-356"];
m6_8_255 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file=merged, label="Assert.AreEqual(1952, p.BestFriend.Since)", span="357-357"];
m6_8_256 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file=merged, label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", span="339-339"];
m6_6_86 [cluster="RestSharp.RestClient.Deserialize<T>(RestSharp.IRestRequest, RestSharp.IRestResponse)", file=merged, label="Entry RestSharp.RestClient.Deserialize<T>(RestSharp.IRestRequest, RestSharp.IRestResponse)", span="586-586"];
m6_3_367 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="Entry RestSharp.Tests.JsonTests.CreateJsonWithDashes()", span="811-811"];
m6_3_533 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="var doc = new JsonObject()", span="813-813"];
m6_3_534 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="doc[''name''] = ''John Sheehan''", span="815-815"];
m6_3_535 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="doc[''start-date''] = new DateTime(2009, 9, 25, 0, 6, 1, DateTimeKind.Utc)", span="816-816"];
m6_3_536 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="doc[''age''] = 28", span="817-817"];
m6_3_537 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="doc[''percent''] = 99.9999m", span="818-818"];
m6_3_538 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="doc[''big-number''] = long.MaxValue", span="819-819"];
m6_3_539 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="doc[''is-cool''] = false", span="820-820"];
m6_3_540 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="doc[''ignore''] = ''dummy''", span="821-821"];
m6_3_541 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="doc[''read-only''] = ''dummy''", span="822-822"];
m6_3_542 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="doc[''url''] = ''http://example.com''", span="823-823"];
m6_3_543 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="doc[''url-path''] = ''/foo/bar''", span="824-824"];
m6_3_544 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="doc[''best-friend''] = new JsonObject\r\n            {\r\n                {''name'', ''The Fonz''},\r\n                {''since'', \\n1952}\r\n            }", span="826-830"];
m6_3_550 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="doc[''friends''] = friendsArray", span="843-843"];
m6_3_552 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="doc[''foes''] = foesArray", span="851-851"];
m6_3_553 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="return doc.ToString();", span="853-853"];
m6_3_545 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="var friendsArray = new JsonArray()", span="832-832"];
m6_3_546 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="int i = 0", span="834-834"];
m6_3_548 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="friendsArray.Add(new JsonObject\r\n                {\r\n                    {''name'', ''Friend'' + i},\r\n                    {''\\nsince'', DateTime.Now.Year - i}\r\n                })", span="836-840"];
m6_3_547 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="i < 10", span="834-834"];
m6_3_549 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="i++", span="834-834"];
m6_3_551 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="var foesArray = new JsonObject\r\n            {\r\n                {''dict1'', new JsonObject {{''nickname'', ''Foe 1''}}},\r\n                {''\\ndict2'', new JsonObject {{''nickname'', ''Foe 2''}}}\r\n            }", span="845-849"];
m6_3_554 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="Exit RestSharp.Tests.JsonTests.CreateJsonWithDashes()", span="811-811"];
m6_6_31 [cluster="RestSharp.IHttpFactory.Create()", file=merged, label="Entry RestSharp.IHttpFactory.Create()", span="4-4"];
m6_8_99 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name_With_Additional_Property()", file=merged, label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name_With_Additional_\\nProperty()", span="166-166"];
m6_8_100 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name_With_Additional_Property()", file=merged, label="var xmlpath = this.PathFor(''InlineListSample.xml'')", span="168-168"];
m6_8_101 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name_With_Additional_Property()", file=merged, label="var doc = XDocument.Load(xmlpath)", span="169-169"];
m6_8_102 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name_With_Additional_Property()", file=merged, label="var xml = new XmlDeserializer()", span="170-170"];
m6_8_103 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name_With_Additional_Property()", file=merged, label="var output = xml.Deserialize<InlineListSample>(new RestResponse { Content = doc.ToString() })", span="171-171"];
m6_8_104 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name_With_Additional_Property()", file=merged, label="Assert.AreEqual(4, output.Count)", span="173-173"];
m6_8_105 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name_With_Additional_Property()", file=merged, label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name_With_Additional_\\nProperty()", span="166-166"];
m6_8_452 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", file=merged, label="Entry RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", span="913-913"];
m6_8_645 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", file=merged, label="var doc = new XDocument()", span="915-915"];
m6_8_646 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", file=merged, label="var root = new XElement(''NullableValues'')", span="916-916"];
m6_8_650 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", file=merged, label="doc.Add(root)", span="925-925"];
m6_8_651 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", file=merged, label="return doc.ToString();", span="927-927"];
m6_8_647 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", file=merged, label="var idElement = new XElement(''Id'', null)", span="917-917"];
m6_8_649 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", file=merged, label="root.Add(idElement,\r\n                new XElement(''StartDate'', null),\r\n                new XElement(''UniqueId'', new Guid(\\nGUID_STRING)))", span="921-923"];
m6_8_648 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", file=merged, label="idElement.SetAttributeValue(''SomeAttribute'', ''SomeAttribute_Value'')", span="919-919"];
m6_8_652 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", file=merged, label="Exit RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", span="913-913"];
m6_22 [cluster="System.Text.Encoding.GetString(byte[])", file=merged, label="Entry System.Text.Encoding.GetString(byte[])", span="0-0"];
m6_2_182 [cluster="System.Type.IsSubclassOfRawGeneric(System.Type)", file=merged, label="Entry System.Type.IsSubclassOfRawGeneric(System.Type)", span="56-56"];
m6_3_278 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", span="421-421"];
m6_3_279 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="var doc = this.CreateJson()", span="423-423"];
m6_3_280 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="var d = new JsonDeserializer()", span="424-424"];
m6_3_281 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="var response = new RestResponse { Content = doc }", span="425-425"];
m6_3_282 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="var p = d.Deserialize<PersonForJson>(response)", span="426-426"];
m6_3_283 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.AreEqual(''John Sheehan'', p.Name)", span="428-428"];
m6_3_284 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.AreEqual(new DateTime(2009, 9, 25, 0, 6, 1, DateTimeKind.Utc), p.StartDate)", span="429-429"];
m6_3_285 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.AreEqual(28, p.Age)", span="430-430"];
m6_3_286 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.AreEqual(long.MaxValue, p.BigNumber)", span="431-431"];
m6_3_287 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.AreEqual(99.9999m, p.Percent)", span="432-432"];
m6_3_288 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.AreEqual(false, p.IsCool)", span="433-433"];
m6_3_289 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.AreEqual(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="434-434"];
m6_3_290 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.AreEqual(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="435-435"];
m6_3_291 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.AreEqual(Guid.Empty, p.EmptyGuid)", span="436-436"];
m6_3_292 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.AreEqual(new Guid(GUID_STRING), p.Guid)", span="437-437"];
m6_3_293 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.AreEqual(Order.Third, p.Order)", span="438-438"];
m6_3_294 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.AreEqual(Disposition.SoSo, p.Disposition)", span="439-439"];
m6_3_295 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.NotNull(p.Friends)", span="440-440"];
m6_3_296 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.AreEqual(10, p.Friends.Count)", span="441-441"];
m6_3_297 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.NotNull(p.BestFriend)", span="442-442"];
m6_3_298 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.AreEqual(''The Fonz'', p.BestFriend.Name)", span="443-443"];
m6_3_299 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.AreEqual(1952, p.BestFriend.Since)", span="444-444"];
m6_3_300 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.IsNotEmpty(p.Foes)", span="445-445"];
m6_3_301 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.AreEqual(''Foe 1'', p.Foes[''dict1''].Nickname)", span="446-446"];
m6_3_302 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.AreEqual(''Foe 2'', p.Foes[''dict2''].Nickname)", span="447-447"];
m6_3_303 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", span="421-421"];
m6_7_51 [cluster="RestSharp.RestRequest.AddBody(object, string)", file=merged, label="Entry RestSharp.RestRequest.AddBody(object, string)", span="190-190"];
m6_7_52 [cluster="RestSharp.RestRequest.AddBody(object, string)", color=green, community=0, file=merged, label="string serialized", prediction=12, span="192-192"];
m6_7_53 [cluster="RestSharp.RestRequest.AddBody(object, string)", color=green, community=1, file=merged, label="string contentType", prediction=13, span="193-193"];
m6_7_54 [cluster="RestSharp.RestRequest.AddBody(object, string)", file=merged, label=RequestFormat, span="195-195"];
m6_7_60 [cluster="RestSharp.RestRequest.AddBody(object, string)", file=merged, label="serialized = XmlSerializer.Serialize(obj)", span="204-204"];
m6_7_57 [cluster="RestSharp.RestRequest.AddBody(object, string)", color=green, community=0, file=merged, label="contentType = JsonSerializer.ContentType", prediction=14, span="199-199"];
m6_7_56 [cluster="RestSharp.RestRequest.AddBody(object, string)", color=green, community=0, file=merged, label="serialized = JsonSerializer.Serialize(obj)", prediction=15, span="198-198"];
m6_7_59 [cluster="RestSharp.RestRequest.AddBody(object, string)", file=merged, label="this.XmlSerializer.Namespace = xmlNamespace", span="203-203"];
m6_7_55 [cluster="RestSharp.RestRequest.AddBody(object, string)", file=merged, label="DataFormat.Json", span="197-197"];
m6_7_58 [cluster="RestSharp.RestRequest.AddBody(object, string)", file=merged, label="DataFormat.Xml", span="202-202"];
m6_7_62 [cluster="RestSharp.RestRequest.AddBody(object, string)", file=merged, label="serialized = ''''", span="209-209"];
m6_7_64 [cluster="RestSharp.RestRequest.AddBody(object, string)", file=merged, label="return this.AddParameter(contentType, serialized, ParameterType.RequestBody);", span="217-217"];
m6_7_61 [cluster="RestSharp.RestRequest.AddBody(object, string)", file=merged, label="contentType = XmlSerializer.ContentType", span="205-205"];
m6_7_63 [cluster="RestSharp.RestRequest.AddBody(object, string)", file=merged, label="contentType = ''''", span="210-210"];
m6_7_65 [cluster="RestSharp.RestRequest.AddBody(object, string)", file=merged, label="Exit RestSharp.RestRequest.AddBody(object, string)", span="190-190"];
m6_8_50 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_List_Inheritor_From_Custom_Root_With_Attributes()", file=merged, label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_List_Inheritor_From_Custom_Root_With_Attributes()", span="93-93"];
m6_8_51 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_List_Inheritor_From_Custom_Root_With_Attributes()", file=merged, label="var xmlpath = this.PathFor(''ListWithAttributes.xml'')", span="95-95"];
m6_8_52 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_List_Inheritor_From_Custom_Root_With_Attributes()", file=merged, label="var doc = XDocument.Load(xmlpath)", span="96-96"];
m6_8_53 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_List_Inheritor_From_Custom_Root_With_Attributes()", file=merged, label="var xml = new XmlDeserializer { RootElement = ''Calls'' }", span="97-97"];
m6_8_54 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_List_Inheritor_From_Custom_Root_With_Attributes()", file=merged, label="var output = xml.Deserialize<TwilioCallList>(new RestResponse { Content = doc.ToString() })", span="98-98"];
m6_8_55 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_List_Inheritor_From_Custom_Root_With_Attributes()", file=merged, label="Assert.AreEqual(3, output.NumPages)", span="100-100"];
m6_8_56 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_List_Inheritor_From_Custom_Root_With_Attributes()", file=merged, label="Assert.IsNotEmpty(output)", span="101-101"];
m6_8_57 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_List_Inheritor_From_Custom_Root_With_Attributes()", file=merged, label="Assert.AreEqual(2, output.Count)", span="102-102"];
m6_8_58 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_List_Inheritor_From_Custom_Root_With_Attributes()", file=merged, label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_List_Inheritor_From_Custom_Root_With_Attributes()", span="93-93"];
m6_62 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file=merged, label="Entry RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", span="282-282"];
m6_3_171 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithEmptyValues()", file=merged, label="Entry RestSharp.Tests.JsonTests.CreateJsonWithEmptyValues()", span="934-934"];
m6_3_596 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithEmptyValues()", file=merged, label="var doc = new JsonObject()", span="936-936"];
m6_3_597 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithEmptyValues()", file=merged, label="doc[''Id''] = ''''", span="938-938"];
m6_3_598 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithEmptyValues()", file=merged, label="doc[''StartDate''] = ''''", span="939-939"];
m6_3_599 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithEmptyValues()", file=merged, label="doc[''UniqueId''] = ''''", span="940-940"];
m6_3_600 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithEmptyValues()", file=merged, label="return doc.ToString();", span="942-942"];
m6_3_601 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithEmptyValues()", file=merged, label="Exit RestSharp.Tests.JsonTests.CreateJsonWithEmptyValues()", span="934-934"];
m6_3_192 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", span="295-295"];
m6_3_193 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file=merged, label="var culture = CultureInfo.InvariantCulture", span="297-297"];
m6_3_194 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file=merged, label="string format = ''dd yyyy MMM, hh:mm ss tt''", span="298-298"];
m6_3_196 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file=merged, label="var formatted = new { StartDate = date.ToString(format, culture) }", span="300-300"];
m6_3_199 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file=merged, label="var json = new JsonDeserializer { DateFormat = format, Culture = culture }", span="303-303"];
m6_3_195 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file=merged, label="var date = new DateTime(2010, 2, 8, 11, 11, 11)", span="299-299"];
m6_3_197 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file=merged, label="var data = SimpleJson.SerializeObject(formatted)", span="301-301"];
m6_3_200 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file=merged, label="var output = json.Deserialize<PersonForJson>(response)", span="304-304"];
m6_3_201 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file=merged, label="Assert.AreEqual(date, output.StartDate)", span="306-306"];
m6_3_198 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file=merged, label="var response = new RestResponse { Content = data }", span="302-302"];
m6_3_202 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", span="295-295"];
m6_3_0 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", span="36-36"];
m6_3_1 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", file=merged, label="string content = ''{ \''Value\'': 4.8e-04 }''", span="38-38"];
m6_3_2 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", file=merged, label="var json = new JsonDeserializer()", span="39-39"];
m6_3_3 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", file=merged, label="var output = json.Deserialize<DecimalNumber>(new RestResponse { Content = content })", span="40-40"];
m6_3_4 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", file=merged, label="var expected = Decimal.Parse(''4.8e-04'', NumberStyles.Float, CultureInfo.InvariantCulture)", span="41-41"];
m6_3_5 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", file=merged, label="Assert.NotNull(output)", span="43-43"];
m6_3_6 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", file=merged, label="Assert.AreEqual(expected, output.Value)", span="44-44"];
m6_3_7 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", span="36-36"];
m6_3_52 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", span="104-104"];
m6_3_53 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", file=merged, label="string content = ''{\''users\'':[\''johnsheehan\'',\''jagregory\'',null,\''drusellers\'',\''structuremap\'']}''", span="106-106"];
m6_3_54 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", file=merged, label="var json = new JsonDeserializer { RootElement = ''users'' }", span="107-107"];
m6_3_55 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", file=merged, label="var output = json.Deserialize<List<string>>(new RestResponse { Content = content })", span="108-108"];
m6_3_56 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", file=merged, label="Assert.IsNotEmpty(output)", span="110-110"];
m6_3_57 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", file=merged, label="Assert.AreEqual(null, output[2])", span="111-111"];
m6_3_58 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", file=merged, label="Assert.AreEqual(5, output.Count)", span="112-112"];
m6_3_59 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", span="104-104"];
m6_3_117 [cluster="RestSharp.Tests.JsonObject.JsonObject()", file=merged, label="Entry RestSharp.Tests.JsonObject.JsonObject()", span="134-134"];
m6_6_74 [cluster="RestSharp.RestClient.ExecuteAsyncPost<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>, \\nstring)", file=merged, label="Entry RestSharp.RestClient.ExecuteAsyncPost<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>, \\nstring)", span="158-158"];
m6_6_75 [cluster="RestSharp.RestClient.ExecuteAsyncPost<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>, \\nstring)", file=merged, label="return ExecuteAsyncPost(request,\r\n                (response, asyncHandle) => DeserializeResponse(request, callback, response, \\nasyncHandle), httpMethod);", span="161-162"];
m6_6_76 [cluster="RestSharp.RestClient.ExecuteAsyncPost<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>, \\nstring)", file=merged, label="Exit RestSharp.RestClient.ExecuteAsyncPost<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>, \\nstring)", span="158-158"];
m6_63 [cluster="System.Uri.ToString()", file=merged, label="Entry System.Uri.ToString()", span="0-0"];
m6_3_119 [cluster="RestSharp.Tests.JsonObject.ToString()", file=merged, label="Entry RestSharp.Tests.JsonObject.ToString()", span="342-342"];
m6_1_8 [cluster="RestSharp.IRestRequest.AddXmlBody(object, string)", file=merged, label="Entry RestSharp.IRestRequest.AddXmlBody(object, string)", span="201-201"];
m6_1_9 [cluster="RestSharp.IRestRequest.AddXmlBody(object, string)", file=merged, label="Exit RestSharp.IRestRequest.AddXmlBody(object, string)", span="201-201"];
m6_3_233 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", span="350-350"];
m6_3_234 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file=merged, label="var data = File.ReadAllText(Path.Combine(''SampleData'', ''jsonenumtypes.txt''))", span="352-352"];
m6_3_235 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file=merged, label="var response = new RestResponse { Content = data }", span="353-353"];
m6_3_236 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file=merged, label="var json = new JsonDeserializer()", span="354-354"];
m6_3_237 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file=merged, label="var output = json.Deserialize<JsonEnumTypesTestStructure>(response)", span="355-355"];
m6_3_238 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file=merged, label="Assert.AreEqual(ByteEnum.EnumMin, output.ByteEnumType)", span="357-357"];
m6_3_239 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file=merged, label="Assert.AreEqual(SByteEnum.EnumMin, output.SByteEnumType)", span="358-358"];
m6_3_240 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file=merged, label="Assert.AreEqual(ShortEnum.EnumMin, output.ShortEnumType)", span="359-359"];
m6_3_241 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file=merged, label="Assert.AreEqual(UShortEnum.EnumMin, output.UShortEnumType)", span="360-360"];
m6_3_242 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file=merged, label="Assert.AreEqual(IntEnum.EnumMin, output.IntEnumType)", span="361-361"];
m6_3_243 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file=merged, label="Assert.AreEqual(UIntEnum.EnumMin, output.UIntEnumType)", span="362-362"];
m6_3_244 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file=merged, label="Assert.AreEqual(LongEnum.EnumMin, output.LongEnumType)", span="363-363"];
m6_3_245 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file=merged, label="Assert.AreEqual(ULongEnum.EnumMin, output.ULongEnumType)", span="364-364"];
m6_3_246 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", span="350-350"];
m6_6_51 [cluster="RestSharp.IHttp.AsGetAsync(System.Action<RestSharp.HttpResponse>, string)", file=merged, label="Entry RestSharp.IHttp.AsGetAsync(System.Action<RestSharp.HttpResponse>, string)", span="109-109"];
m6_7_23 [cluster="RestSharp.RestRequest.RestRequest(System.Uri, RestSharp.Method)", file=merged, label="Entry RestSharp.RestRequest.RestRequest(System.Uri, RestSharp.Method)", span="110-110"];
m6_7_24 [cluster="RestSharp.RestRequest.RestRequest(System.Uri, RestSharp.Method)", file=merged, label="Exit RestSharp.RestRequest.RestRequest(System.Uri, RestSharp.Method)", span="110-110"];
m6_3_306 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root_Alternative_Culture()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root_Alternative_Culture()", span="451-451"];
m6_3_307 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root_Alternative_Culture()", file=merged, label="new CultureChange(ALTERNATIVE_CULTURE)", span="453-453"];
m6_3_308 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root_Alternative_Culture()", file=merged, label="this.Can_Deserialize_With_Default_Root()", span="455-455"];
m6_3_309 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root_Alternative_Culture()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root_Alternative_Culture()", span="451-451"];
m6_8_83 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", file=merged, label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", span="142-142"];
m6_8_84 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", file=merged, label="var xmlpath = this.PathFor(''InlineListSample.xml'')", span="144-144"];
m6_8_85 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", file=merged, label="var doc = XDocument.Load(xmlpath)", span="145-145"];
m6_8_86 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", file=merged, label="var xml = new XmlDeserializer()", span="146-146"];
m6_8_87 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", file=merged, label="var output = xml.Deserialize<InlineListSample>(new RestResponse { Content = doc.ToString() })", span="147-147"];
m6_8_88 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", file=merged, label="Assert.IsNotEmpty(output.Images)", span="149-149"];
m6_8_89 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", file=merged, label="Assert.AreEqual(4, output.Images.Count)", span="150-150"];
m6_8_90 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", file=merged, label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", span="142-142"];
m6_8_67 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_With_Matching_Class_Case()", file=merged, label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_With_Matching_Class_Case()", span="118-118"];
m6_8_68 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_With_Matching_Class_Case()", file=merged, label="var xmlpath = this.PathFor(''InlineListSample.xml'')", span="120-120"];
m6_8_69 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_With_Matching_Class_Case()", file=merged, label="var doc = XDocument.Load(xmlpath)", span="121-121"];
m6_8_70 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_With_Matching_Class_Case()", file=merged, label="var xml = new XmlDeserializer()", span="122-122"];
m6_8_71 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_With_Matching_Class_Case()", file=merged, label="var output = xml.Deserialize<List<image>>(new RestResponse { Content = doc.ToString() })", span="123-123"];
m6_8_72 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_With_Matching_Class_Case()", file=merged, label="Assert.IsNotEmpty(output)", span="125-125"];
m6_8_73 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_With_Matching_Class_Case()", file=merged, label="Assert.AreEqual(4, output.Count)", span="126-126"];
m6_8_74 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_With_Matching_Class_Case()", file=merged, label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_With_Matching_Class_Case()", span="118-118"];
m6_3_120 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", span="203-203"];
m6_3_121 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file=merged, label="DateTime item1 = new DateTime(2010, 2, 8, 11, 11, 11)", span="205-205"];
m6_3_122 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file=merged, label="DateTime item2 = item1.AddSeconds(12345)", span="206-206"];
m6_3_124 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file=merged, label="data[''Items''] = new JsonArray { item1.ToString(''u''), item2.ToString(''u'') }", span="209-209"];
m6_3_129 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file=merged, label="Assert.AreEqual(item1, p.Items[0])", span="216-216"];
m6_3_123 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file=merged, label="var data = new JsonObject()", span="207-207"];
m6_3_130 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file=merged, label="Assert.AreEqual(item2, p.Items[1])", span="217-217"];
m6_3_125 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file=merged, label="var d = new JsonDeserializer()", span="211-211"];
m6_3_126 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file=merged, label="var response = new RestResponse { Content = data.ToString() }", span="212-212"];
m6_3_127 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file=merged, label="var p = d.Deserialize<GenericWithList<DateTime>>(response)", span="213-213"];
m6_3_128 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file=merged, label="Assert.AreEqual(2, p.Items.Count)", span="215-215"];
m6_3_131 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", span="203-203"];
m6_6_32 [cluster="RestSharp.RestClient.AuthenticateIfNeeded(RestSharp.RestClient, RestSharp.IRestRequest)", file=merged, label="Entry RestSharp.RestClient.AuthenticateIfNeeded(RestSharp.RestClient, RestSharp.IRestRequest)", span="269-269"];
m6_3_60 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Item_Without_Array()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Item_Without_Array()", span="116-116"];
m6_3_61 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Item_Without_Array()", file=merged, label="string content = ''{\''users\'':\''johnsheehan\''}''", span="118-118"];
m6_3_62 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Item_Without_Array()", file=merged, label="var json = new JsonDeserializer { RootElement = ''users'' }", span="119-119"];
m6_3_63 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Item_Without_Array()", file=merged, label="var output = json.Deserialize<List<string>>(new RestResponse { Content = content })", span="120-120"];
m6_3_64 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Item_Without_Array()", file=merged, label="Assert.True(output.SequenceEqual(new[] { ''johnsheehan'' }))", span="122-122"];
m6_3_65 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Item_Without_Array()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Item_Without_Array()", span="116-116"];
m6_1_22 [cluster="RestSharp.IRestRequest.AddHeader(string, string)", file=merged, label="Entry RestSharp.IRestRequest.AddHeader(string, string)", span="271-271"];
m6_1_23 [cluster="RestSharp.IRestRequest.AddHeader(string, string)", file=merged, label="Exit RestSharp.IRestRequest.AddHeader(string, string)", span="271-271"];
m6_8_165 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithoutEmptyValues(System.Globalization.CultureInfo)", file=merged, label="Entry RestSharp.Tests.XmlDeserializerTests.CreateXmlWithoutEmptyValues(System.Globalization.CultureInfo)", span="861-861"];
m6_8_618 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithoutEmptyValues(System.Globalization.CultureInfo)", file=merged, label="var doc = new XDocument()", span="863-863"];
m6_8_620 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithoutEmptyValues(System.Globalization.CultureInfo)", file=merged, label="root.Add(new XElement(''Id'', 123),\r\n                new XElement(''StartDate'', new DateTime(2010, 2, 21, 9, 35, 00).ToString(\\nculture)),\r\n                new XElement(''UniqueId'', new Guid(GUID_STRING)))", span="866-868"];
m6_8_619 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithoutEmptyValues(System.Globalization.CultureInfo)", file=merged, label="var root = new XElement(''NullableValues'')", span="864-864"];
m6_8_621 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithoutEmptyValues(System.Globalization.CultureInfo)", file=merged, label="doc.Add(root)", span="870-870"];
m6_8_622 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithoutEmptyValues(System.Globalization.CultureInfo)", file=merged, label="return doc.ToString();", span="872-872"];
m6_8_623 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithoutEmptyValues(System.Globalization.CultureInfo)", file=merged, label="Exit RestSharp.Tests.XmlDeserializerTests.CreateXmlWithoutEmptyValues(System.Globalization.CultureInfo)", span="861-861"];
m6_3_270 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", span="407-407"];
m6_3_271 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", file=merged, label="var doc = new JsonObject()", span="409-409"];
m6_3_272 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", file=merged, label="doc[''IsCool''] = 1", span="411-411"];
m6_3_274 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", file=merged, label="var response = new RestResponse { Content = doc.ToString() }", span="414-414"];
m6_3_273 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", file=merged, label="var d = new JsonDeserializer()", span="413-413"];
m6_3_275 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", file=merged, label="var p = d.Deserialize<PersonForJson>(response)", span="415-415"];
m6_3_276 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", file=merged, label="Assert.True(p.IsCool)", span="417-417"];
m6_3_277 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", span="407-407"];
m6_2_84 [cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", file=merged, label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0"];
m6_3_184 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", file=merged, label="Entry RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", span="945-945"];
m6_3_602 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", file=merged, label="var doc = new JsonObject()", span="947-947"];
m6_3_603 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", file=merged, label="doc[''Id''] = 123", span="949-949"];
m6_3_604 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", file=merged, label="doc[''StartDate''] = new DateTime(2010, 2, 21, 9, 35, 00, DateTimeKind.Utc)", span="950-950"];
m6_3_605 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", file=merged, label="doc[''UniqueId''] = new Guid(GUID_STRING).ToString()", span="951-951"];
m6_3_606 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", file=merged, label="return doc.ToString();", span="953-953"];
m6_3_607 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", file=merged, label="Exit RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", span="945-945"];
m6_3_74 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", span="136-136"];
m6_3_75 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", file=merged, label="var doc = File.ReadAllText(Path.Combine(''SampleData'', ''sojson.txt''))", span="138-138"];
m6_3_76 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", file=merged, label="var json = new JsonDeserializer { RootElement = ''User'' }", span="139-139"];
m6_3_77 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", file=merged, label="var output = json.Deserialize<SOUser>(new RestResponse { Content = doc })", span="141-141"];
m6_3_78 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", file=merged, label="Assert.AreEqual(''John Sheehan'', output.DisplayName)", span="143-143"];
m6_3_79 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", span="136-136"];
m6_1_14 [cluster="RestSharp.IRestRequest.AddParameter(RestSharp.Parameter)", file=merged, label="Entry RestSharp.IRestRequest.AddParameter(RestSharp.Parameter)", span="226-226"];
m6_1_15 [cluster="RestSharp.IRestRequest.AddParameter(RestSharp.Parameter)", file=merged, label="Exit RestSharp.IRestRequest.AddParameter(RestSharp.Parameter)", span="226-226"];
m6_7_138 [cluster="System.Text.RegularExpressions.Regex.Split(string, string)", file=merged, label="Entry System.Text.RegularExpressions.Regex.Split(string, string)", span="0-0"];
m6_8_49 [cluster="System.Collections.Generic.IEnumerable<int>.Sum()", file=merged, label="Entry System.Collections.Generic.IEnumerable<int>.Sum()", span="0-0"];
m6_7_33 [cluster="RestSharp.RestRequest.AddFile(RestSharp.FileParameter)", file=merged, label="Entry RestSharp.RestRequest.AddFile(RestSharp.FileParameter)", span="177-177"];
m6_7_47 [cluster="RestSharp.RestRequest.AddFile(RestSharp.FileParameter)", file=merged, label="this.Files.Add(file)", span="179-179"];
m6_7_48 [cluster="RestSharp.RestRequest.AddFile(RestSharp.FileParameter)", file=merged, label="return this;", span="180-180"];
m6_7_49 [cluster="RestSharp.RestRequest.AddFile(RestSharp.FileParameter)", file=merged, label="Exit RestSharp.RestRequest.AddFile(RestSharp.FileParameter)", span="177-177"];
m6_8_471 [cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file=merged, label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0"];
m6_8_106 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", file=merged, label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", span="177-177"];
m6_8_107 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", file=merged, label="var xmlpath = this.PathFor(''NestedListSample.xml'')", span="179-179"];
m6_8_108 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", file=merged, label="var doc = XDocument.Load(xmlpath)", span="180-180"];
m6_8_109 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", file=merged, label="var xml = new XmlDeserializer()", span="181-181"];
m6_8_110 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", file=merged, label="var output = xml.Deserialize<InlineListSample>(new RestResponse { Content = doc.ToString() })", span="182-182"];
m6_8_111 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", file=merged, label="Assert.IsNotEmpty(output.Images)", span="184-184"];
m6_8_112 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", file=merged, label="Assert.AreEqual(4, output.Images.Count)", span="185-185"];
m6_8_113 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", file=merged, label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", span="177-177"];
m6_8_4 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute()", file=merged, label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute()", span="40-40"];
m6_8_5 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute()", file=merged, label="string content =\r\n                ''<oddball><sid>1</sid><friendlyName>Jackson</friendlyName><oddballPropertyName>oddball</oddballPropertyName></\\noddball>''", span="42-43"];
m6_8_6 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute()", file=merged, label="var xml = new XmlDeserializer()", span="44-44"];
m6_8_7 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute()", file=merged, label="var output = xml.Deserialize<Oddball>(new RestResponse { Content = content })", span="45-45"];
m6_8_8 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute()", file=merged, label="Assert.NotNull(output)", span="47-47"];
m6_8_9 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute()", file=merged, label="Assert.AreEqual(''1'', output.Sid)", span="48-48"];
m6_8_10 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute()", file=merged, label="Assert.AreEqual(''Jackson'', output.FriendlyName)", span="49-49"];
m6_8_11 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute()", file=merged, label="Assert.AreEqual(''oddball'', output.GoodPropertyName)", span="50-50"];
m6_8_12 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute()", file=merged, label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute()", span="40-40"];
m6_7_31 [cluster="RestSharp.FileParameter.FileParameter()", file=merged, label="Entry RestSharp.FileParameter.FileParameter()", span="8-8"];
m6_2_175 [cluster="string.Contains(string)", file=merged, label="Entry string.Contains(string)", span="0-0"];
m6_8_265 [cluster="RestSharp.Tests.XmlDeserializerTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file=merged, label="Entry RestSharp.Tests.XmlDeserializerTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", span="372-372"];
m6_8_266 [cluster="RestSharp.Tests.XmlDeserializerTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file=merged, label="var doc = CreateElementsXml()", span="374-374"];
m6_8_267 [cluster="RestSharp.Tests.XmlDeserializerTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file=merged, label="var response = new RestResponse { Content = doc }", span="375-375"];
m6_8_268 [cluster="RestSharp.Tests.XmlDeserializerTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file=merged, label="var d = new XmlDeserializer()", span="376-376"];
m6_8_269 [cluster="RestSharp.Tests.XmlDeserializerTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file=merged, label="var p = d.Deserialize<PersonForXml>(response)", span="377-377"];
m6_8_270 [cluster="RestSharp.Tests.XmlDeserializerTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file=merged, label="Assert.Null(p.ReadOnlyProxy)", span="379-379"];
m6_8_271 [cluster="RestSharp.Tests.XmlDeserializerTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file=merged, label="Exit RestSharp.Tests.XmlDeserializerTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", span="372-372"];
m6_3_415 [cluster="RestSharp.Tests.JsonTests.CreateIsoDateJson()", file=merged, label="Entry RestSharp.Tests.JsonTests.CreateIsoDateJson()", span="856-856"];
m6_3_555 [cluster="RestSharp.Tests.JsonTests.CreateIsoDateJson()", file=merged, label="var bd = new Birthdate\r\n            {\r\n                Value = new DateTime(1910, 9, 25, 9, 30, 25, DateTimeKind.Utc)\r\n            }", span="858-861"];
m6_3_556 [cluster="RestSharp.Tests.JsonTests.CreateIsoDateJson()", file=merged, label="return SimpleJson.SerializeObject(bd);", span="863-863"];
m6_3_557 [cluster="RestSharp.Tests.JsonTests.CreateIsoDateJson()", file=merged, label="Exit RestSharp.Tests.JsonTests.CreateIsoDateJson()", span="856-856"];
m6_2_63 [cluster="string.GetNameVariants(System.Globalization.CultureInfo)", file=merged, label="Entry string.GetNameVariants(System.Globalization.CultureInfo)", span="407-407"];
m6_7_68 [cluster="RestSharp.RestRequest.AddBody(object)", file=merged, label="Entry RestSharp.RestRequest.AddBody(object)", span="226-226"];
m6_7_69 [cluster="RestSharp.RestRequest.AddBody(object)", file=merged, label="return this.AddBody(obj, '''');", span="228-228"];
m6_7_70 [cluster="RestSharp.RestRequest.AddBody(object)", file=merged, label="Exit RestSharp.RestRequest.AddBody(object)", span="226-226"];
m6_3_88 [cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file=merged, label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0"];
m6_2_110 [cluster="System.Collections.IList.Add(object)", file=merged, label="Entry System.Collections.IList.Add(object)", span="0-0"];
m6_3_423 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateJson()", file=merged, label="Entry RestSharp.Tests.JsonTests.CreateUnixDateJson()", span="866-866"];
m6_3_559 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateJson()", file=merged, label="var doc = new JsonObject()", span="868-868"];
m6_3_560 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateJson()", file=merged, label="doc[''Value''] = 1309421746", span="870-870"];
m6_3_561 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateJson()", file=merged, label="return doc.ToString();", span="872-872"];
m6_3_562 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateJson()", file=merged, label="Exit RestSharp.Tests.JsonTests.CreateUnixDateJson()", span="866-866"];
m6_23 [cluster="string.Split(params char[])", file=merged, label="Entry string.Split(params char[])", span="0-0"];
m6_2_173 [cluster="System.DateTime.ParseExact(string, string, System.IFormatProvider, System.Globalization.DateTimeStyles)", file=merged, label="Entry System.DateTime.ParseExact(string, string, System.IFormatProvider, System.Globalization.DateTimeStyles)", span="0-0"];
m6_8_142 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyInlineList()", file=merged, label="Entry RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyInlineList()", span="886-886"];
m6_8_631 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyInlineList()", file=merged, label="var doc = new XDocument()", span="888-888"];
m6_8_632 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyInlineList()", file=merged, label="var root = new XElement(''EmptyListSample'')", span="889-889"];
m6_8_633 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyInlineList()", file=merged, label="doc.Add(root)", span="891-891"];
m6_8_634 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyInlineList()", file=merged, label="return doc.ToString();", span="893-893"];
m6_8_635 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyInlineList()", file=merged, label="Exit RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyInlineList()", span="886-886"];
m6_3_460 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", span="689-689"];
m6_3_461 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", file=merged, label="var payload = this.GetPayLoad<DateTimeTestStructure>(''datetimes.txt'')", span="691-691"];
m6_3_462 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", file=merged, label="Assert.NotNull(payload.NullableDateTimeOffsetWithValue)", span="693-693"];
m6_3_463 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", file=merged, label="Assert.AreEqual(\r\n                new DateTime(2011, 6, 30, 8, 15, 46, 929, DateTimeKind.Utc).ToString(''yyyy-MM-dd HH:mm:ss.fff''),\r\n                \\npayload.NullableDateTimeOffsetWithValue.Value.ToString(''yyyy-MM-dd HH:mm:ss.fff''))", span="694-696"];
m6_3_464 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", span="689-689"];
m6_7_44 [cluster="RestSharp.RestRequest.AddFile(string, System.Action<System.IO.Stream>, string, string)", file=merged, label="Entry RestSharp.RestRequest.AddFile(string, System.Action<System.IO.Stream>, string, string)", span="166-166"];
m6_7_45 [cluster="RestSharp.RestRequest.AddFile(string, System.Action<System.IO.Stream>, string, string)", file=merged, label="return AddFile(new FileParameter\r\n                           {\r\n                               Name = name,\r\n                               \\nWriter = writer,\r\n                               FileName = fileName,\r\n                               ContentType = contentType\r\n                           });", span="168-174"];
m6_7_46 [cluster="RestSharp.RestRequest.AddFile(string, System.Action<System.IO.Stream>, string, string)", file=merged, label="Exit RestSharp.RestRequest.AddFile(string, System.Action<System.IO.Stream>, string, string)", span="166-166"];
m6_6_55 [cluster="RestSharp.IHttp.AsPostAsync(System.Action<RestSharp.HttpResponse>, string)", file=merged, label="Entry RestSharp.IHttp.AsPostAsync(System.Action<RestSharp.HttpResponse>, string)", span="107-107"];
m6_7_67 [cluster="RestSharp.RestRequest.AddParameter(string, object, RestSharp.ParameterType)", file=merged, label="Entry RestSharp.RestRequest.AddParameter(string, object, RestSharp.ParameterType)", span="372-372"];
m6_7_121 [cluster="RestSharp.RestRequest.AddParameter(string, object, RestSharp.ParameterType)", file=merged, label="return this.AddParameter(new Parameter\r\n                                     {\r\n                                         Name = \\nname,\r\n                                         Value = value,\r\n                                         Type = type\r\n                                     });", span="374-379"];
m6_7_122 [cluster="RestSharp.RestRequest.AddParameter(string, object, RestSharp.ParameterType)", file=merged, label="Exit RestSharp.RestRequest.AddParameter(string, object, RestSharp.ParameterType)", span="372-372"];
m6_15 [cluster="RestSharp.IntegrationTests.AuthenticationTests.UsernamePasswordEchoHandler(System.Net.HttpListenerContext)", file=merged, label="Entry RestSharp.IntegrationTests.AuthenticationTests.UsernamePasswordEchoHandler(System.Net.HttpListenerContext)", span="31-31"];
m6_16 [cluster="RestSharp.IntegrationTests.AuthenticationTests.UsernamePasswordEchoHandler(System.Net.HttpListenerContext)", file=merged, label="var header = context.Request.Headers[''Authorization'']", span="33-33"];
m6_18 [cluster="RestSharp.IntegrationTests.AuthenticationTests.UsernamePasswordEchoHandler(System.Net.HttpListenerContext)", file=merged, label="context.Response.OutputStream.WriteStringUtf8(string.Join(''|'', parts))", span="36-36"];
m6_17 [cluster="RestSharp.IntegrationTests.AuthenticationTests.UsernamePasswordEchoHandler(System.Net.HttpListenerContext)", file=merged, label="var parts = Encoding.ASCII.GetString(Convert.FromBase64String(header.Substring(''Basic ''.Length))).Split(':')", span="34-34"];
m6_19 [cluster="RestSharp.IntegrationTests.AuthenticationTests.UsernamePasswordEchoHandler(System.Net.HttpListenerContext)", file=merged, label="Exit RestSharp.IntegrationTests.AuthenticationTests.UsernamePasswordEchoHandler(System.Net.HttpListenerContext)", span="31-31"];
m6_2_21 [cluster="string.HasValue()", file=merged, label="Entry string.HasValue()", span="98-98"];
m6_3_205 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", span="310-310"];
m6_3_206 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", file=merged, label="var data = File.ReadAllText(Path.Combine(''SampleData'', ''jsonarray.txt''))", span="312-312"];
m6_3_207 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", file=merged, label="var response = new RestResponse { Content = data }", span="313-313"];
m6_3_208 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", file=merged, label="var json = new JsonDeserializer()", span="314-314"];
m6_3_209 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", file=merged, label="var output = json.Deserialize<List<status>>(response)", span="315-315"];
m6_3_210 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", file=merged, label="Assert.AreEqual(4, output.Count)", span="317-317"];
m6_3_211 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", span="310-310"];
m6_8_131 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyNestedList()", file=merged, label="Entry RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyNestedList()", span="875-875"];
m6_8_625 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyNestedList()", file=merged, label="var doc = new XDocument()", span="877-877"];
m6_8_626 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyNestedList()", file=merged, label="var root = new XElement(''EmptyListSample'')", span="878-878"];
m6_8_628 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyNestedList()", file=merged, label="doc.Add(root)", span="881-881"];
m6_8_629 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyNestedList()", file=merged, label="return doc.ToString();", span="883-883"];
m6_8_627 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyNestedList()", file=merged, label="root.Add(new XElement(''Images''))", span="880-880"];
m6_8_630 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyNestedList()", file=merged, label="Exit RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyNestedList()", span="875-875"];
m6_8_143 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file=merged, label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", span="228-228"];
m6_8_144 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file=merged, label="var doc = CreateXmlWithNullValues()", span="230-230"];
m6_8_145 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file=merged, label="var xml = new XmlDeserializer()", span="231-231"];
m6_8_146 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file=merged, label="var output = xml.Deserialize<NullableValues>(new RestResponse { Content = doc })", span="232-232"];
m6_8_147 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file=merged, label="Assert.Null(output.Id)", span="234-234"];
m6_8_148 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file=merged, label="Assert.Null(output.StartDate)", span="235-235"];
m6_8_149 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file=merged, label="Assert.Null(output.UniqueId)", span="236-236"];
m6_8_150 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file=merged, label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", span="228-228"];
m6_8_453 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file=merged, label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", span="610-610"];
m6_8_454 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file=merged, label="var culture = CultureInfo.InvariantCulture", span="612-612"];
m6_8_455 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file=merged, label="var doc = new XDocument(culture)", span="613-613"];
m6_8_464 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file=merged, label="var d = new XmlDeserializer { Culture = culture, }", span="626-626"];
m6_8_456 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file=merged, label="DateTimeOffset dateTimeOffset = new DateTimeOffset(2013, 02, 08, 9, 18, 22, TimeSpan.FromHours(10))", span="614-614"];
m6_8_462 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file=merged, label="doc.Add(root)", span="622-622"];
m6_8_463 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file=merged, label="var response = new RestResponse { Content = doc.ToString() }", span="625-625"];
m6_8_457 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file=merged, label="DateTimeOffset? nullableDateTimeOffsetWithValue = new DateTimeOffset(2013, 02, 08, 9, 18, 23, TimeSpan.FromHours(10))", span="615-615"];
m6_8_459 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file=merged, label="root.Add(new XElement(''DateTimeOffset'', dateTimeOffset))", span="618-618"];
m6_8_466 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file=merged, label="Assert.AreEqual(dateTimeOffset, payload.DateTimeOffset)", span="629-629"];
m6_8_458 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file=merged, label="var root = new XElement(''Dates'')", span="616-616"];
m6_8_461 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file=merged, label="root.Add(new XElement(''NullableDateTimeOffsetWithValue'', nullableDateTimeOffsetWithValue))", span="620-620"];
m6_8_469 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file=merged, label="Assert.AreEqual(nullableDateTimeOffsetWithValue, payload.NullableDateTimeOffsetWithValue)", span="632-632"];
m6_8_460 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file=merged, label="root.Add(new XElement(''NullableDateTimeOffsetWithNull'', string.Empty))", span="619-619"];
m6_8_465 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file=merged, label="var payload = d.Deserialize<DateTimeTestStructure>(response)", span="627-627"];
m6_8_467 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file=merged, label="Assert.Null(payload.NullableDateTimeOffsetWithNull)", span="630-630"];
m6_8_468 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file=merged, label="Assert.True(payload.NullableDateTimeOffsetWithValue.HasValue)", span="631-631"];
m6_8_470 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file=merged, label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", span="610-610"];
m6_3_172 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", span="265-265"];
m6_3_173 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file=merged, label="var doc = this.CreateJsonWithoutEmptyValues()", span="267-267"];
m6_3_174 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file=merged, label="var json = new JsonDeserializer()", span="268-268"];
m6_3_175 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file=merged, label="var output = json.Deserialize<NullableValues>(new RestResponse { Content = doc })", span="269-269"];
m6_3_176 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file=merged, label="Assert.NotNull(output.Id)", span="271-271"];
m6_3_177 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file=merged, label="Assert.NotNull(output.StartDate)", span="272-272"];
m6_3_178 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file=merged, label="Assert.NotNull(output.UniqueId)", span="273-273"];
m6_3_179 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file=merged, label="Assert.AreEqual(123, output.Id)", span="275-275"];
m6_3_180 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file=merged, label="Assert.NotNull(output.StartDate)", span="276-276"];
m6_3_181 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file=merged, label="Assert.AreEqual(\r\n                new DateTime(2010, 2, 21, 9, 35, 00, DateTimeKind.Utc),\r\n                output.StartDate.Value)", span="277-279"];
m6_3_182 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file=merged, label="Assert.AreEqual(new Guid(GUID_STRING), output.UniqueId)", span="280-280"];
m6_3_183 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", span="265-265"];
m6_3_456 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeWithOffset()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeWithOffset()", span="679-679"];
m6_3_457 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeWithOffset()", file=merged, label="var payload = this.GetPayLoad<Iso8601DateTimeTestStructure>(''iso8601datetimes.txt'')", span="681-681"];
m6_3_458 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeWithOffset()", file=merged, label="Assert.AreEqual(\r\n                new DateTime(2012, 7, 19, 10, 23, 25, 544, DateTimeKind.Utc),\r\n                payload.DateTimeWithOffset.ToUniversalTime())", span="683-685"];
m6_3_459 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeWithOffset()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeWithOffset()", span="679-679"];
m6_8_168 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file=merged, label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", span="256-256"];
m6_8_169 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file=merged, label="var culture = CultureInfo.InvariantCulture", span="258-258"];
m6_8_170 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file=merged, label="var doc = new XDocument(culture)", span="259-259"];
m6_8_183 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file=merged, label="var d = new XmlDeserializer { Culture = culture, }", span="275-275"];
m6_8_171 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file=merged, label="TimeSpan? nullTimespan = null", span="260-260"];
m6_8_181 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file=merged, label="doc.Add(root)", span="272-272"];
m6_8_182 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file=merged, label="var response = new RestResponse { Content = doc.ToString() }", span="274-274"];
m6_8_172 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file=merged, label="TimeSpan? nullValueTimeSpan = new TimeSpan(21, 30, 7)", span="261-261"];
m6_8_179 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file=merged, label="root.Add(new XElement(''NullableWithoutValue'', nullTimespan))", span="269-269"];
m6_8_173 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file=merged, label="var root = new XElement(''Person'')", span="262-262"];
m6_8_180 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file=merged, label="root.Add(new XElement(''NullableWithValue'', nullValueTimeSpan))", span="270-270"];
m6_8_174 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file=merged, label="root.Add(new XElement(''Tick'', new TimeSpan(468006)))", span="264-264"];
m6_8_175 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file=merged, label="root.Add(new XElement(''Millisecond'', new TimeSpan(0, 0, 0, 0, 125)))", span="265-265"];
m6_8_176 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file=merged, label="root.Add(new XElement(''Second'', new TimeSpan(0, 0, 8)))", span="266-266"];
m6_8_177 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file=merged, label="root.Add(new XElement(''Minute'', new TimeSpan(0, 55, 2)))", span="267-267"];
m6_8_178 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file=merged, label="root.Add(new XElement(''Hour'', new TimeSpan(21, 30, 7)))", span="268-268"];
m6_8_184 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file=merged, label="var payload = d.Deserialize<TimeSpanTestStructure>(response)", span="276-276"];
m6_8_185 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file=merged, label="Assert.AreEqual(new TimeSpan(468006), payload.Tick)", span="278-278"];
m6_8_186 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file=merged, label="Assert.AreEqual(new TimeSpan(0, 0, 0, 0, 125), payload.Millisecond)", span="279-279"];
m6_8_187 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file=merged, label="Assert.AreEqual(new TimeSpan(0, 0, 8), payload.Second)", span="280-280"];
m6_8_188 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file=merged, label="Assert.AreEqual(new TimeSpan(0, 55, 2), payload.Minute)", span="281-281"];
m6_8_189 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file=merged, label="Assert.AreEqual(new TimeSpan(21, 30, 7), payload.Hour)", span="282-282"];
m6_8_190 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file=merged, label="Assert.Null(payload.NullableWithoutValue)", span="283-283"];
m6_8_191 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file=merged, label="Assert.NotNull(payload.NullableWithValue)", span="284-284"];
m6_8_192 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file=merged, label="Assert.AreEqual(new TimeSpan(21, 30, 7), payload.NullableWithValue.Value)", span="285-285"];
m6_8_193 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file=merged, label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", span="256-256"];
m6_3_416 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", span="599-599"];
m6_3_417 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", file=merged, label="var doc = this.CreateUnixDateJson()", span="601-601"];
m6_3_418 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", file=merged, label="var d = new JsonDeserializer()", span="602-602"];
m6_3_419 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", file=merged, label="var response = new RestResponse { Content = doc }", span="603-603"];
m6_3_420 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", file=merged, label="var bd = d.Deserialize<Birthdate>(response)", span="604-604"];
m6_3_421 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", file=merged, label="Assert.AreEqual(new DateTime(2011, 6, 30, 8, 15, 46, DateTimeKind.Utc), bd.Value)", span="606-606"];
m6_3_422 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", span="599-599"];
m6_2_170 [cluster="object.ChangeType(System.Type, System.Globalization.CultureInfo)", file=merged, label="Entry object.ChangeType(System.Type, System.Globalization.CultureInfo)", span="82-82"];
m6_3_68 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Toplevel_Item_Without_Array()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Toplevel_Item_Without_Array()", span="126-126"];
m6_3_69 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Toplevel_Item_Without_Array()", file=merged, label="string content = ''\''johnsheehan\''''", span="128-128"];
m6_3_70 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Toplevel_Item_Without_Array()", file=merged, label="var json = new JsonDeserializer()", span="129-129"];
m6_3_71 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Toplevel_Item_Without_Array()", file=merged, label="var output = json.Deserialize<List<string>>(new RestResponse { Content = content })", span="130-130"];
m6_3_72 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Toplevel_Item_Without_Array()", file=merged, label="Assert.True(output.SequenceEqual(new[] { ''johnsheehan'' }))", span="132-132"];
m6_3_73 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Toplevel_Item_Without_Array()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Toplevel_Item_Without_Array()", span="126-126"];
m6_7_25 [cluster="RestSharp.RestRequest.AddFile(string, string, string)", file=merged, label="Entry RestSharp.RestRequest.AddFile(string, string, string)", span="124-124"];
m6_7_26 [cluster="RestSharp.RestRequest.AddFile(string, string, string)", file=merged, label="FileInfo f = new FileInfo(path)", span="126-126"];
m6_7_28 [cluster="RestSharp.RestRequest.AddFile(string, string, string)", file=merged, label="return AddFile(new FileParameter\r\n                           {\r\n                               Name = name,\r\n                               \\nFileName = Path.GetFileName(path),\r\n                               ContentLength = fileLength,\r\n                               \\nWriter = s =>\r\n                                        {\r\n                                            using (var file = new \\nStreamReader(path))\r\n                                            {\r\n                                                file.BaseStream.CopyTo(\\ns);\r\n                                            }\r\n                                        },\r\n                                \\nContentType = contentType\r\n                           });", span="129-142"];
m6_7_27 [cluster="RestSharp.RestRequest.AddFile(string, string, string)", file=merged, label="long fileLength = f.Length", span="127-127"];
m6_7_29 [cluster="RestSharp.RestRequest.AddFile(string, string, string)", file=merged, label="Exit RestSharp.RestRequest.AddFile(string, string, string)", span="124-124"];
m6_7_30 [cluster="System.IO.FileInfo.FileInfo(string)", file=merged, label="Entry System.IO.FileInfo.FileInfo(string)", span="0-0"];
m6_3_379 [cluster="RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file=merged, label="Entry RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", span="554-554"];
m6_3_380 [cluster="RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file=merged, label="var doc = this.CreateJson()", span="556-556"];
m6_3_381 [cluster="RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file=merged, label="var response = new RestResponse { Content = doc }", span="557-557"];
m6_3_382 [cluster="RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file=merged, label="var d = new JsonDeserializer()", span="558-558"];
m6_3_383 [cluster="RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file=merged, label="var p = d.Deserialize<PersonForJson>(response)", span="559-559"];
m6_3_384 [cluster="RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file=merged, label="Assert.Null(p.ReadOnlyProxy)", span="561-561"];
m6_3_385 [cluster="RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file=merged, label="Exit RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", span="554-554"];
m6_3_161 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", file=merged, label="Entry RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", span="923-923"];
m6_3_590 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", file=merged, label="var doc = new JsonObject()", span="925-925"];
m6_3_591 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", file=merged, label="doc[''Id''] = null", span="927-927"];
m6_3_592 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", file=merged, label="doc[''StartDate''] = null", span="928-928"];
m6_3_593 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", file=merged, label="doc[''UniqueId''] = null", span="929-929"];
m6_3_594 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", file=merged, label="return doc.ToString();", span="931-931"];
m6_3_595 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", file=merged, label="Exit RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", span="923-923"];
m6_8_444 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", file=merged, label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", span="598-598"];
m6_8_445 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", file=merged, label="var doc = CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", span="600-600"];
m6_8_446 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", file=merged, label="var xml = new XmlDeserializer()", span="601-601"];
m6_8_447 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", file=merged, label="var output = xml.Deserialize<NullableValues>(new RestResponse { Content = doc })", span="602-602"];
m6_8_448 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", file=merged, label="Assert.Null(output.Id)", span="604-604"];
m6_8_449 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", file=merged, label="Assert.Null(output.StartDate)", span="605-605"];
m6_8_450 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", file=merged, label="Assert.AreEqual(new Guid(GUID_STRING), output.UniqueId)", span="606-606"];
m6_8_451 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", file=merged, label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", span="598-598"];
m6_3_212 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_Inherited_List()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_Inherited_List()", span="321-321"];
m6_3_213 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_Inherited_List()", file=merged, label="var data = File.ReadAllText(Path.Combine(''SampleData'', ''jsonarray.txt''))", span="323-323"];
m6_3_214 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_Inherited_List()", file=merged, label="var response = new RestResponse { Content = data }", span="324-324"];
m6_3_215 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_Inherited_List()", file=merged, label="var json = new JsonDeserializer()", span="325-325"];
m6_3_216 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_Inherited_List()", file=merged, label="var output = json.Deserialize<StatusList>(response)", span="326-326"];
m6_3_217 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_Inherited_List()", file=merged, label="Assert.AreEqual(4, output.Count)", span="328-328"];
m6_3_218 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_Inherited_List()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_Inherited_List()", span="321-321"];
m6_7_139 [cluster="System.Uri.CheckHostName(string)", file=merged, label="Entry System.Uri.CheckHostName(string)", span="0-0"];
m6_8_344 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file=merged, label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", span="464-464"];
m6_8_345 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file=merged, label="var doc = CreateDashesXml()", span="466-466"];
m6_8_346 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file=merged, label="var response = new RestResponse { Content = doc }", span="467-467"];
m6_8_347 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file=merged, label="var d = new XmlDeserializer()", span="468-468"];
m6_8_348 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file=merged, label="var p = d.Deserialize<PersonForXml>(response)", span="469-469"];
m6_8_349 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file=merged, label="Assert.AreEqual(''John Sheehan'', p.Name)", span="471-471"];
m6_8_350 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file=merged, label="Assert.AreEqual(new DateTime(2009, 9, 25, 0, 6, 1), p.StartDate)", span="472-472"];
m6_8_351 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file=merged, label="Assert.AreEqual(28, p.Age)", span="473-473"];
m6_8_352 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file=merged, label="Assert.AreEqual(long.MaxValue, p.BigNumber)", span="474-474"];
m6_8_353 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file=merged, label="Assert.AreEqual(99.9999m, p.Percent)", span="475-475"];
m6_8_354 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file=merged, label="Assert.AreEqual(false, p.IsCool)", span="476-476"];
m6_8_355 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file=merged, label="Assert.AreEqual(new Guid(GUID_STRING), p.UniqueId)", span="477-477"];
m6_8_356 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file=merged, label="Assert.AreEqual(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="478-478"];
m6_8_357 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file=merged, label="Assert.AreEqual(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="479-479"];
m6_8_358 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file=merged, label="Assert.NotNull(p.Friends)", span="480-480"];
m6_8_359 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file=merged, label="Assert.AreEqual(10, p.Friends.Count)", span="481-481"];
m6_8_360 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file=merged, label="Assert.NotNull(p.BestFriend)", span="482-482"];
m6_8_361 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file=merged, label="Assert.AreEqual(''The Fonz'', p.BestFriend.Name)", span="483-483"];
m6_8_362 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file=merged, label="Assert.AreEqual(1952, p.BestFriend.Since)", span="484-484"];
m6_8_363 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file=merged, label="Assert.NotNull(p.Foes)", span="485-485"];
m6_8_364 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file=merged, label="Assert.AreEqual(5, p.Foes.Count)", span="486-486"];
m6_8_365 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file=merged, label="Assert.AreEqual(''Yankees'', p.Foes.Team)", span="487-487"];
m6_8_366 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file=merged, label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", span="464-464"];
m6_7_143 [cluster="RestSharp.RestRequest.AddUrlSegment(string, string)", file=merged, label="Entry RestSharp.RestRequest.AddUrlSegment(string, string)", span="443-443"];
m6_7_144 [cluster="RestSharp.RestRequest.AddUrlSegment(string, string)", file=merged, label="return this.AddParameter(name, value, ParameterType.UrlSegment);", span="445-445"];
m6_7_145 [cluster="RestSharp.RestRequest.AddUrlSegment(string, string)", file=merged, label="Exit RestSharp.RestRequest.AddUrlSegment(string, string)", span="443-443"];
m6_7_140 [cluster="RestSharp.RestRequest.AddCookie(string, string)", file=merged, label="Entry RestSharp.RestRequest.AddCookie(string, string)", span="432-432"];
m6_7_141 [cluster="RestSharp.RestRequest.AddCookie(string, string)", file=merged, label="return this.AddParameter(name, value, ParameterType.Cookie);", span="434-434"];
m6_7_142 [cluster="RestSharp.RestRequest.AddCookie(string, string)", file=merged, label="Exit RestSharp.RestRequest.AddCookie(string, string)", span="432-432"];
m6_2_82 [cluster="System.Activator.CreateInstance(System.Type)", file=merged, label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m6_2_19 [cluster="System.Activator.CreateInstance<T>()", file=merged, label="Entry System.Activator.CreateInstance<T>()", span="0-0"];
m6_8_167 [cluster="System.Guid.Guid(string)", file=merged, label="Entry System.Guid.Guid(string)", span="0-0"];
m6_2_178 [cluster="System.Guid.Guid(string)", file=merged, label="Entry System.Guid.Guid(string)", span="0-0"];
m6_3_116 [cluster="System.Guid.Guid(string)", file=merged, label="Entry System.Guid.Guid(string)", span="0-0"];
m6_2_25 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildDictionary(System.Type, object)", file=merged, label="Entry RestSharp.Deserializers.JsonDeserializer.BuildDictionary(System.Type, object)", span="116-116"];
m6_2_72 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildDictionary(System.Type, object)", file=merged, label="var valueType = type.GetGenericArguments()[1]", span="120-120"];
m6_2_70 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildDictionary(System.Type, object)", file=merged, label="var dict = (IDictionary)Activator.CreateInstance(type)", span="118-118"];
m6_2_71 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildDictionary(System.Type, object)", file=merged, label="var keyType = type.GetGenericArguments()[0]", span="119-119"];
m6_2_73 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildDictionary(System.Type, object)", file=merged, label="(IDictionary<string, object>)parent", span="122-122"];
m6_2_76 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildDictionary(System.Type, object)", file=merged, label="valueType.IsGenericType && valueType.GetGenericTypeDefinition() == typeof(List<>)", span="130-130"];
m6_2_77 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildDictionary(System.Type, object)", file=merged, label="item = BuildList(valueType, child.Value)", span="132-132"];
m6_2_78 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildDictionary(System.Type, object)", file=merged, label="item = ConvertValue(valueType, child.Value)", span="136-136"];
m6_2_79 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildDictionary(System.Type, object)", file=merged, label="dict.Add(key, item)", span="139-139"];
m6_2_80 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildDictionary(System.Type, object)", file=merged, label="return dict;", span="142-142"];
m6_2_74 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildDictionary(System.Type, object)", file=merged, label="var key = keyType != typeof (string) ? \r\n                    Convert.ChangeType(child.Key, keyType, CultureInfo.InvariantCulture) : \r\n                    \\nchild.Key", span="124-126"];
m6_2_75 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildDictionary(System.Type, object)", file=merged, label="object item", span="128-128"];
m6_2_81 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildDictionary(System.Type, object)", file=merged, label="Exit RestSharp.Deserializers.JsonDeserializer.BuildDictionary(System.Type, object)", span="116-116"];
m6_7_12 [cluster="RestSharp.RestRequest.RestRequest(RestSharp.Method)", file=merged, label="Entry RestSharp.RestRequest.RestRequest(RestSharp.Method)", span="77-77"];
m6_7_13 [cluster="RestSharp.RestRequest.RestRequest(RestSharp.Method)", file=merged, label="this.Method = method", span="79-79"];
m6_7_14 [cluster="RestSharp.RestRequest.RestRequest(RestSharp.Method)", file=merged, label="Exit RestSharp.RestRequest.RestRequest(RestSharp.Method)", span="77-77"];
m6_7_126 [cluster="RestSharp.RestRequest.AddHeader(string, string)", file=merged, label="Entry RestSharp.RestRequest.AddHeader(string, string)", span="411-411"];
m6_7_131 [cluster="RestSharp.RestRequest.AddHeader(string, string)", file=merged, label="return this.AddParameter(name, value, ParameterType.HttpHeader);", span="423-423"];
m6_7_127 [cluster="RestSharp.RestRequest.AddHeader(string, string)", file=merged, label="string portSplit = @'':\d+''", span="414-414"];
m6_7_129 [cluster="RestSharp.RestRequest.AddHeader(string, string)", file=merged, label="name == ''Host'' && invalidHost(value)", span="418-418"];
m6_7_128 [cluster="RestSharp.RestRequest.AddHeader(string, string)", file=merged, label="Func<string, bool> invalidHost =\r\n                host => Uri.CheckHostName(Regex.Split(host, portSplit)[0]) == UriHostNameType.Unknown", span="415-416"];
m6_7_130 [cluster="RestSharp.RestRequest.AddHeader(string, string)", file=merged, label="throw new ArgumentException(''The specified value is not a valid Host header string.'', ''value'');", span="420-420"];
m6_7_132 [cluster="RestSharp.RestRequest.AddHeader(string, string)", file=merged, label="Exit RestSharp.RestRequest.AddHeader(string, string)", span="411-411"];
m6_3_502 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", span="755-755"];
m6_3_503 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", file=merged, label="var doc = File.ReadAllText(Path.Combine(''SampleData'', ''jsondictionary.txt''))", span="757-757"];
m6_3_504 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", file=merged, label="var json = new JsonDeserializer { RootElement = ''response'' }", span="758-758"];
m6_3_505 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", file=merged, label="var output = json.Deserialize<EmployeeTracker>(new RestResponse { Content = doc })", span="760-760"];
m6_3_506 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", file=merged, label="Assert.IsNotEmpty(output.EmployeesMail)", span="762-762"];
m6_3_507 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", file=merged, label="Assert.IsNotEmpty(output.EmployeesTime)", span="763-763"];
m6_3_508 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", file=merged, label="Assert.IsNotEmpty(output.EmployeesPay)", span="764-764"];
m6_3_509 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", span="755-755"];
m6_8_213 [cluster="System.DateTime.ToString(string, System.IFormatProvider)", file=merged, label="Entry System.DateTime.ToString(string, System.IFormatProvider)", span="0-0"];
m6_3_203 [cluster="System.DateTime.ToString(string, System.IFormatProvider)", file=merged, label="Entry System.DateTime.ToString(string, System.IFormatProvider)", span="0-0"];
m6_3_150 [cluster="System.DateTime.ToString()", file=merged, label="Entry System.DateTime.ToString()", span="0-0"];
m6_3_558 [cluster="RestSharp.Tests.Birthdate.Birthdate()", file=merged, label="Entry RestSharp.Tests.Birthdate.Birthdate()", span="148-148"];
m6_7_50 [cluster="System.Collections.Generic.List<T>.Add(T)", file=merged, label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m6_3_532 [cluster="System.Collections.Generic.List<T>.Add(T)", file=merged, label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m6_8_153 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file=merged, label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", span="240-240"];
m6_8_154 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file=merged, label="var culture = CultureInfo.InvariantCulture", span="242-242"];
m6_8_155 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file=merged, label="var doc = CreateXmlWithoutEmptyValues(culture)", span="243-243"];
m6_8_156 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file=merged, label="var xml = new XmlDeserializer { Culture = culture }", span="244-244"];
m6_8_157 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file=merged, label="var output = xml.Deserialize<NullableValues>(new RestResponse { Content = doc })", span="245-245"];
m6_8_158 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file=merged, label="Assert.NotNull(output.Id)", span="247-247"];
m6_8_159 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file=merged, label="Assert.NotNull(output.StartDate)", span="248-248"];
m6_8_160 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file=merged, label="Assert.NotNull(output.UniqueId)", span="249-249"];
m6_8_161 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file=merged, label="Assert.AreEqual(123, output.Id)", span="250-250"];
m6_8_162 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file=merged, label="Assert.AreEqual(new DateTime(2010, 2, 21, 9, 35, 00), output.StartDate)", span="251-251"];
m6_8_163 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file=merged, label="Assert.AreEqual(new Guid(GUID_STRING), output.UniqueId)", span="252-252"];
m6_8_164 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file=merged, label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", span="240-240"];
m6_7_32 [cluster="System.IO.Path.GetFileName(string)", file=merged, label="Entry System.IO.Path.GetFileName(string)", span="0-0"];
m6_3_118 [cluster="RestSharp.Tests.JsonArray.JsonArray()", file=merged, label="Entry RestSharp.Tests.JsonArray.JsonArray()", span="91-91"];
m6_3_491 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Decimal_With_Four_Zeros_After_Floating_Point()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Decimal_With_Four_Zeros_After_Floating_Point()", span="736-736"];
m6_3_492 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Decimal_With_Four_Zeros_After_Floating_Point()", file=merged, label="string json = ''{\''Value\'':0.00005557}''", span="738-738"];
m6_3_493 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Decimal_With_Four_Zeros_After_Floating_Point()", file=merged, label="var response = new RestResponse { Content = json }", span="739-739"];
m6_3_494 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Decimal_With_Four_Zeros_After_Floating_Point()", file=merged, label="var d = new JsonDeserializer()", span="740-740"];
m6_3_495 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Decimal_With_Four_Zeros_After_Floating_Point()", file=merged, label="var result = d.Deserialize<DecimalNumber>(response)", span="741-741"];
m6_3_496 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Decimal_With_Four_Zeros_After_Floating_Point()", file=merged, label="Assert.AreEqual(result.Value, .00005557m)", span="743-743"];
m6_3_497 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Decimal_With_Four_Zeros_After_Floating_Point()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Decimal_With_Four_Zeros_After_Floating_Point()", span="736-736"];
m6_8_319 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file=merged, label="Entry RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", span="727-727"];
m6_8_534 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file=merged, label="var doc = new XDocument()", span="729-729"];
m6_8_535 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file=merged, label="var root = new XElement(''Person'')", span="730-730"];
m6_8_561 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file=merged, label="doc.Add(root)", span="768-768"];
m6_8_562 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file=merged, label="return doc.ToString();", span="770-770"];
m6_8_536 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file=merged, label="root.Add(new XElement(''Name'', ''John Sheehan''))", span="732-732"];
m6_8_537 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file=merged, label="root.Add(new XElement(''Start_Date'', new DateTime(2009, 9, 25, 0, 6, 1)))", span="733-733"];
m6_8_538 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file=merged, label="root.Add(new XAttribute(''Age'', 28))", span="734-734"];
m6_8_539 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file=merged, label="root.Add(new XElement(''Percent'', 99.9999m))", span="735-735"];
m6_8_540 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file=merged, label="root.Add(new XElement(''Big-Number'', long.MaxValue))", span="736-736"];
m6_8_541 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file=merged, label="root.Add(new XAttribute(''Is-Cool'', false))", span="737-737"];
m6_8_542 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file=merged, label="root.Add(new XElement(''Ignore'', ''dummy''))", span="738-738"];
m6_8_543 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file=merged, label="root.Add(new XAttribute(''Read-Only'', ''dummy''))", span="739-739"];
m6_8_544 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file=merged, label="root.Add(new XElement(''Unique-Id'', new Guid(GUID_STRING)))", span="740-740"];
m6_8_545 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file=merged, label="root.Add(new XElement(''Url'', ''http://example.com''))", span="741-741"];
m6_8_546 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file=merged, label="root.Add(new XElement(''Url-Path'', ''/foo/bar''))", span="742-742"];
m6_8_547 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file=merged, label="root.Add(new XElement(''Best-Friend'',\r\n                new XElement(''Name'', ''The Fonz''),\r\n                new XAttribute(''\\nSince'', 1952)))", span="743-745"];
m6_8_553 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file=merged, label="root.Add(friends)", span="756-756"];
m6_8_560 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file=merged, label="root.Add(foes)", span="767-767"];
m6_8_548 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file=merged, label="var friends = new XElement(''Friends'')", span="747-747"];
m6_8_549 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file=merged, label="int i = 0", span="749-749"];
m6_8_551 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file=merged, label="friends.Add(new XElement(''Friend'',\r\n                    new XElement(''Name'', ''Friend'' + i),\r\n                    new XAttribute(''\\nSince'', DateTime.Now.Year - i)))", span="751-753"];
m6_8_550 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file=merged, label="i < 10", span="749-749"];
m6_8_552 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file=merged, label="i++", span="749-749"];
m6_8_554 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file=merged, label="var foes = new XElement(''Foes'')", span="758-758"];
m6_8_555 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file=merged, label="foes.Add(new XAttribute(''Team'', ''Yankees''))", span="760-760"];
m6_8_558 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file=merged, label="foes.Add(new XElement(''Foe'', new XElement(''Nickname'', ''Foe'' + i)))", span="764-764"];
m6_8_556 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file=merged, label="int i = 0", span="762-762"];
m6_8_557 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file=merged, label="i < 5", span="762-762"];
m6_8_559 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file=merged, label="i++", span="762-762"];
m6_8_563 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file=merged, label="Exit RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", span="727-727"];
m6_8_59 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_Without_Matching_Class_Case()", file=merged, label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_Without_Matching_Class_Case()", span="106-106"];
m6_8_60 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_Without_Matching_Class_Case()", file=merged, label="var xmlpath = this.PathFor(''InlineListSample.xml'')", span="108-108"];
m6_8_61 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_Without_Matching_Class_Case()", file=merged, label="var doc = XDocument.Load(xmlpath)", span="109-109"];
m6_8_62 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_Without_Matching_Class_Case()", file=merged, label="var xml = new XmlDeserializer()", span="110-110"];
m6_8_63 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_Without_Matching_Class_Case()", file=merged, label="var output = xml.Deserialize<List<Image>>(new RestResponse { Content = doc.ToString() })", span="111-111"];
m6_8_64 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_Without_Matching_Class_Case()", file=merged, label="Assert.IsNotEmpty(output)", span="113-113"];
m6_8_65 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_Without_Matching_Class_Case()", file=merged, label="Assert.AreEqual(4, output.Count)", span="114-114"];
m6_8_66 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_Without_Matching_Class_Case()", file=merged, label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_Without_Matching_Class_Case()", span="106-106"];
m6_3_346 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", span="508-508"];
m6_3_347 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="var doc = this.CreateJsonWithDashes()", span="510-510"];
m6_3_348 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="var d = new JsonDeserializer()", span="511-511"];
m6_3_349 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="var response = new RestResponse { Content = doc }", span="512-512"];
m6_3_350 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="var p = d.Deserialize<PersonForJson>(response)", span="513-513"];
m6_3_351 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="Assert.AreEqual(''John Sheehan'', p.Name)", span="515-515"];
m6_3_352 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="Assert.AreEqual(28, p.Age)", span="517-517"];
m6_3_353 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="Assert.AreEqual(long.MaxValue, p.BigNumber)", span="518-518"];
m6_3_354 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="Assert.AreEqual(99.9999m, p.Percent)", span="519-519"];
m6_3_355 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="Assert.AreEqual(false, p.IsCool)", span="520-520"];
m6_3_356 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="Assert.AreEqual(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="521-521"];
m6_3_357 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="Assert.AreEqual(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="522-522"];
m6_3_358 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="Assert.NotNull(p.Friends)", span="523-523"];
m6_3_359 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="Assert.AreEqual(10, p.Friends.Count)", span="524-524"];
m6_3_360 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="Assert.NotNull(p.BestFriend)", span="525-525"];
m6_3_361 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="Assert.AreEqual(''The Fonz'', p.BestFriend.Name)", span="526-526"];
m6_3_362 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="Assert.AreEqual(1952, p.BestFriend.Since)", span="527-527"];
m6_3_363 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="Assert.IsNotEmpty(p.Foes)", span="528-528"];
m6_3_364 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="Assert.AreEqual(''Foe 1'', p.Foes[''dict1''].Nickname)", span="529-529"];
m6_3_365 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="Assert.AreEqual(''Foe 2'', p.Foes[''dict2''].Nickname)", span="530-530"];
m6_3_366 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", span="508-508"];
m6_2_169 [cluster="string.IsNullOrEmpty(string)", file=merged, label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m6_3_32 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", span="72-72"];
m6_3_33 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", file=merged, label="var doc = File.ReadAllText(Path.Combine(''SampleData'', ''4sq.txt''))", span="74-74"];
m6_3_34 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", file=merged, label="var json = new JsonDeserializer { RootElement = ''response'' }", span="75-75"];
m6_3_35 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", file=merged, label="var output = json.Deserialize<VenuesResponse>(new RestResponse { Content = doc })", span="77-77"];
m6_3_36 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", file=merged, label="Assert.IsNotEmpty(output.Groups)", span="79-79"];
m6_3_37 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", span="72-72"];
m6_3_403 [cluster="RestSharp.Tests.JsonTests.GetPayLoad<T>(string)", file=merged, label="Entry RestSharp.Tests.JsonTests.GetPayLoad<T>(string)", span="980-980"];
m6_3_622 [cluster="RestSharp.Tests.JsonTests.GetPayLoad<T>(string)", file=merged, label="var doc = File.ReadAllText(Path.Combine(''SampleData'', fileName))", span="982-982"];
m6_3_623 [cluster="RestSharp.Tests.JsonTests.GetPayLoad<T>(string)", file=merged, label="var response = new RestResponse { Content = doc }", span="983-983"];
m6_3_624 [cluster="RestSharp.Tests.JsonTests.GetPayLoad<T>(string)", file=merged, label="var d = new JsonDeserializer()", span="984-984"];
m6_3_625 [cluster="RestSharp.Tests.JsonTests.GetPayLoad<T>(string)", file=merged, label="return d.Deserialize<T>(response);", span="986-986"];
m6_3_626 [cluster="RestSharp.Tests.JsonTests.GetPayLoad<T>(string)", file=merged, label="Exit RestSharp.Tests.JsonTests.GetPayLoad<T>(string)", span="980-980"];
m6_6_10 [cluster="System.Enum.GetName(System.Type, object)", file=merged, label="Entry System.Enum.GetName(System.Type, object)", span="0-0"];
m6_7_40 [cluster="RestSharp.RestRequest.AddFile(string, byte[], string, string)", file=merged, label="Entry RestSharp.RestRequest.AddFile(string, byte[], string, string)", span="153-153"];
m6_7_41 [cluster="RestSharp.RestRequest.AddFile(string, byte[], string, string)", file=merged, label="return this.AddFile(FileParameter.Create(name, bytes, fileName, contentType));", span="155-155"];
m6_7_42 [cluster="RestSharp.RestRequest.AddFile(string, byte[], string, string)", file=merged, label="Exit RestSharp.RestRequest.AddFile(string, byte[], string, string)", span="153-153"];
m6_7_79 [cluster="RestSharp.RestRequest.AddXmlBody(object, string)", file=merged, label="Entry RestSharp.RestRequest.AddXmlBody(object, string)", span="260-260"];
m6_7_80 [cluster="RestSharp.RestRequest.AddXmlBody(object, string)", file=merged, label="this.RequestFormat = DataFormat.Xml", span="262-262"];
m6_7_81 [cluster="RestSharp.RestRequest.AddXmlBody(object, string)", file=merged, label="return this.AddBody(obj, xmlNamespace);", span="263-263"];
m6_7_82 [cluster="RestSharp.RestRequest.AddXmlBody(object, string)", file=merged, label="Exit RestSharp.RestRequest.AddXmlBody(object, string)", span="260-260"];
m6_1_0 [cluster="RestSharp.IRestRequest.AddBody(object, string)", file=merged, label="Entry RestSharp.IRestRequest.AddBody(object, string)", span="170-170"];
m6_1_1 [cluster="RestSharp.IRestRequest.AddBody(object, string)", file=merged, label="Exit RestSharp.IRestRequest.AddBody(object, string)", span="170-170"];
m6_6_52 [cluster="RestSharp.RestClient.DoAsPostAsync(RestSharp.IHttp, System.Action<RestSharp.HttpResponse>, string)", file=merged, label="Entry RestSharp.RestClient.DoAsPostAsync(RestSharp.IHttp, System.Action<RestSharp.HttpResponse>, string)", span="112-112"];
m6_6_53 [cluster="RestSharp.RestClient.DoAsPostAsync(RestSharp.IHttp, System.Action<RestSharp.HttpResponse>, string)", file=merged, label="return http.AsPostAsync(response_cb, method);", span="114-114"];
m6_6_54 [cluster="RestSharp.RestClient.DoAsPostAsync(RestSharp.IHttp, System.Action<RestSharp.HttpResponse>, string)", file=merged, label="Exit RestSharp.RestClient.DoAsPostAsync(RestSharp.IHttp, System.Action<RestSharp.HttpResponse>, string)", span="112-112"];
m6_3_80 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", span="147-147"];
m6_3_81 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", file=merged, label="var doc = File.ReadAllText(Path.Combine(''SampleData'', ''jsondictionary.txt''))", span="149-149"];
m6_3_82 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", file=merged, label="var json = new JsonDeserializer()", span="150-150"];
m6_3_83 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", file=merged, label="var output = json.Deserialize<Dictionary<string, object>>(new RestResponse { Content = doc })", span="151-151"];
m6_3_84 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", file=merged, label="Assert.AreEqual(output.Keys.Count, 3)", span="153-153"];
m6_3_85 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", file=merged, label="var firstKeysVal = output.FirstOrDefault().Value", span="155-155"];
m6_3_86 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", file=merged, label="Assert.IsInstanceOf<IDictionary>(firstKeysVal)", span="157-157"];
m6_3_87 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", span="147-147"];
m6_1_24 [cluster="RestSharp.IRestRequest.AddCookie(string, string)", file=merged, label="Entry RestSharp.IRestRequest.AddCookie(string, string)", span="279-279"];
m6_1_25 [cluster="RestSharp.IRestRequest.AddCookie(string, string)", file=merged, label="Exit RestSharp.IRestRequest.AddCookie(string, string)", span="279-279"];
m6_3_262 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", span="393-393"];
m6_3_263 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", file=merged, label="var doc = new JsonObject()", span="395-395"];
m6_3_264 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", file=merged, label="doc[''Age''] = ''28''", span="397-397"];
m6_3_266 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", file=merged, label="var response = new RestResponse { Content = doc.ToString() }", span="400-400"];
m6_3_265 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", file=merged, label="var d = new JsonDeserializer()", span="399-399"];
m6_3_267 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", file=merged, label="var p = d.Deserialize<PersonForJson>(response)", span="401-401"];
m6_3_268 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", file=merged, label="Assert.AreEqual(28, p.Age)", span="403-403"];
m6_3_269 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", span="393-393"];
m6_64 [cluster="System.Diagnostics.Process.Start(string)", file=merged, label="Entry System.Diagnostics.Process.Start(string)", span="0-0"];
m6_8_238 [cluster="System.Uri.Uri(string, System.UriKind)", file=merged, label="Entry System.Uri.Uri(string, System.UriKind)", span="0-0"];
m6_2_172 [cluster="System.Uri.Uri(string, System.UriKind)", file=merged, label="Entry System.Uri.Uri(string, System.UriKind)", span="0-0"];
m6_3_305 [cluster="System.Uri.Uri(string, System.UriKind)", file=merged, label="Entry System.Uri.Uri(string, System.UriKind)", span="0-0"];
m6_2_83 [cluster="System.Type.GetGenericArguments()", file=merged, label="Entry System.Type.GetGenericArguments()", span="0-0"];
m6_1_20 [cluster="RestSharp.IRestRequest.AddParameter(string, object, string, RestSharp.ParameterType)", file=merged, label="Entry RestSharp.IRestRequest.AddParameter(string, object, string, RestSharp.ParameterType)", span="263-263"];
m6_1_21 [cluster="RestSharp.IRestRequest.AddParameter(string, object, string, RestSharp.ParameterType)", file=merged, label="Exit RestSharp.IRestRequest.AddParameter(string, object, string, RestSharp.ParameterType)", span="263-263"];
m6_2_107 [cluster="System.Type.GetInterfaces()", file=merged, label="Entry System.Type.GetInterfaces()", span="0-0"];
m6_3_469 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", span="708-708"];
m6_3_470 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file=merged, label="var doc = this.CreateJsonStringDictionary()", span="710-710"];
m6_3_471 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file=merged, label="var d = new JsonDeserializer()", span="711-711"];
m6_3_472 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file=merged, label="var response = new RestResponse { Content = doc }", span="712-712"];
m6_3_473 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file=merged, label="var bd = d.Deserialize<Dictionary<string, string>>(response)", span="713-713"];
m6_3_474 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file=merged, label="Assert.AreEqual(bd[''Thing1''], ''Thing1'')", span="715-715"];
m6_3_475 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file=merged, label="Assert.AreEqual(bd[''Thing2''], ''Thing2'')", span="716-716"];
m6_3_476 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file=merged, label="Assert.AreEqual(bd[''ThingRed''], ''ThingRed'')", span="717-717"];
m6_3_477 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file=merged, label="Assert.AreEqual(bd[''ThingBlue''], ''ThingBlue'')", span="718-718"];
m6_3_478 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", span="708-708"];
m6_3_465 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Null()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Null()", span="700-700"];
m6_3_466 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Null()", file=merged, label="var payload = this.GetPayLoad<DateTimeTestStructure>(''datetimes.txt'')", span="702-702"];
m6_3_467 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Null()", file=merged, label="Assert.Null(payload.NullableDateTimeOffsetWithNull)", span="704-704"];
m6_3_468 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Null()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Null()", span="700-700"];
m6_3_135 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", span="221-221"];
m6_3_136 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", color=green, community=0, file=merged, label="DateTime item0 = new DateTime(2010, 2, 8, 11, 11, 11, DateTimeKind.Local)", prediction=16, span="223-223"];
m6_3_137 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", color=green, community=0, file=merged, label="DateTime item1 = new DateTime(2011, 2, 8, 11, 11, 11, DateTimeKind.Utc)", prediction=17, span="224-224"];
m6_3_140 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", color=green, community=0, file=merged, label="data[''Items''] = new JsonArray\r\n                            {\r\n                                item0.ToString(),\r\n                                \\nitem1.ToString(),\r\n                                item2.ToString(),\r\n                                ''/Date(1309421746929+\\n0000)/''\r\n                            }", prediction=18, span="228-234"];
m6_3_144 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", color=green, community=0, file=merged, label="Assert.AreNotEqual(item0.Kind, p.Items[0].Kind)", prediction=16, span="240-240"];
m6_3_138 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", color=green, community=0, file=merged, label="DateTime item2 = new DateTime(2012, 2, 8, 11, 11, 11, DateTimeKind.Unspecified)", prediction=20, span="225-225"];
m6_3_145 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", color=green, community=0, file=merged, label="Assert.AreEqual(item1.Kind, p.Items[1].Kind)", prediction=17, span="241-241"];
m6_3_141 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", file=merged, label="var d = new JsonDeserializer()", span="230-230"];
m6_3_139 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", file=merged, label="var data = new JsonObject()", span="226-226"];
m6_3_146 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", color=green, community=0, file=merged, label="Assert.AreEqual(DateTimeKind.Utc, p.Items[2].Kind)", prediction=17, span="242-242"];
m6_3_142 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", file=merged, label="var response = new RestResponse { Content = data.ToString() }", span="231-231"];
m6_3_143 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", file=merged, label="var p = d.Deserialize<GenericWithList<DateTime>>(response)", span="232-232"];
m6_3_147 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", color=green, community=0, file=merged, label="Assert.AreEqual(DateTimeKind.Utc, p.Items[3].Kind)", prediction=17, span="243-243"];
m6_3_148 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", span="221-221"];
m6_8_367 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", file=merged, label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", span="491-491"];
m6_8_368 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", file=merged, label="var doc = CreateLowerCasedRootElementWithDashesXml()", span="493-493"];
m6_8_369 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", file=merged, label="var response = new RestResponse { Content = doc }", span="494-494"];
m6_8_370 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", file=merged, label="var d = new XmlDeserializer()", span="495-495"];
m6_8_371 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", file=merged, label="var p = d.Deserialize<List<IncomingInvoice>>(response)", span="496-496"];
m6_8_372 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", file=merged, label="Assert.NotNull(p)", span="498-498"];
m6_8_373 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", file=merged, label="Assert.AreEqual(1, p.Count)", span="499-499"];
m6_8_374 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", file=merged, label="Assert.AreEqual(45, p[0].ConceptId)", span="500-500"];
m6_8_375 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", file=merged, label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", span="491-491"];
m6_2_24 [cluster="RestSharp.SimpleJson.DeserializeObject(string)", file=merged, label="Entry RestSharp.SimpleJson.DeserializeObject(string)", span="542-542"];
m6_3_310 [cluster="RestSharp.Tests.CultureChange.CultureChange(string)", file=merged, label="Entry RestSharp.Tests.CultureChange.CultureChange(string)", span="10-10"];
m6_7_38 [cluster="System.IO.StreamReader.StreamReader(string)", file=merged, label="Entry System.IO.StreamReader.StreamReader(string)", span="0-0"];
m6_6_68 [cluster="RestSharp.RestClient.ExecuteAsyncGet<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>, \\nstring)", file=merged, label="Entry RestSharp.RestClient.ExecuteAsyncGet<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>, \\nstring)", span="144-144"];
m6_6_69 [cluster="RestSharp.RestClient.ExecuteAsyncGet<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>, \\nstring)", file=merged, label="return ExecuteAsyncGet(request,\r\n                (response, asyncHandle) => DeserializeResponse(request, callback, response, asyncHandle), \\nhttpMethod);", span="147-148"];
m6_6_70 [cluster="RestSharp.RestClient.ExecuteAsyncGet<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>, \\nstring)", file=merged, label="Exit RestSharp.RestClient.ExecuteAsyncGet<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>, \\nstring)", span="144-144"];
m6_7_71 [cluster="RestSharp.RestRequest.AddJsonBody(object)", file=merged, label="Entry RestSharp.RestRequest.AddJsonBody(object)", span="236-236"];
m6_7_72 [cluster="RestSharp.RestRequest.AddJsonBody(object)", file=merged, label="this.RequestFormat = DataFormat.Json", span="238-238"];
m6_7_73 [cluster="RestSharp.RestRequest.AddJsonBody(object)", file=merged, label="return this.AddBody(obj, '''');", span="239-239"];
m6_7_74 [cluster="RestSharp.RestRequest.AddJsonBody(object)", file=merged, label="Exit RestSharp.RestRequest.AddJsonBody(object)", span="236-236"];
m6_8_133 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", file=merged, label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", span="215-215"];
m6_8_134 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", file=merged, label="var doc = CreateXmlWithEmptyInlineList()", span="217-217"];
m6_8_135 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", file=merged, label="var xml = new XmlDeserializer()", span="218-218"];
m6_8_136 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", file=merged, label="var output = xml.Deserialize<EmptyListSample>(new RestResponse { Content = doc })", span="219-219"];
m6_8_137 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", file=merged, label="Assert.NotNull(output.images)", span="221-221"];
m6_8_138 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", file=merged, label="Assert.NotNull(output.Images)", span="222-222"];
m6_8_139 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", file=merged, label="Assert.IsEmpty(output.images)", span="223-223"];
m6_8_140 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", file=merged, label="Assert.IsEmpty(output.Images)", span="224-224"];
m6_8_141 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", file=merged, label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", span="215-215"];
m6_3_98 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", span="175-175"];
m6_3_99 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", file=merged, label="var doc = File.ReadAllText(Path.Combine(''SampleData'', ''GenericWithList.txt''))", span="177-177"];
m6_3_100 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", file=merged, label="var json = new JsonDeserializer()", span="178-178"];
m6_3_101 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", file=merged, label="var output = json.Deserialize<Generic<GenericWithList<Foe>>>(new RestResponse { Content = doc })", span="179-179"];
m6_3_102 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", file=merged, label="Assert.AreEqual(''Foe sho'', output.Data.Items[0].Nickname)", span="181-181"];
m6_3_103 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", span="175-175"];
m6_3_254 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", span="379-379"];
m6_3_260 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", file=merged, label="Assert.AreEqual(new Guid(GUID_STRING), p.Guid)", span="389-389"];
m6_3_255 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", file=merged, label="var doc = new JsonObject()", span="381-381"];
m6_3_256 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", file=merged, label="doc[''Guid''] = GUID_STRING", span="383-383"];
m6_3_258 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", file=merged, label="var response = new RestResponse { Content = doc.ToString() }", span="386-386"];
m6_3_257 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", file=merged, label="var d = new JsonDeserializer()", span="385-385"];
m6_3_259 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", file=merged, label="var p = d.Deserialize<PersonForJson>(response)", span="387-387"];
m6_3_261 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", span="379-379"];
m6_6_15 [cluster="RestSharp.RestClient.ExecuteAsyncPost(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring)", file=merged, label="Entry RestSharp.RestClient.ExecuteAsyncPost(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring)", span="73-73"];
m6_6_16 [cluster="RestSharp.RestClient.ExecuteAsyncPost(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring)", file=merged, label="request.Method = Method.POST", span="76-76"];
m6_6_17 [cluster="RestSharp.RestClient.ExecuteAsyncPost(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring)", file=merged, label="return ExecuteAsync(request, callback, httpMethod, DoAsPostAsync);", span="77-77"];
m6_6_18 [cluster="RestSharp.RestClient.ExecuteAsyncPost(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring)", file=merged, label="Exit RestSharp.RestClient.ExecuteAsyncPost(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring)", span="73-73"];
m6_2_26 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, System.Collections.Generic.IDictionary<string, object>)", file=merged, label="Entry RestSharp.Deserializers.JsonDeserializer.Map(object, System.Collections.Generic.IDictionary<string, object>)", span="71-71"];
m6_2_45 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, System.Collections.Generic.IDictionary<string, object>)", file=merged, label="object value = null", span="94-94"];
m6_2_33 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, System.Collections.Generic.IDictionary<string, object>)", file=merged, label="var objType = target.GetType()", span="73-73"];
m6_2_44 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, System.Collections.Generic.IDictionary<string, object>)", file=merged, label="var currentData = data", span="93-93"];
m6_2_55 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, System.Collections.Generic.IDictionary<string, object>)", file=merged, label="prop.SetValue(target, ConvertValue(type, value), null)", span="110-110"];
m6_2_56 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, System.Collections.Generic.IDictionary<string, object>)", file=merged, label="return target;", span="113-113"];
m6_2_34 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, System.Collections.Generic.IDictionary<string, object>)", file=merged, label="var props = objType.GetProperties().Where(p => p.CanWrite).ToList()", span="74-74"];
m6_2_48 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, System.Collections.Generic.IDictionary<string, object>)", file=merged, label="var actualName = parts[i].GetNameVariants(Culture).FirstOrDefault(currentData.ContainsKey)", span="98-98"];
m6_2_51 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, System.Collections.Generic.IDictionary<string, object>)", file=merged, label="value = currentData[actualName]", span="104-104"];
m6_2_52 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, System.Collections.Generic.IDictionary<string, object>)", file=merged, label="currentData = (IDictionary<string, object>)currentData[actualName]", span="106-106"];
m6_2_35 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, System.Collections.Generic.IDictionary<string, object>)", file=merged, label=props, span="76-76"];
m6_2_36 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, System.Collections.Generic.IDictionary<string, object>)", file=merged, label="var type = prop.PropertyType", span="78-78"];
m6_2_37 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, System.Collections.Generic.IDictionary<string, object>)", file=merged, label="var attributes = prop.GetCustomAttributes(typeof(DeserializeAsAttribute), false)", span="79-79"];
m6_2_42 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, System.Collections.Generic.IDictionary<string, object>)", file=merged, label="name = prop.Name", span="89-89"];
m6_2_38 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, System.Collections.Generic.IDictionary<string, object>)", file=merged, label="string name", span="80-80"];
m6_2_39 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, System.Collections.Generic.IDictionary<string, object>)", file=merged, label="attributes.Length > 0", span="82-82"];
m6_2_40 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, System.Collections.Generic.IDictionary<string, object>)", file=merged, label="var attribute = (DeserializeAsAttribute)attributes[0]", span="84-84"];
m6_2_43 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, System.Collections.Generic.IDictionary<string, object>)", file=merged, label="var parts = name.Split('.')", span="92-92"];
m6_2_41 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, System.Collections.Generic.IDictionary<string, object>)", file=merged, label="name = attribute.Name", span="85-85"];
m6_2_47 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, System.Collections.Generic.IDictionary<string, object>)", file=merged, label="i < parts.Length", span="96-96"];
m6_2_50 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, System.Collections.Generic.IDictionary<string, object>)", file=merged, label="i == parts.Length - 1", span="103-103"];
m6_2_54 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, System.Collections.Generic.IDictionary<string, object>)", file=merged, label="value != null", span="109-109"];
m6_2_49 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, System.Collections.Generic.IDictionary<string, object>)", file=merged, label="actualName == null", span="100-100"];
m6_2_46 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, System.Collections.Generic.IDictionary<string, object>)", file=merged, label="var i = 0", span="96-96"];
m6_2_53 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, System.Collections.Generic.IDictionary<string, object>)", file=merged, label="++i", span="96-96"];
m6_2_57 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, System.Collections.Generic.IDictionary<string, object>)", file=merged, label="Exit RestSharp.Deserializers.JsonDeserializer.Map(object, System.Collections.Generic.IDictionary<string, object>)", span="71-71"];
m6_6_33 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file=merged, label="Entry RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", span="363-363"];
m6_8_200 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file=merged, label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", span="289-289"];
m6_8_201 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file=merged, label="var culture = CultureInfo.InvariantCulture", span="291-291"];
m6_8_202 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file=merged, label="var format = ''dd yyyy MMM, hh:mm ss tt zzz''", span="292-292"];
m6_8_206 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file=merged, label="root.Add(new XElement(''StartDate'', date.ToString(format, culture)))", span="297-297"];
m6_8_208 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file=merged, label="var xml = new XmlDeserializer\r\n                      {\r\n                          DateFormat = format,\r\n                          \\nCulture = culture\r\n                      }", span="300-304"];
m6_8_203 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file=merged, label="var date = new DateTime(2010, 2, 8, 11, 11, 11)", span="293-293"];
m6_8_204 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file=merged, label="var doc = new XDocument()", span="294-294"];
m6_8_211 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file=merged, label="Assert.AreEqual(date, output.StartDate)", span="308-308"];
m6_8_205 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file=merged, label="var root = new XElement(''Person'')", span="295-295"];
m6_8_207 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file=merged, label="doc.Add(root)", span="298-298"];
m6_8_209 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file=merged, label="var response = new RestResponse { Content = doc.ToString() }", span="305-305"];
m6_8_210 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file=merged, label="var output = xml.Deserialize<PersonForXml>(response)", span="306-306"];
m6_8_212 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file=merged, label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", span="289-289"];
m6_7_43 [cluster="RestSharp.FileParameter.Create(string, byte[], string, string)", file=merged, label="Entry RestSharp.FileParameter.Create(string, byte[], string, string)", span="18-18"];
m6_3_163 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", span="253-253"];
m6_3_164 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file=merged, label="var doc = this.CreateJsonWithEmptyValues()", span="255-255"];
m6_3_165 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file=merged, label="var json = new JsonDeserializer()", span="256-256"];
m6_3_166 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file=merged, label="var output = json.Deserialize<NullableValues>(new RestResponse { Content = doc })", span="257-257"];
m6_3_167 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file=merged, label="Assert.Null(output.Id)", span="259-259"];
m6_3_168 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file=merged, label="Assert.Null(output.StartDate)", span="260-260"];
m6_3_169 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file=merged, label="Assert.Null(output.UniqueId)", span="261-261"];
m6_3_170 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", span="253-253"];
m6_7_21 [cluster="RestSharp.RestRequest.RestRequest(System.Uri)", file=merged, label="Entry RestSharp.RestRequest.RestRequest(System.Uri)", span="103-103"];
m6_7_22 [cluster="RestSharp.RestRequest.RestRequest(System.Uri)", file=merged, label="Exit RestSharp.RestRequest.RestRequest(System.Uri)", span="103-103"];
m6_0 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_Basic_Http_Auth()", file=merged, label="Entry RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_Basic_Http_Auth()", span="15-15"];
m6_1 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_Basic_Http_Auth()", file=merged, label="Uri baseUrl = new Uri(''http://localhost:8888/'')", span="17-17"];
m6_2 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_Basic_Http_Auth()", file=merged, label="SimpleServer.Create(baseUrl.AbsoluteUri, UsernamePasswordEchoHandler)", span="18-18"];
m6_3 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_Basic_Http_Auth()", color=green, community=0, file=merged, label="var client = new RestClient(baseUrl)\r\n                             {\r\n                                 Authenticator = new HttpBasicAuthenticator(''\\ntestuser'', ''testpassword'')\r\n                             }", prediction=24, span="21-24"];
m6_4 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_Basic_Http_Auth()", file=merged, label="var request = new RestRequest(''test'')", span="24-24"];
m6_5 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_Basic_Http_Auth()", file=merged, label="var response = client.Execute(request)", span="25-25"];
m6_6 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_Basic_Http_Auth()", file=merged, label="Assert.AreEqual(''testuser|testpassword'', response.Content)", span="27-27"];
m6_7 [cluster="RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_Basic_Http_Auth()", file=merged, label="Exit RestSharp.IntegrationTests.AuthenticationTests.Can_Authenticate_With_Basic_Http_Auth()", span="15-15"];
m6_3_8 [cluster="RestSharp.Deserializers.JsonDeserializer.JsonDeserializer()", file=merged, label="Entry RestSharp.Deserializers.JsonDeserializer.JsonDeserializer()", span="21-21"];
m6_2_0 [cluster="RestSharp.Deserializers.JsonDeserializer.JsonDeserializer()", file=merged, label="Entry RestSharp.Deserializers.JsonDeserializer.JsonDeserializer()", span="21-21"];
m6_2_1 [cluster="RestSharp.Deserializers.JsonDeserializer.JsonDeserializer()", file=merged, label="Culture = CultureInfo.InvariantCulture", span="23-23"];
m6_2_2 [cluster="RestSharp.Deserializers.JsonDeserializer.JsonDeserializer()", file=merged, label="Exit RestSharp.Deserializers.JsonDeserializer.JsonDeserializer()", span="21-21"];
m7_60 [cluster="System.Action<T1, T2>.Invoke(T1, T2)", file="RestClient.Async.cs", label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0"];
m7_68 [cluster="RestSharp.RestClient.ExecuteAsyncGet<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>, \\nstring)", file="RestClient.Async.cs", label="Entry RestSharp.RestClient.ExecuteAsyncGet<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>, \\nstring)", span="144-144"];
m7_69 [cluster="RestSharp.RestClient.ExecuteAsyncGet<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>, \\nstring)", file="RestClient.Async.cs", label="return ExecuteAsyncGet(request,\r\n                (response, asyncHandle) => DeserializeResponse(request, callback, response, asyncHandle), \\nhttpMethod);", span="147-148"];
m7_70 [cluster="RestSharp.RestClient.ExecuteAsyncGet<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>, \\nstring)", file="RestClient.Async.cs", label="Exit RestSharp.RestClient.ExecuteAsyncGet<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>, \\nstring)", span="144-144"];
m7_39 [cluster="RestSharp.RestClient.ProcessResponse(RestSharp.IRestRequest, RestSharp.HttpResponse, RestSharp.RestRequestAsyncHandle, System.Action<\\nRestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>)", file="RestClient.Async.cs", label="Entry RestSharp.RestClient.ProcessResponse(RestSharp.IRestRequest, RestSharp.HttpResponse, RestSharp.RestRequestAsyncHandle, System.Action<\\nRestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>)", span="117-117"];
m7_56 [cluster="RestSharp.RestClient.ProcessResponse(RestSharp.IRestRequest, RestSharp.HttpResponse, RestSharp.RestRequestAsyncHandle, System.Action<\\nRestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>)", file="RestClient.Async.cs", label="var restResponse = ConvertToRestResponse(request, httpResponse)", span="120-120"];
m7_57 [cluster="RestSharp.RestClient.ProcessResponse(RestSharp.IRestRequest, RestSharp.HttpResponse, RestSharp.RestRequestAsyncHandle, System.Action<\\nRestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>)", file="RestClient.Async.cs", label="callback(restResponse, asyncHandle)", span="121-121"];
m7_58 [cluster="RestSharp.RestClient.ProcessResponse(RestSharp.IRestRequest, RestSharp.HttpResponse, RestSharp.RestRequestAsyncHandle, System.Action<\\nRestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>)", file="RestClient.Async.cs", label="Exit RestSharp.RestClient.ProcessResponse(RestSharp.IRestRequest, RestSharp.HttpResponse, RestSharp.RestRequestAsyncHandle, System.Action<\\nRestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>)", span="117-117"];
m7_34 [cluster="RestSharp.RestRequestAsyncHandle.RestRequestAsyncHandle()", file="RestClient.Async.cs", label="Entry RestSharp.RestRequestAsyncHandle.RestRequestAsyncHandle()", span="8-8"];
m7_86 [cluster="RestSharp.RestClient.Deserialize<T>(RestSharp.IRestRequest, RestSharp.IRestResponse)", file="RestClient.Async.cs", label="Entry RestSharp.RestClient.Deserialize<T>(RestSharp.IRestRequest, RestSharp.IRestResponse)", span="586-586"];
m7_15 [cluster="RestSharp.RestClient.ExecuteAsyncPost(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring)", file="RestClient.Async.cs", label="Entry RestSharp.RestClient.ExecuteAsyncPost(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring)", span="73-73"];
m7_16 [cluster="RestSharp.RestClient.ExecuteAsyncPost(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring)", file="RestClient.Async.cs", label="request.Method = Method.POST", span="76-76"];
m7_17 [cluster="RestSharp.RestClient.ExecuteAsyncPost(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring)", file="RestClient.Async.cs", label="return ExecuteAsync(request, callback, httpMethod, DoAsPostAsync);", span="77-77"];
m7_18 [cluster="RestSharp.RestClient.ExecuteAsyncPost(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring)", file="RestClient.Async.cs", label="Exit RestSharp.RestClient.ExecuteAsyncPost(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring)", span="73-73"];
m7_31 [cluster="RestSharp.IHttpFactory.Create()", file="RestClient.Async.cs", label="Entry RestSharp.IHttpFactory.Create()", span="4-4"];
m7_12 [cluster="RestSharp.RestClient.ExecuteAsyncGet(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring)", file="RestClient.Async.cs", label="Entry RestSharp.RestClient.ExecuteAsyncGet(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring)", span="61-61"];
m7_13 [cluster="RestSharp.RestClient.ExecuteAsyncGet(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring)", file="RestClient.Async.cs", label="return ExecuteAsync(request, callback, httpMethod, DoAsGetAsync);", span="64-64"];
m7_14 [cluster="RestSharp.RestClient.ExecuteAsyncGet(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring)", file="RestClient.Async.cs", label="Exit RestSharp.RestClient.ExecuteAsyncGet(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring)", span="61-61"];
m7_77 [cluster="lambda expression", file="RestClient.Async.cs", label="Entry lambda expression", span="162-162"];
m7_37 [cluster="lambda expression", file="RestClient.Async.cs", label="ProcessResponse(request, r, asyncHandle, callback)", span="91-91"];
m7_41 [cluster="lambda expression", file="RestClient.Async.cs", label="ctx.Post(s => cb(resp), null)", span="99-99"];
m7_45 [cluster="lambda expression", file="RestClient.Async.cs", label="cb(resp)", span="99-99"];
m7_36 [cluster="lambda expression", file="RestClient.Async.cs", label="Entry lambda expression", span="91-91"];
m7_38 [cluster="lambda expression", file="RestClient.Async.cs", label="Exit lambda expression", span="91-91"];
m7_40 [cluster="lambda expression", file="RestClient.Async.cs", label="Entry lambda expression", span="99-99"];
m7_42 [cluster="lambda expression", file="RestClient.Async.cs", label="Exit lambda expression", span="99-99"];
m7_44 [cluster="lambda expression", file="RestClient.Async.cs", label="Entry lambda expression", span="99-99"];
m7_46 [cluster="lambda expression", file="RestClient.Async.cs", label="Exit lambda expression", span="99-99"];
m7_65 [cluster="lambda expression", file="RestClient.Async.cs", label="DeserializeResponse(request, callback, response, asyncHandle)", span="134-134"];
m7_64 [cluster="lambda expression", file="RestClient.Async.cs", label="Entry lambda expression", span="134-134"];
m7_66 [cluster="lambda expression", file="RestClient.Async.cs", label="Exit lambda expression", span="134-134"];
m7_72 [cluster="lambda expression", file="RestClient.Async.cs", label="DeserializeResponse(request, callback, response, asyncHandle)", span="148-148"];
m7_71 [cluster="lambda expression", file="RestClient.Async.cs", label="Entry lambda expression", span="148-148"];
m7_73 [cluster="lambda expression", file="RestClient.Async.cs", label="Exit lambda expression", span="148-148"];
m7_78 [cluster="lambda expression", file="RestClient.Async.cs", label="DeserializeResponse(request, callback, response, asyncHandle)", span="162-162"];
m7_79 [cluster="lambda expression", file="RestClient.Async.cs", label="Exit lambda expression", span="162-162"];
m7_0 [cluster="RestSharp.RestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>)", file="RestClient.Async.cs", label="Entry RestSharp.RestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>)", span="33-33"];
m7_1 [cluster="RestSharp.RestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>)", file="RestClient.Async.cs", label="string method = Enum.GetName(typeof (Method), request.Method)", span="39-39"];
m7_2 [cluster="RestSharp.RestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>)", file="RestClient.Async.cs", label="request.Method", span="42-42"];
m7_7 [cluster="RestSharp.RestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>)", file="RestClient.Async.cs", label="return ExecuteAsync(request, callback, method, DoAsPostAsync);", span="48-48"];
m7_8 [cluster="RestSharp.RestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>)", file="RestClient.Async.cs", label="return ExecuteAsync(request, callback, method, DoAsGetAsync);", span="51-51"];
m7_3 [cluster="RestSharp.RestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>)", file="RestClient.Async.cs", label="Method.MERGE", span="44-44"];
m7_4 [cluster="RestSharp.RestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>)", file="RestClient.Async.cs", label="Method.PATCH", span="45-45"];
m7_5 [cluster="RestSharp.RestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>)", file="RestClient.Async.cs", label="Method.POST", span="46-46"];
m7_6 [cluster="RestSharp.RestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>)", file="RestClient.Async.cs", label="Method.PUT", span="47-47"];
m7_9 [cluster="RestSharp.RestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>)", file="RestClient.Async.cs", label="Exit RestSharp.RestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>)", span="33-33"];
m7_67 [cluster="RestSharp.RestClient.DeserializeResponse<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>, \\nRestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle)", file="RestClient.Async.cs", label="Entry RestSharp.RestClient.DeserializeResponse<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>, \\nRestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle)", span="165-165"];
m7_80 [cluster="RestSharp.RestClient.DeserializeResponse<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>, \\nRestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle)", file="RestClient.Async.cs", label="IRestResponse<T> restResponse", span="169-169"];
m7_81 [cluster="RestSharp.RestClient.DeserializeResponse<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>, \\nRestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle)", file="RestClient.Async.cs", label="restResponse = Deserialize<T>(request, response)", span="173-173"];
m7_83 [cluster="RestSharp.RestClient.DeserializeResponse<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>, \\nRestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle)", file="RestClient.Async.cs", label="restResponse = new RestResponse<T>\r\n                {\r\n                    Request = request,\r\n                    ResponseStatus = \\nResponseStatus.Error,\r\n                    ErrorMessage = ex.Message,\r\n                    ErrorException = ex\r\n                }", span="177-183"];
m7_84 [cluster="RestSharp.RestClient.DeserializeResponse<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>, \\nRestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle)", file="RestClient.Async.cs", label="callback(restResponse, asyncHandle)", span="186-186"];
m7_82 [cluster="RestSharp.RestClient.DeserializeResponse<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>, \\nRestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle)", file="RestClient.Async.cs", label=Exception, span="175-175"];
m7_85 [cluster="RestSharp.RestClient.DeserializeResponse<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>, \\nRestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle)", file="RestClient.Async.cs", label="Exit RestSharp.RestClient.DeserializeResponse<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>, \\nRestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle)", span="165-165"];
m7_11 [cluster="RestSharp.RestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring, System.Func<RestSharp.IHttp, System.Action<RestSharp.HttpResponse>, string, System.Net.HttpWebRequest>)", file="RestClient.Async.cs", label="Entry RestSharp.RestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring, System.Func<RestSharp.IHttp, System.Action<RestSharp.HttpResponse>, string, System.Net.HttpWebRequest>)", span="80-80"];
m7_19 [cluster="RestSharp.RestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring, System.Func<RestSharp.IHttp, System.Action<RestSharp.HttpResponse>, string, System.Net.HttpWebRequest>)", file="RestClient.Async.cs", label="var http = HttpFactory.Create()", span="84-84"];
m7_20 [cluster="RestSharp.RestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring, System.Func<RestSharp.IHttp, System.Action<RestSharp.HttpResponse>, string, System.Net.HttpWebRequest>)", file="RestClient.Async.cs", label="AuthenticateIfNeeded(this, request)", span="85-85"];
m7_21 [cluster="RestSharp.RestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring, System.Func<RestSharp.IHttp, System.Action<RestSharp.HttpResponse>, string, System.Net.HttpWebRequest>)", file="RestClient.Async.cs", label="ConfigureHttp(request, http)", span="87-87"];
m7_22 [cluster="RestSharp.RestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring, System.Func<RestSharp.IHttp, System.Action<RestSharp.HttpResponse>, string, System.Net.HttpWebRequest>)", file="RestClient.Async.cs", label="var asyncHandle = new RestRequestAsyncHandle()", span="89-89"];
m7_23 [cluster="RestSharp.RestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring, System.Func<RestSharp.IHttp, System.Action<RestSharp.HttpResponse>, string, System.Net.HttpWebRequest>)", file="RestClient.Async.cs", label="Action<HttpResponse> response_cb = r => ProcessResponse(request, r, asyncHandle, callback)", span="91-91"];
m7_28 [cluster="RestSharp.RestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring, System.Func<RestSharp.IHttp, System.Action<RestSharp.HttpResponse>, string, System.Net.HttpWebRequest>)", file="RestClient.Async.cs", label="asyncHandle.WebRequest = getWebRequest(http, response_cb, httpMethod)", span="103-103"];
m7_29 [cluster="RestSharp.RestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring, System.Func<RestSharp.IHttp, System.Action<RestSharp.HttpResponse>, string, System.Net.HttpWebRequest>)", file="RestClient.Async.cs", label="return asyncHandle;", span="104-104"];
m7_24 [cluster="RestSharp.RestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring, System.Func<RestSharp.IHttp, System.Action<RestSharp.HttpResponse>, string, System.Net.HttpWebRequest>)", file="RestClient.Async.cs", label="UseSynchronizationContext && SynchronizationContext.Current != null", span="94-94"];
m7_26 [cluster="RestSharp.RestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring, System.Func<RestSharp.IHttp, System.Action<RestSharp.HttpResponse>, string, System.Net.HttpWebRequest>)", file="RestClient.Async.cs", label="var cb = response_cb", span="97-97"];
m7_27 [cluster="RestSharp.RestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring, System.Func<RestSharp.IHttp, System.Action<RestSharp.HttpResponse>, string, System.Net.HttpWebRequest>)", file="RestClient.Async.cs", label="response_cb = resp => ctx.Post(s => cb(resp), null)", span="99-99"];
m7_25 [cluster="RestSharp.RestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring, System.Func<RestSharp.IHttp, System.Action<RestSharp.HttpResponse>, string, System.Net.HttpWebRequest>)", file="RestClient.Async.cs", label="var ctx = SynchronizationContext.Current", span="96-96"];
m7_30 [cluster="RestSharp.RestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring, System.Func<RestSharp.IHttp, System.Action<RestSharp.HttpResponse>, string, System.Net.HttpWebRequest>)", file="RestClient.Async.cs", label="Exit RestSharp.RestClient.ExecuteAsync(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>, \\nstring, System.Func<RestSharp.IHttp, System.Action<RestSharp.HttpResponse>, string, System.Net.HttpWebRequest>)", span="80-80"];
m7_47 [cluster="System.Action<T>.Invoke(T)", file="RestClient.Async.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m7_61 [cluster="RestSharp.RestClient.ExecuteAsync<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>)", file="RestClient.Async.cs", label="Entry RestSharp.RestClient.ExecuteAsync<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>)", span="130-130"];
m7_62 [cluster="RestSharp.RestClient.ExecuteAsync<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>)", file="RestClient.Async.cs", label="return ExecuteAsync(request,\r\n                (response, asyncHandle) => DeserializeResponse(request, callback, response, asyncHandle));", span="133-134"];
m7_63 [cluster="RestSharp.RestClient.ExecuteAsync<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>)", file="RestClient.Async.cs", label="Exit RestSharp.RestClient.ExecuteAsync<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>)", span="130-130"];
m7_43 [cluster="System.Threading.SynchronizationContext.Post(System.Threading.SendOrPostCallback, object)", file="RestClient.Async.cs", label="Entry System.Threading.SynchronizationContext.Post(System.Threading.SendOrPostCallback, object)", span="0-0"];
m7_48 [cluster="RestSharp.RestClient.DoAsGetAsync(RestSharp.IHttp, System.Action<RestSharp.HttpResponse>, string)", file="RestClient.Async.cs", label="Entry RestSharp.RestClient.DoAsGetAsync(RestSharp.IHttp, System.Action<RestSharp.HttpResponse>, string)", span="107-107"];
m7_49 [cluster="RestSharp.RestClient.DoAsGetAsync(RestSharp.IHttp, System.Action<RestSharp.HttpResponse>, string)", file="RestClient.Async.cs", label="return http.AsGetAsync(response_cb, method);", span="109-109"];
m7_50 [cluster="RestSharp.RestClient.DoAsGetAsync(RestSharp.IHttp, System.Action<RestSharp.HttpResponse>, string)", file="RestClient.Async.cs", label="Exit RestSharp.RestClient.DoAsGetAsync(RestSharp.IHttp, System.Action<RestSharp.HttpResponse>, string)", span="107-107"];
m7_10 [cluster="System.Enum.GetName(System.Type, object)", file="RestClient.Async.cs", label="Entry System.Enum.GetName(System.Type, object)", span="0-0"];
m7_51 [cluster="RestSharp.IHttp.AsGetAsync(System.Action<RestSharp.HttpResponse>, string)", file="RestClient.Async.cs", label="Entry RestSharp.IHttp.AsGetAsync(System.Action<RestSharp.HttpResponse>, string)", span="109-109"];
m7_52 [cluster="RestSharp.RestClient.DoAsPostAsync(RestSharp.IHttp, System.Action<RestSharp.HttpResponse>, string)", file="RestClient.Async.cs", label="Entry RestSharp.RestClient.DoAsPostAsync(RestSharp.IHttp, System.Action<RestSharp.HttpResponse>, string)", span="112-112"];
m7_53 [cluster="RestSharp.RestClient.DoAsPostAsync(RestSharp.IHttp, System.Action<RestSharp.HttpResponse>, string)", file="RestClient.Async.cs", label="return http.AsPostAsync(response_cb, method);", span="114-114"];
m7_54 [cluster="RestSharp.RestClient.DoAsPostAsync(RestSharp.IHttp, System.Action<RestSharp.HttpResponse>, string)", file="RestClient.Async.cs", label="Exit RestSharp.RestClient.DoAsPostAsync(RestSharp.IHttp, System.Action<RestSharp.HttpResponse>, string)", span="112-112"];
m7_74 [cluster="RestSharp.RestClient.ExecuteAsyncPost<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>, \\nstring)", file="RestClient.Async.cs", label="Entry RestSharp.RestClient.ExecuteAsyncPost<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>, \\nstring)", span="158-158"];
m7_75 [cluster="RestSharp.RestClient.ExecuteAsyncPost<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>, \\nstring)", file="RestClient.Async.cs", label="return ExecuteAsyncPost(request,\r\n                (response, asyncHandle) => DeserializeResponse(request, callback, response, \\nasyncHandle), httpMethod);", span="161-162"];
m7_76 [cluster="RestSharp.RestClient.ExecuteAsyncPost<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>, \\nstring)", file="RestClient.Async.cs", label="Exit RestSharp.RestClient.ExecuteAsyncPost<T>(RestSharp.IRestRequest, System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>, \\nstring)", span="158-158"];
m7_32 [cluster="RestSharp.RestClient.AuthenticateIfNeeded(RestSharp.RestClient, RestSharp.IRestRequest)", file="RestClient.Async.cs", label="Entry RestSharp.RestClient.AuthenticateIfNeeded(RestSharp.RestClient, RestSharp.IRestRequest)", span="269-269"];
m7_87 [cluster="RestSharp.RestResponse<T>.RestResponse()", file="RestClient.Async.cs", label="Entry RestSharp.RestResponse<T>.RestResponse()", span="141-141"];
m7_35 [cluster="System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", file="RestClient.Async.cs", label="Entry System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", span="0-0"];
m7_59 [cluster="RestSharp.RestClient.ConvertToRestResponse(RestSharp.IRestRequest, RestSharp.HttpResponse)", file="RestClient.Async.cs", label="Entry RestSharp.RestClient.ConvertToRestResponse(RestSharp.IRestRequest, RestSharp.HttpResponse)", span="533-533"];
m7_33 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.Async.cs", label="Entry RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", span="363-363"];
m7_55 [cluster="RestSharp.IHttp.AsPostAsync(System.Action<RestSharp.HttpResponse>, string)", file="RestClient.Async.cs", label="Entry RestSharp.IHttp.AsPostAsync(System.Action<RestSharp.HttpResponse>, string)", span="107-107"];
m8_60 [cluster="RestSharp.RestRequest.AddBody(object, string)", file="RestRequest.cs", label="serialized = XmlSerializer.Serialize(obj)", span="204-204"];
m8_30 [cluster="System.IO.FileInfo.FileInfo(string)", file="RestRequest.cs", label="Entry System.IO.FileInfo.FileInfo(string)", span="0-0"];
m8_25 [cluster="RestSharp.RestRequest.AddFile(string, string, string)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddFile(string, string, string)", span="124-124"];
m8_26 [cluster="RestSharp.RestRequest.AddFile(string, string, string)", file="RestRequest.cs", label="FileInfo f = new FileInfo(path)", span="126-126"];
m8_28 [cluster="RestSharp.RestRequest.AddFile(string, string, string)", file="RestRequest.cs", label="return AddFile(new FileParameter\r\n                           {\r\n                               Name = name,\r\n                               \\nFileName = Path.GetFileName(path),\r\n                               ContentLength = fileLength,\r\n                               \\nWriter = s =>\r\n                                        {\r\n                                            using (var file = new \\nStreamReader(path))\r\n                                            {\r\n                                                file.BaseStream.CopyTo(\\ns);\r\n                                            }\r\n                                        },\r\n                                \\nContentType = contentType\r\n                           });", span="129-142"];
m8_27 [cluster="RestSharp.RestRequest.AddFile(string, string, string)", file="RestRequest.cs", label="long fileLength = f.Length", span="127-127"];
m8_29 [cluster="RestSharp.RestRequest.AddFile(string, string, string)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddFile(string, string, string)", span="124-124"];
m8_149 [cluster="RestSharp.RestRequest.IncreaseNumAttempts()", file="RestRequest.cs", label="Entry RestSharp.RestRequest.IncreaseNumAttempts()", span="553-553"];
m8_150 [cluster="RestSharp.RestRequest.IncreaseNumAttempts()", file="RestRequest.cs", label="this.Attempts++", span="555-555"];
m8_151 [cluster="RestSharp.RestRequest.IncreaseNumAttempts()", file="RestRequest.cs", label="Exit RestSharp.RestRequest.IncreaseNumAttempts()", span="553-553"];
m8_103 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="RestRequest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0"];
m8_9 [cluster="RestSharp.Serializers.JsonSerializer.JsonSerializer()", file="RestRequest.cs", label="Entry RestSharp.Serializers.JsonSerializer.JsonSerializer()", span="12-12"];
m8_0 [cluster="RestSharp.RestRequest.RestRequest()", file="RestRequest.cs", label="Entry RestSharp.RestRequest.RestRequest()", span="63-63"];
m8_1 [cluster="RestSharp.RestRequest.RestRequest()", file="RestRequest.cs", label="this.Parameters = new List<Parameter>()", span="65-65"];
m8_2 [cluster="RestSharp.RestRequest.RestRequest()", file="RestRequest.cs", label="this.Files = new List<FileParameter>()", span="66-66"];
m8_3 [cluster="RestSharp.RestRequest.RestRequest()", file="RestRequest.cs", label="this.XmlSerializer = new XmlSerializer()", span="67-67"];
m8_4 [cluster="RestSharp.RestRequest.RestRequest()", file="RestRequest.cs", label="this.JsonSerializer = new JsonSerializer()", span="68-68"];
m8_5 [cluster="RestSharp.RestRequest.RestRequest()", file="RestRequest.cs", label="this.OnBeforeDeserialization = r => { }", span="70-70"];
m8_6 [cluster="RestSharp.RestRequest.RestRequest()", file="RestRequest.cs", label="Exit RestSharp.RestRequest.RestRequest()", span="63-63"];
m8_8 [cluster="RestSharp.Serializers.XmlSerializer.XmlSerializer()", file="RestRequest.cs", label="Entry RestSharp.Serializers.XmlSerializer.XmlSerializer()", span="33-33"];
m8_102 [cluster="System.Type.GetProperties()", file="RestRequest.cs", label="Entry System.Type.GetProperties()", span="0-0"];
m8_123 [cluster="RestSharp.RestRequest.AddParameter(string, object, string, RestSharp.ParameterType)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddParameter(string, object, string, RestSharp.ParameterType)", span="394-394"];
m8_124 [cluster="RestSharp.RestRequest.AddParameter(string, object, string, RestSharp.ParameterType)", file="RestRequest.cs", label="return this.AddParameter(new Parameter\r\n            {\r\n                Name = name,\r\n                Value = value,\r\n                \\nContentType = contentType,\r\n                Type = type\r\n            });", span="396-402"];
m8_125 [cluster="RestSharp.RestRequest.AddParameter(string, object, string, RestSharp.ParameterType)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddParameter(string, object, string, RestSharp.ParameterType)", span="394-394"];
m8_146 [cluster="RestSharp.RestRequest.AddQueryParameter(string, string)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddQueryParameter(string, string)", span="454-454"];
m8_147 [cluster="RestSharp.RestRequest.AddQueryParameter(string, string)", file="RestRequest.cs", label="return this.AddParameter(name, value, ParameterType.QueryString);", span="456-456"];
m8_148 [cluster="RestSharp.RestRequest.AddQueryParameter(string, string)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddQueryParameter(string, string)", span="454-454"];
m8_139 [cluster="System.Uri.CheckHostName(string)", file="RestRequest.cs", label="Entry System.Uri.CheckHostName(string)", span="0-0"];
m8_143 [cluster="RestSharp.RestRequest.AddUrlSegment(string, string)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddUrlSegment(string, string)", span="443-443"];
m8_144 [cluster="RestSharp.RestRequest.AddUrlSegment(string, string)", file="RestRequest.cs", label="return this.AddParameter(name, value, ParameterType.UrlSegment);", span="445-445"];
m8_145 [cluster="RestSharp.RestRequest.AddUrlSegment(string, string)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddUrlSegment(string, string)", span="443-443"];
m8_15 [cluster="RestSharp.RestRequest.RestRequest(string)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.RestRequest(string)", span="86-86"];
m8_16 [cluster="RestSharp.RestRequest.RestRequest(string)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.RestRequest(string)", span="86-86"];
m8_59 [cluster="RestSharp.RestRequest.AddBody(object, string)", file="RestRequest.cs", label="this.XmlSerializer.Namespace = xmlNamespace", span="203-203"];
m8_140 [cluster="RestSharp.RestRequest.AddCookie(string, string)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddCookie(string, string)", span="432-432"];
m8_141 [cluster="RestSharp.RestRequest.AddCookie(string, string)", file="RestRequest.cs", label="return this.AddParameter(name, value, ParameterType.Cookie);", span="434-434"];
m8_142 [cluster="RestSharp.RestRequest.AddCookie(string, string)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddCookie(string, string)", span="432-432"];
m8_7 [cluster="System.Collections.Generic.List<T>.List()", file="RestRequest.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m8_12 [cluster="RestSharp.RestRequest.RestRequest(RestSharp.Method)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.RestRequest(RestSharp.Method)", span="77-77"];
m8_13 [cluster="RestSharp.RestRequest.RestRequest(RestSharp.Method)", file="RestRequest.cs", label="this.Method = method", span="79-79"];
m8_14 [cluster="RestSharp.RestRequest.RestRequest(RestSharp.Method)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.RestRequest(RestSharp.Method)", span="77-77"];
m8_51 [cluster="RestSharp.RestRequest.AddBody(object, string)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddBody(object, string)", span="190-190"];
m8_52 [cluster="RestSharp.RestRequest.AddBody(object, string)", color=green, community=0, file="RestRequest.cs", label="string serialized", prediction=25, span="192-192"];
m8_53 [cluster="RestSharp.RestRequest.AddBody(object, string)", color=green, community=1, file="RestRequest.cs", label="string contentType", prediction=26, span="193-193"];
m8_54 [cluster="RestSharp.RestRequest.AddBody(object, string)", file="RestRequest.cs", label=RequestFormat, span="195-195"];
m8_126 [cluster="RestSharp.RestRequest.AddHeader(string, string)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddHeader(string, string)", span="411-411"];
m8_131 [cluster="RestSharp.RestRequest.AddHeader(string, string)", file="RestRequest.cs", label="return this.AddParameter(name, value, ParameterType.HttpHeader);", span="423-423"];
m8_127 [cluster="RestSharp.RestRequest.AddHeader(string, string)", file="RestRequest.cs", label="string portSplit = @'':\d+''", span="414-414"];
m8_129 [cluster="RestSharp.RestRequest.AddHeader(string, string)", file="RestRequest.cs", label="name == ''Host'' && invalidHost(value)", span="418-418"];
m8_128 [cluster="RestSharp.RestRequest.AddHeader(string, string)", file="RestRequest.cs", label="Func<string, bool> invalidHost =\r\n                host => Uri.CheckHostName(Regex.Split(host, portSplit)[0]) == UriHostNameType.Unknown", span="415-416"];
m8_130 [cluster="RestSharp.RestRequest.AddHeader(string, string)", file="RestRequest.cs", label="throw new ArgumentException(''The specified value is not a valid Host header string.'', ''value'');", span="420-420"];
m8_132 [cluster="RestSharp.RestRequest.AddHeader(string, string)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddHeader(string, string)", span="411-411"];
m8_135 [cluster="lambda expression", file="RestRequest.cs", label="Entry lambda expression", span="416-416"];
m8_10 [cluster="lambda expression", file="RestRequest.cs", label="Entry lambda expression", span="70-70"];
m8_11 [cluster="lambda expression", file="RestRequest.cs", label="Exit lambda expression", span="70-70"];
m8_57 [cluster="RestSharp.RestRequest.AddBody(object, string)", color=green, community=0, file="RestRequest.cs", label="contentType = JsonSerializer.ContentType", prediction=27, span="199-199"];
m8_137 [cluster="lambda expression", file="RestRequest.cs", label="Exit lambda expression", span="416-416"];
m8_56 [cluster="RestSharp.RestRequest.AddBody(object, string)", color=green, community=0, file="RestRequest.cs", label="serialized = JsonSerializer.Serialize(obj)", prediction=28, span="198-198"];
m8_35 [cluster="lambda expression", file="RestRequest.cs", label="var file = new StreamReader(path)", span="136-136"];
m8_36 [cluster="lambda expression", file="RestRequest.cs", label="file.BaseStream.CopyTo(s)", span="138-138"];
m8_34 [cluster="lambda expression", file="RestRequest.cs", label="Entry lambda expression", span="134-140"];
m8_136 [cluster="lambda expression", file="RestRequest.cs", label="Uri.CheckHostName(Regex.Split(host, portSplit)[0]) == UriHostNameType.Unknown", span="416-416"];
m8_37 [cluster="lambda expression", file="RestRequest.cs", label="Exit lambda expression", span="134-140"];
m8_55 [cluster="RestSharp.RestRequest.AddBody(object, string)", file="RestRequest.cs", label="DataFormat.Json", span="197-197"];
m8_58 [cluster="RestSharp.RestRequest.AddBody(object, string)", file="RestRequest.cs", label="DataFormat.Xml", span="202-202"];
m8_62 [cluster="RestSharp.RestRequest.AddBody(object, string)", file="RestRequest.cs", label="serialized = ''''", span="209-209"];
m8_64 [cluster="RestSharp.RestRequest.AddBody(object, string)", file="RestRequest.cs", label="return this.AddParameter(contentType, serialized, ParameterType.RequestBody);", span="217-217"];
m8_61 [cluster="RestSharp.RestRequest.AddBody(object, string)", file="RestRequest.cs", label="contentType = XmlSerializer.ContentType", span="205-205"];
m8_63 [cluster="RestSharp.RestRequest.AddBody(object, string)", file="RestRequest.cs", label="contentType = ''''", span="210-210"];
m8_65 [cluster="RestSharp.RestRequest.AddBody(object, string)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddBody(object, string)", span="190-190"];
m8_50 [cluster="System.Collections.Generic.List<T>.Add(T)", file="RestRequest.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m8_32 [cluster="System.IO.Path.GetFileName(string)", file="RestRequest.cs", label="Entry System.IO.Path.GetFileName(string)", span="0-0"];
m8_17 [cluster="RestSharp.RestRequest.RestRequest(string, RestSharp.Method)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.RestRequest(string, RestSharp.Method)", span="93-93"];
m8_18 [cluster="RestSharp.RestRequest.RestRequest(string, RestSharp.Method)", file="RestRequest.cs", label="this.Resource = resource", span="95-95"];
m8_19 [cluster="RestSharp.RestRequest.RestRequest(string, RestSharp.Method)", file="RestRequest.cs", label="this.Method = method", span="96-96"];
m8_20 [cluster="RestSharp.RestRequest.RestRequest(string, RestSharp.Method)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.RestRequest(string, RestSharp.Method)", span="93-93"];
m8_66 [cluster="RestSharp.Serializers.ISerializer.Serialize(object)", file="RestRequest.cs", label="Entry RestSharp.Serializers.ISerializer.Serialize(object)", span="20-20"];
m8_101 [cluster="object.GetType()", file="RestRequest.cs", label="Entry object.GetType()", span="0-0"];
m8_75 [cluster="RestSharp.RestRequest.AddXmlBody(object)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddXmlBody(object)", span="247-247"];
m8_76 [cluster="RestSharp.RestRequest.AddXmlBody(object)", file="RestRequest.cs", label="this.RequestFormat = DataFormat.Xml", span="249-249"];
m8_77 [cluster="RestSharp.RestRequest.AddXmlBody(object)", file="RestRequest.cs", label="return this.AddBody(obj, '''');", span="250-250"];
m8_78 [cluster="RestSharp.RestRequest.AddXmlBody(object)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddXmlBody(object)", span="247-247"];
m8_40 [cluster="RestSharp.RestRequest.AddFile(string, byte[], string, string)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddFile(string, byte[], string, string)", span="153-153"];
m8_41 [cluster="RestSharp.RestRequest.AddFile(string, byte[], string, string)", file="RestRequest.cs", label="return this.AddFile(FileParameter.Create(name, bytes, fileName, contentType));", span="155-155"];
m8_42 [cluster="RestSharp.RestRequest.AddFile(string, byte[], string, string)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddFile(string, byte[], string, string)", span="153-153"];
m8_79 [cluster="RestSharp.RestRequest.AddXmlBody(object, string)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddXmlBody(object, string)", span="260-260"];
m8_80 [cluster="RestSharp.RestRequest.AddXmlBody(object, string)", file="RestRequest.cs", label="this.RequestFormat = DataFormat.Xml", span="262-262"];
m8_81 [cluster="RestSharp.RestRequest.AddXmlBody(object, string)", file="RestRequest.cs", label="return this.AddBody(obj, xmlNamespace);", span="263-263"];
m8_82 [cluster="RestSharp.RestRequest.AddXmlBody(object, string)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddXmlBody(object, string)", span="260-260"];
m8_23 [cluster="RestSharp.RestRequest.RestRequest(System.Uri, RestSharp.Method)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.RestRequest(System.Uri, RestSharp.Method)", span="110-110"];
m8_24 [cluster="RestSharp.RestRequest.RestRequest(System.Uri, RestSharp.Method)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.RestRequest(System.Uri, RestSharp.Method)", span="110-110"];
m8_83 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddObject(object, params string[])", span="275-275"];
m8_84 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file="RestRequest.cs", label="var type = obj.GetType()", span="278-278"];
m8_87 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file="RestRequest.cs", label="bool isAllowed = includedProperties.Length == 0 ||\r\n                                 (includedProperties.Length > 0 && includedProperties.Contains(\\nprop.Name))", span="283-284"];
m8_90 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file="RestRequest.cs", label="var val = prop.GetValue(obj, null)", span="290-290"];
m8_85 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file="RestRequest.cs", label="var props = type.GetProperties()", span="279-279"];
m8_86 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file="RestRequest.cs", label=props, span="281-281"];
m8_89 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file="RestRequest.cs", label="var propType = prop.PropertyType", span="289-289"];
m8_98 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file="RestRequest.cs", label="this.AddParameter(prop.Name, val)", span="317-317"];
m8_99 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file="RestRequest.cs", label="return this;", span="320-320"];
m8_88 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file="RestRequest.cs", label="!isAllowed", span="286-286"];
m8_92 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file="RestRequest.cs", label="propType.IsArray", span="295-295"];
m8_93 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file="RestRequest.cs", label="var elementType = propType.GetElementType()", span="297-297"];
m8_91 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file="RestRequest.cs", label="val == null", span="292-292"];
m8_94 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file="RestRequest.cs", label="((Array)val).Length > 0 &&\r\n                        elementType != null &&\r\n                        (elementType.IsPrimitive|| \\nelementType.IsValueType || elementType == typeof(string))", span="299-301"];
m8_95 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file="RestRequest.cs", label="var values = (from object item in ((Array)val)\r\n                                      select item.ToString())\r\n                                     \\n.ToArray<string>()", span="304-306"];
m8_97 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file="RestRequest.cs", label="val = string.Join('','', (string[])val)", span="313-313"];
m8_96 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file="RestRequest.cs", label="val = string.Join('','', values)", span="308-308"];
m8_100 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddObject(object, params string[])", span="275-275"];
m8_134 [cluster="System.ArgumentException.ArgumentException(string, string)", file="RestRequest.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m8_114 [cluster="RestSharp.RestRequest.AddParameter(RestSharp.Parameter)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddParameter(RestSharp.Parameter)", span="339-339"];
m8_115 [cluster="RestSharp.RestRequest.AddParameter(RestSharp.Parameter)", file="RestRequest.cs", label="this.Parameters.Add(p)", span="341-341"];
m8_116 [cluster="RestSharp.RestRequest.AddParameter(RestSharp.Parameter)", file="RestRequest.cs", label="return this;", span="342-342"];
m8_117 [cluster="RestSharp.RestRequest.AddParameter(RestSharp.Parameter)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddParameter(RestSharp.Parameter)", span="339-339"];
m8_109 [cluster="RestSharp.RestRequest.AddParameter(string, object)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddParameter(string, object)", span="351-351"];
m8_118 [cluster="RestSharp.RestRequest.AddParameter(string, object)", file="RestRequest.cs", label="return this.AddParameter(new Parameter\r\n                                     {\r\n                                         Name = \\nname,\r\n                                         Value = value,\r\n                                         Type = ParameterType.GetOrPost\r\n                                     });", span="353-358"];
m8_119 [cluster="RestSharp.RestRequest.AddParameter(string, object)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddParameter(string, object)", span="351-351"];
m8_138 [cluster="System.Text.RegularExpressions.Regex.Split(string, string)", file="RestRequest.cs", label="Entry System.Text.RegularExpressions.Regex.Split(string, string)", span="0-0"];
m8_33 [cluster="RestSharp.RestRequest.AddFile(RestSharp.FileParameter)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddFile(RestSharp.FileParameter)", span="177-177"];
m8_47 [cluster="RestSharp.RestRequest.AddFile(RestSharp.FileParameter)", file="RestRequest.cs", label="this.Files.Add(file)", span="179-179"];
m8_48 [cluster="RestSharp.RestRequest.AddFile(RestSharp.FileParameter)", file="RestRequest.cs", label="return this;", span="180-180"];
m8_49 [cluster="RestSharp.RestRequest.AddFile(RestSharp.FileParameter)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddFile(RestSharp.FileParameter)", span="177-177"];
m8_133 [cluster="System.Func<T, TResult>.Invoke(T)", file="RestRequest.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m8_31 [cluster="RestSharp.FileParameter.FileParameter()", file="RestRequest.cs", label="Entry RestSharp.FileParameter.FileParameter()", span="8-8"];
m8_68 [cluster="RestSharp.RestRequest.AddBody(object)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddBody(object)", span="226-226"];
m8_69 [cluster="RestSharp.RestRequest.AddBody(object)", file="RestRequest.cs", label="return this.AddBody(obj, '''');", span="228-228"];
m8_70 [cluster="RestSharp.RestRequest.AddBody(object)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddBody(object)", span="226-226"];
m8_104 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="RestRequest.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
m8_38 [cluster="System.IO.StreamReader.StreamReader(string)", file="RestRequest.cs", label="Entry System.IO.StreamReader.StreamReader(string)", span="0-0"];
m8_110 [cluster="RestSharp.RestRequest.AddObject(object)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddObject(object)", span="328-328"];
m8_111 [cluster="RestSharp.RestRequest.AddObject(object)", file="RestRequest.cs", label="this.AddObject(obj, new string[] { })", span="330-330"];
m8_112 [cluster="RestSharp.RestRequest.AddObject(object)", file="RestRequest.cs", label="return this;", span="331-331"];
m8_113 [cluster="RestSharp.RestRequest.AddObject(object)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddObject(object)", span="328-328"];
m8_71 [cluster="RestSharp.RestRequest.AddJsonBody(object)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddJsonBody(object)", span="236-236"];
m8_72 [cluster="RestSharp.RestRequest.AddJsonBody(object)", file="RestRequest.cs", label="this.RequestFormat = DataFormat.Json", span="238-238"];
m8_73 [cluster="RestSharp.RestRequest.AddJsonBody(object)", file="RestRequest.cs", label="return this.AddBody(obj, '''');", span="239-239"];
m8_74 [cluster="RestSharp.RestRequest.AddJsonBody(object)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddJsonBody(object)", span="236-236"];
m8_106 [cluster="object.ToString()", file="RestRequest.cs", label="Entry object.ToString()", span="0-0"];
m8_44 [cluster="RestSharp.RestRequest.AddFile(string, System.Action<System.IO.Stream>, string, string)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddFile(string, System.Action<System.IO.Stream>, string, string)", span="166-166"];
m8_45 [cluster="RestSharp.RestRequest.AddFile(string, System.Action<System.IO.Stream>, string, string)", file="RestRequest.cs", label="return AddFile(new FileParameter\r\n                           {\r\n                               Name = name,\r\n                               \\nWriter = writer,\r\n                               FileName = fileName,\r\n                               ContentType = contentType\r\n                           });", span="168-174"];
m8_46 [cluster="RestSharp.RestRequest.AddFile(string, System.Action<System.IO.Stream>, string, string)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddFile(string, System.Action<System.IO.Stream>, string, string)", span="166-166"];
m8_67 [cluster="RestSharp.RestRequest.AddParameter(string, object, RestSharp.ParameterType)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddParameter(string, object, RestSharp.ParameterType)", span="372-372"];
m8_121 [cluster="RestSharp.RestRequest.AddParameter(string, object, RestSharp.ParameterType)", file="RestRequest.cs", label="return this.AddParameter(new Parameter\r\n                                     {\r\n                                         Name = \\nname,\r\n                                         Value = value,\r\n                                         Type = type\r\n                                     });", span="374-379"];
m8_122 [cluster="RestSharp.RestRequest.AddParameter(string, object, RestSharp.ParameterType)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddParameter(string, object, RestSharp.ParameterType)", span="372-372"];
m8_43 [cluster="RestSharp.FileParameter.Create(string, byte[], string, string)", file="RestRequest.cs", label="Entry RestSharp.FileParameter.Create(string, byte[], string, string)", span="18-18"];
m8_120 [cluster="RestSharp.Parameter.Parameter()", file="RestRequest.cs", label="Entry RestSharp.Parameter.Parameter()", span="21-21"];
m8_39 [cluster="System.IO.Stream.CopyTo(System.IO.Stream)", file="RestRequest.cs", label="Entry System.IO.Stream.CopyTo(System.IO.Stream)", span="0-0"];
m8_21 [cluster="RestSharp.RestRequest.RestRequest(System.Uri)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.RestRequest(System.Uri)", span="103-103"];
m8_22 [cluster="RestSharp.RestRequest.RestRequest(System.Uri)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.RestRequest(System.Uri)", span="103-103"];
m8_105 [cluster="System.Type.GetElementType()", file="RestRequest.cs", label="Entry System.Type.GetElementType()", span="0-0"];
m9_296 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", span="410-410"];
m9_297 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="var doc = CreateDashesXml()", span="412-412"];
m9_298 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="var response = new RestResponse { Content = doc }", span="413-413"];
m9_299 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="var d = new XmlDeserializer()", span="414-414"];
m9_300 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="var p = d.Deserialize<PersonForXml>(response)", span="415-415"];
m9_301 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''John Sheehan'', p.Name)", span="417-417"];
m9_302 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new DateTime(2009, 9, 25, 0, 6, 1), p.StartDate)", span="418-418"];
m9_303 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(28, p.Age)", span="419-419"];
m9_304 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(long.MaxValue, p.BigNumber)", span="420-420"];
m9_305 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(99.9999m, p.Percent)", span="421-421"];
m9_306 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(false, p.IsCool)", span="422-422"];
m9_307 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Guid(GUID_STRING), p.UniqueId)", span="423-423"];
m9_308 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="424-424"];
m9_309 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="425-425"];
m9_310 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.NotNull(p.Friends)", span="426-426"];
m9_311 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(10, p.Friends.Count)", span="427-427"];
m9_312 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.NotNull(p.BestFriend)", span="428-428"];
m9_313 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''The Fonz'', p.BestFriend.Name)", span="429-429"];
m9_314 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(1952, p.BestFriend.Since)", span="430-430"];
m9_315 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.NotNull(p.Foes)", span="431-431"];
m9_316 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(5, p.Foes.Count)", span="432-432"];
m9_317 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''Yankees'', p.Foes.Team)", span="433-433"];
m9_318 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", span="410-410"];
m9_258 [cluster="RestSharp.Tests.XmlDeserializerTests.Ignore_Protected_Property_That_Exists_In_Data()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Ignore_Protected_Property_That_Exists_In_Data()", span="361-361"];
m9_259 [cluster="RestSharp.Tests.XmlDeserializerTests.Ignore_Protected_Property_That_Exists_In_Data()", file="XmlDeserializerTests.cs", label="var doc = CreateElementsXml()", span="363-363"];
m9_260 [cluster="RestSharp.Tests.XmlDeserializerTests.Ignore_Protected_Property_That_Exists_In_Data()", file="XmlDeserializerTests.cs", label="var response = new RestResponse { Content = doc }", span="364-364"];
m9_261 [cluster="RestSharp.Tests.XmlDeserializerTests.Ignore_Protected_Property_That_Exists_In_Data()", file="XmlDeserializerTests.cs", label="var d = new XmlDeserializer()", span="365-365"];
m9_262 [cluster="RestSharp.Tests.XmlDeserializerTests.Ignore_Protected_Property_That_Exists_In_Data()", file="XmlDeserializerTests.cs", label="var p = d.Deserialize<PersonForXml>(response)", span="366-366"];
m9_263 [cluster="RestSharp.Tests.XmlDeserializerTests.Ignore_Protected_Property_That_Exists_In_Data()", file="XmlDeserializerTests.cs", label="Assert.Null(p.IgnoreProxy)", span="368-368"];
m9_264 [cluster="RestSharp.Tests.XmlDeserializerTests.Ignore_Protected_Property_That_Exists_In_Data()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Ignore_Protected_Property_That_Exists_In_Data()", span="361-361"];
m9_168 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", span="256-256"];
m9_169 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="var culture = CultureInfo.InvariantCulture", span="258-258"];
m9_170 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="var doc = new XDocument(culture)", span="259-259"];
m9_183 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="var d = new XmlDeserializer { Culture = culture, }", span="275-275"];
m9_171 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="TimeSpan? nullTimespan = null", span="260-260"];
m9_181 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="doc.Add(root)", span="272-272"];
m9_182 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="var response = new RestResponse { Content = doc.ToString() }", span="274-274"];
m9_172 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="TimeSpan? nullValueTimeSpan = new TimeSpan(21, 30, 7)", span="261-261"];
m9_179 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''NullableWithoutValue'', nullTimespan))", span="269-269"];
m9_173 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="var root = new XElement(''Person'')", span="262-262"];
m9_180 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''NullableWithValue'', nullValueTimeSpan))", span="270-270"];
m9_174 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Tick'', new TimeSpan(468006)))", span="264-264"];
m9_175 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Millisecond'', new TimeSpan(0, 0, 0, 0, 125)))", span="265-265"];
m9_176 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Second'', new TimeSpan(0, 0, 8)))", span="266-266"];
m9_177 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Minute'', new TimeSpan(0, 55, 2)))", span="267-267"];
m9_178 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Hour'', new TimeSpan(21, 30, 7)))", span="268-268"];
m9_184 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="var payload = d.Deserialize<TimeSpanTestStructure>(response)", span="276-276"];
m9_185 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new TimeSpan(468006), payload.Tick)", span="278-278"];
m9_186 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new TimeSpan(0, 0, 0, 0, 125), payload.Millisecond)", span="279-279"];
m9_187 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new TimeSpan(0, 0, 8), payload.Second)", span="280-280"];
m9_188 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new TimeSpan(0, 55, 2), payload.Minute)", span="281-281"];
m9_189 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new TimeSpan(21, 30, 7), payload.Hour)", span="282-282"];
m9_190 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="Assert.Null(payload.NullableWithoutValue)", span="283-283"];
m9_191 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="Assert.NotNull(payload.NullableWithValue)", span="284-284"];
m9_192 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new TimeSpan(21, 30, 7), payload.NullableWithValue.Value)", span="285-285"];
m9_193 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", span="256-256"];
m9_343 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", span="681-681"];
m9_504 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="var doc = new XDocument()", span="683-683"];
m9_505 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="var root = new XElement(''Person'')", span="684-684"];
m9_531 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="doc.Add(root)", span="722-722"];
m9_532 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="return doc.ToString();", span="724-724"];
m9_506 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Name'', ''John Sheehan''))", span="686-686"];
m9_507 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''start_date'', new DateTime(2009, 9, 25, 0, 6, 1)))", span="687-687"];
m9_508 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''Age'', 28))", span="688-688"];
m9_509 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Percent'', 99.9999m))", span="689-689"];
m9_510 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''big_number'', long.MaxValue))", span="690-690"];
m9_511 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''is_cool'', false))", span="691-691"];
m9_512 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Ignore'', ''dummy''))", span="692-692"];
m9_513 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''read_only'', ''dummy''))", span="693-693"];
m9_514 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''unique_id'', new Guid(GUID_STRING)))", span="694-694"];
m9_515 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Url'', ''http://example.com''))", span="695-695"];
m9_516 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''url_path'', ''/foo/bar''))", span="696-696"];
m9_517 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''best_friend'',\r\n                new XElement(''name'', ''The Fonz''),\r\n                new XAttribute(''\\nSince'', 1952)))", span="697-699"];
m9_523 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(friends)", span="710-710"];
m9_530 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(foes)", span="721-721"];
m9_518 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="var friends = new XElement(''Friends'')", span="701-701"];
m9_519 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="int i = 0", span="703-703"];
m9_521 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="friends.Add(new XElement(''Friend'',\r\n                    new XElement(''Name'', ''Friend'' + i),\r\n                    new XAttribute(''\\nSince'', DateTime.Now.Year - i)))", span="705-707"];
m9_520 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="i < 10", span="703-703"];
m9_522 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="i++", span="703-703"];
m9_524 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="var foes = new XElement(''Foes'')", span="712-712"];
m9_525 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="foes.Add(new XAttribute(''Team'', ''Yankees''))", span="714-714"];
m9_528 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="foes.Add(new XElement(''Foe'', new XElement(''Nickname'', ''Foe'' + i)))", span="718-718"];
m9_526 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="int i = 0", span="716-716"];
m9_527 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="i < 5", span="716-716"];
m9_529 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="i++", span="716-716"];
m9_533 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", span="681-681"];
m9_472 [cluster="System.TimeSpan.FromHours(double)", file="XmlDeserializerTests.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m9_199 [cluster="System.TimeSpan.TimeSpan(int, int, int, int, int)", file="XmlDeserializerTests.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int, int, int)", span="0-0"];
m9_444 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", span="598-598"];
m9_445 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", file="XmlDeserializerTests.cs", label="var doc = CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", span="600-600"];
m9_446 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", file="XmlDeserializerTests.cs", label="var xml = new XmlDeserializer()", span="601-601"];
m9_447 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", file="XmlDeserializerTests.cs", label="var output = xml.Deserialize<NullableValues>(new RestResponse { Content = doc })", span="602-602"];
m9_448 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", file="XmlDeserializerTests.cs", label="Assert.Null(output.Id)", span="604-604"];
m9_449 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", file="XmlDeserializerTests.cs", label="Assert.Null(output.StartDate)", span="605-605"];
m9_450 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Guid(GUID_STRING), output.UniqueId)", span="606-606"];
m9_451 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", span="598-598"];
m9_295 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", span="635-635"];
m9_488 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="int i = 0", span="657-657"];
m9_473 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="var doc = new XDocument()", span="637-637"];
m9_474 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="var root = new XElement(''Person'')", span="638-638"];
m9_500 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="doc.Add(root)", span="676-676"];
m9_501 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="return doc.ToString();", span="678-678"];
m9_475 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Name'', ''John Sheehan''))", span="640-640"];
m9_476 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Start_Date'', new DateTime(2009, 9, 25, 0, 6, 1)))", span="641-641"];
m9_477 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''Age'', 28))", span="642-642"];
m9_478 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Percent'', 99.9999m))", span="643-643"];
m9_479 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Big_Number'', long.MaxValue))", span="644-644"];
m9_480 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''Is_Cool'', false))", span="645-645"];
m9_481 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Ignore'', ''dummy''))", span="646-646"];
m9_482 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''Read_Only'', ''dummy''))", span="647-647"];
m9_483 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Unique_Id'', new Guid(GUID_STRING)))", span="648-648"];
m9_484 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Url'', ''http://example.com''))", span="649-649"];
m9_485 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Url_Path'', ''/foo/bar''))", span="650-650"];
m9_486 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Best_Friend'',\r\n                new XElement(''Name'', ''The Fonz''),\r\n                new XAttribute(''\\nSince'', 1952)))", span="651-653"];
m9_492 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(friends)", span="664-664"];
m9_499 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(foes)", span="675-675"];
m9_487 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="var friends = new XElement(''Friends'')", span="655-655"];
m9_490 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="friends.Add(new XElement(''Friend'',\r\n                    new XElement(''Name'', ''Friend'' + i),\r\n                    new XAttribute(''\\nSince'', DateTime.Now.Year - i)))", span="659-661"];
m9_489 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="i < 10", span="657-657"];
m9_491 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="i++", span="657-657"];
m9_493 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="var foes = new XElement(''Foes'')", span="666-666"];
m9_494 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="foes.Add(new XAttribute(''Team'', ''Yankees''))", span="668-668"];
m9_497 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="foes.Add(new XElement(''Foe'', new XElement(''Nickname'', ''Foe'' + i)))", span="672-672"];
m9_495 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="int i = 0", span="670-670"];
m9_496 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="i < 5", span="670-670"];
m9_498 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="i++", span="670-670"];
m9_502 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", span="635-635"];
m9_435 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", span="586-586"];
m9_436 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="var doc = CreateXmlWithAttributesAndNullValues()", span="588-588"];
m9_437 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="var xml = new XmlDeserializer()", span="589-589"];
m9_438 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="var output = xml.Deserialize<NullableValues>(new RestResponse { Content = doc })", span="590-590"];
m9_439 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="Assert.Null(output.Id)", span="592-592"];
m9_440 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="Assert.Null(output.StartDate)", span="593-593"];
m9_441 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="Assert.Null(output.UniqueId)", span="594-594"];
m9_442 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", span="586-586"];
m9_239 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", span="339-339"];
m9_240 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlDeserializerTests.cs", label="var doc = CreateAttributesXml()", span="341-341"];
m9_241 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlDeserializerTests.cs", label="var response = new RestResponse { Content = doc }", span="342-342"];
m9_242 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlDeserializerTests.cs", label="var d = new XmlDeserializer()", span="343-343"];
m9_243 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlDeserializerTests.cs", label="var p = d.Deserialize<PersonForXml>(response)", span="344-344"];
m9_244 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''John Sheehan'', p.Name)", span="346-346"];
m9_245 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new DateTime(2009, 9, 25, 0, 6, 1), p.StartDate)", span="347-347"];
m9_246 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(28, p.Age)", span="348-348"];
m9_247 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(long.MaxValue, p.BigNumber)", span="349-349"];
m9_248 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(99.9999m, p.Percent)", span="350-350"];
m9_249 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(false, p.IsCool)", span="351-351"];
m9_250 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Guid(GUID_STRING), p.UniqueId)", span="352-352"];
m9_251 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="353-353"];
m9_252 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="354-354"];
m9_253 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.NotNull(p.BestFriend)", span="355-355"];
m9_254 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''The Fonz'', p.BestFriend.Name)", span="356-356"];
m9_255 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(1952, p.BestFriend.Since)", span="357-357"];
m9_256 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", span="339-339"];
m9_344 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", span="464-464"];
m9_345 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="var doc = CreateDashesXml()", span="466-466"];
m9_346 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="var response = new RestResponse { Content = doc }", span="467-467"];
m9_347 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="var d = new XmlDeserializer()", span="468-468"];
m9_348 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="var p = d.Deserialize<PersonForXml>(response)", span="469-469"];
m9_349 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''John Sheehan'', p.Name)", span="471-471"];
m9_350 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new DateTime(2009, 9, 25, 0, 6, 1), p.StartDate)", span="472-472"];
m9_351 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(28, p.Age)", span="473-473"];
m9_352 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(long.MaxValue, p.BigNumber)", span="474-474"];
m9_353 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(99.9999m, p.Percent)", span="475-475"];
m9_354 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(false, p.IsCool)", span="476-476"];
m9_355 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Guid(GUID_STRING), p.UniqueId)", span="477-477"];
m9_356 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="478-478"];
m9_357 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="479-479"];
m9_358 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="Assert.NotNull(p.Friends)", span="480-480"];
m9_359 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(10, p.Friends.Count)", span="481-481"];
m9_360 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="Assert.NotNull(p.BestFriend)", span="482-482"];
m9_361 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''The Fonz'', p.BestFriend.Name)", span="483-483"];
m9_362 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(1952, p.BestFriend.Since)", span="484-484"];
m9_363 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="Assert.NotNull(p.Foes)", span="485-485"];
m9_364 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(5, p.Foes.Count)", span="486-486"];
m9_365 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''Yankees'', p.Foes.Team)", span="487-487"];
m9_366 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", span="464-464"];
m9_376 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowerCasedRootElementWithDashesXml()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.CreateLowerCasedRootElementWithDashesXml()", span="773-773"];
m9_564 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowerCasedRootElementWithDashesXml()", file="XmlDeserializerTests.cs", label="var doc = new XDocument()", span="775-775"];
m9_565 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowerCasedRootElementWithDashesXml()", file="XmlDeserializerTests.cs", label="var root = new XElement(''incoming-invoices'',\r\n                new XElement(''incoming-invoice'', new XElement(''concept-id'', \\n45)))", span="776-777"];
m9_566 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowerCasedRootElementWithDashesXml()", file="XmlDeserializerTests.cs", label="doc.Add(root)", span="779-779"];
m9_567 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowerCasedRootElementWithDashesXml()", file="XmlDeserializerTests.cs", label="return doc.ToString();", span="781-781"];
m9_568 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowerCasedRootElementWithDashesXml()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.CreateLowerCasedRootElementWithDashesXml()", span="773-773"];
m9_0 [cluster="RestSharp.Tests.XmlDeserializerTests.PathFor(string)", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.PathFor(string)", span="34-34"];
m9_1 [cluster="RestSharp.Tests.XmlDeserializerTests.PathFor(string)", file="XmlDeserializerTests.cs", label="return Path.Combine(this.sampleDataPath, sampleFile);", span="36-36"];
m9_2 [cluster="RestSharp.Tests.XmlDeserializerTests.PathFor(string)", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.PathFor(string)", span="34-34"];
m9_99 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name_With_Additional_Property()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name_With_Additional_\\nProperty()", span="166-166"];
m9_100 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name_With_Additional_Property()", file="XmlDeserializerTests.cs", label="var xmlpath = this.PathFor(''InlineListSample.xml'')", span="168-168"];
m9_101 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name_With_Additional_Property()", file="XmlDeserializerTests.cs", label="var doc = XDocument.Load(xmlpath)", span="169-169"];
m9_102 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name_With_Additional_Property()", file="XmlDeserializerTests.cs", label="var xml = new XmlDeserializer()", span="170-170"];
m9_103 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name_With_Additional_Property()", file="XmlDeserializerTests.cs", label="var output = xml.Deserialize<InlineListSample>(new RestResponse { Content = doc.ToString() })", span="171-171"];
m9_104 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name_With_Additional_Property()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(4, output.Count)", span="173-173"];
m9_105 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name_With_Additional_Property()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name_With_Additional_\\nProperty()", span="166-166"];
m9_195 [cluster="System.TimeSpan.TimeSpan(int, int, int)", file="XmlDeserializerTests.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int)", span="0-0"];
m9_452 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", span="913-913"];
m9_645 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", file="XmlDeserializerTests.cs", label="var doc = new XDocument()", span="915-915"];
m9_646 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", file="XmlDeserializerTests.cs", label="var root = new XElement(''NullableValues'')", span="916-916"];
m9_650 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", file="XmlDeserializerTests.cs", label="doc.Add(root)", span="925-925"];
m9_651 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", file="XmlDeserializerTests.cs", label="return doc.ToString();", span="927-927"];
m9_647 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", file="XmlDeserializerTests.cs", label="var idElement = new XElement(''Id'', null)", span="917-917"];
m9_649 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", file="XmlDeserializerTests.cs", label="root.Add(idElement,\r\n                new XElement(''StartDate'', null),\r\n                new XElement(''UniqueId'', new Guid(\\nGUID_STRING)))", span="921-923"];
m9_648 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", file="XmlDeserializerTests.cs", label="idElement.SetAttributeValue(''SomeAttribute'', ''SomeAttribute_Value'')", span="919-919"];
m9_652 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", span="913-913"];
m9_26 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Into_Struct()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Into_Struct()", span="66-66"];
m9_27 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Into_Struct()", file="XmlDeserializerTests.cs", label="string content = ''<root><one>oneOneOne</one><two>twoTwoTwo</two><three>3</three></root>''", span="68-68"];
m9_28 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Into_Struct()", file="XmlDeserializerTests.cs", label="var xml = new XmlDeserializer()", span="69-69"];
m9_29 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Into_Struct()", file="XmlDeserializerTests.cs", label="var output = xml.Deserialize<SimpleStruct>(new RestResponse { Content = content })", span="70-70"];
m9_30 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Into_Struct()", file="XmlDeserializerTests.cs", label="Assert.NotNull(output)", span="72-72"];
m9_31 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Into_Struct()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''oneOneOne'', output.One)", span="73-73"];
m9_32 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Into_Struct()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''twoTwoTwo'', output.Two)", span="74-74"];
m9_33 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Into_Struct()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(3, output.Three)", span="75-75"];
m9_34 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Into_Struct()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Into_Struct()", span="66-66"];
m9_167 [cluster="System.Guid.Guid(string)", file="XmlDeserializerTests.cs", label="Entry System.Guid.Guid(string)", span="0-0"];
m9_213 [cluster="System.DateTime.ToString(string, System.IFormatProvider)", file="XmlDeserializerTests.cs", label="Entry System.DateTime.ToString(string, System.IFormatProvider)", span="0-0"];
m9_272 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", span="383-383"];
m9_273 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="var doc = CreateUnderscoresXml()", span="385-385"];
m9_274 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="var response = new RestResponse { Content = doc }", span="386-386"];
m9_275 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="var d = new XmlDeserializer()", span="387-387"];
m9_276 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="var p = d.Deserialize<PersonForXml>(response)", span="388-388"];
m9_277 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''John Sheehan'', p.Name)", span="390-390"];
m9_278 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new DateTime(2009, 9, 25, 0, 6, 1), p.StartDate)", span="391-391"];
m9_279 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(28, p.Age)", span="392-392"];
m9_280 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(long.MaxValue, p.BigNumber)", span="393-393"];
m9_281 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(99.9999m, p.Percent)", span="394-394"];
m9_282 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(false, p.IsCool)", span="395-395"];
m9_283 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Guid(GUID_STRING), p.UniqueId)", span="396-396"];
m9_284 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="397-397"];
m9_285 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="398-398"];
m9_286 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.NotNull(p.Friends)", span="399-399"];
m9_287 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(10, p.Friends.Count)", span="400-400"];
m9_288 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.NotNull(p.BestFriend)", span="401-401"];
m9_289 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''The Fonz'', p.BestFriend.Name)", span="402-402"];
m9_290 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(1952, p.BestFriend.Since)", span="403-403"];
m9_291 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.NotNull(p.Foes)", span="404-404"];
m9_292 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(5, p.Foes.Count)", span="405-405"];
m9_293 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''Yankees'', p.Foes.Team)", span="406-406"];
m9_294 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", span="383-383"];
m9_14 [cluster="RestSharp.RestResponse.RestResponse()", file="XmlDeserializerTests.cs", label="Entry RestSharp.RestResponse.RestResponse()", span="173-173"];
m9_153 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", span="240-240"];
m9_154 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="var culture = CultureInfo.InvariantCulture", span="242-242"];
m9_155 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="var doc = CreateXmlWithoutEmptyValues(culture)", span="243-243"];
m9_156 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="var xml = new XmlDeserializer { Culture = culture }", span="244-244"];
m9_157 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="var output = xml.Deserialize<NullableValues>(new RestResponse { Content = doc })", span="245-245"];
m9_158 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="Assert.NotNull(output.Id)", span="247-247"];
m9_159 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="Assert.NotNull(output.StartDate)", span="248-248"];
m9_160 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="Assert.NotNull(output.UniqueId)", span="249-249"];
m9_161 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(123, output.Id)", span="250-250"];
m9_162 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new DateTime(2010, 2, 21, 9, 35, 00), output.StartDate)", span="251-251"];
m9_163 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Guid(GUID_STRING), output.UniqueId)", span="252-252"];
m9_164 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", span="240-240"];
m9_59 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_Without_Matching_Class_Case()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_Without_Matching_Class_Case()", span="106-106"];
m9_60 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_Without_Matching_Class_Case()", file="XmlDeserializerTests.cs", label="var xmlpath = this.PathFor(''InlineListSample.xml'')", span="108-108"];
m9_61 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_Without_Matching_Class_Case()", file="XmlDeserializerTests.cs", label="var doc = XDocument.Load(xmlpath)", span="109-109"];
m9_62 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_Without_Matching_Class_Case()", file="XmlDeserializerTests.cs", label="var xml = new XmlDeserializer()", span="110-110"];
m9_63 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_Without_Matching_Class_Case()", file="XmlDeserializerTests.cs", label="var output = xml.Deserialize<List<Image>>(new RestResponse { Content = doc.ToString() })", span="111-111"];
m9_64 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_Without_Matching_Class_Case()", file="XmlDeserializerTests.cs", label="Assert.IsNotEmpty(output)", span="113-113"];
m9_65 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_Without_Matching_Class_Case()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(4, output.Count)", span="114-114"];
m9_66 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_Without_Matching_Class_Case()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_Without_Matching_Class_Case()", span="106-106"];
m9_50 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_List_Inheritor_From_Custom_Root_With_Attributes()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_List_Inheritor_From_Custom_Root_With_Attributes()", span="93-93"];
m9_51 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_List_Inheritor_From_Custom_Root_With_Attributes()", file="XmlDeserializerTests.cs", label="var xmlpath = this.PathFor(''ListWithAttributes.xml'')", span="95-95"];
m9_52 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_List_Inheritor_From_Custom_Root_With_Attributes()", file="XmlDeserializerTests.cs", label="var doc = XDocument.Load(xmlpath)", span="96-96"];
m9_53 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_List_Inheritor_From_Custom_Root_With_Attributes()", file="XmlDeserializerTests.cs", label="var xml = new XmlDeserializer { RootElement = ''Calls'' }", span="97-97"];
m9_54 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_List_Inheritor_From_Custom_Root_With_Attributes()", file="XmlDeserializerTests.cs", label="var output = xml.Deserialize<TwilioCallList>(new RestResponse { Content = doc.ToString() })", span="98-98"];
m9_55 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_List_Inheritor_From_Custom_Root_With_Attributes()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(3, output.NumPages)", span="100-100"];
m9_56 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_List_Inheritor_From_Custom_Root_With_Attributes()", file="XmlDeserializerTests.cs", label="Assert.IsNotEmpty(output)", span="101-101"];
m9_57 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_List_Inheritor_From_Custom_Root_With_Attributes()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(2, output.Count)", span="102-102"];
m9_58 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_List_Inheritor_From_Custom_Root_With_Attributes()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_List_Inheritor_From_Custom_Root_With_Attributes()", span="93-93"];
m9_319 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", span="727-727"];
m9_534 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="var doc = new XDocument()", span="729-729"];
m9_535 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="var root = new XElement(''Person'')", span="730-730"];
m9_561 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="doc.Add(root)", span="768-768"];
m9_562 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="return doc.ToString();", span="770-770"];
m9_536 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Name'', ''John Sheehan''))", span="732-732"];
m9_537 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Start_Date'', new DateTime(2009, 9, 25, 0, 6, 1)))", span="733-733"];
m9_538 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''Age'', 28))", span="734-734"];
m9_539 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Percent'', 99.9999m))", span="735-735"];
m9_540 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Big-Number'', long.MaxValue))", span="736-736"];
m9_541 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''Is-Cool'', false))", span="737-737"];
m9_542 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Ignore'', ''dummy''))", span="738-738"];
m9_543 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''Read-Only'', ''dummy''))", span="739-739"];
m9_544 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Unique-Id'', new Guid(GUID_STRING)))", span="740-740"];
m9_545 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Url'', ''http://example.com''))", span="741-741"];
m9_546 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Url-Path'', ''/foo/bar''))", span="742-742"];
m9_547 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Best-Friend'',\r\n                new XElement(''Name'', ''The Fonz''),\r\n                new XAttribute(''\\nSince'', 1952)))", span="743-745"];
m9_553 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="root.Add(friends)", span="756-756"];
m9_560 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="root.Add(foes)", span="767-767"];
m9_548 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="var friends = new XElement(''Friends'')", span="747-747"];
m9_549 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="int i = 0", span="749-749"];
m9_551 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="friends.Add(new XElement(''Friend'',\r\n                    new XElement(''Name'', ''Friend'' + i),\r\n                    new XAttribute(''\\nSince'', DateTime.Now.Year - i)))", span="751-753"];
m9_550 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="i < 10", span="749-749"];
m9_552 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="i++", span="749-749"];
m9_554 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="var foes = new XElement(''Foes'')", span="758-758"];
m9_555 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="foes.Add(new XAttribute(''Team'', ''Yankees''))", span="760-760"];
m9_558 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="foes.Add(new XElement(''Foe'', new XElement(''Nickname'', ''Foe'' + i)))", span="764-764"];
m9_556 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="int i = 0", span="762-762"];
m9_557 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="i < 5", span="762-762"];
m9_559 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="i++", span="762-762"];
m9_563 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", span="727-727"];
m9_408 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Goodreads_Xml()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Goodreads_Xml()", span="548-548"];
m9_409 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Goodreads_Xml()", file="XmlDeserializerTests.cs", label="var xmlpath = this.PathFor(''Goodreads.xml'')", span="550-550"];
m9_410 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Goodreads_Xml()", file="XmlDeserializerTests.cs", label="var doc = XDocument.Load(xmlpath)", span="551-551"];
m9_411 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Goodreads_Xml()", file="XmlDeserializerTests.cs", label="var response = new RestResponse { Content = doc.ToString() }", span="552-552"];
m9_412 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Goodreads_Xml()", file="XmlDeserializerTests.cs", label="var d = new XmlDeserializer()", span="553-553"];
m9_413 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Goodreads_Xml()", file="XmlDeserializerTests.cs", label="var output = d.Deserialize<GoodReadsReviewCollection>(response)", span="554-554"];
m9_414 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Goodreads_Xml()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(2, output.Reviews.Count)", span="556-556"];
m9_415 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Goodreads_Xml()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''1208943892'', output.Reviews[0].Id)", span="557-557"];
m9_416 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Goodreads_Xml()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''1198344567'', output.Reviews[1].Id)", span="558-558"];
m9_417 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Goodreads_Xml()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Goodreads_Xml()", span="548-548"];
m9_83 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", span="142-142"];
m9_84 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="var xmlpath = this.PathFor(''InlineListSample.xml'')", span="144-144"];
m9_85 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="var doc = XDocument.Load(xmlpath)", span="145-145"];
m9_86 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="var xml = new XmlDeserializer()", span="146-146"];
m9_87 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="var output = xml.Deserialize<InlineListSample>(new RestResponse { Content = doc.ToString() })", span="147-147"];
m9_88 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="Assert.IsNotEmpty(output.Images)", span="149-149"];
m9_89 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(4, output.Images.Count)", span="150-150"];
m9_90 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", span="142-142"];
m9_237 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", span="784-784"];
m9_569 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="var doc = new XDocument()", span="786-786"];
m9_570 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="var root = new XElement(''Person'')", span="787-787"];
m9_592 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="doc.Add(root)", span="817-817"];
m9_593 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="return doc.ToString();", span="819-819"];
m9_571 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Name'', ''John Sheehan''))", span="789-789"];
m9_572 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''StartDate'', new DateTime(2009, 9, 25, 0, 6, 1)))", span="790-790"];
m9_573 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Age'', 28))", span="791-791"];
m9_574 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Percent'', 99.9999m))", span="792-792"];
m9_575 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''BigNumber'', long.MaxValue))", span="793-793"];
m9_576 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''IsCool'', false))", span="794-794"];
m9_577 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Ignore'', ''dummy''))", span="795-795"];
m9_578 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''ReadOnly'', ''dummy''))", span="796-796"];
m9_579 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''UniqueId'', new Guid(GUID_STRING)))", span="797-797"];
m9_580 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''EmptyGuid'', ''''))", span="798-798"];
m9_581 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Url'', ''http://example.com''))", span="799-799"];
m9_582 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''UrlPath'', ''/foo/bar''))", span="800-800"];
m9_583 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Order'', ''third''))", span="801-801"];
m9_584 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Disposition'', ''so-so''))", span="802-802"];
m9_585 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''BestFriend'',\r\n                new XElement(''Name'', ''The Fonz''),\r\n                new XElement(''\\nSince'', 1952)))", span="803-805"];
m9_591 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="root.Add(friends)", span="816-816"];
m9_586 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="var friends = new XElement(''Friends'')", span="807-807"];
m9_587 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="int i = 0", span="809-809"];
m9_589 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="friends.Add(new XElement(''Friend'',\r\n                    new XElement(''Name'', ''Friend'' + i),\r\n                    new XElement(''\\nSince'', DateTime.Now.Year - i)))", span="811-813"];
m9_588 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="i < 10", span="809-809"];
m9_590 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="i++", span="809-809"];
m9_594 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", span="784-784"];
m9_3 [cluster="System.IO.Path.Combine(string, string)", file="XmlDeserializerTests.cs", label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m9_214 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", span="312-312"];
m9_215 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="var doc = CreateElementsXml()", span="314-314"];
m9_216 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="var response = new RestResponse { Content = doc }", span="315-315"];
m9_217 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="var d = new XmlDeserializer()", span="316-316"];
m9_218 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="var p = d.Deserialize<PersonForXml>(response)", span="317-317"];
m9_219 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''John Sheehan'', p.Name)", span="319-319"];
m9_220 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new DateTime(2009, 9, 25, 0, 6, 1), p.StartDate)", span="320-320"];
m9_221 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(28, p.Age)", span="321-321"];
m9_222 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(long.MaxValue, p.BigNumber)", span="322-322"];
m9_223 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(99.9999m, p.Percent)", span="323-323"];
m9_224 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(false, p.IsCool)", span="324-324"];
m9_225 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Guid(GUID_STRING), p.UniqueId)", span="325-325"];
m9_226 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(Guid.Empty, p.EmptyGuid)", span="326-326"];
m9_227 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="327-327"];
m9_228 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="328-328"];
m9_229 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(Order.Third, p.Order)", span="329-329"];
m9_230 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(Disposition.SoSo, p.Disposition)", span="330-330"];
m9_231 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.NotNull(p.Friends)", span="331-331"];
m9_232 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(10, p.Friends.Count)", span="332-332"];
m9_233 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.NotNull(p.BestFriend)", span="333-333"];
m9_234 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''The Fonz'', p.BestFriend.Name)", span="334-334"];
m9_235 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(1952, p.BestFriend.Since)", span="335-335"];
m9_236 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", span="312-312"];
m9_427 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_String()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_String()", span="574-574"];
m9_428 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_String()", file="XmlDeserializerTests.cs", label="var xmlpath = this.PathFor(''boolean_from_string.xml'')", span="576-576"];
m9_429 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_String()", file="XmlDeserializerTests.cs", label="var doc = XDocument.Load(xmlpath)", span="577-577"];
m9_430 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_String()", file="XmlDeserializerTests.cs", label="var response = new RestResponse { Content = doc.ToString() }", span="578-578"];
m9_431 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_String()", file="XmlDeserializerTests.cs", label="var d = new XmlDeserializer()", span="579-579"];
m9_432 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_String()", file="XmlDeserializerTests.cs", label="var output = d.Deserialize<BooleanTest>(response)", span="580-580"];
m9_433 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_String()", file="XmlDeserializerTests.cs", label="Assert.True(output.Value)", span="582-582"];
m9_434 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_String()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_String()", span="574-574"];
m9_67 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_With_Matching_Class_Case()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_With_Matching_Class_Case()", span="118-118"];
m9_68 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_With_Matching_Class_Case()", file="XmlDeserializerTests.cs", label="var xmlpath = this.PathFor(''InlineListSample.xml'')", span="120-120"];
m9_69 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_With_Matching_Class_Case()", file="XmlDeserializerTests.cs", label="var doc = XDocument.Load(xmlpath)", span="121-121"];
m9_70 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_With_Matching_Class_Case()", file="XmlDeserializerTests.cs", label="var xml = new XmlDeserializer()", span="122-122"];
m9_71 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_With_Matching_Class_Case()", file="XmlDeserializerTests.cs", label="var output = xml.Deserialize<List<image>>(new RestResponse { Content = doc.ToString() })", span="123-123"];
m9_72 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_With_Matching_Class_Case()", file="XmlDeserializerTests.cs", label="Assert.IsNotEmpty(output)", span="125-125"];
m9_73 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_With_Matching_Class_Case()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(4, output.Count)", span="126-126"];
m9_74 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_With_Matching_Class_Case()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_With_Matching_Class_Case()", span="118-118"];
m9_453 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", span="610-610"];
m9_454 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlDeserializerTests.cs", label="var culture = CultureInfo.InvariantCulture", span="612-612"];
m9_455 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlDeserializerTests.cs", label="var doc = new XDocument(culture)", span="613-613"];
m9_464 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlDeserializerTests.cs", label="var d = new XmlDeserializer { Culture = culture, }", span="626-626"];
m9_456 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlDeserializerTests.cs", label="DateTimeOffset dateTimeOffset = new DateTimeOffset(2013, 02, 08, 9, 18, 22, TimeSpan.FromHours(10))", span="614-614"];
m9_462 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlDeserializerTests.cs", label="doc.Add(root)", span="622-622"];
m9_463 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlDeserializerTests.cs", label="var response = new RestResponse { Content = doc.ToString() }", span="625-625"];
m9_457 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlDeserializerTests.cs", label="DateTimeOffset? nullableDateTimeOffsetWithValue = new DateTimeOffset(2013, 02, 08, 9, 18, 23, TimeSpan.FromHours(10))", span="615-615"];
m9_459 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''DateTimeOffset'', dateTimeOffset))", span="618-618"];
m9_466 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(dateTimeOffset, payload.DateTimeOffset)", span="629-629"];
m9_458 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlDeserializerTests.cs", label="var root = new XElement(''Dates'')", span="616-616"];
m9_461 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''NullableDateTimeOffsetWithValue'', nullableDateTimeOffsetWithValue))", span="620-620"];
m9_469 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(nullableDateTimeOffsetWithValue, payload.NullableDateTimeOffsetWithValue)", span="632-632"];
m9_460 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''NullableDateTimeOffsetWithNull'', string.Empty))", span="619-619"];
m9_465 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlDeserializerTests.cs", label="var payload = d.Deserialize<DateTimeTestStructure>(response)", span="627-627"];
m9_467 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlDeserializerTests.cs", label="Assert.Null(payload.NullableDateTimeOffsetWithNull)", span="630-630"];
m9_468 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlDeserializerTests.cs", label="Assert.True(payload.NullableDateTimeOffsetWithValue.HasValue)", span="631-631"];
m9_470 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", span="610-610"];
m9_165 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithoutEmptyValues(System.Globalization.CultureInfo)", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.CreateXmlWithoutEmptyValues(System.Globalization.CultureInfo)", span="861-861"];
m9_618 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithoutEmptyValues(System.Globalization.CultureInfo)", file="XmlDeserializerTests.cs", label="var doc = new XDocument()", span="863-863"];
m9_620 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithoutEmptyValues(System.Globalization.CultureInfo)", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Id'', 123),\r\n                new XElement(''StartDate'', new DateTime(2010, 2, 21, 9, 35, 00).ToString(\\nculture)),\r\n                new XElement(''UniqueId'', new Guid(GUID_STRING)))", span="866-868"];
m9_619 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithoutEmptyValues(System.Globalization.CultureInfo)", file="XmlDeserializerTests.cs", label="var root = new XElement(''NullableValues'')", span="864-864"];
m9_621 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithoutEmptyValues(System.Globalization.CultureInfo)", file="XmlDeserializerTests.cs", label="doc.Add(root)", span="870-870"];
m9_622 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithoutEmptyValues(System.Globalization.CultureInfo)", file="XmlDeserializerTests.cs", label="return doc.ToString();", span="872-872"];
m9_623 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithoutEmptyValues(System.Globalization.CultureInfo)", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.CreateXmlWithoutEmptyValues(System.Globalization.CultureInfo)", span="861-861"];
m9_238 [cluster="System.Uri.Uri(string, System.UriKind)", file="XmlDeserializerTests.cs", label="Entry System.Uri.Uri(string, System.UriKind)", span="0-0"];
m9_49 [cluster="System.Collections.Generic.IEnumerable<int>.Sum()", file="XmlDeserializerTests.cs", label="Entry System.Collections.Generic.IEnumerable<int>.Sum()", span="0-0"];
m9_443 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValues()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValues()", span="896-896"];
m9_636 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValues()", file="XmlDeserializerTests.cs", label="var doc = new XDocument()", span="898-898"];
m9_637 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValues()", file="XmlDeserializerTests.cs", label="var root = new XElement(''NullableValues'')", span="899-899"];
m9_641 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValues()", file="XmlDeserializerTests.cs", label="doc.Add(root)", span="908-908"];
m9_642 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValues()", file="XmlDeserializerTests.cs", label="return doc.ToString();", span="910-910"];
m9_638 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValues()", file="XmlDeserializerTests.cs", label="var idElement = new XElement(''Id'', null)", span="900-900"];
m9_640 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValues()", file="XmlDeserializerTests.cs", label="root.Add(idElement,\r\n                new XElement(''StartDate'', null),\r\n                new XElement(''UniqueId'', null))", span="904-906"];
m9_639 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValues()", file="XmlDeserializerTests.cs", label="idElement.SetAttributeValue(''SomeAttribute'', ''SomeAttribute_Value'')", span="902-902"];
m9_643 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValues()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValues()", span="896-896"];
m9_35 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", span="79-79"];
m9_36 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", file="XmlDeserializerTests.cs", label="var xmlpath = this.PathFor(''xmllists.xml'')", span="81-81"];
m9_37 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", file="XmlDeserializerTests.cs", label="var doc = XDocument.Load(xmlpath)", span="82-82"];
m9_38 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", file="XmlDeserializerTests.cs", label="var xml = new XmlDeserializer()", span="83-83"];
m9_39 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", file="XmlDeserializerTests.cs", label="var output = xml.Deserialize<SimpleTypesListSample>(new RestResponse { Content = doc.ToString() })", span="84-84"];
m9_40 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", file="XmlDeserializerTests.cs", label="Assert.IsNotEmpty(output.Names)", span="86-86"];
m9_41 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", file="XmlDeserializerTests.cs", label="Assert.IsNotEmpty(output.Numbers)", span="87-87"];
m9_42 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", file="XmlDeserializerTests.cs", label="Assert.False(output.Names[0].Length == 0)", span="88-88"];
m9_43 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", file="XmlDeserializerTests.cs", label="Assert.False(output.Numbers.Sum() == 0)", span="89-89"];
m9_44 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", span="79-79"];
m9_106 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", span="177-177"];
m9_107 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="var xmlpath = this.PathFor(''NestedListSample.xml'')", span="179-179"];
m9_108 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="var doc = XDocument.Load(xmlpath)", span="180-180"];
m9_109 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="var xml = new XmlDeserializer()", span="181-181"];
m9_110 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="var output = xml.Deserialize<InlineListSample>(new RestResponse { Content = doc.ToString() })", span="182-182"];
m9_111 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="Assert.IsNotEmpty(output.Images)", span="184-184"];
m9_112 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(4, output.Images.Count)", span="185-185"];
m9_113 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", span="177-177"];
m9_4 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute()", span="40-40"];
m9_5 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute()", file="XmlDeserializerTests.cs", label="string content =\r\n                ''<oddball><sid>1</sid><friendlyName>Jackson</friendlyName><oddballPropertyName>oddball</oddballPropertyName></\\noddball>''", span="42-43"];
m9_6 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute()", file="XmlDeserializerTests.cs", label="var xml = new XmlDeserializer()", span="44-44"];
m9_7 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute()", file="XmlDeserializerTests.cs", label="var output = xml.Deserialize<Oddball>(new RestResponse { Content = content })", span="45-45"];
m9_8 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute()", file="XmlDeserializerTests.cs", label="Assert.NotNull(output)", span="47-47"];
m9_9 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''1'', output.Sid)", span="48-48"];
m9_10 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''Jackson'', output.FriendlyName)", span="49-49"];
m9_11 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''oddball'', output.GoodPropertyName)", span="50-50"];
m9_12 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute()", span="40-40"];
m9_265 [cluster="RestSharp.Tests.XmlDeserializerTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", span="372-372"];
m9_266 [cluster="RestSharp.Tests.XmlDeserializerTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="XmlDeserializerTests.cs", label="var doc = CreateElementsXml()", span="374-374"];
m9_267 [cluster="RestSharp.Tests.XmlDeserializerTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="XmlDeserializerTests.cs", label="var response = new RestResponse { Content = doc }", span="375-375"];
m9_268 [cluster="RestSharp.Tests.XmlDeserializerTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="XmlDeserializerTests.cs", label="var d = new XmlDeserializer()", span="376-376"];
m9_269 [cluster="RestSharp.Tests.XmlDeserializerTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="XmlDeserializerTests.cs", label="var p = d.Deserialize<PersonForXml>(response)", span="377-377"];
m9_270 [cluster="RestSharp.Tests.XmlDeserializerTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="XmlDeserializerTests.cs", label="Assert.Null(p.ReadOnlyProxy)", span="379-379"];
m9_271 [cluster="RestSharp.Tests.XmlDeserializerTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", span="372-372"];
m9_367 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", span="491-491"];
m9_368 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", file="XmlDeserializerTests.cs", label="var doc = CreateLowerCasedRootElementWithDashesXml()", span="493-493"];
m9_369 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", file="XmlDeserializerTests.cs", label="var response = new RestResponse { Content = doc }", span="494-494"];
m9_370 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", file="XmlDeserializerTests.cs", label="var d = new XmlDeserializer()", span="495-495"];
m9_371 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", file="XmlDeserializerTests.cs", label="var p = d.Deserialize<List<IncomingInvoice>>(response)", span="496-496"];
m9_372 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", file="XmlDeserializerTests.cs", label="Assert.NotNull(p)", span="498-498"];
m9_373 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(1, p.Count)", span="499-499"];
m9_374 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(45, p[0].ConceptId)", span="500-500"];
m9_375 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", span="491-491"];
m9_151 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithNullValues()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.CreateXmlWithNullValues()", span="847-847"];
m9_612 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithNullValues()", file="XmlDeserializerTests.cs", label="var doc = new XDocument()", span="849-849"];
m9_613 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithNullValues()", file="XmlDeserializerTests.cs", label="var root = new XElement(''NullableValues'')", span="850-850"];
m9_615 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithNullValues()", file="XmlDeserializerTests.cs", label="doc.Add(root)", span="856-856"];
m9_616 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithNullValues()", file="XmlDeserializerTests.cs", label="return doc.ToString();", span="858-858"];
m9_614 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithNullValues()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Id'', null),\r\n                new XElement(''StartDate'', null),\r\n                new XElement(''UniqueId'', \\nnull))", span="852-854"];
m9_617 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithNullValues()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.CreateXmlWithNullValues()", span="847-847"];
m9_471 [cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="XmlDeserializerTests.cs", label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0"];
m9_91 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", span="154-154"];
m9_92 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="var xmlpath = this.PathFor(''InlineListSample.xml'')", span="156-156"];
m9_93 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="var doc = XDocument.Load(xmlpath)", span="157-157"];
m9_94 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="var xml = new XmlDeserializer()", span="158-158"];
m9_95 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="var output = xml.Deserialize<InlineListSample>(new RestResponse { Content = doc.ToString() })", span="159-159"];
m9_96 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="Assert.IsNotEmpty(output.images)", span="161-161"];
m9_97 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(4, output.images.Count)", span="162-162"];
m9_98 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", span="154-154"];
m9_166 [cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="XmlDeserializerTests.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0"];
m9_133 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", span="215-215"];
m9_134 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", file="XmlDeserializerTests.cs", label="var doc = CreateXmlWithEmptyInlineList()", span="217-217"];
m9_135 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", file="XmlDeserializerTests.cs", label="var xml = new XmlDeserializer()", span="218-218"];
m9_136 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", file="XmlDeserializerTests.cs", label="var output = xml.Deserialize<EmptyListSample>(new RestResponse { Content = doc })", span="219-219"];
m9_137 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", file="XmlDeserializerTests.cs", label="Assert.NotNull(output.images)", span="221-221"];
m9_138 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", file="XmlDeserializerTests.cs", label="Assert.NotNull(output.Images)", span="222-222"];
m9_139 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", file="XmlDeserializerTests.cs", label="Assert.IsEmpty(output.images)", span="223-223"];
m9_140 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", file="XmlDeserializerTests.cs", label="Assert.IsEmpty(output.Images)", span="224-224"];
m9_141 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", span="215-215"];
m9_320 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", span="437-437"];
m9_321 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="var doc = CreateLowercaseUnderscoresXml()", span="439-439"];
m9_322 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="var response = new RestResponse { Content = doc }", span="440-440"];
m9_323 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="var d = new XmlDeserializer()", span="441-441"];
m9_324 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="var p = d.Deserialize<PersonForXml>(response)", span="442-442"];
m9_325 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''John Sheehan'', p.Name)", span="444-444"];
m9_326 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new DateTime(2009, 9, 25, 0, 6, 1), p.StartDate)", span="445-445"];
m9_327 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(28, p.Age)", span="446-446"];
m9_328 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(long.MaxValue, p.BigNumber)", span="447-447"];
m9_329 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(99.9999m, p.Percent)", span="448-448"];
m9_330 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(false, p.IsCool)", span="449-449"];
m9_331 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Guid(GUID_STRING), p.UniqueId)", span="450-450"];
m9_332 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="451-451"];
m9_333 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="452-452"];
m9_334 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.NotNull(p.Friends)", span="453-453"];
m9_335 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(10, p.Friends.Count)", span="454-454"];
m9_336 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.NotNull(p.BestFriend)", span="455-455"];
m9_337 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''The Fonz'', p.BestFriend.Name)", span="456-456"];
m9_338 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(1952, p.BestFriend.Since)", span="457-457"];
m9_339 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.NotNull(p.Foes)", span="458-458"];
m9_340 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(5, p.Foes.Count)", span="459-459"];
m9_341 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''Yankees'', p.Foes.Team)", span="460-460"];
m9_342 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", span="437-437"];
m9_15 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file="XmlDeserializerTests.cs", label="Entry RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.IRestResponse)", span="44-44"];
m9_398 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Google_Weather_Xml()", span="534-534"];
m9_399 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file="XmlDeserializerTests.cs", label="var xmlpath = this.PathFor(''GoogleWeather.xml'')", span="536-536"];
m9_400 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file="XmlDeserializerTests.cs", label="var doc = XDocument.Load(xmlpath)", span="537-537"];
m9_401 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file="XmlDeserializerTests.cs", label="var response = new RestResponse { Content = doc.ToString() }", span="538-538"];
m9_402 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file="XmlDeserializerTests.cs", label="var d = new XmlDeserializer()", span="539-539"];
m9_403 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file="XmlDeserializerTests.cs", label="var output = d.Deserialize<xml_api_reply>(response)", span="540-540"];
m9_404 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file="XmlDeserializerTests.cs", label="Assert.IsNotEmpty(output.weather)", span="542-542"];
m9_405 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(4, output.weather.Count)", span="543-543"];
m9_406 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''Sunny'', output.weather[0].condition.data)", span="544-544"];
m9_407 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Google_Weather_Xml()", span="534-534"];
m9_142 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyInlineList()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyInlineList()", span="886-886"];
m9_631 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyInlineList()", file="XmlDeserializerTests.cs", label="var doc = new XDocument()", span="888-888"];
m9_632 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyInlineList()", file="XmlDeserializerTests.cs", label="var root = new XElement(''EmptyListSample'')", span="889-889"];
m9_633 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyInlineList()", file="XmlDeserializerTests.cs", label="doc.Add(root)", span="891-891"];
m9_634 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyInlineList()", file="XmlDeserializerTests.cs", label="return doc.ToString();", span="893-893"];
m9_635 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyInlineList()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyInlineList()", span="886-886"];
m9_197 [cluster="System.TimeSpan.TimeSpan(long)", file="XmlDeserializerTests.cs", label="Entry System.TimeSpan.TimeSpan(long)", span="0-0"];
m9_200 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", span="289-289"];
m9_201 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlDeserializerTests.cs", label="var culture = CultureInfo.InvariantCulture", span="291-291"];
m9_202 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlDeserializerTests.cs", label="var format = ''dd yyyy MMM, hh:mm ss tt zzz''", span="292-292"];
m9_206 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''StartDate'', date.ToString(format, culture)))", span="297-297"];
m9_208 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlDeserializerTests.cs", label="var xml = new XmlDeserializer\r\n                      {\r\n                          DateFormat = format,\r\n                          \\nCulture = culture\r\n                      }", span="300-304"];
m9_203 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlDeserializerTests.cs", label="var date = new DateTime(2010, 2, 8, 11, 11, 11)", span="293-293"];
m9_204 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlDeserializerTests.cs", label="var doc = new XDocument()", span="294-294"];
m9_211 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(date, output.StartDate)", span="308-308"];
m9_205 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlDeserializerTests.cs", label="var root = new XElement(''Person'')", span="295-295"];
m9_207 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlDeserializerTests.cs", label="doc.Add(root)", span="298-298"];
m9_209 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlDeserializerTests.cs", label="var response = new RestResponse { Content = doc.ToString() }", span="305-305"];
m9_210 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlDeserializerTests.cs", label="var output = xml.Deserialize<PersonForXml>(response)", span="306-306"];
m9_212 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", span="289-289"];
m9_114 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", span="190-190"];
m9_115 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="var xmlpath = this.PathFor(''NestedListSample.xml'')", span="192-192"];
m9_116 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="var doc = XDocument.Load(xmlpath)", span="193-193"];
m9_117 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="var xml = new XmlDeserializer()", span="194-194"];
m9_118 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="var output = xml.Deserialize<InlineListSample>(new RestResponse { Content = doc.ToString() })", span="195-195"];
m9_119 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="Assert.IsNotEmpty(output.images)", span="197-197"];
m9_120 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(4, output.images.Count)", span="198-198"];
m9_121 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", span="190-190"];
m9_18 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute_for_List()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute_for_List()", span="54-54"];
m9_19 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute_for_List()", file="XmlDeserializerTests.cs", label="string content =\r\n                ''<document><response><oddballRootName><sid>1</sid><friendlyName>Jackson</friendlyName><oddballPropertyName>\\noddball</oddballPropertyName></oddballRootName></response><response><oddballRootName><sid>1</sid><friendlyName>Jackson</friendlyName><\\noddballPropertyName>evenball</oddballPropertyName></oddballRootName></response></document>''", span="56-57"];
m9_20 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute_for_List()", file="XmlDeserializerTests.cs", label="var xml = new XmlDeserializer()", span="58-58"];
m9_21 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute_for_List()", file="XmlDeserializerTests.cs", label="List<Oddball> output = xml.Deserialize<List<Oddball>>(new RestResponse { Content = content })", span="59-59"];
m9_22 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute_for_List()", file="XmlDeserializerTests.cs", label="Assert.NotNull(output)", span="61-61"];
m9_23 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute_for_List()", color=green, community=0, file="XmlDeserializerTests.cs", label="Assert.AreEqual(''1'', output[0].Sid)", prediction=29, span="62-62"];
m9_24 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute_for_List()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute_for_List()", span="54-54"];
m9_389 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lastfm_Xml()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lastfm_Xml()", span="520-520"];
m9_390 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lastfm_Xml()", file="XmlDeserializerTests.cs", label="var xmlpath = this.PathFor(''Lastfm.xml'')", span="522-522"];
m9_391 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lastfm_Xml()", file="XmlDeserializerTests.cs", label="var doc = XDocument.Load(xmlpath)", span="523-523"];
m9_392 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lastfm_Xml()", file="XmlDeserializerTests.cs", label="var response = new RestResponse { Content = doc.ToString() }", span="524-524"];
m9_393 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lastfm_Xml()", file="XmlDeserializerTests.cs", label="var d = new XmlDeserializer()", span="525-525"];
m9_394 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lastfm_Xml()", file="XmlDeserializerTests.cs", label="var output = d.Deserialize<SampleClasses.Lastfm.Event>(response)", span="526-526"];
m9_395 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lastfm_Xml()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''http://www.last.fm/event/328799+Philip+Glass+at+Barbican+Centre+on+12+June+2008'', output.url)", span="529-529"];
m9_396 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lastfm_Xml()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''http://www.last.fm/venue/8777860+Barbican+Centre'', output.venue.url)", span="530-530"];
m9_397 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lastfm_Xml()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lastfm_Xml()", span="520-520"];
m9_13 [cluster="RestSharp.Deserializers.XmlDeserializer.XmlDeserializer()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Deserializers.XmlDeserializer.XmlDeserializer()", span="39-39"];
m9_75 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Directly_To_Lists_Off_Root_Element()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Directly_To_Lists_Off_Root_Element()", span="130-130"];
m9_76 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Directly_To_Lists_Off_Root_Element()", file="XmlDeserializerTests.cs", label="var xmlpath = this.PathFor(''directlists.xml'')", span="132-132"];
m9_77 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Directly_To_Lists_Off_Root_Element()", file="XmlDeserializerTests.cs", label="var doc = XDocument.Load(xmlpath)", span="133-133"];
m9_78 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Directly_To_Lists_Off_Root_Element()", file="XmlDeserializerTests.cs", label="var xml = new XmlDeserializer()", span="134-134"];
m9_79 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Directly_To_Lists_Off_Root_Element()", file="XmlDeserializerTests.cs", label="var output = xml.Deserialize<List<Database>>(new RestResponse { Content = doc.ToString() })", span="135-135"];
m9_80 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Directly_To_Lists_Off_Root_Element()", file="XmlDeserializerTests.cs", label="Assert.IsNotEmpty(output)", span="137-137"];
m9_81 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Directly_To_Lists_Off_Root_Element()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(2, output.Count)", span="138-138"];
m9_82 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Directly_To_Lists_Off_Root_Element()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Directly_To_Lists_Off_Root_Element()", span="130-130"];
m9_624 [cluster="System.DateTime.ToString(System.IFormatProvider)", file="XmlDeserializerTests.cs", label="Entry System.DateTime.ToString(System.IFormatProvider)", span="0-0"];
m9_131 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyNestedList()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyNestedList()", span="875-875"];
m9_625 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyNestedList()", file="XmlDeserializerTests.cs", label="var doc = new XDocument()", span="877-877"];
m9_626 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyNestedList()", file="XmlDeserializerTests.cs", label="var root = new XElement(''EmptyListSample'')", span="878-878"];
m9_628 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyNestedList()", file="XmlDeserializerTests.cs", label="doc.Add(root)", span="881-881"];
m9_629 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyNestedList()", file="XmlDeserializerTests.cs", label="return doc.ToString();", span="883-883"];
m9_627 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyNestedList()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Images''))", span="880-880"];
m9_630 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyNestedList()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyNestedList()", span="875-875"];
m9_377 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Eventful_Xml()", span="504-504"];
m9_378 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlDeserializerTests.cs", label="var xmlpath = this.PathFor(''eventful.xml'')", span="506-506"];
m9_379 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlDeserializerTests.cs", label="var doc = XDocument.Load(xmlpath)", span="507-507"];
m9_380 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlDeserializerTests.cs", label="var response = new RestResponse { Content = doc.ToString() }", span="508-508"];
m9_381 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlDeserializerTests.cs", label="var d = new XmlDeserializer()", span="509-509"];
m9_382 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlDeserializerTests.cs", label="var output = d.Deserialize<VenueSearch>(response)", span="510-510"];
m9_383 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlDeserializerTests.cs", label="Assert.IsNotEmpty(output.venues)", span="512-512"];
m9_384 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(3, output.venues.Count)", span="513-513"];
m9_385 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''Tivoli'', output.venues[0].name)", span="514-514"];
m9_386 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''http://eventful.com/brisbane/venues/tivoli-/V0-001-002169294-8'', output.venues[1].url)", span="515-515"];
m9_387 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''V0-001-000266914-3'', output.venues[2].id)", span="516-516"];
m9_388 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Eventful_Xml()", span="504-504"];
m9_143 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", span="228-228"];
m9_144 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="var doc = CreateXmlWithNullValues()", span="230-230"];
m9_145 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="var xml = new XmlDeserializer()", span="231-231"];
m9_146 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="var output = xml.Deserialize<NullableValues>(new RestResponse { Content = doc })", span="232-232"];
m9_147 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="Assert.Null(output.Id)", span="234-234"];
m9_148 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="Assert.Null(output.StartDate)", span="235-235"];
m9_149 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="Assert.Null(output.UniqueId)", span="236-236"];
m9_150 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", span="228-228"];
m9_257 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", span="822-822"];
m9_595 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file="XmlDeserializerTests.cs", label="var doc = new XDocument()", span="824-824"];
m9_596 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file="XmlDeserializerTests.cs", label="var root = new XElement(''Person'')", span="825-825"];
m9_609 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file="XmlDeserializerTests.cs", label="doc.Add(root)", span="842-842"];
m9_610 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file="XmlDeserializerTests.cs", label="return doc.ToString();", span="844-844"];
m9_597 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''Name'', ''John Sheehan''))", span="827-827"];
m9_598 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''StartDate'', new DateTime(2009, 9, 25, 0, 6, 1)))", span="828-828"];
m9_599 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''Age'', 28))", span="829-829"];
m9_600 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''Percent'', 99.9999m))", span="830-830"];
m9_601 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''BigNumber'', long.MaxValue))", span="831-831"];
m9_602 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''IsCool'', false))", span="832-832"];
m9_603 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''Ignore'', ''dummy''))", span="833-833"];
m9_604 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''ReadOnly'', ''dummy''))", span="834-834"];
m9_605 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''UniqueId'', new Guid(GUID_STRING)))", span="835-835"];
m9_606 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''Url'', ''http://example.com''))", span="836-836"];
m9_607 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''UrlPath'', ''/foo/bar''))", span="837-837"];
m9_608 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''BestFriend'',\r\n                new XAttribute(''Name'', ''The Fonz''),\r\n                new XAttribute(''\\nSince'', 1952)))", span="838-840"];
m9_611 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", span="822-822"];
m9_122 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", span="202-202"];
m9_123 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", file="XmlDeserializerTests.cs", label="var doc = CreateXmlWithEmptyNestedList()", span="204-204"];
m9_124 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", file="XmlDeserializerTests.cs", label="var xml = new XmlDeserializer()", span="205-205"];
m9_125 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", file="XmlDeserializerTests.cs", label="var output = xml.Deserialize<EmptyListSample>(new RestResponse { Content = doc })", span="206-206"];
m9_126 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", file="XmlDeserializerTests.cs", label="Assert.NotNull(output.images)", span="208-208"];
m9_127 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", file="XmlDeserializerTests.cs", label="Assert.NotNull(output.Images)", span="209-209"];
m9_128 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", file="XmlDeserializerTests.cs", label="Assert.IsEmpty(output.images)", span="210-210"];
m9_129 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", file="XmlDeserializerTests.cs", label="Assert.IsEmpty(output.Images)", span="211-211"];
m9_130 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", span="202-202"];
m9_418 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_Number()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_Number()", span="562-562"];
m9_419 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_Number()", file="XmlDeserializerTests.cs", label="var xmlpath = this.PathFor(''boolean_from_number.xml'')", span="564-564"];
m9_420 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_Number()", file="XmlDeserializerTests.cs", label="var doc = XDocument.Load(xmlpath)", span="565-565"];
m9_421 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_Number()", file="XmlDeserializerTests.cs", label="var response = new RestResponse { Content = doc.ToString() }", span="566-566"];
m9_422 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_Number()", file="XmlDeserializerTests.cs", label="var d = new XmlDeserializer()", span="567-567"];
m9_423 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_Number()", file="XmlDeserializerTests.cs", label="var output = d.Deserialize<BooleanTest>(response)", span="568-568"];
m9_424 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_Number()", file="XmlDeserializerTests.cs", label="Assert.True(output.Value)", span="570-570"];
m9_425 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_Number()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_Number()", span="562-562"];
n13;
n14;
n65;
n66;
n59;
n60;
n61;
m2_108;
m2_65;
m2_109;
m2_180;
m2_66;
m2_59;
m2_60;
m2_64;
m2_61;
m3_13;
m3_12;
m3_38;
m3_162;
m3_89;
m3_66;
m3_67;
m3_151;
m3_152;
m6_8_152;
m6_3_13;
m6_3_12;
m6_3_38;
m6_8_45;
m6_8_46;
m6_8_17;
m6_8_16;
m6_8_47;
m6_8_194;
m6_8_196;
m6_8_198;
m6_8_644;
m6_8_132;
m6_8_503;
m6_2_108;
m6_2_65;
m6_2_109;
m6_3_162;
m6_8_426;
m6_7_107;
m6_8_48;
m6_2_180;
m6_8_25;
m6_3_89;
m6_13;
m6_65;
m6_66;
m6_59;
m6_14;
m6_60;
m6_61;
m6_3_66;
m6_3_67;
m6_3_151;
m6_3_152;
m6_2_66;
m6_2_59;
m6_2_60;
m6_2_64;
m6_2_61;
m8_107;
m9_17;
m9_16;
m9_152;
m9_194;
m9_198;
m9_46;
m9_196;
m9_503;
m9_45;
m9_644;
m9_47;
m9_426;
m9_48;
m9_132;
m9_25;
m2_187;
m3_627;
m6_2_187;
m6_3_627;
m6_6_88;
m6_6_89;
m6_6_90;
m6_6_91;
m6_6_92;
m6_6_93;
m6_6_94;
m6_6_95;
m6_6_96;
m6_6_97;
m6_6_98;
m6_6_99;
m6_6_100;
m6_7_152;
m6_7_153;
m6_7_154;
m6_7_164;
m6_8_653;
m7_88;
m7_89;
m7_90;
m7_91;
m7_92;
m7_93;
m7_94;
m7_95;
m7_96;
m7_97;
m7_98;
m7_99;
m7_100;
m8_152;
m8_153;
m8_154;
m8_164;
m9_653;
n15 -> n18  [color=darkseagreen4, key=1, label="System.Net.HttpListenerContext", style=dashed];
n30 -> n32  [color=darkseagreen4, key=1, label=response, style=dashed];
n44 -> n46  [color=darkseagreen4, key=1, label=response, style=dashed];
n54 -> n56  [color=darkseagreen4, key=1, label=response, style=dashed];
n34 -> n36  [color=darkseagreen4, key=1, label=oauthToken, style=dashed];
n35 -> n37  [color=darkseagreen4, key=1, label=oauthTokenSecret, style=dashed];
n48 -> n50  [color=darkseagreen4, key=1, label=oauthToken, style=dashed];
n49 -> n51  [color=darkseagreen4, key=1, label=oauthTokenSecret, style=dashed];
m2_25 -> m2_73  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_72 -> m2_76  [color=darkseagreen4, key=1, label=valueType, style=dashed];
m2_70 -> m2_79  [color=darkseagreen4, key=1, label=dict, style=dashed];
m2_70 -> m2_80  [color=darkseagreen4, key=1, label=dict, style=dashed];
m2_74 -> m2_79  [color=darkseagreen4, key=1, label=key, style=dashed];
m2_23 -> m2_91  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_23 -> m2_92  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_23 -> m2_104  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_88 -> m2_104  [color=darkseagreen4, key=1, label=list, style=dashed];
m2_88 -> m2_95  [color=darkseagreen4, key=1, label=list, style=dashed];
m2_88 -> m2_98  [color=darkseagreen4, key=1, label=list, style=dashed];
m2_88 -> m2_99  [color=darkseagreen4, key=1, label=list, style=dashed];
m2_88 -> m2_101  [color=darkseagreen4, key=1, label=list, style=dashed];
m2_88 -> m2_103  [color=darkseagreen4, key=1, label=list, style=dashed];
m2_88 -> m2_105  [color=darkseagreen4, key=1, label=list, style=dashed];
m2_89 -> m2_112  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_92 -> m2_99  [color=darkseagreen4, key=1, label=element, style=dashed];
m2_92 -> m2_97  [color=darkseagreen4, key=1, label=element, style=dashed];
m2_92 -> m2_100  [color=darkseagreen4, key=1, label=element, style=dashed];
m2_90 -> m2_104  [color=darkseagreen4, key=1, label=itemType, style=dashed];
m2_90 -> m2_93  [color=darkseagreen4, key=1, label=itemType, style=dashed];
m2_90 -> m2_96  [color=darkseagreen4, key=1, label=itemType, style=dashed];
m2_181 -> m2_184  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_183 -> m2_185  [color=darkseagreen4, key=1, label=instance, style=dashed];
m2_27 -> m2_29  [color=darkseagreen4, key=1, label=data, style=dashed];
m2_27 -> m2_30  [color=darkseagreen4, key=1, label=data, style=dashed];
m2_86 -> m2_116  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_86 -> m2_120  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_86 -> m2_122  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_86 -> m2_123  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_86 -> m2_124  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_86 -> m2_125  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_86 -> m2_126  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_86 -> m2_128  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_86 -> m2_130  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_86 -> m2_135  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_86 -> m2_137  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_86 -> m2_139  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_86 -> m2_140  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_86 -> m2_141  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_86 -> m2_145  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_86 -> m2_147  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_86 -> m2_152  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_86 -> m2_155  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_86 -> m2_159  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_86 -> m2_160  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_86 -> m2_161  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_86 -> m2_162  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_86 -> m2_163  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_86 -> m2_164  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_86 -> m2_165  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_115 -> m2_117  [color=darkseagreen4, key=1, label=stringValue, style=dashed];
m2_115 -> m2_125  [color=darkseagreen4, key=1, label=stringValue, style=dashed];
m2_115 -> m2_127  [color=darkseagreen4, key=1, label=stringValue, style=dashed];
m2_115 -> m2_129  [color=darkseagreen4, key=1, label=stringValue, style=dashed];
m2_115 -> m2_142  [color=darkseagreen4, key=1, label=stringValue, style=dashed];
m2_115 -> m2_143  [color=darkseagreen4, key=1, label=stringValue, style=dashed];
m2_115 -> m2_144  [color=darkseagreen4, key=1, label=stringValue, style=dashed];
m2_115 -> m2_146  [color=darkseagreen4, key=1, label=stringValue, style=dashed];
m2_115 -> m2_149  [color=darkseagreen4, key=1, label=stringValue, style=dashed];
m2_115 -> m2_151  [color=darkseagreen4, key=1, label=stringValue, style=dashed];
m2_119 -> m2_122  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_119 -> m2_123  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_119 -> m2_124  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_119 -> m2_125  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_119 -> m2_126  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_119 -> m2_128  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_119 -> m2_130  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_119 -> m2_135  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_119 -> m2_137  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_119 -> m2_139  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_119 -> m2_145  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_119 -> m2_147  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_119 -> m2_152  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_119 -> m2_155  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_119 -> m2_159  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_119 -> m2_160  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_119 -> m2_161  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_119 -> m2_162  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_119 -> m2_163  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_119 -> m2_165  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_121 -> m2_123  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_121 -> m2_124  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_121 -> m2_125  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_121 -> m2_126  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_121 -> m2_128  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_121 -> m2_130  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_121 -> m2_135  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_121 -> m2_137  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_121 -> m2_139  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_121 -> m2_145  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_121 -> m2_147  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_121 -> m2_152  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_121 -> m2_155  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_121 -> m2_159  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_121 -> m2_160  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_121 -> m2_161  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_121 -> m2_162  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_121 -> m2_163  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_121 -> m2_165  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_153 -> m2_156  [color=darkseagreen4, key=1, label=genericTypeDef, style=dashed];
m2_133 -> m2_136  [color=green, key=1, label=dt, style=dashed];
m2_133 -> m2_138  [color=green, key=1, label=dt, style=dashed];
m2_134 -> m2_136  [color=darkseagreen4, key=1, label=dt, style=dashed];
m2_134 -> m2_138  [color=darkseagreen4, key=1, label=dt, style=dashed];
m2_26 -> m2_55  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_26 -> m2_56  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_45 -> m2_55  [color=darkseagreen4, key=1, label=value, style=dashed];
m2_45 -> m2_54  [color=darkseagreen4, key=1, label=value, style=dashed];
m2_34 -> m2_67  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_51 -> m2_55  [color=darkseagreen4, key=1, label=value, style=dashed];
m2_51 -> m2_54  [color=darkseagreen4, key=1, label=value, style=dashed];
m2_35 -> m2_55  [color=darkseagreen4, key=1, label=prop, style=dashed];
m2_36 -> m2_55  [color=darkseagreen4, key=1, label=type, style=dashed];
m2_37 -> m2_39  [color=darkseagreen4, key=1, label=attributes, style=dashed];
m2_43 -> m2_47  [color=darkseagreen4, key=1, label=parts, style=dashed];
m2_43 -> m2_50  [color=darkseagreen4, key=1, label=parts, style=dashed];
m2_46 -> m2_50  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_46 -> m2_53  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_53 -> m2_53  [color=darkseagreen4, key=1, label=i, style=dashed];
m2_4 -> m2_12  [color=darkseagreen4, key=1, label=target, style=dashed];
m3_523 -> m3_525  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_523 -> m3_526  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_510 -> m3_530  [color=darkseagreen4, key=1, label=doc, style=dashed];
m3_522 -> m3_525  [color=darkseagreen4, key=1, label=friendsArray, style=dashed];
m3_526 -> m3_526  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_323 -> m3_325  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_323 -> m3_326  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_323 -> m3_327  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_323 -> m3_328  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_323 -> m3_329  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_323 -> m3_330  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_323 -> m3_331  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_323 -> m3_332  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_323 -> m3_333  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_323 -> m3_334  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_323 -> m3_335  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_323 -> m3_336  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_323 -> m3_337  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_323 -> m3_338  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_323 -> m3_339  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_608 -> m3_613  [color=darkseagreen4, key=1, label=doc, style=dashed];
m3_17 -> m3_19  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_19 -> m3_19  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_20 -> m3_20  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_21 -> m3_21  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_105 -> m3_113  [color=darkseagreen4, key=1, label=id1, style=dashed];
m3_106 -> m3_114  [color=darkseagreen4, key=1, label=id2, style=dashed];
m3_111 -> m3_113  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_111 -> m3_114  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_42 -> m3_44  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_188 -> m3_190  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_434 -> m3_436  [color=darkseagreen4, key=1, label=payload, style=dashed];
m3_615 -> m3_620  [color=darkseagreen4, key=1, label=doc, style=dashed];
m3_563 -> m3_587  [color=darkseagreen4, key=1, label=doc, style=dashed];
m3_579 -> m3_582  [color=darkseagreen4, key=1, label=friendsArray, style=dashed];
m3_580 -> m3_582  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_580 -> m3_583  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_583 -> m3_583  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_315 -> m3_317  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_156 -> m3_158  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_156 -> m3_159  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_387 -> m3_389  [color=darkseagreen4, key=1, label=payload, style=dashed];
m3_387 -> m3_390  [color=darkseagreen4, key=1, label=payload, style=dashed];
m3_387 -> m3_391  [color=darkseagreen4, key=1, label=payload, style=dashed];
m3_387 -> m3_392  [color=darkseagreen4, key=1, label=payload, style=dashed];
m3_387 -> m3_393  [color=darkseagreen4, key=1, label=payload, style=dashed];
m3_387 -> m3_394  [color=darkseagreen4, key=1, label=payload, style=dashed];
m3_387 -> m3_395  [color=darkseagreen4, key=1, label=payload, style=dashed];
m3_387 -> m3_396  [color=darkseagreen4, key=1, label=payload, style=dashed];
m3_387 -> m3_397  [color=darkseagreen4, key=1, label=payload, style=dashed];
m3_387 -> m3_398  [color=darkseagreen4, key=1, label=payload, style=dashed];
m3_387 -> m3_399  [color=darkseagreen4, key=1, label=payload, style=dashed];
m3_387 -> m3_400  [color=darkseagreen4, key=1, label=payload, style=dashed];
m3_387 -> m3_401  [color=darkseagreen4, key=1, label=payload, style=dashed];
m3_223 -> m3_225  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_223 -> m3_226  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_223 -> m3_227  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_223 -> m3_228  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_223 -> m3_229  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_223 -> m3_230  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_223 -> m3_231  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_484 -> m3_486  [color=darkseagreen4, key=1, label=bd, style=dashed];
m3_484 -> m3_487  [color=darkseagreen4, key=1, label=bd, style=dashed];
m3_484 -> m3_488  [color=darkseagreen4, key=1, label=bd, style=dashed];
m3_533 -> m3_553  [color=darkseagreen4, key=1, label=doc, style=dashed];
m3_545 -> m3_548  [color=darkseagreen4, key=1, label=friendsArray, style=dashed];
m3_546 -> m3_548  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_546 -> m3_549  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_549 -> m3_549  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_282 -> m3_284  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_282 -> m3_285  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_282 -> m3_286  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_282 -> m3_287  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_282 -> m3_288  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_282 -> m3_289  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_282 -> m3_290  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_282 -> m3_291  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_282 -> m3_292  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_282 -> m3_293  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_282 -> m3_294  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_282 -> m3_295  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_282 -> m3_296  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_282 -> m3_297  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_282 -> m3_298  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_282 -> m3_299  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_282 -> m3_300  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_282 -> m3_301  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_282 -> m3_302  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_596 -> m3_600  [color=darkseagreen4, key=1, label=doc, style=dashed];
m3_195 -> m3_201  [color=darkseagreen4, key=1, label=date, style=dashed];
m3_3 -> m3_5  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_3 -> m3_6  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_4 -> m3_6  [color=darkseagreen4, key=1, label=expected, style=dashed];
m3_55 -> m3_57  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_55 -> m3_58  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_237 -> m3_239  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_237 -> m3_240  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_237 -> m3_241  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_237 -> m3_242  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_237 -> m3_243  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_237 -> m3_244  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_237 -> m3_245  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_121 -> m3_129  [color=darkseagreen4, key=1, label=item1, style=dashed];
m3_122 -> m3_130  [color=darkseagreen4, key=1, label=item2, style=dashed];
m3_127 -> m3_129  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_127 -> m3_130  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_602 -> m3_606  [color=darkseagreen4, key=1, label=doc, style=dashed];
m3_559 -> m3_561  [color=darkseagreen4, key=1, label=doc, style=dashed];
m3_461 -> m3_463  [color=darkseagreen4, key=1, label=payload, style=dashed];
m3_175 -> m3_177  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_175 -> m3_178  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_175 -> m3_179  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_175 -> m3_180  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_175 -> m3_181  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_175 -> m3_182  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_590 -> m3_594  [color=darkseagreen4, key=1, label=doc, style=dashed];
m3_505 -> m3_507  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_505 -> m3_508  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_350 -> m3_352  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_350 -> m3_353  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_350 -> m3_354  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_350 -> m3_355  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_350 -> m3_356  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_350 -> m3_357  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_350 -> m3_358  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_350 -> m3_359  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_350 -> m3_360  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_350 -> m3_361  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_350 -> m3_362  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_350 -> m3_363  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_350 -> m3_364  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_350 -> m3_365  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_623 -> m3_625  [color=darkseagreen4, key=1, label=response, style=dashed];
m3_473 -> m3_475  [color=darkseagreen4, key=1, label=bd, style=dashed];
m3_473 -> m3_476  [color=darkseagreen4, key=1, label=bd, style=dashed];
m3_473 -> m3_477  [color=darkseagreen4, key=1, label=bd, style=dashed];
m3_136 -> m3_144  [color=green, key=1, label=item0, style=dashed];
m3_137 -> m3_145  [color=green, key=1, label=item1, style=dashed];
m3_143 -> m3_145  [color=green, key=1, label=p, style=dashed];
m3_143 -> m3_146  [color=green, key=1, label=p, style=dashed];
m3_143 -> m3_147  [color=green, key=1, label=p, style=dashed];
m3_166 -> m3_168  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_166 -> m3_169  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_8_438 -> m6_8_440  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_8_438 -> m6_8_441  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_3_523 -> m6_3_525  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_3_523 -> m6_3_526  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_3_510 -> m6_3_530  [color=darkseagreen4, key=1, label=doc, style=dashed];
m6_3_522 -> m6_3_525  [color=darkseagreen4, key=1, label=friendsArray, style=dashed];
m6_3_526 -> m6_3_526  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_3_323 -> m6_3_325  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_3_323 -> m6_3_326  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_3_323 -> m6_3_327  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_3_323 -> m6_3_328  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_3_323 -> m6_3_329  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_3_323 -> m6_3_330  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_3_323 -> m6_3_331  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_3_323 -> m6_3_332  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_3_323 -> m6_3_333  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_3_323 -> m6_3_334  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_3_323 -> m6_3_335  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_3_323 -> m6_3_336  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_3_323 -> m6_3_337  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_3_323 -> m6_3_338  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_3_323 -> m6_3_339  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_7_34 -> m6_7_36  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
m6_6_41 -> m6_6_44  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_6_40 -> m6_6_45  [color=darkseagreen4, key=1, label="RestSharp.HttpResponse", style=dashed];
m6_6_61 -> m6_6_65  [color=darkseagreen4, key=1, label="System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>", style=dashed];
m6_6_62 -> m6_6_64  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_8_413 -> m6_8_415  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_8_413 -> m6_8_416  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_3_608 -> m6_3_613  [color=darkseagreen4, key=1, label=doc, style=dashed];
m6_8_324 -> m6_8_326  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_324 -> m6_8_327  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_324 -> m6_8_328  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_324 -> m6_8_329  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_324 -> m6_8_330  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_324 -> m6_8_331  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_324 -> m6_8_332  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_324 -> m6_8_333  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_324 -> m6_8_334  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_324 -> m6_8_335  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_324 -> m6_8_336  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_324 -> m6_8_337  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_324 -> m6_8_338  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_324 -> m6_8_339  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_324 -> m6_8_340  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_324 -> m6_8_341  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_403 -> m6_8_405  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_8_403 -> m6_8_406  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_3_17 -> m6_3_19  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_3_19 -> m6_3_19  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_3_20 -> m6_3_20  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_3_21 -> m6_3_21  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_3_105 -> m6_3_113  [color=darkseagreen4, key=1, label=id1, style=dashed];
m6_3_106 -> m6_3_114  [color=darkseagreen4, key=1, label=id2, style=dashed];
m6_3_111 -> m6_3_113  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_3_111 -> m6_3_114  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_118 -> m6_8_120  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_8_636 -> m6_8_641  [color=darkseagreen4, key=1, label=doc, style=dashed];
m6_8_636 -> m6_8_642  [color=darkseagreen4, key=1, label=doc, style=dashed];
m6_8_637 -> m6_8_640  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_637 -> m6_8_641  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_638 -> m6_8_640  [color=darkseagreen4, key=1, label=idElement, style=dashed];
m6_3_42 -> m6_3_44  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_8_125 -> m6_8_127  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_8_125 -> m6_8_128  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_8_125 -> m6_8_129  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_8_300 -> m6_8_302  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_300 -> m6_8_303  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_300 -> m6_8_304  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_300 -> m6_8_305  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_300 -> m6_8_306  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_300 -> m6_8_307  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_300 -> m6_8_308  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_300 -> m6_8_309  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_300 -> m6_8_310  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_300 -> m6_8_311  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_300 -> m6_8_312  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_300 -> m6_8_313  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_300 -> m6_8_314  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_300 -> m6_8_315  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_300 -> m6_8_316  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_300 -> m6_8_317  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_6_11 -> m6_6_20  [color=darkseagreen4, key=1, label="RestSharp.IRestRequest", style=dashed];
m6_6_11 -> m6_6_21  [color=darkseagreen4, key=1, label="RestSharp.IRestRequest", style=dashed];
m6_6_11 -> m6_6_37  [color=darkseagreen4, key=1, label="System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>", style=dashed];
m6_6_19 -> m6_6_21  [color=darkseagreen4, key=1, label=http, style=dashed];
m6_6_22 -> m6_6_29  [color=darkseagreen4, key=1, label=asyncHandle, style=dashed];
m6_6_22 -> m6_6_37  [color=darkseagreen4, key=1, label=asyncHandle, style=dashed];
m6_6_23 -> m6_6_37  [color=darkseagreen4, key=1, label="RestSharp.HttpResponse", style=dashed];
m6_6_26 -> m6_6_41  [color=darkseagreen4, key=1, label=cb, style=dashed];
m6_6_26 -> m6_6_45  [color=darkseagreen4, key=1, label=cb, style=dashed];
m6_6_27 -> m6_6_41  [color=darkseagreen4, key=1, label="RestSharp.HttpResponse", style=dashed];
m6_6_27 -> m6_6_45  [color=darkseagreen4, key=1, label="RestSharp.HttpResponse", style=dashed];
m6_6_25 -> m6_6_41  [color=darkseagreen4, key=1, label=ctx, style=dashed];
m6_3_188 -> m6_3_190  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_8_488 -> m6_8_490  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_8_488 -> m6_8_491  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_8_473 -> m6_8_500  [color=darkseagreen4, key=1, label=doc, style=dashed];
m6_8_473 -> m6_8_501  [color=darkseagreen4, key=1, label=doc, style=dashed];
m6_8_474 -> m6_8_476  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_474 -> m6_8_477  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_474 -> m6_8_478  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_474 -> m6_8_479  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_474 -> m6_8_480  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_474 -> m6_8_481  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_474 -> m6_8_482  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_474 -> m6_8_483  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_474 -> m6_8_484  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_474 -> m6_8_485  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_474 -> m6_8_486  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_474 -> m6_8_492  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_474 -> m6_8_499  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_474 -> m6_8_500  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_487 -> m6_8_490  [color=darkseagreen4, key=1, label=friends, style=dashed];
m6_8_487 -> m6_8_492  [color=darkseagreen4, key=1, label=friends, style=dashed];
m6_8_491 -> m6_8_491  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_8_493 -> m6_8_497  [color=darkseagreen4, key=1, label=foes, style=dashed];
m6_8_493 -> m6_8_499  [color=darkseagreen4, key=1, label=foes, style=dashed];
m6_8_495 -> m6_8_497  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_8_495 -> m6_8_498  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_8_498 -> m6_8_498  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_8_564 -> m6_8_566  [color=darkseagreen4, key=1, label=doc, style=dashed];
m6_8_564 -> m6_8_567  [color=darkseagreen4, key=1, label=doc, style=dashed];
m6_3_434 -> m6_3_436  [color=darkseagreen4, key=1, label=payload, style=dashed];
m6_8_29 -> m6_8_31  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_8_31 -> m6_8_31  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_8_32 -> m6_8_32  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_8_33 -> m6_8_33  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_3_615 -> m6_3_620  [color=darkseagreen4, key=1, label=doc, style=dashed];
m6_3_563 -> m6_3_587  [color=darkseagreen4, key=1, label=doc, style=dashed];
m6_3_579 -> m6_3_582  [color=darkseagreen4, key=1, label=friendsArray, style=dashed];
m6_3_580 -> m6_3_582  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_3_580 -> m6_3_583  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_3_583 -> m6_3_583  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_6_0 -> m6_6_2  [color=darkseagreen4, key=1, label="RestSharp.IRestRequest", style=dashed];
m6_6_0 -> m6_6_7  [color=darkseagreen4, key=1, label="System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>", style=dashed];
m6_6_0 -> m6_6_8  [color=darkseagreen4, key=1, label="System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>", style=dashed];
m6_6_1 -> m6_6_7  [color=darkseagreen4, key=1, label=method, style=dashed];
m6_6_1 -> m6_6_8  [color=darkseagreen4, key=1, label=method, style=dashed];
m6_2_23 -> m6_2_91  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_2_23 -> m6_2_92  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_2_23 -> m6_2_104  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_2_88 -> m6_2_104  [color=darkseagreen4, key=1, label=list, style=dashed];
m6_2_88 -> m6_2_95  [color=darkseagreen4, key=1, label=list, style=dashed];
m6_2_88 -> m6_2_98  [color=darkseagreen4, key=1, label=list, style=dashed];
m6_2_88 -> m6_2_99  [color=darkseagreen4, key=1, label=list, style=dashed];
m6_2_88 -> m6_2_101  [color=darkseagreen4, key=1, label=list, style=dashed];
m6_2_88 -> m6_2_103  [color=darkseagreen4, key=1, label=list, style=dashed];
m6_2_88 -> m6_2_105  [color=darkseagreen4, key=1, label=list, style=dashed];
m6_2_89 -> m6_2_112  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_2_92 -> m6_2_99  [color=darkseagreen4, key=1, label=element, style=dashed];
m6_2_92 -> m6_2_97  [color=darkseagreen4, key=1, label=element, style=dashed];
m6_2_92 -> m6_2_100  [color=darkseagreen4, key=1, label=element, style=dashed];
m6_2_90 -> m6_2_104  [color=darkseagreen4, key=1, label=itemType, style=dashed];
m6_2_90 -> m6_2_93  [color=darkseagreen4, key=1, label=itemType, style=dashed];
m6_2_90 -> m6_2_96  [color=darkseagreen4, key=1, label=itemType, style=dashed];
m6_8_276 -> m6_8_278  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_276 -> m6_8_279  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_276 -> m6_8_280  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_276 -> m6_8_281  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_276 -> m6_8_282  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_276 -> m6_8_283  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_276 -> m6_8_284  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_276 -> m6_8_285  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_276 -> m6_8_286  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_276 -> m6_8_287  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_276 -> m6_8_288  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_276 -> m6_8_289  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_276 -> m6_8_290  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_276 -> m6_8_291  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_276 -> m6_8_292  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_276 -> m6_8_293  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_7_75 -> m6_7_77  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_8_218 -> m6_8_220  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_218 -> m6_8_221  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_218 -> m6_8_222  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_218 -> m6_8_223  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_218 -> m6_8_224  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_218 -> m6_8_225  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_218 -> m6_8_226  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_218 -> m6_8_227  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_218 -> m6_8_228  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_218 -> m6_8_229  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_218 -> m6_8_230  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_218 -> m6_8_231  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_218 -> m6_8_232  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_218 -> m6_8_233  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_218 -> m6_8_234  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_218 -> m6_8_235  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_569 -> m6_8_592  [color=darkseagreen4, key=1, label=doc, style=dashed];
m6_8_569 -> m6_8_593  [color=darkseagreen4, key=1, label=doc, style=dashed];
m6_8_570 -> m6_8_572  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_570 -> m6_8_573  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_570 -> m6_8_574  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_570 -> m6_8_575  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_570 -> m6_8_576  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_570 -> m6_8_577  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_570 -> m6_8_578  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_570 -> m6_8_579  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_570 -> m6_8_580  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_570 -> m6_8_581  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_570 -> m6_8_582  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_570 -> m6_8_583  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_570 -> m6_8_584  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_570 -> m6_8_585  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_570 -> m6_8_591  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_570 -> m6_8_592  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_586 -> m6_8_589  [color=darkseagreen4, key=1, label=friends, style=dashed];
m6_8_586 -> m6_8_591  [color=darkseagreen4, key=1, label=friends, style=dashed];
m6_8_587 -> m6_8_589  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_8_587 -> m6_8_590  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_8_590 -> m6_8_590  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_7_90 -> m6_7_94  [color=darkseagreen4, key=1, label=val, style=dashed];
m6_7_90 -> m6_7_98  [color=darkseagreen4, key=1, label=val, style=dashed];
m6_7_86 -> m6_7_98  [color=darkseagreen4, key=1, label=prop, style=dashed];
m6_7_89 -> m6_7_92  [color=darkseagreen4, key=1, label=propType, style=dashed];
m6_6_67 -> m6_6_84  [color=darkseagreen4, key=1, label="RestSharp.RestRequestAsyncHandle", style=dashed];
m6_2_181 -> m6_2_184  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_2_183 -> m6_2_185  [color=darkseagreen4, key=1, label=instance, style=dashed];
m6_3_315 -> m6_3_317  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_2_27 -> m6_2_29  [color=darkseagreen4, key=1, label=data, style=dashed];
m6_2_27 -> m6_2_30  [color=darkseagreen4, key=1, label=data, style=dashed];
m6_8_39 -> m6_8_41  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_8_39 -> m6_8_42  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_8_39 -> m6_8_43  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_2_86 -> m6_2_116  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_2_86 -> m6_2_120  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_2_86 -> m6_2_122  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_2_86 -> m6_2_123  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_2_86 -> m6_2_124  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_2_86 -> m6_2_125  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_2_86 -> m6_2_126  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_2_86 -> m6_2_128  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_2_86 -> m6_2_130  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_2_86 -> m6_2_135  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_2_86 -> m6_2_137  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_2_86 -> m6_2_139  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_2_86 -> m6_2_140  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_2_86 -> m6_2_141  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_2_86 -> m6_2_145  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_2_86 -> m6_2_147  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_2_86 -> m6_2_152  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_2_86 -> m6_2_155  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_2_86 -> m6_2_159  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_2_86 -> m6_2_160  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_2_86 -> m6_2_161  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_2_86 -> m6_2_162  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_2_86 -> m6_2_163  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_2_86 -> m6_2_164  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_2_86 -> m6_2_165  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_2_115 -> m6_2_117  [color=darkseagreen4, key=1, label=stringValue, style=dashed];
m6_2_115 -> m6_2_125  [color=darkseagreen4, key=1, label=stringValue, style=dashed];
m6_2_115 -> m6_2_127  [color=darkseagreen4, key=1, label=stringValue, style=dashed];
m6_2_115 -> m6_2_129  [color=darkseagreen4, key=1, label=stringValue, style=dashed];
m6_2_115 -> m6_2_142  [color=darkseagreen4, key=1, label=stringValue, style=dashed];
m6_2_115 -> m6_2_143  [color=darkseagreen4, key=1, label=stringValue, style=dashed];
m6_2_115 -> m6_2_144  [color=darkseagreen4, key=1, label=stringValue, style=dashed];
m6_2_115 -> m6_2_146  [color=darkseagreen4, key=1, label=stringValue, style=dashed];
m6_2_115 -> m6_2_149  [color=darkseagreen4, key=1, label=stringValue, style=dashed];
m6_2_115 -> m6_2_151  [color=darkseagreen4, key=1, label=stringValue, style=dashed];
m6_2_119 -> m6_2_122  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_2_119 -> m6_2_123  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_2_119 -> m6_2_124  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_2_119 -> m6_2_125  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_2_119 -> m6_2_126  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_2_119 -> m6_2_128  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_2_119 -> m6_2_130  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_2_119 -> m6_2_135  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_2_119 -> m6_2_137  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_2_119 -> m6_2_139  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_2_119 -> m6_2_145  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_2_119 -> m6_2_147  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_2_119 -> m6_2_152  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_2_119 -> m6_2_155  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_2_119 -> m6_2_159  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_2_119 -> m6_2_160  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_2_119 -> m6_2_161  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_2_119 -> m6_2_162  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_2_119 -> m6_2_163  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_2_119 -> m6_2_165  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_2_121 -> m6_2_123  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_2_121 -> m6_2_124  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_2_121 -> m6_2_125  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_2_121 -> m6_2_126  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_2_121 -> m6_2_128  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_2_121 -> m6_2_130  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_2_121 -> m6_2_135  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_2_121 -> m6_2_137  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_2_121 -> m6_2_139  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_2_121 -> m6_2_145  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_2_121 -> m6_2_147  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_2_121 -> m6_2_152  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_2_121 -> m6_2_155  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_2_121 -> m6_2_159  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_2_121 -> m6_2_160  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_2_121 -> m6_2_161  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_2_121 -> m6_2_162  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_2_121 -> m6_2_163  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_2_121 -> m6_2_165  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_2_153 -> m6_2_156  [color=darkseagreen4, key=1, label=genericTypeDef, style=dashed];
m6_2_133 -> m6_2_136  [color=green, key=1, label=dt, style=dashed];
m6_2_133 -> m6_2_138  [color=green, key=1, label=dt, style=dashed];
m6_2_134 -> m6_2_136  [color=darkseagreen4, key=1, label=dt, style=dashed];
m6_2_134 -> m6_2_138  [color=darkseagreen4, key=1, label=dt, style=dashed];
m6_8_612 -> m6_8_615  [color=darkseagreen4, key=1, label=doc, style=dashed];
m6_8_612 -> m6_8_616  [color=darkseagreen4, key=1, label=doc, style=dashed];
m6_8_613 -> m6_8_615  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_3_156 -> m6_3_158  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_3_156 -> m6_3_159  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_6_39 -> m6_6_57  [color=darkseagreen4, key=1, label="System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>", style=dashed];
m6_3_387 -> m6_3_389  [color=darkseagreen4, key=1, label=payload, style=dashed];
m6_3_387 -> m6_3_390  [color=darkseagreen4, key=1, label=payload, style=dashed];
m6_3_387 -> m6_3_391  [color=darkseagreen4, key=1, label=payload, style=dashed];
m6_3_387 -> m6_3_392  [color=darkseagreen4, key=1, label=payload, style=dashed];
m6_3_387 -> m6_3_393  [color=darkseagreen4, key=1, label=payload, style=dashed];
m6_3_387 -> m6_3_394  [color=darkseagreen4, key=1, label=payload, style=dashed];
m6_3_387 -> m6_3_395  [color=darkseagreen4, key=1, label=payload, style=dashed];
m6_3_387 -> m6_3_396  [color=darkseagreen4, key=1, label=payload, style=dashed];
m6_3_387 -> m6_3_397  [color=darkseagreen4, key=1, label=payload, style=dashed];
m6_3_387 -> m6_3_398  [color=darkseagreen4, key=1, label=payload, style=dashed];
m6_3_387 -> m6_3_399  [color=darkseagreen4, key=1, label=payload, style=dashed];
m6_3_387 -> m6_3_400  [color=darkseagreen4, key=1, label=payload, style=dashed];
m6_3_387 -> m6_3_401  [color=darkseagreen4, key=1, label=payload, style=dashed];
m6_8_95 -> m6_8_97  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_3_223 -> m6_3_225  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_3_223 -> m6_3_226  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_3_223 -> m6_3_227  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_3_223 -> m6_3_228  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_3_223 -> m6_3_229  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_3_223 -> m6_3_230  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_3_223 -> m6_3_231  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_2_4 -> m6_2_12  [color=darkseagreen4, key=1, label=target, style=dashed];
m6_8_21 -> m6_8_23  [color=green, key=1, label=output, style=dashed];
m6_8_79 -> m6_8_81  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_8_394 -> m6_8_396  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_8_382 -> m6_8_384  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_8_382 -> m6_8_385  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_8_382 -> m6_8_386  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_8_382 -> m6_8_387  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_8_595 -> m6_8_609  [color=darkseagreen4, key=1, label=doc, style=dashed];
m6_8_595 -> m6_8_610  [color=darkseagreen4, key=1, label=doc, style=dashed];
m6_8_596 -> m6_8_598  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_596 -> m6_8_599  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_596 -> m6_8_600  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_596 -> m6_8_601  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_596 -> m6_8_602  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_596 -> m6_8_603  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_596 -> m6_8_604  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_596 -> m6_8_605  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_596 -> m6_8_606  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_596 -> m6_8_607  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_596 -> m6_8_608  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_596 -> m6_8_609  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_30 -> m6_32  [color=darkseagreen4, key=1, label=response, style=dashed];
m6_44 -> m6_46  [color=darkseagreen4, key=1, label=response, style=dashed];
m6_54 -> m6_56  [color=darkseagreen4, key=1, label=response, style=dashed];
m6_34 -> m6_36  [color=darkseagreen4, key=1, label=oauthToken, style=dashed];
m6_35 -> m6_37  [color=darkseagreen4, key=1, label=oauthTokenSecret, style=dashed];
m6_48 -> m6_50  [color=darkseagreen4, key=1, label=oauthToken, style=dashed];
m6_49 -> m6_51  [color=darkseagreen4, key=1, label=oauthTokenSecret, style=dashed];
m6_8_504 -> m6_8_531  [color=darkseagreen4, key=1, label=doc, style=dashed];
m6_8_504 -> m6_8_532  [color=darkseagreen4, key=1, label=doc, style=dashed];
m6_8_505 -> m6_8_507  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_505 -> m6_8_508  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_505 -> m6_8_509  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_505 -> m6_8_510  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_505 -> m6_8_511  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_505 -> m6_8_512  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_505 -> m6_8_513  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_505 -> m6_8_514  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_505 -> m6_8_515  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_505 -> m6_8_516  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_505 -> m6_8_517  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_505 -> m6_8_523  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_505 -> m6_8_530  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_505 -> m6_8_531  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_518 -> m6_8_521  [color=darkseagreen4, key=1, label=friends, style=dashed];
m6_8_518 -> m6_8_523  [color=darkseagreen4, key=1, label=friends, style=dashed];
m6_8_519 -> m6_8_521  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_8_519 -> m6_8_522  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_8_522 -> m6_8_522  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_8_524 -> m6_8_528  [color=darkseagreen4, key=1, label=foes, style=dashed];
m6_8_524 -> m6_8_530  [color=darkseagreen4, key=1, label=foes, style=dashed];
m6_8_526 -> m6_8_528  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_8_526 -> m6_8_529  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_8_529 -> m6_8_529  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_3_484 -> m6_3_486  [color=darkseagreen4, key=1, label=bd, style=dashed];
m6_3_484 -> m6_3_487  [color=darkseagreen4, key=1, label=bd, style=dashed];
m6_3_484 -> m6_3_488  [color=darkseagreen4, key=1, label=bd, style=dashed];
m6_8_243 -> m6_8_245  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_243 -> m6_8_246  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_243 -> m6_8_247  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_243 -> m6_8_248  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_243 -> m6_8_249  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_243 -> m6_8_250  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_243 -> m6_8_251  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_243 -> m6_8_252  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_243 -> m6_8_253  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_243 -> m6_8_254  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_243 -> m6_8_255  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_3_533 -> m6_3_553  [color=darkseagreen4, key=1, label=doc, style=dashed];
m6_3_545 -> m6_3_548  [color=darkseagreen4, key=1, label=friendsArray, style=dashed];
m6_3_546 -> m6_3_548  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_3_546 -> m6_3_549  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_3_549 -> m6_3_549  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_8_645 -> m6_8_650  [color=darkseagreen4, key=1, label=doc, style=dashed];
m6_8_645 -> m6_8_651  [color=darkseagreen4, key=1, label=doc, style=dashed];
m6_8_646 -> m6_8_649  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_646 -> m6_8_650  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_647 -> m6_8_649  [color=darkseagreen4, key=1, label=idElement, style=dashed];
m6_3_282 -> m6_3_284  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_3_282 -> m6_3_285  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_3_282 -> m6_3_286  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_3_282 -> m6_3_287  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_3_282 -> m6_3_288  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_3_282 -> m6_3_289  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_3_282 -> m6_3_290  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_3_282 -> m6_3_291  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_3_282 -> m6_3_292  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_3_282 -> m6_3_293  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_3_282 -> m6_3_294  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_3_282 -> m6_3_295  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_3_282 -> m6_3_296  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_3_282 -> m6_3_297  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_3_282 -> m6_3_298  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_3_282 -> m6_3_299  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_3_282 -> m6_3_300  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_3_282 -> m6_3_301  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_3_282 -> m6_3_302  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_7_51 -> m6_7_53  [color=green, key=1, label=string, style=dashed];
m6_7_62 -> m6_7_64  [color=darkseagreen4, key=1, label=serialized, style=dashed];
m6_8_54 -> m6_8_56  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_8_54 -> m6_8_57  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_3_596 -> m6_3_600  [color=darkseagreen4, key=1, label=doc, style=dashed];
m6_3_195 -> m6_3_201  [color=darkseagreen4, key=1, label=date, style=dashed];
m6_3_3 -> m6_3_5  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_3_3 -> m6_3_6  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_3_4 -> m6_3_6  [color=darkseagreen4, key=1, label=expected, style=dashed];
m6_3_55 -> m6_3_57  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_3_55 -> m6_3_58  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_6_74 -> m6_6_78  [color=darkseagreen4, key=1, label="System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>", style=dashed];
m6_6_75 -> m6_6_77  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_3_237 -> m6_3_239  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_3_237 -> m6_3_240  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_3_237 -> m6_3_241  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_3_237 -> m6_3_242  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_3_237 -> m6_3_243  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_3_237 -> m6_3_244  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_3_237 -> m6_3_245  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_8_87 -> m6_8_89  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_8_71 -> m6_8_73  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_3_121 -> m6_3_129  [color=darkseagreen4, key=1, label=item1, style=dashed];
m6_3_122 -> m6_3_130  [color=darkseagreen4, key=1, label=item2, style=dashed];
m6_3_127 -> m6_3_129  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_3_127 -> m6_3_130  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_165 -> m6_8_620  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m6_8_618 -> m6_8_621  [color=darkseagreen4, key=1, label=doc, style=dashed];
m6_8_618 -> m6_8_622  [color=darkseagreen4, key=1, label=doc, style=dashed];
m6_8_619 -> m6_8_621  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_3_602 -> m6_3_606  [color=darkseagreen4, key=1, label=doc, style=dashed];
m6_8_110 -> m6_8_112  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_8_7 -> m6_8_9  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_8_7 -> m6_8_10  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_8_7 -> m6_8_11  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_3_559 -> m6_3_561  [color=darkseagreen4, key=1, label=doc, style=dashed];
m6_8_631 -> m6_8_633  [color=darkseagreen4, key=1, label=doc, style=dashed];
m6_8_631 -> m6_8_634  [color=darkseagreen4, key=1, label=doc, style=dashed];
m6_3_461 -> m6_3_463  [color=darkseagreen4, key=1, label=payload, style=dashed];
m6_15 -> m6_18  [color=darkseagreen4, key=1, label="System.Net.HttpListenerContext", style=dashed];
m6_8_625 -> m6_8_628  [color=darkseagreen4, key=1, label=doc, style=dashed];
m6_8_625 -> m6_8_629  [color=darkseagreen4, key=1, label=doc, style=dashed];
m6_8_626 -> m6_8_628  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_146 -> m6_8_148  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_8_146 -> m6_8_149  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_8_455 -> m6_8_462  [color=darkseagreen4, key=1, label=doc, style=dashed];
m6_8_456 -> m6_8_459  [color=darkseagreen4, key=1, label=dateTimeOffset, style=dashed];
m6_8_456 -> m6_8_466  [color=darkseagreen4, key=1, label=dateTimeOffset, style=dashed];
m6_8_457 -> m6_8_461  [color=darkseagreen4, key=1, label=nullableDateTimeOffsetWithValue, style=dashed];
m6_8_457 -> m6_8_469  [color=darkseagreen4, key=1, label=nullableDateTimeOffsetWithValue, style=dashed];
m6_8_458 -> m6_8_460  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_458 -> m6_8_461  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_458 -> m6_8_462  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_465 -> m6_8_467  [color=darkseagreen4, key=1, label=payload, style=dashed];
m6_8_465 -> m6_8_468  [color=darkseagreen4, key=1, label=payload, style=dashed];
m6_8_465 -> m6_8_469  [color=darkseagreen4, key=1, label=payload, style=dashed];
m6_3_175 -> m6_3_177  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_3_175 -> m6_3_178  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_3_175 -> m6_3_179  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_3_175 -> m6_3_180  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_3_175 -> m6_3_181  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_3_175 -> m6_3_182  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_8_170 -> m6_8_181  [color=darkseagreen4, key=1, label=doc, style=dashed];
m6_8_171 -> m6_8_179  [color=darkseagreen4, key=1, label=nullTimespan, style=dashed];
m6_8_172 -> m6_8_180  [color=darkseagreen4, key=1, label=nullValueTimeSpan, style=dashed];
m6_8_173 -> m6_8_175  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_173 -> m6_8_176  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_173 -> m6_8_177  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_173 -> m6_8_178  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_173 -> m6_8_179  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_173 -> m6_8_180  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_173 -> m6_8_181  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_184 -> m6_8_186  [color=darkseagreen4, key=1, label=payload, style=dashed];
m6_8_184 -> m6_8_187  [color=darkseagreen4, key=1, label=payload, style=dashed];
m6_8_184 -> m6_8_188  [color=darkseagreen4, key=1, label=payload, style=dashed];
m6_8_184 -> m6_8_189  [color=darkseagreen4, key=1, label=payload, style=dashed];
m6_8_184 -> m6_8_190  [color=darkseagreen4, key=1, label=payload, style=dashed];
m6_8_184 -> m6_8_191  [color=darkseagreen4, key=1, label=payload, style=dashed];
m6_8_184 -> m6_8_192  [color=darkseagreen4, key=1, label=payload, style=dashed];
m6_7_28 -> m6_7_36  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
m6_3_590 -> m6_3_594  [color=darkseagreen4, key=1, label=doc, style=dashed];
m6_8_447 -> m6_8_449  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_8_447 -> m6_8_450  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_8_348 -> m6_8_350  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_348 -> m6_8_351  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_348 -> m6_8_352  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_348 -> m6_8_353  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_348 -> m6_8_354  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_348 -> m6_8_355  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_348 -> m6_8_356  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_348 -> m6_8_357  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_348 -> m6_8_358  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_348 -> m6_8_359  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_348 -> m6_8_360  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_348 -> m6_8_361  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_348 -> m6_8_362  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_348 -> m6_8_363  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_348 -> m6_8_364  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_348 -> m6_8_365  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_2_25 -> m6_2_73  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_2_72 -> m6_2_76  [color=darkseagreen4, key=1, label=valueType, style=dashed];
m6_2_70 -> m6_2_79  [color=darkseagreen4, key=1, label=dict, style=dashed];
m6_2_70 -> m6_2_80  [color=darkseagreen4, key=1, label=dict, style=dashed];
m6_2_74 -> m6_2_79  [color=darkseagreen4, key=1, label=key, style=dashed];
m6_7_126 -> m6_7_129  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_7_126 -> m6_7_131  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_7_127 -> m6_7_136  [color=darkseagreen4, key=1, label=portSplit, style=dashed];
m6_7_128 -> m6_7_136  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_3_505 -> m6_3_507  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_3_505 -> m6_3_508  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_8_157 -> m6_8_159  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_8_157 -> m6_8_160  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_8_157 -> m6_8_161  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_8_157 -> m6_8_162  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_8_157 -> m6_8_163  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_8_534 -> m6_8_561  [color=darkseagreen4, key=1, label=doc, style=dashed];
m6_8_534 -> m6_8_562  [color=darkseagreen4, key=1, label=doc, style=dashed];
m6_8_535 -> m6_8_537  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_535 -> m6_8_538  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_535 -> m6_8_539  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_535 -> m6_8_540  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_535 -> m6_8_541  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_535 -> m6_8_542  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_535 -> m6_8_543  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_535 -> m6_8_544  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_535 -> m6_8_545  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_535 -> m6_8_546  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_535 -> m6_8_547  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_535 -> m6_8_553  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_535 -> m6_8_560  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_535 -> m6_8_561  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_8_548 -> m6_8_551  [color=darkseagreen4, key=1, label=friends, style=dashed];
m6_8_548 -> m6_8_553  [color=darkseagreen4, key=1, label=friends, style=dashed];
m6_8_549 -> m6_8_551  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_8_549 -> m6_8_552  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_8_552 -> m6_8_552  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_8_554 -> m6_8_558  [color=darkseagreen4, key=1, label=foes, style=dashed];
m6_8_554 -> m6_8_560  [color=darkseagreen4, key=1, label=foes, style=dashed];
m6_8_556 -> m6_8_558  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_8_556 -> m6_8_559  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_8_559 -> m6_8_559  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_8_63 -> m6_8_65  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_3_350 -> m6_3_352  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_3_350 -> m6_3_353  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_3_350 -> m6_3_354  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_3_350 -> m6_3_355  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_3_350 -> m6_3_356  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_3_350 -> m6_3_357  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_3_350 -> m6_3_358  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_3_350 -> m6_3_359  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_3_350 -> m6_3_360  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_3_350 -> m6_3_361  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_3_350 -> m6_3_362  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_3_350 -> m6_3_363  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_3_350 -> m6_3_364  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_3_350 -> m6_3_365  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_3_623 -> m6_3_625  [color=darkseagreen4, key=1, label=response, style=dashed];
m6_7_79 -> m6_7_81  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_3_473 -> m6_3_475  [color=darkseagreen4, key=1, label=bd, style=dashed];
m6_3_473 -> m6_3_476  [color=darkseagreen4, key=1, label=bd, style=dashed];
m6_3_473 -> m6_3_477  [color=darkseagreen4, key=1, label=bd, style=dashed];
m6_3_136 -> m6_3_144  [color=green, key=1, label=item0, style=dashed];
m6_3_137 -> m6_3_145  [color=green, key=1, label=item1, style=dashed];
m6_3_143 -> m6_3_145  [color=green, key=1, label=p, style=dashed];
m6_3_143 -> m6_3_146  [color=green, key=1, label=p, style=dashed];
m6_3_143 -> m6_3_147  [color=green, key=1, label=p, style=dashed];
m6_8_371 -> m6_8_373  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_8_371 -> m6_8_374  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_6_68 -> m6_6_72  [color=darkseagreen4, key=1, label="System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>", style=dashed];
m6_6_69 -> m6_6_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_7_71 -> m6_7_73  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_8_136 -> m6_8_138  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_8_136 -> m6_8_139  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_8_136 -> m6_8_140  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_6_15 -> m6_6_17  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_2_26 -> m6_2_55  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_2_26 -> m6_2_56  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_2_45 -> m6_2_55  [color=darkseagreen4, key=1, label=value, style=dashed];
m6_2_45 -> m6_2_54  [color=darkseagreen4, key=1, label=value, style=dashed];
m6_2_34 -> m6_2_67  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_2_51 -> m6_2_55  [color=darkseagreen4, key=1, label=value, style=dashed];
m6_2_51 -> m6_2_54  [color=darkseagreen4, key=1, label=value, style=dashed];
m6_2_35 -> m6_2_55  [color=darkseagreen4, key=1, label=prop, style=dashed];
m6_2_36 -> m6_2_55  [color=darkseagreen4, key=1, label=type, style=dashed];
m6_2_37 -> m6_2_39  [color=darkseagreen4, key=1, label=attributes, style=dashed];
m6_2_43 -> m6_2_47  [color=darkseagreen4, key=1, label=parts, style=dashed];
m6_2_43 -> m6_2_50  [color=darkseagreen4, key=1, label=parts, style=dashed];
m6_2_46 -> m6_2_50  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_2_46 -> m6_2_53  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_2_53 -> m6_2_53  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_8_201 -> m6_8_206  [color=darkseagreen4, key=1, label=culture, style=dashed];
m6_8_202 -> m6_8_206  [color=darkseagreen4, key=1, label=format, style=dashed];
m6_8_203 -> m6_8_206  [color=darkseagreen4, key=1, label=date, style=dashed];
m6_8_203 -> m6_8_211  [color=darkseagreen4, key=1, label=date, style=dashed];
m6_8_204 -> m6_8_207  [color=darkseagreen4, key=1, label=doc, style=dashed];
m6_8_205 -> m6_8_207  [color=darkseagreen4, key=1, label=root, style=dashed];
m6_3_166 -> m6_3_168  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_3_166 -> m6_3_169  [color=darkseagreen4, key=1, label=output, style=dashed];
m7_68 -> m7_72  [color=darkseagreen4, key=1, label="System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>", style=dashed];
m7_69 -> m7_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_39 -> m7_57  [color=darkseagreen4, key=1, label="System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>", style=dashed];
m7_15 -> m7_17  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_41 -> m7_44  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_40 -> m7_45  [color=darkseagreen4, key=1, label="RestSharp.HttpResponse", style=dashed];
m7_0 -> m7_2  [color=darkseagreen4, key=1, label="RestSharp.IRestRequest", style=dashed];
m7_0 -> m7_7  [color=darkseagreen4, key=1, label="System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>", style=dashed];
m7_0 -> m7_8  [color=darkseagreen4, key=1, label="System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>", style=dashed];
m7_1 -> m7_7  [color=darkseagreen4, key=1, label=method, style=dashed];
m7_1 -> m7_8  [color=darkseagreen4, key=1, label=method, style=dashed];
m7_67 -> m7_84  [color=darkseagreen4, key=1, label="RestSharp.RestRequestAsyncHandle", style=dashed];
m7_11 -> m7_20  [color=darkseagreen4, key=1, label="RestSharp.IRestRequest", style=dashed];
m7_11 -> m7_21  [color=darkseagreen4, key=1, label="RestSharp.IRestRequest", style=dashed];
m7_11 -> m7_37  [color=darkseagreen4, key=1, label="System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>", style=dashed];
m7_19 -> m7_21  [color=darkseagreen4, key=1, label=http, style=dashed];
m7_22 -> m7_29  [color=darkseagreen4, key=1, label=asyncHandle, style=dashed];
m7_22 -> m7_37  [color=darkseagreen4, key=1, label=asyncHandle, style=dashed];
m7_23 -> m7_37  [color=darkseagreen4, key=1, label="RestSharp.HttpResponse", style=dashed];
m7_26 -> m7_41  [color=darkseagreen4, key=1, label=cb, style=dashed];
m7_26 -> m7_45  [color=darkseagreen4, key=1, label=cb, style=dashed];
m7_27 -> m7_41  [color=darkseagreen4, key=1, label="RestSharp.HttpResponse", style=dashed];
m7_27 -> m7_45  [color=darkseagreen4, key=1, label="RestSharp.HttpResponse", style=dashed];
m7_25 -> m7_41  [color=darkseagreen4, key=1, label=ctx, style=dashed];
m7_61 -> m7_65  [color=darkseagreen4, key=1, label="System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>", style=dashed];
m7_62 -> m7_64  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_74 -> m7_78  [color=darkseagreen4, key=1, label="System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>", style=dashed];
m7_75 -> m7_77  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_28 -> m8_36  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
m8_51 -> m8_53  [color=green, key=1, label=string, style=dashed];
m8_126 -> m8_129  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_126 -> m8_131  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_127 -> m8_136  [color=darkseagreen4, key=1, label=portSplit, style=dashed];
m8_128 -> m8_136  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_34 -> m8_36  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
m8_62 -> m8_64  [color=darkseagreen4, key=1, label=serialized, style=dashed];
m8_75 -> m8_77  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_79 -> m8_81  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_90 -> m8_94  [color=darkseagreen4, key=1, label=val, style=dashed];
m8_90 -> m8_98  [color=darkseagreen4, key=1, label=val, style=dashed];
m8_86 -> m8_98  [color=darkseagreen4, key=1, label=prop, style=dashed];
m8_89 -> m8_92  [color=darkseagreen4, key=1, label=propType, style=dashed];
m8_71 -> m8_73  [color=darkseagreen4, key=1, label=object, style=dashed];
m9_300 -> m9_302  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_300 -> m9_303  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_300 -> m9_304  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_300 -> m9_305  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_300 -> m9_306  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_300 -> m9_307  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_300 -> m9_308  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_300 -> m9_309  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_300 -> m9_310  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_300 -> m9_311  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_300 -> m9_312  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_300 -> m9_313  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_300 -> m9_314  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_300 -> m9_315  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_300 -> m9_316  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_300 -> m9_317  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_170 -> m9_181  [color=darkseagreen4, key=1, label=doc, style=dashed];
m9_171 -> m9_179  [color=darkseagreen4, key=1, label=nullTimespan, style=dashed];
m9_172 -> m9_180  [color=darkseagreen4, key=1, label=nullValueTimeSpan, style=dashed];
m9_173 -> m9_175  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_173 -> m9_176  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_173 -> m9_177  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_173 -> m9_178  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_173 -> m9_179  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_173 -> m9_180  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_173 -> m9_181  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_184 -> m9_186  [color=darkseagreen4, key=1, label=payload, style=dashed];
m9_184 -> m9_187  [color=darkseagreen4, key=1, label=payload, style=dashed];
m9_184 -> m9_188  [color=darkseagreen4, key=1, label=payload, style=dashed];
m9_184 -> m9_189  [color=darkseagreen4, key=1, label=payload, style=dashed];
m9_184 -> m9_190  [color=darkseagreen4, key=1, label=payload, style=dashed];
m9_184 -> m9_191  [color=darkseagreen4, key=1, label=payload, style=dashed];
m9_184 -> m9_192  [color=darkseagreen4, key=1, label=payload, style=dashed];
m9_504 -> m9_531  [color=darkseagreen4, key=1, label=doc, style=dashed];
m9_504 -> m9_532  [color=darkseagreen4, key=1, label=doc, style=dashed];
m9_505 -> m9_507  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_505 -> m9_508  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_505 -> m9_509  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_505 -> m9_510  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_505 -> m9_511  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_505 -> m9_512  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_505 -> m9_513  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_505 -> m9_514  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_505 -> m9_515  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_505 -> m9_516  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_505 -> m9_517  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_505 -> m9_523  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_505 -> m9_530  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_505 -> m9_531  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_518 -> m9_521  [color=darkseagreen4, key=1, label=friends, style=dashed];
m9_518 -> m9_523  [color=darkseagreen4, key=1, label=friends, style=dashed];
m9_519 -> m9_521  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_519 -> m9_522  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_522 -> m9_522  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_524 -> m9_528  [color=darkseagreen4, key=1, label=foes, style=dashed];
m9_524 -> m9_530  [color=darkseagreen4, key=1, label=foes, style=dashed];
m9_526 -> m9_528  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_526 -> m9_529  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_529 -> m9_529  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_447 -> m9_449  [color=darkseagreen4, key=1, label=output, style=dashed];
m9_447 -> m9_450  [color=darkseagreen4, key=1, label=output, style=dashed];
m9_488 -> m9_490  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_488 -> m9_491  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_473 -> m9_500  [color=darkseagreen4, key=1, label=doc, style=dashed];
m9_473 -> m9_501  [color=darkseagreen4, key=1, label=doc, style=dashed];
m9_474 -> m9_476  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_474 -> m9_477  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_474 -> m9_478  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_474 -> m9_479  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_474 -> m9_480  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_474 -> m9_481  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_474 -> m9_482  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_474 -> m9_483  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_474 -> m9_484  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_474 -> m9_485  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_474 -> m9_486  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_474 -> m9_492  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_474 -> m9_499  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_474 -> m9_500  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_487 -> m9_490  [color=darkseagreen4, key=1, label=friends, style=dashed];
m9_487 -> m9_492  [color=darkseagreen4, key=1, label=friends, style=dashed];
m9_491 -> m9_491  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_493 -> m9_497  [color=darkseagreen4, key=1, label=foes, style=dashed];
m9_493 -> m9_499  [color=darkseagreen4, key=1, label=foes, style=dashed];
m9_495 -> m9_497  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_495 -> m9_498  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_498 -> m9_498  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_438 -> m9_440  [color=darkseagreen4, key=1, label=output, style=dashed];
m9_438 -> m9_441  [color=darkseagreen4, key=1, label=output, style=dashed];
m9_243 -> m9_245  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_243 -> m9_246  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_243 -> m9_247  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_243 -> m9_248  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_243 -> m9_249  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_243 -> m9_250  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_243 -> m9_251  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_243 -> m9_252  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_243 -> m9_253  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_243 -> m9_254  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_243 -> m9_255  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_348 -> m9_350  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_348 -> m9_351  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_348 -> m9_352  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_348 -> m9_353  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_348 -> m9_354  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_348 -> m9_355  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_348 -> m9_356  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_348 -> m9_357  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_348 -> m9_358  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_348 -> m9_359  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_348 -> m9_360  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_348 -> m9_361  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_348 -> m9_362  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_348 -> m9_363  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_348 -> m9_364  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_348 -> m9_365  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_564 -> m9_566  [color=darkseagreen4, key=1, label=doc, style=dashed];
m9_564 -> m9_567  [color=darkseagreen4, key=1, label=doc, style=dashed];
m9_645 -> m9_650  [color=darkseagreen4, key=1, label=doc, style=dashed];
m9_645 -> m9_651  [color=darkseagreen4, key=1, label=doc, style=dashed];
m9_646 -> m9_649  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_646 -> m9_650  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_647 -> m9_649  [color=darkseagreen4, key=1, label=idElement, style=dashed];
m9_29 -> m9_31  [color=darkseagreen4, key=1, label=output, style=dashed];
m9_31 -> m9_31  [color=darkseagreen4, key=1, label=output, style=dashed];
m9_32 -> m9_32  [color=darkseagreen4, key=1, label=output, style=dashed];
m9_33 -> m9_33  [color=darkseagreen4, key=1, label=output, style=dashed];
m9_276 -> m9_278  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_276 -> m9_279  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_276 -> m9_280  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_276 -> m9_281  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_276 -> m9_282  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_276 -> m9_283  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_276 -> m9_284  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_276 -> m9_285  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_276 -> m9_286  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_276 -> m9_287  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_276 -> m9_288  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_276 -> m9_289  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_276 -> m9_290  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_276 -> m9_291  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_276 -> m9_292  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_276 -> m9_293  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_157 -> m9_159  [color=darkseagreen4, key=1, label=output, style=dashed];
m9_157 -> m9_160  [color=darkseagreen4, key=1, label=output, style=dashed];
m9_157 -> m9_161  [color=darkseagreen4, key=1, label=output, style=dashed];
m9_157 -> m9_162  [color=darkseagreen4, key=1, label=output, style=dashed];
m9_157 -> m9_163  [color=darkseagreen4, key=1, label=output, style=dashed];
m9_63 -> m9_65  [color=darkseagreen4, key=1, label=output, style=dashed];
m9_54 -> m9_56  [color=darkseagreen4, key=1, label=output, style=dashed];
m9_54 -> m9_57  [color=darkseagreen4, key=1, label=output, style=dashed];
m9_534 -> m9_561  [color=darkseagreen4, key=1, label=doc, style=dashed];
m9_534 -> m9_562  [color=darkseagreen4, key=1, label=doc, style=dashed];
m9_535 -> m9_537  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_535 -> m9_538  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_535 -> m9_539  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_535 -> m9_540  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_535 -> m9_541  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_535 -> m9_542  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_535 -> m9_543  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_535 -> m9_544  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_535 -> m9_545  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_535 -> m9_546  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_535 -> m9_547  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_535 -> m9_553  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_535 -> m9_560  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_535 -> m9_561  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_548 -> m9_551  [color=darkseagreen4, key=1, label=friends, style=dashed];
m9_548 -> m9_553  [color=darkseagreen4, key=1, label=friends, style=dashed];
m9_549 -> m9_551  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_549 -> m9_552  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_552 -> m9_552  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_554 -> m9_558  [color=darkseagreen4, key=1, label=foes, style=dashed];
m9_554 -> m9_560  [color=darkseagreen4, key=1, label=foes, style=dashed];
m9_556 -> m9_558  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_556 -> m9_559  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_559 -> m9_559  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_413 -> m9_415  [color=darkseagreen4, key=1, label=output, style=dashed];
m9_413 -> m9_416  [color=darkseagreen4, key=1, label=output, style=dashed];
m9_87 -> m9_89  [color=darkseagreen4, key=1, label=output, style=dashed];
m9_569 -> m9_592  [color=darkseagreen4, key=1, label=doc, style=dashed];
m9_569 -> m9_593  [color=darkseagreen4, key=1, label=doc, style=dashed];
m9_570 -> m9_572  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_570 -> m9_573  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_570 -> m9_574  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_570 -> m9_575  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_570 -> m9_576  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_570 -> m9_577  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_570 -> m9_578  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_570 -> m9_579  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_570 -> m9_580  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_570 -> m9_581  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_570 -> m9_582  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_570 -> m9_583  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_570 -> m9_584  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_570 -> m9_585  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_570 -> m9_591  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_570 -> m9_592  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_586 -> m9_589  [color=darkseagreen4, key=1, label=friends, style=dashed];
m9_586 -> m9_591  [color=darkseagreen4, key=1, label=friends, style=dashed];
m9_587 -> m9_589  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_587 -> m9_590  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_590 -> m9_590  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_218 -> m9_220  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_218 -> m9_221  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_218 -> m9_222  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_218 -> m9_223  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_218 -> m9_224  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_218 -> m9_225  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_218 -> m9_226  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_218 -> m9_227  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_218 -> m9_228  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_218 -> m9_229  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_218 -> m9_230  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_218 -> m9_231  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_218 -> m9_232  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_218 -> m9_233  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_218 -> m9_234  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_218 -> m9_235  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_71 -> m9_73  [color=darkseagreen4, key=1, label=output, style=dashed];
m9_455 -> m9_462  [color=darkseagreen4, key=1, label=doc, style=dashed];
m9_456 -> m9_459  [color=darkseagreen4, key=1, label=dateTimeOffset, style=dashed];
m9_456 -> m9_466  [color=darkseagreen4, key=1, label=dateTimeOffset, style=dashed];
m9_457 -> m9_461  [color=darkseagreen4, key=1, label=nullableDateTimeOffsetWithValue, style=dashed];
m9_457 -> m9_469  [color=darkseagreen4, key=1, label=nullableDateTimeOffsetWithValue, style=dashed];
m9_458 -> m9_460  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_458 -> m9_461  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_458 -> m9_462  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_465 -> m9_467  [color=darkseagreen4, key=1, label=payload, style=dashed];
m9_465 -> m9_468  [color=darkseagreen4, key=1, label=payload, style=dashed];
m9_465 -> m9_469  [color=darkseagreen4, key=1, label=payload, style=dashed];
m9_165 -> m9_620  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m9_618 -> m9_621  [color=darkseagreen4, key=1, label=doc, style=dashed];
m9_618 -> m9_622  [color=darkseagreen4, key=1, label=doc, style=dashed];
m9_619 -> m9_621  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_636 -> m9_641  [color=darkseagreen4, key=1, label=doc, style=dashed];
m9_636 -> m9_642  [color=darkseagreen4, key=1, label=doc, style=dashed];
m9_637 -> m9_640  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_637 -> m9_641  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_638 -> m9_640  [color=darkseagreen4, key=1, label=idElement, style=dashed];
m9_39 -> m9_41  [color=darkseagreen4, key=1, label=output, style=dashed];
m9_39 -> m9_42  [color=darkseagreen4, key=1, label=output, style=dashed];
m9_39 -> m9_43  [color=darkseagreen4, key=1, label=output, style=dashed];
m9_110 -> m9_112  [color=darkseagreen4, key=1, label=output, style=dashed];
m9_7 -> m9_9  [color=darkseagreen4, key=1, label=output, style=dashed];
m9_7 -> m9_10  [color=darkseagreen4, key=1, label=output, style=dashed];
m9_7 -> m9_11  [color=darkseagreen4, key=1, label=output, style=dashed];
m9_371 -> m9_373  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_371 -> m9_374  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_612 -> m9_615  [color=darkseagreen4, key=1, label=doc, style=dashed];
m9_612 -> m9_616  [color=darkseagreen4, key=1, label=doc, style=dashed];
m9_613 -> m9_615  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_95 -> m9_97  [color=darkseagreen4, key=1, label=output, style=dashed];
m9_136 -> m9_138  [color=darkseagreen4, key=1, label=output, style=dashed];
m9_136 -> m9_139  [color=darkseagreen4, key=1, label=output, style=dashed];
m9_136 -> m9_140  [color=darkseagreen4, key=1, label=output, style=dashed];
m9_324 -> m9_326  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_324 -> m9_327  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_324 -> m9_328  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_324 -> m9_329  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_324 -> m9_330  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_324 -> m9_331  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_324 -> m9_332  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_324 -> m9_333  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_324 -> m9_334  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_324 -> m9_335  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_324 -> m9_336  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_324 -> m9_337  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_324 -> m9_338  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_324 -> m9_339  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_324 -> m9_340  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_324 -> m9_341  [color=darkseagreen4, key=1, label=p, style=dashed];
m9_403 -> m9_405  [color=darkseagreen4, key=1, label=output, style=dashed];
m9_403 -> m9_406  [color=darkseagreen4, key=1, label=output, style=dashed];
m9_631 -> m9_633  [color=darkseagreen4, key=1, label=doc, style=dashed];
m9_631 -> m9_634  [color=darkseagreen4, key=1, label=doc, style=dashed];
m9_201 -> m9_206  [color=darkseagreen4, key=1, label=culture, style=dashed];
m9_202 -> m9_206  [color=darkseagreen4, key=1, label=format, style=dashed];
m9_203 -> m9_206  [color=darkseagreen4, key=1, label=date, style=dashed];
m9_203 -> m9_211  [color=darkseagreen4, key=1, label=date, style=dashed];
m9_204 -> m9_207  [color=darkseagreen4, key=1, label=doc, style=dashed];
m9_205 -> m9_207  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_118 -> m9_120  [color=darkseagreen4, key=1, label=output, style=dashed];
m9_21 -> m9_23  [color=green, key=1, label=output, style=dashed];
m9_394 -> m9_396  [color=darkseagreen4, key=1, label=output, style=dashed];
m9_79 -> m9_81  [color=darkseagreen4, key=1, label=output, style=dashed];
m9_625 -> m9_628  [color=darkseagreen4, key=1, label=doc, style=dashed];
m9_625 -> m9_629  [color=darkseagreen4, key=1, label=doc, style=dashed];
m9_626 -> m9_628  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_382 -> m9_384  [color=darkseagreen4, key=1, label=output, style=dashed];
m9_382 -> m9_385  [color=darkseagreen4, key=1, label=output, style=dashed];
m9_382 -> m9_386  [color=darkseagreen4, key=1, label=output, style=dashed];
m9_382 -> m9_387  [color=darkseagreen4, key=1, label=output, style=dashed];
m9_146 -> m9_148  [color=darkseagreen4, key=1, label=output, style=dashed];
m9_146 -> m9_149  [color=darkseagreen4, key=1, label=output, style=dashed];
m9_595 -> m9_609  [color=darkseagreen4, key=1, label=doc, style=dashed];
m9_595 -> m9_610  [color=darkseagreen4, key=1, label=doc, style=dashed];
m9_596 -> m9_598  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_596 -> m9_599  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_596 -> m9_600  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_596 -> m9_601  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_596 -> m9_602  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_596 -> m9_603  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_596 -> m9_604  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_596 -> m9_605  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_596 -> m9_606  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_596 -> m9_607  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_596 -> m9_608  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_596 -> m9_609  [color=darkseagreen4, key=1, label=root, style=dashed];
m9_125 -> m9_127  [color=darkseagreen4, key=1, label=output, style=dashed];
m9_125 -> m9_128  [color=darkseagreen4, key=1, label=output, style=dashed];
m9_125 -> m9_129  [color=darkseagreen4, key=1, label=output, style=dashed];
m2_187 -> m2_123  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
m2_187 -> m2_125  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
m2_187 -> m2_132  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
m2_187 -> m2_143  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
m2_187 -> m2_144  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
m2_187 -> m2_155  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
m2_187 -> m2_159  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
m2_187 -> m2_160  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
m2_187 -> m2_162  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
m2_187 -> m2_164  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
m2_187 -> m2_165  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
m2_187 -> m2_184  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
m2_187 -> m2_7  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
m2_187 -> m2_28  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
m2_187 -> m2_29  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
m2_187 -> m2_104  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
m2_187 -> m2_55  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
m3_627 -> m3_308  [color=darkseagreen4, key=1, label="RestSharp.Tests.JsonTests", style=dashed];
m3_627 -> m3_344  [color=darkseagreen4, key=1, label="RestSharp.Tests.JsonTests", style=dashed];
m3_627 -> m3_370  [color=darkseagreen4, key=1, label="RestSharp.Tests.JsonTests", style=dashed];
m6_2_187 -> m6_2_123  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
m6_2_187 -> m6_2_125  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
m6_2_187 -> m6_2_132  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
m6_2_187 -> m6_2_143  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
m6_2_187 -> m6_2_144  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
m6_2_187 -> m6_2_155  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
m6_2_187 -> m6_2_159  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
m6_2_187 -> m6_2_160  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
m6_2_187 -> m6_2_162  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
m6_2_187 -> m6_2_164  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
m6_2_187 -> m6_2_165  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
m6_2_187 -> m6_2_184  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
m6_2_187 -> m6_2_7  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
m6_2_187 -> m6_2_28  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
m6_2_187 -> m6_2_29  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
m6_2_187 -> m6_2_104  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
m6_2_187 -> m6_2_55  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
m6_3_627 -> m6_3_308  [color=darkseagreen4, key=1, label="RestSharp.Tests.JsonTests", style=dashed];
m6_3_627 -> m6_3_344  [color=darkseagreen4, key=1, label="RestSharp.Tests.JsonTests", style=dashed];
m6_3_627 -> m6_3_370  [color=darkseagreen4, key=1, label="RestSharp.Tests.JsonTests", style=dashed];
m6_6_88 -> m6_6_7  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m6_6_88 -> m6_6_8  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m6_6_88 -> m6_6_20  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m6_6_88 -> m6_6_21  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m6_6_88 -> m6_6_24  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m6_6_88 -> m6_6_13  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m6_6_88 -> m6_6_17  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m6_6_88 -> m6_6_37  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m6_6_88 -> m6_6_62  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m6_6_88 -> m6_6_65  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m6_6_88 -> m6_6_69  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m6_6_88 -> m6_6_72  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m6_6_88 -> m6_6_75  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m6_6_88 -> m6_6_78  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m6_6_89 -> m6_6_37  [color=darkseagreen4, key=1, label="RestSharp.IRestRequest", style=dashed];
m6_6_90 -> m6_6_37  [color=darkseagreen4, key=1, label="System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>", style=dashed];
m6_6_91 -> m6_6_37  [color=darkseagreen4, key=1, label=asyncHandle, style=dashed];
m6_6_92 -> m6_6_41  [color=darkseagreen4, key=1, label=ctx, style=dashed];
m6_6_93 -> m6_6_41  [color=darkseagreen4, key=1, label=cb, style=dashed];
m6_6_93 -> m6_6_45  [color=darkseagreen4, key=1, label=cb, style=dashed];
m6_6_94 -> m6_6_45  [color=darkseagreen4, key=1, label="RestSharp.HttpResponse", style=dashed];
m6_6_95 -> m6_6_65  [color=darkseagreen4, key=1, label="RestSharp.IRestRequest", style=dashed];
m6_6_96 -> m6_6_65  [color=darkseagreen4, key=1, label="System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>", style=dashed];
m6_6_97 -> m6_6_72  [color=darkseagreen4, key=1, label="RestSharp.IRestRequest", style=dashed];
m6_6_98 -> m6_6_72  [color=darkseagreen4, key=1, label="System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>", style=dashed];
m6_6_99 -> m6_6_78  [color=darkseagreen4, key=1, label="RestSharp.IRestRequest", style=dashed];
m6_6_100 -> m6_6_78  [color=darkseagreen4, key=1, label="System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>", style=dashed];
m6_7_152 -> m6_7_47  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m6_7_152 -> m6_7_48  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m6_7_152 -> m6_7_41  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m6_7_152 -> m6_7_54  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m6_7_152 -> m6_7_64  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m6_7_152 -> m6_7_69  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m6_7_152 -> m6_7_73  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m6_7_152 -> m6_7_77  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m6_7_152 -> m6_7_81  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m6_7_152 -> m6_7_98  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m6_7_152 -> m6_7_99  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m6_7_152 -> m6_7_111  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m6_7_152 -> m6_7_112  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m6_7_152 -> m6_7_115  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m6_7_152 -> m6_7_116  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m6_7_152 -> m6_7_131  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m6_7_152 -> m6_7_141  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m6_7_152 -> m6_7_144  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m6_7_152 -> m6_7_147  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m6_7_152 -> m6_7_150  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m6_7_152 -> m6_7_53  [color=green, key=1, label="RestSharp.RestRequest", style=dashed];
m6_7_154 -> m6_7_136  [color=darkseagreen4, key=1, label=portSplit, style=dashed];
m6_8_653 -> m6_8_1  [color=darkseagreen4, key=1, label="RestSharp.Tests.XmlDeserializerTests", style=dashed];
m7_88 -> m7_7  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m7_88 -> m7_8  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m7_88 -> m7_20  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m7_88 -> m7_21  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m7_88 -> m7_24  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m7_88 -> m7_13  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m7_88 -> m7_17  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m7_88 -> m7_37  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m7_88 -> m7_62  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m7_88 -> m7_65  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m7_88 -> m7_69  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m7_88 -> m7_72  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m7_88 -> m7_75  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m7_88 -> m7_78  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m7_89 -> m7_37  [color=darkseagreen4, key=1, label="RestSharp.IRestRequest", style=dashed];
m7_90 -> m7_37  [color=darkseagreen4, key=1, label="System.Action<RestSharp.IRestResponse, RestSharp.RestRequestAsyncHandle>", style=dashed];
m7_91 -> m7_37  [color=darkseagreen4, key=1, label=asyncHandle, style=dashed];
m7_92 -> m7_41  [color=darkseagreen4, key=1, label=ctx, style=dashed];
m7_93 -> m7_41  [color=darkseagreen4, key=1, label=cb, style=dashed];
m7_93 -> m7_45  [color=darkseagreen4, key=1, label=cb, style=dashed];
m7_94 -> m7_45  [color=darkseagreen4, key=1, label="RestSharp.HttpResponse", style=dashed];
m7_95 -> m7_65  [color=darkseagreen4, key=1, label="RestSharp.IRestRequest", style=dashed];
m7_96 -> m7_65  [color=darkseagreen4, key=1, label="System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>", style=dashed];
m7_97 -> m7_72  [color=darkseagreen4, key=1, label="RestSharp.IRestRequest", style=dashed];
m7_98 -> m7_72  [color=darkseagreen4, key=1, label="System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>", style=dashed];
m7_99 -> m7_78  [color=darkseagreen4, key=1, label="RestSharp.IRestRequest", style=dashed];
m7_100 -> m7_78  [color=darkseagreen4, key=1, label="System.Action<RestSharp.IRestResponse<T>, RestSharp.RestRequestAsyncHandle>", style=dashed];
m8_152 -> m8_47  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m8_152 -> m8_48  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m8_152 -> m8_41  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m8_152 -> m8_54  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m8_152 -> m8_64  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m8_152 -> m8_69  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m8_152 -> m8_73  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m8_152 -> m8_77  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m8_152 -> m8_81  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m8_152 -> m8_98  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m8_152 -> m8_99  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m8_152 -> m8_111  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m8_152 -> m8_112  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m8_152 -> m8_115  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m8_152 -> m8_116  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m8_152 -> m8_131  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m8_152 -> m8_141  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m8_152 -> m8_144  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m8_152 -> m8_147  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m8_152 -> m8_150  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m8_152 -> m8_53  [color=green, key=1, label="RestSharp.RestRequest", style=dashed];
m8_154 -> m8_136  [color=darkseagreen4, key=1, label=portSplit, style=dashed];
m9_653 -> m9_1  [color=darkseagreen4, key=1, label="RestSharp.Tests.XmlDeserializerTests", style=dashed];
}
