digraph  {
n0 [cluster="RestSharp.Tests.NuSpecUpdateTask.BaseNuSpecUpdateTest.BaseNuSpecUpdateTest()", label="Entry RestSharp.Tests.NuSpecUpdateTask.BaseNuSpecUpdateTest.BaseNuSpecUpdateTest()", span="26-26"];
n1 [cluster="RestSharp.Tests.NuSpecUpdateTask.BaseNuSpecUpdateTest.BaseNuSpecUpdateTest()", color=red, community=0, label="0: this.FileName = Path.Combine(''SampleData'', ''restsharp.nuspec'')", span="28-28"];
d1 [cluster="RestSharp.Tests.NuSpecUpdateTask.BaseNuSpecUpdateTest.BaseNuSpecUpdateTest()", color=green, community=0, label="0: this.FileName = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, ''SampleData'', ''restsharp.nuspec'')", span="29-29"];
n2 [cluster="RestSharp.Tests.NuSpecUpdateTask.BaseNuSpecUpdateTest.BaseNuSpecUpdateTest()", label="this.Setup()", span="29-29"];
n4 [cluster="System.IO.Path.Combine(string, string)", label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
n3 [cluster="RestSharp.Tests.NuSpecUpdateTask.BaseNuSpecUpdateTest.BaseNuSpecUpdateTest()", label="Exit RestSharp.Tests.NuSpecUpdateTask.BaseNuSpecUpdateTest.BaseNuSpecUpdateTest()", span="26-26"];
n5 [cluster="RestSharp.Tests.NuSpecUpdateTask.BaseNuSpecUpdateTest.Setup()", label="Entry RestSharp.Tests.NuSpecUpdateTask.BaseNuSpecUpdateTest.Setup()", span="32-32"];
d4 [cluster="System.IO.Path.Combine(string, string, string)", label="Entry System.IO.Path.Combine(string, string, string)", span="0-0"];
n6 [cluster="RestSharp.Tests.NuSpecUpdateTask.BaseNuSpecUpdateTest.Setup()", label="Exit RestSharp.Tests.NuSpecUpdateTask.BaseNuSpecUpdateTest.Setup()", span="32-32"];
n14 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenInformationalVersionIsNotDefined.Setup()", label="Entry RestSharp.Tests.NuSpecUpdateTask.Execute.WhenInformationalVersionIsNotDefined.Setup()", span="52-52"];
n22 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.Setup()", label="Entry RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.Setup()", span="92-92"];
n7 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileNotSpecified.ReturnsFalse()", label="Entry RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileNotSpecified.ReturnsFalse()", span="41-41"];
n8 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileNotSpecified.ReturnsFalse()", label="Build.NuSpecUpdateTask task = new Build.NuSpecUpdateTask()", span="43-43"];
n9 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileNotSpecified.ReturnsFalse()", label="Assert.False(task.Execute())", span="45-45"];
n11 [cluster="RestSharp.Build.NuSpecUpdateTask.NuSpecUpdateTask()", label="Entry RestSharp.Build.NuSpecUpdateTask.NuSpecUpdateTask()", span="25-25"];
n10 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileNotSpecified.ReturnsFalse()", label="Exit RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileNotSpecified.ReturnsFalse()", span="41-41"];
n12 [cluster="RestSharp.Build.NuSpecUpdateTask.Execute()", label="Entry RestSharp.Build.NuSpecUpdateTask.Execute()", span="32-32"];
n15 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenInformationalVersionIsNotDefined.Setup()", label="Exit RestSharp.Tests.NuSpecUpdateTask.Execute.WhenInformationalVersionIsNotDefined.Setup()", span="52-52"];
n16 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenInformationalVersionIsNotDefined.PullsVersionAttributeInstead()", label="Entry RestSharp.Tests.NuSpecUpdateTask.Execute.WhenInformationalVersionIsNotDefined.PullsVersionAttributeInstead()", span="57-57"];
n17 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenInformationalVersionIsNotDefined.PullsVersionAttributeInstead()", label="Build.NuSpecUpdateTask task = new Build.NuSpecUpdateTask\r\n                    {\r\n                        SpecFile = FileName,\r\n                        \\nSourceAssemblyFile = ''RestSharp.Tests.dll''\r\n                    }", span="59-63"];
n18 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenInformationalVersionIsNotDefined.PullsVersionAttributeInstead()", label="task.Execute()", span="65-65"];
n19 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenInformationalVersionIsNotDefined.PullsVersionAttributeInstead()", label="Assert.AreEqual(''1.0.0.0'', task.Version)", span="67-67"];
n20 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenInformationalVersionIsNotDefined.PullsVersionAttributeInstead()", label="Exit RestSharp.Tests.NuSpecUpdateTask.Execute.WhenInformationalVersionIsNotDefined.PullsVersionAttributeInstead()", span="57-57"];
n23 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.Setup()", label="this.subject.SpecFile = FileName", span="94-94"];
n24 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.Setup()", label="this.subject.SourceAssemblyFile = ''RestSharp.dll''", span="95-95"];
n25 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.Setup()", label="this.result = this.subject.Execute()", span="96-96"];
n26 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.Setup()", label="Exit RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.Setup()", span="92-92"];
n27 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.ReturnsTrue()", label="Entry RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.ReturnsTrue()", span="100-100"];
n28 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.ReturnsTrue()", label="Assert.True(this.result)", span="102-102"];
n29 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.ReturnsTrue()", label="Exit RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.ReturnsTrue()", span="100-100"];
n31 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsIdFromAssembly()", label="Entry RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsIdFromAssembly()", span="106-106"];
n32 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsIdFromAssembly()", label="Assert.AreEqual(EXPECTED_ID, this.subject.Id)", span="108-108"];
n33 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsIdFromAssembly()", label="Exit RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsIdFromAssembly()", span="106-106"];
n34 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsDescriptionFromAssembly()", label="Entry RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsDescriptionFromAssembly()", span="112-112"];
n35 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsDescriptionFromAssembly()", label="Assert.AreEqual(EXPECTED_DESCRIPTION, this.subject.Description)", span="114-114"];
n36 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsDescriptionFromAssembly()", label="Exit RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsDescriptionFromAssembly()", span="112-112"];
n37 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsVersionFromAssemblyInfo()", label="Entry RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsVersionFromAssemblyInfo()", span="118-118"];
n38 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsVersionFromAssemblyInfo()", label="Assert.True(this.expectedVersion.IsMatch(this.subject.Version))", span="120-120"];
n39 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsVersionFromAssemblyInfo()", label="Exit RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsVersionFromAssemblyInfo()", span="118-118"];
n40 [cluster="System.Text.RegularExpressions.Regex.IsMatch(string)", label="Entry System.Text.RegularExpressions.Regex.IsMatch(string)", span="0-0"];
n41 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsAuthorsFromAssemblyInfo()", label="Entry RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsAuthorsFromAssemblyInfo()", span="124-124"];
n42 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsAuthorsFromAssemblyInfo()", label="Assert.AreEqual(EXPECTED_AUTHORS, this.subject.Authors)", span="126-126"];
n43 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsAuthorsFromAssemblyInfo()", label="Exit RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsAuthorsFromAssemblyInfo()", span="124-124"];
n44 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.UpdatesSpecFile()", label="Entry RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.UpdatesSpecFile()", span="130-130"];
n45 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.UpdatesSpecFile()", label="XDocument doc = XDocument.Load(ComputedFileName)", span="132-132"];
n46 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.UpdatesSpecFile()", label="Assert.AreEqual(EXPECTED_ID, doc.Descendants(''id'').First().Value)", span="134-134"];
n47 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.UpdatesSpecFile()", label="Assert.AreEqual(EXPECTED_DESCRIPTION, doc.Descendants(''description'').First().Value)", span="135-135"];
n48 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.UpdatesSpecFile()", label="Assert.AreEqual(EXPECTED_AUTHORS, doc.Descendants(''authors'').First().Value)", span="136-136"];
n49 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.UpdatesSpecFile()", label="Assert.AreEqual(EXPECTED_OWNERS, doc.Descendants(''owners'').First().Value)", span="137-137"];
n50 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.UpdatesSpecFile()", label="Assert.True(this.expectedVersion.IsMatch(doc.Descendants(''version'').First().Value))", span="138-138"];
n51 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.UpdatesSpecFile()", label="Exit RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.UpdatesSpecFile()", span="130-130"];
m0_409 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Boolean_From_String()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Boolean_From_String()", span="556-556"];
m0_410 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Boolean_From_String()", file="XmlAttributeDeserializerTests.cs", label="string xmlpath = this.PathFor(''boolean_from_string.xml'')", span="558-558"];
m0_411 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Boolean_From_String()", file="XmlAttributeDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="559-559"];
m0_412 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Boolean_From_String()", file="XmlAttributeDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc.ToString() }", span="560-560"];
m0_413 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Boolean_From_String()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer d = new XmlAttributeDeserializer()", span="561-561"];
m0_414 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Boolean_From_String()", file="XmlAttributeDeserializerTests.cs", label="BooleanTest output = d.Deserialize<BooleanTest>(response)", span="562-562"];
m0_415 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Boolean_From_String()", file="XmlAttributeDeserializerTests.cs", label="Assert.True(output.Value)", span="564-564"];
m0_416 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Boolean_From_String()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Boolean_From_String()", span="556-556"];
m0_18 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenInformationalVersionIsNotDefined.PullsVersionAttributeInstead()", file="NuSpecUpdateTask.cs", label="task.Execute()", span="65-65"];
m0_117 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", span="192-192"];
m0_118 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="XmlAttributeDeserializerTests.cs", label="string doc = CreateXmlWithNullValues()", span="194-194"];
m0_119 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer xml = new XmlAttributeDeserializer()", span="195-195"];
m0_120 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="XmlAttributeDeserializerTests.cs", label="NullableValues output = xml.Deserialize<NullableValues>(new RestResponse { Content = doc })", span="196-196"];
m0_121 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="XmlAttributeDeserializerTests.cs", label="Assert.Null(output.Id)", span="198-198"];
m0_122 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="XmlAttributeDeserializerTests.cs", label="Assert.Null(output.StartDate)", span="199-199"];
m0_123 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="XmlAttributeDeserializerTests.cs", label="Assert.Null(output.UniqueId)", span="200-200"];
m0_124 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", span="192-192"];
m0_141 [cluster="System.Guid.Guid(string)", file="XmlAttributeDeserializerTests.cs", label="Entry System.Guid.Guid(string)", span="0-0"];
m0_171 [cluster="System.TimeSpan.TimeSpan(long)", file="XmlAttributeDeserializerTests.cs", label="Entry System.TimeSpan.TimeSpan(long)", span="0-0"];
m0_325 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", span="665-665"];
m0_486 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="XDocument doc = new XDocument()", span="667-667"];
m0_487 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="XElement root = new XElement(''Person'')", span="668-668"];
m0_513 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="doc.Add(root)", span="706-706"];
m0_514 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="return doc.ToString();", span="708-708"];
m0_488 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Name'', ''John Sheehan''))", span="670-670"];
m0_489 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''start_date'', new DateTime(2009, 9, 25, 0, 6, 1)))", span="671-671"];
m0_490 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XAttribute(''Age'', 28))", span="672-672"];
m0_491 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Percent'', 99.9999m))", span="673-673"];
m0_492 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''big_number'', long.MaxValue))", span="674-674"];
m0_493 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XAttribute(''is_cool'', false))", span="675-675"];
m0_494 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Ignore'', ''dummy''))", span="676-676"];
m0_495 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XAttribute(''read_only'', ''dummy''))", span="677-677"];
m0_496 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''unique_id'', new Guid(GUID_STRING)))", span="678-678"];
m0_497 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Url'', ''http://example.com''))", span="679-679"];
m0_498 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''url_path'', ''/foo/bar''))", span="680-680"];
m0_499 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''best_friend'',\r\n                new XElement(''name'', ''The Fonz''),\r\n                new XAttribute(''\\nSince'', 1952)))", span="681-683"];
m0_505 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(friends)", span="694-694"];
m0_512 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(foes)", span="705-705"];
m0_500 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="XElement friends = new XElement(''Friends'')", span="685-685"];
m0_501 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="int i = 0", span="687-687"];
m0_503 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="friends.Add(new XElement(''Friend'',\r\n                    new XElement(''Name'', ''Friend'' + i),\r\n                    new XAttribute(''\\nSince'', DateTime.Now.Year - i)))", span="689-691"];
m0_502 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="i < 10", span="687-687"];
m0_504 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="i++", span="687-687"];
m0_506 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="XElement foes = new XElement(''Foes'')", span="696-696"];
m0_507 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="foes.Add(new XAttribute(''Team'', ''Yankees''))", span="698-698"];
m0_510 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="foes.Add(new XElement(''Foe'', new XElement(''Nickname'', ''Foe'' + i)))", span="702-702"];
m0_508 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="int i = 0", span="700-700"];
m0_509 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="i < 5", span="700-700"];
m0_511 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="i++", span="700-700"];
m0_515 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", span="665-665"];
m0_4 [cluster="System.IO.Path.Combine(string, string, string)", file="NuSpecUpdateTask.cs", label="Entry System.IO.Path.Combine(string, string, string)", span="0-0"];
m0_5 [cluster="RestSharp.Tests.NuSpecUpdateTask.BaseNuSpecUpdateTest.Setup()", file="NuSpecUpdateTask.cs", label="Entry RestSharp.Tests.NuSpecUpdateTask.BaseNuSpecUpdateTest.Setup()", span="32-32"];
m0_6 [cluster="RestSharp.Tests.NuSpecUpdateTask.BaseNuSpecUpdateTest.Setup()", file="NuSpecUpdateTask.cs", label="Exit RestSharp.Tests.NuSpecUpdateTask.BaseNuSpecUpdateTest.Setup()", span="32-32"];
m0_7 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileNotSpecified.ReturnsFalse()", file="NuSpecUpdateTask.cs", label="Entry RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileNotSpecified.ReturnsFalse()", span="41-41"];
m0_8 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileNotSpecified.ReturnsFalse()", file="NuSpecUpdateTask.cs", label="Build.NuSpecUpdateTask task = new Build.NuSpecUpdateTask()", span="43-43"];
m0_9 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileNotSpecified.ReturnsFalse()", file="NuSpecUpdateTask.cs", label="Assert.False(task.Execute())", span="45-45"];
m0_10 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileNotSpecified.ReturnsFalse()", file="NuSpecUpdateTask.cs", label="Exit RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileNotSpecified.ReturnsFalse()", span="41-41"];
m0_11 [cluster="RestSharp.Build.NuSpecUpdateTask.NuSpecUpdateTask()", file="NuSpecUpdateTask.cs", label="Entry RestSharp.Build.NuSpecUpdateTask.NuSpecUpdateTask()", span="25-25"];
m0_12 [cluster="RestSharp.Build.NuSpecUpdateTask.Execute()", file="NuSpecUpdateTask.cs", label="Entry RestSharp.Build.NuSpecUpdateTask.Execute()", span="32-32"];
m0_13 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", file="NuSpecUpdateTask.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", span="43-43"];
m0_277 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", span="619-619"];
m0_470 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="int i = 0", span="641-641"];
m0_455 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="XDocument doc = new XDocument()", span="621-621"];
m0_456 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="XElement root = new XElement(''Person'')", span="622-622"];
m0_482 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="doc.Add(root)", span="660-660"];
m0_483 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="return doc.ToString();", span="662-662"];
m0_457 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Name'', ''John Sheehan''))", span="624-624"];
m0_458 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Start_Date'', new DateTime(2009, 9, 25, 0, 6, 1)))", span="625-625"];
m0_459 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XAttribute(''Age'', 28))", span="626-626"];
m0_460 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Percent'', 99.9999m))", span="627-627"];
m0_461 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Big_Number'', long.MaxValue))", span="628-628"];
m0_462 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XAttribute(''Is_Cool'', false))", span="629-629"];
m0_463 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Ignore'', ''dummy''))", span="630-630"];
m0_464 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XAttribute(''Read_Only'', ''dummy''))", span="631-631"];
m0_465 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Unique_Id'', new Guid(GUID_STRING)))", span="632-632"];
m0_466 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Url'', ''http://example.com''))", span="633-633"];
m0_467 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Url_Path'', ''/foo/bar''))", span="634-634"];
m0_468 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Best_Friend'',\r\n                new XElement(''Name'', ''The Fonz''),\r\n                new XAttribute(''\\nSince'', 1952)))", span="635-637"];
m0_474 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(friends)", span="648-648"];
m0_481 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(foes)", span="659-659"];
m0_469 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="XElement friends = new XElement(''Friends'')", span="639-639"];
m0_472 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="friends.Add(new XElement(''Friend'',\r\n                    new XElement(''Name'', ''Friend'' + i),\r\n                    new XAttribute(''\\nSince'', DateTime.Now.Year - i)))", span="643-645"];
m0_471 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="i < 10", span="641-641"];
m0_473 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="i++", span="641-641"];
m0_475 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="XElement foes = new XElement(''Foes'')", span="650-650"];
m0_476 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="foes.Add(new XAttribute(''Team'', ''Yankees''))", span="652-652"];
m0_479 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="foes.Add(new XElement(''Foe'', new XElement(''Nickname'', ''Foe'' + i)))", span="656-656"];
m0_477 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="int i = 0", span="654-654"];
m0_478 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="i < 5", span="654-654"];
m0_480 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="i++", span="654-654"];
m0_484 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", span="619-619"];
m0_104 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithEmptyNestedList()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithEmptyNestedList()", span="863-863"];
m0_608 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithEmptyNestedList()", file="XmlAttributeDeserializerTests.cs", label="XDocument doc = new XDocument()", span="865-865"];
m0_609 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithEmptyNestedList()", file="XmlAttributeDeserializerTests.cs", label="XElement root = new XElement(''EmptyListSample'')", span="866-866"];
m0_611 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithEmptyNestedList()", file="XmlAttributeDeserializerTests.cs", label="doc.Add(root)", span="869-869"];
m0_612 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithEmptyNestedList()", file="XmlAttributeDeserializerTests.cs", label="return doc.ToString();", span="871-871"];
m0_610 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithEmptyNestedList()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Images''))", span="868-868"];
m0_613 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithEmptyNestedList()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithEmptyNestedList()", span="863-863"];
m0_426 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", span="580-580"];
m0_427 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", file="XmlAttributeDeserializerTests.cs", label="string doc = CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", span="582-582"];
m0_428 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer xml = new XmlAttributeDeserializer()", span="583-583"];
m0_429 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", file="XmlAttributeDeserializerTests.cs", label="NullableValues output = xml.Deserialize<NullableValues>(new RestResponse { Content = doc })", span="584-584"];
m0_430 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", file="XmlAttributeDeserializerTests.cs", label="Assert.Null(output.Id)", span="586-586"];
m0_431 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", file="XmlAttributeDeserializerTests.cs", label="Assert.Null(output.StartDate)", span="587-587"];
m0_432 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new Guid(GUID_STRING), output.UniqueId)", span="588-588"];
m0_433 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", span="580-580"];
m0_453 [cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="XmlAttributeDeserializerTests.cs", label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0"];
m0_15 [cluster="RestSharp.Deserializers.XmlAttributeDeserializer.XmlAttributeDeserializer()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Deserializers.XmlAttributeDeserializer.XmlAttributeDeserializer()", span="24-24"];
m0_358 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowerCasedRootElementWithDashesXml()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowerCasedRootElementWithDashesXml()", span="757-757"];
m0_546 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowerCasedRootElementWithDashesXml()", file="XmlAttributeDeserializerTests.cs", label="XDocument doc = new XDocument()", span="759-759"];
m0_547 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowerCasedRootElementWithDashesXml()", file="XmlAttributeDeserializerTests.cs", label="XElement root = new XElement(''incoming-invoices'',\r\n                new XElement(''incoming-invoice'',\r\n                    \\nnew XElement(''concept-id'', 45)))", span="760-762"];
m0_548 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowerCasedRootElementWithDashesXml()", file="XmlAttributeDeserializerTests.cs", label="doc.Add(root)", span="764-764"];
m0_549 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowerCasedRootElementWithDashesXml()", file="XmlAttributeDeserializerTests.cs", label="return doc.ToString();", span="766-766"];
m0_550 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowerCasedRootElementWithDashesXml()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowerCasedRootElementWithDashesXml()", span="757-757"];
m0_371 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lastfm_Xml()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lastfm_Xml()", span="502-502"];
m0_372 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lastfm_Xml()", file="XmlAttributeDeserializerTests.cs", label="string xmlpath = this.PathFor(''Lastfm.xml'')", span="504-504"];
m0_373 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lastfm_Xml()", file="XmlAttributeDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="505-505"];
m0_374 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lastfm_Xml()", file="XmlAttributeDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc.ToString() }", span="506-506"];
m0_375 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lastfm_Xml()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer d = new XmlAttributeDeserializer()", span="507-507"];
m0_376 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lastfm_Xml()", file="XmlAttributeDeserializerTests.cs", label="Event output = d.Deserialize<Event>(response)", span="508-508"];
m0_377 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lastfm_Xml()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(''http://www.last.fm/event/328799+Philip+Glass+at+Barbican+Centre+on+12+June+2008'', output.url)", span="511-511"];
m0_378 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lastfm_Xml()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(''http://www.last.fm/venue/8777860+Barbican+Centre'', output.venue.url)", span="512-512"];
m0_379 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lastfm_Xml()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lastfm_Xml()", span="502-502"];
m0_197 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", span="294-294"];
m0_198 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="string doc = CreateElementsXml()", span="296-296"];
m0_199 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="297-297"];
m0_200 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer d = new XmlAttributeDeserializer()", span="298-298"];
m0_201 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="PersonForXml p = d.Deserialize<PersonForXml>(response)", span="299-299"];
m0_202 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(''John Sheehan'', p.Name)", span="301-301"];
m0_203 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new DateTime(2009, 9, 25, 0, 6, 1), p.StartDate)", span="302-302"];
m0_204 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(28, p.Age)", span="303-303"];
m0_205 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(long.MaxValue, p.BigNumber)", span="304-304"];
m0_206 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(99.9999m, p.Percent)", span="305-305"];
m0_207 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(false, p.IsCool)", span="306-306"];
m0_208 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new Guid(GUID_STRING), p.UniqueId)", span="307-307"];
m0_209 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(Guid.Empty, p.EmptyGuid)", span="308-308"];
m0_210 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="309-309"];
m0_211 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="310-310"];
m0_212 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(Order.Third, p.Order)", span="311-311"];
m0_213 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(Disposition.SoSo, p.Disposition)", span="312-312"];
m0_214 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.NotNull(p.Friends)", span="313-313"];
m0_215 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(10, p.Friends.Count)", span="314-314"];
m0_216 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.NotNull(p.BestFriend)", span="315-315"];
m0_217 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(''The Fonz'', p.BestFriend.Name)", span="316-316"];
m0_218 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(1952, p.BestFriend.Since)", span="317-317"];
m0_219 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", span="294-294"];
m0_95 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", span="166-166"];
m0_96 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", file="XmlAttributeDeserializerTests.cs", label="string doc = CreateXmlWithEmptyNestedList()", span="168-168"];
m0_97 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer xml = new XmlAttributeDeserializer()", span="169-169"];
m0_98 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", file="XmlAttributeDeserializerTests.cs", label="EmptyListSample output = xml.Deserialize<EmptyListSample>(new RestResponse { Content = doc })", span="170-170"];
m0_99 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", file="XmlAttributeDeserializerTests.cs", label="Assert.NotNull(output.images)", span="172-172"];
m0_100 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", file="XmlAttributeDeserializerTests.cs", label="Assert.NotNull(output.Images)", span="173-173"];
m0_101 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", file="XmlAttributeDeserializerTests.cs", label="Assert.IsEmpty(output.images)", span="174-174"];
m0_102 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", file="XmlAttributeDeserializerTests.cs", label="Assert.IsEmpty(output.Images)", span="175-175"];
m0_103 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", span="166-166"];
m0_127 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", span="204-204"];
m0_128 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlAttributeDeserializerTests.cs", label="CultureInfo culture = CultureInfo.InvariantCulture", span="206-206"];
m0_129 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlAttributeDeserializerTests.cs", label="string doc = CreateXmlWithoutEmptyValues(culture)", span="207-207"];
m0_130 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer xml = new XmlAttributeDeserializer\r\n                                           {\r\n                                               \\nCulture = culture\r\n                                           }", span="208-211"];
m0_131 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlAttributeDeserializerTests.cs", label="NullableValues output = xml.Deserialize<NullableValues>(new RestResponse { Content = doc })", span="212-212"];
m0_132 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlAttributeDeserializerTests.cs", label="Assert.NotNull(output.Id)", span="214-214"];
m0_133 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlAttributeDeserializerTests.cs", label="Assert.NotNull(output.StartDate)", span="215-215"];
m0_134 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlAttributeDeserializerTests.cs", label="Assert.NotNull(output.UniqueId)", span="216-216"];
m0_135 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(123, output.Id)", span="217-217"];
m0_136 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new DateTime(2010, 2, 21, 9, 35, 00), output.StartDate)", span="218-218"];
m0_137 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new Guid(GUID_STRING), output.UniqueId)", span="219-219"];
m0_138 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", span="204-204"];
m0_64 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", span="119-119"];
m0_65 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="string xmlpath = this.PathFor(''InlineListSample.xml'')", span="121-121"];
m0_66 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="122-122"];
m0_67 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer xml = new XmlAttributeDeserializer()", span="123-123"];
m0_68 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="InlineListSample output = xml.Deserialize<InlineListSample>(new RestResponse { Content = doc.ToString() })", span="124-124"];
m0_69 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="Assert.IsNotEmpty(output.images)", span="126-126"];
m0_70 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(4, output.images.Count)", span="127-127"];
m0_71 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", span="119-119"];
m0_56 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", file="NuSpecUpdateTask.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", span="107-107"];
m0_57 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", file="NuSpecUpdateTask.cs", label="string xmlpath = this.PathFor(''InlineListSample.xml'')", span="109-109"];
m0_58 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", file="NuSpecUpdateTask.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="110-110"];
m0_59 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer xml = new XmlAttributeDeserializer()", span="111-111"];
m0_60 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="InlineListSample output = xml.Deserialize<InlineListSample>(new RestResponse { Content = doc.ToString() })", span="112-112"];
m0_61 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="Assert.IsNotEmpty(output.Images)", span="114-114"];
m0_62 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(4, output.Images.Count)", span="115-115"];
m0_63 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", span="107-107"];
m0_40 [cluster="System.Text.RegularExpressions.Regex.IsMatch(string)", file="NuSpecUpdateTask.cs", label="Entry System.Text.RegularExpressions.Regex.IsMatch(string)", span="0-0"];
m0_41 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsAuthorsFromAssemblyInfo()", file="NuSpecUpdateTask.cs", label="Entry RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsAuthorsFromAssemblyInfo()", span="124-124"];
m0_42 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsAuthorsFromAssemblyInfo()", file="NuSpecUpdateTask.cs", label="Assert.AreEqual(EXPECTED_AUTHORS, this.subject.Authors)", span="126-126"];
m0_43 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsAuthorsFromAssemblyInfo()", file="NuSpecUpdateTask.cs", label="Exit RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsAuthorsFromAssemblyInfo()", span="124-124"];
m0_44 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.UpdatesSpecFile()", file="NuSpecUpdateTask.cs", label="Entry RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.UpdatesSpecFile()", span="130-130"];
m0_45 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.UpdatesSpecFile()", file="NuSpecUpdateTask.cs", label="XDocument doc = XDocument.Load(ComputedFileName)", span="132-132"];
m0_46 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.UpdatesSpecFile()", file="NuSpecUpdateTask.cs", label="Assert.AreEqual(EXPECTED_ID, doc.Descendants(''id'').First().Value)", span="134-134"];
m0_47 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.UpdatesSpecFile()", file="NuSpecUpdateTask.cs", label="Assert.AreEqual(EXPECTED_DESCRIPTION, doc.Descendants(''description'').First().Value)", span="135-135"];
m0_169 [cluster="System.TimeSpan.TimeSpan(int, int, int)", file="XmlAttributeDeserializerTests.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int)", span="0-0"];
m0_116 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithEmptyInlineList()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithEmptyInlineList()", span="874-874"];
m0_614 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithEmptyInlineList()", file="XmlAttributeDeserializerTests.cs", label="XDocument doc = new XDocument()", span="876-876"];
m0_615 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithEmptyInlineList()", file="XmlAttributeDeserializerTests.cs", label="XElement root = new XElement(''EmptyListSample'')", span="877-877"];
m0_616 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithEmptyInlineList()", file="XmlAttributeDeserializerTests.cs", label="doc.Add(root)", span="879-879"];
m0_617 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithEmptyInlineList()", file="XmlAttributeDeserializerTests.cs", label="return doc.ToString();", span="881-881"];
m0_618 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithEmptyInlineList()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithEmptyInlineList()", span="874-874"];
m0_301 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", span="711-711"];
m0_516 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="XDocument doc = new XDocument()", span="713-713"];
m0_517 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="XElement root = new XElement(''Person'')", span="714-714"];
m0_543 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="doc.Add(root)", span="752-752"];
m0_544 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="return doc.ToString();", span="754-754"];
m0_518 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Name'', ''John Sheehan''))", span="716-716"];
m0_519 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Start_Date'', new DateTime(2009, 9, 25, 0, 6, 1)))", span="717-717"];
m0_520 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XAttribute(''Age'', 28))", span="718-718"];
m0_521 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Percent'', 99.9999m))", span="719-719"];
m0_522 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Big-Number'', long.MaxValue))", span="720-720"];
m0_523 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XAttribute(''Is-Cool'', false))", span="721-721"];
m0_524 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Ignore'', ''dummy''))", span="722-722"];
m0_525 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XAttribute(''Read-Only'', ''dummy''))", span="723-723"];
m0_526 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Unique-Id'', new Guid(GUID_STRING)))", span="724-724"];
m0_527 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Url'', ''http://example.com''))", span="725-725"];
m0_528 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Url-Path'', ''/foo/bar''))", span="726-726"];
m0_529 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Best-Friend'',\r\n                new XElement(''Name'', ''The Fonz''),\r\n                new XAttribute(''\\nSince'', 1952)))", span="727-729"];
m0_535 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(friends)", span="740-740"];
m0_542 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(foes)", span="751-751"];
m0_530 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="XElement friends = new XElement(''Friends'')", span="731-731"];
m0_531 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="int i = 0", span="733-733"];
m0_533 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="friends.Add(new XElement(''Friend'',\r\n                    new XElement(''Name'', ''Friend'' + i),\r\n                    new XAttribute(''\\nSince'', DateTime.Now.Year - i)))", span="735-737"];
m0_532 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="i < 10", span="733-733"];
m0_534 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="i++", span="733-733"];
m0_536 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="XElement foes = new XElement(''Foes'')", span="742-742"];
m0_537 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="foes.Add(new XAttribute(''Team'', ''Yankees''))", span="744-744"];
m0_540 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="foes.Add(new XElement(''Foe'', new XElement(''Nickname'', ''Foe'' + i)))", span="748-748"];
m0_538 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="int i = 0", span="746-746"];
m0_539 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="i < 5", span="746-746"];
m0_541 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="i++", span="746-746"];
m0_545 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", span="711-711"];
m0_32 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsIdFromAssembly()", file="NuSpecUpdateTask.cs", label="Assert.AreEqual(EXPECTED_ID, this.subject.Id)", span="108-108"];
m0_33 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsIdFromAssembly()", file="NuSpecUpdateTask.cs", label="Exit RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsIdFromAssembly()", span="106-106"];
m0_34 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsDescriptionFromAssembly()", file="NuSpecUpdateTask.cs", label="Entry RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsDescriptionFromAssembly()", span="112-112"];
m0_35 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsDescriptionFromAssembly()", file="NuSpecUpdateTask.cs", label="Assert.AreEqual(EXPECTED_DESCRIPTION, this.subject.Description)", span="114-114"];
m0_36 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsDescriptionFromAssembly()", file="NuSpecUpdateTask.cs", label="Exit RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsDescriptionFromAssembly()", span="112-112"];
m0_37 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsVersionFromAssemblyInfo()", file="NuSpecUpdateTask.cs", label="Entry RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsVersionFromAssemblyInfo()", span="118-118"];
m0_38 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsVersionFromAssemblyInfo()", file="NuSpecUpdateTask.cs", label="Assert.True(this.expectedVersion.IsMatch(this.subject.Version))", span="120-120"];
m0_39 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsVersionFromAssemblyInfo()", file="NuSpecUpdateTask.cs", label="Exit RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsVersionFromAssemblyInfo()", span="118-118"];
m0_302 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", span="419-419"];
m0_303 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="string doc = CreateLowercaseUnderscoresXml()", span="421-421"];
m0_304 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="422-422"];
m0_305 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer d = new XmlAttributeDeserializer()", span="423-423"];
m0_306 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="PersonForXml p = d.Deserialize<PersonForXml>(response)", span="424-424"];
m0_307 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(''John Sheehan'', p.Name)", span="426-426"];
m0_308 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new DateTime(2009, 9, 25, 0, 6, 1), p.StartDate)", span="427-427"];
m0_309 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(28, p.Age)", span="428-428"];
m0_310 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(long.MaxValue, p.BigNumber)", span="429-429"];
m0_311 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(99.9999m, p.Percent)", span="430-430"];
m0_312 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(false, p.IsCool)", span="431-431"];
m0_313 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new Guid(GUID_STRING), p.UniqueId)", span="432-432"];
m0_314 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="433-433"];
m0_315 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="434-434"];
m0_316 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.NotNull(p.Friends)", span="435-435"];
m0_317 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(10, p.Friends.Count)", span="436-436"];
m0_318 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.NotNull(p.BestFriend)", span="437-437"];
m0_319 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(''The Fonz'', p.BestFriend.Name)", span="438-438"];
m0_320 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(1952, p.BestFriend.Since)", span="439-439"];
m0_321 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.NotNull(p.Foes)", span="440-440"];
m0_322 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(5, p.Foes.Count)", span="441-441"];
m0_323 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(''Yankees'', p.Foes.Team)", span="442-442"];
m0_324 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", span="419-419"];
m0_425 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithAttributesAndNullValues()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithAttributesAndNullValues()", span="884-884"];
m0_619 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithAttributesAndNullValues()", file="XmlAttributeDeserializerTests.cs", label="XDocument doc = new XDocument()", span="886-886"];
m0_620 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithAttributesAndNullValues()", file="XmlAttributeDeserializerTests.cs", label="XElement root = new XElement(''NullableValues'')", span="887-887"];
m0_624 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithAttributesAndNullValues()", file="XmlAttributeDeserializerTests.cs", label="doc.Add(root)", span="895-895"];
m0_625 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithAttributesAndNullValues()", file="XmlAttributeDeserializerTests.cs", label="return doc.ToString();", span="897-897"];
m0_621 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithAttributesAndNullValues()", file="XmlAttributeDeserializerTests.cs", label="XElement idElement = new XElement(''Id'', null)", span="888-888"];
m0_623 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithAttributesAndNullValues()", file="XmlAttributeDeserializerTests.cs", label="root.Add(idElement,\r\n                new XElement(''StartDate'', null),\r\n                new XElement(''UniqueId'', null))", span="891-893"];
m0_622 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithAttributesAndNullValues()", file="XmlAttributeDeserializerTests.cs", label="idElement.SetAttributeValue(''SomeAttribute'', ''SomeAttribute_Value'')", span="890-890"];
m0_626 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithAttributesAndNullValues()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithAttributesAndNullValues()", span="884-884"];
m0_278 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", span="392-392"];
m0_279 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="string doc = CreateDashesXml()", span="394-394"];
m0_280 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="395-395"];
m0_281 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer d = new XmlAttributeDeserializer()", span="396-396"];
m0_282 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="PersonForXml p = d.Deserialize<PersonForXml>(response)", span="397-397"];
m0_283 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(''John Sheehan'', p.Name)", span="399-399"];
m0_284 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new DateTime(2009, 9, 25, 0, 6, 1), p.StartDate)", span="400-400"];
m0_285 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(28, p.Age)", span="401-401"];
m0_286 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(long.MaxValue, p.BigNumber)", span="402-402"];
m0_287 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(99.9999m, p.Percent)", span="403-403"];
m0_288 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(false, p.IsCool)", span="404-404"];
m0_289 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new Guid(GUID_STRING), p.UniqueId)", span="405-405"];
m0_290 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="406-406"];
m0_291 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="407-407"];
m0_292 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.NotNull(p.Friends)", span="408-408"];
m0_293 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(10, p.Friends.Count)", span="409-409"];
m0_294 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.NotNull(p.BestFriend)", span="410-410"];
m0_295 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(''The Fonz'', p.BestFriend.Name)", span="411-411"];
m0_296 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(1952, p.BestFriend.Since)", span="412-412"];
m0_297 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.NotNull(p.Foes)", span="413-413"];
m0_298 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(5, p.Foes.Count)", span="414-414"];
m0_299 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(''Yankees'', p.Foes.Team)", span="415-415"];
m0_300 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", span="392-392"];
m0_79 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", span="142-142"];
m0_80 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="string xmlpath = this.PathFor(''NestedListSample.xml'')", span="144-144"];
m0_81 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="145-145"];
m0_82 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer xml = new XmlAttributeDeserializer()", span="146-146"];
m0_83 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="InlineListSample output = xml.Deserialize<InlineListSample>(new RestResponse { Content = doc.ToString() })", span="147-147"];
m0_84 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="Assert.IsNotEmpty(output.Images)", span="149-149"];
m0_85 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(4, output.Images.Count)", span="150-150"];
m0_86 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", span="142-142"];
m0_221 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", span="321-321"];
m0_222 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="string doc = CreateAttributesXml()", span="323-323"];
m0_223 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="324-324"];
m0_224 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer d = new XmlAttributeDeserializer()", span="325-325"];
m0_225 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="PersonForXml p = d.Deserialize<PersonForXml>(response)", span="326-326"];
m0_226 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(''John Sheehan'', p.Name)", span="328-328"];
m0_227 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new DateTime(2009, 9, 25, 0, 6, 1), p.StartDate)", span="329-329"];
m0_228 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(28, p.Age)", span="330-330"];
m0_229 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(long.MaxValue, p.BigNumber)", span="331-331"];
m0_230 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(99.9999m, p.Percent)", span="332-332"];
m0_231 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(false, p.IsCool)", span="333-333"];
m0_232 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new Guid(GUID_STRING), p.UniqueId)", span="334-334"];
m0_233 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="335-335"];
m0_234 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="336-336"];
m0_235 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.NotNull(p.BestFriend)", span="337-337"];
m0_236 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(''The Fonz'', p.BestFriend.Name)", span="338-338"];
m0_237 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(1952, p.BestFriend.Since)", span="339-339"];
m0_238 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", span="321-321"];
m0_239 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateAttributesXml()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.CreateAttributesXml()", span="810-810"];
m0_578 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateAttributesXml()", file="XmlAttributeDeserializerTests.cs", label="XDocument doc = new XDocument()", span="812-812"];
m0_579 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateAttributesXml()", file="XmlAttributeDeserializerTests.cs", label="XElement root = new XElement(''Person'')", span="813-813"];
m0_592 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateAttributesXml()", file="XmlAttributeDeserializerTests.cs", label="doc.Add(root)", span="830-830"];
m0_593 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateAttributesXml()", file="XmlAttributeDeserializerTests.cs", label="return doc.ToString();", span="832-832"];
m0_580 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateAttributesXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XAttribute(''Name'', ''John Sheehan''))", span="815-815"];
m0_581 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateAttributesXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XAttribute(''StartDate'', new DateTime(2009, 9, 25, 0, 6, 1)))", span="816-816"];
m0_582 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateAttributesXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XAttribute(''Age'', 28))", span="817-817"];
m0_583 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateAttributesXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XAttribute(''Percent'', 99.9999m))", span="818-818"];
m0_584 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateAttributesXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XAttribute(''BigNumber'', long.MaxValue))", span="819-819"];
m0_585 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateAttributesXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XAttribute(''IsCool'', false))", span="820-820"];
m0_586 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateAttributesXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XAttribute(''Ignore'', ''dummy''))", span="821-821"];
m0_587 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateAttributesXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XAttribute(''ReadOnly'', ''dummy''))", span="822-822"];
m0_588 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateAttributesXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XAttribute(''UniqueId'', new Guid(GUID_STRING)))", span="823-823"];
m0_589 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateAttributesXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XAttribute(''Url'', ''http://example.com''))", span="824-824"];
m0_590 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateAttributesXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XAttribute(''UrlPath'', ''/foo/bar''))", span="825-825"];
m0_591 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateAttributesXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''BestFriend'',\r\n                new XAttribute(''Name'', ''The Fonz''),\r\n                new XAttribute(''\\nSince'', 1952)))", span="826-828"];
m0_594 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateAttributesXml()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.CreateAttributesXml()", span="810-810"];
m0_16 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenInformationalVersionIsNotDefined.PullsVersionAttributeInstead()", file="NuSpecUpdateTask.cs", label="Entry RestSharp.Tests.NuSpecUpdateTask.Execute.WhenInformationalVersionIsNotDefined.PullsVersionAttributeInstead()", span="57-57"];
m0_359 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Eventful_Xml()", span="486-486"];
m0_360 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlAttributeDeserializerTests.cs", label="string xmlpath = this.PathFor(''eventful.xml'')", span="488-488"];
m0_361 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlAttributeDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="489-489"];
m0_362 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlAttributeDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc.ToString() }", span="490-490"];
m0_363 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer d = new XmlAttributeDeserializer()", span="491-491"];
m0_364 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlAttributeDeserializerTests.cs", label="VenueSearch output = d.Deserialize<VenueSearch>(response)", span="492-492"];
m0_365 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlAttributeDeserializerTests.cs", label="Assert.IsNotEmpty(output.venues)", span="494-494"];
m0_366 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(3, output.venues.Count)", span="495-495"];
m0_367 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(''Tivoli'', output.venues[0].name)", span="496-496"];
m0_368 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(''http://eventful.com/brisbane/venues/tivoli-/V0-001-002169294-8'', output.venues[1].url)", span="497-497"];
m0_369 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(''V0-001-000266914-3'', output.venues[2].id)", span="498-498"];
m0_370 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Eventful_Xml()", span="486-486"];
m0_174 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", span="258-258"];
m0_175 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlAttributeDeserializerTests.cs", label="CultureInfo culture = CultureInfo.InvariantCulture", span="260-260"];
m0_176 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlAttributeDeserializerTests.cs", label="string format = ''dd yyyy MMM, hh:mm ss tt zzz''", span="261-261"];
m0_180 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''StartDate'', date.ToString(format, culture)))", span="266-266"];
m0_182 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer xml = new XmlAttributeDeserializer\r\n                                           {\r\n                                               \\nDateFormat = format,\r\n                                               Culture = culture\r\n                                           }", span="270-274"];
m0_177 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlAttributeDeserializerTests.cs", label="DateTime date = new DateTime(2010, 2, 8, 11, 11, 11)", span="262-262"];
m0_178 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlAttributeDeserializerTests.cs", label="XDocument doc = new XDocument()", span="263-263"];
m0_185 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(date, output.StartDate)", span="278-278"];
m0_179 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlAttributeDeserializerTests.cs", label="XElement root = new XElement(''Person'')", span="264-264"];
m0_181 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlAttributeDeserializerTests.cs", label="doc.Add(root)", span="268-268"];
m0_183 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlAttributeDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc.ToString() }", span="275-275"];
m0_184 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlAttributeDeserializerTests.cs", label="PersonForXml output = xml.Deserialize<PersonForXml>(response)", span="276-276"];
m0_186 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", span="258-258"];
m0_400 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Boolean_From_Number()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Boolean_From_Number()", span="544-544"];
m0_401 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Boolean_From_Number()", file="XmlAttributeDeserializerTests.cs", label="string xmlpath = this.PathFor(''boolean_from_number.xml'')", span="546-546"];
m0_402 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Boolean_From_Number()", file="XmlAttributeDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="547-547"];
m0_403 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Boolean_From_Number()", file="XmlAttributeDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc.ToString() }", span="548-548"];
m0_404 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Boolean_From_Number()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer d = new XmlAttributeDeserializer()", span="549-549"];
m0_405 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Boolean_From_Number()", file="XmlAttributeDeserializerTests.cs", label="BooleanTest output = d.Deserialize<BooleanTest>(response)", span="550-550"];
m0_406 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Boolean_From_Number()", file="XmlAttributeDeserializerTests.cs", label="Assert.True(output.Value)", span="552-552"];
m0_407 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Boolean_From_Number()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Boolean_From_Number()", span="544-544"];
m0_21 [cluster="System.Collections.Generic.IEnumerable<int>.Sum()", file="NuSpecUpdateTask.cs", label="Entry System.Collections.Generic.IEnumerable<int>.Sum()", span="0-0"];
m0_139 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithoutEmptyValues(System.Globalization.CultureInfo)", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithoutEmptyValues(System.Globalization.CultureInfo)", span="849-849"];
m0_601 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithoutEmptyValues(System.Globalization.CultureInfo)", file="XmlAttributeDeserializerTests.cs", label="XDocument doc = new XDocument()", span="851-851"];
m0_603 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithoutEmptyValues(System.Globalization.CultureInfo)", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Id'', 123),\r\n                new XElement(''StartDate'', new DateTime(2010, 2, 21, 9, 35, 00).ToString(\\nculture)),\r\n                new XElement(''UniqueId'', new Guid(GUID_STRING)))", span="854-856"];
m0_602 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithoutEmptyValues(System.Globalization.CultureInfo)", file="XmlAttributeDeserializerTests.cs", label="XElement root = new XElement(''NullableValues'')", span="852-852"];
m0_604 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithoutEmptyValues(System.Globalization.CultureInfo)", file="XmlAttributeDeserializerTests.cs", label="doc.Add(root)", span="858-858"];
m0_605 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithoutEmptyValues(System.Globalization.CultureInfo)", file="XmlAttributeDeserializerTests.cs", label="return doc.ToString();", span="860-860"];
m0_606 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithoutEmptyValues(System.Globalization.CultureInfo)", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithoutEmptyValues(System.Globalization.CultureInfo)", span="849-849"];
m0_0 [cluster="RestSharp.Tests.NuSpecUpdateTask.BaseNuSpecUpdateTest.BaseNuSpecUpdateTest()", file="NuSpecUpdateTask.cs", label="Entry RestSharp.Tests.NuSpecUpdateTask.BaseNuSpecUpdateTest.BaseNuSpecUpdateTest()", span="26-26"];
m0_1 [cluster="RestSharp.Tests.NuSpecUpdateTask.BaseNuSpecUpdateTest.BaseNuSpecUpdateTest()", color=green, community=0, file="NuSpecUpdateTask.cs", label="0: this.FileName = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, ''SampleData'', ''restsharp.nuspec'')", span="29-29"];
m0_2 [cluster="RestSharp.Tests.NuSpecUpdateTask.BaseNuSpecUpdateTest.BaseNuSpecUpdateTest()", file="NuSpecUpdateTask.cs", label="this.Setup()", span="29-29"];
m0_22 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.Setup()", file="NuSpecUpdateTask.cs", label="Entry RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.Setup()", span="92-92"];
m0_23 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.Setup()", file="NuSpecUpdateTask.cs", label="this.subject.SpecFile = FileName", span="94-94"];
m0_24 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.Setup()", file="NuSpecUpdateTask.cs", label="this.subject.SourceAssemblyFile = ''RestSharp.dll''", span="95-95"];
m0_25 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.Setup()", file="NuSpecUpdateTask.cs", label="this.result = this.subject.Execute()", span="96-96"];
m0_26 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.Setup()", file="NuSpecUpdateTask.cs", label="Exit RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.Setup()", span="92-92"];
m0_27 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.ReturnsTrue()", file="NuSpecUpdateTask.cs", label="Entry RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.ReturnsTrue()", span="100-100"];
m0_28 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.ReturnsTrue()", file="NuSpecUpdateTask.cs", label="Assert.True(this.result)", span="102-102"];
m0_29 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.ReturnsTrue()", file="NuSpecUpdateTask.cs", label="Exit RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.ReturnsTrue()", span="100-100"];
m0_30 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_To_List_Inheritor_From_Custom_Root_With_Attributes()", file="NuSpecUpdateTask.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_To_List_Inheritor_From_Custom_Root_With_Attributes()", span="58-58"];
m0_454 [cluster="System.TimeSpan.FromHours(double)", file="XmlAttributeDeserializerTests.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m0_326 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", span="446-446"];
m0_327 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlAttributeDeserializerTests.cs", label="string doc = CreateDashesXml()", span="448-448"];
m0_328 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlAttributeDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="449-449"];
m0_329 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer d = new XmlAttributeDeserializer()", span="450-450"];
m0_330 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlAttributeDeserializerTests.cs", label="PersonForXml p = d.Deserialize<PersonForXml>(response)", span="451-451"];
m0_331 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(''John Sheehan'', p.Name)", span="453-453"];
m0_332 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new DateTime(2009, 9, 25, 0, 6, 1), p.StartDate)", span="454-454"];
m0_333 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(28, p.Age)", span="455-455"];
m0_334 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(long.MaxValue, p.BigNumber)", span="456-456"];
m0_335 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(99.9999m, p.Percent)", span="457-457"];
m0_336 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(false, p.IsCool)", span="458-458"];
m0_337 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new Guid(GUID_STRING), p.UniqueId)", span="459-459"];
m0_338 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="460-460"];
m0_339 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="461-461"];
m0_340 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlAttributeDeserializerTests.cs", label="Assert.NotNull(p.Friends)", span="462-462"];
m0_341 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(10, p.Friends.Count)", span="463-463"];
m0_342 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlAttributeDeserializerTests.cs", label="Assert.NotNull(p.BestFriend)", span="464-464"];
m0_343 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(''The Fonz'', p.BestFriend.Name)", span="465-465"];
m0_344 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(1952, p.BestFriend.Since)", span="466-466"];
m0_345 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlAttributeDeserializerTests.cs", label="Assert.NotNull(p.Foes)", span="467-467"];
m0_346 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(5, p.Foes.Count)", span="468-468"];
m0_347 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(''Yankees'', p.Foes.Team)", span="469-469"];
m0_348 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", span="446-446"];
m0_87 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", span="154-154"];
m0_88 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="string xmlpath = this.PathFor(''NestedListSample.xml'')", span="156-156"];
m0_89 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="157-157"];
m0_90 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer xml = new XmlAttributeDeserializer()", span="158-158"];
m0_91 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="InlineListSample output = xml.Deserialize<InlineListSample>(new RestResponse { Content = doc.ToString() })", span="159-159"];
m0_92 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="Assert.IsNotEmpty(output.images)", span="161-161"];
m0_93 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(4, output.images.Count)", span="162-162"];
m0_94 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", span="154-154"];
m0_107 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", span="179-179"];
m0_108 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", file="XmlAttributeDeserializerTests.cs", label="string doc = CreateXmlWithEmptyInlineList()", span="181-181"];
m0_109 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer xml = new XmlAttributeDeserializer()", span="182-182"];
m0_110 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", file="XmlAttributeDeserializerTests.cs", label="EmptyListSample output = xml.Deserialize<EmptyListSample>(new RestResponse { Content = doc })", span="183-183"];
m0_111 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", file="XmlAttributeDeserializerTests.cs", label="Assert.NotNull(output.images)", span="185-185"];
m0_112 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", file="XmlAttributeDeserializerTests.cs", label="Assert.NotNull(output.Images)", span="186-186"];
m0_113 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", file="XmlAttributeDeserializerTests.cs", label="Assert.IsEmpty(output.images)", span="187-187"];
m0_114 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", file="XmlAttributeDeserializerTests.cs", label="Assert.IsEmpty(output.Images)", span="188-188"];
m0_115 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", span="179-179"];
m0_349 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", span="473-473"];
m0_350 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", file="XmlAttributeDeserializerTests.cs", label="string doc = CreateLowerCasedRootElementWithDashesXml()", span="475-475"];
m0_351 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", file="XmlAttributeDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="476-476"];
m0_352 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer d = new XmlAttributeDeserializer()", span="477-477"];
m0_353 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", file="XmlAttributeDeserializerTests.cs", label="List<IncomingInvoice> p = d.Deserialize<List<IncomingInvoice>>(response)", span="478-478"];
m0_354 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", file="XmlAttributeDeserializerTests.cs", label="Assert.NotNull(p)", span="480-480"];
m0_355 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(1, p.Count)", span="481-481"];
m0_356 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(45, p[0].ConceptId)", span="482-482"];
m0_357 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", span="473-473"];
m0_72 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name_With_Additional_\\nProperty()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name_With_\\nAdditional_Property()", span="131-131"];
m0_73 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name_With_Additional_\\nProperty()", file="XmlAttributeDeserializerTests.cs", label="string xmlpath = this.PathFor(''InlineListSample.xml'')", span="133-133"];
m0_74 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name_With_Additional_\\nProperty()", file="XmlAttributeDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="134-134"];
m0_75 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name_With_Additional_\\nProperty()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer xml = new XmlAttributeDeserializer()", span="135-135"];
m0_76 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name_With_Additional_\\nProperty()", file="XmlAttributeDeserializerTests.cs", label="InlineListSample output = xml.Deserialize<InlineListSample>(new RestResponse { Content = doc.ToString() })", span="136-136"];
m0_77 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name_With_Additional_\\nProperty()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(4, output.Count)", span="138-138"];
m0_78 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name_With_Additional_\\nProperty()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name_With_\\nAdditional_Property()", span="131-131"];
m0_196 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", span="769-769"];
m0_551 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", file="XmlAttributeDeserializerTests.cs", label="XDocument doc = new XDocument()", span="771-771"];
m0_552 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", file="XmlAttributeDeserializerTests.cs", label="XElement root = new XElement(''Person'')", span="772-772"];
m0_575 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", file="XmlAttributeDeserializerTests.cs", label="doc.Add(root)", span="805-805"];
m0_576 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", file="XmlAttributeDeserializerTests.cs", label="return doc.ToString();", span="807-807"];
m0_553 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Name'', ''John Sheehan''))", span="774-774"];
m0_554 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''StartDate'', new DateTime(2009, 9, 25, 0, 6, 1)))", span="775-775"];
m0_555 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Age'', 28))", span="776-776"];
m0_556 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Percent'', 99.9999m))", span="777-777"];
m0_557 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''BigNumber'', long.MaxValue))", span="778-778"];
m0_558 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''IsCool'', false))", span="779-779"];
m0_559 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Ignore'', ''dummy''))", span="780-780"];
m0_560 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''ReadOnly'', ''dummy''))", span="781-781"];
m0_561 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''UniqueId'', new Guid(GUID_STRING)))", span="782-782"];
m0_562 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''EmptyGuid'', ''''))", span="783-783"];
m0_563 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Url'', ''http://example.com''))", span="784-784"];
m0_564 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''UrlPath'', ''/foo/bar''))", span="785-785"];
m0_565 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Order'', ''third''))", span="786-786"];
m0_566 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Disposition'', ''so-so''))", span="787-787"];
m0_567 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''BestFriend'',\r\n                new XElement(''Name'', ''The Fonz''),\r\n                new XElement(''\\nSince'', 1952)))", span="788-790"];
m0_573 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(friends)", span="801-801"];
m0_574 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''FavoriteBand'',\r\n                new XElement(''Name'', ''Goldfinger'')))", span="802-803"];
m0_568 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", file="XmlAttributeDeserializerTests.cs", label="XElement friends = new XElement(''Friends'')", span="792-792"];
m0_569 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", file="XmlAttributeDeserializerTests.cs", label="int i = 0", span="794-794"];
m0_571 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", file="XmlAttributeDeserializerTests.cs", label="friends.Add(new XElement(''Friend'',\r\n                    new XElement(''Name'', ''Friend'' + i),\r\n                    new XElement(''\\nSince'', DateTime.Now.Year - i)))", span="796-798"];
m0_570 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", file="XmlAttributeDeserializerTests.cs", label="i < 10", span="794-794"];
m0_572 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", file="XmlAttributeDeserializerTests.cs", label="i++", span="794-794"];
m0_577 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", span="769-769"];
m0_48 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.UpdatesSpecFile()", file="NuSpecUpdateTask.cs", label="Assert.AreEqual(EXPECTED_AUTHORS, doc.Descendants(''authors'').First().Value)", span="136-136"];
m0_49 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.UpdatesSpecFile()", file="NuSpecUpdateTask.cs", label="Assert.AreEqual(EXPECTED_OWNERS, doc.Descendants(''owners'').First().Value)", span="137-137"];
m0_50 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.UpdatesSpecFile()", file="NuSpecUpdateTask.cs", label="Assert.True(this.expectedVersion.IsMatch(doc.Descendants(''version'').First().Value))", span="138-138"];
m0_51 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.UpdatesSpecFile()", file="NuSpecUpdateTask.cs", label="Exit RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.UpdatesSpecFile()", span="130-130"];
m0_52 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Directly_To_Lists_Off_Root_Element()", file="NuSpecUpdateTask.cs", label="List<Database> output = xml.Deserialize<List<Database>>(new RestResponse { Content = doc.ToString() })", span="100-100"];
m0_53 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Directly_To_Lists_Off_Root_Element()", file="NuSpecUpdateTask.cs", label="Assert.IsNotEmpty(output)", span="102-102"];
m0_54 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Directly_To_Lists_Off_Root_Element()", file="NuSpecUpdateTask.cs", label="Assert.AreEqual(2, output.Count)", span="103-103"];
m0_55 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Directly_To_Lists_Off_Root_Element()", file="NuSpecUpdateTask.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Directly_To_Lists_Off_Root_Element()", span="95-95"];
m0_187 [cluster="System.DateTime.ToString(string, System.IFormatProvider)", file="XmlAttributeDeserializerTests.cs", label="Entry System.DateTime.ToString(string, System.IFormatProvider)", span="0-0"];
m0_380 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Google_Weather_Xml()", span="516-516"];
m0_381 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file="XmlAttributeDeserializerTests.cs", label="string xmlpath = this.PathFor(''GoogleWeather.xml'')", span="518-518"];
m0_382 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file="XmlAttributeDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="519-519"];
m0_383 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file="XmlAttributeDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc.ToString() }", span="520-520"];
m0_384 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer d = new XmlAttributeDeserializer()", span="521-521"];
m0_385 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file="XmlAttributeDeserializerTests.cs", label="xml_api_reply output = d.Deserialize<xml_api_reply>(response)", span="522-522"];
m0_386 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file="XmlAttributeDeserializerTests.cs", label="Assert.IsNotEmpty(output.weather)", span="524-524"];
m0_387 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(4, output.weather.Count)", span="525-525"];
m0_388 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(''Sunny'', output.weather[0].condition.data)", span="526-526"];
m0_389 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Google_Weather_Xml()", span="516-516"];
m0_142 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_TimeSpan()", span="223-223"];
m0_143 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlAttributeDeserializerTests.cs", label="CultureInfo culture = CultureInfo.InvariantCulture", span="225-225"];
m0_144 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlAttributeDeserializerTests.cs", label="XDocument doc = new XDocument(culture)", span="226-226"];
m0_157 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer d = new XmlAttributeDeserializer { Culture = culture }", span="244-244"];
m0_145 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlAttributeDeserializerTests.cs", label="TimeSpan? nullTimespan = null", span="228-228"];
m0_155 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlAttributeDeserializerTests.cs", label="doc.Add(root)", span="241-241"];
m0_156 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlAttributeDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc.ToString() }", span="243-243"];
m0_146 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlAttributeDeserializerTests.cs", label="TimeSpan? nullValueTimeSpan = new TimeSpan(21, 30, 7)", span="229-229"];
m0_153 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''NullableWithoutValue'', nullTimespan))", span="238-238"];
m0_147 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlAttributeDeserializerTests.cs", label="XElement root = new XElement(''Person'')", span="231-231"];
m0_154 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''NullableWithValue'', nullValueTimeSpan))", span="239-239"];
m0_148 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Tick'', new TimeSpan(468006)))", span="233-233"];
m0_149 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Millisecond'', new TimeSpan(0, 0, 0, 0, 125)))", span="234-234"];
m0_150 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Second'', new TimeSpan(0, 0, 8)))", span="235-235"];
m0_151 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Minute'', new TimeSpan(0, 55, 2)))", span="236-236"];
m0_152 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Hour'', new TimeSpan(21, 30, 7)))", span="237-237"];
m0_158 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlAttributeDeserializerTests.cs", label="TimeSpanTestStructure payload = d.Deserialize<TimeSpanTestStructure>(response)", span="245-245"];
m0_159 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new TimeSpan(468006), payload.Tick)", span="247-247"];
m0_160 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new TimeSpan(0, 0, 0, 0, 125), payload.Millisecond)", span="248-248"];
m0_161 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new TimeSpan(0, 0, 8), payload.Second)", span="249-249"];
m0_162 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new TimeSpan(0, 55, 2), payload.Minute)", span="250-250"];
m0_163 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new TimeSpan(21, 30, 7), payload.Hour)", span="251-251"];
m0_164 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlAttributeDeserializerTests.cs", label="Assert.Null(payload.NullableWithoutValue)", span="252-252"];
m0_165 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlAttributeDeserializerTests.cs", label="Assert.NotNull(payload.NullableWithValue)", span="253-253"];
m0_166 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new TimeSpan(21, 30, 7), payload.NullableWithValue.Value)", span="254-254"];
m0_167 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_TimeSpan()", span="223-223"];
m0_240 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Ignore_Protected_Property_That_Exists_In_Data()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Ignore_Protected_Property_That_Exists_In_Data()", span="343-343"];
m0_241 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Ignore_Protected_Property_That_Exists_In_Data()", file="XmlAttributeDeserializerTests.cs", label="string doc = CreateElementsXml()", span="345-345"];
m0_242 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Ignore_Protected_Property_That_Exists_In_Data()", file="XmlAttributeDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="346-346"];
m0_243 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Ignore_Protected_Property_That_Exists_In_Data()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer d = new XmlAttributeDeserializer()", span="347-347"];
m0_244 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Ignore_Protected_Property_That_Exists_In_Data()", file="XmlAttributeDeserializerTests.cs", label="PersonForXml p = d.Deserialize<PersonForXml>(response)", span="348-348"];
m0_245 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Ignore_Protected_Property_That_Exists_In_Data()", file="XmlAttributeDeserializerTests.cs", label="Assert.Null(p.IgnoreProxy)", span="350-350"];
m0_246 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Ignore_Protected_Property_That_Exists_In_Data()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Ignore_Protected_Property_That_Exists_In_Data()", span="343-343"];
m0_417 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", span="568-568"];
m0_418 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", file="XmlAttributeDeserializerTests.cs", label="string doc = CreateXmlWithAttributesAndNullValues()", span="570-570"];
m0_419 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer xml = new XmlAttributeDeserializer()", span="571-571"];
m0_420 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", file="XmlAttributeDeserializerTests.cs", label="NullableValues output = xml.Deserialize<NullableValues>(new RestResponse { Content = doc })", span="572-572"];
m0_421 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", file="XmlAttributeDeserializerTests.cs", label="Assert.Null(output.Id)", span="574-574"];
m0_422 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", file="XmlAttributeDeserializerTests.cs", label="Assert.Null(output.StartDate)", span="575-575"];
m0_423 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", file="XmlAttributeDeserializerTests.cs", label="Assert.Null(output.UniqueId)", span="576-576"];
m0_424 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", span="568-568"];
m0_434 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", span="900-900"];
m0_628 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", file="XmlAttributeDeserializerTests.cs", label="XDocument doc = new XDocument()", span="902-902"];
m0_629 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", file="XmlAttributeDeserializerTests.cs", label="XElement root = new XElement(''NullableValues'')", span="903-903"];
m0_633 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", file="XmlAttributeDeserializerTests.cs", label="doc.Add(root)", span="911-911"];
m0_634 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", file="XmlAttributeDeserializerTests.cs", label="return doc.ToString();", span="913-913"];
m0_630 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", file="XmlAttributeDeserializerTests.cs", label="XElement idElement = new XElement(''Id'', null)", span="904-904"];
m0_632 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", file="XmlAttributeDeserializerTests.cs", label="root.Add(idElement,\r\n                new XElement(''StartDate'', null),\r\n                new XElement(''UniqueId'', new Guid(\\nGUID_STRING)))", span="907-909"];
m0_631 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", file="XmlAttributeDeserializerTests.cs", label="idElement.SetAttributeValue(''SomeAttribute'', ''SomeAttribute_Value'')", span="906-906"];
m0_635 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", span="900-900"];
m0_254 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", span="365-365"];
m0_255 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="string doc = CreateUnderscoresXml()", span="367-367"];
m0_256 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="368-368"];
m0_257 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer d = new XmlAttributeDeserializer()", span="369-369"];
m0_258 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="PersonForXml p = d.Deserialize<PersonForXml>(response)", span="370-370"];
m0_259 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(''John Sheehan'', p.Name)", span="372-372"];
m0_260 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new DateTime(2009, 9, 25, 0, 6, 1), p.StartDate)", span="373-373"];
m0_261 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(28, p.Age)", span="374-374"];
m0_262 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(long.MaxValue, p.BigNumber)", span="375-375"];
m0_263 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(99.9999m, p.Percent)", span="376-376"];
m0_264 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(false, p.IsCool)", span="377-377"];
m0_265 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new Guid(GUID_STRING), p.UniqueId)", span="378-378"];
m0_266 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="379-379"];
m0_267 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="380-380"];
m0_268 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.NotNull(p.Friends)", span="381-381"];
m0_269 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(10, p.Friends.Count)", span="382-382"];
m0_270 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.NotNull(p.BestFriend)", span="383-383"];
m0_271 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(''The Fonz'', p.BestFriend.Name)", span="384-384"];
m0_272 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(1952, p.BestFriend.Since)", span="385-385"];
m0_273 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.NotNull(p.Foes)", span="386-386"];
m0_274 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(5, p.Foes.Count)", span="387-387"];
m0_275 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(''Yankees'', p.Foes.Team)", span="388-388"];
m0_276 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", span="365-365"];
m0_140 [cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="XmlAttributeDeserializerTests.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0"];
m0_390 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Google_Weather_Xml_WithDeserializeAs()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Google_Weather_Xml_WithDeserializeAs()", span="530-530"];
m0_391 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Google_Weather_Xml_WithDeserializeAs()", file="XmlAttributeDeserializerTests.cs", label="string xmlpath = this.PathFor(''GoogleWeather.xml'')", span="532-532"];
m0_392 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Google_Weather_Xml_WithDeserializeAs()", file="XmlAttributeDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="533-533"];
m0_393 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Google_Weather_Xml_WithDeserializeAs()", file="XmlAttributeDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc.ToString() }", span="534-534"];
m0_394 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Google_Weather_Xml_WithDeserializeAs()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer d = new XmlAttributeDeserializer()", span="535-535"];
m0_395 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Google_Weather_Xml_WithDeserializeAs()", file="XmlAttributeDeserializerTests.cs", label="GoogleWeatherApi output = d.Deserialize<GoogleWeatherApi>(response)", span="536-536"];
m0_396 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Google_Weather_Xml_WithDeserializeAs()", file="XmlAttributeDeserializerTests.cs", label="Assert.IsNotEmpty(output.Weather)", span="538-538"];
m0_397 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Google_Weather_Xml_WithDeserializeAs()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(4, output.Weather.Count)", span="539-539"];
m0_398 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Google_Weather_Xml_WithDeserializeAs()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(''Sunny'', output.Weather[0].Condition.Data)", span="540-540"];
m0_399 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Google_Weather_Xml_WithDeserializeAs()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Google_Weather_Xml_WithDeserializeAs()", span="530-530"];
m0_607 [cluster="System.DateTime.ToString(System.IFormatProvider)", file="XmlAttributeDeserializerTests.cs", label="Entry System.DateTime.ToString(System.IFormatProvider)", span="0-0"];
m0_188 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_Class()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_Class()", span="282-282"];
m0_189 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_Class()", file="XmlAttributeDeserializerTests.cs", label="string doc = CreateElementsXml()", span="284-284"];
m0_190 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_Class()", file="XmlAttributeDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="285-285"];
m0_191 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_Class()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer d = new XmlAttributeDeserializer()", span="286-286"];
m0_192 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_Class()", file="XmlAttributeDeserializerTests.cs", label="PersonForXml p = d.Deserialize<PersonForXml>(response)", span="287-287"];
m0_193 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_Class()", file="XmlAttributeDeserializerTests.cs", label="Assert.NotNull(p.FavoriteBand)", span="289-289"];
m0_194 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_Class()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(''Goldfinger'', p.FavoriteBand.Name)", span="290-290"];
m0_195 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_Class()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_Class()", span="282-282"];
m0_435 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_DateTimeOffset()", span="592-592"];
m0_436 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlAttributeDeserializerTests.cs", label="CultureInfo culture = CultureInfo.InvariantCulture", span="594-594"];
m0_437 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlAttributeDeserializerTests.cs", label="XDocument doc = new XDocument(culture)", span="595-595"];
m0_446 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer d = new XmlAttributeDeserializer { Culture = culture }", span="610-610"];
m0_438 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlAttributeDeserializerTests.cs", label="DateTimeOffset dateTimeOffset = new DateTimeOffset(2013, 02, 08, 9, 18, 22, TimeSpan.FromHours(10))", span="597-597"];
m0_444 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlAttributeDeserializerTests.cs", label="doc.Add(root)", span="606-606"];
m0_445 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlAttributeDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc.ToString() }", span="609-609"];
m0_439 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlAttributeDeserializerTests.cs", label="DateTimeOffset? nullableDateTimeOffsetWithValue = new DateTimeOffset(2013, 02, 08, 9, 18, 23, TimeSpan.FromHours(10))", span="598-598"];
m0_441 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''DateTimeOffset'', dateTimeOffset))", span="602-602"];
m0_448 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(dateTimeOffset, payload.DateTimeOffset)", span="613-613"];
m0_440 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlAttributeDeserializerTests.cs", label="XElement root = new XElement(''Dates'')", span="600-600"];
m0_443 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''NullableDateTimeOffsetWithValue'', nullableDateTimeOffsetWithValue))", span="604-604"];
m0_451 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(nullableDateTimeOffsetWithValue, payload.NullableDateTimeOffsetWithValue)", span="616-616"];
m0_442 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''NullableDateTimeOffsetWithNull'', string.Empty))", span="603-603"];
m0_447 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlAttributeDeserializerTests.cs", label="DateTimeTestStructure payload = d.Deserialize<DateTimeTestStructure>(response)", span="611-611"];
m0_449 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlAttributeDeserializerTests.cs", label="Assert.Null(payload.NullableDateTimeOffsetWithNull)", span="614-614"];
m0_450 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlAttributeDeserializerTests.cs", label="Assert.True(payload.NullableDateTimeOffsetWithValue.HasValue)", span="615-615"];
m0_452 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_DateTimeOffset()", span="592-592"];
m0_220 [cluster="System.Uri.Uri(string, System.UriKind)", file="XmlAttributeDeserializerTests.cs", label="Entry System.Uri.Uri(string, System.UriKind)", span="0-0"];
m0_247 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", span="354-354"];
m0_248 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="XmlAttributeDeserializerTests.cs", label="string doc = CreateElementsXml()", span="356-356"];
m0_249 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="XmlAttributeDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="357-357"];
m0_250 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer d = new XmlAttributeDeserializer()", span="358-358"];
m0_251 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="XmlAttributeDeserializerTests.cs", label="PersonForXml p = d.Deserialize<PersonForXml>(response)", span="359-359"];
m0_252 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="XmlAttributeDeserializerTests.cs", label="Assert.Null(p.ReadOnlyProxy)", span="361-361"];
m0_253 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", span="354-354"];
m0_125 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithNullValues()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithNullValues()", span="835-835"];
m0_595 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithNullValues()", file="XmlAttributeDeserializerTests.cs", label="XDocument doc = new XDocument()", span="837-837"];
m0_596 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithNullValues()", file="XmlAttributeDeserializerTests.cs", label="XElement root = new XElement(''NullableValues'')", span="838-838"];
m0_598 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithNullValues()", file="XmlAttributeDeserializerTests.cs", label="doc.Add(root)", span="844-844"];
m0_599 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithNullValues()", file="XmlAttributeDeserializerTests.cs", label="return doc.ToString();", span="846-846"];
m0_597 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithNullValues()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Id'', null),\r\n                new XElement(''StartDate'', null),\r\n                new XElement(''UniqueId'', \\nnull))", span="840-842"];
m0_600 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithNullValues()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithNullValues()", span="835-835"];
m0_173 [cluster="System.TimeSpan.TimeSpan(int, int, int, int, int)", file="XmlAttributeDeserializerTests.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int, int, int)", span="0-0"];
m0_17 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenInformationalVersionIsNotDefined.PullsVersionAttributeInstead()", file="NuSpecUpdateTask.cs", label="Build.NuSpecUpdateTask task = new Build.NuSpecUpdateTask\r\n                    {\r\n                        SpecFile = FileName,\r\n                        \\nSourceAssemblyFile = ''RestSharp.Tests.dll''\r\n                    }", span="59-63"];
m0_19 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenInformationalVersionIsNotDefined.PullsVersionAttributeInstead()", file="NuSpecUpdateTask.cs", label="Assert.AreEqual(''1.0.0.0'', task.Version)", span="67-67"];
m0_20 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenInformationalVersionIsNotDefined.PullsVersionAttributeInstead()", file="NuSpecUpdateTask.cs", label="Exit RestSharp.Tests.NuSpecUpdateTask.Execute.WhenInformationalVersionIsNotDefined.PullsVersionAttributeInstead()", span="57-57"];
m0_31 [cluster="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsIdFromAssembly()", file="NuSpecUpdateTask.cs", label="Entry RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid.PullsIdFromAssembly()", span="106-106"];
m0_3 [cluster="RestSharp.Tests.NuSpecUpdateTask.BaseNuSpecUpdateTest.BaseNuSpecUpdateTest()", file="NuSpecUpdateTask.cs", label="Exit RestSharp.Tests.NuSpecUpdateTask.BaseNuSpecUpdateTest.BaseNuSpecUpdateTest()", span="26-26"];
m1_1 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.PathFor(string)", file="XmlAttributeDeserializerTests.cs", label="return Path.Combine(this.sampleDataPath, sampleFile);", span="39-39"];
m1_139 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithoutEmptyValues(System.Globalization.CultureInfo)", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithoutEmptyValues(System.Globalization.CultureInfo)", span="849-849"];
m1_601 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithoutEmptyValues(System.Globalization.CultureInfo)", file="XmlAttributeDeserializerTests.cs", label="XDocument doc = new XDocument()", span="851-851"];
m1_603 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithoutEmptyValues(System.Globalization.CultureInfo)", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Id'', 123),\r\n                new XElement(''StartDate'', new DateTime(2010, 2, 21, 9, 35, 00).ToString(\\nculture)),\r\n                new XElement(''UniqueId'', new Guid(GUID_STRING)))", span="854-856"];
m1_602 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithoutEmptyValues(System.Globalization.CultureInfo)", file="XmlAttributeDeserializerTests.cs", label="XElement root = new XElement(''NullableValues'')", span="852-852"];
m1_604 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithoutEmptyValues(System.Globalization.CultureInfo)", file="XmlAttributeDeserializerTests.cs", label="doc.Add(root)", span="858-858"];
m1_605 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithoutEmptyValues(System.Globalization.CultureInfo)", file="XmlAttributeDeserializerTests.cs", label="return doc.ToString();", span="860-860"];
m1_606 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithoutEmptyValues(System.Globalization.CultureInfo)", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithoutEmptyValues(System.Globalization.CultureInfo)", span="849-849"];
m1_325 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", span="665-665"];
m1_486 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="XDocument doc = new XDocument()", span="667-667"];
m1_487 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="XElement root = new XElement(''Person'')", span="668-668"];
m1_513 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="doc.Add(root)", span="706-706"];
m1_514 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="return doc.ToString();", span="708-708"];
m1_488 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Name'', ''John Sheehan''))", span="670-670"];
m1_489 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''start_date'', new DateTime(2009, 9, 25, 0, 6, 1)))", span="671-671"];
m1_490 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XAttribute(''Age'', 28))", span="672-672"];
m1_491 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Percent'', 99.9999m))", span="673-673"];
m1_492 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''big_number'', long.MaxValue))", span="674-674"];
m1_493 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XAttribute(''is_cool'', false))", span="675-675"];
m1_494 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Ignore'', ''dummy''))", span="676-676"];
m1_495 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XAttribute(''read_only'', ''dummy''))", span="677-677"];
m1_496 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''unique_id'', new Guid(GUID_STRING)))", span="678-678"];
m1_497 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Url'', ''http://example.com''))", span="679-679"];
m1_498 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''url_path'', ''/foo/bar''))", span="680-680"];
m1_499 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''best_friend'',\r\n                new XElement(''name'', ''The Fonz''),\r\n                new XAttribute(''\\nSince'', 1952)))", span="681-683"];
m1_505 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(friends)", span="694-694"];
m1_512 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(foes)", span="705-705"];
m1_500 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="XElement friends = new XElement(''Friends'')", span="685-685"];
m1_501 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="int i = 0", span="687-687"];
m1_503 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="friends.Add(new XElement(''Friend'',\r\n                    new XElement(''Name'', ''Friend'' + i),\r\n                    new XAttribute(''\\nSince'', DateTime.Now.Year - i)))", span="689-691"];
m1_502 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="i < 10", span="687-687"];
m1_504 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="i++", span="687-687"];
m1_506 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="XElement foes = new XElement(''Foes'')", span="696-696"];
m1_507 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="foes.Add(new XAttribute(''Team'', ''Yankees''))", span="698-698"];
m1_510 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="foes.Add(new XElement(''Foe'', new XElement(''Nickname'', ''Foe'' + i)))", span="702-702"];
m1_508 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="int i = 0", span="700-700"];
m1_509 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="i < 5", span="700-700"];
m1_511 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="i++", span="700-700"];
m1_515 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowercaseUnderscoresXml()", span="665-665"];
m1_173 [cluster="System.TimeSpan.TimeSpan(int, int, int, int, int)", file="XmlAttributeDeserializerTests.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int, int, int)", span="0-0"];
m1_400 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Boolean_From_Number()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Boolean_From_Number()", span="544-544"];
m1_401 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Boolean_From_Number()", file="XmlAttributeDeserializerTests.cs", label="string xmlpath = this.PathFor(''boolean_from_number.xml'')", span="546-546"];
m1_402 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Boolean_From_Number()", file="XmlAttributeDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="547-547"];
m1_403 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Boolean_From_Number()", file="XmlAttributeDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc.ToString() }", span="548-548"];
m1_404 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Boolean_From_Number()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer d = new XmlAttributeDeserializer()", span="549-549"];
m1_405 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Boolean_From_Number()", file="XmlAttributeDeserializerTests.cs", label="BooleanTest output = d.Deserialize<BooleanTest>(response)", span="550-550"];
m1_406 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Boolean_From_Number()", file="XmlAttributeDeserializerTests.cs", label="Assert.True(output.Value)", span="552-552"];
m1_407 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Boolean_From_Number()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Boolean_From_Number()", span="544-544"];
m1_277 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", span="619-619"];
m1_470 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="int i = 0", span="641-641"];
m1_455 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="XDocument doc = new XDocument()", span="621-621"];
m1_456 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="XElement root = new XElement(''Person'')", span="622-622"];
m1_482 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="doc.Add(root)", span="660-660"];
m1_483 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="return doc.ToString();", span="662-662"];
m1_457 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Name'', ''John Sheehan''))", span="624-624"];
m1_458 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Start_Date'', new DateTime(2009, 9, 25, 0, 6, 1)))", span="625-625"];
m1_459 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XAttribute(''Age'', 28))", span="626-626"];
m1_460 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Percent'', 99.9999m))", span="627-627"];
m1_461 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Big_Number'', long.MaxValue))", span="628-628"];
m1_462 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XAttribute(''Is_Cool'', false))", span="629-629"];
m1_463 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Ignore'', ''dummy''))", span="630-630"];
m1_464 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XAttribute(''Read_Only'', ''dummy''))", span="631-631"];
m1_465 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Unique_Id'', new Guid(GUID_STRING)))", span="632-632"];
m1_466 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Url'', ''http://example.com''))", span="633-633"];
m1_467 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Url_Path'', ''/foo/bar''))", span="634-634"];
m1_468 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Best_Friend'',\r\n                new XElement(''Name'', ''The Fonz''),\r\n                new XAttribute(''\\nSince'', 1952)))", span="635-637"];
m1_474 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(friends)", span="648-648"];
m1_481 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(foes)", span="659-659"];
m1_469 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="XElement friends = new XElement(''Friends'')", span="639-639"];
m1_472 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="friends.Add(new XElement(''Friend'',\r\n                    new XElement(''Name'', ''Friend'' + i),\r\n                    new XAttribute(''\\nSince'', DateTime.Now.Year - i)))", span="643-645"];
m1_471 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="i < 10", span="641-641"];
m1_473 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="i++", span="641-641"];
m1_475 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="XElement foes = new XElement(''Foes'')", span="650-650"];
m1_476 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="foes.Add(new XAttribute(''Team'', ''Yankees''))", span="652-652"];
m1_479 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="foes.Add(new XElement(''Foe'', new XElement(''Nickname'', ''Foe'' + i)))", span="656-656"];
m1_477 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="int i = 0", span="654-654"];
m1_478 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="i < 5", span="654-654"];
m1_480 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="i++", span="654-654"];
m1_484 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.CreateUnderscoresXml()", span="619-619"];
m1_435 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_DateTimeOffset()", span="592-592"];
m1_436 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlAttributeDeserializerTests.cs", label="CultureInfo culture = CultureInfo.InvariantCulture", span="594-594"];
m1_437 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlAttributeDeserializerTests.cs", label="XDocument doc = new XDocument(culture)", span="595-595"];
m1_446 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer d = new XmlAttributeDeserializer { Culture = culture }", span="610-610"];
m1_438 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlAttributeDeserializerTests.cs", label="DateTimeOffset dateTimeOffset = new DateTimeOffset(2013, 02, 08, 9, 18, 22, TimeSpan.FromHours(10))", span="597-597"];
m1_444 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlAttributeDeserializerTests.cs", label="doc.Add(root)", span="606-606"];
m1_445 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlAttributeDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc.ToString() }", span="609-609"];
m1_439 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlAttributeDeserializerTests.cs", label="DateTimeOffset? nullableDateTimeOffsetWithValue = new DateTimeOffset(2013, 02, 08, 9, 18, 23, TimeSpan.FromHours(10))", span="598-598"];
m1_441 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''DateTimeOffset'', dateTimeOffset))", span="602-602"];
m1_448 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(dateTimeOffset, payload.DateTimeOffset)", span="613-613"];
m1_440 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlAttributeDeserializerTests.cs", label="XElement root = new XElement(''Dates'')", span="600-600"];
m1_443 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''NullableDateTimeOffsetWithValue'', nullableDateTimeOffsetWithValue))", span="604-604"];
m1_451 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(nullableDateTimeOffsetWithValue, payload.NullableDateTimeOffsetWithValue)", span="616-616"];
m1_442 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''NullableDateTimeOffsetWithNull'', string.Empty))", span="603-603"];
m1_447 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlAttributeDeserializerTests.cs", label="DateTimeTestStructure payload = d.Deserialize<DateTimeTestStructure>(response)", span="611-611"];
m1_449 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlAttributeDeserializerTests.cs", label="Assert.Null(payload.NullableDateTimeOffsetWithNull)", span="614-614"];
m1_450 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlAttributeDeserializerTests.cs", label="Assert.True(payload.NullableDateTimeOffsetWithValue.HasValue)", span="615-615"];
m1_452 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_DateTimeOffset()", span="592-592"];
m1_454 [cluster="System.TimeSpan.FromHours(double)", file="XmlAttributeDeserializerTests.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m1_15 [cluster="RestSharp.Deserializers.XmlAttributeDeserializer.XmlAttributeDeserializer()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Deserializers.XmlAttributeDeserializer.XmlAttributeDeserializer()", span="24-24"];
m1_95 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", span="166-166"];
m1_96 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", file="XmlAttributeDeserializerTests.cs", label="string doc = CreateXmlWithEmptyNestedList()", span="168-168"];
m1_97 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer xml = new XmlAttributeDeserializer()", span="169-169"];
m1_98 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", file="XmlAttributeDeserializerTests.cs", label="EmptyListSample output = xml.Deserialize<EmptyListSample>(new RestResponse { Content = doc })", span="170-170"];
m1_99 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", file="XmlAttributeDeserializerTests.cs", label="Assert.NotNull(output.images)", span="172-172"];
m1_100 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", file="XmlAttributeDeserializerTests.cs", label="Assert.NotNull(output.Images)", span="173-173"];
m1_101 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", file="XmlAttributeDeserializerTests.cs", label="Assert.IsEmpty(output.images)", span="174-174"];
m1_102 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", file="XmlAttributeDeserializerTests.cs", label="Assert.IsEmpty(output.Images)", span="175-175"];
m1_103 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", span="166-166"];
m1_371 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lastfm_Xml()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lastfm_Xml()", span="502-502"];
m1_372 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lastfm_Xml()", file="XmlAttributeDeserializerTests.cs", label="string xmlpath = this.PathFor(''Lastfm.xml'')", span="504-504"];
m1_373 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lastfm_Xml()", file="XmlAttributeDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="505-505"];
m1_374 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lastfm_Xml()", file="XmlAttributeDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc.ToString() }", span="506-506"];
m1_375 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lastfm_Xml()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer d = new XmlAttributeDeserializer()", span="507-507"];
m1_376 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lastfm_Xml()", file="XmlAttributeDeserializerTests.cs", label="Event output = d.Deserialize<Event>(response)", span="508-508"];
m1_377 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lastfm_Xml()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(''http://www.last.fm/event/328799+Philip+Glass+at+Barbican+Centre+on+12+June+2008'', output.url)", span="511-511"];
m1_378 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lastfm_Xml()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(''http://www.last.fm/venue/8777860+Barbican+Centre'', output.venue.url)", span="512-512"];
m1_379 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lastfm_Xml()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lastfm_Xml()", span="502-502"];
m1_116 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithEmptyInlineList()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithEmptyInlineList()", span="874-874"];
m1_614 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithEmptyInlineList()", file="XmlAttributeDeserializerTests.cs", label="XDocument doc = new XDocument()", span="876-876"];
m1_615 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithEmptyInlineList()", file="XmlAttributeDeserializerTests.cs", label="XElement root = new XElement(''EmptyListSample'')", span="877-877"];
m1_616 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithEmptyInlineList()", file="XmlAttributeDeserializerTests.cs", label="doc.Add(root)", span="879-879"];
m1_617 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithEmptyInlineList()", file="XmlAttributeDeserializerTests.cs", label="return doc.ToString();", span="881-881"];
m1_618 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithEmptyInlineList()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithEmptyInlineList()", span="874-874"];
m1_302 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", span="419-419"];
m1_303 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="string doc = CreateLowercaseUnderscoresXml()", span="421-421"];
m1_304 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="422-422"];
m1_305 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer d = new XmlAttributeDeserializer()", span="423-423"];
m1_306 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="PersonForXml p = d.Deserialize<PersonForXml>(response)", span="424-424"];
m1_307 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(''John Sheehan'', p.Name)", span="426-426"];
m1_308 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new DateTime(2009, 9, 25, 0, 6, 1), p.StartDate)", span="427-427"];
m1_309 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(28, p.Age)", span="428-428"];
m1_310 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(long.MaxValue, p.BigNumber)", span="429-429"];
m1_311 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(99.9999m, p.Percent)", span="430-430"];
m1_312 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(false, p.IsCool)", span="431-431"];
m1_313 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new Guid(GUID_STRING), p.UniqueId)", span="432-432"];
m1_314 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="433-433"];
m1_315 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="434-434"];
m1_316 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.NotNull(p.Friends)", span="435-435"];
m1_317 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(10, p.Friends.Count)", span="436-436"];
m1_318 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.NotNull(p.BestFriend)", span="437-437"];
m1_319 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(''The Fonz'', p.BestFriend.Name)", span="438-438"];
m1_320 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(1952, p.BestFriend.Since)", span="439-439"];
m1_321 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.NotNull(p.Foes)", span="440-440"];
m1_322 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(5, p.Foes.Count)", span="441-441"];
m1_323 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(''Yankees'', p.Foes.Team)", span="442-442"];
m1_324 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", span="419-419"];
m1_32 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_To_Standalone_List_Without_Matching_Class_Case()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_To_Standalone_List_Without_Matching_Class_Case()", span="71-71"];
m1_33 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_To_Standalone_List_Without_Matching_Class_Case()", file="XmlAttributeDeserializerTests.cs", label="string xmlpath = this.PathFor(''InlineListSample.xml'')", span="73-73"];
m1_34 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_To_Standalone_List_Without_Matching_Class_Case()", file="XmlAttributeDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="74-74"];
m1_35 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_To_Standalone_List_Without_Matching_Class_Case()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer xml = new XmlAttributeDeserializer()", span="75-75"];
m1_36 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_To_Standalone_List_Without_Matching_Class_Case()", file="XmlAttributeDeserializerTests.cs", label="List<Image> output = xml.Deserialize<List<Image>>(new RestResponse { Content = doc.ToString() })", span="76-76"];
m1_37 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_To_Standalone_List_Without_Matching_Class_Case()", file="XmlAttributeDeserializerTests.cs", label="Assert.IsNotEmpty(output)", span="78-78"];
m1_38 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_To_Standalone_List_Without_Matching_Class_Case()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(4, output.Count)", span="79-79"];
m1_39 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_To_Standalone_List_Without_Matching_Class_Case()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_To_Standalone_List_Without_Matching_Class_Case()", span="71-71"];
m1_87 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", span="154-154"];
m1_88 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="string xmlpath = this.PathFor(''NestedListSample.xml'')", span="156-156"];
m1_89 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="157-157"];
m1_90 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer xml = new XmlAttributeDeserializer()", span="158-158"];
m1_91 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="InlineListSample output = xml.Deserialize<InlineListSample>(new RestResponse { Content = doc.ToString() })", span="159-159"];
m1_92 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="Assert.IsNotEmpty(output.images)", span="161-161"];
m1_93 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(4, output.images.Count)", span="162-162"];
m1_94 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", span="154-154"];
m1_169 [cluster="System.TimeSpan.TimeSpan(int, int, int)", file="XmlAttributeDeserializerTests.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int)", span="0-0"];
m1_141 [cluster="System.Guid.Guid(string)", file="XmlAttributeDeserializerTests.cs", label="Entry System.Guid.Guid(string)", span="0-0"];
m1_127 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", span="204-204"];
m1_128 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlAttributeDeserializerTests.cs", label="CultureInfo culture = CultureInfo.InvariantCulture", span="206-206"];
m1_129 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlAttributeDeserializerTests.cs", label="string doc = CreateXmlWithoutEmptyValues(culture)", span="207-207"];
m1_130 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer xml = new XmlAttributeDeserializer\r\n                                           {\r\n                                               \\nCulture = culture\r\n                                           }", span="208-211"];
m1_131 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlAttributeDeserializerTests.cs", label="NullableValues output = xml.Deserialize<NullableValues>(new RestResponse { Content = doc })", span="212-212"];
m1_132 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlAttributeDeserializerTests.cs", label="Assert.NotNull(output.Id)", span="214-214"];
m1_133 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlAttributeDeserializerTests.cs", label="Assert.NotNull(output.StartDate)", span="215-215"];
m1_134 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlAttributeDeserializerTests.cs", label="Assert.NotNull(output.UniqueId)", span="216-216"];
m1_135 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(123, output.Id)", span="217-217"];
m1_136 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new DateTime(2010, 2, 21, 9, 35, 00), output.StartDate)", span="218-218"];
m1_137 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new Guid(GUID_STRING), output.UniqueId)", span="219-219"];
m1_138 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", span="204-204"];
m1_409 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Boolean_From_String()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Boolean_From_String()", span="556-556"];
m1_410 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Boolean_From_String()", file="XmlAttributeDeserializerTests.cs", label="string xmlpath = this.PathFor(''boolean_from_string.xml'')", span="558-558"];
m1_411 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Boolean_From_String()", file="XmlAttributeDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="559-559"];
m1_412 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Boolean_From_String()", file="XmlAttributeDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc.ToString() }", span="560-560"];
m1_413 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Boolean_From_String()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer d = new XmlAttributeDeserializer()", span="561-561"];
m1_414 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Boolean_From_String()", file="XmlAttributeDeserializerTests.cs", label="BooleanTest output = d.Deserialize<BooleanTest>(response)", span="562-562"];
m1_415 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Boolean_From_String()", file="XmlAttributeDeserializerTests.cs", label="Assert.True(output.Value)", span="564-564"];
m1_416 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Boolean_From_String()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Boolean_From_String()", span="556-556"];
m1_48 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Directly_To_Lists_Off_Root_Element()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Directly_To_Lists_Off_Root_Element()", span="95-95"];
m1_49 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Directly_To_Lists_Off_Root_Element()", file="XmlAttributeDeserializerTests.cs", label="string xmlpath = this.PathFor(''directlists.xml'')", span="97-97"];
m1_50 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Directly_To_Lists_Off_Root_Element()", file="XmlAttributeDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="98-98"];
m1_51 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Directly_To_Lists_Off_Root_Element()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer xml = new XmlAttributeDeserializer()", span="99-99"];
m1_52 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Directly_To_Lists_Off_Root_Element()", file="XmlAttributeDeserializerTests.cs", label="List<Database> output = xml.Deserialize<List<Database>>(new RestResponse { Content = doc.ToString() })", span="100-100"];
m1_53 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Directly_To_Lists_Off_Root_Element()", file="XmlAttributeDeserializerTests.cs", label="Assert.IsNotEmpty(output)", span="102-102"];
m1_54 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Directly_To_Lists_Off_Root_Element()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(2, output.Count)", span="103-103"];
m1_55 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Directly_To_Lists_Off_Root_Element()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Directly_To_Lists_Off_Root_Element()", span="95-95"];
m1_79 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", span="142-142"];
m1_80 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="string xmlpath = this.PathFor(''NestedListSample.xml'')", span="144-144"];
m1_81 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="145-145"];
m1_82 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer xml = new XmlAttributeDeserializer()", span="146-146"];
m1_83 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="InlineListSample output = xml.Deserialize<InlineListSample>(new RestResponse { Content = doc.ToString() })", span="147-147"];
m1_84 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="Assert.IsNotEmpty(output.Images)", span="149-149"];
m1_85 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(4, output.Images.Count)", span="150-150"];
m1_86 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", span="142-142"];
m1_187 [cluster="System.DateTime.ToString(string, System.IFormatProvider)", file="XmlAttributeDeserializerTests.cs", label="Entry System.DateTime.ToString(string, System.IFormatProvider)", span="0-0"];
m1_16 [cluster="RestSharp.RestResponse.RestResponse()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.RestResponse.RestResponse()", span="192-192"];
m1_142 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_TimeSpan()", span="223-223"];
m1_143 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlAttributeDeserializerTests.cs", label="CultureInfo culture = CultureInfo.InvariantCulture", span="225-225"];
m1_144 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlAttributeDeserializerTests.cs", label="XDocument doc = new XDocument(culture)", span="226-226"];
m1_157 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer d = new XmlAttributeDeserializer { Culture = culture }", span="244-244"];
m1_145 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlAttributeDeserializerTests.cs", label="TimeSpan? nullTimespan = null", span="228-228"];
m1_155 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlAttributeDeserializerTests.cs", label="doc.Add(root)", span="241-241"];
m1_156 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlAttributeDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc.ToString() }", span="243-243"];
m1_146 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlAttributeDeserializerTests.cs", label="TimeSpan? nullValueTimeSpan = new TimeSpan(21, 30, 7)", span="229-229"];
m1_153 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''NullableWithoutValue'', nullTimespan))", span="238-238"];
m1_147 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlAttributeDeserializerTests.cs", label="XElement root = new XElement(''Person'')", span="231-231"];
m1_154 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''NullableWithValue'', nullValueTimeSpan))", span="239-239"];
m1_148 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Tick'', new TimeSpan(468006)))", span="233-233"];
m1_149 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Millisecond'', new TimeSpan(0, 0, 0, 0, 125)))", span="234-234"];
m1_150 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Second'', new TimeSpan(0, 0, 8)))", span="235-235"];
m1_151 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Minute'', new TimeSpan(0, 55, 2)))", span="236-236"];
m1_152 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Hour'', new TimeSpan(21, 30, 7)))", span="237-237"];
m1_158 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlAttributeDeserializerTests.cs", label="TimeSpanTestStructure payload = d.Deserialize<TimeSpanTestStructure>(response)", span="245-245"];
m1_159 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new TimeSpan(468006), payload.Tick)", span="247-247"];
m1_160 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new TimeSpan(0, 0, 0, 0, 125), payload.Millisecond)", span="248-248"];
m1_161 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new TimeSpan(0, 0, 8), payload.Second)", span="249-249"];
m1_162 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new TimeSpan(0, 55, 2), payload.Minute)", span="250-250"];
m1_163 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new TimeSpan(21, 30, 7), payload.Hour)", span="251-251"];
m1_164 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlAttributeDeserializerTests.cs", label="Assert.Null(payload.NullableWithoutValue)", span="252-252"];
m1_165 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlAttributeDeserializerTests.cs", label="Assert.NotNull(payload.NullableWithValue)", span="253-253"];
m1_166 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new TimeSpan(21, 30, 7), payload.NullableWithValue.Value)", span="254-254"];
m1_167 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_TimeSpan()", span="223-223"];
m1_239 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateAttributesXml()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.CreateAttributesXml()", span="810-810"];
m1_578 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateAttributesXml()", file="XmlAttributeDeserializerTests.cs", label="XDocument doc = new XDocument()", span="812-812"];
m1_579 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateAttributesXml()", file="XmlAttributeDeserializerTests.cs", label="XElement root = new XElement(''Person'')", span="813-813"];
m1_592 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateAttributesXml()", file="XmlAttributeDeserializerTests.cs", label="doc.Add(root)", span="830-830"];
m1_593 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateAttributesXml()", file="XmlAttributeDeserializerTests.cs", label="return doc.ToString();", span="832-832"];
m1_580 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateAttributesXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XAttribute(''Name'', ''John Sheehan''))", span="815-815"];
m1_581 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateAttributesXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XAttribute(''StartDate'', new DateTime(2009, 9, 25, 0, 6, 1)))", span="816-816"];
m1_582 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateAttributesXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XAttribute(''Age'', 28))", span="817-817"];
m1_583 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateAttributesXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XAttribute(''Percent'', 99.9999m))", span="818-818"];
m1_584 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateAttributesXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XAttribute(''BigNumber'', long.MaxValue))", span="819-819"];
m1_585 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateAttributesXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XAttribute(''IsCool'', false))", span="820-820"];
m1_586 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateAttributesXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XAttribute(''Ignore'', ''dummy''))", span="821-821"];
m1_587 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateAttributesXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XAttribute(''ReadOnly'', ''dummy''))", span="822-822"];
m1_588 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateAttributesXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XAttribute(''UniqueId'', new Guid(GUID_STRING)))", span="823-823"];
m1_589 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateAttributesXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XAttribute(''Url'', ''http://example.com''))", span="824-824"];
m1_590 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateAttributesXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XAttribute(''UrlPath'', ''/foo/bar''))", span="825-825"];
m1_591 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateAttributesXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''BestFriend'',\r\n                new XAttribute(''Name'', ''The Fonz''),\r\n                new XAttribute(''\\nSince'', 1952)))", span="826-828"];
m1_594 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateAttributesXml()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.CreateAttributesXml()", span="810-810"];
m1_64 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", span="119-119"];
m1_65 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="string xmlpath = this.PathFor(''InlineListSample.xml'')", span="121-121"];
m1_66 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="122-122"];
m1_67 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer xml = new XmlAttributeDeserializer()", span="123-123"];
m1_68 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="InlineListSample output = xml.Deserialize<InlineListSample>(new RestResponse { Content = doc.ToString() })", span="124-124"];
m1_69 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="Assert.IsNotEmpty(output.images)", span="126-126"];
m1_70 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(4, output.images.Count)", span="127-127"];
m1_71 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", span="119-119"];
m1_247 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", span="354-354"];
m1_248 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="XmlAttributeDeserializerTests.cs", label="string doc = CreateElementsXml()", span="356-356"];
m1_249 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="XmlAttributeDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="357-357"];
m1_250 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer d = new XmlAttributeDeserializer()", span="358-358"];
m1_251 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="XmlAttributeDeserializerTests.cs", label="PersonForXml p = d.Deserialize<PersonForXml>(response)", span="359-359"];
m1_252 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="XmlAttributeDeserializerTests.cs", label="Assert.Null(p.ReadOnlyProxy)", span="361-361"];
m1_253 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", span="354-354"];
m1_425 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithAttributesAndNullValues()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithAttributesAndNullValues()", span="884-884"];
m1_619 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithAttributesAndNullValues()", file="XmlAttributeDeserializerTests.cs", label="XDocument doc = new XDocument()", span="886-886"];
m1_620 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithAttributesAndNullValues()", file="XmlAttributeDeserializerTests.cs", label="XElement root = new XElement(''NullableValues'')", span="887-887"];
m1_624 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithAttributesAndNullValues()", file="XmlAttributeDeserializerTests.cs", label="doc.Add(root)", span="895-895"];
m1_625 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithAttributesAndNullValues()", file="XmlAttributeDeserializerTests.cs", label="return doc.ToString();", span="897-897"];
m1_621 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithAttributesAndNullValues()", file="XmlAttributeDeserializerTests.cs", label="XElement idElement = new XElement(''Id'', null)", span="888-888"];
m1_623 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithAttributesAndNullValues()", file="XmlAttributeDeserializerTests.cs", label="root.Add(idElement,\r\n                new XElement(''StartDate'', null),\r\n                new XElement(''UniqueId'', null))", span="891-893"];
m1_622 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithAttributesAndNullValues()", file="XmlAttributeDeserializerTests.cs", label="idElement.SetAttributeValue(''SomeAttribute'', ''SomeAttribute_Value'')", span="890-890"];
m1_626 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithAttributesAndNullValues()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithAttributesAndNullValues()", span="884-884"];
m1_4 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", span="43-43"];
m1_5 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", file="XmlAttributeDeserializerTests.cs", label="string xmlpath = this.PathFor(''xmllists.xml'')", span="45-45"];
m1_6 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", file="XmlAttributeDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="46-46"];
m1_7 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer xml = new XmlAttributeDeserializer()", span="47-47"];
m1_8 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", file="XmlAttributeDeserializerTests.cs", label="SimpleTypesListSample output = xml.Deserialize<SimpleTypesListSample>(\r\n                new RestResponse { Content = doc.ToString() })", span="48-49"];
m1_9 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", file="XmlAttributeDeserializerTests.cs", label="Assert.IsNotEmpty(output.Names)", span="51-51"];
m1_10 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", file="XmlAttributeDeserializerTests.cs", label="Assert.IsNotEmpty(output.Numbers)", span="52-52"];
m1_11 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", file="XmlAttributeDeserializerTests.cs", label="Assert.False(output.Names[0].Length == 0)", span="53-53"];
m1_12 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", file="XmlAttributeDeserializerTests.cs", label="Assert.False(output.Numbers.Sum() == 0)", span="54-54"];
m1_13 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", span="43-43"];
m1_390 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Google_Weather_Xml_WithDeserializeAs()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Google_Weather_Xml_WithDeserializeAs()", span="530-530"];
m1_391 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Google_Weather_Xml_WithDeserializeAs()", file="XmlAttributeDeserializerTests.cs", label="string xmlpath = this.PathFor(''GoogleWeather.xml'')", span="532-532"];
m1_392 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Google_Weather_Xml_WithDeserializeAs()", file="XmlAttributeDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="533-533"];
m1_393 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Google_Weather_Xml_WithDeserializeAs()", file="XmlAttributeDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc.ToString() }", span="534-534"];
m1_394 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Google_Weather_Xml_WithDeserializeAs()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer d = new XmlAttributeDeserializer()", span="535-535"];
m1_395 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Google_Weather_Xml_WithDeserializeAs()", file="XmlAttributeDeserializerTests.cs", label="GoogleWeatherApi output = d.Deserialize<GoogleWeatherApi>(response)", span="536-536"];
m1_396 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Google_Weather_Xml_WithDeserializeAs()", file="XmlAttributeDeserializerTests.cs", label="Assert.IsNotEmpty(output.Weather)", span="538-538"];
m1_397 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Google_Weather_Xml_WithDeserializeAs()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(4, output.Weather.Count)", span="539-539"];
m1_398 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Google_Weather_Xml_WithDeserializeAs()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(''Sunny'', output.Weather[0].Condition.Data)", span="540-540"];
m1_399 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Google_Weather_Xml_WithDeserializeAs()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Google_Weather_Xml_WithDeserializeAs()", span="530-530"];
m1_3 [cluster="System.IO.Path.Combine(string, string)", file="XmlAttributeDeserializerTests.cs", label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m1_56 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", span="107-107"];
m1_57 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="string xmlpath = this.PathFor(''InlineListSample.xml'')", span="109-109"];
m1_58 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="110-110"];
m1_59 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer xml = new XmlAttributeDeserializer()", span="111-111"];
m1_60 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="InlineListSample output = xml.Deserialize<InlineListSample>(new RestResponse { Content = doc.ToString() })", span="112-112"];
m1_61 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="Assert.IsNotEmpty(output.Images)", span="114-114"];
m1_62 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(4, output.Images.Count)", span="115-115"];
m1_63 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", span="107-107"];
m1_107 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", span="179-179"];
m1_108 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", file="XmlAttributeDeserializerTests.cs", label="string doc = CreateXmlWithEmptyInlineList()", span="181-181"];
m1_109 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer xml = new XmlAttributeDeserializer()", span="182-182"];
m1_110 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", file="XmlAttributeDeserializerTests.cs", label="EmptyListSample output = xml.Deserialize<EmptyListSample>(new RestResponse { Content = doc })", span="183-183"];
m1_111 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", file="XmlAttributeDeserializerTests.cs", label="Assert.NotNull(output.images)", span="185-185"];
m1_112 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", file="XmlAttributeDeserializerTests.cs", label="Assert.NotNull(output.Images)", span="186-186"];
m1_113 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", file="XmlAttributeDeserializerTests.cs", label="Assert.IsEmpty(output.images)", span="187-187"];
m1_114 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", file="XmlAttributeDeserializerTests.cs", label="Assert.IsEmpty(output.Images)", span="188-188"];
m1_115 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", span="179-179"];
m1_301 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", span="711-711"];
m1_516 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="XDocument doc = new XDocument()", span="713-713"];
m1_517 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="XElement root = new XElement(''Person'')", span="714-714"];
m1_543 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="doc.Add(root)", span="752-752"];
m1_544 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="return doc.ToString();", span="754-754"];
m1_518 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Name'', ''John Sheehan''))", span="716-716"];
m1_519 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Start_Date'', new DateTime(2009, 9, 25, 0, 6, 1)))", span="717-717"];
m1_520 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XAttribute(''Age'', 28))", span="718-718"];
m1_521 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Percent'', 99.9999m))", span="719-719"];
m1_522 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Big-Number'', long.MaxValue))", span="720-720"];
m1_523 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XAttribute(''Is-Cool'', false))", span="721-721"];
m1_524 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Ignore'', ''dummy''))", span="722-722"];
m1_525 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XAttribute(''Read-Only'', ''dummy''))", span="723-723"];
m1_526 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Unique-Id'', new Guid(GUID_STRING)))", span="724-724"];
m1_527 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Url'', ''http://example.com''))", span="725-725"];
m1_528 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Url-Path'', ''/foo/bar''))", span="726-726"];
m1_529 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Best-Friend'',\r\n                new XElement(''Name'', ''The Fonz''),\r\n                new XAttribute(''\\nSince'', 1952)))", span="727-729"];
m1_535 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(friends)", span="740-740"];
m1_542 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(foes)", span="751-751"];
m1_530 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="XElement friends = new XElement(''Friends'')", span="731-731"];
m1_531 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="int i = 0", span="733-733"];
m1_533 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="friends.Add(new XElement(''Friend'',\r\n                    new XElement(''Name'', ''Friend'' + i),\r\n                    new XAttribute(''\\nSince'', DateTime.Now.Year - i)))", span="735-737"];
m1_532 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="i < 10", span="733-733"];
m1_534 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="i++", span="733-733"];
m1_536 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="XElement foes = new XElement(''Foes'')", span="742-742"];
m1_537 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="foes.Add(new XAttribute(''Team'', ''Yankees''))", span="744-744"];
m1_540 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="foes.Add(new XElement(''Foe'', new XElement(''Nickname'', ''Foe'' + i)))", span="748-748"];
m1_538 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="int i = 0", span="746-746"];
m1_539 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="i < 5", span="746-746"];
m1_541 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="i++", span="746-746"];
m1_545 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.CreateDashesXml()", span="711-711"];
m1_220 [cluster="System.Uri.Uri(string, System.UriKind)", file="XmlAttributeDeserializerTests.cs", label="Entry System.Uri.Uri(string, System.UriKind)", span="0-0"];
m1_22 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_To_List_Inheritor_From_Custom_Root_With_Attributes()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_To_List_Inheritor_From_Custom_Root_With_Attributes()", span="58-58"];
m1_23 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_To_List_Inheritor_From_Custom_Root_With_Attributes()", file="XmlAttributeDeserializerTests.cs", label="string xmlpath = this.PathFor(''ListWithAttributes.xml'')", span="60-60"];
m1_24 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_To_List_Inheritor_From_Custom_Root_With_Attributes()", file="XmlAttributeDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="61-61"];
m1_25 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_To_List_Inheritor_From_Custom_Root_With_Attributes()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer xml = new XmlAttributeDeserializer { RootElement = ''Calls'' }", span="62-62"];
m1_26 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_To_List_Inheritor_From_Custom_Root_With_Attributes()", file="XmlAttributeDeserializerTests.cs", label="TwilioCallList output = xml.Deserialize<TwilioCallList>(new RestResponse { Content = doc.ToString() })", span="63-63"];
m1_27 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_To_List_Inheritor_From_Custom_Root_With_Attributes()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(3, output.NumPages)", span="65-65"];
m1_28 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_To_List_Inheritor_From_Custom_Root_With_Attributes()", file="XmlAttributeDeserializerTests.cs", label="Assert.IsNotEmpty(output)", span="66-66"];
m1_29 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_To_List_Inheritor_From_Custom_Root_With_Attributes()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(2, output.Count)", span="67-67"];
m1_30 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_To_List_Inheritor_From_Custom_Root_With_Attributes()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_To_List_Inheritor_From_Custom_Root_With_Attributes()", span="58-58"];
m1_21 [cluster="System.Collections.Generic.IEnumerable<int>.Sum()", file="XmlAttributeDeserializerTests.cs", label="Entry System.Collections.Generic.IEnumerable<int>.Sum()", span="0-0"];
m1_349 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", span="473-473"];
m1_350 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", file="XmlAttributeDeserializerTests.cs", label="string doc = CreateLowerCasedRootElementWithDashesXml()", span="475-475"];
m1_351 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", file="XmlAttributeDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="476-476"];
m1_352 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer d = new XmlAttributeDeserializer()", span="477-477"];
m1_353 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", file="XmlAttributeDeserializerTests.cs", label="List<IncomingInvoice> p = d.Deserialize<List<IncomingInvoice>>(response)", span="478-478"];
m1_354 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", file="XmlAttributeDeserializerTests.cs", label="Assert.NotNull(p)", span="480-480"];
m1_355 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(1, p.Count)", span="481-481"];
m1_356 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(45, p[0].ConceptId)", span="482-482"];
m1_357 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", span="473-473"];
m1_453 [cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="XmlAttributeDeserializerTests.cs", label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0"];
m1_197 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", span="294-294"];
m1_198 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="string doc = CreateElementsXml()", span="296-296"];
m1_199 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="297-297"];
m1_200 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer d = new XmlAttributeDeserializer()", span="298-298"];
m1_201 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="PersonForXml p = d.Deserialize<PersonForXml>(response)", span="299-299"];
m1_202 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(''John Sheehan'', p.Name)", span="301-301"];
m1_203 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new DateTime(2009, 9, 25, 0, 6, 1), p.StartDate)", span="302-302"];
m1_204 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(28, p.Age)", span="303-303"];
m1_205 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(long.MaxValue, p.BigNumber)", span="304-304"];
m1_206 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(99.9999m, p.Percent)", span="305-305"];
m1_207 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(false, p.IsCool)", span="306-306"];
m1_208 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new Guid(GUID_STRING), p.UniqueId)", span="307-307"];
m1_209 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(Guid.Empty, p.EmptyGuid)", span="308-308"];
m1_210 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="309-309"];
m1_211 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="310-310"];
m1_212 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(Order.Third, p.Order)", span="311-311"];
m1_213 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(Disposition.SoSo, p.Disposition)", span="312-312"];
m1_214 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.NotNull(p.Friends)", span="313-313"];
m1_215 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(10, p.Friends.Count)", span="314-314"];
m1_216 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.NotNull(p.BestFriend)", span="315-315"];
m1_217 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(''The Fonz'', p.BestFriend.Name)", span="316-316"];
m1_218 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(1952, p.BestFriend.Since)", span="317-317"];
m1_219 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", span="294-294"];
m1_278 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", span="392-392"];
m1_279 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="string doc = CreateDashesXml()", span="394-394"];
m1_280 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="395-395"];
m1_281 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer d = new XmlAttributeDeserializer()", span="396-396"];
m1_282 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="PersonForXml p = d.Deserialize<PersonForXml>(response)", span="397-397"];
m1_283 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(''John Sheehan'', p.Name)", span="399-399"];
m1_284 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new DateTime(2009, 9, 25, 0, 6, 1), p.StartDate)", span="400-400"];
m1_285 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(28, p.Age)", span="401-401"];
m1_286 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(long.MaxValue, p.BigNumber)", span="402-402"];
m1_287 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(99.9999m, p.Percent)", span="403-403"];
m1_288 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(false, p.IsCool)", span="404-404"];
m1_289 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new Guid(GUID_STRING), p.UniqueId)", span="405-405"];
m1_290 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="406-406"];
m1_291 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="407-407"];
m1_292 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.NotNull(p.Friends)", span="408-408"];
m1_293 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(10, p.Friends.Count)", span="409-409"];
m1_294 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.NotNull(p.BestFriend)", span="410-410"];
m1_295 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(''The Fonz'', p.BestFriend.Name)", span="411-411"];
m1_296 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(1952, p.BestFriend.Since)", span="412-412"];
m1_297 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.NotNull(p.Foes)", span="413-413"];
m1_298 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(5, p.Foes.Count)", span="414-414"];
m1_299 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(''Yankees'', p.Foes.Team)", span="415-415"];
m1_300 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", span="392-392"];
m1_117 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", span="192-192"];
m1_118 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="XmlAttributeDeserializerTests.cs", label="string doc = CreateXmlWithNullValues()", span="194-194"];
m1_119 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer xml = new XmlAttributeDeserializer()", span="195-195"];
m1_120 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="XmlAttributeDeserializerTests.cs", label="NullableValues output = xml.Deserialize<NullableValues>(new RestResponse { Content = doc })", span="196-196"];
m1_121 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="XmlAttributeDeserializerTests.cs", label="Assert.Null(output.Id)", span="198-198"];
m1_122 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="XmlAttributeDeserializerTests.cs", label="Assert.Null(output.StartDate)", span="199-199"];
m1_123 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="XmlAttributeDeserializerTests.cs", label="Assert.Null(output.UniqueId)", span="200-200"];
m1_124 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", span="192-192"];
m1_104 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithEmptyNestedList()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithEmptyNestedList()", span="863-863"];
m1_608 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithEmptyNestedList()", file="XmlAttributeDeserializerTests.cs", label="XDocument doc = new XDocument()", span="865-865"];
m1_609 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithEmptyNestedList()", file="XmlAttributeDeserializerTests.cs", label="XElement root = new XElement(''EmptyListSample'')", span="866-866"];
m1_611 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithEmptyNestedList()", file="XmlAttributeDeserializerTests.cs", label="doc.Add(root)", span="869-869"];
m1_612 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithEmptyNestedList()", file="XmlAttributeDeserializerTests.cs", label="return doc.ToString();", span="871-871"];
m1_610 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithEmptyNestedList()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Images''))", span="868-868"];
m1_613 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithEmptyNestedList()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithEmptyNestedList()", span="863-863"];
m1_254 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", span="365-365"];
m1_255 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="string doc = CreateUnderscoresXml()", span="367-367"];
m1_256 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="368-368"];
m1_257 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer d = new XmlAttributeDeserializer()", span="369-369"];
m1_258 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="PersonForXml p = d.Deserialize<PersonForXml>(response)", span="370-370"];
m1_259 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(''John Sheehan'', p.Name)", span="372-372"];
m1_260 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new DateTime(2009, 9, 25, 0, 6, 1), p.StartDate)", span="373-373"];
m1_261 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(28, p.Age)", span="374-374"];
m1_262 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(long.MaxValue, p.BigNumber)", span="375-375"];
m1_263 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(99.9999m, p.Percent)", span="376-376"];
m1_264 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(false, p.IsCool)", span="377-377"];
m1_265 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new Guid(GUID_STRING), p.UniqueId)", span="378-378"];
m1_266 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="379-379"];
m1_267 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="380-380"];
m1_268 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.NotNull(p.Friends)", span="381-381"];
m1_269 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(10, p.Friends.Count)", span="382-382"];
m1_270 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.NotNull(p.BestFriend)", span="383-383"];
m1_271 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(''The Fonz'', p.BestFriend.Name)", span="384-384"];
m1_272 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(1952, p.BestFriend.Since)", span="385-385"];
m1_273 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.NotNull(p.Foes)", span="386-386"];
m1_274 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(5, p.Foes.Count)", span="387-387"];
m1_275 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(''Yankees'', p.Foes.Team)", span="388-388"];
m1_276 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", span="365-365"];
m1_125 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithNullValues()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithNullValues()", span="835-835"];
m1_595 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithNullValues()", file="XmlAttributeDeserializerTests.cs", label="XDocument doc = new XDocument()", span="837-837"];
m1_596 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithNullValues()", file="XmlAttributeDeserializerTests.cs", label="XElement root = new XElement(''NullableValues'')", span="838-838"];
m1_598 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithNullValues()", file="XmlAttributeDeserializerTests.cs", label="doc.Add(root)", span="844-844"];
m1_599 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithNullValues()", file="XmlAttributeDeserializerTests.cs", label="return doc.ToString();", span="846-846"];
m1_597 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithNullValues()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Id'', null),\r\n                new XElement(''StartDate'', null),\r\n                new XElement(''UniqueId'', \\nnull))", span="840-842"];
m1_600 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithNullValues()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithNullValues()", span="835-835"];
m1_140 [cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="XmlAttributeDeserializerTests.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0"];
m1_417 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", span="568-568"];
m1_418 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", file="XmlAttributeDeserializerTests.cs", label="string doc = CreateXmlWithAttributesAndNullValues()", span="570-570"];
m1_419 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer xml = new XmlAttributeDeserializer()", span="571-571"];
m1_420 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", file="XmlAttributeDeserializerTests.cs", label="NullableValues output = xml.Deserialize<NullableValues>(new RestResponse { Content = doc })", span="572-572"];
m1_421 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", file="XmlAttributeDeserializerTests.cs", label="Assert.Null(output.Id)", span="574-574"];
m1_422 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", file="XmlAttributeDeserializerTests.cs", label="Assert.Null(output.StartDate)", span="575-575"];
m1_423 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", file="XmlAttributeDeserializerTests.cs", label="Assert.Null(output.UniqueId)", span="576-576"];
m1_424 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", span="568-568"];
m1_359 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Eventful_Xml()", span="486-486"];
m1_360 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlAttributeDeserializerTests.cs", label="string xmlpath = this.PathFor(''eventful.xml'')", span="488-488"];
m1_361 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlAttributeDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="489-489"];
m1_362 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlAttributeDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc.ToString() }", span="490-490"];
m1_363 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer d = new XmlAttributeDeserializer()", span="491-491"];
m1_364 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlAttributeDeserializerTests.cs", label="VenueSearch output = d.Deserialize<VenueSearch>(response)", span="492-492"];
m1_365 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlAttributeDeserializerTests.cs", label="Assert.IsNotEmpty(output.venues)", span="494-494"];
m1_366 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(3, output.venues.Count)", span="495-495"];
m1_367 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(''Tivoli'', output.venues[0].name)", span="496-496"];
m1_368 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(''http://eventful.com/brisbane/venues/tivoli-/V0-001-002169294-8'', output.venues[1].url)", span="497-497"];
m1_369 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(''V0-001-000266914-3'', output.venues[2].id)", span="498-498"];
m1_370 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Eventful_Xml()", span="486-486"];
m1_18 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.IRestResponse)", span="49-49"];
m1_196 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", span="769-769"];
m1_551 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", file="XmlAttributeDeserializerTests.cs", label="XDocument doc = new XDocument()", span="771-771"];
m1_552 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", file="XmlAttributeDeserializerTests.cs", label="XElement root = new XElement(''Person'')", span="772-772"];
m1_575 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", file="XmlAttributeDeserializerTests.cs", label="doc.Add(root)", span="805-805"];
m1_576 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", file="XmlAttributeDeserializerTests.cs", label="return doc.ToString();", span="807-807"];
m1_553 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Name'', ''John Sheehan''))", span="774-774"];
m1_554 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''StartDate'', new DateTime(2009, 9, 25, 0, 6, 1)))", span="775-775"];
m1_555 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Age'', 28))", span="776-776"];
m1_556 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Percent'', 99.9999m))", span="777-777"];
m1_557 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''BigNumber'', long.MaxValue))", span="778-778"];
m1_558 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''IsCool'', false))", span="779-779"];
m1_559 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Ignore'', ''dummy''))", span="780-780"];
m1_560 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''ReadOnly'', ''dummy''))", span="781-781"];
m1_561 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''UniqueId'', new Guid(GUID_STRING)))", span="782-782"];
m1_562 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''EmptyGuid'', ''''))", span="783-783"];
m1_563 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Url'', ''http://example.com''))", span="784-784"];
m1_564 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''UrlPath'', ''/foo/bar''))", span="785-785"];
m1_565 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Order'', ''third''))", span="786-786"];
m1_566 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''Disposition'', ''so-so''))", span="787-787"];
m1_567 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''BestFriend'',\r\n                new XElement(''Name'', ''The Fonz''),\r\n                new XElement(''\\nSince'', 1952)))", span="788-790"];
m1_573 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(friends)", span="801-801"];
m1_574 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''FavoriteBand'',\r\n                new XElement(''Name'', ''Goldfinger'')))", span="802-803"];
m1_568 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", file="XmlAttributeDeserializerTests.cs", label="XElement friends = new XElement(''Friends'')", span="792-792"];
m1_569 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", file="XmlAttributeDeserializerTests.cs", label="int i = 0", span="794-794"];
m1_571 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", file="XmlAttributeDeserializerTests.cs", label="friends.Add(new XElement(''Friend'',\r\n                    new XElement(''Name'', ''Friend'' + i),\r\n                    new XElement(''\\nSince'', DateTime.Now.Year - i)))", span="796-798"];
m1_570 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", file="XmlAttributeDeserializerTests.cs", label="i < 10", span="794-794"];
m1_572 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", file="XmlAttributeDeserializerTests.cs", label="i++", span="794-794"];
m1_577 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.CreateElementsXml()", span="769-769"];
m1_171 [cluster="System.TimeSpan.TimeSpan(long)", file="XmlAttributeDeserializerTests.cs", label="Entry System.TimeSpan.TimeSpan(long)", span="0-0"];
m1_434 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", span="900-900"];
m1_628 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", file="XmlAttributeDeserializerTests.cs", label="XDocument doc = new XDocument()", span="902-902"];
m1_629 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", file="XmlAttributeDeserializerTests.cs", label="XElement root = new XElement(''NullableValues'')", span="903-903"];
m1_633 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", file="XmlAttributeDeserializerTests.cs", label="doc.Add(root)", span="911-911"];
m1_634 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", file="XmlAttributeDeserializerTests.cs", label="return doc.ToString();", span="913-913"];
m1_630 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", file="XmlAttributeDeserializerTests.cs", label="XElement idElement = new XElement(''Id'', null)", span="904-904"];
m1_632 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", file="XmlAttributeDeserializerTests.cs", label="root.Add(idElement,\r\n                new XElement(''StartDate'', null),\r\n                new XElement(''UniqueId'', new Guid(\\nGUID_STRING)))", span="907-909"];
m1_631 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", file="XmlAttributeDeserializerTests.cs", label="idElement.SetAttributeValue(''SomeAttribute'', ''SomeAttribute_Value'')", span="906-906"];
m1_635 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", span="900-900"];
m1_326 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", span="446-446"];
m1_327 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlAttributeDeserializerTests.cs", label="string doc = CreateDashesXml()", span="448-448"];
m1_328 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlAttributeDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="449-449"];
m1_329 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer d = new XmlAttributeDeserializer()", span="450-450"];
m1_330 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlAttributeDeserializerTests.cs", label="PersonForXml p = d.Deserialize<PersonForXml>(response)", span="451-451"];
m1_331 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(''John Sheehan'', p.Name)", span="453-453"];
m1_332 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new DateTime(2009, 9, 25, 0, 6, 1), p.StartDate)", span="454-454"];
m1_333 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(28, p.Age)", span="455-455"];
m1_334 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(long.MaxValue, p.BigNumber)", span="456-456"];
m1_335 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(99.9999m, p.Percent)", span="457-457"];
m1_336 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(false, p.IsCool)", span="458-458"];
m1_337 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new Guid(GUID_STRING), p.UniqueId)", span="459-459"];
m1_338 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="460-460"];
m1_339 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="461-461"];
m1_340 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlAttributeDeserializerTests.cs", label="Assert.NotNull(p.Friends)", span="462-462"];
m1_341 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(10, p.Friends.Count)", span="463-463"];
m1_342 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlAttributeDeserializerTests.cs", label="Assert.NotNull(p.BestFriend)", span="464-464"];
m1_343 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(''The Fonz'', p.BestFriend.Name)", span="465-465"];
m1_344 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(1952, p.BestFriend.Since)", span="466-466"];
m1_345 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlAttributeDeserializerTests.cs", label="Assert.NotNull(p.Foes)", span="467-467"];
m1_346 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(5, p.Foes.Count)", span="468-468"];
m1_347 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(''Yankees'', p.Foes.Team)", span="469-469"];
m1_348 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", span="446-446"];
m1_221 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", span="321-321"];
m1_222 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="string doc = CreateAttributesXml()", span="323-323"];
m1_223 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="324-324"];
m1_224 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer d = new XmlAttributeDeserializer()", span="325-325"];
m1_225 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="PersonForXml p = d.Deserialize<PersonForXml>(response)", span="326-326"];
m1_226 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(''John Sheehan'', p.Name)", span="328-328"];
m1_227 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new DateTime(2009, 9, 25, 0, 6, 1), p.StartDate)", span="329-329"];
m1_228 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(28, p.Age)", span="330-330"];
m1_229 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(long.MaxValue, p.BigNumber)", span="331-331"];
m1_230 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(99.9999m, p.Percent)", span="332-332"];
m1_231 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(false, p.IsCool)", span="333-333"];
m1_232 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new Guid(GUID_STRING), p.UniqueId)", span="334-334"];
m1_233 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="335-335"];
m1_234 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="336-336"];
m1_235 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.NotNull(p.BestFriend)", span="337-337"];
m1_236 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(''The Fonz'', p.BestFriend.Name)", span="338-338"];
m1_237 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(1952, p.BestFriend.Since)", span="339-339"];
m1_238 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", span="321-321"];
m1_380 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Google_Weather_Xml()", span="516-516"];
m1_381 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file="XmlAttributeDeserializerTests.cs", label="string xmlpath = this.PathFor(''GoogleWeather.xml'')", span="518-518"];
m1_382 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file="XmlAttributeDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="519-519"];
m1_383 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file="XmlAttributeDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc.ToString() }", span="520-520"];
m1_384 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer d = new XmlAttributeDeserializer()", span="521-521"];
m1_385 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file="XmlAttributeDeserializerTests.cs", label="xml_api_reply output = d.Deserialize<xml_api_reply>(response)", span="522-522"];
m1_386 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file="XmlAttributeDeserializerTests.cs", label="Assert.IsNotEmpty(output.weather)", span="524-524"];
m1_387 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(4, output.weather.Count)", span="525-525"];
m1_388 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(''Sunny'', output.weather[0].condition.data)", span="526-526"];
m1_389 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Google_Weather_Xml()", span="516-516"];
m1_607 [cluster="System.DateTime.ToString(System.IFormatProvider)", file="XmlAttributeDeserializerTests.cs", label="Entry System.DateTime.ToString(System.IFormatProvider)", span="0-0"];
m1_188 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_Class()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_Class()", span="282-282"];
m1_189 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_Class()", file="XmlAttributeDeserializerTests.cs", label="string doc = CreateElementsXml()", span="284-284"];
m1_190 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_Class()", file="XmlAttributeDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="285-285"];
m1_191 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_Class()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer d = new XmlAttributeDeserializer()", span="286-286"];
m1_192 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_Class()", file="XmlAttributeDeserializerTests.cs", label="PersonForXml p = d.Deserialize<PersonForXml>(response)", span="287-287"];
m1_193 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_Class()", file="XmlAttributeDeserializerTests.cs", label="Assert.NotNull(p.FavoriteBand)", span="289-289"];
m1_194 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_Class()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(''Goldfinger'', p.FavoriteBand.Name)", span="290-290"];
m1_195 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_Class()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Nested_Class()", span="282-282"];
m1_240 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Ignore_Protected_Property_That_Exists_In_Data()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Ignore_Protected_Property_That_Exists_In_Data()", span="343-343"];
m1_241 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Ignore_Protected_Property_That_Exists_In_Data()", file="XmlAttributeDeserializerTests.cs", label="string doc = CreateElementsXml()", span="345-345"];
m1_242 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Ignore_Protected_Property_That_Exists_In_Data()", file="XmlAttributeDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="346-346"];
m1_243 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Ignore_Protected_Property_That_Exists_In_Data()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer d = new XmlAttributeDeserializer()", span="347-347"];
m1_244 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Ignore_Protected_Property_That_Exists_In_Data()", file="XmlAttributeDeserializerTests.cs", label="PersonForXml p = d.Deserialize<PersonForXml>(response)", span="348-348"];
m1_245 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Ignore_Protected_Property_That_Exists_In_Data()", file="XmlAttributeDeserializerTests.cs", label="Assert.Null(p.IgnoreProxy)", span="350-350"];
m1_246 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Ignore_Protected_Property_That_Exists_In_Data()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Ignore_Protected_Property_That_Exists_In_Data()", span="343-343"];
m1_426 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", span="580-580"];
m1_427 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", file="XmlAttributeDeserializerTests.cs", label="string doc = CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", span="582-582"];
m1_428 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer xml = new XmlAttributeDeserializer()", span="583-583"];
m1_429 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", file="XmlAttributeDeserializerTests.cs", label="NullableValues output = xml.Deserialize<NullableValues>(new RestResponse { Content = doc })", span="584-584"];
m1_430 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", file="XmlAttributeDeserializerTests.cs", label="Assert.Null(output.Id)", span="586-586"];
m1_431 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", file="XmlAttributeDeserializerTests.cs", label="Assert.Null(output.StartDate)", span="587-587"];
m1_432 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(new Guid(GUID_STRING), output.UniqueId)", span="588-588"];
m1_433 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", span="580-580"];
m1_40 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_To_Standalone_List_With_Matching_Class_Case()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_To_Standalone_List_With_Matching_Class_Case()", span="83-83"];
m1_41 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_To_Standalone_List_With_Matching_Class_Case()", file="XmlAttributeDeserializerTests.cs", label="string xmlpath = this.PathFor(''InlineListSample.xml'')", span="85-85"];
m1_42 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_To_Standalone_List_With_Matching_Class_Case()", file="XmlAttributeDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="86-86"];
m1_43 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_To_Standalone_List_With_Matching_Class_Case()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer xml = new XmlAttributeDeserializer()", span="87-87"];
m1_44 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_To_Standalone_List_With_Matching_Class_Case()", file="XmlAttributeDeserializerTests.cs", label="List<image> output = xml.Deserialize<List<image>>(new RestResponse { Content = doc.ToString() })", span="88-88"];
m1_45 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_To_Standalone_List_With_Matching_Class_Case()", file="XmlAttributeDeserializerTests.cs", label="Assert.IsNotEmpty(output)", span="90-90"];
m1_46 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_To_Standalone_List_With_Matching_Class_Case()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(4, output.Count)", span="91-91"];
m1_47 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_To_Standalone_List_With_Matching_Class_Case()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_To_Standalone_List_With_Matching_Class_Case()", span="83-83"];
m1_72 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name_With_Additional_\\nProperty()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name_With_\\nAdditional_Property()", span="131-131"];
m1_73 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name_With_Additional_\\nProperty()", file="XmlAttributeDeserializerTests.cs", label="string xmlpath = this.PathFor(''InlineListSample.xml'')", span="133-133"];
m1_74 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name_With_Additional_\\nProperty()", file="XmlAttributeDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="134-134"];
m1_75 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name_With_Additional_\\nProperty()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer xml = new XmlAttributeDeserializer()", span="135-135"];
m1_76 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name_With_Additional_\\nProperty()", file="XmlAttributeDeserializerTests.cs", label="InlineListSample output = xml.Deserialize<InlineListSample>(new RestResponse { Content = doc.ToString() })", span="136-136"];
m1_77 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name_With_Additional_\\nProperty()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(4, output.Count)", span="138-138"];
m1_78 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name_With_Additional_\\nProperty()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name_With_\\nAdditional_Property()", span="131-131"];
m1_358 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowerCasedRootElementWithDashesXml()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowerCasedRootElementWithDashesXml()", span="757-757"];
m1_546 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowerCasedRootElementWithDashesXml()", file="XmlAttributeDeserializerTests.cs", label="XDocument doc = new XDocument()", span="759-759"];
m1_547 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowerCasedRootElementWithDashesXml()", file="XmlAttributeDeserializerTests.cs", label="XElement root = new XElement(''incoming-invoices'',\r\n                new XElement(''incoming-invoice'',\r\n                    \\nnew XElement(''concept-id'', 45)))", span="760-762"];
m1_548 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowerCasedRootElementWithDashesXml()", file="XmlAttributeDeserializerTests.cs", label="doc.Add(root)", span="764-764"];
m1_549 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowerCasedRootElementWithDashesXml()", file="XmlAttributeDeserializerTests.cs", label="return doc.ToString();", span="766-766"];
m1_550 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowerCasedRootElementWithDashesXml()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.CreateLowerCasedRootElementWithDashesXml()", span="757-757"];
m1_174 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlAttributeDeserializerTests.cs", label="Entry RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", span="258-258"];
m1_175 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlAttributeDeserializerTests.cs", label="CultureInfo culture = CultureInfo.InvariantCulture", span="260-260"];
m1_176 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlAttributeDeserializerTests.cs", label="string format = ''dd yyyy MMM, hh:mm ss tt zzz''", span="261-261"];
m1_180 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlAttributeDeserializerTests.cs", label="root.Add(new XElement(''StartDate'', date.ToString(format, culture)))", span="266-266"];
m1_182 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlAttributeDeserializerTests.cs", label="XmlAttributeDeserializer xml = new XmlAttributeDeserializer\r\n                                           {\r\n                                               \\nDateFormat = format,\r\n                                               Culture = culture\r\n                                           }", span="270-274"];
m1_177 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlAttributeDeserializerTests.cs", label="DateTime date = new DateTime(2010, 2, 8, 11, 11, 11)", span="262-262"];
m1_178 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlAttributeDeserializerTests.cs", label="XDocument doc = new XDocument()", span="263-263"];
m1_185 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlAttributeDeserializerTests.cs", label="Assert.AreEqual(date, output.StartDate)", span="278-278"];
m1_179 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlAttributeDeserializerTests.cs", label="XElement root = new XElement(''Person'')", span="264-264"];
m1_181 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlAttributeDeserializerTests.cs", label="doc.Add(root)", span="268-268"];
m1_183 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlAttributeDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc.ToString() }", span="275-275"];
m1_184 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlAttributeDeserializerTests.cs", label="PersonForXml output = xml.Deserialize<PersonForXml>(response)", span="276-276"];
m1_186 [cluster="RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlAttributeDeserializerTests.cs", label="Exit RestSharp.Tests.XmlAttributeDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", span="258-258"];
n13;
n21;
n30;
n52;
n53;
n54;
n55;
m0_14;
m0_408;
m0_126;
m0_168;
m0_170;
m0_172;
m0_485;
m0_105;
m0_106;
m0_627;
m1_168;
m1_170;
m1_172;
m1_17;
m1_485;
n56;
n57;
n58;
m0_636;
n0 -> n1  [color=red, key=0, style=solid];
n0 -> d1  [color=green, key=0, style=solid];
n1 -> n2  [color=red, key=0, style=solid];
n1 -> n4  [color=red, key=2, style=dotted];
d1 -> n2  [color=green, key=0, style=solid];
d1 -> d4  [color=green, key=2, style=dotted];
n2 -> n3  [key=0, style=solid];
n2 -> n5  [key=2, style=dotted];
n3 -> n0  [color=blue, key=0, style=bold];
n5 -> n6  [key=0, style=solid];
n5 -> n14  [color=darkorchid, key=3, label="method methodReturn void Setup", style=bold];
n5 -> n22  [color=darkorchid, key=3, label="method methodReturn void Setup", style=bold];
n6 -> n5  [color=blue, key=0, style=bold];
n14 -> n15  [key=0, style=solid];
n22 -> n23  [key=0, style=solid];
n7 -> n8  [key=0, style=solid];
n8 -> n9  [key=0, style=solid];
n8 -> n11  [key=2, style=dotted];
n9 -> n10  [key=0, style=solid];
n9 -> n12  [key=2, style=dotted];
n9 -> n13  [key=2, style=dotted];
n10 -> n7  [color=blue, key=0, style=bold];
n15 -> n14  [color=blue, key=0, style=bold];
n16 -> n17  [key=0, style=solid];
n17 -> n11  [key=2, style=dotted];
n17 -> n18  [key=0, style=solid];
n17 -> n19  [color=darkseagreen4, key=1, label=task, style=dashed];
n18 -> n12  [key=2, style=dotted];
n18 -> n19  [key=0, style=solid];
n19 -> n20  [key=0, style=solid];
n19 -> n21  [key=2, style=dotted];
n20 -> n16  [color=blue, key=0, style=bold];
n23 -> n24  [key=0, style=solid];
n24 -> n25  [key=0, style=solid];
n25 -> n12  [key=2, style=dotted];
n25 -> n26  [key=0, style=solid];
n26 -> n22  [color=blue, key=0, style=bold];
n27 -> n28  [key=0, style=solid];
n28 -> n29  [key=0, style=solid];
n28 -> n30  [key=2, style=dotted];
n29 -> n27  [color=blue, key=0, style=bold];
n31 -> n32  [key=0, style=solid];
n32 -> n21  [key=2, style=dotted];
n32 -> n33  [key=0, style=solid];
n33 -> n31  [color=blue, key=0, style=bold];
n34 -> n35  [key=0, style=solid];
n35 -> n21  [key=2, style=dotted];
n35 -> n36  [key=0, style=solid];
n36 -> n34  [color=blue, key=0, style=bold];
n37 -> n38  [key=0, style=solid];
n38 -> n30  [key=2, style=dotted];
n38 -> n39  [key=0, style=solid];
n38 -> n40  [key=2, style=dotted];
n39 -> n37  [color=blue, key=0, style=bold];
n41 -> n42  [key=0, style=solid];
n42 -> n21  [key=2, style=dotted];
n42 -> n43  [key=0, style=solid];
n43 -> n41  [color=blue, key=0, style=bold];
n44 -> n45  [key=0, style=solid];
n45 -> n46  [key=0, style=solid];
n45 -> n47  [color=darkseagreen4, key=1, label=doc, style=dashed];
n45 -> n48  [color=darkseagreen4, key=1, label=doc, style=dashed];
n45 -> n49  [color=darkseagreen4, key=1, label=doc, style=dashed];
n45 -> n50  [color=darkseagreen4, key=1, label=doc, style=dashed];
n45 -> n52  [key=2, style=dotted];
n46 -> n21  [key=2, style=dotted];
n46 -> n47  [key=0, style=solid];
n46 -> n53  [key=2, style=dotted];
n46 -> n54  [key=2, style=dotted];
n47 -> n21  [key=2, style=dotted];
n47 -> n48  [key=0, style=solid];
n47 -> n53  [key=2, style=dotted];
n47 -> n54  [key=2, style=dotted];
n48 -> n21  [key=2, style=dotted];
n48 -> n49  [key=0, style=solid];
n48 -> n53  [key=2, style=dotted];
n48 -> n54  [key=2, style=dotted];
n49 -> n21  [key=2, style=dotted];
n49 -> n50  [key=0, style=solid];
n49 -> n53  [key=2, style=dotted];
n49 -> n54  [key=2, style=dotted];
n50 -> n30  [key=2, style=dotted];
n50 -> n51  [key=0, style=solid];
n50 -> n53  [key=2, style=dotted];
n50 -> n54  [key=2, style=dotted];
n50 -> n55  [key=2, style=dotted];
n51 -> n44  [color=blue, key=0, style=bold];
m0_409 -> m0_410  [key=0, style=solid];
m0_410 -> m0_0  [key=2, style=dotted];
m0_410 -> m0_411  [key=0, style=solid];
m0_411 -> m0_14  [key=2, style=dotted];
m0_411 -> m0_412  [key=0, style=solid];
m0_412 -> m0_16  [key=2, style=dotted];
m0_412 -> m0_17  [key=2, style=dotted];
m0_412 -> m0_413  [key=0, style=solid];
m0_412 -> m0_414  [color=darkseagreen4, key=1, label=response, style=dashed];
m0_413 -> m0_15  [key=2, style=dotted];
m0_413 -> m0_414  [key=0, style=solid];
m0_414 -> m0_18  [key=2, style=dotted];
m0_414 -> m0_415  [key=0, style=solid];
m0_415 -> m0_408  [key=2, style=dotted];
m0_415 -> m0_416  [key=0, style=solid];
m0_416 -> m0_409  [color=blue, key=0, style=bold];
m0_18 -> m0_12  [key=2, style=dotted];
m0_18 -> m0_19  [key=0, style=solid];
m0_117 -> m0_118  [key=0, style=solid];
m0_118 -> m0_119  [key=0, style=solid];
m0_118 -> m0_120  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_118 -> m0_125  [key=2, style=dotted];
m0_119 -> m0_15  [key=2, style=dotted];
m0_119 -> m0_120  [key=0, style=solid];
m0_120 -> m0_16  [key=2, style=dotted];
m0_120 -> m0_18  [key=2, style=dotted];
m0_120 -> m0_121  [key=0, style=solid];
m0_120 -> m0_122  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_120 -> m0_123  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_121 -> m0_122  [key=0, style=solid];
m0_121 -> m0_126  [key=2, style=dotted];
m0_122 -> m0_123  [key=0, style=solid];
m0_122 -> m0_126  [key=2, style=dotted];
m0_123 -> m0_124  [key=0, style=solid];
m0_123 -> m0_126  [key=2, style=dotted];
m0_124 -> m0_117  [color=blue, key=0, style=bold];
m0_325 -> m0_486  [key=0, style=solid];
m0_486 -> m0_168  [key=2, style=dotted];
m0_486 -> m0_487  [key=0, style=solid];
m0_486 -> m0_513  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_486 -> m0_514  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_487 -> m0_170  [key=2, style=dotted];
m0_487 -> m0_488  [key=0, style=solid];
m0_487 -> m0_489  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_487 -> m0_490  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_487 -> m0_491  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_487 -> m0_492  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_487 -> m0_493  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_487 -> m0_494  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_487 -> m0_495  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_487 -> m0_496  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_487 -> m0_497  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_487 -> m0_498  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_487 -> m0_499  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_487 -> m0_505  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_487 -> m0_512  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_487 -> m0_513  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_513 -> m0_172  [key=2, style=dotted];
m0_513 -> m0_514  [key=0, style=solid];
m0_514 -> m0_17  [key=2, style=dotted];
m0_514 -> m0_515  [key=0, style=solid];
m0_488 -> m0_170  [key=2, style=dotted];
m0_488 -> m0_172  [key=2, style=dotted];
m0_488 -> m0_489  [key=0, style=solid];
m0_489 -> m0_140  [key=2, style=dotted];
m0_489 -> m0_170  [key=2, style=dotted];
m0_489 -> m0_172  [key=2, style=dotted];
m0_489 -> m0_490  [key=0, style=solid];
m0_490 -> m0_172  [key=2, style=dotted];
m0_490 -> m0_491  [key=0, style=solid];
m0_490 -> m0_485  [key=2, style=dotted];
m0_491 -> m0_170  [key=2, style=dotted];
m0_491 -> m0_172  [key=2, style=dotted];
m0_491 -> m0_492  [key=0, style=solid];
m0_492 -> m0_170  [key=2, style=dotted];
m0_492 -> m0_172  [key=2, style=dotted];
m0_492 -> m0_493  [key=0, style=solid];
m0_493 -> m0_172  [key=2, style=dotted];
m0_493 -> m0_494  [key=0, style=solid];
m0_493 -> m0_485  [key=2, style=dotted];
m0_494 -> m0_170  [key=2, style=dotted];
m0_494 -> m0_172  [key=2, style=dotted];
m0_494 -> m0_495  [key=0, style=solid];
m0_495 -> m0_172  [key=2, style=dotted];
m0_495 -> m0_496  [key=0, style=solid];
m0_495 -> m0_485  [key=2, style=dotted];
m0_496 -> m0_141  [key=2, style=dotted];
m0_496 -> m0_170  [key=2, style=dotted];
m0_496 -> m0_172  [key=2, style=dotted];
m0_496 -> m0_497  [key=0, style=solid];
m0_497 -> m0_170  [key=2, style=dotted];
m0_497 -> m0_172  [key=2, style=dotted];
m0_497 -> m0_498  [key=0, style=solid];
m0_498 -> m0_170  [key=2, style=dotted];
m0_498 -> m0_172  [key=2, style=dotted];
m0_498 -> m0_499  [key=0, style=solid];
m0_499 -> m0_170  [key=2, style=dotted];
m0_499 -> m0_172  [key=2, style=dotted];
m0_499 -> m0_500  [key=0, style=solid];
m0_499 -> m0_485  [key=2, style=dotted];
m0_505 -> m0_172  [key=2, style=dotted];
m0_505 -> m0_506  [key=0, style=solid];
m0_512 -> m0_172  [key=2, style=dotted];
m0_512 -> m0_513  [key=0, style=solid];
m0_500 -> m0_170  [key=2, style=dotted];
m0_500 -> m0_501  [key=0, style=solid];
m0_500 -> m0_503  [color=darkseagreen4, key=1, label=friends, style=dashed];
m0_500 -> m0_505  [color=darkseagreen4, key=1, label=friends, style=dashed];
m0_501 -> m0_470  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m0_501 -> m0_502  [key=0, style=solid];
m0_501 -> m0_503  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_501 -> m0_504  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_503 -> m0_170  [key=2, style=dotted];
m0_503 -> m0_172  [key=2, style=dotted];
m0_503 -> m0_504  [key=0, style=solid];
m0_503 -> m0_485  [key=2, style=dotted];
m0_502 -> m0_503  [key=0, style=solid];
m0_502 -> m0_505  [key=0, style=solid];
m0_504 -> m0_502  [key=0, style=solid];
m0_504 -> m0_504  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_506 -> m0_170  [key=2, style=dotted];
m0_506 -> m0_507  [key=0, style=solid];
m0_506 -> m0_510  [color=darkseagreen4, key=1, label=foes, style=dashed];
m0_506 -> m0_512  [color=darkseagreen4, key=1, label=foes, style=dashed];
m0_507 -> m0_172  [key=2, style=dotted];
m0_507 -> m0_508  [key=0, style=solid];
m0_507 -> m0_485  [key=2, style=dotted];
m0_510 -> m0_170  [key=2, style=dotted];
m0_510 -> m0_172  [key=2, style=dotted];
m0_510 -> m0_511  [key=0, style=solid];
m0_508 -> m0_470  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m0_508 -> m0_509  [key=0, style=solid];
m0_508 -> m0_510  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_508 -> m0_511  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_509 -> m0_510  [key=0, style=solid];
m0_509 -> m0_512  [key=0, style=solid];
m0_511 -> m0_509  [key=0, style=solid];
m0_511 -> m0_511  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_515 -> m0_325  [color=blue, key=0, style=bold];
m0_4 -> m0_5  [key=0, style=solid];
m0_5 -> m0_0  [key=2, style=dotted];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> n14  [color=darkorchid, key=3, label="method methodReturn void Setup", style=bold];
m0_5 -> m0_22  [color=darkorchid, key=3, label="method methodReturn void Setup", style=bold];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_8  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_6 -> m0_14  [key=2, style=dotted];
m0_6 -> m0_5  [color=blue, key=0, style=bold];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_15  [key=2, style=dotted];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_10  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_8 -> m0_11  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_8 -> m0_12  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_8 -> m0_16  [key=2, style=dotted];
m0_8 -> m0_17  [key=2, style=dotted];
m0_8 -> m0_18  [key=2, style=dotted];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_19  [key=2, style=dotted];
m0_9 -> m0_12  [key=2, style=dotted];
m0_9 -> m0_13  [key=2, style=dotted];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_19  [key=2, style=dotted];
m0_10 -> m0_7  [color=blue, key=0, style=bold];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_20  [key=2, style=dotted];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_20  [key=2, style=dotted];
m0_12 -> m0_21  [key=2, style=dotted];
m0_13 -> m0_4  [color=blue, key=0, style=bold];
m0_277 -> m0_455  [key=0, style=solid];
m0_470 -> m0_470  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m0_470 -> m0_471  [key=0, style=solid];
m0_470 -> m0_472  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_470 -> m0_473  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_455 -> m0_168  [key=2, style=dotted];
m0_455 -> m0_456  [key=0, style=solid];
m0_455 -> m0_482  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_455 -> m0_483  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_456 -> m0_170  [key=2, style=dotted];
m0_456 -> m0_457  [key=0, style=solid];
m0_456 -> m0_458  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_456 -> m0_459  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_456 -> m0_460  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_456 -> m0_461  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_456 -> m0_462  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_456 -> m0_463  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_456 -> m0_464  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_456 -> m0_465  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_456 -> m0_466  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_456 -> m0_467  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_456 -> m0_468  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_456 -> m0_474  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_456 -> m0_481  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_456 -> m0_482  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_482 -> m0_172  [key=2, style=dotted];
m0_482 -> m0_483  [key=0, style=solid];
m0_483 -> m0_17  [key=2, style=dotted];
m0_483 -> m0_484  [key=0, style=solid];
m0_457 -> m0_170  [key=2, style=dotted];
m0_457 -> m0_172  [key=2, style=dotted];
m0_457 -> m0_458  [key=0, style=solid];
m0_458 -> m0_140  [key=2, style=dotted];
m0_458 -> m0_170  [key=2, style=dotted];
m0_458 -> m0_172  [key=2, style=dotted];
m0_458 -> m0_459  [key=0, style=solid];
m0_459 -> m0_172  [key=2, style=dotted];
m0_459 -> m0_460  [key=0, style=solid];
m0_459 -> m0_485  [key=2, style=dotted];
m0_460 -> m0_170  [key=2, style=dotted];
m0_460 -> m0_172  [key=2, style=dotted];
m0_460 -> m0_461  [key=0, style=solid];
m0_461 -> m0_170  [key=2, style=dotted];
m0_461 -> m0_172  [key=2, style=dotted];
m0_461 -> m0_462  [key=0, style=solid];
m0_462 -> m0_172  [key=2, style=dotted];
m0_462 -> m0_463  [key=0, style=solid];
m0_462 -> m0_485  [key=2, style=dotted];
m0_463 -> m0_170  [key=2, style=dotted];
m0_463 -> m0_172  [key=2, style=dotted];
m0_463 -> m0_464  [key=0, style=solid];
m0_464 -> m0_172  [key=2, style=dotted];
m0_464 -> m0_465  [key=0, style=solid];
m0_464 -> m0_485  [key=2, style=dotted];
m0_465 -> m0_141  [key=2, style=dotted];
m0_465 -> m0_170  [key=2, style=dotted];
m0_465 -> m0_172  [key=2, style=dotted];
m0_465 -> m0_466  [key=0, style=solid];
m0_466 -> m0_170  [key=2, style=dotted];
m0_466 -> m0_172  [key=2, style=dotted];
m0_466 -> m0_467  [key=0, style=solid];
m0_467 -> m0_170  [key=2, style=dotted];
m0_467 -> m0_172  [key=2, style=dotted];
m0_467 -> m0_468  [key=0, style=solid];
m0_468 -> m0_170  [key=2, style=dotted];
m0_468 -> m0_172  [key=2, style=dotted];
m0_468 -> m0_469  [key=0, style=solid];
m0_468 -> m0_485  [key=2, style=dotted];
m0_474 -> m0_172  [key=2, style=dotted];
m0_474 -> m0_475  [key=0, style=solid];
m0_481 -> m0_172  [key=2, style=dotted];
m0_481 -> m0_482  [key=0, style=solid];
m0_469 -> m0_170  [key=2, style=dotted];
m0_469 -> m0_470  [key=0, style=solid];
m0_469 -> m0_472  [color=darkseagreen4, key=1, label=friends, style=dashed];
m0_469 -> m0_474  [color=darkseagreen4, key=1, label=friends, style=dashed];
m0_472 -> m0_170  [key=2, style=dotted];
m0_472 -> m0_172  [key=2, style=dotted];
m0_472 -> m0_473  [key=0, style=solid];
m0_472 -> m0_485  [key=2, style=dotted];
m0_471 -> m0_472  [key=0, style=solid];
m0_471 -> m0_474  [key=0, style=solid];
m0_473 -> m0_471  [key=0, style=solid];
m0_473 -> m0_473  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_475 -> m0_170  [key=2, style=dotted];
m0_475 -> m0_476  [key=0, style=solid];
m0_475 -> m0_479  [color=darkseagreen4, key=1, label=foes, style=dashed];
m0_475 -> m0_481  [color=darkseagreen4, key=1, label=foes, style=dashed];
m0_476 -> m0_172  [key=2, style=dotted];
m0_476 -> m0_477  [key=0, style=solid];
m0_476 -> m0_485  [key=2, style=dotted];
m0_479 -> m0_170  [key=2, style=dotted];
m0_479 -> m0_172  [key=2, style=dotted];
m0_479 -> m0_480  [key=0, style=solid];
m0_477 -> m0_470  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m0_477 -> m0_478  [key=0, style=solid];
m0_477 -> m0_479  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_477 -> m0_480  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_478 -> m0_479  [key=0, style=solid];
m0_478 -> m0_481  [key=0, style=solid];
m0_480 -> m0_478  [key=0, style=solid];
m0_480 -> m0_480  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_484 -> m0_277  [color=blue, key=0, style=bold];
m0_104 -> m0_608  [key=0, style=solid];
m0_608 -> m0_609  [key=0, style=solid];
m0_608 -> m0_611  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_608 -> m0_612  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_608 -> m0_168  [key=2, style=dotted];
m0_609 -> m0_610  [key=0, style=solid];
m0_609 -> m0_611  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_609 -> m0_170  [key=2, style=dotted];
m0_611 -> m0_612  [key=0, style=solid];
m0_611 -> m0_172  [key=2, style=dotted];
m0_612 -> m0_17  [key=2, style=dotted];
m0_612 -> m0_613  [key=0, style=solid];
m0_610 -> m0_611  [key=0, style=solid];
m0_610 -> m0_170  [key=2, style=dotted];
m0_610 -> m0_172  [key=2, style=dotted];
m0_613 -> m0_104  [color=blue, key=0, style=bold];
m0_426 -> m0_427  [key=0, style=solid];
m0_427 -> m0_428  [key=0, style=solid];
m0_427 -> m0_429  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_427 -> m0_434  [key=2, style=dotted];
m0_428 -> m0_15  [key=2, style=dotted];
m0_428 -> m0_429  [key=0, style=solid];
m0_429 -> m0_16  [key=2, style=dotted];
m0_429 -> m0_18  [key=2, style=dotted];
m0_429 -> m0_430  [key=0, style=solid];
m0_429 -> m0_431  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_429 -> m0_432  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_430 -> m0_126  [key=2, style=dotted];
m0_430 -> m0_431  [key=0, style=solid];
m0_431 -> m0_126  [key=2, style=dotted];
m0_431 -> m0_432  [key=0, style=solid];
m0_432 -> m0_31  [key=2, style=dotted];
m0_432 -> m0_141  [key=2, style=dotted];
m0_432 -> m0_433  [key=0, style=solid];
m0_433 -> m0_426  [color=blue, key=0, style=bold];
m0_358 -> m0_546  [key=0, style=solid];
m0_546 -> m0_168  [key=2, style=dotted];
m0_546 -> m0_547  [key=0, style=solid];
m0_546 -> m0_548  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_546 -> m0_549  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_547 -> m0_170  [key=2, style=dotted];
m0_547 -> m0_548  [key=0, style=solid];
m0_548 -> m0_172  [key=2, style=dotted];
m0_548 -> m0_549  [key=0, style=solid];
m0_549 -> m0_17  [key=2, style=dotted];
m0_549 -> m0_550  [key=0, style=solid];
m0_550 -> m0_358  [color=blue, key=0, style=bold];
m0_371 -> m0_372  [key=0, style=solid];
m0_372 -> m0_0  [key=2, style=dotted];
m0_372 -> m0_373  [key=0, style=solid];
m0_373 -> m0_14  [key=2, style=dotted];
m0_373 -> m0_374  [key=0, style=solid];
m0_374 -> m0_16  [key=2, style=dotted];
m0_374 -> m0_17  [key=2, style=dotted];
m0_374 -> m0_375  [key=0, style=solid];
m0_374 -> m0_376  [color=darkseagreen4, key=1, label=response, style=dashed];
m0_375 -> m0_15  [key=2, style=dotted];
m0_375 -> m0_376  [key=0, style=solid];
m0_376 -> m0_18  [key=2, style=dotted];
m0_376 -> m0_377  [key=0, style=solid];
m0_376 -> m0_378  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_377 -> m0_31  [key=2, style=dotted];
m0_377 -> m0_378  [key=0, style=solid];
m0_378 -> m0_31  [key=2, style=dotted];
m0_378 -> m0_379  [key=0, style=solid];
m0_379 -> m0_371  [color=blue, key=0, style=bold];
m0_197 -> m0_198  [key=0, style=solid];
m0_198 -> m0_196  [key=2, style=dotted];
m0_198 -> m0_199  [key=0, style=solid];
m0_199 -> m0_16  [key=2, style=dotted];
m0_199 -> m0_200  [key=0, style=solid];
m0_199 -> m0_201  [color=darkseagreen4, key=1, label=response, style=dashed];
m0_200 -> m0_15  [key=2, style=dotted];
m0_200 -> m0_201  [key=0, style=solid];
m0_201 -> m0_18  [key=2, style=dotted];
m0_201 -> m0_202  [key=0, style=solid];
m0_201 -> m0_203  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_201 -> m0_204  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_201 -> m0_205  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_201 -> m0_206  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_201 -> m0_207  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_201 -> m0_208  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_201 -> m0_209  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_201 -> m0_210  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_201 -> m0_211  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_201 -> m0_212  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_201 -> m0_213  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_201 -> m0_214  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_201 -> m0_215  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_201 -> m0_216  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_201 -> m0_217  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_201 -> m0_218  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_202 -> m0_31  [key=2, style=dotted];
m0_202 -> m0_203  [key=0, style=solid];
m0_203 -> m0_31  [key=2, style=dotted];
m0_203 -> m0_140  [key=2, style=dotted];
m0_203 -> m0_204  [key=0, style=solid];
m0_204 -> m0_31  [key=2, style=dotted];
m0_204 -> m0_205  [key=0, style=solid];
m0_205 -> m0_31  [key=2, style=dotted];
m0_205 -> m0_206  [key=0, style=solid];
m0_206 -> m0_31  [key=2, style=dotted];
m0_206 -> m0_207  [key=0, style=solid];
m0_207 -> m0_31  [key=2, style=dotted];
m0_207 -> m0_208  [key=0, style=solid];
m0_208 -> m0_31  [key=2, style=dotted];
m0_208 -> m0_141  [key=2, style=dotted];
m0_208 -> m0_209  [key=0, style=solid];
m0_209 -> m0_31  [key=2, style=dotted];
m0_209 -> m0_210  [key=0, style=solid];
m0_210 -> m0_31  [key=2, style=dotted];
m0_210 -> m0_211  [key=0, style=solid];
m0_210 -> m0_220  [key=2, style=dotted];
m0_211 -> m0_31  [key=2, style=dotted];
m0_211 -> m0_212  [key=0, style=solid];
m0_211 -> m0_220  [key=2, style=dotted];
m0_212 -> m0_31  [key=2, style=dotted];
m0_212 -> m0_213  [key=0, style=solid];
m0_213 -> m0_31  [key=2, style=dotted];
m0_213 -> m0_214  [key=0, style=solid];
m0_214 -> m0_105  [key=2, style=dotted];
m0_214 -> m0_215  [key=0, style=solid];
m0_215 -> m0_31  [key=2, style=dotted];
m0_215 -> m0_216  [key=0, style=solid];
m0_216 -> m0_105  [key=2, style=dotted];
m0_216 -> m0_217  [key=0, style=solid];
m0_217 -> m0_31  [key=2, style=dotted];
m0_217 -> m0_218  [key=0, style=solid];
m0_218 -> m0_31  [key=2, style=dotted];
m0_218 -> m0_219  [key=0, style=solid];
m0_219 -> m0_197  [color=blue, key=0, style=bold];
m0_95 -> m0_96  [key=0, style=solid];
m0_96 -> m0_97  [key=0, style=solid];
m0_96 -> m0_98  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_96 -> m0_104  [key=2, style=dotted];
m0_97 -> m0_15  [key=2, style=dotted];
m0_97 -> m0_98  [key=0, style=solid];
m0_98 -> m0_16  [key=2, style=dotted];
m0_98 -> m0_18  [key=2, style=dotted];
m0_98 -> m0_99  [key=0, style=solid];
m0_98 -> m0_100  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_98 -> m0_101  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_98 -> m0_102  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_99 -> m0_100  [key=0, style=solid];
m0_99 -> m0_105  [key=2, style=dotted];
m0_100 -> m0_101  [key=0, style=solid];
m0_100 -> m0_105  [key=2, style=dotted];
m0_101 -> m0_102  [key=0, style=solid];
m0_101 -> m0_106  [key=2, style=dotted];
m0_102 -> m0_103  [key=0, style=solid];
m0_102 -> m0_106  [key=2, style=dotted];
m0_103 -> m0_95  [color=blue, key=0, style=bold];
m0_127 -> m0_128  [key=0, style=solid];
m0_128 -> m0_129  [key=0, style=solid];
m0_128 -> m0_130  [color=darkseagreen4, key=1, label=culture, style=dashed];
m0_129 -> m0_130  [key=0, style=solid];
m0_129 -> m0_131  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_129 -> m0_139  [key=2, style=dotted];
m0_130 -> m0_15  [key=2, style=dotted];
m0_130 -> m0_131  [key=0, style=solid];
m0_131 -> m0_16  [key=2, style=dotted];
m0_131 -> m0_18  [key=2, style=dotted];
m0_131 -> m0_132  [key=0, style=solid];
m0_131 -> m0_133  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_131 -> m0_134  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_131 -> m0_135  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_131 -> m0_136  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_131 -> m0_137  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_132 -> m0_105  [key=2, style=dotted];
m0_132 -> m0_133  [key=0, style=solid];
m0_133 -> m0_105  [key=2, style=dotted];
m0_133 -> m0_134  [key=0, style=solid];
m0_134 -> m0_105  [key=2, style=dotted];
m0_134 -> m0_135  [key=0, style=solid];
m0_135 -> m0_31  [key=2, style=dotted];
m0_135 -> m0_136  [key=0, style=solid];
m0_136 -> m0_31  [key=2, style=dotted];
m0_136 -> m0_137  [key=0, style=solid];
m0_136 -> m0_140  [key=2, style=dotted];
m0_137 -> m0_31  [key=2, style=dotted];
m0_137 -> m0_138  [key=0, style=solid];
m0_137 -> m0_141  [key=2, style=dotted];
m0_138 -> m0_127  [color=blue, key=0, style=bold];
m0_64 -> m0_65  [key=0, style=solid];
m0_65 -> m0_0  [key=2, style=dotted];
m0_65 -> m0_66  [key=0, style=solid];
m0_66 -> m0_14  [key=2, style=dotted];
m0_66 -> m0_67  [key=0, style=solid];
m0_66 -> m0_68  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_67 -> m0_15  [key=2, style=dotted];
m0_67 -> m0_68  [key=0, style=solid];
m0_68 -> m0_16  [key=2, style=dotted];
m0_68 -> m0_17  [key=2, style=dotted];
m0_68 -> m0_18  [key=2, style=dotted];
m0_68 -> m0_69  [key=0, style=solid];
m0_68 -> m0_70  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_69 -> m0_19  [key=2, style=dotted];
m0_69 -> m0_70  [key=0, style=solid];
m0_70 -> m0_31  [key=2, style=dotted];
m0_70 -> m0_71  [key=0, style=solid];
m0_71 -> m0_64  [color=blue, key=0, style=bold];
m0_56 -> m0_57  [key=0, style=solid];
m0_56 -> m0_1  [color=green, key=1, label="RestSharp.Tests.NuSpecUpdateTask.BaseNuSpecUpdateTest", style=dashed];
m0_56 -> m0_2  [color=darkseagreen4, key=1, label="RestSharp.Tests.NuSpecUpdateTask.BaseNuSpecUpdateTest", style=dashed];
m0_57 -> m0_0  [key=2, style=dotted];
m0_57 -> m0_58  [key=0, style=solid];
m0_57 -> m0_17  [color=darkseagreen4, key=1, label="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenInformationalVersionIsNotDefined", style=dashed];
m0_58 -> m0_14  [key=2, style=dotted];
m0_58 -> m0_59  [key=0, style=solid];
m0_58 -> m0_60  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_58 -> m0_23  [color=darkseagreen4, key=1, label="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid", style=dashed];
m0_58 -> m0_24  [color=darkseagreen4, key=1, label="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid", style=dashed];
m0_58 -> m0_25  [color=darkseagreen4, key=1, label="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid", style=dashed];
m0_58 -> m0_28  [color=darkseagreen4, key=1, label="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid", style=dashed];
m0_58 -> m0_32  [color=darkseagreen4, key=1, label="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid", style=dashed];
m0_58 -> m0_35  [color=darkseagreen4, key=1, label="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid", style=dashed];
m0_58 -> m0_38  [color=darkseagreen4, key=1, label="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid", style=dashed];
m0_58 -> m0_42  [color=darkseagreen4, key=1, label="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid", style=dashed];
m0_58 -> m0_45  [color=darkseagreen4, key=1, label="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid", style=dashed];
m0_58 -> m0_50  [color=darkseagreen4, key=1, label="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid", style=dashed];
m0_59 -> m0_15  [key=2, style=dotted];
m0_59 -> m0_60  [key=0, style=solid];
m0_60 -> m0_16  [key=2, style=dotted];
m0_60 -> m0_17  [key=2, style=dotted];
m0_60 -> m0_18  [key=2, style=dotted];
m0_60 -> m0_61  [key=0, style=solid];
m0_60 -> m0_62  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_61 -> m0_19  [key=2, style=dotted];
m0_61 -> m0_62  [key=0, style=solid];
m0_62 -> m0_31  [key=2, style=dotted];
m0_62 -> m0_63  [key=0, style=solid];
m0_63 -> m0_56  [color=blue, key=0, style=bold];
m0_40 -> m0_41  [key=0, style=solid];
m0_41 -> m0_0  [key=2, style=dotted];
m0_41 -> m0_42  [key=0, style=solid];
m0_42 -> m0_14  [key=2, style=dotted];
m0_42 -> m0_43  [key=0, style=solid];
m0_42 -> m0_44  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_42 -> m0_21  [key=2, style=dotted];
m0_43 -> m0_15  [key=2, style=dotted];
m0_43 -> m0_44  [key=0, style=solid];
m0_43 -> m0_41  [color=blue, key=0, style=bold];
m0_44 -> m0_16  [key=2, style=dotted];
m0_44 -> m0_17  [key=2, style=dotted];
m0_44 -> m0_18  [key=2, style=dotted];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_46  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_45 -> m0_19  [key=2, style=dotted];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_47  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_45 -> m0_48  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_45 -> m0_49  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_45 -> m0_50  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_45 -> m0_52  [key=2, style=dotted];
m0_46 -> m0_31  [key=2, style=dotted];
m0_46 -> m0_47  [key=0, style=solid];
m0_46 -> m0_21  [key=2, style=dotted];
m0_46 -> m0_53  [key=2, style=dotted];
m0_46 -> m0_54  [key=2, style=dotted];
m0_47 -> m0_40  [color=blue, key=0, style=bold];
m0_47 -> m0_21  [key=2, style=dotted];
m0_47 -> m0_48  [key=0, style=solid];
m0_47 -> m0_53  [key=2, style=dotted];
m0_47 -> m0_54  [key=2, style=dotted];
m0_116 -> m0_614  [key=0, style=solid];
m0_614 -> m0_615  [key=0, style=solid];
m0_614 -> m0_616  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_614 -> m0_617  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_614 -> m0_168  [key=2, style=dotted];
m0_615 -> m0_616  [key=0, style=solid];
m0_615 -> m0_170  [key=2, style=dotted];
m0_616 -> m0_617  [key=0, style=solid];
m0_616 -> m0_172  [key=2, style=dotted];
m0_617 -> m0_17  [key=2, style=dotted];
m0_617 -> m0_618  [key=0, style=solid];
m0_618 -> m0_116  [color=blue, key=0, style=bold];
m0_301 -> m0_516  [key=0, style=solid];
m0_516 -> m0_168  [key=2, style=dotted];
m0_516 -> m0_517  [key=0, style=solid];
m0_516 -> m0_543  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_516 -> m0_544  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_517 -> m0_170  [key=2, style=dotted];
m0_517 -> m0_518  [key=0, style=solid];
m0_517 -> m0_519  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_517 -> m0_520  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_517 -> m0_521  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_517 -> m0_522  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_517 -> m0_523  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_517 -> m0_524  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_517 -> m0_525  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_517 -> m0_526  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_517 -> m0_527  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_517 -> m0_528  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_517 -> m0_529  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_517 -> m0_535  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_517 -> m0_542  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_517 -> m0_543  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_543 -> m0_172  [key=2, style=dotted];
m0_543 -> m0_544  [key=0, style=solid];
m0_544 -> m0_17  [key=2, style=dotted];
m0_544 -> m0_545  [key=0, style=solid];
m0_518 -> m0_170  [key=2, style=dotted];
m0_518 -> m0_172  [key=2, style=dotted];
m0_518 -> m0_519  [key=0, style=solid];
m0_519 -> m0_140  [key=2, style=dotted];
m0_519 -> m0_170  [key=2, style=dotted];
m0_519 -> m0_172  [key=2, style=dotted];
m0_519 -> m0_520  [key=0, style=solid];
m0_520 -> m0_172  [key=2, style=dotted];
m0_520 -> m0_521  [key=0, style=solid];
m0_520 -> m0_485  [key=2, style=dotted];
m0_521 -> m0_170  [key=2, style=dotted];
m0_521 -> m0_172  [key=2, style=dotted];
m0_521 -> m0_522  [key=0, style=solid];
m0_522 -> m0_170  [key=2, style=dotted];
m0_522 -> m0_172  [key=2, style=dotted];
m0_522 -> m0_523  [key=0, style=solid];
m0_523 -> m0_172  [key=2, style=dotted];
m0_523 -> m0_524  [key=0, style=solid];
m0_523 -> m0_485  [key=2, style=dotted];
m0_524 -> m0_170  [key=2, style=dotted];
m0_524 -> m0_172  [key=2, style=dotted];
m0_524 -> m0_525  [key=0, style=solid];
m0_525 -> m0_172  [key=2, style=dotted];
m0_525 -> m0_526  [key=0, style=solid];
m0_525 -> m0_485  [key=2, style=dotted];
m0_526 -> m0_141  [key=2, style=dotted];
m0_526 -> m0_170  [key=2, style=dotted];
m0_526 -> m0_172  [key=2, style=dotted];
m0_526 -> m0_527  [key=0, style=solid];
m0_527 -> m0_170  [key=2, style=dotted];
m0_527 -> m0_172  [key=2, style=dotted];
m0_527 -> m0_528  [key=0, style=solid];
m0_528 -> m0_170  [key=2, style=dotted];
m0_528 -> m0_172  [key=2, style=dotted];
m0_528 -> m0_529  [key=0, style=solid];
m0_529 -> m0_170  [key=2, style=dotted];
m0_529 -> m0_172  [key=2, style=dotted];
m0_529 -> m0_530  [key=0, style=solid];
m0_529 -> m0_485  [key=2, style=dotted];
m0_535 -> m0_172  [key=2, style=dotted];
m0_535 -> m0_536  [key=0, style=solid];
m0_542 -> m0_172  [key=2, style=dotted];
m0_542 -> m0_543  [key=0, style=solid];
m0_530 -> m0_170  [key=2, style=dotted];
m0_530 -> m0_531  [key=0, style=solid];
m0_530 -> m0_533  [color=darkseagreen4, key=1, label=friends, style=dashed];
m0_530 -> m0_535  [color=darkseagreen4, key=1, label=friends, style=dashed];
m0_531 -> m0_470  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m0_531 -> m0_532  [key=0, style=solid];
m0_531 -> m0_533  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_531 -> m0_534  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_533 -> m0_170  [key=2, style=dotted];
m0_533 -> m0_172  [key=2, style=dotted];
m0_533 -> m0_534  [key=0, style=solid];
m0_533 -> m0_485  [key=2, style=dotted];
m0_532 -> m0_533  [key=0, style=solid];
m0_532 -> m0_535  [key=0, style=solid];
m0_534 -> m0_532  [key=0, style=solid];
m0_534 -> m0_534  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_536 -> m0_170  [key=2, style=dotted];
m0_536 -> m0_537  [key=0, style=solid];
m0_536 -> m0_540  [color=darkseagreen4, key=1, label=foes, style=dashed];
m0_536 -> m0_542  [color=darkseagreen4, key=1, label=foes, style=dashed];
m0_537 -> m0_172  [key=2, style=dotted];
m0_537 -> m0_538  [key=0, style=solid];
m0_537 -> m0_485  [key=2, style=dotted];
m0_540 -> m0_170  [key=2, style=dotted];
m0_540 -> m0_172  [key=2, style=dotted];
m0_540 -> m0_541  [key=0, style=solid];
m0_538 -> m0_470  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m0_538 -> m0_539  [key=0, style=solid];
m0_538 -> m0_540  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_538 -> m0_541  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_539 -> m0_540  [key=0, style=solid];
m0_539 -> m0_542  [key=0, style=solid];
m0_541 -> m0_539  [key=0, style=solid];
m0_541 -> m0_541  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_545 -> m0_301  [color=blue, key=0, style=bold];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_21  [key=2, style=dotted];
m0_33 -> m0_0  [key=2, style=dotted];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_31  [color=blue, key=0, style=bold];
m0_34 -> m0_14  [key=2, style=dotted];
m0_34 -> m0_35  [key=0, style=solid];
m0_34 -> m0_36  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_35 -> m0_15  [key=2, style=dotted];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_21  [key=2, style=dotted];
m0_36 -> m0_16  [key=2, style=dotted];
m0_36 -> m0_17  [key=2, style=dotted];
m0_36 -> m0_18  [key=2, style=dotted];
m0_36 -> m0_37  [key=0, style=solid];
m0_36 -> m0_38  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_36 -> m0_34  [color=blue, key=0, style=bold];
m0_37 -> m0_19  [key=2, style=dotted];
m0_37 -> m0_38  [key=0, style=solid];
m0_38 -> m0_31  [key=2, style=dotted];
m0_38 -> m0_39  [key=0, style=solid];
m0_38 -> m0_30  [key=2, style=dotted];
m0_38 -> m0_40  [key=2, style=dotted];
m0_39 -> m0_32  [color=blue, key=0, style=bold];
m0_39 -> m0_37  [color=blue, key=0, style=bold];
m0_302 -> m0_303  [key=0, style=solid];
m0_303 -> m0_304  [key=0, style=solid];
m0_303 -> m0_325  [key=2, style=dotted];
m0_304 -> m0_16  [key=2, style=dotted];
m0_304 -> m0_305  [key=0, style=solid];
m0_304 -> m0_306  [color=darkseagreen4, key=1, label=response, style=dashed];
m0_305 -> m0_15  [key=2, style=dotted];
m0_305 -> m0_306  [key=0, style=solid];
m0_306 -> m0_18  [key=2, style=dotted];
m0_306 -> m0_307  [key=0, style=solid];
m0_306 -> m0_308  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_306 -> m0_309  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_306 -> m0_310  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_306 -> m0_311  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_306 -> m0_312  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_306 -> m0_313  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_306 -> m0_314  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_306 -> m0_315  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_306 -> m0_316  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_306 -> m0_317  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_306 -> m0_318  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_306 -> m0_319  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_306 -> m0_320  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_306 -> m0_321  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_306 -> m0_322  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_306 -> m0_323  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_307 -> m0_31  [key=2, style=dotted];
m0_307 -> m0_308  [key=0, style=solid];
m0_308 -> m0_31  [key=2, style=dotted];
m0_308 -> m0_140  [key=2, style=dotted];
m0_308 -> m0_309  [key=0, style=solid];
m0_309 -> m0_31  [key=2, style=dotted];
m0_309 -> m0_310  [key=0, style=solid];
m0_310 -> m0_31  [key=2, style=dotted];
m0_310 -> m0_311  [key=0, style=solid];
m0_311 -> m0_31  [key=2, style=dotted];
m0_311 -> m0_312  [key=0, style=solid];
m0_312 -> m0_31  [key=2, style=dotted];
m0_312 -> m0_313  [key=0, style=solid];
m0_313 -> m0_31  [key=2, style=dotted];
m0_313 -> m0_141  [key=2, style=dotted];
m0_313 -> m0_314  [key=0, style=solid];
m0_314 -> m0_31  [key=2, style=dotted];
m0_314 -> m0_220  [key=2, style=dotted];
m0_314 -> m0_315  [key=0, style=solid];
m0_315 -> m0_31  [key=2, style=dotted];
m0_315 -> m0_220  [key=2, style=dotted];
m0_315 -> m0_316  [key=0, style=solid];
m0_316 -> m0_105  [key=2, style=dotted];
m0_316 -> m0_317  [key=0, style=solid];
m0_317 -> m0_31  [key=2, style=dotted];
m0_317 -> m0_318  [key=0, style=solid];
m0_318 -> m0_105  [key=2, style=dotted];
m0_318 -> m0_319  [key=0, style=solid];
m0_319 -> m0_31  [key=2, style=dotted];
m0_319 -> m0_320  [key=0, style=solid];
m0_320 -> m0_31  [key=2, style=dotted];
m0_320 -> m0_321  [key=0, style=solid];
m0_321 -> m0_105  [key=2, style=dotted];
m0_321 -> m0_322  [key=0, style=solid];
m0_322 -> m0_31  [key=2, style=dotted];
m0_322 -> m0_323  [key=0, style=solid];
m0_323 -> m0_31  [key=2, style=dotted];
m0_323 -> m0_324  [key=0, style=solid];
m0_324 -> m0_302  [color=blue, key=0, style=bold];
m0_425 -> m0_619  [key=0, style=solid];
m0_619 -> m0_168  [key=2, style=dotted];
m0_619 -> m0_620  [key=0, style=solid];
m0_619 -> m0_624  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_619 -> m0_625  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_620 -> m0_170  [key=2, style=dotted];
m0_620 -> m0_621  [key=0, style=solid];
m0_620 -> m0_623  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_620 -> m0_624  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_624 -> m0_172  [key=2, style=dotted];
m0_624 -> m0_625  [key=0, style=solid];
m0_625 -> m0_17  [key=2, style=dotted];
m0_625 -> m0_626  [key=0, style=solid];
m0_621 -> m0_170  [key=2, style=dotted];
m0_621 -> m0_622  [key=0, style=solid];
m0_621 -> m0_623  [color=darkseagreen4, key=1, label=idElement, style=dashed];
m0_623 -> m0_170  [key=2, style=dotted];
m0_623 -> m0_172  [key=2, style=dotted];
m0_623 -> m0_624  [key=0, style=solid];
m0_622 -> m0_623  [key=0, style=solid];
m0_622 -> m0_627  [key=2, style=dotted];
m0_626 -> m0_425  [color=blue, key=0, style=bold];
m0_278 -> m0_279  [key=0, style=solid];
m0_279 -> m0_280  [key=0, style=solid];
m0_279 -> m0_301  [key=2, style=dotted];
m0_280 -> m0_16  [key=2, style=dotted];
m0_280 -> m0_281  [key=0, style=solid];
m0_280 -> m0_282  [color=darkseagreen4, key=1, label=response, style=dashed];
m0_281 -> m0_15  [key=2, style=dotted];
m0_281 -> m0_282  [key=0, style=solid];
m0_282 -> m0_18  [key=2, style=dotted];
m0_282 -> m0_283  [key=0, style=solid];
m0_282 -> m0_284  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_282 -> m0_285  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_282 -> m0_286  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_282 -> m0_287  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_282 -> m0_288  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_282 -> m0_289  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_282 -> m0_290  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_282 -> m0_291  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_282 -> m0_292  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_282 -> m0_293  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_282 -> m0_294  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_282 -> m0_295  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_282 -> m0_296  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_282 -> m0_297  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_282 -> m0_298  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_282 -> m0_299  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_283 -> m0_31  [key=2, style=dotted];
m0_283 -> m0_284  [key=0, style=solid];
m0_284 -> m0_31  [key=2, style=dotted];
m0_284 -> m0_140  [key=2, style=dotted];
m0_284 -> m0_285  [key=0, style=solid];
m0_285 -> m0_31  [key=2, style=dotted];
m0_285 -> m0_286  [key=0, style=solid];
m0_286 -> m0_31  [key=2, style=dotted];
m0_286 -> m0_287  [key=0, style=solid];
m0_287 -> m0_31  [key=2, style=dotted];
m0_287 -> m0_288  [key=0, style=solid];
m0_288 -> m0_31  [key=2, style=dotted];
m0_288 -> m0_289  [key=0, style=solid];
m0_289 -> m0_31  [key=2, style=dotted];
m0_289 -> m0_141  [key=2, style=dotted];
m0_289 -> m0_290  [key=0, style=solid];
m0_290 -> m0_31  [key=2, style=dotted];
m0_290 -> m0_220  [key=2, style=dotted];
m0_290 -> m0_291  [key=0, style=solid];
m0_291 -> m0_31  [key=2, style=dotted];
m0_291 -> m0_220  [key=2, style=dotted];
m0_291 -> m0_292  [key=0, style=solid];
m0_292 -> m0_105  [key=2, style=dotted];
m0_292 -> m0_293  [key=0, style=solid];
m0_293 -> m0_31  [key=2, style=dotted];
m0_293 -> m0_294  [key=0, style=solid];
m0_294 -> m0_105  [key=2, style=dotted];
m0_294 -> m0_295  [key=0, style=solid];
m0_295 -> m0_31  [key=2, style=dotted];
m0_295 -> m0_296  [key=0, style=solid];
m0_296 -> m0_31  [key=2, style=dotted];
m0_296 -> m0_297  [key=0, style=solid];
m0_297 -> m0_105  [key=2, style=dotted];
m0_297 -> m0_298  [key=0, style=solid];
m0_298 -> m0_31  [key=2, style=dotted];
m0_298 -> m0_299  [key=0, style=solid];
m0_299 -> m0_31  [key=2, style=dotted];
m0_299 -> m0_300  [key=0, style=solid];
m0_300 -> m0_278  [color=blue, key=0, style=bold];
m0_79 -> m0_80  [key=0, style=solid];
m0_80 -> m0_0  [key=2, style=dotted];
m0_80 -> m0_81  [key=0, style=solid];
m0_81 -> m0_14  [key=2, style=dotted];
m0_81 -> m0_82  [key=0, style=solid];
m0_81 -> m0_83  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_82 -> m0_15  [key=2, style=dotted];
m0_82 -> m0_83  [key=0, style=solid];
m0_83 -> m0_16  [key=2, style=dotted];
m0_83 -> m0_17  [key=2, style=dotted];
m0_83 -> m0_18  [key=2, style=dotted];
m0_83 -> m0_84  [key=0, style=solid];
m0_83 -> m0_85  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_84 -> m0_19  [key=2, style=dotted];
m0_84 -> m0_85  [key=0, style=solid];
m0_85 -> m0_31  [key=2, style=dotted];
m0_85 -> m0_86  [key=0, style=solid];
m0_86 -> m0_79  [color=blue, key=0, style=bold];
m0_221 -> m0_222  [key=0, style=solid];
m0_222 -> m0_223  [key=0, style=solid];
m0_222 -> m0_239  [key=2, style=dotted];
m0_223 -> m0_16  [key=2, style=dotted];
m0_223 -> m0_224  [key=0, style=solid];
m0_223 -> m0_225  [color=darkseagreen4, key=1, label=response, style=dashed];
m0_224 -> m0_15  [key=2, style=dotted];
m0_224 -> m0_225  [key=0, style=solid];
m0_225 -> m0_18  [key=2, style=dotted];
m0_225 -> m0_226  [key=0, style=solid];
m0_225 -> m0_227  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_225 -> m0_228  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_225 -> m0_229  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_225 -> m0_230  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_225 -> m0_231  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_225 -> m0_232  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_225 -> m0_233  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_225 -> m0_234  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_225 -> m0_235  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_225 -> m0_236  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_225 -> m0_237  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_226 -> m0_31  [key=2, style=dotted];
m0_226 -> m0_227  [key=0, style=solid];
m0_227 -> m0_31  [key=2, style=dotted];
m0_227 -> m0_140  [key=2, style=dotted];
m0_227 -> m0_228  [key=0, style=solid];
m0_228 -> m0_31  [key=2, style=dotted];
m0_228 -> m0_229  [key=0, style=solid];
m0_229 -> m0_31  [key=2, style=dotted];
m0_229 -> m0_230  [key=0, style=solid];
m0_230 -> m0_31  [key=2, style=dotted];
m0_230 -> m0_231  [key=0, style=solid];
m0_231 -> m0_31  [key=2, style=dotted];
m0_231 -> m0_232  [key=0, style=solid];
m0_232 -> m0_31  [key=2, style=dotted];
m0_232 -> m0_141  [key=2, style=dotted];
m0_232 -> m0_233  [key=0, style=solid];
m0_233 -> m0_31  [key=2, style=dotted];
m0_233 -> m0_220  [key=2, style=dotted];
m0_233 -> m0_234  [key=0, style=solid];
m0_234 -> m0_31  [key=2, style=dotted];
m0_234 -> m0_220  [key=2, style=dotted];
m0_234 -> m0_235  [key=0, style=solid];
m0_235 -> m0_105  [key=2, style=dotted];
m0_235 -> m0_236  [key=0, style=solid];
m0_236 -> m0_31  [key=2, style=dotted];
m0_236 -> m0_237  [key=0, style=solid];
m0_237 -> m0_31  [key=2, style=dotted];
m0_237 -> m0_238  [key=0, style=solid];
m0_238 -> m0_221  [color=blue, key=0, style=bold];
m0_239 -> m0_578  [key=0, style=solid];
m0_578 -> m0_168  [key=2, style=dotted];
m0_578 -> m0_579  [key=0, style=solid];
m0_578 -> m0_592  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_578 -> m0_593  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_579 -> m0_170  [key=2, style=dotted];
m0_579 -> m0_580  [key=0, style=solid];
m0_579 -> m0_581  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_579 -> m0_582  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_579 -> m0_583  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_579 -> m0_584  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_579 -> m0_585  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_579 -> m0_586  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_579 -> m0_587  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_579 -> m0_588  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_579 -> m0_589  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_579 -> m0_590  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_579 -> m0_591  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_579 -> m0_592  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_592 -> m0_172  [key=2, style=dotted];
m0_592 -> m0_593  [key=0, style=solid];
m0_593 -> m0_17  [key=2, style=dotted];
m0_593 -> m0_594  [key=0, style=solid];
m0_580 -> m0_172  [key=2, style=dotted];
m0_580 -> m0_581  [key=0, style=solid];
m0_580 -> m0_485  [key=2, style=dotted];
m0_581 -> m0_140  [key=2, style=dotted];
m0_581 -> m0_172  [key=2, style=dotted];
m0_581 -> m0_582  [key=0, style=solid];
m0_581 -> m0_485  [key=2, style=dotted];
m0_582 -> m0_172  [key=2, style=dotted];
m0_582 -> m0_583  [key=0, style=solid];
m0_582 -> m0_485  [key=2, style=dotted];
m0_583 -> m0_172  [key=2, style=dotted];
m0_583 -> m0_584  [key=0, style=solid];
m0_583 -> m0_485  [key=2, style=dotted];
m0_584 -> m0_172  [key=2, style=dotted];
m0_584 -> m0_585  [key=0, style=solid];
m0_584 -> m0_485  [key=2, style=dotted];
m0_585 -> m0_172  [key=2, style=dotted];
m0_585 -> m0_586  [key=0, style=solid];
m0_585 -> m0_485  [key=2, style=dotted];
m0_586 -> m0_172  [key=2, style=dotted];
m0_586 -> m0_587  [key=0, style=solid];
m0_586 -> m0_485  [key=2, style=dotted];
m0_587 -> m0_172  [key=2, style=dotted];
m0_587 -> m0_588  [key=0, style=solid];
m0_587 -> m0_485  [key=2, style=dotted];
m0_588 -> m0_141  [key=2, style=dotted];
m0_588 -> m0_172  [key=2, style=dotted];
m0_588 -> m0_589  [key=0, style=solid];
m0_588 -> m0_485  [key=2, style=dotted];
m0_589 -> m0_172  [key=2, style=dotted];
m0_589 -> m0_590  [key=0, style=solid];
m0_589 -> m0_485  [key=2, style=dotted];
m0_590 -> m0_172  [key=2, style=dotted];
m0_590 -> m0_591  [key=0, style=solid];
m0_590 -> m0_485  [key=2, style=dotted];
m0_591 -> m0_170  [key=2, style=dotted];
m0_591 -> m0_172  [key=2, style=dotted];
m0_591 -> m0_592  [key=0, style=solid];
m0_591 -> m0_485  [key=2, style=dotted];
m0_594 -> m0_239  [color=blue, key=0, style=bold];
m0_16 -> m0_17  [key=0, style=solid];
m0_359 -> m0_360  [key=0, style=solid];
m0_360 -> m0_0  [key=2, style=dotted];
m0_360 -> m0_361  [key=0, style=solid];
m0_361 -> m0_14  [key=2, style=dotted];
m0_361 -> m0_362  [key=0, style=solid];
m0_362 -> m0_16  [key=2, style=dotted];
m0_362 -> m0_17  [key=2, style=dotted];
m0_362 -> m0_363  [key=0, style=solid];
m0_362 -> m0_364  [color=darkseagreen4, key=1, label=response, style=dashed];
m0_363 -> m0_15  [key=2, style=dotted];
m0_363 -> m0_364  [key=0, style=solid];
m0_364 -> m0_18  [key=2, style=dotted];
m0_364 -> m0_365  [key=0, style=solid];
m0_364 -> m0_366  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_364 -> m0_367  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_364 -> m0_368  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_364 -> m0_369  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_365 -> m0_19  [key=2, style=dotted];
m0_365 -> m0_366  [key=0, style=solid];
m0_366 -> m0_31  [key=2, style=dotted];
m0_366 -> m0_367  [key=0, style=solid];
m0_367 -> m0_31  [key=2, style=dotted];
m0_367 -> m0_368  [key=0, style=solid];
m0_368 -> m0_31  [key=2, style=dotted];
m0_368 -> m0_369  [key=0, style=solid];
m0_369 -> m0_31  [key=2, style=dotted];
m0_369 -> m0_370  [key=0, style=solid];
m0_370 -> m0_359  [color=blue, key=0, style=bold];
m0_174 -> m0_175  [key=0, style=solid];
m0_175 -> m0_176  [key=0, style=solid];
m0_175 -> m0_180  [color=darkseagreen4, key=1, label=culture, style=dashed];
m0_175 -> m0_182  [color=darkseagreen4, key=1, label=culture, style=dashed];
m0_176 -> m0_176  [color=darkorchid, key=3, label="Local variable string format", style=bold];
m0_176 -> m0_177  [key=0, style=solid];
m0_176 -> m0_180  [color=darkseagreen4, key=1, label=format, style=dashed];
m0_176 -> m0_182  [color=darkseagreen4, key=1, label=format, style=dashed];
m0_180 -> m0_170  [key=2, style=dotted];
m0_180 -> m0_172  [key=2, style=dotted];
m0_180 -> m0_181  [key=0, style=solid];
m0_180 -> m0_187  [key=2, style=dotted];
m0_182 -> m0_15  [key=2, style=dotted];
m0_182 -> m0_183  [key=0, style=solid];
m0_182 -> m0_184  [color=darkseagreen4, key=1, label=xml, style=dashed];
m0_177 -> m0_140  [key=2, style=dotted];
m0_177 -> m0_178  [key=0, style=solid];
m0_177 -> m0_180  [color=darkseagreen4, key=1, label=date, style=dashed];
m0_177 -> m0_185  [color=darkseagreen4, key=1, label=date, style=dashed];
m0_178 -> m0_168  [key=2, style=dotted];
m0_178 -> m0_179  [key=0, style=solid];
m0_178 -> m0_181  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_178 -> m0_183  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_185 -> m0_31  [key=2, style=dotted];
m0_185 -> m0_186  [key=0, style=solid];
m0_179 -> m0_170  [key=2, style=dotted];
m0_179 -> m0_180  [key=0, style=solid];
m0_179 -> m0_181  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_181 -> m0_172  [key=2, style=dotted];
m0_181 -> m0_182  [key=0, style=solid];
m0_183 -> m0_16  [key=2, style=dotted];
m0_183 -> m0_17  [key=2, style=dotted];
m0_183 -> m0_184  [key=0, style=solid];
m0_184 -> m0_18  [key=2, style=dotted];
m0_184 -> m0_185  [key=0, style=solid];
m0_186 -> m0_174  [color=blue, key=0, style=bold];
m0_400 -> m0_401  [key=0, style=solid];
m0_401 -> m0_0  [key=2, style=dotted];
m0_401 -> m0_402  [key=0, style=solid];
m0_402 -> m0_14  [key=2, style=dotted];
m0_402 -> m0_403  [key=0, style=solid];
m0_403 -> m0_16  [key=2, style=dotted];
m0_403 -> m0_17  [key=2, style=dotted];
m0_403 -> m0_404  [key=0, style=solid];
m0_403 -> m0_405  [color=darkseagreen4, key=1, label=response, style=dashed];
m0_404 -> m0_15  [key=2, style=dotted];
m0_404 -> m0_405  [key=0, style=solid];
m0_405 -> m0_18  [key=2, style=dotted];
m0_405 -> m0_406  [key=0, style=solid];
m0_406 -> m0_407  [key=0, style=solid];
m0_406 -> m0_408  [key=2, style=dotted];
m0_407 -> m0_400  [color=blue, key=0, style=bold];
m0_139 -> m0_128  [color=darkorchid, key=3, label="Parameter variable System.Globalization.CultureInfo culture", style=bold];
m0_139 -> m0_601  [key=0, style=solid];
m0_139 -> m0_603  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m0_601 -> m0_602  [key=0, style=solid];
m0_601 -> m0_604  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_601 -> m0_605  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_601 -> m0_168  [key=2, style=dotted];
m0_603 -> m0_604  [key=0, style=solid];
m0_603 -> m0_140  [key=2, style=dotted];
m0_603 -> m0_141  [key=2, style=dotted];
m0_603 -> m0_170  [key=2, style=dotted];
m0_603 -> m0_172  [key=2, style=dotted];
m0_603 -> m0_607  [key=2, style=dotted];
m0_602 -> m0_603  [key=0, style=solid];
m0_602 -> m0_604  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_602 -> m0_170  [key=2, style=dotted];
m0_604 -> m0_605  [key=0, style=solid];
m0_604 -> m0_172  [key=2, style=dotted];
m0_605 -> m0_17  [key=2, style=dotted];
m0_605 -> m0_606  [key=0, style=solid];
m0_606 -> m0_139  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [color=green, key=0, style=solid];
m0_0 -> m0_5  [color=darkorchid, key=3, label="Parameter variable string sampleFile", style=bold];
m0_0 -> m0_23  [color=darkorchid, key=3, label="Parameter variable string sampleFile", style=bold];
m0_0 -> m0_33  [color=darkorchid, key=3, label="Parameter variable string sampleFile", style=bold];
m0_0 -> m0_49  [color=darkorchid, key=3, label="Parameter variable string sampleFile", style=bold];
m0_0 -> m0_80  [color=darkorchid, key=3, label="Parameter variable string sampleFile", style=bold];
m0_0 -> m0_360  [color=darkorchid, key=3, label="Parameter variable string sampleFile", style=bold];
m0_0 -> m0_372  [color=darkorchid, key=3, label="Parameter variable string sampleFile", style=bold];
m0_0 -> m0_381  [color=darkorchid, key=3, label="Parameter variable string sampleFile", style=bold];
m0_0 -> m0_401  [color=darkorchid, key=3, label="Parameter variable string sampleFile", style=bold];
m0_0 -> m0_410  [color=darkorchid, key=3, label="Parameter variable string sampleFile", style=bold];
m0_1 -> m0_2  [color=green, key=0, style=solid];
m0_1 -> n4  [key=2, style=dotted];
m0_1 -> m0_4  [color=green, key=2, style=dotted];
m0_2 -> m0_0  [color=blue, key=0, style=bold];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_5  [key=2, style=dotted];
m0_22 -> m0_23  [key=0, style=solid];
m0_23 -> m0_0  [key=2, style=dotted];
m0_23 -> m0_24  [key=0, style=solid];
m0_24 -> m0_14  [key=2, style=dotted];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_26  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_25 -> m0_15  [key=2, style=dotted];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_12  [key=2, style=dotted];
m0_26 -> m0_16  [key=2, style=dotted];
m0_26 -> m0_17  [key=2, style=dotted];
m0_26 -> m0_18  [key=2, style=dotted];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_28  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_26 -> m0_29  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_26 -> m0_22  [color=blue, key=0, style=bold];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_31  [key=2, style=dotted];
m0_28 -> m0_19  [key=2, style=dotted];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_30  [key=2, style=dotted];
m0_29 -> m0_30  [key=0, style=solid];
m0_29 -> m0_31  [key=2, style=dotted];
m0_29 -> m0_27  [color=blue, key=0, style=bold];
m0_30 -> m0_22  [color=blue, key=0, style=bold];
m0_326 -> m0_327  [key=0, style=solid];
m0_327 -> m0_301  [key=2, style=dotted];
m0_327 -> m0_328  [key=0, style=solid];
m0_328 -> m0_16  [key=2, style=dotted];
m0_328 -> m0_329  [key=0, style=solid];
m0_328 -> m0_330  [color=darkseagreen4, key=1, label=response, style=dashed];
m0_329 -> m0_15  [key=2, style=dotted];
m0_329 -> m0_330  [key=0, style=solid];
m0_330 -> m0_18  [key=2, style=dotted];
m0_330 -> m0_331  [key=0, style=solid];
m0_330 -> m0_332  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_330 -> m0_333  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_330 -> m0_334  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_330 -> m0_335  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_330 -> m0_336  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_330 -> m0_337  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_330 -> m0_338  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_330 -> m0_339  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_330 -> m0_340  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_330 -> m0_341  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_330 -> m0_342  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_330 -> m0_343  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_330 -> m0_344  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_330 -> m0_345  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_330 -> m0_346  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_330 -> m0_347  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_331 -> m0_31  [key=2, style=dotted];
m0_331 -> m0_332  [key=0, style=solid];
m0_332 -> m0_31  [key=2, style=dotted];
m0_332 -> m0_140  [key=2, style=dotted];
m0_332 -> m0_333  [key=0, style=solid];
m0_333 -> m0_31  [key=2, style=dotted];
m0_333 -> m0_334  [key=0, style=solid];
m0_334 -> m0_31  [key=2, style=dotted];
m0_334 -> m0_335  [key=0, style=solid];
m0_335 -> m0_31  [key=2, style=dotted];
m0_335 -> m0_336  [key=0, style=solid];
m0_336 -> m0_31  [key=2, style=dotted];
m0_336 -> m0_337  [key=0, style=solid];
m0_337 -> m0_31  [key=2, style=dotted];
m0_337 -> m0_141  [key=2, style=dotted];
m0_337 -> m0_338  [key=0, style=solid];
m0_338 -> m0_31  [key=2, style=dotted];
m0_338 -> m0_220  [key=2, style=dotted];
m0_338 -> m0_339  [key=0, style=solid];
m0_339 -> m0_31  [key=2, style=dotted];
m0_339 -> m0_220  [key=2, style=dotted];
m0_339 -> m0_340  [key=0, style=solid];
m0_340 -> m0_105  [key=2, style=dotted];
m0_340 -> m0_341  [key=0, style=solid];
m0_341 -> m0_31  [key=2, style=dotted];
m0_341 -> m0_342  [key=0, style=solid];
m0_342 -> m0_105  [key=2, style=dotted];
m0_342 -> m0_343  [key=0, style=solid];
m0_343 -> m0_31  [key=2, style=dotted];
m0_343 -> m0_344  [key=0, style=solid];
m0_344 -> m0_31  [key=2, style=dotted];
m0_344 -> m0_345  [key=0, style=solid];
m0_345 -> m0_105  [key=2, style=dotted];
m0_345 -> m0_346  [key=0, style=solid];
m0_346 -> m0_31  [key=2, style=dotted];
m0_346 -> m0_347  [key=0, style=solid];
m0_347 -> m0_31  [key=2, style=dotted];
m0_347 -> m0_348  [key=0, style=solid];
m0_348 -> m0_326  [color=blue, key=0, style=bold];
m0_87 -> m0_88  [key=0, style=solid];
m0_88 -> m0_0  [key=2, style=dotted];
m0_88 -> m0_89  [key=0, style=solid];
m0_89 -> m0_14  [key=2, style=dotted];
m0_89 -> m0_90  [key=0, style=solid];
m0_89 -> m0_91  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_90 -> m0_15  [key=2, style=dotted];
m0_90 -> m0_91  [key=0, style=solid];
m0_91 -> m0_16  [key=2, style=dotted];
m0_91 -> m0_17  [key=2, style=dotted];
m0_91 -> m0_18  [key=2, style=dotted];
m0_91 -> m0_92  [key=0, style=solid];
m0_91 -> m0_93  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_92 -> m0_19  [key=2, style=dotted];
m0_92 -> m0_93  [key=0, style=solid];
m0_93 -> m0_31  [key=2, style=dotted];
m0_93 -> m0_94  [key=0, style=solid];
m0_94 -> m0_87  [color=blue, key=0, style=bold];
m0_107 -> m0_108  [key=0, style=solid];
m0_108 -> m0_109  [key=0, style=solid];
m0_108 -> m0_110  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_108 -> m0_116  [key=2, style=dotted];
m0_109 -> m0_15  [key=2, style=dotted];
m0_109 -> m0_110  [key=0, style=solid];
m0_110 -> m0_16  [key=2, style=dotted];
m0_110 -> m0_18  [key=2, style=dotted];
m0_110 -> m0_111  [key=0, style=solid];
m0_110 -> m0_112  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_110 -> m0_113  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_110 -> m0_114  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_111 -> m0_105  [key=2, style=dotted];
m0_111 -> m0_112  [key=0, style=solid];
m0_112 -> m0_105  [key=2, style=dotted];
m0_112 -> m0_113  [key=0, style=solid];
m0_113 -> m0_106  [key=2, style=dotted];
m0_113 -> m0_114  [key=0, style=solid];
m0_114 -> m0_106  [key=2, style=dotted];
m0_114 -> m0_115  [key=0, style=solid];
m0_115 -> m0_107  [color=blue, key=0, style=bold];
m0_349 -> m0_350  [key=0, style=solid];
m0_350 -> m0_351  [key=0, style=solid];
m0_350 -> m0_358  [key=2, style=dotted];
m0_351 -> m0_16  [key=2, style=dotted];
m0_351 -> m0_352  [key=0, style=solid];
m0_351 -> m0_353  [color=darkseagreen4, key=1, label=response, style=dashed];
m0_352 -> m0_15  [key=2, style=dotted];
m0_352 -> m0_353  [key=0, style=solid];
m0_353 -> m0_18  [key=2, style=dotted];
m0_353 -> m0_354  [key=0, style=solid];
m0_353 -> m0_355  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_353 -> m0_356  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_354 -> m0_105  [key=2, style=dotted];
m0_354 -> m0_355  [key=0, style=solid];
m0_355 -> m0_31  [key=2, style=dotted];
m0_355 -> m0_356  [key=0, style=solid];
m0_356 -> m0_31  [key=2, style=dotted];
m0_356 -> m0_357  [key=0, style=solid];
m0_357 -> m0_349  [color=blue, key=0, style=bold];
m0_72 -> m0_73  [key=0, style=solid];
m0_73 -> m0_0  [key=2, style=dotted];
m0_73 -> m0_74  [key=0, style=solid];
m0_74 -> m0_14  [key=2, style=dotted];
m0_74 -> m0_75  [key=0, style=solid];
m0_74 -> m0_76  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_75 -> m0_15  [key=2, style=dotted];
m0_75 -> m0_76  [key=0, style=solid];
m0_76 -> m0_16  [key=2, style=dotted];
m0_76 -> m0_17  [key=2, style=dotted];
m0_76 -> m0_18  [key=2, style=dotted];
m0_76 -> m0_77  [key=0, style=solid];
m0_77 -> m0_31  [key=2, style=dotted];
m0_77 -> m0_78  [key=0, style=solid];
m0_78 -> m0_72  [color=blue, key=0, style=bold];
m0_196 -> m0_551  [key=0, style=solid];
m0_551 -> m0_168  [key=2, style=dotted];
m0_551 -> m0_552  [key=0, style=solid];
m0_551 -> m0_575  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_551 -> m0_576  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_552 -> m0_170  [key=2, style=dotted];
m0_552 -> m0_553  [key=0, style=solid];
m0_552 -> m0_554  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_552 -> m0_555  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_552 -> m0_556  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_552 -> m0_557  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_552 -> m0_558  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_552 -> m0_559  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_552 -> m0_560  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_552 -> m0_561  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_552 -> m0_562  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_552 -> m0_563  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_552 -> m0_564  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_552 -> m0_565  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_552 -> m0_566  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_552 -> m0_567  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_552 -> m0_573  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_552 -> m0_574  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_552 -> m0_575  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_575 -> m0_172  [key=2, style=dotted];
m0_575 -> m0_576  [key=0, style=solid];
m0_576 -> m0_17  [key=2, style=dotted];
m0_576 -> m0_577  [key=0, style=solid];
m0_553 -> m0_170  [key=2, style=dotted];
m0_553 -> m0_172  [key=2, style=dotted];
m0_553 -> m0_554  [key=0, style=solid];
m0_554 -> m0_140  [key=2, style=dotted];
m0_554 -> m0_170  [key=2, style=dotted];
m0_554 -> m0_172  [key=2, style=dotted];
m0_554 -> m0_555  [key=0, style=solid];
m0_555 -> m0_170  [key=2, style=dotted];
m0_555 -> m0_172  [key=2, style=dotted];
m0_555 -> m0_556  [key=0, style=solid];
m0_556 -> m0_170  [key=2, style=dotted];
m0_556 -> m0_172  [key=2, style=dotted];
m0_556 -> m0_557  [key=0, style=solid];
m0_557 -> m0_170  [key=2, style=dotted];
m0_557 -> m0_172  [key=2, style=dotted];
m0_557 -> m0_558  [key=0, style=solid];
m0_558 -> m0_170  [key=2, style=dotted];
m0_558 -> m0_172  [key=2, style=dotted];
m0_558 -> m0_559  [key=0, style=solid];
m0_559 -> m0_170  [key=2, style=dotted];
m0_559 -> m0_172  [key=2, style=dotted];
m0_559 -> m0_560  [key=0, style=solid];
m0_560 -> m0_170  [key=2, style=dotted];
m0_560 -> m0_172  [key=2, style=dotted];
m0_560 -> m0_561  [key=0, style=solid];
m0_561 -> m0_141  [key=2, style=dotted];
m0_561 -> m0_170  [key=2, style=dotted];
m0_561 -> m0_172  [key=2, style=dotted];
m0_561 -> m0_562  [key=0, style=solid];
m0_562 -> m0_170  [key=2, style=dotted];
m0_562 -> m0_172  [key=2, style=dotted];
m0_562 -> m0_563  [key=0, style=solid];
m0_563 -> m0_170  [key=2, style=dotted];
m0_563 -> m0_172  [key=2, style=dotted];
m0_563 -> m0_564  [key=0, style=solid];
m0_564 -> m0_170  [key=2, style=dotted];
m0_564 -> m0_172  [key=2, style=dotted];
m0_564 -> m0_565  [key=0, style=solid];
m0_565 -> m0_170  [key=2, style=dotted];
m0_565 -> m0_172  [key=2, style=dotted];
m0_565 -> m0_566  [key=0, style=solid];
m0_566 -> m0_170  [key=2, style=dotted];
m0_566 -> m0_172  [key=2, style=dotted];
m0_566 -> m0_567  [key=0, style=solid];
m0_567 -> m0_170  [key=2, style=dotted];
m0_567 -> m0_172  [key=2, style=dotted];
m0_567 -> m0_568  [key=0, style=solid];
m0_573 -> m0_172  [key=2, style=dotted];
m0_573 -> m0_574  [key=0, style=solid];
m0_574 -> m0_170  [key=2, style=dotted];
m0_574 -> m0_172  [key=2, style=dotted];
m0_574 -> m0_575  [key=0, style=solid];
m0_568 -> m0_170  [key=2, style=dotted];
m0_568 -> m0_569  [key=0, style=solid];
m0_568 -> m0_571  [color=darkseagreen4, key=1, label=friends, style=dashed];
m0_568 -> m0_573  [color=darkseagreen4, key=1, label=friends, style=dashed];
m0_569 -> m0_570  [key=0, style=solid];
m0_569 -> m0_571  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_569 -> m0_572  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_569 -> m0_470  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m0_571 -> m0_170  [key=2, style=dotted];
m0_571 -> m0_172  [key=2, style=dotted];
m0_571 -> m0_572  [key=0, style=solid];
m0_570 -> m0_571  [key=0, style=solid];
m0_570 -> m0_573  [key=0, style=solid];
m0_572 -> m0_570  [key=0, style=solid];
m0_572 -> m0_572  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_577 -> m0_196  [color=blue, key=0, style=bold];
m0_48 -> m0_49  [key=0, style=solid];
m0_48 -> m0_21  [key=2, style=dotted];
m0_48 -> m0_53  [key=2, style=dotted];
m0_48 -> m0_54  [key=2, style=dotted];
m0_49 -> m0_0  [key=2, style=dotted];
m0_49 -> m0_50  [key=0, style=solid];
m0_49 -> m0_21  [key=2, style=dotted];
m0_49 -> m0_53  [key=2, style=dotted];
m0_49 -> m0_54  [key=2, style=dotted];
m0_50 -> m0_14  [key=2, style=dotted];
m0_50 -> m0_51  [key=0, style=solid];
m0_50 -> m0_52  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_50 -> m0_30  [key=2, style=dotted];
m0_50 -> m0_53  [key=2, style=dotted];
m0_50 -> m0_54  [key=2, style=dotted];
m0_50 -> m0_55  [key=2, style=dotted];
m0_51 -> m0_15  [key=2, style=dotted];
m0_51 -> m0_52  [key=0, style=solid];
m0_51 -> m0_44  [color=blue, key=0, style=bold];
m0_52 -> m0_16  [key=2, style=dotted];
m0_52 -> m0_17  [key=2, style=dotted];
m0_52 -> m0_18  [key=2, style=dotted];
m0_52 -> m0_53  [key=0, style=solid];
m0_52 -> m0_54  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_53 -> m0_19  [key=2, style=dotted];
m0_53 -> m0_54  [key=0, style=solid];
m0_54 -> m0_31  [key=2, style=dotted];
m0_54 -> m0_55  [key=0, style=solid];
m0_55 -> m0_48  [color=blue, key=0, style=bold];
m0_380 -> m0_381  [key=0, style=solid];
m0_381 -> m0_0  [key=2, style=dotted];
m0_381 -> m0_382  [key=0, style=solid];
m0_382 -> m0_14  [key=2, style=dotted];
m0_382 -> m0_383  [key=0, style=solid];
m0_383 -> m0_16  [key=2, style=dotted];
m0_383 -> m0_17  [key=2, style=dotted];
m0_383 -> m0_384  [key=0, style=solid];
m0_383 -> m0_385  [color=darkseagreen4, key=1, label=response, style=dashed];
m0_384 -> m0_15  [key=2, style=dotted];
m0_384 -> m0_385  [key=0, style=solid];
m0_385 -> m0_18  [key=2, style=dotted];
m0_385 -> m0_386  [key=0, style=solid];
m0_385 -> m0_387  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_385 -> m0_388  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_386 -> m0_19  [key=2, style=dotted];
m0_386 -> m0_387  [key=0, style=solid];
m0_387 -> m0_31  [key=2, style=dotted];
m0_387 -> m0_388  [key=0, style=solid];
m0_388 -> m0_31  [key=2, style=dotted];
m0_388 -> m0_389  [key=0, style=solid];
m0_389 -> m0_380  [color=blue, key=0, style=bold];
m0_142 -> m0_143  [key=0, style=solid];
m0_143 -> m0_144  [key=0, style=solid];
m0_143 -> m0_157  [color=darkseagreen4, key=1, label=culture, style=dashed];
m0_144 -> m0_145  [key=0, style=solid];
m0_144 -> m0_155  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_144 -> m0_156  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_144 -> m0_168  [key=2, style=dotted];
m0_157 -> m0_15  [key=2, style=dotted];
m0_157 -> m0_158  [key=0, style=solid];
m0_145 -> m0_145  [color=darkorchid, key=3, label="Local variable System.TimeSpan? nullTimespan", style=bold];
m0_145 -> m0_146  [key=0, style=solid];
m0_145 -> m0_153  [color=darkseagreen4, key=1, label=nullTimespan, style=dashed];
m0_155 -> m0_156  [key=0, style=solid];
m0_155 -> m0_172  [key=2, style=dotted];
m0_156 -> m0_16  [key=2, style=dotted];
m0_156 -> m0_17  [key=2, style=dotted];
m0_156 -> m0_157  [key=0, style=solid];
m0_156 -> m0_158  [color=darkseagreen4, key=1, label=response, style=dashed];
m0_146 -> m0_147  [key=0, style=solid];
m0_146 -> m0_154  [color=darkseagreen4, key=1, label=nullValueTimeSpan, style=dashed];
m0_146 -> m0_169  [key=2, style=dotted];
m0_153 -> m0_154  [key=0, style=solid];
m0_153 -> m0_170  [key=2, style=dotted];
m0_153 -> m0_172  [key=2, style=dotted];
m0_147 -> m0_148  [key=0, style=solid];
m0_147 -> m0_149  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_147 -> m0_150  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_147 -> m0_151  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_147 -> m0_152  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_147 -> m0_153  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_147 -> m0_154  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_147 -> m0_155  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_147 -> m0_170  [key=2, style=dotted];
m0_154 -> m0_155  [key=0, style=solid];
m0_154 -> m0_170  [key=2, style=dotted];
m0_154 -> m0_172  [key=2, style=dotted];
m0_148 -> m0_149  [key=0, style=solid];
m0_148 -> m0_170  [key=2, style=dotted];
m0_148 -> m0_171  [key=2, style=dotted];
m0_148 -> m0_172  [key=2, style=dotted];
m0_149 -> m0_150  [key=0, style=solid];
m0_149 -> m0_170  [key=2, style=dotted];
m0_149 -> m0_172  [key=2, style=dotted];
m0_149 -> m0_173  [key=2, style=dotted];
m0_150 -> m0_151  [key=0, style=solid];
m0_150 -> m0_169  [key=2, style=dotted];
m0_150 -> m0_170  [key=2, style=dotted];
m0_150 -> m0_172  [key=2, style=dotted];
m0_151 -> m0_152  [key=0, style=solid];
m0_151 -> m0_169  [key=2, style=dotted];
m0_151 -> m0_170  [key=2, style=dotted];
m0_151 -> m0_172  [key=2, style=dotted];
m0_152 -> m0_153  [key=0, style=solid];
m0_152 -> m0_169  [key=2, style=dotted];
m0_152 -> m0_170  [key=2, style=dotted];
m0_152 -> m0_172  [key=2, style=dotted];
m0_158 -> m0_18  [key=2, style=dotted];
m0_158 -> m0_159  [key=0, style=solid];
m0_158 -> m0_160  [color=darkseagreen4, key=1, label=payload, style=dashed];
m0_158 -> m0_161  [color=darkseagreen4, key=1, label=payload, style=dashed];
m0_158 -> m0_162  [color=darkseagreen4, key=1, label=payload, style=dashed];
m0_158 -> m0_163  [color=darkseagreen4, key=1, label=payload, style=dashed];
m0_158 -> m0_164  [color=darkseagreen4, key=1, label=payload, style=dashed];
m0_158 -> m0_165  [color=darkseagreen4, key=1, label=payload, style=dashed];
m0_158 -> m0_166  [color=darkseagreen4, key=1, label=payload, style=dashed];
m0_159 -> m0_31  [key=2, style=dotted];
m0_159 -> m0_160  [key=0, style=solid];
m0_159 -> m0_171  [key=2, style=dotted];
m0_160 -> m0_31  [key=2, style=dotted];
m0_160 -> m0_161  [key=0, style=solid];
m0_160 -> m0_173  [key=2, style=dotted];
m0_161 -> m0_31  [key=2, style=dotted];
m0_161 -> m0_162  [key=0, style=solid];
m0_161 -> m0_169  [key=2, style=dotted];
m0_162 -> m0_31  [key=2, style=dotted];
m0_162 -> m0_163  [key=0, style=solid];
m0_162 -> m0_169  [key=2, style=dotted];
m0_163 -> m0_31  [key=2, style=dotted];
m0_163 -> m0_164  [key=0, style=solid];
m0_163 -> m0_169  [key=2, style=dotted];
m0_164 -> m0_126  [key=2, style=dotted];
m0_164 -> m0_165  [key=0, style=solid];
m0_165 -> m0_105  [key=2, style=dotted];
m0_165 -> m0_166  [key=0, style=solid];
m0_166 -> m0_31  [key=2, style=dotted];
m0_166 -> m0_167  [key=0, style=solid];
m0_166 -> m0_169  [key=2, style=dotted];
m0_167 -> m0_142  [color=blue, key=0, style=bold];
m0_240 -> m0_241  [key=0, style=solid];
m0_241 -> m0_196  [key=2, style=dotted];
m0_241 -> m0_242  [key=0, style=solid];
m0_242 -> m0_16  [key=2, style=dotted];
m0_242 -> m0_243  [key=0, style=solid];
m0_242 -> m0_244  [color=darkseagreen4, key=1, label=response, style=dashed];
m0_243 -> m0_15  [key=2, style=dotted];
m0_243 -> m0_244  [key=0, style=solid];
m0_244 -> m0_18  [key=2, style=dotted];
m0_244 -> m0_245  [key=0, style=solid];
m0_245 -> m0_126  [key=2, style=dotted];
m0_245 -> m0_246  [key=0, style=solid];
m0_246 -> m0_240  [color=blue, key=0, style=bold];
m0_417 -> m0_418  [key=0, style=solid];
m0_418 -> m0_419  [key=0, style=solid];
m0_418 -> m0_420  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_418 -> m0_425  [key=2, style=dotted];
m0_419 -> m0_15  [key=2, style=dotted];
m0_419 -> m0_420  [key=0, style=solid];
m0_420 -> m0_16  [key=2, style=dotted];
m0_420 -> m0_18  [key=2, style=dotted];
m0_420 -> m0_421  [key=0, style=solid];
m0_420 -> m0_422  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_420 -> m0_423  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_421 -> m0_126  [key=2, style=dotted];
m0_421 -> m0_422  [key=0, style=solid];
m0_422 -> m0_126  [key=2, style=dotted];
m0_422 -> m0_423  [key=0, style=solid];
m0_423 -> m0_126  [key=2, style=dotted];
m0_423 -> m0_424  [key=0, style=solid];
m0_424 -> m0_417  [color=blue, key=0, style=bold];
m0_434 -> m0_628  [key=0, style=solid];
m0_628 -> m0_168  [key=2, style=dotted];
m0_628 -> m0_629  [key=0, style=solid];
m0_628 -> m0_633  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_628 -> m0_634  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_629 -> m0_170  [key=2, style=dotted];
m0_629 -> m0_630  [key=0, style=solid];
m0_629 -> m0_632  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_629 -> m0_633  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_633 -> m0_172  [key=2, style=dotted];
m0_633 -> m0_634  [key=0, style=solid];
m0_634 -> m0_17  [key=2, style=dotted];
m0_634 -> m0_635  [key=0, style=solid];
m0_630 -> m0_170  [key=2, style=dotted];
m0_630 -> m0_631  [key=0, style=solid];
m0_630 -> m0_632  [color=darkseagreen4, key=1, label=idElement, style=dashed];
m0_632 -> m0_141  [key=2, style=dotted];
m0_632 -> m0_170  [key=2, style=dotted];
m0_632 -> m0_172  [key=2, style=dotted];
m0_632 -> m0_633  [key=0, style=solid];
m0_631 -> m0_632  [key=0, style=solid];
m0_631 -> m0_627  [key=2, style=dotted];
m0_635 -> m0_434  [color=blue, key=0, style=bold];
m0_254 -> m0_255  [key=0, style=solid];
m0_255 -> m0_256  [key=0, style=solid];
m0_255 -> m0_277  [key=2, style=dotted];
m0_256 -> m0_16  [key=2, style=dotted];
m0_256 -> m0_257  [key=0, style=solid];
m0_256 -> m0_258  [color=darkseagreen4, key=1, label=response, style=dashed];
m0_257 -> m0_15  [key=2, style=dotted];
m0_257 -> m0_258  [key=0, style=solid];
m0_258 -> m0_18  [key=2, style=dotted];
m0_258 -> m0_259  [key=0, style=solid];
m0_258 -> m0_260  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_258 -> m0_261  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_258 -> m0_262  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_258 -> m0_263  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_258 -> m0_264  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_258 -> m0_265  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_258 -> m0_266  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_258 -> m0_267  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_258 -> m0_268  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_258 -> m0_269  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_258 -> m0_270  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_258 -> m0_271  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_258 -> m0_272  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_258 -> m0_273  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_258 -> m0_274  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_258 -> m0_275  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_259 -> m0_31  [key=2, style=dotted];
m0_259 -> m0_260  [key=0, style=solid];
m0_260 -> m0_31  [key=2, style=dotted];
m0_260 -> m0_140  [key=2, style=dotted];
m0_260 -> m0_261  [key=0, style=solid];
m0_261 -> m0_31  [key=2, style=dotted];
m0_261 -> m0_262  [key=0, style=solid];
m0_262 -> m0_31  [key=2, style=dotted];
m0_262 -> m0_263  [key=0, style=solid];
m0_263 -> m0_31  [key=2, style=dotted];
m0_263 -> m0_264  [key=0, style=solid];
m0_264 -> m0_31  [key=2, style=dotted];
m0_264 -> m0_265  [key=0, style=solid];
m0_265 -> m0_31  [key=2, style=dotted];
m0_265 -> m0_141  [key=2, style=dotted];
m0_265 -> m0_266  [key=0, style=solid];
m0_266 -> m0_31  [key=2, style=dotted];
m0_266 -> m0_220  [key=2, style=dotted];
m0_266 -> m0_267  [key=0, style=solid];
m0_267 -> m0_31  [key=2, style=dotted];
m0_267 -> m0_220  [key=2, style=dotted];
m0_267 -> m0_268  [key=0, style=solid];
m0_268 -> m0_105  [key=2, style=dotted];
m0_268 -> m0_269  [key=0, style=solid];
m0_269 -> m0_31  [key=2, style=dotted];
m0_269 -> m0_270  [key=0, style=solid];
m0_270 -> m0_105  [key=2, style=dotted];
m0_270 -> m0_271  [key=0, style=solid];
m0_271 -> m0_31  [key=2, style=dotted];
m0_271 -> m0_272  [key=0, style=solid];
m0_272 -> m0_31  [key=2, style=dotted];
m0_272 -> m0_273  [key=0, style=solid];
m0_273 -> m0_105  [key=2, style=dotted];
m0_273 -> m0_274  [key=0, style=solid];
m0_274 -> m0_31  [key=2, style=dotted];
m0_274 -> m0_275  [key=0, style=solid];
m0_275 -> m0_31  [key=2, style=dotted];
m0_275 -> m0_276  [key=0, style=solid];
m0_276 -> m0_254  [color=blue, key=0, style=bold];
m0_390 -> m0_391  [key=0, style=solid];
m0_391 -> m0_0  [key=2, style=dotted];
m0_391 -> m0_392  [key=0, style=solid];
m0_392 -> m0_14  [key=2, style=dotted];
m0_392 -> m0_393  [key=0, style=solid];
m0_393 -> m0_16  [key=2, style=dotted];
m0_393 -> m0_17  [key=2, style=dotted];
m0_393 -> m0_394  [key=0, style=solid];
m0_393 -> m0_395  [color=darkseagreen4, key=1, label=response, style=dashed];
m0_394 -> m0_15  [key=2, style=dotted];
m0_394 -> m0_395  [key=0, style=solid];
m0_395 -> m0_18  [key=2, style=dotted];
m0_395 -> m0_396  [key=0, style=solid];
m0_395 -> m0_397  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_395 -> m0_398  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_396 -> m0_19  [key=2, style=dotted];
m0_396 -> m0_397  [key=0, style=solid];
m0_397 -> m0_31  [key=2, style=dotted];
m0_397 -> m0_398  [key=0, style=solid];
m0_398 -> m0_31  [key=2, style=dotted];
m0_398 -> m0_399  [key=0, style=solid];
m0_399 -> m0_390  [color=blue, key=0, style=bold];
m0_188 -> m0_189  [key=0, style=solid];
m0_189 -> m0_190  [key=0, style=solid];
m0_189 -> m0_196  [key=2, style=dotted];
m0_190 -> m0_16  [key=2, style=dotted];
m0_190 -> m0_191  [key=0, style=solid];
m0_190 -> m0_192  [color=darkseagreen4, key=1, label=response, style=dashed];
m0_191 -> m0_15  [key=2, style=dotted];
m0_191 -> m0_192  [key=0, style=solid];
m0_192 -> m0_18  [key=2, style=dotted];
m0_192 -> m0_193  [key=0, style=solid];
m0_192 -> m0_194  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_193 -> m0_105  [key=2, style=dotted];
m0_193 -> m0_194  [key=0, style=solid];
m0_194 -> m0_31  [key=2, style=dotted];
m0_194 -> m0_195  [key=0, style=solid];
m0_195 -> m0_188  [color=blue, key=0, style=bold];
m0_435 -> m0_436  [key=0, style=solid];
m0_436 -> m0_437  [key=0, style=solid];
m0_436 -> m0_446  [color=darkseagreen4, key=1, label=culture, style=dashed];
m0_437 -> m0_168  [key=2, style=dotted];
m0_437 -> m0_438  [key=0, style=solid];
m0_437 -> m0_444  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_437 -> m0_445  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_446 -> m0_15  [key=2, style=dotted];
m0_446 -> m0_447  [key=0, style=solid];
m0_438 -> m0_439  [key=0, style=solid];
m0_438 -> m0_441  [color=darkseagreen4, key=1, label=dateTimeOffset, style=dashed];
m0_438 -> m0_448  [color=darkseagreen4, key=1, label=dateTimeOffset, style=dashed];
m0_438 -> m0_453  [key=2, style=dotted];
m0_438 -> m0_454  [key=2, style=dotted];
m0_444 -> m0_172  [key=2, style=dotted];
m0_444 -> m0_445  [key=0, style=solid];
m0_445 -> m0_16  [key=2, style=dotted];
m0_445 -> m0_17  [key=2, style=dotted];
m0_445 -> m0_446  [key=0, style=solid];
m0_445 -> m0_447  [color=darkseagreen4, key=1, label=response, style=dashed];
m0_439 -> m0_440  [key=0, style=solid];
m0_439 -> m0_443  [color=darkseagreen4, key=1, label=nullableDateTimeOffsetWithValue, style=dashed];
m0_439 -> m0_451  [color=darkseagreen4, key=1, label=nullableDateTimeOffsetWithValue, style=dashed];
m0_439 -> m0_453  [key=2, style=dotted];
m0_439 -> m0_454  [key=2, style=dotted];
m0_441 -> m0_170  [key=2, style=dotted];
m0_441 -> m0_172  [key=2, style=dotted];
m0_441 -> m0_442  [key=0, style=solid];
m0_448 -> m0_31  [key=2, style=dotted];
m0_448 -> m0_449  [key=0, style=solid];
m0_440 -> m0_170  [key=2, style=dotted];
m0_440 -> m0_441  [key=0, style=solid];
m0_440 -> m0_442  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_440 -> m0_443  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_440 -> m0_444  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_443 -> m0_170  [key=2, style=dotted];
m0_443 -> m0_172  [key=2, style=dotted];
m0_443 -> m0_444  [key=0, style=solid];
m0_451 -> m0_31  [key=2, style=dotted];
m0_451 -> m0_452  [key=0, style=solid];
m0_442 -> m0_170  [key=2, style=dotted];
m0_442 -> m0_172  [key=2, style=dotted];
m0_442 -> m0_443  [key=0, style=solid];
m0_447 -> m0_18  [key=2, style=dotted];
m0_447 -> m0_448  [key=0, style=solid];
m0_447 -> m0_449  [color=darkseagreen4, key=1, label=payload, style=dashed];
m0_447 -> m0_450  [color=darkseagreen4, key=1, label=payload, style=dashed];
m0_447 -> m0_451  [color=darkseagreen4, key=1, label=payload, style=dashed];
m0_449 -> m0_126  [key=2, style=dotted];
m0_449 -> m0_450  [key=0, style=solid];
m0_450 -> m0_408  [key=2, style=dotted];
m0_450 -> m0_451  [key=0, style=solid];
m0_452 -> m0_435  [color=blue, key=0, style=bold];
m0_247 -> m0_248  [key=0, style=solid];
m0_248 -> m0_196  [key=2, style=dotted];
m0_248 -> m0_249  [key=0, style=solid];
m0_249 -> m0_16  [key=2, style=dotted];
m0_249 -> m0_250  [key=0, style=solid];
m0_249 -> m0_251  [color=darkseagreen4, key=1, label=response, style=dashed];
m0_250 -> m0_15  [key=2, style=dotted];
m0_250 -> m0_251  [key=0, style=solid];
m0_251 -> m0_18  [key=2, style=dotted];
m0_251 -> m0_252  [key=0, style=solid];
m0_252 -> m0_126  [key=2, style=dotted];
m0_252 -> m0_253  [key=0, style=solid];
m0_253 -> m0_247  [color=blue, key=0, style=bold];
m0_125 -> m0_595  [key=0, style=solid];
m0_595 -> m0_596  [key=0, style=solid];
m0_595 -> m0_598  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_595 -> m0_599  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_595 -> m0_168  [key=2, style=dotted];
m0_596 -> m0_597  [key=0, style=solid];
m0_596 -> m0_598  [color=darkseagreen4, key=1, label=root, style=dashed];
m0_596 -> m0_170  [key=2, style=dotted];
m0_598 -> m0_599  [key=0, style=solid];
m0_598 -> m0_172  [key=2, style=dotted];
m0_599 -> m0_17  [key=2, style=dotted];
m0_599 -> m0_600  [key=0, style=solid];
m0_597 -> m0_598  [key=0, style=solid];
m0_597 -> m0_170  [key=2, style=dotted];
m0_597 -> m0_172  [key=2, style=dotted];
m0_600 -> m0_125  [color=blue, key=0, style=bold];
m0_17 -> m0_11  [key=2, style=dotted];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_19  [color=darkseagreen4, key=1, label=task, style=dashed];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_21  [key=2, style=dotted];
m0_20 -> m0_16  [color=blue, key=0, style=bold];
m0_31 -> m0_32  [key=0, style=solid];
m0_3 -> m0_0  [color=blue, key=0, style=bold];
m1_1 -> m0_2  [key=0, style=solid];
m1_1 -> m1_3  [key=2, style=dotted];
m1_139 -> m1_128  [color=darkorchid, key=3, label="Parameter variable System.Globalization.CultureInfo culture", style=bold];
m1_139 -> m1_601  [key=0, style=solid];
m1_139 -> m1_603  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m1_601 -> m1_602  [key=0, style=solid];
m1_601 -> m1_604  [color=darkseagreen4, key=1, label=doc, style=dashed];
m1_601 -> m1_605  [color=darkseagreen4, key=1, label=doc, style=dashed];
m1_601 -> m1_168  [key=2, style=dotted];
m1_603 -> m1_604  [key=0, style=solid];
m1_603 -> m1_140  [key=2, style=dotted];
m1_603 -> m1_141  [key=2, style=dotted];
m1_603 -> m1_170  [key=2, style=dotted];
m1_603 -> m1_172  [key=2, style=dotted];
m1_603 -> m1_607  [key=2, style=dotted];
m1_602 -> m1_603  [key=0, style=solid];
m1_602 -> m1_604  [color=darkseagreen4, key=1, label=root, style=dashed];
m1_602 -> m1_170  [key=2, style=dotted];
m1_604 -> m1_605  [key=0, style=solid];
m1_604 -> m1_172  [key=2, style=dotted];
m1_605 -> m1_17  [key=2, style=dotted];
m1_605 -> m1_606  [key=0, style=solid];
m1_606 -> m1_139  [color=blue, key=0, style=bold];
m1_325 -> m1_486  [key=0, style=solid];
m1_486 -> m1_168  [key=2, style=dotted];
m1_486 -> m1_487  [key=0, style=solid];
m1_486 -> m1_513  [color=darkseagreen4, key=1, label=doc, style=dashed];
m1_486 -> m1_514  [color=darkseagreen4, key=1, label=doc, style=dashed];
m1_487 -> m1_170  [key=2, style=dotted];
m1_487 -> m1_488  [key=0, style=solid];
m1_487 -> m1_489  [color=darkseagreen4, key=1, label=root, style=dashed];
m1_487 -> m1_490  [color=darkseagreen4, key=1, label=root, style=dashed];
m1_487 -> m1_491  [color=darkseagreen4, key=1, label=root, style=dashed];
m1_487 -> m1_492  [color=darkseagreen4, key=1, label=root, style=dashed];
m1_487 -> m1_493  [color=darkseagreen4, key=1, label=root, style=dashed];
m1_487 -> m1_494  [color=darkseagreen4, key=1, label=root, style=dashed];
m1_487 -> m1_495  [color=darkseagreen4, key=1, label=root, style=dashed];
m1_487 -> m1_496  [color=darkseagreen4, key=1, label=root, style=dashed];
m1_487 -> m1_497  [color=darkseagreen4, key=1, label=root, style=dashed];
m1_487 -> m1_498  [color=darkseagreen4, key=1, label=root, style=dashed];
m1_487 -> m1_499  [color=darkseagreen4, key=1, label=root, style=dashed];
m1_487 -> m1_505  [color=darkseagreen4, key=1, label=root, style=dashed];
m1_487 -> m1_512  [color=darkseagreen4, key=1, label=root, style=dashed];
m1_487 -> m1_513  [color=darkseagreen4, key=1, label=root, style=dashed];
m1_513 -> m1_172  [key=2, style=dotted];
m1_513 -> m1_514  [key=0, style=solid];
m1_514 -> m1_17  [key=2, style=dotted];
m1_514 -> m1_515  [key=0, style=solid];
m1_488 -> m1_170  [key=2, style=dotted];
m1_488 -> m1_172  [key=2, style=dotted];
m1_488 -> m1_489  [key=0, style=solid];
m1_489 -> m1_140  [key=2, style=dotted];
m1_489 -> m1_170  [key=2, style=dotted];
m1_489 -> m1_172  [key=2, style=dotted];
m1_489 -> m1_490  [key=0, style=solid];
m1_490 -> m1_172  [key=2, style=dotted];
m1_490 -> m1_491  [key=0, style=solid];
m1_490 -> m1_485  [key=2, style=dotted];
m1_491 -> m1_170  [key=2, style=dotted];
m1_491 -> m1_172  [key=2, style=dotted];
m1_491 -> m1_492  [key=0, style=solid];
m1_492 -> m1_170  [key=2, style=dotted];
m1_492 -> m1_172  [key=2, style=dotted];
m1_492 -> m1_493  [key=0, style=solid];
m1_493 -> m1_172  [key=2, style=dotted];
m1_493 -> m1_494  [key=0, style=solid];
m1_493 -> m1_485  [key=2, style=dotted];
m1_494 -> m1_170  [key=2, style=dotted];
m1_494 -> m1_172  [key=2, style=dotted];
m1_494 -> m1_495  [key=0, style=solid];
m1_495 -> m1_172  [key=2, style=dotted];
m1_495 -> m1_496  [key=0, style=solid];
n56 -> n1  [color=red, key=1, label="RestSharp.Tests.NuSpecUpdateTask.BaseNuSpecUpdateTest", style=dashed];
n56 -> n2  [color=darkseagreen4, key=1, label="RestSharp.Tests.NuSpecUpdateTask.BaseNuSpecUpdateTest", style=dashed];
n56 -> d1  [color=green, key=1, label="RestSharp.Tests.NuSpecUpdateTask.BaseNuSpecUpdateTest", style=dashed];
n57 -> n17  [color=darkseagreen4, key=1, label="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenInformationalVersionIsNotDefined", style=dashed];
n58 -> n23  [color=darkseagreen4, key=1, label="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid", style=dashed];
n58 -> n24  [color=darkseagreen4, key=1, label="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid", style=dashed];
n58 -> n25  [color=darkseagreen4, key=1, label="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid", style=dashed];
n58 -> n28  [color=darkseagreen4, key=1, label="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid", style=dashed];
n58 -> n32  [color=darkseagreen4, key=1, label="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid", style=dashed];
n58 -> n35  [color=darkseagreen4, key=1, label="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid", style=dashed];
n58 -> n38  [color=darkseagreen4, key=1, label="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid", style=dashed];
n58 -> n42  [color=darkseagreen4, key=1, label="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid", style=dashed];
n58 -> n45  [color=darkseagreen4, key=1, label="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid", style=dashed];
n58 -> n50  [color=darkseagreen4, key=1, label="RestSharp.Tests.NuSpecUpdateTask.Execute.WhenSpecFileIsValid", style=dashed];
m0_636 -> m0_1  [color=darkseagreen4, key=1, label="RestSharp.Tests.XmlAttributeDeserializerTests", style=dashed];
m0_636 -> m0_5  [color=darkseagreen4, key=1, label="RestSharp.Tests.XmlAttributeDeserializerTests", style=dashed];
m0_636 -> m0_23  [color=darkseagreen4, key=1, label="RestSharp.Tests.XmlAttributeDeserializerTests", style=dashed];
m0_636 -> m0_33  [color=darkseagreen4, key=1, label="RestSharp.Tests.XmlAttributeDeserializerTests", style=dashed];
m0_636 -> m0_41  [color=darkseagreen4, key=1, label="RestSharp.Tests.XmlAttributeDeserializerTests", style=dashed];
m0_636 -> m0_49  [color=darkseagreen4, key=1, label="RestSharp.Tests.XmlAttributeDeserializerTests", style=dashed];
m0_636 -> m0_57  [color=darkseagreen4, key=1, label="RestSharp.Tests.XmlAttributeDeserializerTests", style=dashed];
m0_636 -> m0_65  [color=darkseagreen4, key=1, label="RestSharp.Tests.XmlAttributeDeserializerTests", style=dashed];
m0_636 -> m0_73  [color=darkseagreen4, key=1, label="RestSharp.Tests.XmlAttributeDeserializerTests", style=dashed];
m0_636 -> m0_80  [color=darkseagreen4, key=1, label="RestSharp.Tests.XmlAttributeDeserializerTests", style=dashed];
m0_636 -> m0_88  [color=darkseagreen4, key=1, label="RestSharp.Tests.XmlAttributeDeserializerTests", style=dashed];
m0_636 -> m0_360  [color=darkseagreen4, key=1, label="RestSharp.Tests.XmlAttributeDeserializerTests", style=dashed];
m0_636 -> m0_372  [color=darkseagreen4, key=1, label="RestSharp.Tests.XmlAttributeDeserializerTests", style=dashed];
m0_636 -> m0_381  [color=darkseagreen4, key=1, label="RestSharp.Tests.XmlAttributeDeserializerTests", style=dashed];
m0_636 -> m0_391  [color=darkseagreen4, key=1, label="RestSharp.Tests.XmlAttributeDeserializerTests", style=dashed];
m0_636 -> m0_401  [color=darkseagreen4, key=1, label="RestSharp.Tests.XmlAttributeDeserializerTests", style=dashed];
m0_636 -> m0_410  [color=darkseagreen4, key=1, label="RestSharp.Tests.XmlAttributeDeserializerTests", style=dashed];
}
