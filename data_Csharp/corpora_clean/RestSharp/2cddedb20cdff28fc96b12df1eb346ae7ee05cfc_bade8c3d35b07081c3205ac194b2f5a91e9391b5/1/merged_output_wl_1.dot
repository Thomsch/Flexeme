digraph  {
n0 [cluster="RestSharp.Deserializers.JsonDeserializer.JsonDeserializer()", label="Entry RestSharp.Deserializers.JsonDeserializer.JsonDeserializer()", span="34-34"];
n1 [cluster="RestSharp.Deserializers.JsonDeserializer.JsonDeserializer()", label="Culture = CultureInfo.InvariantCulture", span="36-36"];
n2 [cluster="RestSharp.Deserializers.JsonDeserializer.JsonDeserializer()", label="Exit RestSharp.Deserializers.JsonDeserializer.JsonDeserializer()", span="34-34"];
n3 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.RestResponse)", label="Entry RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.RestResponse)", span="39-39"];
n4 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.RestResponse)", label="var target = new T()", span="41-41"];
n8 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.RestResponse)", label="var root = FindRoot(response.Content)", span="49-49"];
n10 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.RestResponse)", label="JArray json = JArray.Parse(response.Content)", span="54-54"];
n13 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.RestResponse)", label="var root = FindRoot(response.Content)", span="60-60"];
n15 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.RestResponse)", label="var root = FindRoot(response.Content)", span="65-65"];
n5 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.RestResponse)", label="target is IList", span="43-43"];
n6 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.RestResponse)", label="var objType = target.GetType()", span="45-45"];
n12 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.RestResponse)", label="target is IDictionary", span="58-58"];
n14 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.RestResponse)", label="target = (T)BuildDictionary(target.GetType(), root.Children())", span="61-61"];
n16 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.RestResponse)", label="Map(target, root)", span="66-66"];
n17 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.RestResponse)", label="return target;", span="69-69"];
n7 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.RestResponse)", label="RootElement.HasValue()", span="47-47"];
n9 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.RestResponse)", label="target = (T)BuildList(objType, root.Children())", span="50-50"];
n11 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.RestResponse)", label="target = (T)BuildList(objType, json.Root.Children())", span="55-55"];
n20 [cluster="object.GetType()", label="Entry object.GetType()", span="0-0"];
n21 [cluster="string.HasValue()", label="Entry string.HasValue()", span="76-76"];
n22 [cluster="RestSharp.Deserializers.JsonDeserializer.FindRoot(string)", label="Entry RestSharp.Deserializers.JsonDeserializer.FindRoot(string)", span="72-72"];
n27 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", label="Entry RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", span="83-83"];
n18 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.RestResponse)", label="Exit RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.RestResponse)", span="39-39"];
n28 [cluster="RestSharp.Deserializers.JsonDeserializer.FindRoot(string)", label="JObject json = JObject.Parse(content)", span="74-74"];
n29 [cluster="RestSharp.Deserializers.JsonDeserializer.FindRoot(string)", label="JToken root = json.Root", span="75-75"];
n31 [cluster="RestSharp.Deserializers.JsonDeserializer.FindRoot(string)", label="root = json.SelectToken(RootElement)", span="78-78"];
n30 [cluster="RestSharp.Deserializers.JsonDeserializer.FindRoot(string)", label="RootElement.HasValue()", span="77-77"];
n32 [cluster="RestSharp.Deserializers.JsonDeserializer.FindRoot(string)", label="return root;", span="80-80"];
n33 [cluster="RestSharp.Deserializers.JsonDeserializer.FindRoot(string)", label="Exit RestSharp.Deserializers.JsonDeserializer.FindRoot(string)", span="72-72"];
n35 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", label="var objType = x.GetType()", span="85-85"];
n40 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", label="var actualName = name.GetNameVariants(Culture).FirstOrDefault(n => json[n] != null)", span="93-93"];
n41 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", label="var value = actualName != null ? json[actualName] : null", span="94-94"];
n47 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", label="prop.SetValue(x, tmpVal.ChangeType(type, Culture), null)", span="112-112"];
n50 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", label="prop.SetValue(x, converted, null)", span="117-117"];
n54 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", label="prop.SetValue(x, uri, null)", span="123-123"];
n57 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", label="prop.SetValue(x, raw, null)", span="128-128"];
n67 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", label="prop.SetValue(x, dt, null)", span="149-149"];
n69 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", label="prop.SetValue(x, (DateTimeOffset)dt, null)", span="151-151"];
n72 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", label="prop.SetValue(x, dec, null)", span="156-156"];
n76 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", label="prop.SetValue(x, guid, null)", span="162-162"];
n81 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", label="prop.SetValue(x, list, null)", span="170-170"];
n86 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", label="prop.SetValue(x, dict, null)", span="180-180"];
n87 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", label="var item = CreateAndMap(type, json[actualName])", span="186-186"];
n88 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", label="prop.SetValue(x, item, null)", span="187-187"];
n89 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", label="var item = CreateAndMap(type, json[actualName])", span="193-193"];
n90 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", label="prop.SetValue(x, item, null)", span="194-194"];
d79 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", color=green, community=0, label="0: prop.SetValue(x, timeSpan, null)", span="167-167"];
n117 [cluster="lambda expression", label="json[n] != null", span="93-93"];
n119 [cluster="RestSharp.Deserializers.JsonDeserializer.CreateAndMap(System.Type, JToken)", label="Entry RestSharp.Deserializers.JsonDeserializer.CreateAndMap(System.Type, JToken)", span="199-199"];
n120 [cluster="RestSharp.Deserializers.JsonDeserializer.CreateAndMap(System.Type, JToken)", label="object instance = null", span="201-201"];
n36 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", label="var props = objType.GetProperties().Where(p => p.CanWrite).ToList()", span="86-86"];
n37 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", label=props, span="88-88"];
n92 [cluster="System.Type.GetProperties()", label="Entry System.Type.GetProperties()", span="0-0"];
n113 [cluster="lambda expression", label="Entry lambda expression", span="86-86"];
n38 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", label="var type = prop.PropertyType", span="90-90"];
n39 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", label="var name = prop.Name", span="92-92"];
n91 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", label="Exit RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", span="83-83"];
n43 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", label="type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>)", span="102-102"];
n44 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", label="type = type.GetGenericArguments()[0]", span="104-104"];
n45 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", label="type.IsPrimitive", span="107-107"];
n48 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", label="type.IsEnum", span="114-114"];
n49 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", label="var converted = type.FindEnumValue(value.AsString(), Culture)", span="116-116"];
n51 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", label="type == typeof(Uri)", span="119-119"];
n55 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", label="type == typeof(string)", span="125-125"];
n58 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", label="type == typeof(DateTime) || type == typeof(DateTimeOffset)", span="130-130"];
n66 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", label="type == typeof(DateTime)", span="148-148"];
n68 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", label="type == typeof(DateTimeOffset)", span="150-150"];
n70 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", label="type == typeof(Decimal)", span="153-153"];
n73 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", label="type == typeof(Guid)", span="158-158"];
n77 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", label="type.IsGenericType", span="164-164"];
n78 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", label="var genericTypeDef = type.GetGenericTypeDefinition()", span="166-166"];
n80 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", label="var list = BuildList(type, value.Children())", span="169-169"];
n83 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", label="var keyType = type.GetGenericArguments()[0]", span="174-174"];
n85 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", label="var dict = BuildDictionary(type, value.Children())", span="179-179"];
d77 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", color=green, community=0, label="0: type == typeof(TimeSpan)", span="164-164"];
n116 [cluster="lambda expression", label="Entry lambda expression", span="93-93"];
n42 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", label="value == null || value.Type == JTokenType.Null", span="96-96"];
n46 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", label="var tmpVal = value.AsString().Replace(''\'''', string.Empty)", span="111-111"];
n52 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", label="string raw = value.AsString()", span="121-121"];
n56 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", label="string raw = value.AsString()", span="127-127"];
n61 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", label="var clean = value.AsString()", span="135-135"];
n63 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", label="value.Type == JTokenType.Date", span="138-138"];
n64 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", label="dt = value.Value<DateTime>().ToUniversalTime()", span="140-140"];
n65 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", label="dt = value.AsString().ParseJsonDate(Culture)", span="145-145"];
n71 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", label="var dec = Decimal.Parse(value.AsString(Culture), Culture)", span="155-155"];
n74 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", label="string raw = value.AsString()", span="160-160"];
d78 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", color=green, community=0, label="0: var timeSpan = TimeSpan.Parse(value.AsString(Culture))", span="166-166"];
n100 [cluster="string.Replace(string, string)", label="Entry string.Replace(string, string)", span="0-0"];
n53 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", label="var uri = new Uri(raw, UriKind.RelativeOrAbsolute)", span="122-122"];
n104 [cluster="System.Uri.Uri(string, System.UriKind)", label="Entry System.Uri.Uri(string, System.UriKind)", span="0-0"];
n59 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", label="DateTime dt", span="132-132"];
n60 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", label="DateFormat.HasValue()", span="133-133"];
n62 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", label="dt = DateTime.ParseExact(clean, DateFormat, Culture)", span="136-136"];
n105 [cluster="System.DateTime.ParseExact(string, string, System.IFormatProvider)", label="Entry System.DateTime.ParseExact(string, string, System.IFormatProvider)", span="0-0"];
n108 [cluster="string.ParseJsonDate(System.Globalization.CultureInfo)", label="Entry string.ParseJsonDate(System.Globalization.CultureInfo)", span="96-96"];
n109 [cluster="decimal.Parse(string, System.IFormatProvider)", label="Entry decimal.Parse(string, System.IFormatProvider)", span="0-0"];
n75 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", label="var guid = string.IsNullOrEmpty(raw) ? Guid.Empty : new Guid(raw)", span="161-161"];
n110 [cluster="string.IsNullOrEmpty(string)", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
n111 [cluster="System.Guid.Guid(string)", label="Entry System.Guid.Guid(string)", span="0-0"];
n79 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", label="genericTypeDef == typeof(List<>)", span="167-167"];
n82 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", label="genericTypeDef == typeof(Dictionary<,>)", span="172-172"];
n84 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", label="keyType == typeof(string)", span="177-177"];
d115 [cluster="System.TimeSpan.Parse(string)", label="Entry System.TimeSpan.Parse(string)", span="0-0"];
n114 [cluster="lambda expression", label="p.CanWrite", span="86-86"];
n115 [cluster="lambda expression", label="Exit lambda expression", span="86-86"];
n118 [cluster="lambda expression", label="Exit lambda expression", span="93-93"];
n121 [cluster="RestSharp.Deserializers.JsonDeserializer.CreateAndMap(System.Type, JToken)", label="type.IsGenericType", span="202-202"];
n122 [cluster="RestSharp.Deserializers.JsonDeserializer.CreateAndMap(System.Type, JToken)", label="var genericTypeDef = type.GetGenericTypeDefinition()", span="204-204"];
n124 [cluster="RestSharp.Deserializers.JsonDeserializer.CreateAndMap(System.Type, JToken)", label="instance = BuildDictionary(type, element.Children())", span="207-207"];
n126 [cluster="RestSharp.Deserializers.JsonDeserializer.CreateAndMap(System.Type, JToken)", label="instance = BuildList(type, element.Children())", span="211-211"];
n127 [cluster="RestSharp.Deserializers.JsonDeserializer.CreateAndMap(System.Type, JToken)", label="type == typeof(string)", span="213-213"];
n128 [cluster="RestSharp.Deserializers.JsonDeserializer.CreateAndMap(System.Type, JToken)", label="instance = (string)element", span="215-215"];
n129 [cluster="RestSharp.Deserializers.JsonDeserializer.CreateAndMap(System.Type, JToken)", label="instance = Activator.CreateInstance(type)", span="219-219"];
n130 [cluster="RestSharp.Deserializers.JsonDeserializer.CreateAndMap(System.Type, JToken)", label="Map(instance, element)", span="220-220"];
n131 [cluster="RestSharp.Deserializers.JsonDeserializer.CreateAndMap(System.Type, JToken)", label="type == typeof(string)", span="223-223"];
n132 [cluster="RestSharp.Deserializers.JsonDeserializer.CreateAndMap(System.Type, JToken)", label="instance = (string)element", span="225-225"];
n133 [cluster="RestSharp.Deserializers.JsonDeserializer.CreateAndMap(System.Type, JToken)", label="instance = Activator.CreateInstance(type)", span="229-229"];
n134 [cluster="RestSharp.Deserializers.JsonDeserializer.CreateAndMap(System.Type, JToken)", label="Map(instance, element)", span="230-230"];
n123 [cluster="RestSharp.Deserializers.JsonDeserializer.CreateAndMap(System.Type, JToken)", label="genericTypeDef == typeof(Dictionary<,>)", span="205-205"];
n125 [cluster="RestSharp.Deserializers.JsonDeserializer.CreateAndMap(System.Type, JToken)", label="genericTypeDef == typeof(List<>)", span="209-209"];
n137 [cluster="System.Type.GetGenericTypeDefinition()", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
n135 [cluster="RestSharp.Deserializers.JsonDeserializer.CreateAndMap(System.Type, JToken)", label="return instance;", span="232-232"];
n138 [cluster="System.Activator.CreateInstance(System.Type)", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
n136 [cluster="RestSharp.Deserializers.JsonDeserializer.CreateAndMap(System.Type, JToken)", label="Exit RestSharp.Deserializers.JsonDeserializer.CreateAndMap(System.Type, JToken)", span="199-199"];
n139 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildDictionary(System.Type, JEnumerable<JToken>)", label="Entry RestSharp.Deserializers.JsonDeserializer.BuildDictionary(System.Type, JEnumerable<JToken>)", span="235-235"];
n140 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildDictionary(System.Type, JEnumerable<JToken>)", label="var dict = (IDictionary)Activator.CreateInstance(type)", span="237-237"];
n141 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildDictionary(System.Type, JEnumerable<JToken>)", label="var valueType = type.GetGenericArguments()[1]", span="238-238"];
n142 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildDictionary(System.Type, JEnumerable<JToken>)", label=elements, span="239-239"];
n145 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildDictionary(System.Type, JEnumerable<JToken>)", label="dict.Add(key, item)", span="243-243"];
n146 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildDictionary(System.Type, JEnumerable<JToken>)", label="return dict;", span="246-246"];
n144 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildDictionary(System.Type, JEnumerable<JToken>)", label="var item = CreateAndMap(valueType, child.Value)", span="242-242"];
n148 [cluster="System.Type.GetGenericArguments()", label="Entry System.Type.GetGenericArguments()", span="0-0"];
n143 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildDictionary(System.Type, JEnumerable<JToken>)", label="var key = child.Name", span="241-241"];
n147 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildDictionary(System.Type, JEnumerable<JToken>)", label="Exit RestSharp.Deserializers.JsonDeserializer.BuildDictionary(System.Type, JEnumerable<JToken>)", span="235-235"];
n150 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, JEnumerable<JToken>)", label="Entry RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, JEnumerable<JToken>)", span="249-249"];
n151 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, JEnumerable<JToken>)", label="var list = (IList)Activator.CreateInstance(type)", span="251-251"];
n152 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, JEnumerable<JToken>)", label="var itemType = type.GetGenericArguments()[0]", span="252-252"];
n153 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, JEnumerable<JToken>)", label=elements, span="254-254"];
n157 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, JEnumerable<JToken>)", label="list.Add(value.Value.ChangeType(itemType, Culture))", span="261-261"];
n159 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, JEnumerable<JToken>)", label="list.Add(element.AsString())", span="266-266"];
n161 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, JEnumerable<JToken>)", label="list.Add(item)", span="271-271"];
n162 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, JEnumerable<JToken>)", label="return list;", span="274-274"];
n154 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, JEnumerable<JToken>)", label="itemType.IsPrimitive", span="256-256"];
n158 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, JEnumerable<JToken>)", label="itemType == typeof(string)", span="264-264"];
n160 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, JEnumerable<JToken>)", label="var item = CreateAndMap(itemType, element)", span="270-270"];
n155 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, JEnumerable<JToken>)", label="var value = element as JValue", span="258-258"];
n156 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, JEnumerable<JToken>)", label="value != null", span="259-259"];
n164 [cluster="System.Collections.IList.Add(object)", label="Entry System.Collections.IList.Add(object)", span="0-0"];
n163 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, JEnumerable<JToken>)", label="Exit RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, JEnumerable<JToken>)", span="249-249"];
m0_50 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", span="106-106"];
m0_51 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file="JsonTests.cs", label="var doc = CreateJsonWithoutEmptyValues()", span="108-108"];
m0_52 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file="JsonTests.cs", label="var json = new JsonDeserializer()", span="110-110"];
m0_53 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file="JsonTests.cs", label="var output = json.Deserialize<NullableValues>(new RestResponse { Content = doc })", span="111-111"];
m0_54 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Assert.NotNull(output.Id)", span="113-113"];
m0_55 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Assert.NotNull(output.StartDate)", span="114-114"];
m0_56 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Assert.NotNull(output.UniqueId)", span="115-115"];
m0_57 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Assert.Equal(123, output.Id)", span="117-117"];
m0_58 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Assert.NotNull(output.StartDate)", span="118-118"];
m0_59 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Assert.Equal(\r\n				new DateTime(2010, 2, 21, 9, 35, 00, DateTimeKind.Utc).ToString(''u''),\r\n				output.StartDate.Value.ToString(''\\nu''))", span="119-121"];
m0_60 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Assert.Equal(new Guid(GuidString), output.UniqueId)", span="122-122"];
m0_61 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", span="106-106"];
m0_222 [cluster="System.TimeSpan.TimeSpan(int, int, int)", file="JsonTests.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int)", span="0-0"];
m0_223 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", file="JsonTests.cs", label="var doc = CreateUnixDateJson()", span="340-340"];
m0_224 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", file="JsonTests.cs", label="var d = new JsonDeserializer()", span="341-341"];
m0_225 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", file="JsonTests.cs", label="var response = new RestResponse { Content = doc }", span="342-342"];
m0_226 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", file="JsonTests.cs", label="var bd = d.Deserialize<Birthdate>(response)", span="343-343"];
m0_227 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", file="JsonTests.cs", label="Assert.Equal(new DateTime(2011, 6, 30, 8, 15, 46, DateTimeKind.Utc), bd.Value)", span="345-345"];
m0_228 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", span="338-338"];
m0_221 [cluster="RestSharp.Tests.JsonTests.CreateJScriptDateJson()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.CreateJScriptDateJson()", span="539-539"];
m0_237 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_DateTime()", span="362-362"];
m0_238 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime()", file="JsonTests.cs", label="var doc = File.ReadAllText(Path.Combine(''SampleData'', ''datetimes.txt''))", span="364-364"];
m0_239 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime()", file="JsonTests.cs", label="var d = new JsonDeserializer()", span="365-365"];
m0_240 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime()", file="JsonTests.cs", label="var response = new RestResponse { Content = doc }", span="366-366"];
m0_241 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime()", file="JsonTests.cs", label="var payload = d.Deserialize<DateTimeTestStructure>(response)", span="367-367"];
m0_242 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime()", file="JsonTests.cs", label="Assert.Equal(\r\n				new DateTime(2011, 6, 30, 8, 15, 46, DateTimeKind.Utc).ToString(''u''),\r\n				payload.DateTime.ToString(''\\nu''))", span="369-371"];
m0_243 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_DateTime()", span="362-362"];
m0_199 [cluster="RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", span="305-305"];
m0_200 [cluster="RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="JsonTests.cs", label="var doc = CreateJson()", span="307-307"];
m0_201 [cluster="RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="JsonTests.cs", label="var response = new RestResponse { Content = doc }", span="308-308"];
m0_202 [cluster="RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="JsonTests.cs", label="var d = new JsonDeserializer()", span="309-309"];
m0_203 [cluster="RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="JsonTests.cs", label="var p = d.Deserialize<PersonForJson>(response)", span="310-310"];
m0_204 [cluster="RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="JsonTests.cs", label="Assert.Null(p.ReadOnlyProxy)", span="312-312"];
m0_205 [cluster="RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", span="305-305"];
m0_48 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", span="600-600"];
m0_382 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", file="JsonTests.cs", label="var doc = new JObject()", span="602-602"];
m0_383 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", file="JsonTests.cs", label="doc[''Id''] = null", span="603-603"];
m0_384 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", file="JsonTests.cs", label="doc[''StartDate''] = null", span="604-604"];
m0_385 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", file="JsonTests.cs", label="doc[''UniqueId''] = null", span="605-605"];
m0_386 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", file="JsonTests.cs", label="return doc.ToString();", span="607-607"];
m0_387 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", span="600-600"];
m0_206 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", span="316-316"];
m0_207 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", color=green, community=0, file="JsonTests.cs", label="0: var doc = File.ReadAllText(Path.Combine(''SampleData'', ''timespans.txt''))", span="318-318"];
m0_208 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", color=green, community=0, file="JsonTests.cs", label="0: var d = new JsonDeserializer()", span="319-319"];
m0_209 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", color=green, community=0, file="JsonTests.cs", label="0: var response = new RestResponse { Content = doc }", span="320-320"];
m0_210 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", color=green, community=0, file="JsonTests.cs", label="1: var payload = d.Deserialize<TimeSpanTestStructure>(response)", span="321-321"];
m0_211 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", color=green, community=0, file="JsonTests.cs", label="0: Assert.Equal(new TimeSpan(468006), payload.Tick)", span="323-323"];
m0_212 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", color=green, community=0, file="JsonTests.cs", label="0: Assert.Equal(new TimeSpan(0, 0, 0, 0, 125), payload.Millisecond)", span="324-324"];
m0_266 [cluster="System.DateTimeOffset.ToString(string)", file="JsonTests.cs", label="Entry System.DateTimeOffset.ToString(string)", span="0-0"];
m0_169 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", span="451-451"];
m0_306 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="int i = 0", span="471-471"];
m0_293 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="var doc = new JObject()", span="453-453"];
m0_294 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="doc[''name''] = ''John Sheehan''", span="454-454"];
m0_295 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="doc[''start_date''] = new DateTime(2009, 9, 25, 0, 6, 1, DateTimeKind.Utc)", span="455-455"];
m0_296 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="doc[''age''] = 28", span="456-456"];
m0_297 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="doc[''percent''] = 99.9999m", span="457-457"];
m0_298 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="doc[''big_number''] = long.MaxValue", span="458-458"];
m0_299 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="doc[''is_cool''] = false", span="459-459"];
m0_300 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="doc[''ignore''] = ''dummy''", span="460-460"];
m0_301 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="doc[''read_only''] = ''dummy''", span="461-461"];
m0_302 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="doc[''url''] = ''http://example.com''", span="462-462"];
m0_303 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="doc[''url_path''] = ''/foo/bar''", span="463-463"];
m0_304 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="doc[''best_friend''] = new JObject(\r\n									new JProperty(''name'', ''The Fonz''),\r\n									new JProperty(''since'', 1952)\r\n								)", span="465-468"];
m0_310 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="doc[''friends''] = friendsArray", span="479-479"];
m0_312 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="doc[''foes''] = foesArray", span="486-486"];
m0_313 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="return doc.ToString();", span="488-488"];
m0_305 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="var friendsArray = new JArray()", span="470-470"];
m0_308 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="friendsArray.Add(new JObject(\r\n									new JProperty(''name'', ''Friend'' + i),\r\n									new JProperty(''since'', DateTime.Now.Year \\n- i)\r\n								))", span="473-476"];
m0_307 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="i < 10", span="471-471"];
m0_309 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="i++", span="471-471"];
m0_311 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="var foesArray = new JObject(\r\n								new JProperty(''dict1'', new JObject(new JProperty(''nickname'', ''Foe 1''))),\r\n								\\nnew JProperty(''dict2'', new JObject(new JProperty(''nickname'', ''Foe 2'')))\r\n							)", span="481-484"];
m0_314 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", span="451-451"];
m0_191 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.CreateJsonWithDashes()", span="491-491"];
m0_318 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="var doc = new JObject()", span="493-493"];
m0_319 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="doc[''name''] = ''John Sheehan''", span="494-494"];
m0_320 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="doc[''start-date''] = new DateTime(2009, 9, 25, 0, 6, 1, DateTimeKind.Utc)", span="495-495"];
m0_321 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="doc[''age''] = 28", span="496-496"];
m0_322 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="doc[''percent''] = 99.9999m", span="497-497"];
m0_323 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="doc[''big-number''] = long.MaxValue", span="498-498"];
m0_324 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="doc[''is-cool''] = false", span="499-499"];
m0_325 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="doc[''ignore''] = ''dummy''", span="500-500"];
m0_326 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="doc[''read-only''] = ''dummy''", span="501-501"];
m0_327 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="doc[''url''] = ''http://example.com''", span="502-502"];
m0_328 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="doc[''url-path''] = ''/foo/bar''", span="503-503"];
m0_329 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="doc[''best-friend''] = new JObject(\r\n									new JProperty(''name'', ''The Fonz''),\r\n									new JProperty(''since'', 1952)\r\n								)", span="505-508"];
m0_335 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="doc[''friends''] = friendsArray", span="519-519"];
m0_337 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="doc[''foes''] = foesArray", span="526-526"];
m0_338 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="return doc.ToString();", span="528-528"];
m0_330 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="var friendsArray = new JArray()", span="510-510"];
m0_331 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="int i = 0", span="511-511"];
m0_333 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="friendsArray.Add(new JObject(\r\n									new JProperty(''name'', ''Friend'' + i),\r\n									new JProperty(''since'', DateTime.Now.Year \\n- i)\r\n								))", span="513-516"];
m0_332 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="i < 10", span="511-511"];
m0_334 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="i++", span="511-511"];
m0_336 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="var foesArray = new JObject(\r\n								new JProperty(''dict1'', new JObject(new JProperty(''nickname'', ''Foe 1''))),\r\n								\\nnew JProperty(''dict2'', new JObject(new JProperty(''nickname'', ''Foe 2'')))\r\n							)", span="521-524"];
m0_339 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.CreateJsonWithDashes()", span="491-491"];
m0_147 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", span="236-236"];
m0_148 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="var doc = CreateJsonWithUnderscores()", span="238-238"];
m0_149 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="var d = new JsonDeserializer()", span="239-239"];
m0_150 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="var response = new RestResponse { Content = doc }", span="240-240"];
m0_151 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="var p = d.Deserialize<PersonForJson>(response)", span="241-241"];
m0_152 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.Equal(''John Sheehan'', p.Name)", span="243-243"];
m0_153 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.Equal(new DateTime(2009, 9, 25, 0, 6, 1), p.StartDate)", span="244-244"];
m0_154 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.Equal(28, p.Age)", span="245-245"];
m0_155 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.Equal(long.MaxValue, p.BigNumber)", span="246-246"];
m0_156 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.Equal(99.9999m, p.Percent)", span="247-247"];
m0_157 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.Equal(false, p.IsCool)", span="248-248"];
m0_158 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.Equal(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="249-249"];
m0_159 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.Equal(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="250-250"];
m0_160 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.NotNull(p.Friends)", span="252-252"];
m0_161 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.Equal(10, p.Friends.Count)", span="253-253"];
m0_162 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.NotNull(p.BestFriend)", span="255-255"];
m0_163 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.Equal(''The Fonz'', p.BestFriend.Name)", span="256-256"];
m0_164 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.Equal(1952, p.BestFriend.Since)", span="257-257"];
m0_165 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.NotEmpty(p.Foes)", span="259-259"];
m0_166 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.Equal(''Foe 1'', p.Foes[''dict1''].Nickname)", span="260-260"];
m0_167 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.Equal(''Foe 2'', p.Foes[''dict2''].Nickname)", span="261-261"];
m0_168 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", span="236-236"];
m0_244 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", span="375-375"];
m0_245 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", file="JsonTests.cs", label="var doc = File.ReadAllText(Path.Combine(''SampleData'', ''datetimes.txt''))", span="377-377"];
m0_246 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", file="JsonTests.cs", label="var d = new JsonDeserializer()", span="378-378"];
m0_247 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", file="JsonTests.cs", label="var response = new RestResponse { Content = doc }", span="379-379"];
m0_248 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", file="JsonTests.cs", label="var payload = d.Deserialize<DateTimeTestStructure>(response)", span="380-380"];
m0_249 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", file="JsonTests.cs", label="Assert.NotNull(payload.NullableDateTimeWithValue)", span="382-382"];
m0_250 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", file="JsonTests.cs", label="Assert.Equal(\r\n				new DateTime(2011, 6, 30, 8, 15, 46, DateTimeKind.Utc).ToString(''u''),\r\n				payload.NullableDateTimeWithValue.Value.ToString(''\\nu''))", span="383-385"];
m0_251 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", span="375-375"];
m0_64 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonTests.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m0_119 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", span="201-201"];
m0_120 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="var doc = CreateJson()", span="203-203"];
m0_121 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="var d = new JsonDeserializer()", span="204-204"];
m0_122 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="var response = new RestResponse { Content = doc }", span="205-205"];
m0_123 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="var p = d.Deserialize<PersonForJson>(response)", span="206-206"];
m0_124 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.Equal(''John Sheehan'', p.Name)", span="208-208"];
m0_125 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.Equal(new DateTime(2009, 9, 25, 0, 6, 1, DateTimeKind.Utc), p.StartDate)", span="209-209"];
m0_126 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.Equal(28, p.Age)", span="210-210"];
m0_127 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.Equal(long.MaxValue, p.BigNumber)", span="211-211"];
m0_128 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.Equal(99.9999m, p.Percent)", span="212-212"];
m0_129 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.Equal(false, p.IsCool)", span="213-213"];
m0_130 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.Equal(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="214-214"];
m0_131 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.Equal(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="215-215"];
m0_132 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.Equal(Guid.Empty, p.EmptyGuid)", span="217-217"];
m0_133 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.Equal(new Guid(GuidString), p.Guid)", span="218-218"];
m0_134 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.Equal(Order.Third, p.Order)", span="220-220"];
m0_135 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.Equal(Disposition.SoSo, p.Disposition)", span="221-221"];
m0_136 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.NotNull(p.Friends)", span="223-223"];
m0_137 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.Equal(10, p.Friends.Count)", span="224-224"];
m0_138 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.NotNull(p.BestFriend)", span="226-226"];
m0_139 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.Equal(''The Fonz'', p.BestFriend.Name)", span="227-227"];
m0_140 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.Equal(1952, p.BestFriend.Since)", span="228-228"];
m0_141 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.NotEmpty(p.Foes)", span="230-230"];
m0_142 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.Equal(''Foe 1'', p.Foes[''dict1''].Nickname)", span="231-231"];
m0_143 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.Equal(''Foe 2'', p.Foes[''dict2''].Nickname)", span="232-232"];
m0_144 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", span="201-201"];
m0_145 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.CreateJson()", span="555-555"];
m0_355 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="var doc = new JObject()", span="557-557"];
m0_356 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''Name''] = ''John Sheehan''", span="558-558"];
m0_357 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''StartDate''] = new DateTime(2009, 9, 25, 0, 6, 1, DateTimeKind.Utc)", span="559-559"];
m0_358 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''Age''] = 28", span="560-560"];
m0_359 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''Percent''] = 99.9999m", span="561-561"];
m0_360 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''BigNumber''] = long.MaxValue", span="562-562"];
m0_361 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''IsCool''] = false", span="563-563"];
m0_362 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''Ignore''] = ''dummy''", span="564-564"];
m0_363 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''ReadOnly''] = ''dummy''", span="565-565"];
m0_364 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''Url''] = ''http://example.com''", span="566-566"];
m0_365 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''UrlPath''] = ''/foo/bar''", span="567-567"];
m0_366 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''Order''] = ''third''", span="568-568"];
m0_367 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''Disposition''] = ''so_so''", span="569-569"];
m0_368 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''Guid''] = new Guid(GuidString).ToString()", span="571-571"];
m0_369 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''EmptyGuid''] = ''''", span="572-572"];
m0_370 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''BestFriend''] = new JObject(\r\n									new JProperty(''Name'', ''The Fonz''),\r\n									new JProperty(''Since'', 1952)\r\n								)", span="574-577"];
m0_376 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''Friends''] = friendsArray", span="588-588"];
m0_378 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''Foes''] = foesArray", span="595-595"];
m0_379 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="return doc.ToString();", span="597-597"];
m0_371 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="var friendsArray = new JArray()", span="579-579"];
m0_372 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="int i = 0", span="580-580"];
m0_374 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="friendsArray.Add(new JObject(\r\n									new JProperty(''Name'', ''Friend'' + i),\r\n									new JProperty(''Since'', DateTime.Now.Year \\n- i)\r\n								))", span="582-585"];
m0_373 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="i < 10", span="580-580"];
m0_375 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="i++", span="580-580"];
m0_377 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="var foesArray = new JObject(\r\n								new JProperty(''dict1'', new JObject(new JProperty(''Nickname'', ''Foe 1''))),\r\n								\\nnew JProperty(''dict2'', new JObject(new JProperty(''Nickname'', ''Foe 2'')))\r\n							)", span="590-593"];
m0_380 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.CreateJson()", span="555-555"];
m0_79 [cluster="System.DateTime.ToString(string, System.IFormatProvider)", file="JsonTests.cs", label="Entry System.DateTime.ToString(string, System.IFormatProvider)", span="0-0"];
m0_344 [cluster="RestSharp.Tests.Birthdate.Birthdate()", file="JsonTests.cs", label="Entry RestSharp.Tests.Birthdate.Birthdate()", span="110-110"];
m0_10 [cluster="RestSharp.RestResponse.RestResponse()", file="JsonTests.cs", label="Entry RestSharp.RestResponse.RestResponse()", span="166-166"];
m0_67 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", span="126-126"];
m0_68 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file="JsonTests.cs", label="var culture = CultureInfo.InvariantCulture", span="128-128"];
m0_69 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file="JsonTests.cs", label="var format = ''dd yyyy MMM, hh:mm ss tt''", span="129-129"];
m0_71 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file="JsonTests.cs", label="var formatted = new\r\n			{\r\n				StartDate = date.ToString(format, culture)\r\n			}", span="132-135"];
m0_74 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file="JsonTests.cs", label="var json = new JsonDeserializer { DateFormat = format, Culture = culture }", span="140-140"];
m0_70 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file="JsonTests.cs", label="var date = new DateTime(2010, 2, 8, 11, 11, 11)", span="130-130"];
m0_76 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file="JsonTests.cs", label="Assert.Equal(date, output.StartDate)", span="144-144"];
m0_72 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file="JsonTests.cs", label="var data = JsonConvert.SerializeObject(formatted)", span="137-137"];
m0_73 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file="JsonTests.cs", label="var response = new RestResponse { Content = data }", span="138-138"];
m0_75 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file="JsonTests.cs", label="var output = json.Deserialize<PersonForJson>(response)", span="142-142"];
m0_77 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", span="126-126"];
m0_0 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", span="35-35"];
m0_1 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", file="JsonTests.cs", label="var doc = File.ReadAllText(Path.Combine(''SampleData'', ''4sq.txt''))", span="37-37"];
m0_2 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", file="JsonTests.cs", label="var json = new JsonDeserializer()", span="39-39"];
m0_4 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", file="JsonTests.cs", label="var output = json.Deserialize<VenuesResponse>(new RestResponse { Content = doc })", span="42-42"];
m0_3 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", file="JsonTests.cs", label="json.RootElement = ''response''", span="40-40"];
m0_5 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", file="JsonTests.cs", label="Assert.NotEmpty(output.Groups)", span="44-44"];
m0_6 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", span="35-35"];
m0_170 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", span="265-265"];
m0_171 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="var doc = CreateJsonWithDashes()", span="267-267"];
m0_172 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="var d = new JsonDeserializer()", span="268-268"];
m0_173 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="var response = new RestResponse { Content = doc }", span="269-269"];
m0_174 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="var p = d.Deserialize<PersonForJson>(response)", span="270-270"];
m0_175 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.Equal(''John Sheehan'', p.Name)", span="272-272"];
m0_176 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.Equal(28, p.Age)", span="274-274"];
m0_177 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.Equal(long.MaxValue, p.BigNumber)", span="275-275"];
m0_178 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.Equal(99.9999m, p.Percent)", span="276-276"];
m0_179 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.Equal(false, p.IsCool)", span="277-277"];
m0_180 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.Equal(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="278-278"];
m0_181 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.Equal(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="279-279"];
m0_182 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.NotNull(p.Friends)", span="281-281"];
m0_183 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.Equal(10, p.Friends.Count)", span="282-282"];
m0_184 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.NotNull(p.BestFriend)", span="284-284"];
m0_185 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.Equal(''The Fonz'', p.BestFriend.Name)", span="285-285"];
m0_186 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.Equal(1952, p.BestFriend.Since)", span="286-286"];
m0_187 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.NotEmpty(p.Foes)", span="288-288"];
m0_188 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.Equal(''Foe 1'', p.Foes[''dict1''].Nickname)", span="289-289"];
m0_189 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.Equal(''Foe 2'', p.Foes[''dict2''].Nickname)", span="290-290"];
m0_190 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", span="265-265"];
m0_7 [cluster="System.IO.Path.Combine(string, string)", file="JsonTests.cs", label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m0_11 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.RestResponse)", file="JsonTests.cs", label="Entry RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.RestResponse)", span="39-39"];
m0_20 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", span="60-60"];
m0_21 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", file="JsonTests.cs", label="string content = ''{\''users\'':[\''johnsheehan\'',\''jagregory\'',\''drusellers\'',\''structuremap\'']}''", span="62-62"];
m0_22 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", file="JsonTests.cs", label="var json = new JsonDeserializer {RootElement = ''users''}", span="63-63"];
m0_23 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", file="JsonTests.cs", label="var output = json.Deserialize<List<string>>(new RestResponse {Content = content})", span="65-65"];
m0_24 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", file="JsonTests.cs", label="Assert.NotEmpty(output)", span="67-67"];
m0_25 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", span="60-60"];
m0_252 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Null()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Null()", span="389-389"];
m0_253 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Null()", file="JsonTests.cs", label="var doc = File.ReadAllText(Path.Combine(''SampleData'', ''datetimes.txt''))", span="391-391"];
m0_254 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Null()", file="JsonTests.cs", label="var d = new JsonDeserializer()", span="392-392"];
m0_255 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Null()", file="JsonTests.cs", label="var response = new RestResponse { Content = doc }", span="393-393"];
m0_256 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Null()", file="JsonTests.cs", label="var payload = d.Deserialize<DateTimeTestStructure>(response)", span="394-394"];
m0_257 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Null()", file="JsonTests.cs", label="Assert.Null(payload.NullableDateTimeWithNull)", span="396-396"];
m0_258 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Null()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Null()", span="389-389"];
m0_214 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", color=green, community=0, file="JsonTests.cs", label="0: Assert.Equal(new TimeSpan(0, 55, 2), payload.Minute)", span="326-326"];
m0_215 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", color=green, community=0, file="JsonTests.cs", label="0: Assert.Equal(new TimeSpan(21, 30, 7), payload.Hour)", span="327-327"];
m0_216 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", color=green, community=0, file="JsonTests.cs", label="0: Assert.Null(payload.NullableWithoutValue)", span="328-328"];
m0_217 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", color=green, community=0, file="JsonTests.cs", label="0: Assert.NotNull(payload.NullableWithValue)", span="329-329"];
m0_218 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", color=green, community=0, file="JsonTests.cs", label="0: Assert.Equal(new TimeSpan(21, 30, 7), payload.NullableWithValue.Value)", span="330-330"];
m0_219 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", span="316-316"];
m0_220 [cluster="System.TimeSpan.TimeSpan(long)", file="JsonTests.cs", label="Entry System.TimeSpan.TimeSpan(long)", span="0-0"];
m0_111 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", span="188-188"];
m0_112 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", file="JsonTests.cs", label="var doc = new JObject()", span="190-190"];
m0_113 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", file="JsonTests.cs", label="doc[''Age''] = ''28''", span="191-191"];
m0_115 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", file="JsonTests.cs", label="var response = new RestResponse { Content = doc.ToString() }", span="194-194"];
m0_114 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", file="JsonTests.cs", label="var d = new JsonDeserializer()", span="193-193"];
m0_116 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", file="JsonTests.cs", label="var p = d.Deserialize<PersonForJson>(response)", span="195-195"];
m0_117 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", file="JsonTests.cs", label="Assert.Equal(28, p.Age)", span="197-197"];
m0_118 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", span="188-188"];
m0_346 [cluster="RestSharp.Tests.JsonTests.CreateJScriptDateJson()", file="JsonTests.cs", label="var bd = new Birthdate()", span="541-541"];
m0_347 [cluster="RestSharp.Tests.JsonTests.CreateJScriptDateJson()", file="JsonTests.cs", label="bd.Value = new DateTime(1910, 9, 25, 9, 30, 25, DateTimeKind.Utc)", span="542-542"];
m0_348 [cluster="RestSharp.Tests.JsonTests.CreateJScriptDateJson()", file="JsonTests.cs", label="return JsonConvert.SerializeObject(bd, new JavaScriptDateTimeConverter());", span="544-544"];
m0_349 [cluster="RestSharp.Tests.JsonTests.CreateJScriptDateJson()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.CreateJScriptDateJson()", span="539-539"];
m0_26 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", span="71-71"];
m0_27 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", file="JsonTests.cs", label="var doc = File.ReadAllText(Path.Combine(''SampleData'', ''sojson.txt''))", span="73-73"];
m0_28 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", file="JsonTests.cs", label="var json = new JsonDeserializer()", span="75-75"];
m0_30 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", file="JsonTests.cs", label="var output = json.Deserialize<SOUser>(new RestResponse { Content = doc })", span="78-78"];
m0_29 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", file="JsonTests.cs", label="json.RootElement = ''User''", span="76-76"];
m0_31 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", file="JsonTests.cs", label="Assert.Equal(''John Sheehan'', output.DisplayName)", span="79-79"];
m0_32 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", span="71-71"];
m0_62 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", span="610-610"];
m0_388 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", file="JsonTests.cs", label="var doc = new JObject()", span="612-612"];
m0_389 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", file="JsonTests.cs", label="doc[''Id''] = 123", span="613-613"];
m0_390 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", file="JsonTests.cs", label="doc[''StartDate''] = new DateTime(2010, 2, 21, 9, 35, 00, DateTimeKind.Utc)", span="614-614"];
m0_391 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", file="JsonTests.cs", label="doc[''UniqueId''] = new Guid(GuidString).ToString()", span="615-615"];
m0_392 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", file="JsonTests.cs", label="return doc.ToString();", span="617-617"];
m0_393 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", span="610-610"];
m0_146 [cluster="System.Uri.Uri(string, System.UriKind)", file="JsonTests.cs", label="Entry System.Uri.Uri(string, System.UriKind)", span="0-0"];
m0_192 [cluster="RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", span="294-294"];
m0_193 [cluster="RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", file="JsonTests.cs", label="var doc = CreateJson()", span="296-296"];
m0_194 [cluster="RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", file="JsonTests.cs", label="var d = new JsonDeserializer()", span="297-297"];
m0_195 [cluster="RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", file="JsonTests.cs", label="var response = new RestResponse { Content = doc }", span="298-298"];
m0_196 [cluster="RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", file="JsonTests.cs", label="var p = d.Deserialize<PersonForJson>(response)", span="299-299"];
m0_197 [cluster="RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", file="JsonTests.cs", label="Assert.Null(p.IgnoreProxy)", span="301-301"];
m0_198 [cluster="RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", span="294-294"];
m0_275 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Null()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Null()", span="427-427"];
m0_276 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Null()", file="JsonTests.cs", label="var doc = File.ReadAllText(Path.Combine(''SampleData'', ''datetimes.txt''))", span="429-429"];
m0_277 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Null()", file="JsonTests.cs", label="var d = new JsonDeserializer()", span="430-430"];
m0_278 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Null()", file="JsonTests.cs", label="var response = new RestResponse { Content = doc }", span="431-431"];
m0_279 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Null()", file="JsonTests.cs", label="var payload = d.Deserialize<DateTimeTestStructure>(response)", span="432-432"];
m0_280 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Null()", file="JsonTests.cs", label="Assert.Null(payload.NullableDateTimeOffsetWithNull)", span="434-434"];
m0_281 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Null()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Null()", span="427-427"];
m0_230 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_JsonNet_Dates()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_JsonNet_Dates()", span="349-349"];
m0_231 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_JsonNet_Dates()", file="JsonTests.cs", label="var doc = File.ReadAllText(Path.Combine(''SampleData'', ''person.json.txt''))", span="351-351"];
m0_232 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_JsonNet_Dates()", file="JsonTests.cs", label="var d = new JsonDeserializer()", span="352-352"];
m0_233 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_JsonNet_Dates()", file="JsonTests.cs", label="var response = new RestResponse { Content = doc }", span="353-353"];
m0_234 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_JsonNet_Dates()", file="JsonTests.cs", label="var person = d.Deserialize<PersonForJson>(response)", span="354-354"];
m0_235 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_JsonNet_Dates()", file="JsonTests.cs", label="Assert.Equal(\r\n				new DateTime(2011, 6, 30, 8, 15, 46, DateTimeKind.Utc).ToString(''u''),\r\n				person.StartDate.ToString(''\\nu''))", span="356-358"];
m0_236 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_JsonNet_Dates()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_JsonNet_Dates()", span="349-349"];
m0_65 [cluster="System.DateTime.ToString(string)", file="JsonTests.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m0_282 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", span="438-438"];
m0_283 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file="JsonTests.cs", label="var doc = CreateJsonStringDictionary()", span="440-440"];
m0_284 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file="JsonTests.cs", label="var d = new JsonDeserializer()", span="441-441"];
m0_285 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file="JsonTests.cs", label="var response = new RestResponse { Content = doc }", span="442-442"];
m0_286 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file="JsonTests.cs", label="var bd = d.Deserialize<Dictionary<string,string>>(response)", span="443-443"];
m0_287 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file="JsonTests.cs", label="Assert.Equal(bd[''Thing1''], ''Thing1'')", span="445-445"];
m0_288 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file="JsonTests.cs", label="Assert.Equal(bd[''Thing2''], ''Thing2'')", span="446-446"];
m0_289 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file="JsonTests.cs", label="Assert.Equal(bd[''ThingRed''], ''ThingRed'')", span="447-447"];
m0_290 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file="JsonTests.cs", label="Assert.Equal(bd[''ThingBlue''], ''ThingBlue'')", span="448-448"];
m0_291 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", span="438-438"];
m0_213 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", color=green, community=0, file="JsonTests.cs", label="0: Assert.Equal(new TimeSpan(0, 0, 8), payload.Second)", span="325-325"];
m0_340 [cluster="RestSharp.Tests.JsonTests.CreateIsoDateJson()", file="JsonTests.cs", label="var bd = new Birthdate()", span="533-533"];
m0_341 [cluster="RestSharp.Tests.JsonTests.CreateIsoDateJson()", file="JsonTests.cs", label="bd.Value = new DateTime(1910, 9, 25, 9, 30, 25, DateTimeKind.Utc)", span="534-534"];
m0_342 [cluster="RestSharp.Tests.JsonTests.CreateIsoDateJson()", file="JsonTests.cs", label="return JsonConvert.SerializeObject(bd, new IsoDateTimeConverter());", span="536-536"];
m0_343 [cluster="RestSharp.Tests.JsonTests.CreateIsoDateJson()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.CreateIsoDateJson()", span="531-531"];
m0_259 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTimeOffset()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_DateTimeOffset()", span="400-400"];
m0_260 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTimeOffset()", file="JsonTests.cs", label="var doc = File.ReadAllText(Path.Combine(''SampleData'', ''datetimes.txt''))", span="402-402"];
m0_261 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTimeOffset()", file="JsonTests.cs", label="var d = new JsonDeserializer()", span="403-403"];
m0_262 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTimeOffset()", file="JsonTests.cs", label="var response = new RestResponse { Content = doc }", span="404-404"];
m0_263 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTimeOffset()", file="JsonTests.cs", label="var payload = d.Deserialize<DateTimeTestStructure>(response)", span="405-405"];
m0_264 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTimeOffset()", file="JsonTests.cs", label="Assert.Equal(\r\n				new DateTime(2011, 6, 30, 8, 15, 46, DateTimeKind.Utc).ToString(''u''),\r\n				payload.DateTimeOffset.ToString(''\\nu''))", span="407-409"];
m0_265 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTimeOffset()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_DateTimeOffset()", span="400-400"];
m0_78 [cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="JsonTests.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0"];
m0_229 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateJson()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.CreateUnixDateJson()", span="547-547"];
m0_351 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateJson()", file="JsonTests.cs", label="var doc = new JObject()", span="549-549"];
m0_352 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateJson()", file="JsonTests.cs", label="doc[''Value''] = 1309421746", span="550-550"];
m0_353 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateJson()", file="JsonTests.cs", label="return doc.ToString();", span="552-552"];
m0_354 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateJson()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.CreateUnixDateJson()", span="547-547"];
m0_292 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", span="620-620"];
m0_394 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", file="JsonTests.cs", label="var doc = new JObject()", span="622-622"];
m0_395 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", file="JsonTests.cs", label="doc[''Thing1''] = ''Thing1''", span="623-623"];
m0_396 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", file="JsonTests.cs", label="doc[''Thing2''] = ''Thing2''", span="624-624"];
m0_397 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", file="JsonTests.cs", label="doc[''ThingRed''] = ''ThingRed''", span="625-625"];
m0_398 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", file="JsonTests.cs", label="doc[''ThingBlue''] = ''ThingBlue''", span="626-626"];
m0_399 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", file="JsonTests.cs", label="return doc.ToString();", span="627-627"];
m0_400 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", span="620-620"];
m0_34 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", span="83-83"];
m0_35 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", file="JsonTests.cs", label="var doc = File.ReadAllText(Path.Combine(''SampleData'', ''GenericWithList.txt''))", span="85-85"];
m0_36 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", file="JsonTests.cs", label="var json = new JsonDeserializer()", span="86-86"];
m0_37 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", file="JsonTests.cs", label="var output = json.Deserialize<Generic<GenericWithList<Foe>>>(new RestResponse { Content = doc })", span="88-88"];
m0_38 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", file="JsonTests.cs", label="Assert.Equal(''Foe sho'', output.Data.Items[0].Nickname)", span="89-89"];
m0_39 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", span="83-83"];
m0_101 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", span="175-175"];
m0_102 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", file="JsonTests.cs", label="var doc = new JObject()", span="177-177"];
m0_103 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", file="JsonTests.cs", label="doc[''Guid''] = GuidString", span="178-178"];
m0_105 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", file="JsonTests.cs", label="var response = new RestResponse { Content = doc.ToString() }", span="181-181"];
m0_104 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", file="JsonTests.cs", label="var d = new JsonDeserializer()", span="180-180"];
m0_106 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", file="JsonTests.cs", label="var p = d.Deserialize<PersonForJson>(response)", span="182-182"];
m0_107 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", file="JsonTests.cs", label="Assert.Equal(new Guid(GuidString), p.Guid)", span="184-184"];
m0_108 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", span="175-175"];
m0_267 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", span="413-413"];
m0_268 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", file="JsonTests.cs", label="var doc = File.ReadAllText(Path.Combine(''SampleData'', ''datetimes.txt''))", span="415-415"];
m0_269 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", file="JsonTests.cs", label="var d = new JsonDeserializer()", span="416-416"];
m0_270 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", file="JsonTests.cs", label="var response = new RestResponse { Content = doc }", span="417-417"];
m0_271 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", file="JsonTests.cs", label="var payload = d.Deserialize<DateTimeTestStructure>(response)", span="418-418"];
m0_272 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", file="JsonTests.cs", label="Assert.NotNull(payload.NullableDateTimeOffsetWithValue)", span="420-420"];
m0_273 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", file="JsonTests.cs", label="Assert.Equal(\r\n				new DateTime(2011, 6, 30, 8, 15, 46, DateTimeKind.Utc).ToString(''u''),\r\n				payload.NullableDateTimeOffsetWithValue.Value.ToString(''\\nu''))", span="421-423"];
m0_274 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", span="413-413"];
m0_88 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", span="158-158"];
m0_89 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file="JsonTests.cs", label="var data = File.ReadAllText (Path.Combine (''SampleData'', ''jsonenums.txt''))", span="160-160"];
m0_90 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file="JsonTests.cs", label="var response = new RestResponse { Content = data }", span="161-161"];
m0_91 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file="JsonTests.cs", label="var json = new JsonDeserializer ()", span="162-162"];
m0_92 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file="JsonTests.cs", label="var output = json.Deserialize<JsonEnumsTestStructure>(response)", span="163-163"];
m0_93 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file="JsonTests.cs", label="Assert.Equal (output.Upper, Disposition.Friendly)", span="165-165"];
m0_94 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file="JsonTests.cs", label="Assert.Equal (output.Lower, Disposition.Friendly)", span="166-166"];
m0_95 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file="JsonTests.cs", label="Assert.Equal (output.CamelCased, Disposition.SoSo)", span="167-167"];
m0_96 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file="JsonTests.cs", label="Assert.Equal (output.Underscores, Disposition.SoSo)", span="168-168"];
m0_97 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file="JsonTests.cs", label="Assert.Equal (output.LowerUnderscores, Disposition.SoSo)", span="169-169"];
m0_98 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file="JsonTests.cs", label="Assert.Equal (output.Dashes, Disposition.SoSo)", span="170-170"];
m0_99 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file="JsonTests.cs", label="Assert.Equal (output.LowerDashes, Disposition.SoSo)", span="171-171"];
m0_100 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", span="158-158"];
m0_381 [cluster="System.Guid.ToString()", file="JsonTests.cs", label="Entry System.Guid.ToString()", span="0-0"];
m0_40 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", span="93-93"];
m0_41 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="JsonTests.cs", label="var doc = CreateJsonWithNullValues()", span="95-95"];
m0_42 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="JsonTests.cs", label="var json = new JsonDeserializer()", span="97-97"];
m0_43 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="JsonTests.cs", label="var output = json.Deserialize<NullableValues>(new RestResponse { Content = doc })", span="98-98"];
m0_44 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Assert.Null(output.Id)", span="100-100"];
m0_45 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Assert.Null(output.StartDate)", span="101-101"];
m0_46 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Assert.Null(output.UniqueId)", span="102-102"];
m0_47 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", span="93-93"];
m0_8 [cluster="System.IO.File.ReadAllText(string)", file="JsonTests.cs", label="Entry System.IO.File.ReadAllText(string)", span="0-0"];
m0_81 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", span="148-148"];
m0_82 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", file="JsonTests.cs", label="var data = File.ReadAllText(Path.Combine(''SampleData'', ''jsonarray.txt''))", span="150-150"];
m0_83 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", file="JsonTests.cs", label="var response = new RestResponse { Content = data }", span="151-151"];
m0_84 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", file="JsonTests.cs", label="var json = new JsonDeserializer()", span="152-152"];
m0_85 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", file="JsonTests.cs", label="var output = json.Deserialize<List<status>>(response)", span="153-153"];
m0_86 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", file="JsonTests.cs", label="Assert.Equal(4, output.Count)", span="154-154"];
m0_87 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", span="148-148"];
m0_13 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", span="48-48"];
m0_14 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", file="JsonTests.cs", label="var doc = File.ReadAllText(Path.Combine(''SampleData'', ''jsonlists.txt''))", span="50-50"];
m0_15 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", file="JsonTests.cs", label="var json = new JsonDeserializer ()", span="51-51"];
m0_16 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", file="JsonTests.cs", label="var output = json.Deserialize<JsonLists> (new RestResponse { Content = doc })", span="53-53"];
m0_17 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", file="JsonTests.cs", label="Assert.NotEmpty (output.Names)", span="55-55"];
m0_18 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", file="JsonTests.cs", label="Assert.NotEmpty (output.Numbers)", span="56-56"];
m0_19 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", span="48-48"];
m0_9 [cluster="RestSharp.Deserializers.JsonDeserializer.JsonDeserializer()", file="JsonTests.cs", label="Entry RestSharp.Deserializers.JsonDeserializer.JsonDeserializer()", span="34-34"];
m1_0_221 [cluster="System.TimeSpan.TimeSpan(int, int, int, int, int)", file=merged, label="Entry System.TimeSpan.TimeSpan(int, int, int, int, int)", span="0-0"];
m1_0_237 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_DateTime()", span="362-362"];
m1_0_238 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime()", file=merged, label="var doc = File.ReadAllText(Path.Combine(''SampleData'', ''datetimes.txt''))", span="364-364"];
m1_0_239 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime()", file=merged, label="var d = new JsonDeserializer()", span="365-365"];
m1_0_240 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime()", file=merged, label="var response = new RestResponse { Content = doc }", span="366-366"];
m1_0_241 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime()", file=merged, label="var payload = d.Deserialize<DateTimeTestStructure>(response)", span="367-367"];
m1_0_242 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime()", file=merged, label="Assert.Equal(\r\n				new DateTime(2011, 6, 30, 8, 15, 46, DateTimeKind.Utc).ToString(''u''),\r\n				payload.DateTime.ToString(''\\nu''))", span="369-371"];
m1_0_243 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_DateTime()", span="362-362"];
m1_0_169 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="Entry RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", span="451-451"];
m1_0_306 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="int i = 0", span="471-471"];
m1_0_293 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="var doc = new JObject()", span="453-453"];
m1_0_294 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="doc[''name''] = ''John Sheehan''", span="454-454"];
m1_0_295 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="doc[''start_date''] = new DateTime(2009, 9, 25, 0, 6, 1, DateTimeKind.Utc)", span="455-455"];
m1_0_296 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="doc[''age''] = 28", span="456-456"];
m1_0_297 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="doc[''percent''] = 99.9999m", span="457-457"];
m1_0_298 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="doc[''big_number''] = long.MaxValue", span="458-458"];
m1_0_299 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="doc[''is_cool''] = false", span="459-459"];
m1_0_300 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="doc[''ignore''] = ''dummy''", span="460-460"];
m1_0_301 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="doc[''read_only''] = ''dummy''", span="461-461"];
m1_0_302 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="doc[''url''] = ''http://example.com''", span="462-462"];
m1_0_303 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="doc[''url_path''] = ''/foo/bar''", span="463-463"];
m1_0_304 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="doc[''best_friend''] = new JObject(\r\n									new JProperty(''name'', ''The Fonz''),\r\n									new JProperty(''since'', 1952)\r\n								)", span="465-468"];
m1_0_310 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="doc[''friends''] = friendsArray", span="479-479"];
m1_0_312 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="doc[''foes''] = foesArray", span="486-486"];
m1_0_313 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="return doc.ToString();", span="488-488"];
m1_0_305 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="var friendsArray = new JArray()", span="470-470"];
m1_0_308 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="friendsArray.Add(new JObject(\r\n									new JProperty(''name'', ''Friend'' + i),\r\n									new JProperty(''since'', DateTime.Now.Year \\n- i)\r\n								))", span="473-476"];
m1_0_307 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="i < 10", span="471-471"];
m1_0_309 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="i++", span="471-471"];
m1_0_311 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="var foesArray = new JObject(\r\n								new JProperty(''dict1'', new JObject(new JProperty(''nickname'', ''Foe 1''))),\r\n								\\nnew JProperty(''dict2'', new JObject(new JProperty(''nickname'', ''Foe 2'')))\r\n							)", span="481-484"];
m1_0_314 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="Exit RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", span="451-451"];
m1_0_147 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", span="236-236"];
m1_0_148 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="var doc = CreateJsonWithUnderscores()", span="238-238"];
m1_0_149 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="var d = new JsonDeserializer()", span="239-239"];
m1_0_150 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="var response = new RestResponse { Content = doc }", span="240-240"];
m1_0_151 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="var p = d.Deserialize<PersonForJson>(response)", span="241-241"];
m1_0_152 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="Assert.Equal(''John Sheehan'', p.Name)", span="243-243"];
m1_0_153 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="Assert.Equal(new DateTime(2009, 9, 25, 0, 6, 1), p.StartDate)", span="244-244"];
m1_0_154 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="Assert.Equal(28, p.Age)", span="245-245"];
m1_0_155 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="Assert.Equal(long.MaxValue, p.BigNumber)", span="246-246"];
m1_0_156 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="Assert.Equal(99.9999m, p.Percent)", span="247-247"];
m1_0_157 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="Assert.Equal(false, p.IsCool)", span="248-248"];
m1_0_158 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="Assert.Equal(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="249-249"];
m1_0_159 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="Assert.Equal(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="250-250"];
m1_0_160 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="Assert.NotNull(p.Friends)", span="252-252"];
m1_0_161 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="Assert.Equal(10, p.Friends.Count)", span="253-253"];
m1_0_162 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="Assert.NotNull(p.BestFriend)", span="255-255"];
m1_0_163 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="Assert.Equal(''The Fonz'', p.BestFriend.Name)", span="256-256"];
m1_0_164 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="Assert.Equal(1952, p.BestFriend.Since)", span="257-257"];
m1_0_165 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="Assert.NotEmpty(p.Foes)", span="259-259"];
m1_0_166 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="Assert.Equal(''Foe 1'', p.Foes[''dict1''].Nickname)", span="260-260"];
m1_0_167 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="Assert.Equal(''Foe 2'', p.Foes[''dict2''].Nickname)", span="261-261"];
m1_0_168 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", span="236-236"];
m1_2_167 [cluster="lambda expression", file=merged, label="Entry lambda expression", span="263-263"];
m1_117 [cluster="lambda expression", file=merged, label="json[n] != null", span="93-93"];
m1_113 [cluster="lambda expression", file=merged, label="Entry lambda expression", span="86-86"];
m1_116 [cluster="lambda expression", file=merged, label="Entry lambda expression", span="93-93"];
m1_114 [cluster="lambda expression", file=merged, label="p.CanWrite", span="86-86"];
m1_115 [cluster="System.TimeSpan.Parse(string)", file=merged, label="Entry System.TimeSpan.Parse(string)", span="0-0"];
m1_118 [cluster="lambda expression", file=merged, label="Exit lambda expression", span="93-93"];
m1_2_240 [cluster="lambda expression", file=merged, label="Entry lambda expression", span="387-387"];
m1_2_43 [cluster="lambda expression", file=merged, label="Entry lambda expression", span="81-81"];
m1_2_46 [cluster="lambda expression", file=merged, label="Entry lambda expression", span="83-83"];
m1_2_44 [cluster="lambda expression", file=merged, label="a.IsNamespaceDeclaration || a.Name.Namespace != XNamespace.None", span="81-81"];
m1_2_45 [cluster="lambda expression", file=merged, label="Exit lambda expression", span="81-81"];
m1_2_47 [cluster="lambda expression", file=merged, label="a.IsNamespaceDeclaration ? null : a.Name.Namespace != XNamespace.None ? new XAttribute(XNamespace.None.GetName(a.Name.LocalName), \\na.Value) : a", span="83-83"];
m1_2_48 [cluster="lambda expression", file=merged, label="Exit lambda expression", span="83-83"];
m1_2_218 [cluster="lambda expression", file=merged, label="d.Name.LocalName.RemoveUnderscoresAndDashes() == name.LocalName", span="353-353"];
m1_2_224 [cluster="lambda expression", file=merged, label="d.Name.LocalName.RemoveUnderscoresAndDashes() == name.LocalName.ToLower()", span="356-356"];
m1_2_212 [cluster="lambda expression", file=merged, label="Entry lambda expression", span="352-352"];
m1_2_217 [cluster="lambda expression", file=merged, label="Entry lambda expression", span="353-353"];
m1_2_220 [cluster="lambda expression", file=merged, label="Entry lambda expression", span="355-355"];
m1_2_223 [cluster="lambda expression", file=merged, label="Entry lambda expression", span="356-356"];
m1_2_168 [cluster="lambda expression", file=merged, label="e.Name.LocalName.RemoveUnderscoresAndDashes() == name", span="263-263"];
m1_2_169 [cluster="lambda expression", file=merged, label="Exit lambda expression", span="263-263"];
m1_2_241 [cluster="lambda expression", file=merged, label="d.Name.LocalName.RemoveUnderscoresAndDashes() == name.LocalName", span="387-387"];
m1_2_213 [cluster="lambda expression", file=merged, label="d.Ancestors().Count()", span="352-352"];
m1_2_214 [cluster="lambda expression", file=merged, label="Exit lambda expression", span="352-352"];
m1_2_219 [cluster="lambda expression", file=merged, label="Exit lambda expression", span="353-353"];
m1_2_221 [cluster="lambda expression", file=merged, label="d.Ancestors().Count()", span="355-355"];
m1_2_222 [cluster="lambda expression", file=merged, label="Exit lambda expression", span="355-355"];
m1_2_225 [cluster="lambda expression", file=merged, label="Exit lambda expression", span="356-356"];
m1_2_242 [cluster="lambda expression", file=merged, label="Exit lambda expression", span="387-387"];
m1_2_130 [cluster="System.DateTime.ParseExact(string, string, System.IFormatProvider)", file=merged, label="Entry System.DateTime.ParseExact(string, string, System.IFormatProvider)", span="0-0"];
m1_105 [cluster="System.DateTime.ParseExact(string, string, System.IFormatProvider)", file=merged, label="Entry System.DateTime.ParseExact(string, string, System.IFormatProvider)", span="0-0"];
m1_2_192 [cluster="RestSharp.Deserializers.XmlDeserializer.GetAttributeByName(XElement, XName)", file=merged, label="Entry RestSharp.Deserializers.XmlDeserializer.GetAttributeByName(XElement, XName)", span="366-366"];
m1_2_226 [cluster="RestSharp.Deserializers.XmlDeserializer.GetAttributeByName(XElement, XName)", file=merged, label="var lowerName = name.LocalName.ToLower().AsNamespaced(name.NamespaceName)", span="368-368"];
m1_2_227 [cluster="RestSharp.Deserializers.XmlDeserializer.GetAttributeByName(XElement, XName)", file=merged, label="var camelName = name.LocalName.ToCamelCase(Culture).AsNamespaced(name.NamespaceName)", span="369-369"];
m1_2_228 [cluster="RestSharp.Deserializers.XmlDeserializer.GetAttributeByName(XElement, XName)", file=merged, label="root.Attribute(name) != null", span="371-371"];
m1_2_229 [cluster="RestSharp.Deserializers.XmlDeserializer.GetAttributeByName(XElement, XName)", file=merged, label="return root.Attribute(name);", span="373-373"];
m1_2_230 [cluster="RestSharp.Deserializers.XmlDeserializer.GetAttributeByName(XElement, XName)", file=merged, label="root.Attribute(lowerName) != null", span="376-376"];
m1_2_231 [cluster="RestSharp.Deserializers.XmlDeserializer.GetAttributeByName(XElement, XName)", file=merged, label="return root.Attribute(lowerName);", span="378-378"];
m1_2_232 [cluster="RestSharp.Deserializers.XmlDeserializer.GetAttributeByName(XElement, XName)", file=merged, label="root.Attribute(camelName) != null", span="381-381"];
m1_2_233 [cluster="RestSharp.Deserializers.XmlDeserializer.GetAttributeByName(XElement, XName)", file=merged, label="return root.Attribute(camelName);", span="383-383"];
m1_2_234 [cluster="RestSharp.Deserializers.XmlDeserializer.GetAttributeByName(XElement, XName)", file=merged, label="var element = root.Attributes().FirstOrDefault(d => d.Name.LocalName.RemoveUnderscoresAndDashes() == name.LocalName)", span="387-387"];
m1_2_235 [cluster="RestSharp.Deserializers.XmlDeserializer.GetAttributeByName(XElement, XName)", file=merged, label="element != null", span="388-388"];
m1_2_236 [cluster="RestSharp.Deserializers.XmlDeserializer.GetAttributeByName(XElement, XName)", file=merged, label="return element;", span="390-390"];
m1_2_237 [cluster="RestSharp.Deserializers.XmlDeserializer.GetAttributeByName(XElement, XName)", file=merged, label="return null;", span="393-393"];
m1_2_238 [cluster="RestSharp.Deserializers.XmlDeserializer.GetAttributeByName(XElement, XName)", file=merged, label="Exit RestSharp.Deserializers.XmlDeserializer.GetAttributeByName(XElement, XName)", span="366-366"];
m1_2_132 [cluster="decimal.Parse(string, System.IFormatProvider)", file=merged, label="Entry decimal.Parse(string, System.IFormatProvider)", span="0-0"];
m1_109 [cluster="decimal.Parse(string, System.IFormatProvider)", file=merged, label="Entry decimal.Parse(string, System.IFormatProvider)", span="0-0"];
m1_2_124 [cluster="string.ToLower()", file=merged, label="Entry string.ToLower()", span="0-0"];
m1_0_230 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_JsonNet_Dates()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_JsonNet_Dates()", span="349-349"];
m1_0_231 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_JsonNet_Dates()", file=merged, label="var doc = File.ReadAllText(Path.Combine(''SampleData'', ''person.json.txt''))", span="351-351"];
m1_0_232 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_JsonNet_Dates()", file=merged, label="var d = new JsonDeserializer()", span="352-352"];
m1_0_233 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_JsonNet_Dates()", file=merged, label="var response = new RestResponse { Content = doc }", span="353-353"];
m1_0_234 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_JsonNet_Dates()", file=merged, label="var person = d.Deserialize<PersonForJson>(response)", span="354-354"];
m1_0_235 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_JsonNet_Dates()", file=merged, label="Assert.Equal(\r\n				new DateTime(2011, 6, 30, 8, 15, 46, DateTimeKind.Utc).ToString(''u''),\r\n				person.StartDate.ToString(''\\nu''))", span="356-358"];
m1_0_236 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_JsonNet_Dates()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_JsonNet_Dates()", span="349-349"];
m1_0_78 [cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file=merged, label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0"];
m1_0_292 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", file=merged, label="Entry RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", span="620-620"];
m1_0_394 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", file=merged, label="var doc = new JObject()", span="622-622"];
m1_0_395 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", file=merged, label="doc[''Thing1''] = ''Thing1''", span="623-623"];
m1_0_396 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", file=merged, label="doc[''Thing2''] = ''Thing2''", span="624-624"];
m1_0_397 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", file=merged, label="doc[''ThingRed''] = ''ThingRed''", span="625-625"];
m1_0_398 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", file=merged, label="doc[''ThingBlue''] = ''ThingBlue''", span="626-626"];
m1_0_399 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", file=merged, label="return doc.ToString();", span="627-627"];
m1_0_400 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", file=merged, label="Exit RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", span="620-620"];
m1_2_122 [cluster="System.Type.GetGenericTypeDefinition()", file=merged, label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
m1_137 [cluster="System.Type.GetGenericTypeDefinition()", file=merged, label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
m1_150 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, JEnumerable<JToken>)", file=merged, label="Entry RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, JEnumerable<JToken>)", span="249-249"];
m1_151 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, JEnumerable<JToken>)", file=merged, label="var list = (IList)Activator.CreateInstance(type)", span="251-251"];
m1_152 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, JEnumerable<JToken>)", file=merged, label="var itemType = type.GetGenericArguments()[0]", span="252-252"];
m1_153 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, JEnumerable<JToken>)", file=merged, label=elements, span="254-254"];
m1_157 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, JEnumerable<JToken>)", file=merged, label="list.Add(value.Value.ChangeType(itemType, Culture))", span="261-261"];
m1_159 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, JEnumerable<JToken>)", file=merged, label="list.Add(element.AsString())", span="266-266"];
m1_161 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, JEnumerable<JToken>)", file=merged, label="list.Add(item)", span="271-271"];
m1_162 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, JEnumerable<JToken>)", file=merged, label="return list;", span="274-274"];
m1_154 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, JEnumerable<JToken>)", file=merged, label="itemType.IsPrimitive", span="256-256"];
m1_158 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, JEnumerable<JToken>)", file=merged, label="itemType == typeof(string)", span="264-264"];
m1_160 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, JEnumerable<JToken>)", file=merged, label="var item = CreateAndMap(itemType, element)", span="270-270"];
m1_155 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, JEnumerable<JToken>)", file=merged, label="var value = element as JValue", span="258-258"];
m1_156 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, JEnumerable<JToken>)", file=merged, label="value != null", span="259-259"];
m1_163 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, JEnumerable<JToken>)", file=merged, label="Exit RestSharp.Deserializers.JsonDeserializer.BuildList(System.Type, JEnumerable<JToken>)", span="249-249"];
m1_119 [cluster="RestSharp.Deserializers.JsonDeserializer.CreateAndMap(System.Type, JToken)", file=merged, label="Entry RestSharp.Deserializers.JsonDeserializer.CreateAndMap(System.Type, JToken)", span="199-199"];
m1_120 [cluster="RestSharp.Deserializers.JsonDeserializer.CreateAndMap(System.Type, JToken)", file=merged, label="object instance = null", span="201-201"];
m1_121 [cluster="RestSharp.Deserializers.JsonDeserializer.CreateAndMap(System.Type, JToken)", file=merged, label="type.IsGenericType", span="202-202"];
m1_122 [cluster="RestSharp.Deserializers.JsonDeserializer.CreateAndMap(System.Type, JToken)", file=merged, label="var genericTypeDef = type.GetGenericTypeDefinition()", span="204-204"];
m1_124 [cluster="RestSharp.Deserializers.JsonDeserializer.CreateAndMap(System.Type, JToken)", file=merged, label="instance = BuildDictionary(type, element.Children())", span="207-207"];
m1_126 [cluster="RestSharp.Deserializers.JsonDeserializer.CreateAndMap(System.Type, JToken)", file=merged, label="instance = BuildList(type, element.Children())", span="211-211"];
m1_127 [cluster="RestSharp.Deserializers.JsonDeserializer.CreateAndMap(System.Type, JToken)", file=merged, label="type == typeof(string)", span="213-213"];
m1_128 [cluster="RestSharp.Deserializers.JsonDeserializer.CreateAndMap(System.Type, JToken)", file=merged, label="instance = (string)element", span="215-215"];
m1_129 [cluster="RestSharp.Deserializers.JsonDeserializer.CreateAndMap(System.Type, JToken)", file=merged, label="instance = Activator.CreateInstance(type)", span="219-219"];
m1_130 [cluster="RestSharp.Deserializers.JsonDeserializer.CreateAndMap(System.Type, JToken)", file=merged, label="Map(instance, element)", span="220-220"];
m1_131 [cluster="RestSharp.Deserializers.JsonDeserializer.CreateAndMap(System.Type, JToken)", file=merged, label="type == typeof(string)", span="223-223"];
m1_132 [cluster="RestSharp.Deserializers.JsonDeserializer.CreateAndMap(System.Type, JToken)", file=merged, label="instance = (string)element", span="225-225"];
m1_133 [cluster="RestSharp.Deserializers.JsonDeserializer.CreateAndMap(System.Type, JToken)", file=merged, label="instance = Activator.CreateInstance(type)", span="229-229"];
m1_134 [cluster="RestSharp.Deserializers.JsonDeserializer.CreateAndMap(System.Type, JToken)", file=merged, label="Map(instance, element)", span="230-230"];
m1_123 [cluster="RestSharp.Deserializers.JsonDeserializer.CreateAndMap(System.Type, JToken)", file=merged, label="genericTypeDef == typeof(Dictionary<,>)", span="205-205"];
m1_125 [cluster="RestSharp.Deserializers.JsonDeserializer.CreateAndMap(System.Type, JToken)", file=merged, label="genericTypeDef == typeof(List<>)", span="209-209"];
m1_135 [cluster="RestSharp.Deserializers.JsonDeserializer.CreateAndMap(System.Type, JToken)", file=merged, label="return instance;", span="232-232"];
m1_136 [cluster="RestSharp.Deserializers.JsonDeserializer.CreateAndMap(System.Type, JToken)", file=merged, label="Exit RestSharp.Deserializers.JsonDeserializer.CreateAndMap(System.Type, JToken)", span="199-199"];
m1_0_8 [cluster="System.IO.File.ReadAllText(string)", file=merged, label="Entry System.IO.File.ReadAllText(string)", span="0-0"];
m1_0_13 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", span="48-48"];
m1_0_14 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", file=merged, label="var doc = File.ReadAllText(Path.Combine(''SampleData'', ''jsonlists.txt''))", span="50-50"];
m1_0_15 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", file=merged, label="var json = new JsonDeserializer ()", span="51-51"];
m1_0_16 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", file=merged, label="var output = json.Deserialize<JsonLists> (new RestResponse { Content = doc })", span="53-53"];
m1_0_17 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", file=merged, label="Assert.NotEmpty (output.Names)", span="55-55"];
m1_0_18 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", file=merged, label="Assert.NotEmpty (output.Numbers)", span="56-56"];
m1_0_19 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", span="48-48"];
m1_2_114 [cluster="System.Type.GetProperties()", file=merged, label="Entry System.Type.GetProperties()", span="0-0"];
m1_92 [cluster="System.Type.GetProperties()", file=merged, label="Entry System.Type.GetProperties()", span="0-0"];
m1_2_165 [cluster="string.ToCamelCase(System.Globalization.CultureInfo)", file=merged, label="Entry string.ToCamelCase(System.Globalization.CultureInfo)", span="253-253"];
m1_0_222 [cluster="System.TimeSpan.TimeSpan(int, int, int)", file=merged, label="Entry System.TimeSpan.TimeSpan(int, int, int)", span="0-0"];
m1_0_244 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", span="375-375"];
m1_0_245 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", file=merged, label="var doc = File.ReadAllText(Path.Combine(''SampleData'', ''datetimes.txt''))", span="377-377"];
m1_0_246 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", file=merged, label="var d = new JsonDeserializer()", span="378-378"];
m1_0_247 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", file=merged, label="var response = new RestResponse { Content = doc }", span="379-379"];
m1_0_248 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", file=merged, label="var payload = d.Deserialize<DateTimeTestStructure>(response)", span="380-380"];
m1_0_249 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", file=merged, label="Assert.NotNull(payload.NullableDateTimeWithValue)", span="382-382"];
m1_0_250 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", file=merged, label="Assert.Equal(\r\n				new DateTime(2011, 6, 30, 8, 15, 46, DateTimeKind.Utc).ToString(''u''),\r\n				payload.NullableDateTimeWithValue.Value.ToString(''\\nu''))", span="383-385"];
m1_0_251 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", span="375-375"];
m1_0_64 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file=merged, label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m1_0_145 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="Entry RestSharp.Tests.JsonTests.CreateJson()", span="555-555"];
m1_0_355 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="var doc = new JObject()", span="557-557"];
m1_0_356 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="doc[''Name''] = ''John Sheehan''", span="558-558"];
m1_0_357 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="doc[''StartDate''] = new DateTime(2009, 9, 25, 0, 6, 1, DateTimeKind.Utc)", span="559-559"];
m1_0_358 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="doc[''Age''] = 28", span="560-560"];
m1_0_359 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="doc[''Percent''] = 99.9999m", span="561-561"];
m1_0_360 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="doc[''BigNumber''] = long.MaxValue", span="562-562"];
m1_0_361 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="doc[''IsCool''] = false", span="563-563"];
m1_0_362 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="doc[''Ignore''] = ''dummy''", span="564-564"];
m1_0_363 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="doc[''ReadOnly''] = ''dummy''", span="565-565"];
m1_0_364 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="doc[''Url''] = ''http://example.com''", span="566-566"];
m1_0_365 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="doc[''UrlPath''] = ''/foo/bar''", span="567-567"];
m1_0_366 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="doc[''Order''] = ''third''", span="568-568"];
m1_0_367 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="doc[''Disposition''] = ''so_so''", span="569-569"];
m1_0_368 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="doc[''Guid''] = new Guid(GuidString).ToString()", span="571-571"];
m1_0_369 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="doc[''EmptyGuid''] = ''''", span="572-572"];
m1_0_370 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="doc[''BestFriend''] = new JObject(\r\n									new JProperty(''Name'', ''The Fonz''),\r\n									new JProperty(''Since'', 1952)\r\n								)", span="574-577"];
m1_0_376 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="doc[''Friends''] = friendsArray", span="588-588"];
m1_0_378 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="doc[''Foes''] = foesArray", span="595-595"];
m1_0_379 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="return doc.ToString();", span="597-597"];
m1_0_371 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="var friendsArray = new JArray()", span="579-579"];
m1_0_372 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="int i = 0", span="580-580"];
m1_0_374 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="friendsArray.Add(new JObject(\r\n									new JProperty(''Name'', ''Friend'' + i),\r\n									new JProperty(''Since'', DateTime.Now.Year \\n- i)\r\n								))", span="582-585"];
m1_0_373 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="i < 10", span="580-580"];
m1_0_375 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="i++", span="580-580"];
m1_0_377 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="var foesArray = new JObject(\r\n								new JProperty(''dict1'', new JObject(new JProperty(''Nickname'', ''Foe 1''))),\r\n								\\nnew JProperty(''dict2'', new JObject(new JProperty(''Nickname'', ''Foe 2'')))\r\n							)", span="590-593"];
m1_0_380 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="Exit RestSharp.Tests.JsonTests.CreateJson()", span="555-555"];
m1_0_10 [cluster="RestSharp.RestResponse.RestResponse()", file=merged, label="Entry RestSharp.RestResponse.RestResponse()", span="166-166"];
m1_2_26 [cluster="object.GetType()", file=merged, label="Entry object.GetType()", span="0-0"];
m1_20 [cluster="object.GetType()", file=merged, label="Entry object.GetType()", span="0-0"];
m1_0_7 [cluster="System.IO.Path.Combine(string, string)", file=merged, label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m1_0_20 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", span="60-60"];
m1_0_21 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", file=merged, label="string content = ''{\''users\'':[\''johnsheehan\'',\''jagregory\'',\''drusellers\'',\''structuremap\'']}''", span="62-62"];
m1_0_22 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", file=merged, label="var json = new JsonDeserializer {RootElement = ''users''}", span="63-63"];
m1_0_23 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", file=merged, label="var output = json.Deserialize<List<string>>(new RestResponse {Content = content})", span="65-65"];
m1_0_24 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", file=merged, label="Assert.NotEmpty(output)", span="67-67"];
m1_0_25 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", span="60-60"];
m1_0_252 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Null()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Null()", span="389-389"];
m1_0_253 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Null()", file=merged, label="var doc = File.ReadAllText(Path.Combine(''SampleData'', ''datetimes.txt''))", span="391-391"];
m1_0_254 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Null()", file=merged, label="var d = new JsonDeserializer()", span="392-392"];
m1_0_255 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Null()", file=merged, label="var response = new RestResponse { Content = doc }", span="393-393"];
m1_0_256 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Null()", file=merged, label="var payload = d.Deserialize<DateTimeTestStructure>(response)", span="394-394"];
m1_0_257 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Null()", file=merged, label="Assert.Null(payload.NullableDateTimeWithNull)", span="396-396"];
m1_0_258 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Null()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Null()", span="389-389"];
m1_2_22 [cluster="string.AsNamespaced(string)", file=merged, label="Entry string.AsNamespaced(string)", span="31-31"];
m1_0_214 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_JScript_Json_Dates()", color=green, community=0, file=merged, label="0: Entry RestSharp.Tests.JsonTests.Can_Deserialize_JScript_Json_Dates()", span="327-327"];
m1_0_215 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_JScript_Json_Dates()", color=green, community=0, file=merged, label="0: var doc = CreateJScriptDateJson()", span="329-329"];
m1_0_216 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_JScript_Json_Dates()", color=green, community=0, file=merged, label="0: var d = new JsonDeserializer()", span="330-330"];
m1_0_217 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_JScript_Json_Dates()", color=green, community=0, file=merged, label="0: var response = new RestResponse { Content = doc }", span="331-331"];
m1_0_218 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_JScript_Json_Dates()", color=green, community=0, file=merged, label="0: var bd = d.Deserialize<Birthdate>(response)", span="332-332"];
m1_0_219 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_JScript_Json_Dates()", file=merged, label="Assert.Equal(new DateTime(1910, 9, 25, 9, 30, 25, DateTimeKind.Utc), bd.Value)", span="334-334"];
m1_0_220 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_JScript_Json_Dates()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_JScript_Json_Dates()", span="327-327"];
m1_2_128 [cluster="System.Type.FindEnumValue(string, System.Globalization.CultureInfo)", file=merged, label="Entry System.Type.FindEnumValue(string, System.Globalization.CultureInfo)", span="91-91"];
m1_0_346 [cluster="RestSharp.Tests.JsonTests.CreateJScriptDateJson()", file=merged, label="var bd = new Birthdate()", span="541-541"];
m1_0_347 [cluster="RestSharp.Tests.JsonTests.CreateJScriptDateJson()", file=merged, label="bd.Value = new DateTime(1910, 9, 25, 9, 30, 25, DateTimeKind.Utc)", span="542-542"];
m1_0_348 [cluster="RestSharp.Tests.JsonTests.CreateJScriptDateJson()", file=merged, label="return JsonConvert.SerializeObject(bd, new JavaScriptDateTimeConverter());", span="544-544"];
m1_0_349 [cluster="RestSharp.Tests.JsonTests.CreateJScriptDateJson()", file=merged, label="Exit RestSharp.Tests.JsonTests.CreateJScriptDateJson()", span="539-539"];
m1_22 [cluster="RestSharp.Deserializers.JsonDeserializer.FindRoot(string)", file=merged, label="Entry RestSharp.Deserializers.JsonDeserializer.FindRoot(string)", span="72-72"];
m1_28 [cluster="RestSharp.Deserializers.JsonDeserializer.FindRoot(string)", file=merged, label="JObject json = JObject.Parse(content)", span="74-74"];
m1_29 [cluster="RestSharp.Deserializers.JsonDeserializer.FindRoot(string)", file=merged, label="JToken root = json.Root", span="75-75"];
m1_31 [cluster="RestSharp.Deserializers.JsonDeserializer.FindRoot(string)", file=merged, label="root = json.SelectToken(RootElement)", span="78-78"];
m1_30 [cluster="RestSharp.Deserializers.JsonDeserializer.FindRoot(string)", file=merged, label="RootElement.HasValue()", span="77-77"];
m1_32 [cluster="RestSharp.Deserializers.JsonDeserializer.FindRoot(string)", file=merged, label="return root;", span="80-80"];
m1_33 [cluster="RestSharp.Deserializers.JsonDeserializer.FindRoot(string)", file=merged, label="Exit RestSharp.Deserializers.JsonDeserializer.FindRoot(string)", span="72-72"];
m1_0_192 [cluster="RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", file=merged, label="Entry RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", span="294-294"];
m1_0_193 [cluster="RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", file=merged, label="var doc = CreateJson()", span="296-296"];
m1_0_194 [cluster="RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", file=merged, label="var d = new JsonDeserializer()", span="297-297"];
m1_0_195 [cluster="RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", file=merged, label="var response = new RestResponse { Content = doc }", span="298-298"];
m1_0_196 [cluster="RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", file=merged, label="var p = d.Deserialize<PersonForJson>(response)", span="299-299"];
m1_0_197 [cluster="RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", file=merged, label="Assert.Null(p.IgnoreProxy)", span="301-301"];
m1_0_198 [cluster="RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", file=merged, label="Exit RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", span="294-294"];
m1_0_65 [cluster="System.DateTime.ToString(string)", file=merged, label="Entry System.DateTime.ToString(string)", span="0-0"];
m1_0_259 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTimeOffset()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_DateTimeOffset()", span="400-400"];
m1_0_260 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTimeOffset()", file=merged, label="var doc = File.ReadAllText(Path.Combine(''SampleData'', ''datetimes.txt''))", span="402-402"];
m1_0_261 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTimeOffset()", file=merged, label="var d = new JsonDeserializer()", span="403-403"];
m1_0_262 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTimeOffset()", file=merged, label="var response = new RestResponse { Content = doc }", span="404-404"];
m1_0_263 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTimeOffset()", file=merged, label="var payload = d.Deserialize<DateTimeTestStructure>(response)", span="405-405"];
m1_0_264 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTimeOffset()", file=merged, label="Assert.Equal(\r\n				new DateTime(2011, 6, 30, 8, 15, 46, DateTimeKind.Utc).ToString(''u''),\r\n				payload.DateTimeOffset.ToString(''\\nu''))", span="407-409"];
m1_0_265 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTimeOffset()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_DateTimeOffset()", span="400-400"];
m1_2_123 [cluster="object.ToString()", file=merged, label="Entry object.ToString()", span="0-0"];
m1_0_88 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", span="158-158"];
m1_0_89 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file=merged, label="var data = File.ReadAllText (Path.Combine (''SampleData'', ''jsonenums.txt''))", span="160-160"];
m1_0_90 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file=merged, label="var response = new RestResponse { Content = data }", span="161-161"];
m1_0_91 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file=merged, label="var json = new JsonDeserializer ()", span="162-162"];
m1_0_92 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file=merged, label="var output = json.Deserialize<JsonEnumsTestStructure>(response)", span="163-163"];
m1_0_93 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file=merged, label="Assert.Equal (output.Upper, Disposition.Friendly)", span="165-165"];
m1_0_94 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file=merged, label="Assert.Equal (output.Lower, Disposition.Friendly)", span="166-166"];
m1_0_95 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file=merged, label="Assert.Equal (output.CamelCased, Disposition.SoSo)", span="167-167"];
m1_0_96 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file=merged, label="Assert.Equal (output.Underscores, Disposition.SoSo)", span="168-168"];
m1_0_97 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file=merged, label="Assert.Equal (output.LowerUnderscores, Disposition.SoSo)", span="169-169"];
m1_0_98 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file=merged, label="Assert.Equal (output.Dashes, Disposition.SoSo)", span="170-170"];
m1_0_99 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file=merged, label="Assert.Equal (output.LowerDashes, Disposition.SoSo)", span="171-171"];
m1_0_100 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", span="158-158"];
m1_0_381 [cluster="System.Guid.ToString()", file=merged, label="Entry System.Guid.ToString()", span="0-0"];
m1_2_0 [cluster="RestSharp.Deserializers.XmlDeserializer.XmlDeserializer()", file=merged, label="Entry RestSharp.Deserializers.XmlDeserializer.XmlDeserializer()", span="35-35"];
m1_2_1 [cluster="RestSharp.Deserializers.XmlDeserializer.XmlDeserializer()", file=merged, label="Culture = CultureInfo.InvariantCulture", span="37-37"];
m1_2_2 [cluster="RestSharp.Deserializers.XmlDeserializer.XmlDeserializer()", file=merged, label="Exit RestSharp.Deserializers.XmlDeserializer.XmlDeserializer()", span="35-35"];
m1_0_206 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", span="316-316"];
m1_0_207 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", color=green, community=0, file=merged, label="0: var doc = CreateIsoDateJson()", span="318-318"];
m1_0_208 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", color=green, community=0, file=merged, label="0: var d = new JsonDeserializer()", span="319-319"];
m1_0_209 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", color=green, community=0, file=merged, label="0: var response = new RestResponse { Content = doc }", span="320-320"];
m1_0_210 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", color=green, community=0, file=merged, label="0: var bd = d.Deserialize<Birthdate>(response)", span="321-321"];
m1_0_211 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", color=green, community=0, file=merged, label="0: Assert.Equal(new DateTime(1910, 9, 25, 9, 30, 25, DateTimeKind.Utc), bd.Value)", span="323-323"];
m1_0_212 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", color=green, community=0, file=merged, label="0: Exit RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", span="316-316"];
m1_0_266 [cluster="System.DateTimeOffset.ToString(string)", file=merged, label="Entry System.DateTimeOffset.ToString(string)", span="0-0"];
m1_0_191 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="Entry RestSharp.Tests.JsonTests.CreateJsonWithDashes()", span="491-491"];
m1_0_318 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="var doc = new JObject()", span="493-493"];
m1_0_319 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="doc[''name''] = ''John Sheehan''", span="494-494"];
m1_0_320 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="doc[''start-date''] = new DateTime(2009, 9, 25, 0, 6, 1, DateTimeKind.Utc)", span="495-495"];
m1_0_321 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="doc[''age''] = 28", span="496-496"];
m1_0_322 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="doc[''percent''] = 99.9999m", span="497-497"];
m1_0_323 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="doc[''big-number''] = long.MaxValue", span="498-498"];
m1_0_324 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="doc[''is-cool''] = false", span="499-499"];
m1_0_325 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="doc[''ignore''] = ''dummy''", span="500-500"];
m1_0_326 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="doc[''read-only''] = ''dummy''", span="501-501"];
m1_0_327 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="doc[''url''] = ''http://example.com''", span="502-502"];
m1_0_328 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="doc[''url-path''] = ''/foo/bar''", span="503-503"];
m1_0_329 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="doc[''best-friend''] = new JObject(\r\n									new JProperty(''name'', ''The Fonz''),\r\n									new JProperty(''since'', 1952)\r\n								)", span="505-508"];
m1_0_335 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="doc[''friends''] = friendsArray", span="519-519"];
m1_0_337 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="doc[''foes''] = foesArray", span="526-526"];
m1_0_338 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="return doc.ToString();", span="528-528"];
m1_0_330 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="var friendsArray = new JArray()", span="510-510"];
m1_0_331 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="int i = 0", span="511-511"];
m1_0_333 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="friendsArray.Add(new JObject(\r\n									new JProperty(''name'', ''Friend'' + i),\r\n									new JProperty(''since'', DateTime.Now.Year \\n- i)\r\n								))", span="513-516"];
m1_0_332 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="i < 10", span="511-511"];
m1_0_334 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="i++", span="511-511"];
m1_0_336 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="var foesArray = new JObject(\r\n								new JProperty(''dict1'', new JObject(new JProperty(''nickname'', ''Foe 1''))),\r\n								\\nnew JProperty(''dict2'', new JObject(new JProperty(''nickname'', ''Foe 2'')))\r\n							)", span="521-524"];
m1_0_339 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="Exit RestSharp.Tests.JsonTests.CreateJsonWithDashes()", span="491-491"];
m1_0_119 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", span="201-201"];
m1_0_120 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="var doc = CreateJson()", span="203-203"];
m1_0_121 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="var d = new JsonDeserializer()", span="204-204"];
m1_0_122 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="var response = new RestResponse { Content = doc }", span="205-205"];
m1_0_123 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="var p = d.Deserialize<PersonForJson>(response)", span="206-206"];
m1_0_124 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.Equal(''John Sheehan'', p.Name)", span="208-208"];
m1_0_125 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.Equal(new DateTime(2009, 9, 25, 0, 6, 1, DateTimeKind.Utc), p.StartDate)", span="209-209"];
m1_0_126 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.Equal(28, p.Age)", span="210-210"];
m1_0_127 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.Equal(long.MaxValue, p.BigNumber)", span="211-211"];
m1_0_128 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.Equal(99.9999m, p.Percent)", span="212-212"];
m1_0_129 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.Equal(false, p.IsCool)", span="213-213"];
m1_0_130 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.Equal(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="214-214"];
m1_0_131 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.Equal(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="215-215"];
m1_0_132 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.Equal(Guid.Empty, p.EmptyGuid)", span="217-217"];
m1_0_133 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.Equal(new Guid(GuidString), p.Guid)", span="218-218"];
m1_0_134 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.Equal(Order.Third, p.Order)", span="220-220"];
m1_0_135 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.Equal(Disposition.SoSo, p.Disposition)", span="221-221"];
m1_0_136 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.NotNull(p.Friends)", span="223-223"];
m1_0_137 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.Equal(10, p.Friends.Count)", span="224-224"];
m1_0_138 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.NotNull(p.BestFriend)", span="226-226"];
m1_0_139 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.Equal(''The Fonz'', p.BestFriend.Name)", span="227-227"];
m1_0_140 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.Equal(1952, p.BestFriend.Since)", span="228-228"];
m1_0_141 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.NotEmpty(p.Foes)", span="230-230"];
m1_0_142 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.Equal(''Foe 1'', p.Foes[''dict1''].Nickname)", span="231-231"];
m1_0_143 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.Equal(''Foe 2'', p.Foes[''dict2''].Nickname)", span="232-232"];
m1_0_144 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", span="201-201"];
m1_2_27 [cluster="System.Type.IsSubclassOfRawGeneric(System.Type)", file=merged, label="Entry System.Type.IsSubclassOfRawGeneric(System.Type)", span="54-54"];
m1_0_67 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", span="126-126"];
m1_0_68 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file=merged, label="var culture = CultureInfo.InvariantCulture", span="128-128"];
m1_0_69 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file=merged, label="var format = ''dd yyyy MMM, hh:mm ss tt''", span="129-129"];
m1_0_71 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file=merged, label="var formatted = new\r\n			{\r\n				StartDate = date.ToString(format, culture)\r\n			}", span="132-135"];
m1_0_74 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file=merged, label="var json = new JsonDeserializer { DateFormat = format, Culture = culture }", span="140-140"];
m1_0_70 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file=merged, label="var date = new DateTime(2010, 2, 8, 11, 11, 11)", span="130-130"];
m1_0_76 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file=merged, label="Assert.Equal(date, output.StartDate)", span="144-144"];
m1_0_72 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file=merged, label="var data = JsonConvert.SerializeObject(formatted)", span="137-137"];
m1_0_73 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file=merged, label="var response = new RestResponse { Content = data }", span="138-138"];
m1_0_75 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file=merged, label="var output = json.Deserialize<PersonForJson>(response)", span="142-142"];
m1_0_77 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", span="126-126"];
m1_0_11 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.RestResponse)", file=merged, label="Entry RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.RestResponse)", span="39-39"];
m1_3 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.RestResponse)", file=merged, label="Entry RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.RestResponse)", span="39-39"];
m1_4 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.RestResponse)", file=merged, label="var target = new T()", span="41-41"];
m1_8 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.RestResponse)", file=merged, label="var root = FindRoot(response.Content)", span="49-49"];
m1_10 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.RestResponse)", file=merged, label="JArray json = JArray.Parse(response.Content)", span="54-54"];
m1_13 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.RestResponse)", file=merged, label="var root = FindRoot(response.Content)", span="60-60"];
m1_15 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.RestResponse)", file=merged, label="var root = FindRoot(response.Content)", span="65-65"];
m1_5 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.RestResponse)", file=merged, label="target is IList", span="43-43"];
m1_6 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.RestResponse)", file=merged, label="var objType = target.GetType()", span="45-45"];
m1_12 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.RestResponse)", file=merged, label="target is IDictionary", span="58-58"];
m1_14 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.RestResponse)", file=merged, label="target = (T)BuildDictionary(target.GetType(), root.Children())", span="61-61"];
m1_16 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.RestResponse)", file=merged, label="Map(target, root)", span="66-66"];
m1_17 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.RestResponse)", file=merged, label="return target;", span="69-69"];
m1_7 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.RestResponse)", file=merged, label="RootElement.HasValue()", span="47-47"];
m1_9 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.RestResponse)", file=merged, label="target = (T)BuildList(objType, root.Children())", span="50-50"];
m1_11 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.RestResponse)", file=merged, label="target = (T)BuildList(objType, json.Root.Children())", span="55-55"];
m1_18 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.RestResponse)", file=merged, label="Exit RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.RestResponse)", span="39-39"];
m1_0_26 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", span="71-71"];
m1_0_27 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", file=merged, label="var doc = File.ReadAllText(Path.Combine(''SampleData'', ''sojson.txt''))", span="73-73"];
m1_0_28 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", file=merged, label="var json = new JsonDeserializer()", span="75-75"];
m1_0_30 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", file=merged, label="var output = json.Deserialize<SOUser>(new RestResponse { Content = doc })", span="78-78"];
m1_0_29 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", file=merged, label="json.RootElement = ''User''", span="76-76"];
m1_0_31 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", file=merged, label="Assert.Equal(''John Sheehan'', output.DisplayName)", span="79-79"];
m1_0_32 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", span="71-71"];
m1_0_62 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", file=merged, label="Entry RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", span="610-610"];
m1_0_388 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", file=merged, label="var doc = new JObject()", span="612-612"];
m1_0_389 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", file=merged, label="doc[''Id''] = 123", span="613-613"];
m1_0_390 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", file=merged, label="doc[''StartDate''] = new DateTime(2010, 2, 21, 9, 35, 00, DateTimeKind.Utc)", span="614-614"];
m1_0_391 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", file=merged, label="doc[''UniqueId''] = new Guid(GuidString).ToString()", span="615-615"];
m1_0_392 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", file=merged, label="return doc.ToString();", span="617-617"];
m1_0_393 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", file=merged, label="Exit RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", span="610-610"];
m1_2_3 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.RestResponse)", file=merged, label="Entry RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.RestResponse)", span="40-40"];
m1_2_4 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.RestResponse)", file=merged, label="string.IsNullOrEmpty( response.Content )", span="42-42"];
m1_2_6 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.RestResponse)", file=merged, label="var doc = XDocument.Parse(response.Content)", span="45-45"];
m1_2_12 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.RestResponse)", file=merged, label="var x = new T()", span="58-58"];
m1_2_5 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.RestResponse)", file=merged, label="return default(T);", span="43-43"];
m1_2_7 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.RestResponse)", file=merged, label="var root = doc.Root", span="46-46"];
m1_2_8 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.RestResponse)", file=merged, label="RootElement.HasValue() && doc.Root != null", span="47-47"];
m1_2_9 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.RestResponse)", file=merged, label="root = doc.Root.Element(RootElement.AsNamespaced(Namespace))", span="49-49"];
m1_2_11 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.RestResponse)", file=merged, label="RemoveNamespace(doc)", span="55-55"];
m1_2_15 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.RestResponse)", file=merged, label="x = (T)HandleListDerivative(x, root, objType.Name, objType)", span="63-63"];
m1_2_16 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.RestResponse)", file=merged, label="Map(x, root)", span="67-67"];
m1_2_10 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.RestResponse)", file=merged, label="!Namespace.HasValue()", span="53-53"];
m1_2_13 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.RestResponse)", file=merged, label="var objType = x.GetType()", span="59-59"];
m1_2_17 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.RestResponse)", file=merged, label="return x;", span="70-70"];
m1_2_14 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.RestResponse)", file=merged, label="objType.IsSubclassOfRawGeneric(typeof(List<>))", span="61-61"];
m1_2_18 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.RestResponse)", file=merged, label="Exit RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.RestResponse)", span="40-40"];
m1_0_213 [cluster="RestSharp.Tests.JsonTests.CreateIsoDateJson()", color=green, community=0, file=merged, label="0: Entry RestSharp.Tests.JsonTests.CreateIsoDateJson()", span="531-531"];
m1_0_340 [cluster="RestSharp.Tests.JsonTests.CreateIsoDateJson()", file=merged, label="var bd = new Birthdate()", span="533-533"];
m1_0_341 [cluster="RestSharp.Tests.JsonTests.CreateIsoDateJson()", file=merged, label="bd.Value = new DateTime(1910, 9, 25, 9, 30, 25, DateTimeKind.Utc)", span="534-534"];
m1_0_342 [cluster="RestSharp.Tests.JsonTests.CreateIsoDateJson()", file=merged, label="return JsonConvert.SerializeObject(bd, new IsoDateTimeConverter());", span="536-536"];
m1_0_343 [cluster="RestSharp.Tests.JsonTests.CreateIsoDateJson()", file=merged, label="Exit RestSharp.Tests.JsonTests.CreateIsoDateJson()", span="531-531"];
m1_139 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildDictionary(System.Type, JEnumerable<JToken>)", file=merged, label="Entry RestSharp.Deserializers.JsonDeserializer.BuildDictionary(System.Type, JEnumerable<JToken>)", span="235-235"];
m1_140 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildDictionary(System.Type, JEnumerable<JToken>)", file=merged, label="var dict = (IDictionary)Activator.CreateInstance(type)", span="237-237"];
m1_141 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildDictionary(System.Type, JEnumerable<JToken>)", file=merged, label="var valueType = type.GetGenericArguments()[1]", span="238-238"];
m1_142 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildDictionary(System.Type, JEnumerable<JToken>)", file=merged, label=elements, span="239-239"];
m1_145 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildDictionary(System.Type, JEnumerable<JToken>)", file=merged, label="dict.Add(key, item)", span="243-243"];
m1_146 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildDictionary(System.Type, JEnumerable<JToken>)", file=merged, label="return dict;", span="246-246"];
m1_144 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildDictionary(System.Type, JEnumerable<JToken>)", file=merged, label="var item = CreateAndMap(valueType, child.Value)", span="242-242"];
m1_143 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildDictionary(System.Type, JEnumerable<JToken>)", file=merged, label="var key = child.Name", span="241-241"];
m1_147 [cluster="RestSharp.Deserializers.JsonDeserializer.BuildDictionary(System.Type, JEnumerable<JToken>)", file=merged, label="Exit RestSharp.Deserializers.JsonDeserializer.BuildDictionary(System.Type, JEnumerable<JToken>)", span="235-235"];
m1_2_143 [cluster="System.Collections.IList.Add(object)", file=merged, label="Entry System.Collections.IList.Add(object)", span="0-0"];
m1_164 [cluster="System.Collections.IList.Add(object)", file=merged, label="Entry System.Collections.IList.Add(object)", span="0-0"];
m1_0_229 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateJson()", file=merged, label="Entry RestSharp.Tests.JsonTests.CreateUnixDateJson()", span="547-547"];
m1_0_351 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateJson()", file=merged, label="var doc = new JObject()", span="549-549"];
m1_0_352 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateJson()", file=merged, label="doc[''Value''] = 1309421746", span="550-550"];
m1_0_353 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateJson()", file=merged, label="return doc.ToString();", span="552-552"];
m1_0_354 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateJson()", file=merged, label="Exit RestSharp.Tests.JsonTests.CreateUnixDateJson()", span="547-547"];
m1_2_134 [cluster="RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", file=merged, label="Entry RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", span="325-325"];
m1_2_193 [cluster="RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", file=merged, label="var lowerName = name.LocalName.ToLower().AsNamespaced(name.NamespaceName)", span="327-327"];
m1_2_194 [cluster="RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", file=merged, label="var camelName = name.LocalName.ToCamelCase(Culture).AsNamespaced(name.NamespaceName)", span="328-328"];
m1_2_195 [cluster="RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", file=merged, label="root.Element(name) != null", span="330-330"];
m1_2_196 [cluster="RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", file=merged, label="return root.Element(name);", span="332-332"];
m1_2_197 [cluster="RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", file=merged, label="root.Element(lowerName) != null", span="335-335"];
m1_2_198 [cluster="RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", file=merged, label="return root.Element(lowerName);", span="337-337"];
m1_2_199 [cluster="RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", file=merged, label="root.Element(camelName) != null", span="340-340"];
m1_2_200 [cluster="RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", file=merged, label="return root.Element(camelName);", span="342-342"];
m1_2_201 [cluster="RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", file=merged, label="name == ''Value''.AsNamespaced(name.NamespaceName)", span="345-345"];
m1_2_202 [cluster="RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", file=merged, label="return root;", span="347-347"];
m1_2_203 [cluster="RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", file=merged, label="var element = root.Descendants()\r\n				.OrderBy(d => d.Ancestors().Count())\r\n				.FirstOrDefault(d => d.Name.LocalName.RemoveUnderscoresAndDashes() == \\nname.LocalName) \r\n				?? root.Descendants()\r\n				.OrderBy(d => d.Ancestors().Count())\r\n				.FirstOrDefault(d => d.Name.LocalName.RemoveUnderscoresAndDashes() == \\nname.LocalName.ToLower())", span="351-356"];
m1_2_204 [cluster="RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", file=merged, label="element != null", span="358-358"];
m1_2_205 [cluster="RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", file=merged, label="return element;", span="360-360"];
m1_2_206 [cluster="RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", file=merged, label="return null;", span="363-363"];
m1_2_207 [cluster="RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", file=merged, label="Exit RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", span="325-325"];
m1_0_267 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", span="413-413"];
m1_0_268 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", file=merged, label="var doc = File.ReadAllText(Path.Combine(''SampleData'', ''datetimes.txt''))", span="415-415"];
m1_0_269 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", file=merged, label="var d = new JsonDeserializer()", span="416-416"];
m1_0_270 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", file=merged, label="var response = new RestResponse { Content = doc }", span="417-417"];
m1_0_271 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", file=merged, label="var payload = d.Deserialize<DateTimeTestStructure>(response)", span="418-418"];
m1_0_272 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", file=merged, label="Assert.NotNull(payload.NullableDateTimeOffsetWithValue)", span="420-420"];
m1_0_273 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", file=merged, label="Assert.Equal(\r\n				new DateTime(2011, 6, 30, 8, 15, 46, DateTimeKind.Utc).ToString(''u''),\r\n				payload.NullableDateTimeOffsetWithValue.Value.ToString(''\\nu''))", span="421-423"];
m1_0_274 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", span="413-413"];
m1_2_131 [cluster="System.DateTime.Parse(string, System.IFormatProvider)", file=merged, label="Entry System.DateTime.Parse(string, System.IFormatProvider)", span="0-0"];
m1_2_21 [cluster="string.HasValue()", file=merged, label="Entry string.HasValue()", span="76-76"];
m1_21 [cluster="string.HasValue()", file=merged, label="Entry string.HasValue()", span="76-76"];
m1_0_81 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", span="148-148"];
m1_0_82 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", file=merged, label="var data = File.ReadAllText(Path.Combine(''SampleData'', ''jsonarray.txt''))", span="150-150"];
m1_0_83 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", file=merged, label="var response = new RestResponse { Content = data }", span="151-151"];
m1_0_84 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", file=merged, label="var json = new JsonDeserializer()", span="152-152"];
m1_0_85 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", file=merged, label="var output = json.Deserialize<List<status>>(response)", span="153-153"];
m1_0_86 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", file=merged, label="Assert.Equal(4, output.Count)", span="154-154"];
m1_0_87 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", span="148-148"];
m1_2_121 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file=merged, label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
m1_0_50 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", span="106-106"];
m1_0_51 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file=merged, label="var doc = CreateJsonWithoutEmptyValues()", span="108-108"];
m1_0_52 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file=merged, label="var json = new JsonDeserializer()", span="110-110"];
m1_0_53 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file=merged, label="var output = json.Deserialize<NullableValues>(new RestResponse { Content = doc })", span="111-111"];
m1_0_54 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file=merged, label="Assert.NotNull(output.Id)", span="113-113"];
m1_0_55 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file=merged, label="Assert.NotNull(output.StartDate)", span="114-114"];
m1_0_56 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file=merged, label="Assert.NotNull(output.UniqueId)", span="115-115"];
m1_0_57 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file=merged, label="Assert.Equal(123, output.Id)", span="117-117"];
m1_0_58 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file=merged, label="Assert.NotNull(output.StartDate)", span="118-118"];
m1_0_59 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file=merged, label="Assert.Equal(\r\n				new DateTime(2010, 2, 21, 9, 35, 00, DateTimeKind.Utc).ToString(''u''),\r\n				output.StartDate.Value.ToString(''\\nu''))", span="119-121"];
m1_0_60 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file=merged, label="Assert.Equal(new Guid(GuidString), output.UniqueId)", span="122-122"];
m1_0_61 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", span="106-106"];
m1_0_223 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", file=merged, label="var doc = CreateUnixDateJson()", span="340-340"];
m1_0_224 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", file=merged, label="var d = new JsonDeserializer()", span="341-341"];
m1_0_225 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", file=merged, label="var response = new RestResponse { Content = doc }", span="342-342"];
m1_0_226 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", file=merged, label="var bd = d.Deserialize<Birthdate>(response)", span="343-343"];
m1_0_227 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", file=merged, label="Assert.Equal(new DateTime(2011, 6, 30, 8, 15, 46, DateTimeKind.Utc), bd.Value)", span="345-345"];
m1_0_228 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", span="338-338"];
m1_2_127 [cluster="object.ChangeType(System.Type, System.Globalization.CultureInfo)", file=merged, label="Entry object.ChangeType(System.Type, System.Globalization.CultureInfo)", span="74-74"];
m1_0_199 [cluster="RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file=merged, label="Entry RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", span="305-305"];
m1_0_200 [cluster="RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file=merged, label="var doc = CreateJson()", span="307-307"];
m1_0_201 [cluster="RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file=merged, label="var response = new RestResponse { Content = doc }", span="308-308"];
m1_0_202 [cluster="RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file=merged, label="var d = new JsonDeserializer()", span="309-309"];
m1_0_203 [cluster="RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file=merged, label="var p = d.Deserialize<PersonForJson>(response)", span="310-310"];
m1_0_204 [cluster="RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file=merged, label="Assert.Null(p.ReadOnlyProxy)", span="312-312"];
m1_0_205 [cluster="RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file=merged, label="Exit RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", span="305-305"];
m1_0_48 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", file=merged, label="Entry RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", span="600-600"];
m1_0_382 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", file=merged, label="var doc = new JObject()", span="602-602"];
m1_0_383 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", file=merged, label="doc[''Id''] = null", span="603-603"];
m1_0_384 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", file=merged, label="doc[''StartDate''] = null", span="604-604"];
m1_0_385 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", file=merged, label="doc[''UniqueId''] = null", span="605-605"];
m1_0_386 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", file=merged, label="return doc.ToString();", span="607-607"];
m1_0_387 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", file=merged, label="Exit RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", span="600-600"];
m1_2_136 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(object, XElement, string, System.Type)", file=merged, label="Entry RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(object, XElement, string, System.Type)", span="230-230"];
m1_2_144 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(object, XElement, string, System.Type)", file=merged, label="Type t", span="232-232"];
m1_2_145 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(object, XElement, string, System.Type)", file=merged, label="type.IsGenericType", span="234-234"];
m1_2_146 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(object, XElement, string, System.Type)", file=merged, label="t = type.GetGenericArguments()[0]", span="236-236"];
m1_2_147 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(object, XElement, string, System.Type)", file=merged, label="t = type.BaseType.GetGenericArguments()[0]", span="240-240"];
m1_2_148 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(object, XElement, string, System.Type)", file=merged, label="var list = (IList)Activator.CreateInstance(type)", span="244-244"];
m1_2_149 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(object, XElement, string, System.Type)", file=merged, label="var elements = root.Descendants(t.Name.AsNamespaced(Namespace))", span="246-246"];
m1_2_153 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(object, XElement, string, System.Type)", file=merged, label="elements = root.Descendants(lowerName)", span="252-252"];
m1_2_156 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(object, XElement, string, System.Type)", file=merged, label="elements = root.Descendants(camelName)", span="258-258"];
m1_2_158 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(object, XElement, string, System.Type)", file=merged, label="elements = root.Descendants().Where(e => e.Name.LocalName.RemoveUnderscoresAndDashes() == name)", span="263-263"];
m1_2_160 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(object, XElement, string, System.Type)", file=merged, label="!type.IsGenericType", span="270-270"];
m1_2_161 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(object, XElement, string, System.Type)", file=merged, label="Map(list, root.Element(propName.AsNamespaced(Namespace)) ?? root)", span="272-272"];
m1_2_150 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(object, XElement, string, System.Type)", file=merged, label="var name = t.Name", span="248-248"];
m1_2_159 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(object, XElement, string, System.Type)", file=merged, label="PopulateListFromElements(t, elements, list)", span="266-266"];
m1_2_162 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(object, XElement, string, System.Type)", file=merged, label="return list;", span="275-275"];
m1_2_151 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(object, XElement, string, System.Type)", file=merged, label="!elements.Any()", span="249-249"];
m1_2_154 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(object, XElement, string, System.Type)", file=merged, label="!elements.Any()", span="255-255"];
m1_2_157 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(object, XElement, string, System.Type)", file=merged, label="!elements.Any()", span="261-261"];
m1_2_152 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(object, XElement, string, System.Type)", file=merged, label="var lowerName = name.ToLower().AsNamespaced(Namespace)", span="251-251"];
m1_2_155 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(object, XElement, string, System.Type)", file=merged, label="var camelName = name.ToCamelCase(Culture).AsNamespaced(Namespace)", span="257-257"];
m1_2_163 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(object, XElement, string, System.Type)", file=merged, label="Exit RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(object, XElement, string, System.Type)", span="230-230"];
m1_2_118 [cluster="System.Activator.CreateInstance(System.Type)", file=merged, label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m1_138 [cluster="System.Activator.CreateInstance(System.Type)", file=merged, label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m1_100 [cluster="string.Replace(string, string)", file=merged, label="Entry string.Replace(string, string)", span="0-0"];
m1_111 [cluster="System.Guid.Guid(string)", file=merged, label="Entry System.Guid.Guid(string)", span="0-0"];
m1_0_79 [cluster="System.DateTime.ToString(string, System.IFormatProvider)", file=merged, label="Entry System.DateTime.ToString(string, System.IFormatProvider)", span="0-0"];
m1_0_344 [cluster="RestSharp.Tests.Birthdate.Birthdate()", file=merged, label="Entry RestSharp.Tests.Birthdate.Birthdate()", span="110-110"];
m1_0_170 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", span="265-265"];
m1_0_171 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="var doc = CreateJsonWithDashes()", span="267-267"];
m1_0_172 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="var d = new JsonDeserializer()", span="268-268"];
m1_0_173 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="var response = new RestResponse { Content = doc }", span="269-269"];
m1_0_174 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="var p = d.Deserialize<PersonForJson>(response)", span="270-270"];
m1_0_175 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="Assert.Equal(''John Sheehan'', p.Name)", span="272-272"];
m1_0_176 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="Assert.Equal(28, p.Age)", span="274-274"];
m1_0_177 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="Assert.Equal(long.MaxValue, p.BigNumber)", span="275-275"];
m1_0_178 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="Assert.Equal(99.9999m, p.Percent)", span="276-276"];
m1_0_179 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="Assert.Equal(false, p.IsCool)", span="277-277"];
m1_0_180 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="Assert.Equal(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="278-278"];
m1_0_181 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="Assert.Equal(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="279-279"];
m1_0_182 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="Assert.NotNull(p.Friends)", span="281-281"];
m1_0_183 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="Assert.Equal(10, p.Friends.Count)", span="282-282"];
m1_0_184 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="Assert.NotNull(p.BestFriend)", span="284-284"];
m1_0_185 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="Assert.Equal(''The Fonz'', p.BestFriend.Name)", span="285-285"];
m1_0_186 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="Assert.Equal(1952, p.BestFriend.Since)", span="286-286"];
m1_0_187 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="Assert.NotEmpty(p.Foes)", span="288-288"];
m1_0_188 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="Assert.Equal(''Foe 1'', p.Foes[''dict1''].Nickname)", span="289-289"];
m1_0_189 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="Assert.Equal(''Foe 2'', p.Foes[''dict2''].Nickname)", span="290-290"];
m1_0_190 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", span="265-265"];
m1_2_19 [cluster="string.IsNullOrEmpty(string)", file=merged, label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m1_110 [cluster="string.IsNullOrEmpty(string)", file=merged, label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m1_0_0 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", span="35-35"];
m1_0_1 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", file=merged, label="var doc = File.ReadAllText(Path.Combine(''SampleData'', ''4sq.txt''))", span="37-37"];
m1_0_2 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", file=merged, label="var json = new JsonDeserializer()", span="39-39"];
m1_0_4 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", file=merged, label="var output = json.Deserialize<VenuesResponse>(new RestResponse { Content = doc })", span="42-42"];
m1_0_3 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", file=merged, label="json.RootElement = ''response''", span="40-40"];
m1_0_5 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", file=merged, label="Assert.NotEmpty(output.Groups)", span="44-44"];
m1_0_6 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", span="35-35"];
m1_2_50 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="Entry RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", span="88-88"];
m1_2_51 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="var objType = x.GetType()", span="90-90"];
m1_2_57 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="var value = GetValueFromXml(root, name)", span="101-101"];
m1_2_61 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="var first = GetElementByName(root, genericType.Name)", span="109-109"];
m1_2_64 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="var elements = root.Elements(first.Name)", span="114-114"];
m1_2_66 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="prop.SetValue(x, list, null)", span="118-118"];
m1_2_69 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="prop.SetValue(x, null, null)", span="129-129"];
m1_2_73 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="prop.SetValue(x, XmlConvert.ToBoolean(toConvert), null)", span="138-138"];
m1_2_75 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="prop.SetValue(x, value.ChangeType(type, Culture), null)", span="142-142"];
m1_2_78 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="prop.SetValue(x, converted, null)", span="147-147"];
m1_2_81 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="prop.SetValue(x, uri, null)", span="152-152"];
m1_2_83 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="prop.SetValue(x, value, null)", span="156-156"];
m1_2_88 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="prop.SetValue(x, value, null)", span="169-169"];
m1_2_91 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="prop.SetValue(x, value, null)", span="174-174"];
m1_2_95 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="prop.SetValue(x, value, null)", span="180-180"];
m1_2_99 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="var container = GetElementByName(root, prop.Name.AsNamespaced(Namespace))", span="187-187"];
m1_2_104 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="prop.SetValue(x, list, null)", span="196-196"];
m1_2_106 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="var list = HandleListDerivative(x, root, prop.Name, type)", span="202-202"];
m1_2_107 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="prop.SetValue(x, list, null)", span="203-203"];
m1_2_108 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="root != null", span="208-208"];
m1_2_109 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="var element = GetElementByName(root, name)", span="210-210"];
m1_2_112 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="prop.SetValue(x, item, null)", span="214-214"];
m1_2_98 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", color=green, community=0, file=merged, label="0: var list = (IList)Activator.CreateInstance(type)", span="185-185"];
m1_2_52 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="var props = objType.GetProperties()", span="91-91"];
m1_2_53 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label=props, span="93-93"];
m1_2_54 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="var type = prop.PropertyType", span="95-95"];
m1_2_55 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="!type.IsPublic || !prop.CanWrite", span="97-97"];
m1_2_56 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="var name = prop.Name.AsNamespaced(Namespace)", span="100-100"];
m1_2_59 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="type.IsGenericType", span="106-106"];
m1_2_60 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="var genericType = type.GetGenericArguments()[0]", span="108-108"];
m1_2_62 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="var list = (IList)Activator.CreateInstance(type)", span="110-110"];
m1_2_67 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>)", span="124-124"];
m1_2_70 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="type = type.GetGenericArguments()[0]", span="132-132"];
m1_2_71 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="type == typeof(bool)", span="135-135"];
m1_2_74 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="type.IsPrimitive", span="140-140"];
m1_2_76 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="type.IsEnum", span="144-144"];
m1_2_77 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="var converted = type.FindEnumValue(value.ToString(), Culture)", span="146-146"];
m1_2_79 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="type == typeof(Uri)", span="149-149"];
m1_2_82 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="type == typeof(string)", span="154-154"];
m1_2_84 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="type == typeof(DateTime)", span="158-158"];
m1_2_89 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="type == typeof(Decimal)", span="171-171"];
m1_2_92 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="type == typeof(Guid)", span="176-176"];
m1_2_96 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", color=green, community=0, file=merged, label="0: type == typeof(TimeSpan)", span="182-182"];
m1_2_97 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", color=green, community=0, file=merged, label="0: var timeSpan = XmlConvert.ToTimeSpan(value.ToString())", span="184-184"];
m1_2_105 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="type.IsSubclassOfRawGeneric(typeof(List<>))", span="198-198"];
m1_2_111 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="var item = CreateAndMap(type, element)", span="213-213"];
m1_2_58 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="value == null", span="103-103"];
m1_2_68 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="value == null || String.IsNullOrEmpty(value.ToString())", span="127-127"];
m1_2_72 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="var toConvert = value.ToString().ToLower()", span="137-137"];
m1_2_80 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="var uri = new Uri(value.ToString(), UriKind.RelativeOrAbsolute)", span="151-151"];
m1_2_86 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="value = DateTime.ParseExact(value.ToString(), DateFormat, Culture)", span="162-162"];
m1_2_87 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="value = DateTime.Parse(value.ToString(), Culture)", span="166-166"];
m1_2_90 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="value = Decimal.Parse(value.ToString(), Culture)", span="173-173"];
m1_2_93 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="var raw = value.ToString()", span="178-178"];
m1_2_94 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="value = string.IsNullOrEmpty(raw) ? Guid.Empty : new Guid(value.ToString())", span="179-179"];
m1_2_65 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="PopulateListFromElements(genericType, elements, list)", span="115-115"];
m1_2_63 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="first != null", span="112-112"];
m1_2_85 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="DateFormat.HasValue()", span="160-160"];
m1_2_103 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="PopulateListFromElements(t, elements, list)", span="193-193"];
m1_2_100 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="container.HasElements", span="189-189"];
m1_2_101 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="var first = container.Elements().FirstOrDefault()", span="191-191"];
m1_2_102 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="var elements = container.Elements(first.Name)", span="192-192"];
m1_2_110 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="element != null", span="211-211"];
m1_2_113 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file=merged, label="Exit RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", span="88-88"];
m1_2_115 [cluster="RestSharp.Deserializers.XmlDeserializer.GetValueFromXml(XElement, XName)", file=merged, label="Entry RestSharp.Deserializers.XmlDeserializer.GetValueFromXml(XElement, XName)", span="298-298"];
m1_2_181 [cluster="RestSharp.Deserializers.XmlDeserializer.GetValueFromXml(XElement, XName)", file=merged, label="object val = null", span="300-300"];
m1_2_182 [cluster="RestSharp.Deserializers.XmlDeserializer.GetValueFromXml(XElement, XName)", file=merged, label="root != null", span="302-302"];
m1_2_183 [cluster="RestSharp.Deserializers.XmlDeserializer.GetValueFromXml(XElement, XName)", file=merged, label="var element = GetElementByName(root, name)", span="304-304"];
m1_2_185 [cluster="RestSharp.Deserializers.XmlDeserializer.GetValueFromXml(XElement, XName)", file=merged, label="var attribute = GetAttributeByName(root, name)", span="307-307"];
m1_2_190 [cluster="RestSharp.Deserializers.XmlDeserializer.GetValueFromXml(XElement, XName)", file=merged, label="return val;", span="322-322"];
m1_2_184 [cluster="RestSharp.Deserializers.XmlDeserializer.GetValueFromXml(XElement, XName)", file=merged, label="element == null", span="305-305"];
m1_2_188 [cluster="RestSharp.Deserializers.XmlDeserializer.GetValueFromXml(XElement, XName)", file=merged, label="!element.IsEmpty || element.HasElements || element.HasAttributes", span="315-315"];
m1_2_189 [cluster="RestSharp.Deserializers.XmlDeserializer.GetValueFromXml(XElement, XName)", file=merged, label="val = element.Value", span="317-317"];
m1_2_186 [cluster="RestSharp.Deserializers.XmlDeserializer.GetValueFromXml(XElement, XName)", file=merged, label="attribute != null", span="308-308"];
m1_2_187 [cluster="RestSharp.Deserializers.XmlDeserializer.GetValueFromXml(XElement, XName)", file=merged, label="val = attribute.Value", span="310-310"];
m1_2_191 [cluster="RestSharp.Deserializers.XmlDeserializer.GetValueFromXml(XElement, XName)", file=merged, label="Exit RestSharp.Deserializers.XmlDeserializer.GetValueFromXml(XElement, XName)", span="298-298"];
m1_0_111 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", span="188-188"];
m1_0_112 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", file=merged, label="var doc = new JObject()", span="190-190"];
m1_0_113 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", file=merged, label="doc[''Age''] = ''28''", span="191-191"];
m1_0_115 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", file=merged, label="var response = new RestResponse { Content = doc.ToString() }", span="194-194"];
m1_0_114 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", file=merged, label="var d = new JsonDeserializer()", span="193-193"];
m1_0_116 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", file=merged, label="var p = d.Deserialize<PersonForJson>(response)", span="195-195"];
m1_0_117 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", file=merged, label="Assert.Equal(28, p.Age)", span="197-197"];
m1_0_118 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", span="188-188"];
m1_2_129 [cluster="System.Uri.Uri(string, System.UriKind)", file=merged, label="Entry System.Uri.Uri(string, System.UriKind)", span="0-0"];
m1_104 [cluster="System.Uri.Uri(string, System.UriKind)", file=merged, label="Entry System.Uri.Uri(string, System.UriKind)", span="0-0"];
m1_0_146 [cluster="System.Uri.Uri(string, System.UriKind)", file=merged, label="Entry System.Uri.Uri(string, System.UriKind)", span="0-0"];
m1_2_116 [cluster="System.Type.GetGenericArguments()", file=merged, label="Entry System.Type.GetGenericArguments()", span="0-0"];
m1_148 [cluster="System.Type.GetGenericArguments()", file=merged, label="Entry System.Type.GetGenericArguments()", span="0-0"];
m1_0_275 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Null()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Null()", span="427-427"];
m1_0_276 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Null()", file=merged, label="var doc = File.ReadAllText(Path.Combine(''SampleData'', ''datetimes.txt''))", span="429-429"];
m1_0_277 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Null()", file=merged, label="var d = new JsonDeserializer()", span="430-430"];
m1_0_278 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Null()", file=merged, label="var response = new RestResponse { Content = doc }", span="431-431"];
m1_0_279 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Null()", file=merged, label="var payload = d.Deserialize<DateTimeTestStructure>(response)", span="432-432"];
m1_0_280 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Null()", file=merged, label="Assert.Null(payload.NullableDateTimeOffsetWithNull)", span="434-434"];
m1_0_281 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Null()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Null()", span="427-427"];
m1_0_282 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", span="438-438"];
m1_0_283 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file=merged, label="var doc = CreateJsonStringDictionary()", span="440-440"];
m1_0_284 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file=merged, label="var d = new JsonDeserializer()", span="441-441"];
m1_0_285 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file=merged, label="var response = new RestResponse { Content = doc }", span="442-442"];
m1_0_286 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file=merged, label="var bd = d.Deserialize<Dictionary<string,string>>(response)", span="443-443"];
m1_0_287 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file=merged, label="Assert.Equal(bd[''Thing1''], ''Thing1'')", span="445-445"];
m1_0_288 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file=merged, label="Assert.Equal(bd[''Thing2''], ''Thing2'')", span="446-446"];
m1_0_289 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file=merged, label="Assert.Equal(bd[''ThingRed''], ''ThingRed'')", span="447-447"];
m1_0_290 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file=merged, label="Assert.Equal(bd[''ThingBlue''], ''ThingBlue'')", span="448-448"];
m1_0_291 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", span="438-438"];
m1_2_137 [cluster="RestSharp.Deserializers.XmlDeserializer.CreateAndMap(System.Type, XElement)", file=merged, label="Entry RestSharp.Deserializers.XmlDeserializer.CreateAndMap(System.Type, XElement)", span="278-278"];
m1_2_171 [cluster="RestSharp.Deserializers.XmlDeserializer.CreateAndMap(System.Type, XElement)", file=merged, label="object item", span="280-280"];
m1_2_172 [cluster="RestSharp.Deserializers.XmlDeserializer.CreateAndMap(System.Type, XElement)", file=merged, label="t == typeof(String)", span="281-281"];
m1_2_173 [cluster="RestSharp.Deserializers.XmlDeserializer.CreateAndMap(System.Type, XElement)", file=merged, label="item = element.Value", span="283-283"];
m1_2_174 [cluster="RestSharp.Deserializers.XmlDeserializer.CreateAndMap(System.Type, XElement)", file=merged, label="t.IsPrimitive", span="285-285"];
m1_2_175 [cluster="RestSharp.Deserializers.XmlDeserializer.CreateAndMap(System.Type, XElement)", file=merged, label="item = element.Value.ChangeType(t, Culture)", span="287-287"];
m1_2_176 [cluster="RestSharp.Deserializers.XmlDeserializer.CreateAndMap(System.Type, XElement)", file=merged, label="item = Activator.CreateInstance(t)", span="291-291"];
m1_2_177 [cluster="RestSharp.Deserializers.XmlDeserializer.CreateAndMap(System.Type, XElement)", file=merged, label="Map(item, element)", span="292-292"];
m1_2_178 [cluster="RestSharp.Deserializers.XmlDeserializer.CreateAndMap(System.Type, XElement)", file=merged, label="return item;", span="295-295"];
m1_2_179 [cluster="RestSharp.Deserializers.XmlDeserializer.CreateAndMap(System.Type, XElement)", file=merged, label="Exit RestSharp.Deserializers.XmlDeserializer.CreateAndMap(System.Type, XElement)", span="278-278"];
m1_27 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", file=merged, label="Entry RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", span="83-83"];
m1_35 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", file=merged, label="var objType = x.GetType()", span="85-85"];
m1_40 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", file=merged, label="var actualName = name.GetNameVariants(Culture).FirstOrDefault(n => json[n] != null)", span="93-93"];
m1_41 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", file=merged, label="var value = actualName != null ? json[actualName] : null", span="94-94"];
m1_47 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", file=merged, label="prop.SetValue(x, tmpVal.ChangeType(type, Culture), null)", span="112-112"];
m1_50 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", file=merged, label="prop.SetValue(x, converted, null)", span="117-117"];
m1_54 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", file=merged, label="prop.SetValue(x, uri, null)", span="123-123"];
m1_57 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", file=merged, label="prop.SetValue(x, raw, null)", span="128-128"];
m1_67 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", file=merged, label="prop.SetValue(x, dt, null)", span="149-149"];
m1_69 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", file=merged, label="prop.SetValue(x, (DateTimeOffset)dt, null)", span="151-151"];
m1_72 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", file=merged, label="prop.SetValue(x, dec, null)", span="156-156"];
m1_76 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", file=merged, label="prop.SetValue(x, guid, null)", span="162-162"];
m1_81 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", file=merged, label="prop.SetValue(x, list, null)", span="170-170"];
m1_86 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", file=merged, label="prop.SetValue(x, dict, null)", span="180-180"];
m1_87 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", file=merged, label="var item = CreateAndMap(type, json[actualName])", span="186-186"];
m1_88 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", file=merged, label="prop.SetValue(x, item, null)", span="187-187"];
m1_89 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", file=merged, label="var item = CreateAndMap(type, json[actualName])", span="193-193"];
m1_90 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", file=merged, label="prop.SetValue(x, item, null)", span="194-194"];
m1_79 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", color=green, community=0, file=merged, label="0: genericTypeDef == typeof(List<>)", span="167-167"];
m1_36 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", file=merged, label="var props = objType.GetProperties().Where(p => p.CanWrite).ToList()", span="86-86"];
m1_37 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", file=merged, label=props, span="88-88"];
m1_38 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", file=merged, label="var type = prop.PropertyType", span="90-90"];
m1_39 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", file=merged, label="var name = prop.Name", span="92-92"];
m1_43 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", file=merged, label="type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>)", span="102-102"];
m1_44 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", file=merged, label="type = type.GetGenericArguments()[0]", span="104-104"];
m1_45 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", file=merged, label="type.IsPrimitive", span="107-107"];
m1_48 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", file=merged, label="type.IsEnum", span="114-114"];
m1_49 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", file=merged, label="var converted = type.FindEnumValue(value.AsString(), Culture)", span="116-116"];
m1_51 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", file=merged, label="type == typeof(Uri)", span="119-119"];
m1_55 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", file=merged, label="type == typeof(string)", span="125-125"];
m1_58 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", file=merged, label="type == typeof(DateTime) || type == typeof(DateTimeOffset)", span="130-130"];
m1_66 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", file=merged, label="type == typeof(DateTime)", span="148-148"];
m1_68 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", file=merged, label="type == typeof(DateTimeOffset)", span="150-150"];
m1_70 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", file=merged, label="type == typeof(Decimal)", span="153-153"];
m1_73 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", file=merged, label="type == typeof(Guid)", span="158-158"];
m1_77 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", color=green, community=0, file=merged, label="0: type == typeof(TimeSpan)", span="164-164"];
m1_78 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", color=green, community=0, file=merged, label="0: var timeSpan = TimeSpan.Parse(value.AsString(Culture))", span="166-166"];
m1_80 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", file=merged, label="var list = BuildList(type, value.Children())", span="169-169"];
m1_83 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", file=merged, label="var keyType = type.GetGenericArguments()[0]", span="174-174"];
m1_85 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", file=merged, label="var dict = BuildDictionary(type, value.Children())", span="179-179"];
m1_42 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", file=merged, label="value == null || value.Type == JTokenType.Null", span="96-96"];
m1_46 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", file=merged, label="var tmpVal = value.AsString().Replace(''\'''', string.Empty)", span="111-111"];
m1_52 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", file=merged, label="string raw = value.AsString()", span="121-121"];
m1_56 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", file=merged, label="string raw = value.AsString()", span="127-127"];
m1_61 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", file=merged, label="var clean = value.AsString()", span="135-135"];
m1_63 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", file=merged, label="value.Type == JTokenType.Date", span="138-138"];
m1_64 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", file=merged, label="dt = value.Value<DateTime>().ToUniversalTime()", span="140-140"];
m1_65 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", file=merged, label="dt = value.AsString().ParseJsonDate(Culture)", span="145-145"];
m1_71 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", file=merged, label="var dec = Decimal.Parse(value.AsString(Culture), Culture)", span="155-155"];
m1_74 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", file=merged, label="string raw = value.AsString()", span="160-160"];
m1_53 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", file=merged, label="var uri = new Uri(raw, UriKind.RelativeOrAbsolute)", span="122-122"];
m1_59 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", file=merged, label="DateTime dt", span="132-132"];
m1_60 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", file=merged, label="DateFormat.HasValue()", span="133-133"];
m1_62 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", file=merged, label="dt = DateTime.ParseExact(clean, DateFormat, Culture)", span="136-136"];
m1_75 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", file=merged, label="var guid = string.IsNullOrEmpty(raw) ? Guid.Empty : new Guid(raw)", span="161-161"];
m1_82 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", file=merged, label="genericTypeDef == typeof(Dictionary<,>)", span="172-172"];
m1_84 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", file=merged, label="keyType == typeof(string)", span="177-177"];
m1_91 [cluster="RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", file=merged, label="Exit RestSharp.Deserializers.JsonDeserializer.Map(object, JToken)", span="83-83"];
m1_2_138 [cluster="RestSharp.Deserializers.XmlDeserializer.PopulateListFromElements(System.Type, System.Collections.Generic.IEnumerable<XElement>, \\nSystem.Collections.IList)", file=merged, label="Entry RestSharp.Deserializers.XmlDeserializer.PopulateListFromElements(System.Type, System.Collections.Generic.IEnumerable<XElement>, \\nSystem.Collections.IList)", span="221-221"];
m1_2_139 [cluster="RestSharp.Deserializers.XmlDeserializer.PopulateListFromElements(System.Type, System.Collections.Generic.IEnumerable<XElement>, \\nSystem.Collections.IList)", file=merged, label=elements, span="223-223"];
m1_2_140 [cluster="RestSharp.Deserializers.XmlDeserializer.PopulateListFromElements(System.Type, System.Collections.Generic.IEnumerable<XElement>, \\nSystem.Collections.IList)", file=merged, label="var item = CreateAndMap(t, element)", span="225-225"];
m1_2_141 [cluster="RestSharp.Deserializers.XmlDeserializer.PopulateListFromElements(System.Type, System.Collections.Generic.IEnumerable<XElement>, \\nSystem.Collections.IList)", file=merged, label="list.Add(item)", span="226-226"];
m1_2_142 [cluster="RestSharp.Deserializers.XmlDeserializer.PopulateListFromElements(System.Type, System.Collections.Generic.IEnumerable<XElement>, \\nSystem.Collections.IList)", file=merged, label="Exit RestSharp.Deserializers.XmlDeserializer.PopulateListFromElements(System.Type, System.Collections.Generic.IEnumerable<XElement>, \\nSystem.Collections.IList)", span="221-221"];
m1_0_34 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", span="83-83"];
m1_0_35 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", file=merged, label="var doc = File.ReadAllText(Path.Combine(''SampleData'', ''GenericWithList.txt''))", span="85-85"];
m1_0_36 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", file=merged, label="var json = new JsonDeserializer()", span="86-86"];
m1_0_37 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", file=merged, label="var output = json.Deserialize<Generic<GenericWithList<Foe>>>(new RestResponse { Content = doc })", span="88-88"];
m1_0_38 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", file=merged, label="Assert.Equal(''Foe sho'', output.Data.Items[0].Nickname)", span="89-89"];
m1_0_39 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", span="83-83"];
m1_0_101 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", span="175-175"];
m1_0_102 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", file=merged, label="var doc = new JObject()", span="177-177"];
m1_0_103 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", file=merged, label="doc[''Guid''] = GuidString", span="178-178"];
m1_0_105 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", file=merged, label="var response = new RestResponse { Content = doc.ToString() }", span="181-181"];
m1_0_104 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", file=merged, label="var d = new JsonDeserializer()", span="180-180"];
m1_0_106 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", file=merged, label="var p = d.Deserialize<PersonForJson>(response)", span="182-182"];
m1_0_107 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", file=merged, label="Assert.Equal(new Guid(GuidString), p.Guid)", span="184-184"];
m1_0_108 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", span="175-175"];
m1_0_40 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", span="93-93"];
m1_0_41 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file=merged, label="var doc = CreateJsonWithNullValues()", span="95-95"];
m1_0_42 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file=merged, label="var json = new JsonDeserializer()", span="97-97"];
m1_0_43 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file=merged, label="var output = json.Deserialize<NullableValues>(new RestResponse { Content = doc })", span="98-98"];
m1_0_44 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file=merged, label="Assert.Null(output.Id)", span="100-100"];
m1_0_45 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file=merged, label="Assert.Null(output.StartDate)", span="101-101"];
m1_0_46 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file=merged, label="Assert.Null(output.UniqueId)", span="102-102"];
m1_0_47 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", span="93-93"];
m1_2_30 [cluster="RestSharp.Deserializers.XmlDeserializer.RemoveNamespace(XDocument)", file=merged, label="Entry RestSharp.Deserializers.XmlDeserializer.RemoveNamespace(XDocument)", span="73-73"];
m1_2_31 [cluster="RestSharp.Deserializers.XmlDeserializer.RemoveNamespace(XDocument)", file=merged, label="xdoc.Root.DescendantsAndSelf()", span="75-75"];
m1_2_32 [cluster="RestSharp.Deserializers.XmlDeserializer.RemoveNamespace(XDocument)", file=merged, label="e.Name.Namespace != XNamespace.None", span="77-77"];
m1_2_33 [cluster="RestSharp.Deserializers.XmlDeserializer.RemoveNamespace(XDocument)", file=merged, label="e.Name = XNamespace.None.GetName(e.Name.LocalName)", span="79-79"];
m1_2_34 [cluster="RestSharp.Deserializers.XmlDeserializer.RemoveNamespace(XDocument)", file=merged, label="e.Attributes().Any(a => a.IsNamespaceDeclaration || a.Name.Namespace != XNamespace.None)", span="81-81"];
m1_2_35 [cluster="RestSharp.Deserializers.XmlDeserializer.RemoveNamespace(XDocument)", file=merged, label="e.ReplaceAttributes(e.Attributes().Select(a => a.IsNamespaceDeclaration ? null : a.Name.Namespace != XNamespace.None ? new XAttribute(\\nXNamespace.None.GetName(a.Name.LocalName), a.Value) : a))", span="83-83"];
m1_2_36 [cluster="RestSharp.Deserializers.XmlDeserializer.RemoveNamespace(XDocument)", file=merged, label="Exit RestSharp.Deserializers.XmlDeserializer.RemoveNamespace(XDocument)", span="73-73"];
m1_0_9 [cluster="RestSharp.Deserializers.JsonDeserializer.JsonDeserializer()", file=merged, label="Entry RestSharp.Deserializers.JsonDeserializer.JsonDeserializer()", span="34-34"];
m1_0 [cluster="RestSharp.Deserializers.JsonDeserializer.JsonDeserializer()", file=merged, label="Entry RestSharp.Deserializers.JsonDeserializer.JsonDeserializer()", span="34-34"];
m1_1 [cluster="RestSharp.Deserializers.JsonDeserializer.JsonDeserializer()", file=merged, label="Culture = CultureInfo.InvariantCulture", span="36-36"];
m1_2 [cluster="RestSharp.Deserializers.JsonDeserializer.JsonDeserializer()", file=merged, label="Exit RestSharp.Deserializers.JsonDeserializer.JsonDeserializer()", span="34-34"];
m3_127 [cluster="object.ChangeType(System.Type, System.Globalization.CultureInfo)", file="XmlDeserializer.cs", label="Entry object.ChangeType(System.Type, System.Globalization.CultureInfo)", span="74-74"];
m3_165 [cluster="string.ToCamelCase(System.Globalization.CultureInfo)", file="XmlDeserializer.cs", label="Entry string.ToCamelCase(System.Globalization.CultureInfo)", span="253-253"];
m3_136 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(object, XElement, string, System.Type)", file="XmlDeserializer.cs", label="Entry RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(object, XElement, string, System.Type)", span="230-230"];
m3_144 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(object, XElement, string, System.Type)", file="XmlDeserializer.cs", label="Type t", span="232-232"];
m3_145 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(object, XElement, string, System.Type)", file="XmlDeserializer.cs", label="type.IsGenericType", span="234-234"];
m3_146 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(object, XElement, string, System.Type)", file="XmlDeserializer.cs", label="t = type.GetGenericArguments()[0]", span="236-236"];
m3_147 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(object, XElement, string, System.Type)", file="XmlDeserializer.cs", label="t = type.BaseType.GetGenericArguments()[0]", span="240-240"];
m3_148 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(object, XElement, string, System.Type)", file="XmlDeserializer.cs", label="var list = (IList)Activator.CreateInstance(type)", span="244-244"];
m3_149 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(object, XElement, string, System.Type)", file="XmlDeserializer.cs", label="var elements = root.Descendants(t.Name.AsNamespaced(Namespace))", span="246-246"];
m3_153 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(object, XElement, string, System.Type)", file="XmlDeserializer.cs", label="elements = root.Descendants(lowerName)", span="252-252"];
m3_156 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(object, XElement, string, System.Type)", file="XmlDeserializer.cs", label="elements = root.Descendants(camelName)", span="258-258"];
m3_158 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(object, XElement, string, System.Type)", file="XmlDeserializer.cs", label="elements = root.Descendants().Where(e => e.Name.LocalName.RemoveUnderscoresAndDashes() == name)", span="263-263"];
m3_160 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(object, XElement, string, System.Type)", file="XmlDeserializer.cs", label="!type.IsGenericType", span="270-270"];
m3_161 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(object, XElement, string, System.Type)", file="XmlDeserializer.cs", label="Map(list, root.Element(propName.AsNamespaced(Namespace)) ?? root)", span="272-272"];
m3_150 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(object, XElement, string, System.Type)", file="XmlDeserializer.cs", label="var name = t.Name", span="248-248"];
m3_159 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(object, XElement, string, System.Type)", file="XmlDeserializer.cs", label="PopulateListFromElements(t, elements, list)", span="266-266"];
m3_162 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(object, XElement, string, System.Type)", file="XmlDeserializer.cs", label="return list;", span="275-275"];
m3_151 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(object, XElement, string, System.Type)", file="XmlDeserializer.cs", label="!elements.Any()", span="249-249"];
m3_154 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(object, XElement, string, System.Type)", file="XmlDeserializer.cs", label="!elements.Any()", span="255-255"];
m3_157 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(object, XElement, string, System.Type)", file="XmlDeserializer.cs", label="!elements.Any()", span="261-261"];
m3_152 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(object, XElement, string, System.Type)", file="XmlDeserializer.cs", label="var lowerName = name.ToLower().AsNamespaced(Namespace)", span="251-251"];
m3_155 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(object, XElement, string, System.Type)", file="XmlDeserializer.cs", label="var camelName = name.ToCamelCase(Culture).AsNamespaced(Namespace)", span="257-257"];
m3_163 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(object, XElement, string, System.Type)", file="XmlDeserializer.cs", label="Exit RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(object, XElement, string, System.Type)", span="230-230"];
m3_118 [cluster="System.Activator.CreateInstance(System.Type)", file="XmlDeserializer.cs", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m3_133 [cluster="System.Guid.Guid(string)", file="XmlDeserializer.cs", label="Entry System.Guid.Guid(string)", span="0-0"];
m3_27 [cluster="System.Type.IsSubclassOfRawGeneric(System.Type)", file="XmlDeserializer.cs", label="Entry System.Type.IsSubclassOfRawGeneric(System.Type)", span="54-54"];
m3_240 [cluster="lambda expression", file="XmlDeserializer.cs", label="Entry lambda expression", span="387-387"];
m3_43 [cluster="lambda expression", file="XmlDeserializer.cs", label="Entry lambda expression", span="81-81"];
m3_46 [cluster="lambda expression", file="XmlDeserializer.cs", label="Entry lambda expression", span="83-83"];
m3_44 [cluster="lambda expression", file="XmlDeserializer.cs", label="a.IsNamespaceDeclaration || a.Name.Namespace != XNamespace.None", span="81-81"];
m3_45 [cluster="lambda expression", file="XmlDeserializer.cs", label="Exit lambda expression", span="81-81"];
m3_47 [cluster="lambda expression", file="XmlDeserializer.cs", label="a.IsNamespaceDeclaration ? null : a.Name.Namespace != XNamespace.None ? new XAttribute(XNamespace.None.GetName(a.Name.LocalName), \\na.Value) : a", span="83-83"];
m3_48 [cluster="lambda expression", file="XmlDeserializer.cs", label="Exit lambda expression", span="83-83"];
m3_218 [cluster="lambda expression", file="XmlDeserializer.cs", label="d.Name.LocalName.RemoveUnderscoresAndDashes() == name.LocalName", span="353-353"];
m3_224 [cluster="lambda expression", file="XmlDeserializer.cs", label="d.Name.LocalName.RemoveUnderscoresAndDashes() == name.LocalName.ToLower()", span="356-356"];
m3_212 [cluster="lambda expression", file="XmlDeserializer.cs", label="Entry lambda expression", span="352-352"];
m3_217 [cluster="lambda expression", file="XmlDeserializer.cs", label="Entry lambda expression", span="353-353"];
m3_220 [cluster="lambda expression", file="XmlDeserializer.cs", label="Entry lambda expression", span="355-355"];
m3_223 [cluster="lambda expression", file="XmlDeserializer.cs", label="Entry lambda expression", span="356-356"];
m3_168 [cluster="lambda expression", file="XmlDeserializer.cs", label="e.Name.LocalName.RemoveUnderscoresAndDashes() == name", span="263-263"];
m3_167 [cluster="lambda expression", file="XmlDeserializer.cs", label="Entry lambda expression", span="263-263"];
m3_169 [cluster="lambda expression", file="XmlDeserializer.cs", label="Exit lambda expression", span="263-263"];
m3_241 [cluster="lambda expression", file="XmlDeserializer.cs", label="d.Name.LocalName.RemoveUnderscoresAndDashes() == name.LocalName", span="387-387"];
m3_213 [cluster="lambda expression", file="XmlDeserializer.cs", label="d.Ancestors().Count()", span="352-352"];
m3_214 [cluster="lambda expression", file="XmlDeserializer.cs", label="Exit lambda expression", span="352-352"];
m3_219 [cluster="lambda expression", file="XmlDeserializer.cs", label="Exit lambda expression", span="353-353"];
m3_221 [cluster="lambda expression", file="XmlDeserializer.cs", label="d.Ancestors().Count()", span="355-355"];
m3_222 [cluster="lambda expression", file="XmlDeserializer.cs", label="Exit lambda expression", span="355-355"];
m3_225 [cluster="lambda expression", file="XmlDeserializer.cs", label="Exit lambda expression", span="356-356"];
m3_242 [cluster="lambda expression", file="XmlDeserializer.cs", label="Exit lambda expression", span="387-387"];
m3_130 [cluster="System.DateTime.ParseExact(string, string, System.IFormatProvider)", file="XmlDeserializer.cs", label="Entry System.DateTime.ParseExact(string, string, System.IFormatProvider)", span="0-0"];
m3_192 [cluster="RestSharp.Deserializers.XmlDeserializer.GetAttributeByName(XElement, XName)", file="XmlDeserializer.cs", label="Entry RestSharp.Deserializers.XmlDeserializer.GetAttributeByName(XElement, XName)", span="366-366"];
m3_226 [cluster="RestSharp.Deserializers.XmlDeserializer.GetAttributeByName(XElement, XName)", file="XmlDeserializer.cs", label="var lowerName = name.LocalName.ToLower().AsNamespaced(name.NamespaceName)", span="368-368"];
m3_227 [cluster="RestSharp.Deserializers.XmlDeserializer.GetAttributeByName(XElement, XName)", file="XmlDeserializer.cs", label="var camelName = name.LocalName.ToCamelCase(Culture).AsNamespaced(name.NamespaceName)", span="369-369"];
m3_228 [cluster="RestSharp.Deserializers.XmlDeserializer.GetAttributeByName(XElement, XName)", file="XmlDeserializer.cs", label="root.Attribute(name) != null", span="371-371"];
m3_229 [cluster="RestSharp.Deserializers.XmlDeserializer.GetAttributeByName(XElement, XName)", file="XmlDeserializer.cs", label="return root.Attribute(name);", span="373-373"];
m3_230 [cluster="RestSharp.Deserializers.XmlDeserializer.GetAttributeByName(XElement, XName)", file="XmlDeserializer.cs", label="root.Attribute(lowerName) != null", span="376-376"];
m3_231 [cluster="RestSharp.Deserializers.XmlDeserializer.GetAttributeByName(XElement, XName)", file="XmlDeserializer.cs", label="return root.Attribute(lowerName);", span="378-378"];
m3_232 [cluster="RestSharp.Deserializers.XmlDeserializer.GetAttributeByName(XElement, XName)", file="XmlDeserializer.cs", label="root.Attribute(camelName) != null", span="381-381"];
m3_233 [cluster="RestSharp.Deserializers.XmlDeserializer.GetAttributeByName(XElement, XName)", file="XmlDeserializer.cs", label="return root.Attribute(camelName);", span="383-383"];
m3_234 [cluster="RestSharp.Deserializers.XmlDeserializer.GetAttributeByName(XElement, XName)", file="XmlDeserializer.cs", label="var element = root.Attributes().FirstOrDefault(d => d.Name.LocalName.RemoveUnderscoresAndDashes() == name.LocalName)", span="387-387"];
m3_235 [cluster="RestSharp.Deserializers.XmlDeserializer.GetAttributeByName(XElement, XName)", file="XmlDeserializer.cs", label="element != null", span="388-388"];
m3_236 [cluster="RestSharp.Deserializers.XmlDeserializer.GetAttributeByName(XElement, XName)", file="XmlDeserializer.cs", label="return element;", span="390-390"];
m3_237 [cluster="RestSharp.Deserializers.XmlDeserializer.GetAttributeByName(XElement, XName)", file="XmlDeserializer.cs", label="return null;", span="393-393"];
m3_238 [cluster="RestSharp.Deserializers.XmlDeserializer.GetAttributeByName(XElement, XName)", file="XmlDeserializer.cs", label="Exit RestSharp.Deserializers.XmlDeserializer.GetAttributeByName(XElement, XName)", span="366-366"];
m3_26 [cluster="object.GetType()", file="XmlDeserializer.cs", label="Entry object.GetType()", span="0-0"];
m3_19 [cluster="string.IsNullOrEmpty(string)", file="XmlDeserializer.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m3_22 [cluster="string.AsNamespaced(string)", file="XmlDeserializer.cs", label="Entry string.AsNamespaced(string)", span="31-31"];
m3_132 [cluster="decimal.Parse(string, System.IFormatProvider)", file="XmlDeserializer.cs", label="Entry decimal.Parse(string, System.IFormatProvider)", span="0-0"];
m3_124 [cluster="string.ToLower()", file="XmlDeserializer.cs", label="Entry string.ToLower()", span="0-0"];
m3_115 [cluster="RestSharp.Deserializers.XmlDeserializer.GetValueFromXml(XElement, XName)", file="XmlDeserializer.cs", label="Entry RestSharp.Deserializers.XmlDeserializer.GetValueFromXml(XElement, XName)", span="298-298"];
m3_181 [cluster="RestSharp.Deserializers.XmlDeserializer.GetValueFromXml(XElement, XName)", file="XmlDeserializer.cs", label="object val = null", span="300-300"];
m3_182 [cluster="RestSharp.Deserializers.XmlDeserializer.GetValueFromXml(XElement, XName)", file="XmlDeserializer.cs", label="root != null", span="302-302"];
m3_183 [cluster="RestSharp.Deserializers.XmlDeserializer.GetValueFromXml(XElement, XName)", file="XmlDeserializer.cs", label="var element = GetElementByName(root, name)", span="304-304"];
m3_185 [cluster="RestSharp.Deserializers.XmlDeserializer.GetValueFromXml(XElement, XName)", file="XmlDeserializer.cs", label="var attribute = GetAttributeByName(root, name)", span="307-307"];
m3_190 [cluster="RestSharp.Deserializers.XmlDeserializer.GetValueFromXml(XElement, XName)", file="XmlDeserializer.cs", label="return val;", span="322-322"];
m3_184 [cluster="RestSharp.Deserializers.XmlDeserializer.GetValueFromXml(XElement, XName)", file="XmlDeserializer.cs", label="element == null", span="305-305"];
m3_188 [cluster="RestSharp.Deserializers.XmlDeserializer.GetValueFromXml(XElement, XName)", file="XmlDeserializer.cs", label="!element.IsEmpty || element.HasElements || element.HasAttributes", span="315-315"];
m3_189 [cluster="RestSharp.Deserializers.XmlDeserializer.GetValueFromXml(XElement, XName)", file="XmlDeserializer.cs", label="val = element.Value", span="317-317"];
m3_186 [cluster="RestSharp.Deserializers.XmlDeserializer.GetValueFromXml(XElement, XName)", file="XmlDeserializer.cs", label="attribute != null", span="308-308"];
m3_187 [cluster="RestSharp.Deserializers.XmlDeserializer.GetValueFromXml(XElement, XName)", file="XmlDeserializer.cs", label="val = attribute.Value", span="310-310"];
m3_191 [cluster="RestSharp.Deserializers.XmlDeserializer.GetValueFromXml(XElement, XName)", file="XmlDeserializer.cs", label="Exit RestSharp.Deserializers.XmlDeserializer.GetValueFromXml(XElement, XName)", span="298-298"];
m3_50 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="Entry RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", span="88-88"];
m3_51 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="var objType = x.GetType()", span="90-90"];
m3_57 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="var value = GetValueFromXml(root, name)", span="101-101"];
m3_61 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="var first = GetElementByName(root, genericType.Name)", span="109-109"];
m3_64 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="var elements = root.Elements(first.Name)", span="114-114"];
m3_66 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="prop.SetValue(x, list, null)", span="118-118"];
m3_69 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="prop.SetValue(x, null, null)", span="129-129"];
m3_73 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="prop.SetValue(x, XmlConvert.ToBoolean(toConvert), null)", span="138-138"];
m3_75 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="prop.SetValue(x, value.ChangeType(type, Culture), null)", span="142-142"];
m3_78 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="prop.SetValue(x, converted, null)", span="147-147"];
m3_81 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="prop.SetValue(x, uri, null)", span="152-152"];
m3_83 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="prop.SetValue(x, value, null)", span="156-156"];
m3_88 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="prop.SetValue(x, value, null)", span="169-169"];
m3_91 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="prop.SetValue(x, value, null)", span="174-174"];
m3_95 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="prop.SetValue(x, value, null)", span="180-180"];
m3_99 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="var container = GetElementByName(root, prop.Name.AsNamespaced(Namespace))", span="187-187"];
m3_104 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="prop.SetValue(x, list, null)", span="196-196"];
m3_106 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="var list = HandleListDerivative(x, root, prop.Name, type)", span="202-202"];
m3_107 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="prop.SetValue(x, list, null)", span="203-203"];
m3_108 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="root != null", span="208-208"];
m3_109 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="var element = GetElementByName(root, name)", span="210-210"];
m3_112 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="prop.SetValue(x, item, null)", span="214-214"];
m3_98 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", color=green, community=0, file="XmlDeserializer.cs", label="0: var list = (IList)Activator.CreateInstance(type)", span="185-185"];
m3_52 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="var props = objType.GetProperties()", span="91-91"];
m3_53 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label=props, span="93-93"];
m3_54 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="var type = prop.PropertyType", span="95-95"];
m3_55 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="!type.IsPublic || !prop.CanWrite", span="97-97"];
m3_56 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="var name = prop.Name.AsNamespaced(Namespace)", span="100-100"];
m3_59 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="type.IsGenericType", span="106-106"];
m3_60 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="var genericType = type.GetGenericArguments()[0]", span="108-108"];
m3_62 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="var list = (IList)Activator.CreateInstance(type)", span="110-110"];
m3_67 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>)", span="124-124"];
m3_70 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="type = type.GetGenericArguments()[0]", span="132-132"];
m3_71 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="type == typeof(bool)", span="135-135"];
m3_74 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="type.IsPrimitive", span="140-140"];
m3_76 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="type.IsEnum", span="144-144"];
m3_77 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="var converted = type.FindEnumValue(value.ToString(), Culture)", span="146-146"];
m3_79 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="type == typeof(Uri)", span="149-149"];
m3_82 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="type == typeof(string)", span="154-154"];
m3_84 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="type == typeof(DateTime)", span="158-158"];
m3_89 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="type == typeof(Decimal)", span="171-171"];
m3_92 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="type == typeof(Guid)", span="176-176"];
m3_96 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", color=green, community=0, file="XmlDeserializer.cs", label="0: type == typeof(TimeSpan)", span="182-182"];
m3_97 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", color=green, community=0, file="XmlDeserializer.cs", label="0: var timeSpan = XmlConvert.ToTimeSpan(value.ToString())", span="184-184"];
m3_105 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="type.IsSubclassOfRawGeneric(typeof(List<>))", span="198-198"];
m3_111 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="var item = CreateAndMap(type, element)", span="213-213"];
m3_58 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="value == null", span="103-103"];
m3_68 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="value == null || String.IsNullOrEmpty(value.ToString())", span="127-127"];
m3_72 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="var toConvert = value.ToString().ToLower()", span="137-137"];
m3_80 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="var uri = new Uri(value.ToString(), UriKind.RelativeOrAbsolute)", span="151-151"];
m3_86 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="value = DateTime.ParseExact(value.ToString(), DateFormat, Culture)", span="162-162"];
m3_87 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="value = DateTime.Parse(value.ToString(), Culture)", span="166-166"];
m3_90 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="value = Decimal.Parse(value.ToString(), Culture)", span="173-173"];
m3_93 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="var raw = value.ToString()", span="178-178"];
m3_94 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="value = string.IsNullOrEmpty(raw) ? Guid.Empty : new Guid(value.ToString())", span="179-179"];
m3_65 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="PopulateListFromElements(genericType, elements, list)", span="115-115"];
m3_63 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="first != null", span="112-112"];
m3_85 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="DateFormat.HasValue()", span="160-160"];
m3_103 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="PopulateListFromElements(t, elements, list)", span="193-193"];
m3_100 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="container.HasElements", span="189-189"];
m3_101 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="var first = container.Elements().FirstOrDefault()", span="191-191"];
m3_102 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="var elements = container.Elements(first.Name)", span="192-192"];
m3_110 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="element != null", span="211-211"];
m3_113 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="Exit RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", span="88-88"];
m3_128 [cluster="System.Type.FindEnumValue(string, System.Globalization.CultureInfo)", file="XmlDeserializer.cs", label="Entry System.Type.FindEnumValue(string, System.Globalization.CultureInfo)", span="91-91"];
m3_129 [cluster="System.Uri.Uri(string, System.UriKind)", file="XmlDeserializer.cs", label="Entry System.Uri.Uri(string, System.UriKind)", span="0-0"];
m3_3 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.RestResponse)", file="XmlDeserializer.cs", label="Entry RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.RestResponse)", span="40-40"];
m3_4 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.RestResponse)", file="XmlDeserializer.cs", label="string.IsNullOrEmpty( response.Content )", span="42-42"];
m3_6 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.RestResponse)", file="XmlDeserializer.cs", label="var doc = XDocument.Parse(response.Content)", span="45-45"];
m3_12 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.RestResponse)", file="XmlDeserializer.cs", label="var x = new T()", span="58-58"];
m3_5 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.RestResponse)", file="XmlDeserializer.cs", label="return default(T);", span="43-43"];
m3_7 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.RestResponse)", file="XmlDeserializer.cs", label="var root = doc.Root", span="46-46"];
m3_8 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.RestResponse)", file="XmlDeserializer.cs", label="RootElement.HasValue() && doc.Root != null", span="47-47"];
m3_9 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.RestResponse)", file="XmlDeserializer.cs", label="root = doc.Root.Element(RootElement.AsNamespaced(Namespace))", span="49-49"];
m3_11 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.RestResponse)", file="XmlDeserializer.cs", label="RemoveNamespace(doc)", span="55-55"];
m3_15 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.RestResponse)", file="XmlDeserializer.cs", label="x = (T)HandleListDerivative(x, root, objType.Name, objType)", span="63-63"];
m3_16 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.RestResponse)", file="XmlDeserializer.cs", label="Map(x, root)", span="67-67"];
m3_10 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.RestResponse)", file="XmlDeserializer.cs", label="!Namespace.HasValue()", span="53-53"];
m3_13 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.RestResponse)", file="XmlDeserializer.cs", label="var objType = x.GetType()", span="59-59"];
m3_17 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.RestResponse)", file="XmlDeserializer.cs", label="return x;", span="70-70"];
m3_14 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.RestResponse)", file="XmlDeserializer.cs", label="objType.IsSubclassOfRawGeneric(typeof(List<>))", span="61-61"];
m3_18 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.RestResponse)", file="XmlDeserializer.cs", label="Exit RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.RestResponse)", span="40-40"];
m3_116 [cluster="System.Type.GetGenericArguments()", file="XmlDeserializer.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m3_138 [cluster="RestSharp.Deserializers.XmlDeserializer.PopulateListFromElements(System.Type, System.Collections.Generic.IEnumerable<XElement>, \\nSystem.Collections.IList)", file="XmlDeserializer.cs", label="Entry RestSharp.Deserializers.XmlDeserializer.PopulateListFromElements(System.Type, System.Collections.Generic.IEnumerable<XElement>, \\nSystem.Collections.IList)", span="221-221"];
m3_139 [cluster="RestSharp.Deserializers.XmlDeserializer.PopulateListFromElements(System.Type, System.Collections.Generic.IEnumerable<XElement>, \\nSystem.Collections.IList)", file="XmlDeserializer.cs", label=elements, span="223-223"];
m3_140 [cluster="RestSharp.Deserializers.XmlDeserializer.PopulateListFromElements(System.Type, System.Collections.Generic.IEnumerable<XElement>, \\nSystem.Collections.IList)", file="XmlDeserializer.cs", label="var item = CreateAndMap(t, element)", span="225-225"];
m3_141 [cluster="RestSharp.Deserializers.XmlDeserializer.PopulateListFromElements(System.Type, System.Collections.Generic.IEnumerable<XElement>, \\nSystem.Collections.IList)", file="XmlDeserializer.cs", label="list.Add(item)", span="226-226"];
m3_142 [cluster="RestSharp.Deserializers.XmlDeserializer.PopulateListFromElements(System.Type, System.Collections.Generic.IEnumerable<XElement>, \\nSystem.Collections.IList)", file="XmlDeserializer.cs", label="Exit RestSharp.Deserializers.XmlDeserializer.PopulateListFromElements(System.Type, System.Collections.Generic.IEnumerable<XElement>, \\nSystem.Collections.IList)", span="221-221"];
m3_137 [cluster="RestSharp.Deserializers.XmlDeserializer.CreateAndMap(System.Type, XElement)", file="XmlDeserializer.cs", label="Entry RestSharp.Deserializers.XmlDeserializer.CreateAndMap(System.Type, XElement)", span="278-278"];
m3_171 [cluster="RestSharp.Deserializers.XmlDeserializer.CreateAndMap(System.Type, XElement)", file="XmlDeserializer.cs", label="object item", span="280-280"];
m3_172 [cluster="RestSharp.Deserializers.XmlDeserializer.CreateAndMap(System.Type, XElement)", file="XmlDeserializer.cs", label="t == typeof(String)", span="281-281"];
m3_173 [cluster="RestSharp.Deserializers.XmlDeserializer.CreateAndMap(System.Type, XElement)", file="XmlDeserializer.cs", label="item = element.Value", span="283-283"];
m3_174 [cluster="RestSharp.Deserializers.XmlDeserializer.CreateAndMap(System.Type, XElement)", file="XmlDeserializer.cs", label="t.IsPrimitive", span="285-285"];
m3_175 [cluster="RestSharp.Deserializers.XmlDeserializer.CreateAndMap(System.Type, XElement)", file="XmlDeserializer.cs", label="item = element.Value.ChangeType(t, Culture)", span="287-287"];
m3_176 [cluster="RestSharp.Deserializers.XmlDeserializer.CreateAndMap(System.Type, XElement)", file="XmlDeserializer.cs", label="item = Activator.CreateInstance(t)", span="291-291"];
m3_177 [cluster="RestSharp.Deserializers.XmlDeserializer.CreateAndMap(System.Type, XElement)", file="XmlDeserializer.cs", label="Map(item, element)", span="292-292"];
m3_178 [cluster="RestSharp.Deserializers.XmlDeserializer.CreateAndMap(System.Type, XElement)", file="XmlDeserializer.cs", label="return item;", span="295-295"];
m3_179 [cluster="RestSharp.Deserializers.XmlDeserializer.CreateAndMap(System.Type, XElement)", file="XmlDeserializer.cs", label="Exit RestSharp.Deserializers.XmlDeserializer.CreateAndMap(System.Type, XElement)", span="278-278"];
m3_143 [cluster="System.Collections.IList.Add(object)", file="XmlDeserializer.cs", label="Entry System.Collections.IList.Add(object)", span="0-0"];
m3_123 [cluster="object.ToString()", file="XmlDeserializer.cs", label="Entry object.ToString()", span="0-0"];
m3_134 [cluster="RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", file="XmlDeserializer.cs", label="Entry RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", span="325-325"];
m3_193 [cluster="RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", file="XmlDeserializer.cs", label="var lowerName = name.LocalName.ToLower().AsNamespaced(name.NamespaceName)", span="327-327"];
m3_194 [cluster="RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", file="XmlDeserializer.cs", label="var camelName = name.LocalName.ToCamelCase(Culture).AsNamespaced(name.NamespaceName)", span="328-328"];
m3_195 [cluster="RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", file="XmlDeserializer.cs", label="root.Element(name) != null", span="330-330"];
m3_196 [cluster="RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", file="XmlDeserializer.cs", label="return root.Element(name);", span="332-332"];
m3_197 [cluster="RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", file="XmlDeserializer.cs", label="root.Element(lowerName) != null", span="335-335"];
m3_198 [cluster="RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", file="XmlDeserializer.cs", label="return root.Element(lowerName);", span="337-337"];
m3_199 [cluster="RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", file="XmlDeserializer.cs", label="root.Element(camelName) != null", span="340-340"];
m3_200 [cluster="RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", file="XmlDeserializer.cs", label="return root.Element(camelName);", span="342-342"];
m3_201 [cluster="RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", file="XmlDeserializer.cs", label="name == ''Value''.AsNamespaced(name.NamespaceName)", span="345-345"];
m3_202 [cluster="RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", file="XmlDeserializer.cs", label="return root;", span="347-347"];
m3_203 [cluster="RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", file="XmlDeserializer.cs", label="var element = root.Descendants()\r\n				.OrderBy(d => d.Ancestors().Count())\r\n				.FirstOrDefault(d => d.Name.LocalName.RemoveUnderscoresAndDashes() == \\nname.LocalName) \r\n				?? root.Descendants()\r\n				.OrderBy(d => d.Ancestors().Count())\r\n				.FirstOrDefault(d => d.Name.LocalName.RemoveUnderscoresAndDashes() == \\nname.LocalName.ToLower())", span="351-356"];
m3_204 [cluster="RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", file="XmlDeserializer.cs", label="element != null", span="358-358"];
m3_205 [cluster="RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", file="XmlDeserializer.cs", label="return element;", span="360-360"];
m3_206 [cluster="RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", file="XmlDeserializer.cs", label="return null;", span="363-363"];
m3_207 [cluster="RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", file="XmlDeserializer.cs", label="Exit RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", span="325-325"];
m3_122 [cluster="System.Type.GetGenericTypeDefinition()", file="XmlDeserializer.cs", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
m3_131 [cluster="System.DateTime.Parse(string, System.IFormatProvider)", file="XmlDeserializer.cs", label="Entry System.DateTime.Parse(string, System.IFormatProvider)", span="0-0"];
m3_21 [cluster="string.HasValue()", file="XmlDeserializer.cs", label="Entry string.HasValue()", span="76-76"];
m3_0 [cluster="RestSharp.Deserializers.XmlDeserializer.XmlDeserializer()", file="XmlDeserializer.cs", label="Entry RestSharp.Deserializers.XmlDeserializer.XmlDeserializer()", span="35-35"];
m3_1 [cluster="RestSharp.Deserializers.XmlDeserializer.XmlDeserializer()", file="XmlDeserializer.cs", label="Culture = CultureInfo.InvariantCulture", span="37-37"];
m3_2 [cluster="RestSharp.Deserializers.XmlDeserializer.XmlDeserializer()", file="XmlDeserializer.cs", label="Exit RestSharp.Deserializers.XmlDeserializer.XmlDeserializer()", span="35-35"];
m3_30 [cluster="RestSharp.Deserializers.XmlDeserializer.RemoveNamespace(XDocument)", file="XmlDeserializer.cs", label="Entry RestSharp.Deserializers.XmlDeserializer.RemoveNamespace(XDocument)", span="73-73"];
m3_31 [cluster="RestSharp.Deserializers.XmlDeserializer.RemoveNamespace(XDocument)", file="XmlDeserializer.cs", label="xdoc.Root.DescendantsAndSelf()", span="75-75"];
m3_32 [cluster="RestSharp.Deserializers.XmlDeserializer.RemoveNamespace(XDocument)", file="XmlDeserializer.cs", label="e.Name.Namespace != XNamespace.None", span="77-77"];
m3_33 [cluster="RestSharp.Deserializers.XmlDeserializer.RemoveNamespace(XDocument)", file="XmlDeserializer.cs", label="e.Name = XNamespace.None.GetName(e.Name.LocalName)", span="79-79"];
m3_34 [cluster="RestSharp.Deserializers.XmlDeserializer.RemoveNamespace(XDocument)", file="XmlDeserializer.cs", label="e.Attributes().Any(a => a.IsNamespaceDeclaration || a.Name.Namespace != XNamespace.None)", span="81-81"];
m3_35 [cluster="RestSharp.Deserializers.XmlDeserializer.RemoveNamespace(XDocument)", file="XmlDeserializer.cs", label="e.ReplaceAttributes(e.Attributes().Select(a => a.IsNamespaceDeclaration ? null : a.Name.Namespace != XNamespace.None ? new XAttribute(\\nXNamespace.None.GetName(a.Name.LocalName), a.Value) : a))", span="83-83"];
m3_36 [cluster="RestSharp.Deserializers.XmlDeserializer.RemoveNamespace(XDocument)", file="XmlDeserializer.cs", label="Exit RestSharp.Deserializers.XmlDeserializer.RemoveNamespace(XDocument)", span="73-73"];
m3_121 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="XmlDeserializer.cs", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
n19;
n25;
n23;
n26;
n24;
n34;
n95;
n96;
n101;
n102;
n112;
n93;
n94;
n97;
n98;
n99;
n103;
n106;
n107;
n149;
m0_63;
m0_33;
m0_49;
m0_109;
m0_110;
m0_315;
m0_316;
m0_317;
m0_12;
m0_80;
m0_350;
m0_345;
m1_0_33;
m1_0_109;
m1_0_315;
m1_0_110;
m1_0_316;
m1_0_317;
n165;
n166;
m0_401;
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n2 -> n0  [color=blue, key=0, style=bold];
n3 -> n4  [key=0, style=solid];
n3 -> n8  [color=darkseagreen4, key=1, label="RestSharp.RestResponse", style=dashed];
n3 -> n10  [color=darkseagreen4, key=1, label="RestSharp.RestResponse", style=dashed];
n3 -> n13  [color=darkseagreen4, key=1, label="RestSharp.RestResponse", style=dashed];
n3 -> n15  [color=darkseagreen4, key=1, label="RestSharp.RestResponse", style=dashed];
n4 -> n5  [key=0, style=solid];
n4 -> n6  [color=darkseagreen4, key=1, label=target, style=dashed];
n4 -> n12  [color=darkseagreen4, key=1, label=target, style=dashed];
n4 -> n14  [color=darkseagreen4, key=1, label=target, style=dashed];
n4 -> n16  [color=darkseagreen4, key=1, label=target, style=dashed];
n4 -> n17  [color=darkseagreen4, key=1, label=target, style=dashed];
n4 -> n19  [key=2, style=dotted];
n8 -> n9  [key=0, style=solid];
n8 -> n22  [key=2, style=dotted];
n10 -> n11  [key=0, style=solid];
n10 -> n25  [key=2, style=dotted];
n13 -> n14  [key=0, style=solid];
n13 -> n22  [key=2, style=dotted];
n15 -> n16  [key=0, style=solid];
n15 -> n22  [key=2, style=dotted];
n5 -> n6  [key=0, style=solid];
n5 -> n12  [key=0, style=solid];
n6 -> n7  [key=0, style=solid];
n6 -> n9  [color=darkseagreen4, key=1, label=objType, style=dashed];
n6 -> n11  [color=darkseagreen4, key=1, label=objType, style=dashed];
n6 -> n20  [key=2, style=dotted];
n12 -> n13  [key=0, style=solid];
n12 -> n15  [key=0, style=solid];
n14 -> n14  [color=darkseagreen4, key=1, label=target, style=dashed];
n14 -> n17  [key=0, style=solid];
n14 -> n20  [key=2, style=dotted];
n14 -> n23  [key=2, style=dotted];
n14 -> n26  [key=2, style=dotted];
n16 -> n17  [key=0, style=solid];
n16 -> n27  [key=2, style=dotted];
n17 -> n18  [key=0, style=solid];
n7 -> n8  [key=0, style=solid];
n7 -> n10  [key=0, style=solid];
n7 -> n21  [key=2, style=dotted];
n9 -> n17  [key=0, style=solid];
n9 -> n23  [key=2, style=dotted];
n9 -> n24  [key=2, style=dotted];
n11 -> n17  [key=0, style=solid];
n11 -> n23  [key=2, style=dotted];
n11 -> n24  [key=2, style=dotted];
n22 -> n28  [key=0, style=solid];
n22 -> n29  [color=darkorchid, key=3, label="method methodReturn JToken FindRoot", style=bold];
n27 -> n4  [color=darkorchid, key=3, label="Parameter variable object x", style=bold];
n27 -> n15  [color=darkorchid, key=3, label="Parameter variable JToken json", style=bold];
n27 -> n35  [key=0, style=solid];
n27 -> n40  [color=darkseagreen4, key=1, label=JToken, style=dashed];
n27 -> n41  [color=darkseagreen4, key=1, label=JToken, style=dashed];
n27 -> n47  [color=darkseagreen4, key=1, label=object, style=dashed];
n27 -> n50  [color=darkseagreen4, key=1, label=object, style=dashed];
n27 -> n54  [color=darkseagreen4, key=1, label=object, style=dashed];
n27 -> n57  [color=darkseagreen4, key=1, label=object, style=dashed];
n27 -> n67  [color=darkseagreen4, key=1, label=object, style=dashed];
n27 -> n69  [color=darkseagreen4, key=1, label=object, style=dashed];
n27 -> n72  [color=darkseagreen4, key=1, label=object, style=dashed];
n27 -> n76  [color=darkseagreen4, key=1, label=object, style=dashed];
n27 -> n81  [color=darkseagreen4, key=1, label=object, style=dashed];
n27 -> n86  [color=darkseagreen4, key=1, label=object, style=dashed];
n27 -> n87  [color=darkseagreen4, key=1, label=JToken, style=dashed];
n27 -> n88  [color=darkseagreen4, key=1, label=object, style=dashed];
n27 -> n89  [color=darkseagreen4, key=1, label=JToken, style=dashed];
n27 -> n90  [color=darkseagreen4, key=1, label=object, style=dashed];
n27 -> d79  [color=green, key=1, label=object, style=dashed];
n27 -> n117  [color=darkseagreen4, key=1, label=JToken, style=dashed];
n27 -> n119  [color=darkorchid, key=3, label="Parameter variable JToken json", style=bold];
n27 -> n120  [color=darkorchid, key=3, label="Parameter variable object x", style=bold];
n18 -> n3  [color=blue, key=0, style=bold];
n28 -> n29  [key=0, style=solid];
n28 -> n31  [color=darkseagreen4, key=1, label=json, style=dashed];
n28 -> n25  [key=2, style=dotted];
n29 -> n30  [key=0, style=solid];
n29 -> n32  [color=darkseagreen4, key=1, label=root, style=dashed];
n31 -> n32  [key=0, style=solid];
n31 -> n34  [key=2, style=dotted];
n30 -> n21  [key=2, style=dotted];
n30 -> n31  [key=0, style=solid];
n30 -> n32  [key=0, style=solid];
n32 -> n33  [key=0, style=solid];
n33 -> n22  [color=blue, key=0, style=bold];
n35 -> n20  [key=2, style=dotted];
n35 -> n36  [key=0, style=solid];
n40 -> n41  [key=0, style=solid];
n40 -> n87  [color=darkseagreen4, key=1, label=actualName, style=dashed];
n40 -> n89  [color=darkseagreen4, key=1, label=actualName, style=dashed];
n40 -> n95  [key=2, style=dotted];
n40 -> n96  [key=2, style=dotted];
n40 -> n116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n41 -> n42  [key=0, style=solid];
n41 -> n46  [color=darkseagreen4, key=1, label=value, style=dashed];
n41 -> n49  [color=darkseagreen4, key=1, label=value, style=dashed];
n41 -> n52  [color=darkseagreen4, key=1, label=value, style=dashed];
n41 -> n56  [color=darkseagreen4, key=1, label=value, style=dashed];
n41 -> n61  [color=darkseagreen4, key=1, label=value, style=dashed];
n41 -> n63  [color=darkseagreen4, key=1, label=value, style=dashed];
n41 -> n64  [color=darkseagreen4, key=1, label=value, style=dashed];
n41 -> n65  [color=darkseagreen4, key=1, label=value, style=dashed];
n41 -> n71  [color=darkseagreen4, key=1, label=value, style=dashed];
n41 -> n74  [color=darkseagreen4, key=1, label=value, style=dashed];
n41 -> n80  [color=darkseagreen4, key=1, label=value, style=dashed];
n41 -> n85  [color=darkseagreen4, key=1, label=value, style=dashed];
n41 -> d78  [color=green, key=1, label=value, style=dashed];
n47 -> n37  [key=0, style=solid];
n47 -> n101  [key=2, style=dotted];
n47 -> n102  [key=2, style=dotted];
n50 -> n37  [key=0, style=solid];
n50 -> n102  [key=2, style=dotted];
n54 -> n37  [key=0, style=solid];
n54 -> n102  [key=2, style=dotted];
n57 -> n37  [key=0, style=solid];
n57 -> n102  [key=2, style=dotted];
n67 -> n37  [key=0, style=solid];
n67 -> n102  [key=2, style=dotted];
n69 -> n37  [key=0, style=solid];
n69 -> n102  [key=2, style=dotted];
n72 -> n37  [key=0, style=solid];
n72 -> n102  [key=2, style=dotted];
n76 -> n37  [key=0, style=solid];
n76 -> n102  [key=2, style=dotted];
n81 -> n37  [key=0, style=solid];
n81 -> n102  [key=2, style=dotted];
n86 -> n37  [key=0, style=solid];
n86 -> n102  [key=2, style=dotted];
n87 -> n88  [key=0, style=solid];
n87 -> n112  [key=2, style=dotted];
n88 -> n37  [key=0, style=solid];
n88 -> n102  [key=2, style=dotted];
n89 -> n90  [key=0, style=solid];
n89 -> n112  [key=2, style=dotted];
n90 -> n37  [key=0, style=solid];
n90 -> n102  [key=2, style=dotted];
d79 -> n37  [color=green, key=0, style=solid];
d79 -> n102  [color=green, key=2, style=dotted];
n117 -> n118  [key=0, style=solid];
n119 -> n120  [key=0, style=solid];
n119 -> n121  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n119 -> n122  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n119 -> n124  [color=darkseagreen4, key=1, label=JToken, style=dashed];
n119 -> n126  [color=darkseagreen4, key=1, label=JToken, style=dashed];
n119 -> n127  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n119 -> n128  [color=darkseagreen4, key=1, label=JToken, style=dashed];
n119 -> n129  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n119 -> n130  [color=darkseagreen4, key=1, label=JToken, style=dashed];
n119 -> n131  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n119 -> n132  [color=darkseagreen4, key=1, label=JToken, style=dashed];
n119 -> n133  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n119 -> n134  [color=darkseagreen4, key=1, label=JToken, style=dashed];
n120 -> n120  [color=darkorchid, key=3, label="Local variable object instance", style=bold];
n120 -> n121  [key=0, style=solid];
n36 -> n37  [key=0, style=solid];
n36 -> n92  [key=2, style=dotted];
n36 -> n93  [key=2, style=dotted];
n36 -> n94  [key=2, style=dotted];
n36 -> n113  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n37 -> n38  [key=0, style=solid];
n37 -> n39  [color=darkseagreen4, key=1, label=prop, style=dashed];
n37 -> n47  [color=darkseagreen4, key=1, label=prop, style=dashed];
n37 -> n50  [color=darkseagreen4, key=1, label=prop, style=dashed];
n37 -> n54  [color=darkseagreen4, key=1, label=prop, style=dashed];
n37 -> n57  [color=darkseagreen4, key=1, label=prop, style=dashed];
n37 -> n67  [color=darkseagreen4, key=1, label=prop, style=dashed];
n37 -> n69  [color=darkseagreen4, key=1, label=prop, style=dashed];
n37 -> n72  [color=darkseagreen4, key=1, label=prop, style=dashed];
n37 -> n76  [color=darkseagreen4, key=1, label=prop, style=dashed];
n37 -> n81  [color=darkseagreen4, key=1, label=prop, style=dashed];
n37 -> n86  [color=darkseagreen4, key=1, label=prop, style=dashed];
n37 -> n88  [color=darkseagreen4, key=1, label=prop, style=dashed];
n37 -> n90  [color=darkseagreen4, key=1, label=prop, style=dashed];
n37 -> n91  [key=0, style=solid];
n37 -> d79  [color=green, key=1, label=prop, style=dashed];
n113 -> n114  [key=0, style=solid];
n38 -> n39  [key=0, style=solid];
n38 -> n43  [color=darkseagreen4, key=1, label=type, style=dashed];
n38 -> n44  [color=darkseagreen4, key=1, label=type, style=dashed];
n38 -> n45  [color=darkseagreen4, key=1, label=type, style=dashed];
n38 -> n47  [color=darkseagreen4, key=1, label=type, style=dashed];
n38 -> n48  [color=darkseagreen4, key=1, label=type, style=dashed];
n38 -> n49  [color=darkseagreen4, key=1, label=type, style=dashed];
n38 -> n51  [color=darkseagreen4, key=1, label=type, style=dashed];
n38 -> n55  [color=darkseagreen4, key=1, label=type, style=dashed];
n38 -> n58  [color=darkseagreen4, key=1, label=type, style=dashed];
n38 -> n66  [color=darkseagreen4, key=1, label=type, style=dashed];
n38 -> n68  [color=darkseagreen4, key=1, label=type, style=dashed];
n38 -> n70  [color=darkseagreen4, key=1, label=type, style=dashed];
n38 -> n73  [color=darkseagreen4, key=1, label=type, style=dashed];
n38 -> n77  [color=darkseagreen4, key=1, label=type, style=dashed];
n38 -> n78  [color=darkseagreen4, key=1, label=type, style=dashed];
n38 -> n80  [color=darkseagreen4, key=1, label=type, style=dashed];
n38 -> n83  [color=darkseagreen4, key=1, label=type, style=dashed];
n38 -> n85  [color=darkseagreen4, key=1, label=type, style=dashed];
n38 -> n87  [color=darkseagreen4, key=1, label=type, style=dashed];
n38 -> n89  [color=darkseagreen4, key=1, label=type, style=dashed];
n38 -> d77  [color=green, key=1, label=type, style=dashed];
n39 -> n40  [key=0, style=solid];
n91 -> n27  [color=blue, key=0, style=bold];
n43 -> n44  [key=0, style=solid];
n43 -> n45  [key=0, style=solid];
n43 -> n97  [key=2, style=dotted];
n44 -> n44  [color=darkseagreen4, key=1, label=type, style=dashed];
n44 -> n45  [key=0, style=solid];
n44 -> n47  [color=darkseagreen4, key=1, label=type, style=dashed];
n44 -> n48  [color=darkseagreen4, key=1, label=type, style=dashed];
n44 -> n49  [color=darkseagreen4, key=1, label=type, style=dashed];
n44 -> n51  [color=darkseagreen4, key=1, label=type, style=dashed];
n44 -> n55  [color=darkseagreen4, key=1, label=type, style=dashed];
n44 -> n58  [color=darkseagreen4, key=1, label=type, style=dashed];
n44 -> n66  [color=darkseagreen4, key=1, label=type, style=dashed];
n44 -> n68  [color=darkseagreen4, key=1, label=type, style=dashed];
n44 -> n70  [color=darkseagreen4, key=1, label=type, style=dashed];
n44 -> n73  [color=darkseagreen4, key=1, label=type, style=dashed];
n44 -> n77  [color=darkseagreen4, key=1, label=type, style=dashed];
n44 -> n78  [color=darkseagreen4, key=1, label=type, style=dashed];
n44 -> n80  [color=darkseagreen4, key=1, label=type, style=dashed];
n44 -> n83  [color=darkseagreen4, key=1, label=type, style=dashed];
n44 -> n85  [color=darkseagreen4, key=1, label=type, style=dashed];
n44 -> n87  [color=darkseagreen4, key=1, label=type, style=dashed];
n44 -> n89  [color=darkseagreen4, key=1, label=type, style=dashed];
n44 -> d77  [color=green, key=1, label=type, style=dashed];
n44 -> n98  [key=2, style=dotted];
n45 -> n46  [key=0, style=solid];
n45 -> n48  [key=0, style=solid];
n48 -> n49  [key=0, style=solid];
n48 -> n51  [key=0, style=solid];
n49 -> n50  [key=0, style=solid];
n49 -> n99  [key=2, style=dotted];
n49 -> n103  [key=2, style=dotted];
n51 -> n52  [key=0, style=solid];
n51 -> n55  [key=0, style=solid];
n55 -> n56  [key=0, style=solid];
n55 -> n58  [key=0, style=solid];
n58 -> n59  [key=0, style=solid];
n58 -> n70  [key=0, style=solid];
n66 -> n67  [key=0, style=solid];
n66 -> n68  [key=0, style=solid];
n68 -> n37  [key=0, style=solid];
n68 -> n69  [key=0, style=solid];
n70 -> n71  [key=0, style=solid];
n70 -> n73  [key=0, style=solid];
n73 -> n74  [key=0, style=solid];
n73 -> n77  [color=red, key=0, style=solid];
n73 -> d77  [color=green, key=0, style=solid];
n77 -> n78  [key=0, style=solid];
n77 -> n89  [key=0, style=solid];
n78 -> n79  [key=0, style=solid];
n78 -> n82  [color=darkseagreen4, key=1, label=genericTypeDef, style=dashed];
n78 -> n97  [key=2, style=dotted];
n80 -> n23  [key=2, style=dotted];
n80 -> n24  [key=2, style=dotted];
n80 -> n81  [key=0, style=solid];
n83 -> n84  [key=0, style=solid];
n83 -> n98  [key=2, style=dotted];
n85 -> n23  [key=2, style=dotted];
n85 -> n26  [key=2, style=dotted];
n85 -> n86  [key=0, style=solid];
d77 -> n77  [color=green, key=0, style=solid];
d77 -> d78  [color=green, key=0, style=solid];
n116 -> n117  [key=0, style=solid];
n42 -> n37  [key=0, style=solid];
n42 -> n43  [key=0, style=solid];
n46 -> n47  [key=0, style=solid];
n46 -> n99  [key=2, style=dotted];
n46 -> n100  [key=2, style=dotted];
n52 -> n53  [key=0, style=solid];
n52 -> n99  [key=2, style=dotted];
n56 -> n57  [key=0, style=solid];
n56 -> n99  [key=2, style=dotted];
n61 -> n62  [key=0, style=solid];
n61 -> n99  [key=2, style=dotted];
n63 -> n64  [key=0, style=solid];
n63 -> n65  [key=0, style=solid];
n64 -> n66  [key=0, style=solid];
n64 -> n67  [color=darkseagreen4, key=1, label=dt, style=dashed];
n64 -> n69  [color=darkseagreen4, key=1, label=dt, style=dashed];
n64 -> n106  [key=2, style=dotted];
n64 -> n107  [key=2, style=dotted];
n65 -> n66  [key=0, style=solid];
n65 -> n67  [color=darkseagreen4, key=1, label=dt, style=dashed];
n65 -> n69  [color=darkseagreen4, key=1, label=dt, style=dashed];
n65 -> n99  [key=2, style=dotted];
n65 -> n108  [key=2, style=dotted];
n71 -> n72  [key=0, style=solid];
n71 -> n99  [key=2, style=dotted];
n71 -> n109  [key=2, style=dotted];
n74 -> n75  [key=0, style=solid];
n74 -> n99  [key=2, style=dotted];
d78 -> d79  [color=green, key=0, style=solid];
d78 -> n99  [color=green, key=2, style=dotted];
d78 -> d115  [color=green, key=2, style=dotted];
n53 -> n54  [key=0, style=solid];
n53 -> n104  [key=2, style=dotted];
n59 -> n60  [key=0, style=solid];
n60 -> n21  [key=2, style=dotted];
n60 -> n61  [key=0, style=solid];
n60 -> n63  [key=0, style=solid];
n62 -> n66  [key=0, style=solid];
n62 -> n67  [color=darkseagreen4, key=1, label=dt, style=dashed];
n62 -> n69  [color=darkseagreen4, key=1, label=dt, style=dashed];
n62 -> n105  [key=2, style=dotted];
n75 -> n76  [key=0, style=solid];
n75 -> n110  [key=2, style=dotted];
n75 -> n111  [key=2, style=dotted];
n79 -> n80  [key=0, style=solid];
n79 -> n82  [key=0, style=solid];
n82 -> n83  [key=0, style=solid];
n82 -> n87  [key=0, style=solid];
n84 -> n37  [key=0, style=solid];
n84 -> n85  [key=0, style=solid];
n114 -> n115  [key=0, style=solid];
n115 -> n113  [color=blue, key=0, style=bold];
n118 -> n116  [color=blue, key=0, style=bold];
n121 -> n122  [key=0, style=solid];
n121 -> n131  [key=0, style=solid];
n122 -> n123  [key=0, style=solid];
n122 -> n125  [color=darkseagreen4, key=1, label=genericTypeDef, style=dashed];
n122 -> n137  [key=2, style=dotted];
n124 -> n23  [key=2, style=dotted];
n124 -> n26  [key=2, style=dotted];
n124 -> n135  [key=0, style=solid];
n126 -> n23  [key=2, style=dotted];
n126 -> n24  [key=2, style=dotted];
n126 -> n135  [key=0, style=solid];
n127 -> n128  [key=0, style=solid];
n127 -> n129  [key=0, style=solid];
n128 -> n135  [key=0, style=solid];
n129 -> n130  [key=0, style=solid];
n129 -> n135  [color=darkseagreen4, key=1, label=instance, style=dashed];
n129 -> n138  [key=2, style=dotted];
n130 -> n27  [key=2, style=dotted];
n130 -> n135  [key=0, style=solid];
n131 -> n132  [key=0, style=solid];
n131 -> n133  [key=0, style=solid];
n132 -> n135  [key=0, style=solid];
n133 -> n134  [key=0, style=solid];
n133 -> n135  [color=darkseagreen4, key=1, label=instance, style=dashed];
n133 -> n138  [key=2, style=dotted];
n134 -> n27  [key=2, style=dotted];
n134 -> n135  [key=0, style=solid];
n123 -> n124  [key=0, style=solid];
n123 -> n125  [key=0, style=solid];
n125 -> n126  [key=0, style=solid];
n125 -> n127  [key=0, style=solid];
n135 -> n136  [key=0, style=solid];
n136 -> n119  [color=blue, key=0, style=bold];
n139 -> n140  [key=0, style=solid];
n139 -> n141  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n139 -> n142  [color=darkseagreen4, key=1, label="JEnumerable<JToken>", style=dashed];
n140 -> n138  [key=2, style=dotted];
n140 -> n141  [key=0, style=solid];
n140 -> n145  [color=darkseagreen4, key=1, label=dict, style=dashed];
n140 -> n146  [color=darkseagreen4, key=1, label=dict, style=dashed];
n141 -> n142  [key=0, style=solid];
n141 -> n144  [color=darkseagreen4, key=1, label=valueType, style=dashed];
n141 -> n148  [key=2, style=dotted];
n142 -> n143  [key=0, style=solid];
n142 -> n144  [color=darkseagreen4, key=1, label=child, style=dashed];
n142 -> n146  [key=0, style=solid];
n145 -> n142  [key=0, style=solid];
n145 -> n149  [key=2, style=dotted];
n146 -> n147  [key=0, style=solid];
n144 -> n112  [key=2, style=dotted];
n144 -> n145  [key=0, style=solid];
n143 -> n144  [key=0, style=solid];
n143 -> n145  [color=darkseagreen4, key=1, label=key, style=dashed];
n147 -> n139  [color=blue, key=0, style=bold];
n150 -> n151  [key=0, style=solid];
n150 -> n152  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
n150 -> n153  [color=darkseagreen4, key=1, label="JEnumerable<JToken>", style=dashed];
n151 -> n138  [key=2, style=dotted];
n151 -> n152  [key=0, style=solid];
n151 -> n157  [color=darkseagreen4, key=1, label=list, style=dashed];
n151 -> n159  [color=darkseagreen4, key=1, label=list, style=dashed];
n151 -> n161  [color=darkseagreen4, key=1, label=list, style=dashed];
n151 -> n162  [color=darkseagreen4, key=1, label=list, style=dashed];
n152 -> n148  [key=2, style=dotted];
n152 -> n153  [key=0, style=solid];
n152 -> n154  [color=darkseagreen4, key=1, label=itemType, style=dashed];
n152 -> n157  [color=darkseagreen4, key=1, label=itemType, style=dashed];
n152 -> n158  [color=darkseagreen4, key=1, label=itemType, style=dashed];
n152 -> n160  [color=darkseagreen4, key=1, label=itemType, style=dashed];
n153 -> n154  [key=0, style=solid];
n153 -> n155  [color=darkseagreen4, key=1, label=element, style=dashed];
n153 -> n159  [color=darkseagreen4, key=1, label=element, style=dashed];
n153 -> n160  [color=darkseagreen4, key=1, label=element, style=dashed];
n153 -> n162  [key=0, style=solid];
n157 -> n101  [key=2, style=dotted];
n157 -> n153  [key=0, style=solid];
n157 -> n164  [key=2, style=dotted];
n159 -> n99  [key=2, style=dotted];
n159 -> n153  [key=0, style=solid];
n159 -> n164  [key=2, style=dotted];
n161 -> n153  [key=0, style=solid];
n161 -> n164  [key=2, style=dotted];
n162 -> n163  [key=0, style=solid];
n154 -> n155  [key=0, style=solid];
n154 -> n158  [key=0, style=solid];
n158 -> n159  [key=0, style=solid];
n158 -> n160  [key=0, style=solid];
n160 -> n112  [key=2, style=dotted];
n160 -> n161  [key=0, style=solid];
n155 -> n156  [key=0, style=solid];
n155 -> n157  [color=darkseagreen4, key=1, label=value, style=dashed];
n156 -> n153  [key=0, style=solid];
n156 -> n157  [key=0, style=solid];
n163 -> n150  [color=blue, key=0, style=bold];
m0_50 -> m0_51  [key=0, style=solid];
m0_51 -> m0_52  [key=0, style=solid];
m0_51 -> m0_53  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_51 -> m0_62  [key=2, style=dotted];
m0_52 -> m0_9  [key=2, style=dotted];
m0_52 -> m0_53  [key=0, style=solid];
m0_53 -> m0_10  [key=2, style=dotted];
m0_53 -> m0_11  [key=2, style=dotted];
m0_53 -> m0_54  [key=0, style=solid];
m0_53 -> m0_55  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_53 -> m0_56  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_53 -> m0_57  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_53 -> m0_58  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_53 -> m0_59  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_53 -> m0_60  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_54 -> m0_55  [key=0, style=solid];
m0_54 -> m0_63  [key=2, style=dotted];
m0_55 -> m0_56  [key=0, style=solid];
m0_55 -> m0_63  [key=2, style=dotted];
m0_56 -> m0_57  [key=0, style=solid];
m0_56 -> m0_63  [key=2, style=dotted];
m0_57 -> m0_33  [key=2, style=dotted];
m0_57 -> m0_58  [key=0, style=solid];
m0_58 -> m0_59  [key=0, style=solid];
m0_58 -> m0_63  [key=2, style=dotted];
m0_59 -> m0_33  [key=2, style=dotted];
m0_59 -> m0_60  [key=0, style=solid];
m0_59 -> m0_64  [key=2, style=dotted];
m0_59 -> m0_65  [key=2, style=dotted];
m0_60 -> m0_33  [key=2, style=dotted];
m0_60 -> m0_61  [key=0, style=solid];
m0_60 -> n111  [key=2, style=dotted];
m0_61 -> m0_50  [color=blue, key=0, style=bold];
m0_222 -> m0_223  [key=0, style=solid];
m0_223 -> m0_224  [key=0, style=solid];
m0_223 -> m0_225  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_223 -> m0_229  [key=2, style=dotted];
m0_224 -> m0_9  [key=2, style=dotted];
m0_224 -> m0_225  [key=0, style=solid];
m0_224 -> m0_226  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_225 -> m0_10  [key=2, style=dotted];
m0_225 -> m0_226  [key=0, style=solid];
m0_226 -> m0_11  [key=2, style=dotted];
m0_226 -> m0_227  [key=0, style=solid];
m0_227 -> m0_33  [key=2, style=dotted];
m0_227 -> m0_64  [key=2, style=dotted];
m0_227 -> m0_228  [key=0, style=solid];
m0_228 -> m0_222  [color=blue, key=0, style=bold];
m0_221 -> m0_346  [key=0, style=solid];
m0_237 -> m0_238  [key=0, style=solid];
m0_238 -> m0_7  [key=2, style=dotted];
m0_238 -> m0_8  [key=2, style=dotted];
m0_238 -> m0_239  [key=0, style=solid];
m0_238 -> m0_240  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_239 -> m0_9  [key=2, style=dotted];
m0_239 -> m0_240  [key=0, style=solid];
m0_239 -> m0_241  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_240 -> m0_10  [key=2, style=dotted];
m0_240 -> m0_241  [key=0, style=solid];
m0_241 -> m0_11  [key=2, style=dotted];
m0_241 -> m0_242  [key=0, style=solid];
m0_242 -> m0_33  [key=2, style=dotted];
m0_242 -> m0_64  [key=2, style=dotted];
m0_242 -> m0_65  [key=2, style=dotted];
m0_242 -> m0_243  [key=0, style=solid];
m0_243 -> m0_237  [color=blue, key=0, style=bold];
m0_199 -> m0_200  [key=0, style=solid];
m0_200 -> m0_145  [key=2, style=dotted];
m0_200 -> m0_201  [key=0, style=solid];
m0_201 -> m0_10  [key=2, style=dotted];
m0_201 -> m0_202  [key=0, style=solid];
m0_201 -> m0_203  [color=darkseagreen4, key=1, label=response, style=dashed];
m0_202 -> m0_9  [key=2, style=dotted];
m0_202 -> m0_203  [key=0, style=solid];
m0_203 -> m0_11  [key=2, style=dotted];
m0_203 -> m0_204  [key=0, style=solid];
m0_204 -> m0_49  [key=2, style=dotted];
m0_204 -> m0_205  [key=0, style=solid];
m0_205 -> m0_199  [color=blue, key=0, style=bold];
m0_48 -> m0_382  [key=0, style=solid];
m0_382 -> m0_383  [key=0, style=solid];
m0_382 -> m0_384  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_382 -> m0_385  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_382 -> m0_386  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_382 -> m0_109  [key=2, style=dotted];
m0_383 -> m0_384  [key=0, style=solid];
m0_384 -> m0_385  [key=0, style=solid];
m0_385 -> m0_386  [key=0, style=solid];
m0_386 -> m0_387  [key=0, style=solid];
m0_386 -> m0_110  [key=2, style=dotted];
m0_387 -> m0_48  [color=blue, key=0, style=bold];
m0_206 -> m0_207  [color=green, key=0, style=solid];
m0_207 -> m0_208  [color=green, key=0, style=solid];
m0_207 -> m0_209  [color=green, key=1, label=doc, style=dashed];
m0_207 -> m0_213  [key=2, style=dotted];
m0_207 -> m0_7  [color=green, key=2, style=dotted];
m0_207 -> m0_8  [color=green, key=2, style=dotted];
m0_208 -> m0_9  [color=green, key=2, style=dotted];
m0_208 -> m0_209  [color=green, key=0, style=solid];
m0_208 -> m0_210  [color=green, key=1, label=d, style=dashed];
m0_209 -> m0_10  [color=green, key=2, style=dotted];
m0_209 -> m0_210  [color=green, key=0, style=solid];
m0_210 -> m0_11  [color=green, key=2, style=dotted];
m0_210 -> m0_211  [color=green, key=0, style=solid];
m0_210 -> m0_212  [color=green, key=1, label=payload, style=dashed];
m0_210 -> m0_213  [color=green, key=1, label=payload, style=dashed];
m0_210 -> m0_214  [color=green, key=1, label=payload, style=dashed];
m0_210 -> m0_215  [color=green, key=1, label=payload, style=dashed];
m0_210 -> m0_216  [color=green, key=1, label=payload, style=dashed];
m0_210 -> m0_217  [color=green, key=1, label=payload, style=dashed];
m0_210 -> m0_218  [color=green, key=1, label=payload, style=dashed];
m0_211 -> m0_33  [color=green, key=2, style=dotted];
m0_211 -> m0_64  [key=2, style=dotted];
m0_211 -> m0_212  [color=green, key=0, style=solid];
m0_211 -> m0_220  [color=green, key=2, style=dotted];
m0_212 -> m0_206  [color=blue, key=0, style=bold];
m0_212 -> m0_213  [color=green, key=0, style=solid];
m0_212 -> m0_221  [color=green, key=2, style=dotted];
m0_212 -> m0_33  [color=green, key=2, style=dotted];
m0_169 -> m0_293  [key=0, style=solid];
m0_306 -> m0_306  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m0_306 -> m0_307  [key=0, style=solid];
m0_306 -> m0_308  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_306 -> m0_309  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_293 -> m0_109  [key=2, style=dotted];
m0_293 -> m0_294  [key=0, style=solid];
m0_293 -> m0_295  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_293 -> m0_296  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_293 -> m0_297  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_293 -> m0_298  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_293 -> m0_299  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_293 -> m0_300  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_293 -> m0_301  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_293 -> m0_302  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_293 -> m0_303  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_293 -> m0_304  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_293 -> m0_310  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_293 -> m0_312  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_293 -> m0_313  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_294 -> m0_295  [key=0, style=solid];
m0_295 -> m0_64  [key=2, style=dotted];
m0_295 -> m0_296  [key=0, style=solid];
m0_296 -> m0_297  [key=0, style=solid];
m0_297 -> m0_298  [key=0, style=solid];
m0_298 -> m0_299  [key=0, style=solid];
m0_299 -> m0_300  [key=0, style=solid];
m0_300 -> m0_301  [key=0, style=solid];
m0_301 -> m0_302  [key=0, style=solid];
m0_302 -> m0_303  [key=0, style=solid];
m0_303 -> m0_304  [key=0, style=solid];
m0_304 -> m0_109  [key=2, style=dotted];
m0_304 -> m0_305  [key=0, style=solid];
m0_304 -> m0_315  [key=2, style=dotted];
m0_310 -> m0_311  [key=0, style=solid];
m0_312 -> m0_313  [key=0, style=solid];
m0_313 -> m0_110  [key=2, style=dotted];
m0_313 -> m0_314  [key=0, style=solid];
m0_305 -> m0_306  [key=0, style=solid];
m0_305 -> m0_308  [color=darkseagreen4, key=1, label=friendsArray, style=dashed];
m0_305 -> m0_310  [color=darkseagreen4, key=1, label=friendsArray, style=dashed];
m0_305 -> m0_316  [key=2, style=dotted];
m0_308 -> m0_109  [key=2, style=dotted];
m0_308 -> m0_309  [key=0, style=solid];
m0_308 -> m0_315  [key=2, style=dotted];
m0_308 -> m0_317  [key=2, style=dotted];
m0_307 -> m0_308  [key=0, style=solid];
m0_307 -> m0_310  [key=0, style=solid];
m0_309 -> m0_307  [key=0, style=solid];
m0_309 -> m0_309  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_311 -> m0_109  [key=2, style=dotted];
m0_311 -> m0_312  [key=0, style=solid];
m0_311 -> m0_315  [key=2, style=dotted];
m0_314 -> m0_169  [color=blue, key=0, style=bold];
m0_191 -> m0_318  [key=0, style=solid];
m0_318 -> m0_109  [key=2, style=dotted];
m0_318 -> m0_319  [key=0, style=solid];
m0_318 -> m0_320  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_318 -> m0_321  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_318 -> m0_322  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_318 -> m0_323  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_318 -> m0_324  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_318 -> m0_325  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_318 -> m0_326  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_318 -> m0_327  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_318 -> m0_328  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_318 -> m0_329  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_318 -> m0_335  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_318 -> m0_337  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_318 -> m0_338  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_319 -> m0_320  [key=0, style=solid];
m0_320 -> m0_64  [key=2, style=dotted];
m0_320 -> m0_321  [key=0, style=solid];
m0_321 -> m0_322  [key=0, style=solid];
m0_322 -> m0_323  [key=0, style=solid];
m0_323 -> m0_324  [key=0, style=solid];
m0_324 -> m0_325  [key=0, style=solid];
m0_325 -> m0_326  [key=0, style=solid];
m0_326 -> m0_327  [key=0, style=solid];
m0_327 -> m0_328  [key=0, style=solid];
m0_328 -> m0_329  [key=0, style=solid];
m0_329 -> m0_109  [key=2, style=dotted];
m0_329 -> m0_330  [key=0, style=solid];
m0_329 -> m0_315  [key=2, style=dotted];
m0_335 -> m0_336  [key=0, style=solid];
m0_337 -> m0_338  [key=0, style=solid];
m0_338 -> m0_110  [key=2, style=dotted];
m0_338 -> m0_339  [key=0, style=solid];
m0_330 -> m0_331  [key=0, style=solid];
m0_330 -> m0_333  [color=darkseagreen4, key=1, label=friendsArray, style=dashed];
m0_330 -> m0_335  [color=darkseagreen4, key=1, label=friendsArray, style=dashed];
m0_330 -> m0_316  [key=2, style=dotted];
m0_331 -> m0_306  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m0_331 -> m0_332  [key=0, style=solid];
m0_331 -> m0_333  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_331 -> m0_334  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_333 -> m0_109  [key=2, style=dotted];
m0_333 -> m0_334  [key=0, style=solid];
m0_333 -> m0_315  [key=2, style=dotted];
m0_333 -> m0_317  [key=2, style=dotted];
m0_332 -> m0_333  [key=0, style=solid];
m0_332 -> m0_335  [key=0, style=solid];
m0_334 -> m0_332  [key=0, style=solid];
m0_334 -> m0_334  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_336 -> m0_109  [key=2, style=dotted];
m0_336 -> m0_337  [key=0, style=solid];
m0_336 -> m0_315  [key=2, style=dotted];
m0_339 -> m0_191  [color=blue, key=0, style=bold];
m0_147 -> m0_148  [key=0, style=solid];
m0_148 -> m0_149  [key=0, style=solid];
m0_148 -> m0_150  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_148 -> m0_169  [key=2, style=dotted];
m0_149 -> m0_9  [key=2, style=dotted];
m0_149 -> m0_150  [key=0, style=solid];
m0_149 -> m0_151  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_150 -> m0_10  [key=2, style=dotted];
m0_150 -> m0_151  [key=0, style=solid];
m0_151 -> m0_11  [key=2, style=dotted];
m0_151 -> m0_152  [key=0, style=solid];
m0_151 -> m0_153  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_151 -> m0_154  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_151 -> m0_155  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_151 -> m0_156  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_151 -> m0_157  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_151 -> m0_158  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_151 -> m0_159  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_151 -> m0_160  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_151 -> m0_161  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_151 -> m0_162  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_151 -> m0_163  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_151 -> m0_164  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_151 -> m0_165  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_151 -> m0_166  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_151 -> m0_167  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_152 -> m0_33  [key=2, style=dotted];
m0_152 -> m0_153  [key=0, style=solid];
m0_153 -> m0_33  [key=2, style=dotted];
m0_153 -> m0_78  [key=2, style=dotted];
m0_153 -> m0_154  [key=0, style=solid];
m0_154 -> m0_33  [key=2, style=dotted];
m0_154 -> m0_155  [key=0, style=solid];
m0_155 -> m0_33  [key=2, style=dotted];
m0_155 -> m0_156  [key=0, style=solid];
m0_156 -> m0_33  [key=2, style=dotted];
m0_156 -> m0_157  [key=0, style=solid];
m0_157 -> m0_33  [key=2, style=dotted];
m0_157 -> m0_158  [key=0, style=solid];
m0_158 -> m0_33  [key=2, style=dotted];
m0_158 -> m0_146  [key=2, style=dotted];
m0_158 -> m0_159  [key=0, style=solid];
m0_159 -> m0_33  [key=2, style=dotted];
m0_159 -> m0_146  [key=2, style=dotted];
m0_159 -> m0_160  [key=0, style=solid];
m0_160 -> m0_63  [key=2, style=dotted];
m0_160 -> m0_161  [key=0, style=solid];
m0_161 -> m0_33  [key=2, style=dotted];
m0_161 -> m0_162  [key=0, style=solid];
m0_162 -> m0_63  [key=2, style=dotted];
m0_162 -> m0_163  [key=0, style=solid];
m0_163 -> m0_33  [key=2, style=dotted];
m0_163 -> m0_164  [key=0, style=solid];
m0_164 -> m0_33  [key=2, style=dotted];
m0_164 -> m0_165  [key=0, style=solid];
m0_165 -> m0_12  [key=2, style=dotted];
m0_165 -> m0_166  [key=0, style=solid];
m0_166 -> m0_33  [key=2, style=dotted];
m0_166 -> m0_167  [key=0, style=solid];
m0_167 -> m0_33  [key=2, style=dotted];
m0_167 -> m0_168  [key=0, style=solid];
m0_168 -> m0_147  [color=blue, key=0, style=bold];
m0_244 -> m0_245  [key=0, style=solid];
m0_245 -> m0_7  [key=2, style=dotted];
m0_245 -> m0_8  [key=2, style=dotted];
m0_245 -> m0_246  [key=0, style=solid];
m0_245 -> m0_247  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_246 -> m0_9  [key=2, style=dotted];
m0_246 -> m0_247  [key=0, style=solid];
m0_246 -> m0_248  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_247 -> m0_10  [key=2, style=dotted];
m0_247 -> m0_248  [key=0, style=solid];
m0_248 -> m0_11  [key=2, style=dotted];
m0_248 -> m0_249  [key=0, style=solid];
m0_248 -> m0_250  [color=darkseagreen4, key=1, label=payload, style=dashed];
m0_249 -> m0_63  [key=2, style=dotted];
m0_249 -> m0_250  [key=0, style=solid];
m0_250 -> m0_33  [key=2, style=dotted];
m0_250 -> m0_64  [key=2, style=dotted];
m0_250 -> m0_65  [key=2, style=dotted];
m0_250 -> m0_251  [key=0, style=solid];
m0_251 -> m0_244  [color=blue, key=0, style=bold];
m0_119 -> m0_120  [key=0, style=solid];
m0_120 -> m0_121  [key=0, style=solid];
m0_120 -> m0_122  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_120 -> m0_145  [key=2, style=dotted];
m0_121 -> m0_9  [key=2, style=dotted];
m0_121 -> m0_122  [key=0, style=solid];
m0_121 -> m0_123  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_122 -> m0_10  [key=2, style=dotted];
m0_122 -> m0_123  [key=0, style=solid];
m0_123 -> m0_11  [key=2, style=dotted];
m0_123 -> m0_124  [key=0, style=solid];
m0_123 -> m0_125  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_123 -> m0_126  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_123 -> m0_127  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_123 -> m0_128  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_123 -> m0_129  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_123 -> m0_130  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_123 -> m0_131  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_123 -> m0_132  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_123 -> m0_133  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_123 -> m0_134  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_123 -> m0_135  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_123 -> m0_136  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_123 -> m0_137  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_123 -> m0_138  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_123 -> m0_139  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_123 -> m0_140  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_123 -> m0_141  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_123 -> m0_142  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_123 -> m0_143  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_124 -> m0_33  [key=2, style=dotted];
m0_124 -> m0_125  [key=0, style=solid];
m0_125 -> m0_33  [key=2, style=dotted];
m0_125 -> m0_64  [key=2, style=dotted];
m0_125 -> m0_126  [key=0, style=solid];
m0_126 -> m0_33  [key=2, style=dotted];
m0_126 -> m0_127  [key=0, style=solid];
m0_127 -> m0_33  [key=2, style=dotted];
m0_127 -> m0_128  [key=0, style=solid];
m0_128 -> m0_33  [key=2, style=dotted];
m0_128 -> m0_129  [key=0, style=solid];
m0_129 -> m0_33  [key=2, style=dotted];
m0_129 -> m0_130  [key=0, style=solid];
m0_130 -> m0_33  [key=2, style=dotted];
m0_130 -> m0_131  [key=0, style=solid];
m0_130 -> m0_146  [key=2, style=dotted];
m0_131 -> m0_33  [key=2, style=dotted];
m0_131 -> m0_132  [key=0, style=solid];
m0_131 -> m0_146  [key=2, style=dotted];
m0_132 -> m0_33  [key=2, style=dotted];
m0_132 -> m0_133  [key=0, style=solid];
m0_133 -> m0_33  [key=2, style=dotted];
m0_133 -> n111  [key=2, style=dotted];
m0_133 -> m0_134  [key=0, style=solid];
m0_134 -> m0_33  [key=2, style=dotted];
m0_134 -> m0_135  [key=0, style=solid];
m0_135 -> m0_33  [key=2, style=dotted];
m0_135 -> m0_136  [key=0, style=solid];
m0_136 -> m0_63  [key=2, style=dotted];
m0_136 -> m0_137  [key=0, style=solid];
m0_137 -> m0_33  [key=2, style=dotted];
m0_137 -> m0_138  [key=0, style=solid];
m0_138 -> m0_63  [key=2, style=dotted];
m0_138 -> m0_139  [key=0, style=solid];
m0_139 -> m0_33  [key=2, style=dotted];
m0_139 -> m0_140  [key=0, style=solid];
m0_140 -> m0_33  [key=2, style=dotted];
m0_140 -> m0_141  [key=0, style=solid];
m0_141 -> m0_12  [key=2, style=dotted];
m0_141 -> m0_142  [key=0, style=solid];
m0_142 -> m0_33  [key=2, style=dotted];
m0_142 -> m0_143  [key=0, style=solid];
m0_143 -> m0_33  [key=2, style=dotted];
m0_143 -> m0_144  [key=0, style=solid];
m0_144 -> m0_119  [color=blue, key=0, style=bold];
m0_145 -> m0_355  [key=0, style=solid];
m0_355 -> m0_109  [key=2, style=dotted];
m0_355 -> m0_356  [key=0, style=solid];
m0_355 -> m0_357  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_355 -> m0_358  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_355 -> m0_359  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_355 -> m0_360  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_355 -> m0_361  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_355 -> m0_362  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_355 -> m0_363  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_355 -> m0_364  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_355 -> m0_365  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_355 -> m0_366  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_355 -> m0_367  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_355 -> m0_368  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_355 -> m0_369  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_355 -> m0_370  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_355 -> m0_376  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_355 -> m0_378  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_355 -> m0_379  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_356 -> m0_357  [key=0, style=solid];
m0_357 -> m0_64  [key=2, style=dotted];
m0_357 -> m0_358  [key=0, style=solid];
m0_358 -> m0_359  [key=0, style=solid];
m0_359 -> m0_360  [key=0, style=solid];
m0_360 -> m0_361  [key=0, style=solid];
m0_361 -> m0_362  [key=0, style=solid];
m0_362 -> m0_363  [key=0, style=solid];
m0_363 -> m0_364  [key=0, style=solid];
m0_364 -> m0_365  [key=0, style=solid];
m0_365 -> m0_366  [key=0, style=solid];
m0_366 -> m0_367  [key=0, style=solid];
m0_367 -> m0_368  [key=0, style=solid];
m0_368 -> n111  [key=2, style=dotted];
m0_368 -> m0_369  [key=0, style=solid];
m0_368 -> m0_381  [key=2, style=dotted];
m0_369 -> m0_370  [key=0, style=solid];
m0_370 -> m0_109  [key=2, style=dotted];
m0_370 -> m0_371  [key=0, style=solid];
m0_370 -> m0_315  [key=2, style=dotted];
m0_376 -> m0_377  [key=0, style=solid];
m0_378 -> m0_379  [key=0, style=solid];
m0_379 -> m0_110  [key=2, style=dotted];
m0_379 -> m0_380  [key=0, style=solid];
m0_371 -> m0_372  [key=0, style=solid];
m0_371 -> m0_374  [color=darkseagreen4, key=1, label=friendsArray, style=dashed];
m0_371 -> m0_376  [color=darkseagreen4, key=1, label=friendsArray, style=dashed];
m0_371 -> m0_316  [key=2, style=dotted];
m0_372 -> m0_373  [key=0, style=solid];
m0_372 -> m0_374  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_372 -> m0_375  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_372 -> m0_306  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m0_374 -> m0_109  [key=2, style=dotted];
m0_374 -> m0_375  [key=0, style=solid];
m0_374 -> m0_315  [key=2, style=dotted];
m0_374 -> m0_317  [key=2, style=dotted];
m0_373 -> m0_374  [key=0, style=solid];
m0_373 -> m0_376  [key=0, style=solid];
m0_375 -> m0_373  [key=0, style=solid];
m0_375 -> m0_375  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_377 -> m0_109  [key=2, style=dotted];
m0_377 -> m0_378  [key=0, style=solid];
m0_377 -> m0_315  [key=2, style=dotted];
m0_380 -> m0_145  [color=blue, key=0, style=bold];
m0_67 -> m0_68  [key=0, style=solid];
m0_68 -> m0_69  [key=0, style=solid];
m0_68 -> m0_71  [color=darkseagreen4, key=1, label=culture, style=dashed];
m0_68 -> m0_74  [color=darkseagreen4, key=1, label=culture, style=dashed];
m0_69 -> m0_69  [color=darkorchid, key=3, label="Local variable string format", style=bold];
m0_69 -> m0_70  [key=0, style=solid];
m0_69 -> m0_71  [color=darkseagreen4, key=1, label=format, style=dashed];
m0_69 -> m0_74  [color=darkseagreen4, key=1, label=format, style=dashed];
m0_71 -> m0_72  [key=0, style=solid];
m0_71 -> m0_79  [key=2, style=dotted];
m0_74 -> m0_9  [key=2, style=dotted];
m0_74 -> m0_75  [key=0, style=solid];
m0_70 -> m0_71  [key=0, style=solid];
m0_70 -> m0_76  [color=darkseagreen4, key=1, label=date, style=dashed];
m0_70 -> m0_78  [key=2, style=dotted];
m0_76 -> m0_33  [key=2, style=dotted];
m0_76 -> m0_77  [key=0, style=solid];
m0_72 -> m0_73  [key=0, style=solid];
m0_72 -> m0_80  [key=2, style=dotted];
m0_73 -> m0_10  [key=2, style=dotted];
m0_73 -> m0_74  [key=0, style=solid];
m0_73 -> m0_75  [color=darkseagreen4, key=1, label=response, style=dashed];
m0_75 -> m0_11  [key=2, style=dotted];
m0_75 -> m0_76  [key=0, style=solid];
m0_77 -> m0_67  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_4  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_1 -> m0_7  [key=2, style=dotted];
m0_1 -> m0_8  [key=2, style=dotted];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_4  [color=darkseagreen4, key=1, label=json, style=dashed];
m0_2 -> m0_9  [key=2, style=dotted];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_10  [key=2, style=dotted];
m0_4 -> m0_11  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_12  [key=2, style=dotted];
m0_6 -> m0_0  [color=blue, key=0, style=bold];
m0_170 -> m0_171  [key=0, style=solid];
m0_171 -> m0_172  [key=0, style=solid];
m0_171 -> m0_173  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_171 -> m0_191  [key=2, style=dotted];
m0_172 -> m0_9  [key=2, style=dotted];
m0_172 -> m0_173  [key=0, style=solid];
m0_172 -> m0_174  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_173 -> m0_10  [key=2, style=dotted];
m0_173 -> m0_174  [key=0, style=solid];
m0_174 -> m0_11  [key=2, style=dotted];
m0_174 -> m0_175  [key=0, style=solid];
m0_174 -> m0_176  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_174 -> m0_177  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_174 -> m0_178  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_174 -> m0_179  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_174 -> m0_180  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_174 -> m0_181  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_174 -> m0_182  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_174 -> m0_183  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_174 -> m0_184  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_174 -> m0_185  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_174 -> m0_186  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_174 -> m0_187  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_174 -> m0_188  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_174 -> m0_189  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_175 -> m0_33  [key=2, style=dotted];
m0_175 -> m0_176  [key=0, style=solid];
m0_176 -> m0_33  [key=2, style=dotted];
m0_176 -> m0_177  [key=0, style=solid];
m0_177 -> m0_33  [key=2, style=dotted];
m0_177 -> m0_178  [key=0, style=solid];
m0_178 -> m0_33  [key=2, style=dotted];
m0_178 -> m0_179  [key=0, style=solid];
m0_179 -> m0_33  [key=2, style=dotted];
m0_179 -> m0_180  [key=0, style=solid];
m0_180 -> m0_33  [key=2, style=dotted];
m0_180 -> m0_146  [key=2, style=dotted];
m0_180 -> m0_181  [key=0, style=solid];
m0_181 -> m0_33  [key=2, style=dotted];
m0_181 -> m0_146  [key=2, style=dotted];
m0_181 -> m0_182  [key=0, style=solid];
m0_182 -> m0_63  [key=2, style=dotted];
m0_182 -> m0_183  [key=0, style=solid];
m0_183 -> m0_33  [key=2, style=dotted];
m0_183 -> m0_184  [key=0, style=solid];
m0_184 -> m0_63  [key=2, style=dotted];
m0_184 -> m0_185  [key=0, style=solid];
m0_185 -> m0_33  [key=2, style=dotted];
m0_185 -> m0_186  [key=0, style=solid];
m0_186 -> m0_33  [key=2, style=dotted];
m0_186 -> m0_187  [key=0, style=solid];
m0_187 -> m0_12  [key=2, style=dotted];
m0_187 -> m0_188  [key=0, style=solid];
m0_188 -> m0_33  [key=2, style=dotted];
m0_188 -> m0_189  [key=0, style=solid];
m0_189 -> m0_33  [key=2, style=dotted];
m0_189 -> m0_190  [key=0, style=solid];
m0_190 -> m0_170  [color=blue, key=0, style=bold];
m0_20 -> m0_21  [key=0, style=solid];
m0_21 -> m0_21  [color=darkorchid, key=3, label="Local variable string content", style=bold];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_23  [color=darkseagreen4, key=1, label=content, style=dashed];
m0_22 -> m0_9  [key=2, style=dotted];
m0_22 -> m0_23  [key=0, style=solid];
m0_23 -> m0_10  [key=2, style=dotted];
m0_23 -> m0_11  [key=2, style=dotted];
m0_23 -> m0_24  [key=0, style=solid];
m0_24 -> m0_12  [key=2, style=dotted];
m0_24 -> m0_25  [key=0, style=solid];
m0_25 -> m0_20  [color=blue, key=0, style=bold];
m0_252 -> m0_253  [key=0, style=solid];
m0_253 -> m0_7  [key=2, style=dotted];
m0_253 -> m0_8  [key=2, style=dotted];
m0_253 -> m0_254  [key=0, style=solid];
m0_253 -> m0_255  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_254 -> m0_9  [key=2, style=dotted];
m0_254 -> m0_255  [key=0, style=solid];
m0_254 -> m0_256  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_255 -> m0_10  [key=2, style=dotted];
m0_255 -> m0_256  [key=0, style=solid];
m0_256 -> m0_11  [key=2, style=dotted];
m0_256 -> m0_257  [key=0, style=solid];
m0_257 -> m0_49  [key=2, style=dotted];
m0_257 -> m0_258  [key=0, style=solid];
m0_258 -> m0_252  [color=blue, key=0, style=bold];
m0_214 -> m0_215  [color=green, key=0, style=solid];
m0_214 -> m0_222  [color=green, key=2, style=dotted];
m0_214 -> m0_33  [color=green, key=2, style=dotted];
m0_215 -> m0_216  [color=green, key=0, style=solid];
m0_215 -> m0_217  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_215 -> m0_221  [key=2, style=dotted];
m0_215 -> m0_222  [color=green, key=2, style=dotted];
m0_215 -> m0_33  [color=green, key=2, style=dotted];
m0_216 -> m0_9  [key=2, style=dotted];
m0_216 -> m0_217  [color=green, key=0, style=solid];
m0_216 -> m0_218  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_216 -> m0_49  [color=green, key=2, style=dotted];
m0_217 -> m0_10  [key=2, style=dotted];
m0_217 -> m0_218  [color=green, key=0, style=solid];
m0_217 -> m0_63  [color=green, key=2, style=dotted];
m0_218 -> m0_11  [key=2, style=dotted];
m0_218 -> m0_219  [color=green, key=0, style=solid];
m0_218 -> m0_222  [color=green, key=2, style=dotted];
m0_218 -> m0_33  [color=green, key=2, style=dotted];
m0_219 -> m0_33  [key=2, style=dotted];
m0_219 -> m0_64  [key=2, style=dotted];
m0_219 -> m0_220  [key=0, style=solid];
m0_219 -> m0_206  [color=blue, key=0, style=bold];
m0_220 -> m0_214  [color=blue, key=0, style=bold];
m0_111 -> m0_112  [key=0, style=solid];
m0_112 -> m0_109  [key=2, style=dotted];
m0_112 -> m0_113  [key=0, style=solid];
m0_112 -> m0_115  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_113 -> m0_114  [key=0, style=solid];
m0_115 -> m0_10  [key=2, style=dotted];
m0_115 -> m0_110  [key=2, style=dotted];
m0_115 -> m0_116  [key=0, style=solid];
m0_114 -> m0_9  [key=2, style=dotted];
m0_114 -> m0_115  [key=0, style=solid];
m0_114 -> m0_116  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_116 -> m0_11  [key=2, style=dotted];
m0_116 -> m0_117  [key=0, style=solid];
m0_117 -> m0_33  [key=2, style=dotted];
m0_117 -> m0_118  [key=0, style=solid];
m0_118 -> m0_111  [color=blue, key=0, style=bold];
m0_346 -> m0_347  [key=0, style=solid];
m0_346 -> m0_348  [color=darkseagreen4, key=1, label=bd, style=dashed];
m0_346 -> m0_344  [key=2, style=dotted];
m0_347 -> m0_64  [key=2, style=dotted];
m0_347 -> m0_348  [key=0, style=solid];
m0_348 -> m0_80  [key=2, style=dotted];
m0_348 -> m0_349  [key=0, style=solid];
m0_348 -> m0_350  [key=2, style=dotted];
m0_349 -> m0_221  [color=blue, key=0, style=bold];
m0_26 -> m0_27  [key=0, style=solid];
m0_27 -> m0_7  [key=2, style=dotted];
m0_27 -> m0_8  [key=2, style=dotted];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_30  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_28 -> m0_9  [key=2, style=dotted];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_30  [color=darkseagreen4, key=1, label=json, style=dashed];
m0_30 -> m0_10  [key=2, style=dotted];
m0_30 -> m0_11  [key=2, style=dotted];
m0_30 -> m0_31  [key=0, style=solid];
m0_29 -> m0_30  [key=0, style=solid];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_33  [key=2, style=dotted];
m0_32 -> m0_26  [color=blue, key=0, style=bold];
m0_62 -> m0_388  [key=0, style=solid];
m0_388 -> m0_389  [key=0, style=solid];
m0_388 -> m0_390  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_388 -> m0_391  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_388 -> m0_392  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_388 -> m0_109  [key=2, style=dotted];
m0_389 -> m0_390  [key=0, style=solid];
m0_390 -> m0_391  [key=0, style=solid];
m0_390 -> m0_64  [key=2, style=dotted];
m0_391 -> m0_392  [key=0, style=solid];
m0_391 -> n111  [key=2, style=dotted];
m0_391 -> m0_381  [key=2, style=dotted];
m0_392 -> m0_393  [key=0, style=solid];
m0_392 -> m0_110  [key=2, style=dotted];
m0_393 -> m0_62  [color=blue, key=0, style=bold];
m0_192 -> m0_193  [key=0, style=solid];
m0_193 -> m0_145  [key=2, style=dotted];
m0_193 -> m0_194  [key=0, style=solid];
m0_193 -> m0_195  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_194 -> m0_9  [key=2, style=dotted];
m0_194 -> m0_195  [key=0, style=solid];
m0_194 -> m0_196  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_195 -> m0_10  [key=2, style=dotted];
m0_195 -> m0_196  [key=0, style=solid];
m0_196 -> m0_11  [key=2, style=dotted];
m0_196 -> m0_197  [key=0, style=solid];
m0_197 -> m0_49  [key=2, style=dotted];
m0_197 -> m0_198  [key=0, style=solid];
m0_198 -> m0_192  [color=blue, key=0, style=bold];
m0_275 -> m0_276  [key=0, style=solid];
m0_276 -> m0_7  [key=2, style=dotted];
m0_276 -> m0_8  [key=2, style=dotted];
m0_276 -> m0_277  [key=0, style=solid];
m0_276 -> m0_278  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_277 -> m0_9  [key=2, style=dotted];
m0_277 -> m0_278  [key=0, style=solid];
m0_277 -> m0_279  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_278 -> m0_10  [key=2, style=dotted];
m0_278 -> m0_279  [key=0, style=solid];
m0_279 -> m0_11  [key=2, style=dotted];
m0_279 -> m0_280  [key=0, style=solid];
m0_280 -> m0_49  [key=2, style=dotted];
m0_280 -> m0_281  [key=0, style=solid];
m0_281 -> m0_275  [color=blue, key=0, style=bold];
m0_230 -> m0_231  [key=0, style=solid];
m0_231 -> m0_7  [key=2, style=dotted];
m0_231 -> m0_8  [key=2, style=dotted];
m0_231 -> m0_232  [key=0, style=solid];
m0_231 -> m0_233  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_232 -> m0_9  [key=2, style=dotted];
m0_232 -> m0_233  [key=0, style=solid];
m0_232 -> m0_234  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_233 -> m0_10  [key=2, style=dotted];
m0_233 -> m0_234  [key=0, style=solid];
m0_234 -> m0_11  [key=2, style=dotted];
m0_234 -> m0_235  [key=0, style=solid];
m0_235 -> m0_33  [key=2, style=dotted];
m0_235 -> m0_64  [key=2, style=dotted];
m0_235 -> m0_65  [key=2, style=dotted];
m0_235 -> m0_236  [key=0, style=solid];
m0_236 -> m0_230  [color=blue, key=0, style=bold];
m0_282 -> m0_283  [key=0, style=solid];
m0_283 -> m0_284  [key=0, style=solid];
m0_283 -> m0_285  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_283 -> m0_292  [key=2, style=dotted];
m0_284 -> m0_9  [key=2, style=dotted];
m0_284 -> m0_285  [key=0, style=solid];
m0_284 -> m0_286  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_285 -> m0_10  [key=2, style=dotted];
m0_285 -> m0_286  [key=0, style=solid];
m0_286 -> m0_11  [key=2, style=dotted];
m0_286 -> m0_287  [key=0, style=solid];
m0_286 -> m0_288  [color=darkseagreen4, key=1, label=bd, style=dashed];
m0_286 -> m0_289  [color=darkseagreen4, key=1, label=bd, style=dashed];
m0_286 -> m0_290  [color=darkseagreen4, key=1, label=bd, style=dashed];
m0_287 -> m0_33  [key=2, style=dotted];
m0_287 -> m0_288  [key=0, style=solid];
m0_288 -> m0_33  [key=2, style=dotted];
m0_288 -> m0_289  [key=0, style=solid];
m0_289 -> m0_33  [key=2, style=dotted];
m0_289 -> m0_290  [key=0, style=solid];
m0_290 -> m0_33  [key=2, style=dotted];
m0_290 -> m0_291  [key=0, style=solid];
m0_291 -> m0_282  [color=blue, key=0, style=bold];
m0_213 -> m0_340  [key=0, style=solid];
m0_213 -> m0_214  [color=green, key=0, style=solid];
m0_213 -> m0_222  [color=green, key=2, style=dotted];
m0_213 -> m0_33  [color=green, key=2, style=dotted];
m0_340 -> m0_341  [key=0, style=solid];
m0_340 -> m0_342  [color=darkseagreen4, key=1, label=bd, style=dashed];
m0_340 -> m0_344  [key=2, style=dotted];
m0_341 -> m0_64  [key=2, style=dotted];
m0_341 -> m0_342  [key=0, style=solid];
m0_342 -> m0_80  [key=2, style=dotted];
m0_342 -> m0_343  [key=0, style=solid];
m0_342 -> m0_345  [key=2, style=dotted];
m0_343 -> m0_213  [color=blue, key=0, style=bold];
m0_259 -> m0_260  [key=0, style=solid];
m0_260 -> m0_7  [key=2, style=dotted];
m0_260 -> m0_8  [key=2, style=dotted];
m0_260 -> m0_261  [key=0, style=solid];
m0_260 -> m0_262  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_261 -> m0_9  [key=2, style=dotted];
m0_261 -> m0_262  [key=0, style=solid];
m0_261 -> m0_263  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_262 -> m0_10  [key=2, style=dotted];
m0_262 -> m0_263  [key=0, style=solid];
m0_263 -> m0_11  [key=2, style=dotted];
m0_263 -> m0_264  [key=0, style=solid];
m0_264 -> m0_33  [key=2, style=dotted];
m0_264 -> m0_64  [key=2, style=dotted];
m0_264 -> m0_65  [key=2, style=dotted];
m0_264 -> m0_265  [key=0, style=solid];
m0_264 -> m0_266  [key=2, style=dotted];
m0_265 -> m0_259  [color=blue, key=0, style=bold];
m0_229 -> m0_351  [key=0, style=solid];
m0_351 -> m0_109  [key=2, style=dotted];
m0_351 -> m0_352  [key=0, style=solid];
m0_351 -> m0_353  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_352 -> m0_353  [key=0, style=solid];
m0_353 -> m0_110  [key=2, style=dotted];
m0_353 -> m0_354  [key=0, style=solid];
m0_354 -> m0_229  [color=blue, key=0, style=bold];
m0_292 -> m0_394  [key=0, style=solid];
m0_394 -> m0_109  [key=2, style=dotted];
m0_394 -> m0_395  [key=0, style=solid];
m0_394 -> m0_396  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_394 -> m0_397  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_394 -> m0_398  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_394 -> m0_399  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_395 -> m0_396  [key=0, style=solid];
m0_396 -> m0_397  [key=0, style=solid];
m0_397 -> m0_398  [key=0, style=solid];
m0_398 -> m0_399  [key=0, style=solid];
m0_399 -> m0_110  [key=2, style=dotted];
m0_399 -> m0_400  [key=0, style=solid];
m0_400 -> m0_292  [color=blue, key=0, style=bold];
m0_34 -> m0_35  [key=0, style=solid];
m0_35 -> m0_7  [key=2, style=dotted];
m0_35 -> m0_8  [key=2, style=dotted];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_37  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_36 -> m0_9  [key=2, style=dotted];
m0_36 -> m0_37  [key=0, style=solid];
m0_37 -> m0_10  [key=2, style=dotted];
m0_37 -> m0_11  [key=2, style=dotted];
m0_37 -> m0_38  [key=0, style=solid];
m0_38 -> m0_33  [key=2, style=dotted];
m0_38 -> m0_39  [key=0, style=solid];
m0_39 -> m0_34  [color=blue, key=0, style=bold];
m0_101 -> m0_102  [key=0, style=solid];
m0_102 -> m0_103  [key=0, style=solid];
m0_102 -> m0_105  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_102 -> m0_109  [key=2, style=dotted];
m0_103 -> m0_104  [key=0, style=solid];
m0_105 -> m0_10  [key=2, style=dotted];
m0_105 -> m0_106  [key=0, style=solid];
m0_105 -> m0_110  [key=2, style=dotted];
m0_104 -> m0_9  [key=2, style=dotted];
m0_104 -> m0_105  [key=0, style=solid];
m0_104 -> m0_106  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_106 -> m0_11  [key=2, style=dotted];
m0_106 -> m0_107  [key=0, style=solid];
m0_107 -> m0_33  [key=2, style=dotted];
m0_107 -> n111  [key=2, style=dotted];
m0_107 -> m0_108  [key=0, style=solid];
m0_108 -> m0_101  [color=blue, key=0, style=bold];
m0_267 -> m0_268  [key=0, style=solid];
m0_268 -> m0_7  [key=2, style=dotted];
m0_268 -> m0_8  [key=2, style=dotted];
m0_268 -> m0_269  [key=0, style=solid];
m0_268 -> m0_270  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_269 -> m0_9  [key=2, style=dotted];
m0_269 -> m0_270  [key=0, style=solid];
m0_269 -> m0_271  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_270 -> m0_10  [key=2, style=dotted];
m0_270 -> m0_271  [key=0, style=solid];
m0_271 -> m0_11  [key=2, style=dotted];
m0_271 -> m0_272  [key=0, style=solid];
m0_271 -> m0_273  [color=darkseagreen4, key=1, label=payload, style=dashed];
m0_272 -> m0_63  [key=2, style=dotted];
m0_272 -> m0_273  [key=0, style=solid];
m0_273 -> m0_33  [key=2, style=dotted];
m0_273 -> m0_64  [key=2, style=dotted];
m0_273 -> m0_65  [key=2, style=dotted];
m0_273 -> m0_266  [key=2, style=dotted];
m0_273 -> m0_274  [key=0, style=solid];
m0_274 -> m0_267  [color=blue, key=0, style=bold];
m0_88 -> m0_89  [key=0, style=solid];
m0_89 -> m0_7  [key=2, style=dotted];
m0_89 -> m0_8  [key=2, style=dotted];
m0_89 -> m0_90  [key=0, style=solid];
m0_90 -> m0_10  [key=2, style=dotted];
m0_90 -> m0_91  [key=0, style=solid];
m0_90 -> m0_92  [color=darkseagreen4, key=1, label=response, style=dashed];
m0_91 -> m0_9  [key=2, style=dotted];
m0_91 -> m0_92  [key=0, style=solid];
m0_92 -> m0_11  [key=2, style=dotted];
m0_92 -> m0_93  [key=0, style=solid];
m0_92 -> m0_94  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_92 -> m0_95  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_92 -> m0_96  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_92 -> m0_97  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_92 -> m0_98  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_92 -> m0_99  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_93 -> m0_33  [key=2, style=dotted];
m0_93 -> m0_94  [key=0, style=solid];
m0_94 -> m0_33  [key=2, style=dotted];
m0_94 -> m0_95  [key=0, style=solid];
m0_95 -> m0_33  [key=2, style=dotted];
m0_95 -> m0_96  [key=0, style=solid];
m0_96 -> m0_33  [key=2, style=dotted];
m0_96 -> m0_97  [key=0, style=solid];
m0_97 -> m0_33  [key=2, style=dotted];
m0_97 -> m0_98  [key=0, style=solid];
m0_98 -> m0_33  [key=2, style=dotted];
m0_98 -> m0_99  [key=0, style=solid];
m0_99 -> m0_33  [key=2, style=dotted];
m0_99 -> m0_100  [key=0, style=solid];
m0_100 -> m0_88  [color=blue, key=0, style=bold];
m0_40 -> m0_41  [key=0, style=solid];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_43  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_41 -> m0_48  [key=2, style=dotted];
m0_42 -> m0_9  [key=2, style=dotted];
m0_42 -> m0_43  [key=0, style=solid];
m0_43 -> m0_10  [key=2, style=dotted];
m0_43 -> m0_11  [key=2, style=dotted];
m0_43 -> m0_44  [key=0, style=solid];
m0_43 -> m0_45  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_43 -> m0_46  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_49  [key=2, style=dotted];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_49  [key=2, style=dotted];
m0_46 -> m0_47  [key=0, style=solid];
m0_46 -> m0_49  [key=2, style=dotted];
m0_47 -> m0_40  [color=blue, key=0, style=bold];
m0_81 -> m0_82  [key=0, style=solid];
m0_82 -> m0_7  [key=2, style=dotted];
m0_82 -> m0_8  [key=2, style=dotted];
m0_82 -> m0_83  [key=0, style=solid];
m0_83 -> m0_10  [key=2, style=dotted];
m0_83 -> m0_84  [key=0, style=solid];
m0_83 -> m0_85  [color=darkseagreen4, key=1, label=response, style=dashed];
m0_84 -> m0_9  [key=2, style=dotted];
m0_84 -> m0_85  [key=0, style=solid];
m0_85 -> m0_11  [key=2, style=dotted];
m0_85 -> m0_86  [key=0, style=solid];
m0_86 -> m0_33  [key=2, style=dotted];
m0_86 -> m0_87  [key=0, style=solid];
m0_87 -> m0_81  [color=blue, key=0, style=bold];
m0_13 -> m0_14  [key=0, style=solid];
m0_14 -> m0_7  [key=2, style=dotted];
m0_14 -> m0_8  [key=2, style=dotted];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_16  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_15 -> m0_9  [key=2, style=dotted];
m0_15 -> m0_16  [key=0, style=solid];
m0_16 -> m0_10  [key=2, style=dotted];
m0_16 -> m0_11  [key=2, style=dotted];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_18  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_17 -> m0_12  [key=2, style=dotted];
m0_17 -> m0_18  [key=0, style=solid];
m0_18 -> m0_12  [key=2, style=dotted];
m0_18 -> m0_19  [key=0, style=solid];
m0_19 -> m0_13  [color=blue, key=0, style=bold];
m1_0_221 -> m1_0_346  [key=0, style=solid];
m1_0_237 -> m1_0_238  [key=0, style=solid];
m1_0_238 -> m1_0_7  [key=2, style=dotted];
m1_0_238 -> m1_0_8  [key=2, style=dotted];
m1_0_238 -> m1_0_239  [key=0, style=solid];
m1_0_238 -> m1_0_240  [color=darkseagreen4, key=1, label=doc, style=dashed];
m1_0_239 -> m1_0_9  [key=2, style=dotted];
m1_0_239 -> m1_0_240  [key=0, style=solid];
m1_0_239 -> m1_0_241  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_0_240 -> m1_0_10  [key=2, style=dotted];
m1_0_240 -> m1_0_241  [key=0, style=solid];
m1_0_241 -> m1_0_11  [key=2, style=dotted];
m1_0_241 -> m1_0_242  [key=0, style=solid];
m1_0_242 -> m1_0_33  [key=2, style=dotted];
m1_0_242 -> m1_0_64  [key=2, style=dotted];
m1_0_242 -> m1_0_65  [key=2, style=dotted];
m1_0_242 -> m1_0_243  [key=0, style=solid];
m1_0_243 -> m1_0_237  [color=blue, key=0, style=bold];
m1_0_169 -> m1_0_293  [key=0, style=solid];
m1_0_306 -> m1_0_306  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m1_0_306 -> m1_0_307  [key=0, style=solid];
m1_0_306 -> m1_0_308  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_0_306 -> m1_0_309  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_0_293 -> m1_0_109  [key=2, style=dotted];
m1_0_293 -> m1_0_294  [key=0, style=solid];
m1_0_293 -> m1_0_295  [color=darkseagreen4, key=1, label=doc, style=dashed];
m1_0_293 -> m1_0_296  [color=darkseagreen4, key=1, label=doc, style=dashed];
m1_0_293 -> m1_0_297  [color=darkseagreen4, key=1, label=doc, style=dashed];
m1_0_293 -> m1_0_298  [color=darkseagreen4, key=1, label=doc, style=dashed];
m1_0_293 -> m1_0_299  [color=darkseagreen4, key=1, label=doc, style=dashed];
m1_0_293 -> m1_0_300  [color=darkseagreen4, key=1, label=doc, style=dashed];
m1_0_293 -> m1_0_301  [color=darkseagreen4, key=1, label=doc, style=dashed];
m1_0_293 -> m1_0_302  [color=darkseagreen4, key=1, label=doc, style=dashed];
m1_0_293 -> m1_0_303  [color=darkseagreen4, key=1, label=doc, style=dashed];
m1_0_293 -> m1_0_304  [color=darkseagreen4, key=1, label=doc, style=dashed];
m1_0_293 -> m1_0_310  [color=darkseagreen4, key=1, label=doc, style=dashed];
m1_0_293 -> m1_0_312  [color=darkseagreen4, key=1, label=doc, style=dashed];
m1_0_293 -> m1_0_313  [color=darkseagreen4, key=1, label=doc, style=dashed];
m1_0_294 -> m1_0_295  [key=0, style=solid];
m1_0_295 -> m1_0_64  [key=2, style=dotted];
m1_0_295 -> m1_0_296  [key=0, style=solid];
m1_0_296 -> m1_0_297  [key=0, style=solid];
m1_0_297 -> m1_0_298  [key=0, style=solid];
m1_0_298 -> m1_0_299  [key=0, style=solid];
m1_0_299 -> m1_0_300  [key=0, style=solid];
m1_0_300 -> m1_0_301  [key=0, style=solid];
m1_0_301 -> m1_0_302  [key=0, style=solid];
m1_0_302 -> m1_0_303  [key=0, style=solid];
m1_0_303 -> m1_0_304  [key=0, style=solid];
m1_0_304 -> m1_0_109  [key=2, style=dotted];
m1_0_304 -> m1_0_305  [key=0, style=solid];
m1_0_304 -> m1_0_315  [key=2, style=dotted];
m1_0_310 -> m1_0_311  [key=0, style=solid];
m1_0_312 -> m1_0_313  [key=0, style=solid];
m1_0_313 -> m1_0_110  [key=2, style=dotted];
m1_0_313 -> m1_0_314  [key=0, style=solid];
m1_0_305 -> m1_0_306  [key=0, style=solid];
m1_0_305 -> m1_0_308  [color=darkseagreen4, key=1, label=friendsArray, style=dashed];
m1_0_305 -> m1_0_310  [color=darkseagreen4, key=1, label=friendsArray, style=dashed];
m1_0_305 -> m1_0_316  [key=2, style=dotted];
m1_0_308 -> m1_0_109  [key=2, style=dotted];
m1_0_308 -> m1_0_309  [key=0, style=solid];
m1_0_308 -> m1_0_315  [key=2, style=dotted];
m1_0_308 -> m1_0_317  [key=2, style=dotted];
m1_0_307 -> m1_0_308  [key=0, style=solid];
m1_0_307 -> m1_0_310  [key=0, style=solid];
m1_0_309 -> m1_0_307  [key=0, style=solid];
m1_0_309 -> m1_0_309  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_0_311 -> m1_0_109  [key=2, style=dotted];
m1_0_311 -> m1_0_312  [key=0, style=solid];
m1_0_311 -> m1_0_315  [key=2, style=dotted];
m1_0_314 -> m1_0_169  [color=blue, key=0, style=bold];
m1_0_147 -> m1_0_148  [key=0, style=solid];
m1_0_148 -> m1_0_149  [key=0, style=solid];
m1_0_148 -> m1_0_150  [color=darkseagreen4, key=1, label=doc, style=dashed];
m1_0_148 -> m1_0_169  [key=2, style=dotted];
m1_0_149 -> m1_0_9  [key=2, style=dotted];
m1_0_149 -> m1_0_150  [key=0, style=solid];
m1_0_149 -> m1_0_151  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_0_150 -> m1_0_10  [key=2, style=dotted];
m1_0_150 -> m1_0_151  [key=0, style=solid];
m1_0_151 -> m1_0_11  [key=2, style=dotted];
m1_0_151 -> m1_0_152  [key=0, style=solid];
m1_0_151 -> m1_0_153  [color=darkseagreen4, key=1, label=p, style=dashed];
m1_0_151 -> m1_0_154  [color=darkseagreen4, key=1, label=p, style=dashed];
m1_0_151 -> m1_0_155  [color=darkseagreen4, key=1, label=p, style=dashed];
m1_0_151 -> m1_0_156  [color=darkseagreen4, key=1, label=p, style=dashed];
m1_0_151 -> m1_0_157  [color=darkseagreen4, key=1, label=p, style=dashed];
m1_0_151 -> m1_0_158  [color=darkseagreen4, key=1, label=p, style=dashed];
m1_0_151 -> m1_0_159  [color=darkseagreen4, key=1, label=p, style=dashed];
m1_0_151 -> m1_0_160  [color=darkseagreen4, key=1, label=p, style=dashed];
m1_0_151 -> m1_0_161  [color=darkseagreen4, key=1, label=p, style=dashed];
m1_0_151 -> m1_0_162  [color=darkseagreen4, key=1, label=p, style=dashed];
m1_0_151 -> m1_0_163  [color=darkseagreen4, key=1, label=p, style=dashed];
m1_0_151 -> m1_0_164  [color=darkseagreen4, key=1, label=p, style=dashed];
m1_0_151 -> m1_0_165  [color=darkseagreen4, key=1, label=p, style=dashed];
m1_0_151 -> m1_0_166  [color=darkseagreen4, key=1, label=p, style=dashed];
m1_0_151 -> m1_0_167  [color=darkseagreen4, key=1, label=p, style=dashed];
m1_0_152 -> m1_0_33  [key=2, style=dotted];
m1_0_152 -> m1_0_153  [key=0, style=solid];
n165 -> n1  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
n165 -> n7  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
n165 -> n8  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
n165 -> n9  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
n165 -> n11  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
n165 -> n13  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
n165 -> n14  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
n165 -> n15  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
n165 -> n16  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
n165 -> n30  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
n165 -> n31  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
n165 -> n40  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
n165 -> n47  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
n165 -> n49  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
n165 -> n60  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
n165 -> n62  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
n165 -> n65  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
n165 -> n71  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
n165 -> n80  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
n165 -> n85  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
n165 -> n87  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
n165 -> n89  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
n165 -> d78  [color=green, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
n165 -> n124  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
n165 -> n126  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
n165 -> n130  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
n165 -> n134  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
n165 -> n144  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
n165 -> n157  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
n165 -> n160  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.JsonDeserializer", style=dashed];
n166 -> n117  [color=darkseagreen4, key=1, label=JToken, style=dashed];
m0_401 -> m0_41  [color=darkseagreen4, key=1, label="RestSharp.Tests.JsonTests", style=dashed];
m0_401 -> m0_51  [color=darkseagreen4, key=1, label="RestSharp.Tests.JsonTests", style=dashed];
m0_401 -> m0_120  [color=darkseagreen4, key=1, label="RestSharp.Tests.JsonTests", style=dashed];
m0_401 -> m0_148  [color=darkseagreen4, key=1, label="RestSharp.Tests.JsonTests", style=dashed];
m0_401 -> m0_171  [color=darkseagreen4, key=1, label="RestSharp.Tests.JsonTests", style=dashed];
m0_401 -> m0_193  [color=darkseagreen4, key=1, label="RestSharp.Tests.JsonTests", style=dashed];
m0_401 -> m0_200  [color=darkseagreen4, key=1, label="RestSharp.Tests.JsonTests", style=dashed];
m0_401 -> m0_207  [color=darkseagreen4, key=1, label="RestSharp.Tests.JsonTests", style=dashed];
m0_401 -> m0_215  [color=darkseagreen4, key=1, label="RestSharp.Tests.JsonTests", style=dashed];
m0_401 -> m0_223  [color=darkseagreen4, key=1, label="RestSharp.Tests.JsonTests", style=dashed];
m0_401 -> m0_283  [color=darkseagreen4, key=1, label="RestSharp.Tests.JsonTests", style=dashed];
}
