digraph  {
n0 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", span="38-38"];
n1 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", label="string content = ''{ \''Value\'': 4.8e-04 }''", span="40-40"];
n2 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", label="JsonDeserializer json = new JsonDeserializer()", span="41-41"];
n3 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", label="DecimalNumber output = json.Deserialize<DecimalNumber>(new RestResponse { Content = content })", span="42-42"];
n8 [cluster="RestSharp.Deserializers.JsonDeserializer.JsonDeserializer()", label="Entry RestSharp.Deserializers.JsonDeserializer.JsonDeserializer()", span="22-22"];
n4 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", label="decimal expected = decimal.Parse(''4.8e-04'', NumberStyles.Float, CultureInfo.InvariantCulture)", span="43-43"];
n5 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", label="Assert.NotNull(output)", span="45-45"];
n6 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", label="Assert.AreEqual(expected, output.Value)", span="46-46"];
n9 [cluster="RestSharp.RestResponse.RestResponse()", label="Entry RestSharp.RestResponse.RestResponse()", span="178-178"];
n10 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.IRestResponse)", label="Entry RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.IRestResponse)", span="27-27"];
n11 [cluster="decimal.Parse(string, System.Globalization.NumberStyles, System.IFormatProvider)", label="Entry decimal.Parse(string, System.Globalization.NumberStyles, System.IFormatProvider)", span="0-0"];
n7 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", span="38-38"];
n14 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", span="50-50"];
n15 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", label="string content = ''{\''one\'':\''oneOneOne\'', \''two\'':\''twoTwoTwo\'', \''three\'':3}''", span="52-52"];
n16 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", label="JsonDeserializer json = new JsonDeserializer()", span="53-53"];
n17 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", label="SimpleStruct output = json.Deserialize<SimpleStruct>(new RestResponse { Content = content })", span="54-54"];
n18 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", label="Assert.NotNull(output)", span="56-56"];
n19 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", label="Assert.AreEqual(''oneOneOne'', output.One)", span="57-57"];
n20 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", label="Assert.AreEqual(''twoTwoTwo'', output.Two)", span="58-58"];
n21 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", label="Assert.AreEqual(3, output.Three)", span="59-59"];
n22 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", span="50-50"];
n23 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Select_Tokens()", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Select_Tokens()", span="63-63"];
n24 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Select_Tokens()", label="string data = File.ReadAllText(Path.Combine(''SampleData'', ''jsonarray.txt''))", span="65-65"];
n25 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Select_Tokens()", label="RestResponse response = new RestResponse { Content = data }", span="66-66"];
n30 [cluster="System.IO.Path.Combine(string, string)", label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
n31 [cluster="System.IO.File.ReadAllText(string)", label="Entry System.IO.File.ReadAllText(string)", span="0-0"];
n26 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Select_Tokens()", label="JsonDeserializer json = new JsonDeserializer()", span="67-67"];
n27 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Select_Tokens()", label="StatusComplexList output = json.Deserialize<StatusComplexList>(response)", span="68-68"];
n28 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Select_Tokens()", label="Assert.AreEqual(4, output.Count)", span="70-70"];
n29 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Select_Tokens()", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Select_Tokens()", span="63-63"];
n32 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", span="74-74"];
n33 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", label="string doc = File.ReadAllText(Path.Combine(''SampleData'', ''4sq.txt''))", span="76-76"];
n34 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", label="JsonDeserializer json = new JsonDeserializer { RootElement = ''response'' }", span="77-77"];
n35 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", label="VenuesResponse output = json.Deserialize<VenuesResponse>(new RestResponse { Content = doc })", span="78-78"];
n36 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", label="Assert.IsNotEmpty(output.Groups)", span="80-80"];
n37 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", span="74-74"];
n39 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", span="84-84"];
n40 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", label="string doc = File.ReadAllText(Path.Combine(''SampleData'', ''jsonlists.txt''))", span="86-86"];
n41 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", label="JsonDeserializer json = new JsonDeserializer()", span="87-87"];
n42 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", label="JsonLists output = json.Deserialize<JsonLists>(new RestResponse { Content = doc })", span="88-88"];
n43 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", label="Assert.IsNotEmpty(output.Names)", span="90-90"];
n44 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", label="Assert.IsNotEmpty(output.Numbers)", span="91-91"];
n45 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", span="84-84"];
n46 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", span="95-95"];
n47 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", label="string content = ''{\''users\'':[\''johnsheehan\'',\''jagregory\'',\''drusellers\'',\''structuremap\'']}''", span="97-97"];
n48 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", label="JsonDeserializer json = new JsonDeserializer { RootElement = ''users'' }", span="98-98"];
n49 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", label="List<string> output = json.Deserialize<List<string>>(new RestResponse { Content = content })", span="99-99"];
n50 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", label="Assert.IsNotEmpty(output)", span="101-101"];
n51 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", span="95-95"];
n52 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", span="105-105"];
n53 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", label="string content = ''{\''users\'':[\''johnsheehan\'',\''jagregory\'',null,\''drusellers\'',\''structuremap\'']}''", span="107-107"];
n54 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", label="JsonDeserializer json = new JsonDeserializer { RootElement = ''users'' }", span="108-108"];
n55 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", label="List<string> output = json.Deserialize<List<string>>(new RestResponse { Content = content })", span="109-109"];
n56 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", label="Assert.IsNotEmpty(output)", span="111-111"];
n57 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", label="Assert.AreEqual(null, output[2])", span="112-112"];
n58 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", label="Assert.AreEqual(5, output.Count)", span="113-113"];
n59 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", span="105-105"];
n60 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Item_Without_Array()", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Item_Without_Array()", span="117-117"];
n61 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Item_Without_Array()", label="string content = ''{\''users\'':\''johnsheehan\''}''", span="119-119"];
n62 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Item_Without_Array()", label="JsonDeserializer json = new JsonDeserializer { RootElement = ''users'' }", span="120-120"];
n63 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Item_Without_Array()", label="List<string> output = json.Deserialize<List<string>>(new RestResponse { Content = content })", span="121-121"];
n64 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Item_Without_Array()", label="Assert.True(output.SequenceEqual(new[] { ''johnsheehan'' }))", span="123-123"];
n65 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Item_Without_Array()", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Item_Without_Array()", span="117-117"];
n68 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Toplevel_Item_Without_Array()", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Toplevel_Item_Without_Array()", span="127-127"];
n69 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Toplevel_Item_Without_Array()", label="string content = ''\''johnsheehan\''''", span="129-129"];
n70 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Toplevel_Item_Without_Array()", label="JsonDeserializer json = new JsonDeserializer()", span="130-130"];
n71 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Toplevel_Item_Without_Array()", label="List<string> output = json.Deserialize<List<string>>(new RestResponse { Content = content })", span="131-131"];
n72 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Toplevel_Item_Without_Array()", label="Assert.True(output.SequenceEqual(new[] { ''johnsheehan'' }))", span="133-133"];
n73 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Toplevel_Item_Without_Array()", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Toplevel_Item_Without_Array()", span="127-127"];
n74 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", span="137-137"];
n75 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", label="string doc = File.ReadAllText(Path.Combine(''SampleData'', ''sojson.txt''))", span="139-139"];
n76 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", label="JsonDeserializer json = new JsonDeserializer { RootElement = ''User'' }", span="140-140"];
n77 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", label="SoUser output = json.Deserialize<SoUser>(new RestResponse { Content = doc })", span="141-141"];
n78 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", label="Assert.AreEqual(''John Sheehan'', output.DisplayName)", span="143-143"];
n79 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", span="137-137"];
n80 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", span="147-147"];
n81 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", label="string doc = File.ReadAllText(Path.Combine(''SampleData'', ''jsondictionary.txt''))", span="149-149"];
n82 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", label="JsonDeserializer json = new JsonDeserializer()", span="150-150"];
n83 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", label="Dictionary<string, object> output =\r\n                json.Deserialize<Dictionary<string, object>>(new RestResponse { Content = \\ndoc })", span="151-152"];
n84 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", label="Assert.AreEqual(output.Keys.Count, 3)", span="154-154"];
n85 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", label="object firstKeysVal = output.FirstOrDefault().Value", span="156-156"];
n86 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", label="Assert.IsInstanceOf<IDictionary>(firstKeysVal)", span="158-158"];
n88 [cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0"];
n87 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", span="147-147"];
n90 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", span="162-162"];
n91 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", label="string doc = File.ReadAllText(Path.Combine(''SampleData'', ''jsondictionary_KeysType.txt''))", span="164-164"];
n92 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", label="JsonDeserializer json = new JsonDeserializer()", span="165-165"];
n93 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", label="Dictionary<int, object> output =\r\n                json.Deserialize<Dictionary<int, object>>(new RestResponse { Content = doc })", span="166-167"];
n94 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", label="Assert.AreEqual(output.Keys.Count, 2)", span="169-169"];
n95 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", label="object firstKeysVal = output.FirstOrDefault().Value", span="171-171"];
n96 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", label="Assert.IsInstanceOf<IDictionary>(firstKeysVal)", span="173-173"];
n97 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", span="162-162"];
n98 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", span="177-177"];
n99 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", label="string doc = File.ReadAllText(Path.Combine(''SampleData'', ''GenericWithList.txt''))", span="179-179"];
n100 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", label="JsonDeserializer json = new JsonDeserializer()", span="180-180"];
n101 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", label="Generic<GenericWithList<Foe>> output =\r\n                json.Deserialize<Generic<GenericWithList<Foe>>>(new RestResponse { Content = \\ndoc })", span="181-182"];
n102 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", label="Assert.AreEqual(''Foe sho'', output.Data.Items[0].Nickname)", span="184-184"];
n103 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", span="177-177"];
n104 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", span="188-188"];
n105 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", label="Guid id1 = new Guid(''b0e5c11f-e944-478c-aadd-753b956d0c8c'')", span="190-190"];
n106 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", label="Guid id2 = new Guid(''809399fa-21c4-4dca-8dcd-34cb697fbca0'')", span="191-191"];
n108 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", label="data[''Ids''] = new JsonArray { id1, id2 }", span="194-194"];
n113 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", label="Assert.AreEqual(id1, p.Ids[0])", span="201-201"];
n116 [cluster="System.Guid.Guid(string)", label="Entry System.Guid.Guid(string)", span="0-0"];
n107 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", label="JsonObject data = new JsonObject()", span="192-192"];
n114 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", label="Assert.AreEqual(id2, p.Ids[1])", span="202-202"];
n110 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", label="RestResponse response = new RestResponse { Content = data.ToString()  }", span="197-197"];
n117 [cluster="RestSharp.Tests.JsonObject.JsonObject()", label="Entry RestSharp.Tests.JsonObject.JsonObject()", span="134-134"];
n109 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", label="JsonDeserializer d = new JsonDeserializer()", span="196-196"];
n118 [cluster="RestSharp.Tests.JsonArray.JsonArray()", label="Entry RestSharp.Tests.JsonArray.JsonArray()", span="91-91"];
n111 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", label="GuidList p = d.Deserialize<GuidList>(response)", span="198-198"];
n119 [cluster="RestSharp.Tests.JsonObject.ToString()", label="Entry RestSharp.Tests.JsonObject.ToString()", span="342-342"];
n112 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", label="Assert.AreEqual(2, p.Ids.Count)", span="200-200"];
n115 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", span="188-188"];
n120 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", span="206-206"];
n121 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", label="DateTime item1 = new DateTime(2010, 2, 8, 11, 11, 11)", span="208-208"];
n122 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", label="DateTime item2 = item1.AddSeconds(12345)", span="209-209"];
n124 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", label="data[''Items''] = new JsonArray\r\n                            {\r\n                                item1.ToString(''u''),\r\n                                \\nitem2.ToString(''u'')\r\n                            }", span="212-216"];
n129 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", label="Assert.AreEqual(item1, p.Items[0])", span="223-223"];
n132 [cluster="System.DateTime.DateTime(int, int, int, int, int, int)", label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0"];
n123 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", label="JsonObject data = new JsonObject()", span="210-210"];
n130 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", label="Assert.AreEqual(item2, p.Items[1])", span="224-224"];
n133 [cluster="System.DateTime.AddSeconds(double)", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
n126 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", label="RestResponse response = new RestResponse { Content = data.ToString() }", span="219-219"];
n125 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", label="JsonDeserializer d = new JsonDeserializer()", span="218-218"];
n134 [cluster="System.DateTime.ToString(string)", label="Entry System.DateTime.ToString(string)", span="0-0"];
n127 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", label="GenericWithList<DateTime> p = d.Deserialize<GenericWithList<DateTime>>(response)", span="220-220"];
n128 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", label="Assert.AreEqual(2, p.Items.Count)", span="222-222"];
n131 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", span="206-206"];
n135 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", span="228-228"];
n136 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", label="DateTime item0 = new DateTime(2010, 2, 8, 11, 11, 11, DateTimeKind.Local)", span="230-230"];
n137 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", label="DateTime item1 = new DateTime(2011, 2, 8, 11, 11, 11, DateTimeKind.Utc)", span="231-231"];
n140 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", label="data[''Items''] = new JsonArray\r\n                            {\r\n                                item0.ToString(),\r\n                                \\nitem1.ToString(),\r\n                                item2.ToString(),\r\n                                ''/Date(1309421746929+\\n0000)/''\r\n                            }", span="235-241"];
n144 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", label="Assert.AreNotEqual(item0.Kind, p.Items[0].Kind)", span="247-247"];
n149 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
n138 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", label="DateTime item2 = new DateTime(2012, 2, 8, 11, 11, 11, DateTimeKind.Unspecified)", span="232-232"];
n145 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", label="Assert.AreEqual(item1.Kind, p.Items[1].Kind)", span="248-248"];
n139 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", label="JsonObject data = new JsonObject()", span="233-233"];
n142 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", label="RestResponse response = new RestResponse { Content = data.ToString() }", span="244-244"];
n141 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", label="JsonDeserializer d = new JsonDeserializer()", span="243-243"];
n150 [cluster="System.DateTime.ToString()", label="Entry System.DateTime.ToString()", span="0-0"];
n143 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", label="GenericWithList<DateTime> p = d.Deserialize<GenericWithList<DateTime>>(response)", span="245-245"];
n146 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", label="Assert.AreEqual(DateTimeKind.Utc, p.Items[2].Kind)", span="249-249"];
n147 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", label="Assert.AreEqual(DateTimeKind.Utc, p.Items[3].Kind)", span="250-250"];
n148 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", span="228-228"];
n152 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", span="254-254"];
n153 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", label="string doc = CreateJsonWithNullValues()", span="256-256"];
n154 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", label="JsonDeserializer json = new JsonDeserializer()", span="257-257"];
n155 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", label="NullableValues output = json.Deserialize<NullableValues>(new RestResponse { Content = doc })", span="258-258"];
n160 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", label="Entry RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", span="960-960"];
n156 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", label="Assert.Null(output.Id)", span="260-260"];
n157 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", label="Assert.Null(output.StartDate)", span="261-261"];
n158 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", label="Assert.Null(output.UniqueId)", span="262-262"];
n159 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", span="254-254"];
n605 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", label="JsonObject doc = new JsonObject()", span="962-962"];
n606 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", label="doc[''Id''] = null", span="964-964"];
n607 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", label="doc[''StartDate''] = null", span="965-965"];
n608 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", label="doc[''UniqueId''] = null", span="966-966"];
n609 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", label="return doc.ToString();", span="968-968"];
n610 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", label="Exit RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", span="960-960"];
n162 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", span="266-266"];
n163 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", label="string doc = CreateJsonWithEmptyValues()", span="268-268"];
n164 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", label="JsonDeserializer json = new JsonDeserializer()", span="269-269"];
n165 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", label="NullableValues output = json.Deserialize<NullableValues>(new RestResponse { Content = doc })", span="270-270"];
n170 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithEmptyValues()", label="Entry RestSharp.Tests.JsonTests.CreateJsonWithEmptyValues()", span="971-971"];
n166 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", label="Assert.Null(output.Id)", span="272-272"];
n167 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", label="Assert.Null(output.StartDate)", span="273-273"];
n168 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", label="Assert.Null(output.UniqueId)", span="274-274"];
n169 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", span="266-266"];
n611 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithEmptyValues()", label="JsonObject doc = new JsonObject()", span="973-973"];
n612 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithEmptyValues()", label="doc[''Id''] = ''''", span="975-975"];
n613 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithEmptyValues()", label="doc[''StartDate''] = ''''", span="976-976"];
n614 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithEmptyValues()", label="doc[''UniqueId''] = ''''", span="977-977"];
n615 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithEmptyValues()", label="return doc.ToString();", span="979-979"];
n616 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithEmptyValues()", label="Exit RestSharp.Tests.JsonTests.CreateJsonWithEmptyValues()", span="971-971"];
n171 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", span="278-278"];
n172 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", label="string doc = CreateJsonWithoutEmptyValues()", span="280-280"];
n173 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", label="JsonDeserializer json = new JsonDeserializer()", span="281-281"];
n174 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", label="NullableValues output = json.Deserialize<NullableValues>(new RestResponse { Content = doc })", span="282-282"];
n183 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", label="Entry RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", span="982-982"];
n175 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", label="Assert.NotNull(output.Id)", span="284-284"];
n176 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", label="Assert.NotNull(output.StartDate)", span="285-285"];
n177 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", label="Assert.NotNull(output.UniqueId)", span="286-286"];
n178 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", label="Assert.AreEqual(123, output.Id)", span="288-288"];
n179 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", label="Assert.NotNull(output.StartDate)", span="289-289"];
n180 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", label="Assert.AreEqual(\r\n                new DateTime(2010, 2, 21, 9, 35, 00, DateTimeKind.Utc),\r\n                output.StartDate.Value)", span="290-292"];
n181 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", label="Assert.AreEqual(new Guid(GUID_STRING), output.UniqueId)", span="293-293"];
n182 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", span="278-278"];
n617 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", label="JsonObject doc = new JsonObject()", span="984-984"];
n618 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", label="doc[''Id''] = 123", span="986-986"];
n619 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", label="doc[''StartDate''] = new DateTime(2010, 2, 21, 9, 35, 00, DateTimeKind.Utc)", span="987-987"];
n620 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", label="doc[''UniqueId''] = new Guid(GUID_STRING).ToString()", span="988-988"];
n621 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", label="return doc.ToString();", span="990-990"];
n604 [cluster="System.Guid.ToString()", label="Entry System.Guid.ToString()", span="0-0"];
n622 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", label="Exit RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", span="982-982"];
n184 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Json_Using_DeserializeAs_Attribute()", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Json_Using_DeserializeAs_Attribute()", span="297-297"];
n185 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Json_Using_DeserializeAs_Attribute()", label="string content = ''{\''sid\'':\''asdasdasdasdasdasdasda\'',\''friendlyName\'':\''VeryNiceName\'',\''oddballPropertyName\'':\''blahblah\''}''", span="299-299"];
n186 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Json_Using_DeserializeAs_Attribute()", label="JsonDeserializer json = new JsonDeserializer { RootElement = ''users'' }", span="300-300"];
n187 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Json_Using_DeserializeAs_Attribute()", label="Oddball output = json.Deserialize<Oddball>(new RestResponse { Content = content })", span="301-301"];
n188 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Json_Using_DeserializeAs_Attribute()", label="Assert.NotNull(output)", span="303-303"];
n189 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Json_Using_DeserializeAs_Attribute()", label="Assert.AreEqual(''blahblah'', output.GoodPropertyName)", span="304-304"];
n190 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Json_Using_DeserializeAs_Attribute()", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Json_Using_DeserializeAs_Attribute()", span="297-297"];
n191 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", span="308-308"];
n192 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", label="CultureInfo culture = CultureInfo.InvariantCulture", span="310-310"];
n193 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", label="string format = ''dd yyyy MMM, hh:mm ss tt''", span="311-311"];
n195 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", label="var formatted = new { StartDate = date.ToString(format, culture) }", span="313-313"];
n198 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", label="JsonDeserializer json = new JsonDeserializer\r\n                                    {\r\n                                        \\nDateFormat = format,\r\n                                        Culture = culture\r\n                                    }", span="316-320"];
n194 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", label="DateTime date = new DateTime(2010, 2, 8, 11, 11, 11)", span="312-312"];
n200 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", label="Assert.AreEqual(date, output.StartDate)", span="323-323"];
n196 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", label="string data = SimpleJson.SerializeObject(formatted)", span="314-314"];
n202 [cluster="System.DateTime.ToString(string, System.IFormatProvider)", label="Entry System.DateTime.ToString(string, System.IFormatProvider)", span="0-0"];
n197 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", label="RestResponse response = new RestResponse { Content = data }", span="315-315"];
n203 [cluster="RestSharp.Tests.SimpleJson.SerializeObject(object)", label="Entry RestSharp.Tests.SimpleJson.SerializeObject(object)", span="610-610"];
n199 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", label="PersonForJson output = json.Deserialize<PersonForJson>(response)", span="321-321"];
n201 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", span="308-308"];
n204 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", span="327-327"];
n205 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", label="string data = File.ReadAllText(Path.Combine(''SampleData'', ''jsonarray.txt''))", span="329-329"];
n206 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", label="RestResponse response = new RestResponse { Content = data }", span="330-330"];
n207 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", label="JsonDeserializer json = new JsonDeserializer()", span="331-331"];
n208 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", label="List<status> output = json.Deserialize<List<status>>(response)", span="332-332"];
n209 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", label="Assert.AreEqual(4, output.Count)", span="334-334"];
n210 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", span="327-327"];
n211 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_Inherited_List()", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_Inherited_List()", span="338-338"];
n212 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_Inherited_List()", label="string data = File.ReadAllText(Path.Combine(''SampleData'', ''jsonarray.txt''))", span="340-340"];
n213 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_Inherited_List()", label="RestResponse response = new RestResponse { Content = data }", span="341-341"];
n214 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_Inherited_List()", label="JsonDeserializer json = new JsonDeserializer()", span="342-342"];
n215 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_Inherited_List()", label="StatusList output = json.Deserialize<StatusList>(response)", span="343-343"];
n216 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_Inherited_List()", label="Assert.AreEqual(4, output.Count)", span="345-345"];
n217 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_Inherited_List()", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_Inherited_List()", span="338-338"];
n218 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", span="349-349"];
n219 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", label="string data = File.ReadAllText(Path.Combine(''SampleData'', ''jsonenums.txt''))", span="351-351"];
n220 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", label="RestResponse response = new RestResponse { Content = data }", span="352-352"];
n221 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", label="JsonDeserializer json = new JsonDeserializer()", span="353-353"];
n222 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", label="JsonEnumsTestStructure output = json.Deserialize<JsonEnumsTestStructure>(response)", span="354-354"];
n223 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", label="Assert.AreEqual(Disposition.Friendly, output.Upper)", span="356-356"];
n224 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", label="Assert.AreEqual(Disposition.Friendly, output.Lower)", span="357-357"];
n225 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", label="Assert.AreEqual(Disposition.SoSo, output.CamelCased)", span="358-358"];
n226 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", label="Assert.AreEqual(Disposition.SoSo, output.Underscores)", span="359-359"];
n227 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", label="Assert.AreEqual(Disposition.SoSo, output.LowerUnderscores)", span="360-360"];
n228 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", label="Assert.AreEqual(Disposition.SoSo, output.Dashes)", span="361-361"];
n229 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", label="Assert.AreEqual(Disposition.SoSo, output.LowerDashes)", span="362-362"];
n230 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", label="Assert.AreEqual(Disposition.SoSo, output.Integer)", span="363-363"];
n231 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", span="349-349"];
n232 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", span="367-367"];
n233 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", label="string data = File.ReadAllText(Path.Combine(''SampleData'', ''jsonenumtypes.txt''))", span="369-369"];
n234 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", label="RestResponse response = new RestResponse { Content = data }", span="370-370"];
n235 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", label="JsonDeserializer json = new JsonDeserializer()", span="371-371"];
n236 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", label="JsonEnumTypesTestStructure output = json.Deserialize<JsonEnumTypesTestStructure>(response)", span="372-372"];
n237 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", label="Assert.AreEqual(ByteEnum.EnumMin, output.ByteEnumType)", span="374-374"];
n238 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", label="Assert.AreEqual(SByteEnum.EnumMin, output.SByteEnumType)", span="375-375"];
n239 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", label="Assert.AreEqual(ShortEnum.EnumMin, output.ShortEnumType)", span="376-376"];
n240 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", label="Assert.AreEqual(UShortEnum.EnumMin, output.UShortEnumType)", span="377-377"];
n241 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", label="Assert.AreEqual(IntEnum.EnumMin, output.IntEnumType)", span="378-378"];
n242 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", label="Assert.AreEqual(UIntEnum.EnumMin, output.UIntEnumType)", span="379-379"];
n243 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", label="Assert.AreEqual(LongEnum.EnumMin, output.LongEnumType)", span="380-380"];
n244 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", label="Assert.AreEqual(ULongEnum.EnumMin, output.ULongEnumType)", span="381-381"];
n245 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", span="367-367"];
n246 [cluster="RestSharp.Tests.JsonTests.Deserialization_Of_Undefined_Int_Value_Returns_Enum_Default()", label="Entry RestSharp.Tests.JsonTests.Deserialization_Of_Undefined_Int_Value_Returns_Enum_Default()", span="385-385"];
n247 [cluster="RestSharp.Tests.JsonTests.Deserialization_Of_Undefined_Int_Value_Returns_Enum_Default()", label="string data = @''{ ''''Integer'''' : 1024 }''", span="387-387"];
n248 [cluster="RestSharp.Tests.JsonTests.Deserialization_Of_Undefined_Int_Value_Returns_Enum_Default()", label="RestResponse response = new RestResponse { Content = data }", span="388-388"];
n249 [cluster="RestSharp.Tests.JsonTests.Deserialization_Of_Undefined_Int_Value_Returns_Enum_Default()", label="JsonDeserializer json = new JsonDeserializer()", span="389-389"];
n250 [cluster="RestSharp.Tests.JsonTests.Deserialization_Of_Undefined_Int_Value_Returns_Enum_Default()", label="JsonEnumsTestStructure result = json.Deserialize<JsonEnumsTestStructure>(response)", span="390-390"];
n251 [cluster="RestSharp.Tests.JsonTests.Deserialization_Of_Undefined_Int_Value_Returns_Enum_Default()", label="Assert.AreEqual(Disposition.Friendly, result.Integer)", span="392-392"];
n252 [cluster="RestSharp.Tests.JsonTests.Deserialization_Of_Undefined_Int_Value_Returns_Enum_Default()", label="Exit RestSharp.Tests.JsonTests.Deserialization_Of_Undefined_Int_Value_Returns_Enum_Default()", span="385-385"];
n253 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", span="396-396"];
n254 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", label="JsonObject doc = new JsonObject()", span="398-398"];
n255 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", label="doc[''Guid''] = GUID_STRING", span="400-400"];
n257 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", label="RestResponse response = new RestResponse { Content = doc.ToString() }", span="403-403"];
n256 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", label="JsonDeserializer d = new JsonDeserializer()", span="402-402"];
n258 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", label="PersonForJson p = d.Deserialize<PersonForJson>(response)", span="404-404"];
n259 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", label="Assert.AreEqual(new Guid(GUID_STRING), p.Guid)", span="406-406"];
n260 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", span="396-396"];
n261 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", span="410-410"];
n262 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", label="JsonObject doc = new JsonObject()", span="412-412"];
n263 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", label="doc[''Age''] = ''28''", span="414-414"];
n265 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", label="RestResponse response = new RestResponse { Content = doc.ToString() }", span="417-417"];
n264 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", label="JsonDeserializer d = new JsonDeserializer()", span="416-416"];
n266 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", label="PersonForJson p = d.Deserialize<PersonForJson>(response)", span="418-418"];
n267 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", label="Assert.AreEqual(28, p.Age)", span="420-420"];
n268 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", span="410-410"];
n269 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", span="424-424"];
n270 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", label="JsonObject doc = new JsonObject()", span="426-426"];
n271 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", label="doc[''IsCool''] = 1", span="428-428"];
n273 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", label="RestResponse response = new RestResponse { Content = doc.ToString() }", span="431-431"];
n272 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", label="JsonDeserializer d = new JsonDeserializer()", span="430-430"];
n274 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", label="PersonForJson p = d.Deserialize<PersonForJson>(response)", span="432-432"];
n275 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", label="Assert.True(p.IsCool)", span="434-434"];
n276 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", span="424-424"];
n277 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", span="438-438"];
n278 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", label="string doc = CreateJson()", span="440-440"];
n279 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", label="JsonDeserializer d = new JsonDeserializer()", span="441-441"];
n280 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", label="RestResponse response = new RestResponse { Content = doc }", span="442-442"];
n303 [cluster="RestSharp.Tests.JsonTests.CreateJson()", label="Entry RestSharp.Tests.JsonTests.CreateJson()", span="912-912"];
n281 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", label="PersonForJson p = d.Deserialize<PersonForJson>(response)", span="443-443"];
n282 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", label="Assert.AreEqual(''John Sheehan'', p.Name)", span="445-445"];
n283 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", label="Assert.AreEqual(new DateTime(2009, 9, 25, 0, 6, 1, DateTimeKind.Utc), p.StartDate)", span="446-446"];
n284 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", label="Assert.AreEqual(28, p.Age)", span="447-447"];
n285 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", label="Assert.AreEqual(long.MaxValue, p.BigNumber)", span="448-448"];
n286 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", label="Assert.AreEqual(99.9999m, p.Percent)", span="449-449"];
n287 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", label="Assert.AreEqual(false, p.IsCool)", span="450-450"];
n288 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", label="Assert.AreEqual(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="451-451"];
n289 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", label="Assert.AreEqual(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="452-452"];
n290 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", label="Assert.AreEqual(Guid.Empty, p.EmptyGuid)", span="453-453"];
n291 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", label="Assert.AreEqual(new Guid(GUID_STRING), p.Guid)", span="454-454"];
n292 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", label="Assert.AreEqual(Order.Third, p.Order)", span="455-455"];
n293 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", label="Assert.AreEqual(Disposition.SoSo, p.Disposition)", span="456-456"];
n294 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", label="Assert.NotNull(p.Friends)", span="457-457"];
n295 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", label="Assert.AreEqual(10, p.Friends.Count)", span="458-458"];
n296 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", label="Assert.NotNull(p.BestFriend)", span="459-459"];
n297 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", label="Assert.AreEqual(''The Fonz'', p.BestFriend.Name)", span="460-460"];
n298 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", label="Assert.AreEqual(1952, p.BestFriend.Since)", span="461-461"];
n299 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", label="Assert.IsNotEmpty(p.Foes)", span="462-462"];
n300 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", label="Assert.AreEqual(''Foe 1'', p.Foes[''dict1''].Nickname)", span="463-463"];
n301 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", label="Assert.AreEqual(''Foe 2'', p.Foes[''dict2''].Nickname)", span="464-464"];
n304 [cluster="System.Uri.Uri(string, System.UriKind)", label="Entry System.Uri.Uri(string, System.UriKind)", span="0-0"];
n302 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", span="438-438"];
n578 [cluster="RestSharp.Tests.JsonTests.CreateJson()", label="JsonObject doc = new JsonObject()", span="914-914"];
n579 [cluster="RestSharp.Tests.JsonTests.CreateJson()", label="doc[''Name''] = ''John Sheehan''", span="916-916"];
n580 [cluster="RestSharp.Tests.JsonTests.CreateJson()", label="doc[''StartDate''] = new DateTime(2009, 9, 25, 0, 6, 1, DateTimeKind.Utc)", span="917-917"];
n581 [cluster="RestSharp.Tests.JsonTests.CreateJson()", label="doc[''Age''] = 28", span="918-918"];
n582 [cluster="RestSharp.Tests.JsonTests.CreateJson()", label="doc[''Percent''] = 99.9999m", span="919-919"];
n583 [cluster="RestSharp.Tests.JsonTests.CreateJson()", label="doc[''BigNumber''] = long.MaxValue", span="920-920"];
n584 [cluster="RestSharp.Tests.JsonTests.CreateJson()", label="doc[''IsCool''] = false", span="921-921"];
n585 [cluster="RestSharp.Tests.JsonTests.CreateJson()", label="doc[''Ignore''] = ''dummy''", span="922-922"];
n586 [cluster="RestSharp.Tests.JsonTests.CreateJson()", label="doc[''ReadOnly''] = ''dummy''", span="923-923"];
n587 [cluster="RestSharp.Tests.JsonTests.CreateJson()", label="doc[''Url''] = ''http://example.com''", span="924-924"];
n588 [cluster="RestSharp.Tests.JsonTests.CreateJson()", label="doc[''UrlPath''] = ''/foo/bar''", span="925-925"];
n589 [cluster="RestSharp.Tests.JsonTests.CreateJson()", label="doc[''Order''] = ''third''", span="926-926"];
n590 [cluster="RestSharp.Tests.JsonTests.CreateJson()", label="doc[''Disposition''] = ''so_so''", span="927-927"];
n591 [cluster="RestSharp.Tests.JsonTests.CreateJson()", label="doc[''Guid''] = new Guid(GUID_STRING).ToString()", span="928-928"];
n592 [cluster="RestSharp.Tests.JsonTests.CreateJson()", label="doc[''EmptyGuid''] = ''''", span="929-929"];
n593 [cluster="RestSharp.Tests.JsonTests.CreateJson()", label="doc[''BestFriend''] = new JsonObject\r\n                                {\r\n                                    { ''Name'', ''The \\nFonz'' },\r\n                                    { ''Since'', 1952 }\r\n                                }", span="930-934"];
n599 [cluster="RestSharp.Tests.JsonTests.CreateJson()", label="doc[''Friends''] = friendsArray", span="947-947"];
n601 [cluster="RestSharp.Tests.JsonTests.CreateJson()", label="doc[''Foes''] = foesArray", span="955-955"];
n602 [cluster="RestSharp.Tests.JsonTests.CreateJson()", label="return doc.ToString();", span="957-957"];
n594 [cluster="RestSharp.Tests.JsonTests.CreateJson()", label="JsonArray friendsArray = new JsonArray()", span="936-936"];
n595 [cluster="RestSharp.Tests.JsonTests.CreateJson()", label="int i = 0", span="938-938"];
n597 [cluster="RestSharp.Tests.JsonTests.CreateJson()", label="friendsArray.Add(new JsonObject\r\n                                 {\r\n                                     { ''Name'', ''Friend'' + \\ni },\r\n                                     { ''Since'', DateTime.Now.Year - i }\r\n                                 })", span="940-944"];
n596 [cluster="RestSharp.Tests.JsonTests.CreateJson()", label="i < 10", span="938-938"];
n598 [cluster="RestSharp.Tests.JsonTests.CreateJson()", label="i++", span="938-938"];
n538 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", label="int i = 0", span="827-827"];
n547 [cluster="System.Collections.Generic.List<T>.Add(T)", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
n600 [cluster="RestSharp.Tests.JsonTests.CreateJson()", label="JsonObject foesArray = new JsonObject\r\n                                   {\r\n                                       { ''dict1'', \\nnew JsonObject { { ''nickname'', ''Foe 1'' } } },\r\n                                       { ''dict2'', new JsonObject { { ''nickname'', ''\\nFoe 2'' } } }\r\n                                   }", span="949-953"];
n603 [cluster="RestSharp.Tests.JsonTests.CreateJson()", label="Exit RestSharp.Tests.JsonTests.CreateJson()", span="912-912"];
n305 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root_Alternative_Culture()", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root_Alternative_Culture()", span="468-468"];
n306 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root_Alternative_Culture()", label="new CultureChange(ALTERNATIVE_CULTURE)", span="470-470"];
n307 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root_Alternative_Culture()", label="this.Can_Deserialize_With_Default_Root()", span="472-472"];
n309 [cluster="RestSharp.Tests.CultureChange.CultureChange(string)", label="Entry RestSharp.Tests.CultureChange.CultureChange(string)", span="10-10"];
n308 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root_Alternative_Culture()", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root_Alternative_Culture()", span="468-468"];
n310 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", span="477-477"];
n311 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", label="string data = File.ReadAllText(Path.Combine(''SampleData'', ''underscore_prefix.txt''))", span="479-479"];
n312 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", label="RestResponse response = new RestResponse { Content = data }", span="480-480"];
n313 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", label="JsonDeserializer json = new JsonDeserializer { RootElement = ''User'' }", span="481-481"];
n314 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", label="SoUser output = json.Deserialize<SoUser>(response)", span="482-482"];
n315 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", label="Assert.AreEqual(''John Sheehan'', output.DisplayName)", span="484-484"];
n316 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", label="Assert.AreEqual(1786, output.Id)", span="485-485"];
n317 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", span="477-477"];
n318 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", span="489-489"];
n319 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", label="string doc = CreateJsonWithUnderscores()", span="491-491"];
n320 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", label="JsonDeserializer d = new JsonDeserializer()", span="492-492"];
n321 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", label="RestResponse response = new RestResponse { Content = doc }", span="493-493"];
n340 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", label="Entry RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", span="805-805"];
n322 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", label="PersonForJson p = d.Deserialize<PersonForJson>(response)", span="494-494"];
n323 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", label="Assert.AreEqual(''John Sheehan'', p.Name)", span="496-496"];
n324 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", label="Assert.AreEqual(new DateTime(2009, 9, 25, 0, 6, 1), p.StartDate)", span="497-497"];
n325 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", label="Assert.AreEqual(28, p.Age)", span="498-498"];
n326 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", label="Assert.AreEqual(long.MaxValue, p.BigNumber)", span="499-499"];
n327 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", label="Assert.AreEqual(99.9999m, p.Percent)", span="500-500"];
n328 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", label="Assert.AreEqual(false, p.IsCool)", span="501-501"];
n329 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", label="Assert.AreEqual(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="502-502"];
n330 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", label="Assert.AreEqual(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="503-503"];
n331 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", label="Assert.NotNull(p.Friends)", span="504-504"];
n332 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", label="Assert.AreEqual(10, p.Friends.Count)", span="505-505"];
n333 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", label="Assert.NotNull(p.BestFriend)", span="506-506"];
n334 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", label="Assert.AreEqual(''The Fonz'', p.BestFriend.Name)", span="507-507"];
n335 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", label="Assert.AreEqual(1952, p.BestFriend.Since)", span="508-508"];
n336 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", label="Assert.IsNotEmpty(p.Foes)", span="509-509"];
n337 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", label="Assert.AreEqual(''Foe 1'', p.Foes[''dict1''].Nickname)", span="510-510"];
n338 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", label="Assert.AreEqual(''Foe 2'', p.Foes[''dict2''].Nickname)", span="511-511"];
n339 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", span="489-489"];
n525 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", label="JsonObject doc = new JsonObject()", span="807-807"];
n526 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", label="doc[''name''] = ''John Sheehan''", span="809-809"];
n527 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", label="doc[''start_date''] = new DateTime(2009, 9, 25, 0, 6, 1, DateTimeKind.Utc)", span="810-810"];
n528 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", label="doc[''age''] = 28", span="811-811"];
n529 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", label="doc[''percent''] = 99.9999m", span="812-812"];
n530 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", label="doc[''big_number''] = long.MaxValue", span="813-813"];
n531 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", label="doc[''is_cool''] = false", span="814-814"];
n532 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", label="doc[''ignore''] = ''dummy''", span="815-815"];
n533 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", label="doc[''read_only''] = ''dummy''", span="816-816"];
n534 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", label="doc[''url''] = ''http://example.com''", span="817-817"];
n535 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", label="doc[''url_path''] = ''/foo/bar''", span="818-818"];
n536 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", label="doc[''best_friend''] = new JsonObject\r\n                                 {\r\n                                     { ''name'', ''\\nThe Fonz'' },\r\n                                     { ''since'', 1952 }\r\n                                 }", span="819-823"];
n542 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", label="doc[''friends''] = friendsArray", span="836-836"];
n544 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", label="doc[''foes''] = foesArray", span="844-844"];
n545 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", label="return doc.ToString();", span="846-846"];
n537 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", label="JsonArray friendsArray = new JsonArray()", span="825-825"];
n540 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", label="friendsArray.Add(new JsonObject\r\n                                 {\r\n                                     { ''name'', ''Friend'' + \\ni },\r\n                                     { ''since'', DateTime.Now.Year - i }\r\n                                 })", span="829-833"];
n539 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", label="i < 10", span="827-827"];
n541 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", label="i++", span="827-827"];
n543 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", label="JsonObject foesArray = new JsonObject\r\n                                   {\r\n                                       { ''dict1'', \\nnew JsonObject { { ''nickname'', ''Foe 1'' } } },\r\n                                       { ''dict2'', new JsonObject { { ''nickname'', ''\\nFoe 2'' } } }\r\n                                   }", span="838-842"];
n546 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", label="Exit RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", span="805-805"];
n341 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root_Alternative_Culture()", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root_Alternative_Culture()", span="515-515"];
n342 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root_Alternative_Culture()", label="new CultureChange(ALTERNATIVE_CULTURE)", span="517-517"];
n343 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root_Alternative_Culture()", label="this.Can_Deserialize_Names_With_Underscores_With_Default_Root()", span="519-519"];
n344 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root_Alternative_Culture()", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root_Alternative_Culture()", span="515-515"];
n345 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", span="524-524"];
n346 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", label="string doc = CreateJsonWithDashes()", span="526-526"];
n347 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", label="JsonDeserializer d = new JsonDeserializer()", span="527-527"];
n348 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", label="RestResponse response = new RestResponse { Content = doc }", span="528-528"];
n366 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", label="Entry RestSharp.Tests.JsonTests.CreateJsonWithDashes()", span="849-849"];
n349 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", label="PersonForJson p = d.Deserialize<PersonForJson>(response)", span="529-529"];
n350 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", label="Assert.AreEqual(''John Sheehan'', p.Name)", span="531-531"];
n351 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", label="Assert.AreEqual(28, p.Age)", span="533-533"];
n352 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", label="Assert.AreEqual(long.MaxValue, p.BigNumber)", span="534-534"];
n353 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", label="Assert.AreEqual(99.9999m, p.Percent)", span="535-535"];
n354 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", label="Assert.AreEqual(false, p.IsCool)", span="536-536"];
n355 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", label="Assert.AreEqual(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="537-537"];
n356 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", label="Assert.AreEqual(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="538-538"];
n357 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", label="Assert.NotNull(p.Friends)", span="539-539"];
n358 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", label="Assert.AreEqual(10, p.Friends.Count)", span="540-540"];
n359 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", label="Assert.NotNull(p.BestFriend)", span="541-541"];
n360 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", label="Assert.AreEqual(''The Fonz'', p.BestFriend.Name)", span="542-542"];
n361 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", label="Assert.AreEqual(1952, p.BestFriend.Since)", span="543-543"];
n362 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", label="Assert.IsNotEmpty(p.Foes)", span="544-544"];
n363 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", label="Assert.AreEqual(''Foe 1'', p.Foes[''dict1''].Nickname)", span="545-545"];
n364 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", label="Assert.AreEqual(''Foe 2'', p.Foes[''dict2''].Nickname)", span="546-546"];
n365 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", span="524-524"];
n548 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", label="JsonObject doc = new JsonObject()", span="851-851"];
n549 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", label="doc[''name''] = ''John Sheehan''", span="853-853"];
n550 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", label="doc[''start-date''] = new DateTime(2009, 9, 25, 0, 6, 1, DateTimeKind.Utc)", span="854-854"];
n551 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", label="doc[''age''] = 28", span="855-855"];
n552 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", label="doc[''percent''] = 99.9999m", span="856-856"];
n553 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", label="doc[''big-number''] = long.MaxValue", span="857-857"];
n554 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", label="doc[''is-cool''] = false", span="858-858"];
n555 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", label="doc[''ignore''] = ''dummy''", span="859-859"];
n556 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", label="doc[''read-only''] = ''dummy''", span="860-860"];
n557 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", label="doc[''url''] = ''http://example.com''", span="861-861"];
n558 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", label="doc[''url-path''] = ''/foo/bar''", span="862-862"];
n559 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", label="doc[''best-friend''] = new JsonObject\r\n                                 {\r\n                                     { ''name'', ''\\nThe Fonz'' },\r\n                                     { ''since'', 1952 }\r\n                                 }", span="863-867"];
n565 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", label="doc[''friends''] = friendsArray", span="880-880"];
n567 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", label="doc[''foes''] = foesArray", span="888-888"];
n568 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", label="return doc.ToString();", span="890-890"];
n560 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", label="JsonArray friendsArray = new JsonArray()", span="869-869"];
n561 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", label="int i = 0", span="871-871"];
n563 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", label="friendsArray.Add(new JsonObject\r\n                                 {\r\n                                     { ''name'', ''Friend'' + \\ni },\r\n                                     { ''since'', DateTime.Now.Year - i }\r\n                                 })", span="873-877"];
n562 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", label="i < 10", span="871-871"];
n564 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", label="i++", span="871-871"];
n566 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", label="JsonObject foesArray = new JsonObject\r\n                                   {\r\n                                       { ''dict1'', \\nnew JsonObject { { ''nickname'', ''Foe 1'' } } },\r\n                                       { ''dict2'', new JsonObject { { ''nickname'', ''\\nFoe 2'' } } }\r\n                                   }", span="882-886"];
n569 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", label="Exit RestSharp.Tests.JsonTests.CreateJsonWithDashes()", span="849-849"];
n367 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root_Alternative_Culture()", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root_Alternative_Culture()", span="550-550"];
n368 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root_Alternative_Culture()", label="new CultureChange(ALTERNATIVE_CULTURE)", span="552-552"];
n369 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root_Alternative_Culture()", label="this.Can_Deserialize_Names_With_Dashes_With_Default_Root()", span="554-554"];
n370 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root_Alternative_Culture()", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root_Alternative_Culture()", span="550-550"];
n371 [cluster="RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", label="Entry RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", span="559-559"];
n372 [cluster="RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", label="string doc = CreateJson()", span="561-561"];
n373 [cluster="RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", label="JsonDeserializer d = new JsonDeserializer()", span="562-562"];
n374 [cluster="RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", label="RestResponse response = new RestResponse { Content = doc }", span="563-563"];
n375 [cluster="RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", label="PersonForJson p = d.Deserialize<PersonForJson>(response)", span="564-564"];
n376 [cluster="RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", label="Assert.Null(p.IgnoreProxy)", span="566-566"];
n377 [cluster="RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", label="Exit RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", span="559-559"];
n378 [cluster="RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", label="Entry RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", span="570-570"];
n379 [cluster="RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", label="string doc = CreateJson()", span="572-572"];
n380 [cluster="RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", label="RestResponse response = new RestResponse { Content = doc }", span="573-573"];
n381 [cluster="RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", label="JsonDeserializer d = new JsonDeserializer()", span="574-574"];
n382 [cluster="RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", label="PersonForJson p = d.Deserialize<PersonForJson>(response)", span="575-575"];
n383 [cluster="RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", label="Assert.Null(p.ReadOnlyProxy)", span="577-577"];
n384 [cluster="RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", label="Exit RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", span="570-570"];
n385 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", span="581-581"];
n386 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", label="TimeSpanTestStructure payload = GetPayLoad<TimeSpanTestStructure>(''timespans.txt'')", span="583-583"];
n387 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", label="Assert.AreEqual(new TimeSpan(468006), payload.Tick)", span="585-585"];
n388 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", label="Assert.AreEqual(new TimeSpan(0, 0, 0, 0, 125), payload.Millisecond)", span="586-586"];
n389 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", label="Assert.AreEqual(new TimeSpan(0, 0, 8), payload.Second)", span="587-587"];
n390 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", label="Assert.AreEqual(new TimeSpan(0, 55, 2), payload.Minute)", span="588-588"];
n391 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", label="Assert.AreEqual(new TimeSpan(21, 30, 7), payload.Hour)", span="589-589"];
n392 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", label="Assert.Null(payload.NullableWithoutValue)", span="590-590"];
n393 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", label="Assert.NotNull(payload.NullableWithValue)", span="591-591"];
n394 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", label="Assert.AreEqual(new TimeSpan(21, 30, 7), payload.NullableWithValue.Value)", span="592-592"];
n395 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", label="Assert.AreEqual(new TimeSpan(0, 0, 10), payload.IsoSecond)", span="593-593"];
n396 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", label="Assert.AreEqual(new TimeSpan(0, 3, 23), payload.IsoMinute)", span="594-594"];
n397 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", label="Assert.AreEqual(new TimeSpan(5, 4, 9), payload.IsoHour)", span="595-595"];
n398 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", label="Assert.AreEqual(new TimeSpan(1, 19, 27, 13), payload.IsoDay)", span="596-596"];
n399 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", label="Assert.AreEqual(new TimeSpan(64, 3, 14, 19), payload.IsoMonth)", span="598-598"];
n400 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", label="Assert.AreEqual(new TimeSpan(365, 9, 27, 48), payload.IsoYear)", span="600-600"];
n402 [cluster="RestSharp.Tests.JsonTests.GetPayLoad<T>(string)", label="Entry RestSharp.Tests.JsonTests.GetPayLoad<T>(string)", span="1029-1029"];
n403 [cluster="System.TimeSpan.TimeSpan(long)", label="Entry System.TimeSpan.TimeSpan(long)", span="0-0"];
n404 [cluster="System.TimeSpan.TimeSpan(int, int, int, int, int)", label="Entry System.TimeSpan.TimeSpan(int, int, int, int, int)", span="0-0"];
n405 [cluster="System.TimeSpan.TimeSpan(int, int, int)", label="Entry System.TimeSpan.TimeSpan(int, int, int)", span="0-0"];
n406 [cluster="System.TimeSpan.TimeSpan(int, int, int, int)", label="Entry System.TimeSpan.TimeSpan(int, int, int, int)", span="0-0"];
n401 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", span="581-581"];
d424 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Millisecond_Dates()", color=green, community=0, label="string doc = CreateUnixDateMillisecondsJson()", prediction=0, span="628-628"];
d425 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Millisecond_Dates()", color=green, community=0, label="JsonDeserializer d = new JsonDeserializer()", prediction=1, span="629-629"];
d426 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Millisecond_Dates()", color=green, community=0, label="RestResponse response = new RestResponse { Content = doc }", prediction=2, span="630-630"];
d430 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateMillisecondsJson()", label="Entry RestSharp.Tests.JsonTests.CreateUnixDateMillisecondsJson()", span="923-923"];
d423 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Millisecond_Dates()", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Millisecond_Dates()", span="626-626"];
d427 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Millisecond_Dates()", color=green, community=0, label="Birthdate bd = d.Deserialize<Birthdate>(response)", prediction=3, span="631-631"];
d428 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Millisecond_Dates()", color=green, community=0, label="Assert.AreEqual(new DateTime(2011, 6, 30, 8, 15, 46, DateTimeKind.Utc), bd.Value)", prediction=4, span="633-633"];
d429 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Millisecond_Dates()", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Millisecond_Dates()", span="626-626"];
n637 [cluster="RestSharp.Tests.JsonTests.GetPayLoad<T>(string)", label="string doc = File.ReadAllText(Path.Combine(''SampleData'', fileName))", span="1031-1031"];
n424 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_JsonNet_Dates()", label="PersonForJson person = GetPayLoad<PersonForJson>(''person.json.txt'')", span="628-628"];
n429 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime()", label="DateTimeTestStructure payload = GetPayLoad<DateTimeTestStructure>(''datetimes.txt'')", span="638-638"];
n447 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeLocal()", label="Iso8601DateTimeTestStructure payload = GetPayLoad<Iso8601DateTimeTestStructure>(''iso8601datetimes.txt'')", span="677-677"];
n498 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Object_Type_Property_With_Primitive_Vale()", label="ObjectProperties payload = GetPayLoad<ObjectProperties>(''objectproperty.txt'')", span="765-765"];
n638 [cluster="RestSharp.Tests.JsonTests.GetPayLoad<T>(string)", label="RestResponse response = new RestResponse { Content = doc }", span="1032-1032"];
n639 [cluster="RestSharp.Tests.JsonTests.GetPayLoad<T>(string)", label="JsonDeserializer d = new JsonDeserializer()", span="1033-1033"];
n640 [cluster="RestSharp.Tests.JsonTests.GetPayLoad<T>(string)", label="return d.Deserialize<T>(response);", span="1035-1035"];
n641 [cluster="RestSharp.Tests.JsonTests.GetPayLoad<T>(string)", label="Exit RestSharp.Tests.JsonTests.GetPayLoad<T>(string)", span="1029-1029"];
n407 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", span="604-604"];
n408 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", label="string doc = CreateIsoDateJson()", span="606-606"];
n409 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", label="JsonDeserializer d = new JsonDeserializer()", span="607-607"];
n410 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", label="RestResponse response = new RestResponse { Content = doc }", span="608-608"];
n414 [cluster="RestSharp.Tests.JsonTests.CreateIsoDateJson()", label="Entry RestSharp.Tests.JsonTests.CreateIsoDateJson()", span="893-893"];
n411 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", label="Birthdate bd = d.Deserialize<Birthdate>(response)", span="609-609"];
n412 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", label="Assert.AreEqual(new DateTime(1910, 9, 25, 9, 30, 25, DateTimeKind.Utc), bd.Value)", span="611-611"];
n413 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", span="604-604"];
n570 [cluster="RestSharp.Tests.JsonTests.CreateIsoDateJson()", label="Birthdate bd = new Birthdate\r\n                           {\r\n                               Value = new DateTime(1910, 9, 25, \\n9, 30, 25, DateTimeKind.Utc)\r\n                           }", span="895-898"];
n571 [cluster="RestSharp.Tests.JsonTests.CreateIsoDateJson()", label="return SimpleJson.SerializeObject(bd);", span="900-900"];
n573 [cluster="RestSharp.Tests.SampleClasses.Birthdate.Birthdate()", label="Entry RestSharp.Tests.SampleClasses.Birthdate.Birthdate()", span="171-171"];
n572 [cluster="RestSharp.Tests.JsonTests.CreateIsoDateJson()", label="Exit RestSharp.Tests.JsonTests.CreateIsoDateJson()", span="893-893"];
n415 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", span="615-615"];
n416 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", label="string doc = CreateUnixDateJson()", span="617-617"];
n417 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", label="JsonDeserializer d = new JsonDeserializer()", span="618-618"];
n418 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", label="RestResponse response = new RestResponse { Content = doc }", span="619-619"];
n422 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateJson()", label="Entry RestSharp.Tests.JsonTests.CreateUnixDateJson()", span="903-903"];
n419 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", label="Birthdate bd = d.Deserialize<Birthdate>(response)", span="620-620"];
n420 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", label="Assert.AreEqual(new DateTime(2011, 6, 30, 8, 15, 46, DateTimeKind.Utc), bd.Value)", span="622-622"];
n421 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", span="615-615"];
d586 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateMillisecondsJson()", color=green, community=0, label="JsonObject doc = new JsonObject()", prediction=5, span="925-925"];
d587 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateMillisecondsJson()", color=green, community=0, label="doc[''Value''] = 1309421746000", prediction=6, span="927-927"];
d588 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateMillisecondsJson()", color=green, community=0, label="return doc.ToString();", prediction=5, span="929-929"];
d589 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateMillisecondsJson()", label="Exit RestSharp.Tests.JsonTests.CreateUnixDateMillisecondsJson()", span="923-923"];
n574 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateJson()", label="JsonObject doc = new JsonObject()", span="905-905"];
n575 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateJson()", label="doc[''Value''] = 1309421746", span="907-907"];
n576 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateJson()", label="return doc.ToString();", span="909-909"];
n577 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateJson()", label="Exit RestSharp.Tests.JsonTests.CreateUnixDateJson()", span="903-903"];
n423 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_JsonNet_Dates()", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_JsonNet_Dates()", span="626-626"];
n425 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_JsonNet_Dates()", label="Assert.AreEqual(\r\n                new DateTime(2011, 6, 30, 8, 15, 46, 929, DateTimeKind.Utc),\r\n                person.StartDate)", span="630-632"];
n426 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_JsonNet_Dates()", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_JsonNet_Dates()", span="626-626"];
n427 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, int, System.DateTimeKind)", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
n428 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime()", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_DateTime()", span="636-636"];
n430 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime()", label="Assert.AreEqual(\r\n                new DateTime(2011, 6, 30, 8, 15, 46, 929, DateTimeKind.Utc),\r\n                payload.DateTime)", span="640-642"];
n431 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime()", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_DateTime()", span="636-636"];
n432 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", span="646-646"];
n433 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", label="DateTimeTestStructure payload = GetPayLoad<DateTimeTestStructure>(''datetimes.txt'')", span="648-648"];
n434 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", label="Assert.NotNull(payload.NullableDateTimeWithValue)", span="650-650"];
n435 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", label="Assert.AreEqual(\r\n                new DateTime(2011, 6, 30, 8, 15, 46, 929, DateTimeKind.Utc),\r\n                payload.NullableDateTimeWithValue.Value)", span="651-653"];
n436 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", span="646-646"];
n437 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Null()", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Null()", span="657-657"];
n438 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Null()", label="DateTimeTestStructure payload = GetPayLoad<DateTimeTestStructure>(''datetimes.txt'')", span="659-659"];
n439 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Null()", label="Assert.Null(payload.NullableDateTimeWithNull)", span="661-661"];
n440 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Null()", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Null()", span="657-657"];
n441 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTimeOffset()", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_DateTimeOffset()", span="665-665"];
n442 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTimeOffset()", label="DateTimeTestStructure payload = GetPayLoad<DateTimeTestStructure>(''datetimes.txt'')", span="667-667"];
n443 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTimeOffset()", label="Assert.AreEqual(\r\n                new DateTime(2011, 6, 30, 8, 15, 46, 929, DateTimeKind.Utc).ToString(''yyyy-MM-dd HH:mm:ss.fff''),\r\n                \\npayload.DateTimeOffset.ToString(''yyyy-MM-dd HH:mm:ss.fff''))", span="669-671"];
n444 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTimeOffset()", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_DateTimeOffset()", span="665-665"];
n445 [cluster="System.DateTimeOffset.ToString(string)", label="Entry System.DateTimeOffset.ToString(string)", span="0-0"];
n446 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeLocal()", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeLocal()", span="675-675"];
n448 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeLocal()", label="Assert.AreEqual(\r\n                new DateTime(2012, 7, 19, 10, 23, 25, DateTimeKind.Utc),\r\n                payload.DateTimeLocal)", span="679-681"];
n449 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeLocal()", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeLocal()", span="675-675"];
n450 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeZulu()", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeZulu()", span="685-685"];
n451 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeZulu()", label="Iso8601DateTimeTestStructure payload = GetPayLoad<Iso8601DateTimeTestStructure>(''iso8601datetimes.txt'')", span="687-687"];
n452 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeZulu()", label="Assert.AreEqual(\r\n                new DateTime(2012, 7, 19, 10, 23, 25, 544, DateTimeKind.Utc),\r\n                payload.DateTimeUtc.ToUniversalTime())", span="689-691"];
n453 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeZulu()", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeZulu()", span="685-685"];
n454 [cluster="System.DateTime.ToUniversalTime()", label="Entry System.DateTime.ToUniversalTime()", span="0-0"];
n455 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeWithOffset()", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeWithOffset()", span="695-695"];
n456 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeWithOffset()", label="Iso8601DateTimeTestStructure payload = GetPayLoad<Iso8601DateTimeTestStructure>(''iso8601datetimes.txt'')", span="697-697"];
n457 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeWithOffset()", label="Assert.AreEqual(\r\n                new DateTime(2012, 7, 19, 10, 23, 25, 544, DateTimeKind.Utc),\r\n                payload.DateTimeWithOffset.ToUniversalTime())", span="699-701"];
n458 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeWithOffset()", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeWithOffset()", span="695-695"];
n459 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", span="705-705"];
n460 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", label="DateTimeTestStructure payload = GetPayLoad<DateTimeTestStructure>(''datetimes.txt'')", span="707-707"];
n461 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", label="Assert.NotNull(payload.NullableDateTimeOffsetWithValue)", span="709-709"];
n462 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", label="Assert.AreEqual(\r\n                new DateTime(2011, 6, 30, 8, 15, 46, 929, DateTimeKind.Utc).ToString(''yyyy-MM-dd HH:mm:ss.fff''),\r\n                \\npayload.NullableDateTimeOffsetWithValue.Value.ToString(''yyyy-MM-dd HH:mm:ss.fff''))", span="710-712"];
n463 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", span="705-705"];
n464 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Null()", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Null()", span="716-716"];
n465 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Null()", label="DateTimeTestStructure payload = GetPayLoad<DateTimeTestStructure>(''datetimes.txt'')", span="718-718"];
n466 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Null()", label="Assert.Null(payload.NullableDateTimeOffsetWithNull)", span="720-720"];
n467 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Null()", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Null()", span="716-716"];
n468 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", span="724-724"];
n469 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", label="string doc = this.CreateJsonStringDictionary()", span="726-726"];
n470 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", label="JsonDeserializer d = new JsonDeserializer()", span="727-727"];
n471 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", label="RestResponse response = new RestResponse { Content = doc }", span="728-728"];
n478 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", label="Entry RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", span="993-993"];
n472 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", label="Dictionary<string, string> bd = d.Deserialize<Dictionary<string, string>>(response)", span="729-729"];
n473 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", label="Assert.AreEqual(bd[''Thing1''], ''Thing1'')", span="731-731"];
n474 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", label="Assert.AreEqual(bd[''Thing2''], ''Thing2'')", span="732-732"];
n475 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", label="Assert.AreEqual(bd[''ThingRed''], ''ThingRed'')", span="733-733"];
n476 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", label="Assert.AreEqual(bd[''ThingBlue''], ''ThingBlue'')", span="734-734"];
n477 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", span="724-724"];
n623 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", label="JsonObject doc = new JsonObject()", span="995-995"];
n624 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", label="doc[''Thing1''] = ''Thing1''", span="997-997"];
n625 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", label="doc[''Thing2''] = ''Thing2''", span="998-998"];
n626 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", label="doc[''ThingRed''] = ''ThingRed''", span="999-999"];
n627 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", label="doc[''ThingBlue''] = ''ThingBlue''", span="1000-1000"];
n628 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", label="return doc.ToString();", span="1002-1002"];
n629 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", label="Exit RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", span="993-993"];
n479 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", span="738-738"];
n480 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", label="string doc = this.CreateDynamicJsonStringDictionary()", span="740-740"];
n481 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", label="JsonDeserializer d = new JsonDeserializer()", span="741-741"];
n482 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", label="RestResponse response = new RestResponse { Content = doc }", span="742-742"];
n489 [cluster="RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", label="Entry RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", span="1005-1005"];
n483 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", label="Dictionary<string, string> bd = d.Deserialize<Dictionary<string, string>>(response)", span="743-743"];
n484 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", label="Assert.AreEqual(''[\''Value1\'',\''Value2\'']'', bd[''Thing1''])", span="745-745"];
n485 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", label="Assert.AreEqual(''Thing2'', bd[''Thing2''])", span="746-746"];
n486 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", label="Assert.AreEqual(''{\''Name\'':\''ThingRed\'',\''Color\'':\''Red\''}'', bd[''ThingRed''])", span="747-747"];
n487 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", label="Assert.AreEqual(''{\''Name\'':\''ThingBlue\'',\''Color\'':\''Blue\''}'', bd[''ThingBlue''])", span="748-748"];
n488 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", span="738-738"];
n630 [cluster="RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", label="JsonObject doc = new JsonObject()", span="1007-1007"];
n631 [cluster="RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", label="doc[''Thing1''] = new JsonArray\r\n                            {\r\n                                ''Value1'',\r\n                                ''\\nValue2''\r\n                            }", span="1009-1013"];
n632 [cluster="RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", label="doc[''Thing2''] = ''Thing2''", span="1014-1014"];
n633 [cluster="RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", label="doc[''ThingRed''] = new JsonObject\r\n                              {\r\n                                  { ''Name'', ''ThingRed'' },\r\n                                  { ''\\nColor'', ''Red'' }\r\n                              }", span="1015-1019"];
n634 [cluster="RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", label="doc[''ThingBlue''] = new JsonObject\r\n                               {\r\n                                   { ''Name'', ''ThingBlue'' },\r\n                                   { ''\\nColor'', ''Blue'' }\r\n                               }", span="1020-1024"];
n635 [cluster="RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", label="return doc.ToString();", span="1026-1026"];
n636 [cluster="RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", label="Exit RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", span="1005-1005"];
n490 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Decimal_With_Four_Zeros_After_Floating_Point()", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Decimal_With_Four_Zeros_After_Floating_Point()", span="752-752"];
n491 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Decimal_With_Four_Zeros_After_Floating_Point()", label="string json = ''{\''Value\'':0.00005557}''", span="754-754"];
n492 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Decimal_With_Four_Zeros_After_Floating_Point()", label="RestResponse response = new RestResponse { Content = json }", span="755-755"];
n493 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Decimal_With_Four_Zeros_After_Floating_Point()", label="JsonDeserializer d = new JsonDeserializer()", span="756-756"];
n494 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Decimal_With_Four_Zeros_After_Floating_Point()", label="DecimalNumber result = d.Deserialize<DecimalNumber>(response)", span="757-757"];
n495 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Decimal_With_Four_Zeros_After_Floating_Point()", label="Assert.AreEqual(result.Value, .00005557m)", span="759-759"];
n496 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Decimal_With_Four_Zeros_After_Floating_Point()", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Decimal_With_Four_Zeros_After_Floating_Point()", span="752-752"];
n497 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Object_Type_Property_With_Primitive_Vale()", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Object_Type_Property_With_Primitive_Vale()", span="763-763"];
n499 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Object_Type_Property_With_Primitive_Vale()", label="Assert.AreEqual(42L, payload.ObjectProperty)", span="767-767"];
n500 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Object_Type_Property_With_Primitive_Vale()", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Object_Type_Property_With_Primitive_Vale()", span="763-763"];
n501 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", span="771-771"];
n502 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", label="string doc = File.ReadAllText(Path.Combine(''SampleData'', ''jsondictionary.txt''))", span="773-773"];
n503 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", label="JsonDeserializer json = new JsonDeserializer { RootElement = ''response'' }", span="774-774"];
n504 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", label="EmployeeTracker output = json.Deserialize<EmployeeTracker>(new RestResponse { Content = doc })", span="775-775"];
n505 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", label="Assert.IsNotEmpty(output.EmployeesMail)", span="777-777"];
n506 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", label="Assert.IsNotEmpty(output.EmployeesTime)", span="778-778"];
n507 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", label="Assert.IsNotEmpty(output.EmployeesPay)", span="779-779"];
n508 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", span="771-771"];
n509 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Plain_Values()", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Plain_Values()", span="783-783"];
n510 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Plain_Values()", label="string json = ''\''c02bdd1e-cce3-4b9c-8473-165e6e93b92a\''''", span="785-785"];
n511 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Plain_Values()", label="RestResponse response = new RestResponse { Content = json }", span="786-786"];
n512 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Plain_Values()", label="JsonDeserializer d = new JsonDeserializer()", span="787-787"];
n513 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Plain_Values()", label="Guid result = d.Deserialize<Guid>(response)", span="788-788"];
n514 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Plain_Values()", label="Assert.AreEqual(result, new Guid(''c02bdd1e-cce3-4b9c-8473-165e6e93b92a''))", span="790-790"];
n515 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Plain_Values()", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Plain_Values()", span="783-783"];
n516 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_with_Null()", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_with_Null()", span="794-794"];
n517 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_with_Null()", label="string doc = File.ReadAllText(Path.Combine(''SampleData'', ''jsondictionary_null.txt''))", span="796-796"];
n518 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_with_Null()", label="JsonDeserializer json = new JsonDeserializer { RootElement = ''response'' }", span="797-797"];
n519 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_with_Null()", label="IDictionary<string, object> output = json.Deserialize<Dictionary<string, object>>(new RestResponse { Content = doc })", span="798-798"];
n520 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_with_Null()", label="IDictionary<string, object> dictionary = (IDictionary<string, object>)output[''SomeDictionary'']", span="800-800"];
n521 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_with_Null()", label="Assert.AreEqual(''abra'', dictionary[''NonNull''])", span="801-801"];
n522 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_with_Null()", label="Assert.IsNull(dictionary[''Null''])", span="802-802"];
n523 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_with_Null()", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_with_Null()", span="794-794"];
m0_428 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Millisecond_Dates()", color=green, community=0, file=merged, label="Assert.AreEqual(new DateTime(2011, 6, 30, 8, 15, 46, DateTimeKind.Utc), bd.Value)", prediction=8, span="633-633"];
m0_429 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Millisecond_Dates()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Millisecond_Dates()", span="626-626"];
m0_430 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateMillisecondsJson()", file=merged, label="Entry RestSharp.Tests.JsonTests.CreateUnixDateMillisecondsJson()", span="923-923"];
m0_431 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_DateTime()", span="636-636"];
m0_0_58 [cluster="long.TryParse(string, out long)", file=merged, label="Entry long.TryParse(string, out long)", span="0-0"];
m0_0_106 [cluster="RestSharp.Extensions.StringExtensions.ToPascalCase(string, System.Globalization.CultureInfo)", file=merged, label="Entry RestSharp.Extensions.StringExtensions.ToPascalCase(string, System.Globalization.CultureInfo)", span="243-243"];
m0_0_107 [cluster="RestSharp.Extensions.StringExtensions.ToPascalCase(string, System.Globalization.CultureInfo)", file=merged, label="return ToPascalCase(lowercaseAndUnderscoredWord, true, culture);", span="245-245"];
m0_0_108 [cluster="RestSharp.Extensions.StringExtensions.ToPascalCase(string, System.Globalization.CultureInfo)", file=merged, label="Exit RestSharp.Extensions.StringExtensions.ToPascalCase(string, System.Globalization.CultureInfo)", span="243-243"];
m0_0_145 [cluster="RestSharp.Extensions.StringExtensions.IsUpperCase(string)", file=merged, label="Entry RestSharp.Extensions.StringExtensions.IsUpperCase(string)", span="321-321"];
m0_0_146 [cluster="RestSharp.Extensions.StringExtensions.IsUpperCase(string)", file=merged, label="return Regex.IsMatch(inputString, @''^[A-Z]+$'');", span="323-323"];
m0_0_147 [cluster="RestSharp.Extensions.StringExtensions.IsUpperCase(string)", file=merged, label="Exit RestSharp.Extensions.StringExtensions.IsUpperCase(string)", span="321-321"];
m0_340 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="Entry RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", span="805-805"];
m0_538 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="int i = 0", span="827-827"];
m0_525 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="JsonObject doc = new JsonObject()", span="807-807"];
m0_526 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="doc[''name''] = ''John Sheehan''", span="809-809"];
m0_527 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="doc[''start_date''] = new DateTime(2009, 9, 25, 0, 6, 1, DateTimeKind.Utc)", span="810-810"];
m0_528 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="doc[''age''] = 28", span="811-811"];
m0_529 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="doc[''percent''] = 99.9999m", span="812-812"];
m0_530 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="doc[''big_number''] = long.MaxValue", span="813-813"];
m0_531 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="doc[''is_cool''] = false", span="814-814"];
m0_532 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="doc[''ignore''] = ''dummy''", span="815-815"];
m0_533 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="doc[''read_only''] = ''dummy''", span="816-816"];
m0_534 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="doc[''url''] = ''http://example.com''", span="817-817"];
m0_535 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="doc[''url_path''] = ''/foo/bar''", span="818-818"];
m0_536 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="doc[''best_friend''] = new JsonObject\r\n                                 {\r\n                                     { ''name'', ''\\nThe Fonz'' },\r\n                                     { ''since'', 1952 }\r\n                                 }", span="819-823"];
m0_542 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="doc[''friends''] = friendsArray", span="836-836"];
m0_544 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="doc[''foes''] = foesArray", span="844-844"];
m0_545 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="return doc.ToString();", span="846-846"];
m0_537 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="JsonArray friendsArray = new JsonArray()", span="825-825"];
m0_540 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="friendsArray.Add(new JsonObject\r\n                                 {\r\n                                     { ''name'', ''Friend'' + \\ni },\r\n                                     { ''since'', DateTime.Now.Year - i }\r\n                                 })", span="829-833"];
m0_539 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="i < 10", span="827-827"];
m0_541 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="i++", span="827-827"];
m0_543 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="JsonObject foesArray = new JsonObject\r\n                                   {\r\n                                       { ''dict1'', \\nnew JsonObject { { ''nickname'', ''Foe 1'' } } },\r\n                                       { ''dict2'', new JsonObject { { ''nickname'', ''\\nFoe 2'' } } }\r\n                                   }", span="838-842"];
m0_546 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file=merged, label="Exit RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", span="805-805"];
m0_318 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", span="489-489"];
m0_319 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="string doc = CreateJsonWithUnderscores()", span="491-491"];
m0_320 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="JsonDeserializer d = new JsonDeserializer()", span="492-492"];
m0_321 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="RestResponse response = new RestResponse { Content = doc }", span="493-493"];
m0_322 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="PersonForJson p = d.Deserialize<PersonForJson>(response)", span="494-494"];
m0_323 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="Assert.AreEqual(''John Sheehan'', p.Name)", span="496-496"];
m0_324 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="Assert.AreEqual(new DateTime(2009, 9, 25, 0, 6, 1), p.StartDate)", span="497-497"];
m0_325 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="Assert.AreEqual(28, p.Age)", span="498-498"];
m0_326 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="Assert.AreEqual(long.MaxValue, p.BigNumber)", span="499-499"];
m0_327 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="Assert.AreEqual(99.9999m, p.Percent)", span="500-500"];
m0_328 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="Assert.AreEqual(false, p.IsCool)", span="501-501"];
m0_329 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="Assert.AreEqual(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="502-502"];
m0_330 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="Assert.AreEqual(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="503-503"];
m0_331 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="Assert.NotNull(p.Friends)", span="504-504"];
m0_332 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="Assert.AreEqual(10, p.Friends.Count)", span="505-505"];
m0_333 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="Assert.NotNull(p.BestFriend)", span="506-506"];
m0_334 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="Assert.AreEqual(''The Fonz'', p.BestFriend.Name)", span="507-507"];
m0_335 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="Assert.AreEqual(1952, p.BestFriend.Since)", span="508-508"];
m0_336 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="Assert.IsNotEmpty(p.Foes)", span="509-509"];
m0_337 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="Assert.AreEqual(''Foe 1'', p.Foes[''dict1''].Nickname)", span="510-510"];
m0_338 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="Assert.AreEqual(''Foe 2'', p.Foes[''dict2''].Nickname)", span="511-511"];
m0_339 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", span="489-489"];
m0_0_96 [cluster="System.Text.RegularExpressions.Regex.Matches(string)", file=merged, label="Entry System.Text.RegularExpressions.Regex.Matches(string)", span="0-0"];
m0_446 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeLocal()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeLocal()", span="675-675"];
m0_447 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeLocal()", file=merged, label="Iso8601DateTimeTestStructure payload = GetPayLoad<Iso8601DateTimeTestStructure>(''iso8601datetimes.txt'')", span="677-677"];
m0_448 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeLocal()", file=merged, label="Assert.AreEqual(\r\n                new DateTime(2012, 7, 19, 10, 23, 25, DateTimeKind.Utc),\r\n                payload.DateTimeLocal)", span="679-681"];
m0_449 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeLocal()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeLocal()", span="675-675"];
m0_0_80 [cluster="System.DateTime.TryParse(string, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTime)", file=merged, label="Entry System.DateTime.TryParse(string, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTime)", span="0-0"];
m0_0_29 [cluster="RestSharp.Extensions.MonoHttp.HttpUtility.HtmlDecode(string)", file=merged, label="Entry RestSharp.Extensions.MonoHttp.HttpUtility.HtmlDecode(string)", span="602-602"];
m0_0_99 [cluster="System.DateTime.ParseExact(string, string, System.IFormatProvider)", file=merged, label="Entry System.DateTime.ParseExact(string, string, System.IFormatProvider)", span="0-0"];
m0_0_24 [cluster="System.Text.StringBuilder.Append(string)", file=merged, label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m0_454 [cluster="System.DateTime.ToUniversalTime()", file=merged, label="Entry System.DateTime.ToUniversalTime()", span="0-0"];
m0_0_151 [cluster="System.Text.RegularExpressions.Regex.Replace(string, string, string)", file=merged, label="Entry System.Text.RegularExpressions.Regex.Replace(string, string, string)", span="0-0"];
m0_0_144 [cluster="string.ToLower()", file=merged, label="Entry string.ToLower()", span="0-0"];
m0_0_100 [cluster="System.DateTime.Add(System.TimeSpan)", file=merged, label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m0_0_26 [cluster="RestSharp.Extensions.StringExtensions.HtmlDecode(string)", file=merged, label="Entry RestSharp.Extensions.StringExtensions.HtmlDecode(string)", span="78-78"];
m0_0_27 [cluster="RestSharp.Extensions.StringExtensions.HtmlDecode(string)", file=merged, label="return HttpUtility.HtmlDecode(input);", span="80-80"];
m0_0_28 [cluster="RestSharp.Extensions.StringExtensions.HtmlDecode(string)", file=merged, label="Exit RestSharp.Extensions.StringExtensions.HtmlDecode(string)", span="78-78"];
m0_0_20 [cluster="System.Uri.EscapeDataString(string)", file=merged, label="Entry System.Uri.EscapeDataString(string)", span="0-0"];
m0_423 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Millisecond_Dates()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Millisecond_Dates()", span="626-626"];
m0_424 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Millisecond_Dates()", color=green, community=0, file=merged, label="string doc = CreateUnixDateMillisecondsJson()", prediction=9, span="628-628"];
m0_425 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Millisecond_Dates()", color=green, community=0, file=merged, label="JsonDeserializer d = new JsonDeserializer()", prediction=10, span="629-629"];
m0_426 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Millisecond_Dates()", color=green, community=0, file=merged, label="RestResponse response = new RestResponse { Content = doc }", prediction=11, span="630-630"];
m0_341 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root_Alternative_Culture()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root_Alternative_Culture()", span="515-515"];
m0_342 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root_Alternative_Culture()", file=merged, label="new CultureChange(ALTERNATIVE_CULTURE)", span="517-517"];
m0_343 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root_Alternative_Culture()", file=merged, label="this.Can_Deserialize_Names_With_Underscores_With_Default_Root()", span="519-519"];
m0_344 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root_Alternative_Culture()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root_Alternative_Culture()", span="515-515"];
m0_0_152 [cluster="RestSharp.Extensions.StringExtensions.AddDashes(string)", file=merged, label="Entry RestSharp.Extensions.StringExtensions.AddDashes(string)", span="347-347"];
m0_0_153 [cluster="RestSharp.Extensions.StringExtensions.AddDashes(string)", file=merged, label="return Regex.Replace(\r\n                Regex.Replace(\r\n                    Regex.Replace(pascalCasedWord, @''([A-Z]+)([A-Z][\\na-z])'', ''$1-$2''),\r\n                    @''([a-z\d])([A-Z])'',\r\n                    ''$1-$2''),\r\n                @''[\s]'',\r\n                ''\\n-'');", span="349-355"];
m0_0_154 [cluster="RestSharp.Extensions.StringExtensions.AddDashes(string)", file=merged, label="Exit RestSharp.Extensions.StringExtensions.AddDashes(string)", span="347-347"];
m0_132 [cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file=merged, label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0"];
m0_478 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", file=merged, label="Entry RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", span="993-993"];
m0_623 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", file=merged, label="JsonObject doc = new JsonObject()", span="995-995"];
m0_624 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", file=merged, label="doc[''Thing1''] = ''Thing1''", span="997-997"];
m0_625 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", file=merged, label="doc[''Thing2''] = ''Thing2''", span="998-998"];
m0_626 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", file=merged, label="doc[''ThingRed''] = ''ThingRed''", span="999-999"];
m0_627 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", file=merged, label="doc[''ThingBlue''] = ''ThingBlue''", span="1000-1000"];
m0_628 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", file=merged, label="return doc.ToString();", span="1002-1002"];
m0_629 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", file=merged, label="Exit RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", span="993-993"];
m0_406 [cluster="System.TimeSpan.TimeSpan(int, int, int, int)", file=merged, label="Entry System.TimeSpan.TimeSpan(int, int, int, int)", span="0-0"];
m0_403 [cluster="System.TimeSpan.TimeSpan(long)", file=merged, label="Entry System.TimeSpan.TimeSpan(long)", span="0-0"];
m0_0_62 [cluster="RestSharp.Extensions.StringExtensions.ExtractDate(string, string, System.Globalization.CultureInfo)", file=merged, label="Entry RestSharp.Extensions.StringExtensions.ExtractDate(string, string, System.Globalization.CultureInfo)", span="198-198"];
m0_0_81 [cluster="RestSharp.Extensions.StringExtensions.ExtractDate(string, string, System.Globalization.CultureInfo)", file=merged, label="DateTime dt = DateTime.MinValue", span="200-200"];
m0_0_82 [cluster="RestSharp.Extensions.StringExtensions.ExtractDate(string, string, System.Globalization.CultureInfo)", file=merged, label="Regex regex = new Regex(pattern)", span="201-201"];
m0_0_83 [cluster="RestSharp.Extensions.StringExtensions.ExtractDate(string, string, System.Globalization.CultureInfo)", file=merged, label="regex.IsMatch(input)", span="203-203"];
m0_0_84 [cluster="RestSharp.Extensions.StringExtensions.ExtractDate(string, string, System.Globalization.CultureInfo)", file=merged, label="MatchCollection matches = regex.Matches(input)", span="205-205"];
m0_0_90 [cluster="RestSharp.Extensions.StringExtensions.ExtractDate(string, string, System.Globalization.CultureInfo)", file=merged, label="DateTime mod = DateTime.ParseExact(match.Groups[3].Value, ''HHmm'', culture)", span="215-215"];
m0_0_92 [cluster="RestSharp.Extensions.StringExtensions.ExtractDate(string, string, System.Globalization.CultureInfo)", file=merged, label="return dt;", span="223-223"];
m0_0_85 [cluster="RestSharp.Extensions.StringExtensions.ExtractDate(string, string, System.Globalization.CultureInfo)", file=merged, label="Match match = matches[0]", span="206-206"];
m0_0_86 [cluster="RestSharp.Extensions.StringExtensions.ExtractDate(string, string, System.Globalization.CultureInfo)", file=merged, label="long ms = Convert.ToInt64(match.Groups[1].Value)", span="207-207"];
m0_0_89 [cluster="RestSharp.Extensions.StringExtensions.ExtractDate(string, string, System.Globalization.CultureInfo)", file=merged, label="match.Groups.Count > 2 && !string.IsNullOrEmpty(match.Groups[3].Value)", span="213-213"];
m0_0_91 [cluster="RestSharp.Extensions.StringExtensions.ExtractDate(string, string, System.Globalization.CultureInfo)", file=merged, label="dt = match.Groups[2].Value == ''+''\r\n                        ? dt.Add(mod.TimeOfDay)\r\n                        : dt.Subtract(\\nmod.TimeOfDay)", span="217-219"];
m0_0_87 [cluster="RestSharp.Extensions.StringExtensions.ExtractDate(string, string, System.Globalization.CultureInfo)", file=merged, label="DateTime epoch = new DateTime(1970, 1, 1, 0, 0, 0, DateTimeKind.Utc)", span="208-208"];
m0_0_88 [cluster="RestSharp.Extensions.StringExtensions.ExtractDate(string, string, System.Globalization.CultureInfo)", file=merged, label="dt = epoch.AddMilliseconds(ms)", span="210-210"];
m0_0_93 [cluster="RestSharp.Extensions.StringExtensions.ExtractDate(string, string, System.Globalization.CultureInfo)", file=merged, label="Exit RestSharp.Extensions.StringExtensions.ExtractDate(string, string, System.Globalization.CultureInfo)", span="198-198"];
m0_14 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", span="50-50"];
m0_15 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", file=merged, label="string content = ''{\''one\'':\''oneOneOne\'', \''two\'':\''twoTwoTwo\'', \''three\'':3}''", span="52-52"];
m0_16 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", file=merged, label="JsonDeserializer json = new JsonDeserializer()", span="53-53"];
m0_17 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", file=merged, label="SimpleStruct output = json.Deserialize<SimpleStruct>(new RestResponse { Content = content })", span="54-54"];
m0_18 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", file=merged, label="Assert.NotNull(output)", span="56-56"];
m0_19 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", file=merged, label="Assert.AreEqual(''oneOneOne'', output.One)", span="57-57"];
m0_20 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", file=merged, label="Assert.AreEqual(''twoTwoTwo'', output.Two)", span="58-58"];
m0_21 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", file=merged, label="Assert.AreEqual(3, output.Three)", span="59-59"];
m0_22 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", span="50-50"];
m0_104 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", span="188-188"];
m0_105 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file=merged, label="Guid id1 = new Guid(''b0e5c11f-e944-478c-aadd-753b956d0c8c'')", span="190-190"];
m0_106 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file=merged, label="Guid id2 = new Guid(''809399fa-21c4-4dca-8dcd-34cb697fbca0'')", span="191-191"];
m0_108 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file=merged, label="data[''Ids''] = new JsonArray { id1, id2 }", span="194-194"];
m0_113 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file=merged, label="Assert.AreEqual(id1, p.Ids[0])", span="201-201"];
m0_107 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file=merged, label="JsonObject data = new JsonObject()", span="192-192"];
m0_114 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file=merged, label="Assert.AreEqual(id2, p.Ids[1])", span="202-202"];
m0_110 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file=merged, label="RestResponse response = new RestResponse { Content = data.ToString()  }", span="197-197"];
m0_109 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file=merged, label="JsonDeserializer d = new JsonDeserializer()", span="196-196"];
m0_111 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file=merged, label="GuidList p = d.Deserialize<GuidList>(response)", span="198-198"];
m0_112 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file=merged, label="Assert.AreEqual(2, p.Ids.Count)", span="200-200"];
m0_115 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", span="188-188"];
m0_31 [cluster="System.IO.File.ReadAllText(string)", file=merged, label="Entry System.IO.File.ReadAllText(string)", span="0-0"];
m0_0_105 [cluster="System.Text.RegularExpressions.Regex.IsMatch(string, string)", file=merged, label="Entry System.Text.RegularExpressions.Regex.IsMatch(string, string)", span="0-0"];
m0_0_30 [cluster="RestSharp.Extensions.StringExtensions.HtmlEncode(string)", file=merged, label="Entry RestSharp.Extensions.StringExtensions.HtmlEncode(string)", span="83-83"];
m0_0_31 [cluster="RestSharp.Extensions.StringExtensions.HtmlEncode(string)", file=merged, label="return HttpUtility.HtmlEncode(input);", span="85-85"];
m0_0_32 [cluster="RestSharp.Extensions.StringExtensions.HtmlEncode(string)", file=merged, label="Exit RestSharp.Extensions.StringExtensions.HtmlEncode(string)", span="83-83"];
m0_39 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", span="84-84"];
m0_40 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", file=merged, label="string doc = File.ReadAllText(Path.Combine(''SampleData'', ''jsonlists.txt''))", span="86-86"];
m0_41 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", file=merged, label="JsonDeserializer json = new JsonDeserializer()", span="87-87"];
m0_42 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", file=merged, label="JsonLists output = json.Deserialize<JsonLists>(new RestResponse { Content = doc })", span="88-88"];
m0_43 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", file=merged, label="Assert.IsNotEmpty(output.Names)", span="90-90"];
m0_44 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", file=merged, label="Assert.IsNotEmpty(output.Numbers)", span="91-91"];
m0_45 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", span="84-84"];
m0_367 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root_Alternative_Culture()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root_Alternative_Culture()", span="550-550"];
m0_368 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root_Alternative_Culture()", file=merged, label="new CultureChange(ALTERNATIVE_CULTURE)", span="552-552"];
m0_369 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root_Alternative_Culture()", file=merged, label="this.Can_Deserialize_Names_With_Dashes_With_Default_Root()", span="554-554"];
m0_370 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root_Alternative_Culture()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root_Alternative_Culture()", span="550-550"];
m0_0_101 [cluster="System.DateTime.Subtract(System.TimeSpan)", file=merged, label="Entry System.DateTime.Subtract(System.TimeSpan)", span="0-0"];
m0_0_79 [cluster="System.DateTime.TryParseExact(string, string[], System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTime)", file=merged, label="Entry System.DateTime.TryParseExact(string, string[], System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTime)", span="0-0"];
m0_0_135 [cluster="string.Join(string, params string[])", file=merged, label="Entry string.Join(string, params string[])", span="0-0"];
m0_0_148 [cluster="RestSharp.Extensions.StringExtensions.AddUnderscores(string)", file=merged, label="Entry RestSharp.Extensions.StringExtensions.AddUnderscores(string)", span="331-331"];
m0_0_149 [cluster="RestSharp.Extensions.StringExtensions.AddUnderscores(string)", file=merged, label="return Regex.Replace(\r\n                Regex.Replace(\r\n                    Regex.Replace(pascalCasedWord, @''([A-Z]+)([A-Z][\\na-z])'', ''$1_$2''),\r\n                    @''([a-z\d])([A-Z])'',\r\n                    ''$1_$2''),\r\n                @''[-\s]'',\r\n                ''_'');", span="333-339"];
m0_0_150 [cluster="RestSharp.Extensions.StringExtensions.AddUnderscores(string)", file=merged, label="Exit RestSharp.Extensions.StringExtensions.AddUnderscores(string)", span="331-331"];
m0_133 [cluster="System.DateTime.AddSeconds(double)", file=merged, label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m0_184 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Json_Using_DeserializeAs_Attribute()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Json_Using_DeserializeAs_Attribute()", span="297-297"];
m0_185 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Json_Using_DeserializeAs_Attribute()", file=merged, label="string content = ''{\''sid\'':\''asdasdasdasdasdasdasda\'',\''friendlyName\'':\''VeryNiceName\'',\''oddballPropertyName\'':\''blahblah\''}''", span="299-299"];
m0_186 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Json_Using_DeserializeAs_Attribute()", file=merged, label="JsonDeserializer json = new JsonDeserializer { RootElement = ''users'' }", span="300-300"];
m0_187 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Json_Using_DeserializeAs_Attribute()", file=merged, label="Oddball output = json.Deserialize<Oddball>(new RestResponse { Content = content })", span="301-301"];
m0_188 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Json_Using_DeserializeAs_Attribute()", file=merged, label="Assert.NotNull(output)", span="303-303"];
m0_189 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Json_Using_DeserializeAs_Attribute()", file=merged, label="Assert.AreEqual(''blahblah'', output.GoodPropertyName)", span="304-304"];
m0_190 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Json_Using_DeserializeAs_Attribute()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Json_Using_DeserializeAs_Attribute()", span="297-297"];
m0_0_177 [cluster="string.ToCamelCase(System.Globalization.CultureInfo)", file=merged, label="Entry string.ToCamelCase(System.Globalization.CultureInfo)", span="301-301"];
m0_0_97 [cluster="System.Convert.ToInt64(string)", file=merged, label="Entry System.Convert.ToInt64(string)", span="0-0"];
m0_405 [cluster="System.TimeSpan.TimeSpan(int, int, int)", file=merged, label="Entry System.TimeSpan.TimeSpan(int, int, int)", span="0-0"];
m0_432 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", span="646-646"];
m0_433 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", file=merged, label="DateTimeTestStructure payload = GetPayLoad<DateTimeTestStructure>(''datetimes.txt'')", span="648-648"];
m0_434 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", file=merged, label="Assert.NotNull(payload.NullableDateTimeWithValue)", span="650-650"];
m0_435 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", file=merged, label="Assert.AreEqual(\r\n                new DateTime(2011, 6, 30, 8, 15, 46, 929, DateTimeKind.Utc),\r\n                payload.NullableDateTimeWithValue.Value)", span="651-653"];
m0_436 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", span="646-646"];
m0_0_59 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file=merged, label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m0_149 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file=merged, label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m0_246 [cluster="RestSharp.Tests.JsonTests.Deserialization_Of_Undefined_Int_Value_Returns_Enum_Default()", file=merged, label="Entry RestSharp.Tests.JsonTests.Deserialization_Of_Undefined_Int_Value_Returns_Enum_Default()", span="385-385"];
m0_247 [cluster="RestSharp.Tests.JsonTests.Deserialization_Of_Undefined_Int_Value_Returns_Enum_Default()", file=merged, label="string data = @''{ ''''Integer'''' : 1024 }''", span="387-387"];
m0_248 [cluster="RestSharp.Tests.JsonTests.Deserialization_Of_Undefined_Int_Value_Returns_Enum_Default()", file=merged, label="RestResponse response = new RestResponse { Content = data }", span="388-388"];
m0_249 [cluster="RestSharp.Tests.JsonTests.Deserialization_Of_Undefined_Int_Value_Returns_Enum_Default()", file=merged, label="JsonDeserializer json = new JsonDeserializer()", span="389-389"];
m0_250 [cluster="RestSharp.Tests.JsonTests.Deserialization_Of_Undefined_Int_Value_Returns_Enum_Default()", file=merged, label="JsonEnumsTestStructure result = json.Deserialize<JsonEnumsTestStructure>(response)", span="390-390"];
m0_251 [cluster="RestSharp.Tests.JsonTests.Deserialization_Of_Undefined_Int_Value_Returns_Enum_Default()", file=merged, label="Assert.AreEqual(Disposition.Friendly, result.Integer)", span="392-392"];
m0_252 [cluster="RestSharp.Tests.JsonTests.Deserialization_Of_Undefined_Int_Value_Returns_Enum_Default()", file=merged, label="Exit RestSharp.Tests.JsonTests.Deserialization_Of_Undefined_Int_Value_Returns_Enum_Default()", span="385-385"];
m0_489 [cluster="RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", file=merged, label="Entry RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", span="1005-1005"];
m0_630 [cluster="RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", file=merged, label="JsonObject doc = new JsonObject()", span="1007-1007"];
m0_631 [cluster="RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", file=merged, label="doc[''Thing1''] = new JsonArray\r\n                            {\r\n                                ''Value1'',\r\n                                ''\\nValue2''\r\n                            }", span="1009-1013"];
m0_632 [cluster="RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", file=merged, label="doc[''Thing2''] = ''Thing2''", span="1014-1014"];
m0_633 [cluster="RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", file=merged, label="doc[''ThingRed''] = new JsonObject\r\n                              {\r\n                                  { ''Name'', ''ThingRed'' },\r\n                                  { ''\\nColor'', ''Red'' }\r\n                              }", span="1015-1019"];
m0_634 [cluster="RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", file=merged, label="doc[''ThingBlue''] = new JsonObject\r\n                               {\r\n                                   { ''Name'', ''ThingBlue'' },\r\n                                   { ''\\nColor'', ''Blue'' }\r\n                               }", span="1020-1024"];
m0_635 [cluster="RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", file=merged, label="return doc.ToString();", span="1026-1026"];
m0_636 [cluster="RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", file=merged, label="Exit RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", span="1005-1005"];
m0_303 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="Entry RestSharp.Tests.JsonTests.CreateJson()", span="912-912"];
m0_578 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="JsonObject doc = new JsonObject()", span="914-914"];
m0_579 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="doc[''Name''] = ''John Sheehan''", span="916-916"];
m0_580 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="doc[''StartDate''] = new DateTime(2009, 9, 25, 0, 6, 1, DateTimeKind.Utc)", span="917-917"];
m0_581 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="doc[''Age''] = 28", span="918-918"];
m0_582 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="doc[''Percent''] = 99.9999m", span="919-919"];
m0_583 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="doc[''BigNumber''] = long.MaxValue", span="920-920"];
m0_584 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="doc[''IsCool''] = false", span="921-921"];
m0_585 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="doc[''Ignore''] = ''dummy''", span="922-922"];
m0_586 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateMillisecondsJson()", color=green, community=0, file=merged, label="JsonObject doc = new JsonObject()", prediction=12, span="925-925"];
m0_587 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateMillisecondsJson()", color=green, community=0, file=merged, label="doc[''Value''] = 1309421746000", prediction=13, span="927-927"];
m0_588 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateMillisecondsJson()", color=green, community=0, file=merged, label="return doc.ToString();", prediction=12, span="929-929"];
m0_589 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateMillisecondsJson()", file=merged, label="Exit RestSharp.Tests.JsonTests.CreateUnixDateMillisecondsJson()", span="923-923"];
m0_590 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="doc[''Disposition''] = ''so_so''", span="927-927"];
m0_591 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="doc[''Guid''] = new Guid(GUID_STRING).ToString()", span="928-928"];
m0_592 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="doc[''EmptyGuid''] = ''''", span="929-929"];
m0_593 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="doc[''BestFriend''] = new JsonObject\r\n                                {\r\n                                    { ''Name'', ''The \\nFonz'' },\r\n                                    { ''Since'', 1952 }\r\n                                }", span="930-934"];
m0_599 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="doc[''Friends''] = friendsArray", span="947-947"];
m0_601 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="doc[''Foes''] = foesArray", span="955-955"];
m0_602 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="return doc.ToString();", span="957-957"];
m0_594 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="JsonArray friendsArray = new JsonArray()", span="936-936"];
m0_595 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="int i = 0", span="938-938"];
m0_597 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="friendsArray.Add(new JsonObject\r\n                                 {\r\n                                     { ''Name'', ''Friend'' + \\ni },\r\n                                     { ''Since'', DateTime.Now.Year - i }\r\n                                 })", span="940-944"];
m0_596 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="i < 10", span="938-938"];
m0_598 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="i++", span="938-938"];
m0_600 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="JsonObject foesArray = new JsonObject\r\n                                   {\r\n                                       { ''dict1'', \\nnew JsonObject { { ''nickname'', ''Foe 1'' } } },\r\n                                       { ''dict2'', new JsonObject { { ''nickname'', ''\\nFoe 2'' } } }\r\n                                   }", span="949-953"];
m0_603 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file=merged, label="Exit RestSharp.Tests.JsonTests.CreateJson()", span="912-912"];
m0_0_138 [cluster="RestSharp.Extensions.StringExtensions.ToCamelCase(string, System.Globalization.CultureInfo)", file=merged, label="Entry RestSharp.Extensions.StringExtensions.ToCamelCase(string, System.Globalization.CultureInfo)", span="301-301"];
m0_0_139 [cluster="RestSharp.Extensions.StringExtensions.ToCamelCase(string, System.Globalization.CultureInfo)", file=merged, label="return MakeInitialLowerCase(ToPascalCase(lowercaseAndUnderscoredWord, culture));", span="303-303"];
m0_0_140 [cluster="RestSharp.Extensions.StringExtensions.ToCamelCase(string, System.Globalization.CultureInfo)", file=merged, label="Exit RestSharp.Extensions.StringExtensions.ToCamelCase(string, System.Globalization.CultureInfo)", span="301-301"];
m0_9 [cluster="RestSharp.RestResponse.RestResponse()", file=merged, label="Entry RestSharp.RestResponse.RestResponse()", span="178-178"];
m0_0_22 [cluster="System.Math.Min(int, int)", file=merged, label="Entry System.Math.Min(int, int)", span="0-0"];
m0_11 [cluster="decimal.Parse(string, System.Globalization.NumberStyles, System.IFormatProvider)", file=merged, label="Entry decimal.Parse(string, System.Globalization.NumberStyles, System.IFormatProvider)", span="0-0"];
m0_0_109 [cluster="RestSharp.Extensions.StringExtensions.ToPascalCase(string, bool, System.Globalization.CultureInfo)", file=merged, label="Entry RestSharp.Extensions.StringExtensions.ToPascalCase(string, bool, System.Globalization.CultureInfo)", span="255-255"];
m0_0_110 [cluster="RestSharp.Extensions.StringExtensions.ToPascalCase(string, bool, System.Globalization.CultureInfo)", file=merged, label="string.IsNullOrEmpty(text)", span="257-257"];
m0_0_111 [cluster="RestSharp.Extensions.StringExtensions.ToPascalCase(string, bool, System.Globalization.CultureInfo)", file=merged, label="return text;", span="259-259"];
m0_0_112 [cluster="RestSharp.Extensions.StringExtensions.ToPascalCase(string, bool, System.Globalization.CultureInfo)", file=merged, label="text = text.Replace(''_'', '' '')", span="262-262"];
m0_0_113 [cluster="RestSharp.Extensions.StringExtensions.ToPascalCase(string, bool, System.Globalization.CultureInfo)", file=merged, label="string joinString = removeUnderscores\r\n                ? string.Empty\r\n                : ''_''", span="264-266"];
m0_0_122 [cluster="RestSharp.Extensions.StringExtensions.ToPascalCase(string, bool, System.Globalization.CultureInfo)", file=merged, label="restOfWord = restOfWord.ToLower(culture)", span="280-280"];
m0_0_123 [cluster="RestSharp.Extensions.StringExtensions.ToPascalCase(string, bool, System.Globalization.CultureInfo)", file=merged, label="char firstChar = char.ToUpper(word[0], culture)", span="283-283"];
m0_0_127 [cluster="RestSharp.Extensions.StringExtensions.ToPascalCase(string, bool, System.Globalization.CultureInfo)", file=merged, label="return string.Concat(words[0].Substring(0, 1).ToUpper(culture), words[0].Substring(1));", span="292-292"];
m0_0_114 [cluster="RestSharp.Extensions.StringExtensions.ToPascalCase(string, bool, System.Globalization.CultureInfo)", file=merged, label="string[] words = text.Split(' ')", span="267-267"];
m0_0_126 [cluster="RestSharp.Extensions.StringExtensions.ToPascalCase(string, bool, System.Globalization.CultureInfo)", file=merged, label="return string.Join(joinString, words);", span="289-289"];
m0_0_115 [cluster="RestSharp.Extensions.StringExtensions.ToPascalCase(string, bool, System.Globalization.CultureInfo)", file=merged, label="words.Length > 1 || words[0].IsUpperCase()", span="269-269"];
m0_0_117 [cluster="RestSharp.Extensions.StringExtensions.ToPascalCase(string, bool, System.Globalization.CultureInfo)", file=merged, label="i < words.Length", span="271-271"];
m0_0_118 [cluster="RestSharp.Extensions.StringExtensions.ToPascalCase(string, bool, System.Globalization.CultureInfo)", file=merged, label="words[i].Length > 0", span="273-273"];
m0_0_119 [cluster="RestSharp.Extensions.StringExtensions.ToPascalCase(string, bool, System.Globalization.CultureInfo)", file=merged, label="string word = words[i]", span="275-275"];
m0_0_124 [cluster="RestSharp.Extensions.StringExtensions.ToPascalCase(string, bool, System.Globalization.CultureInfo)", file=merged, label="words[i] = string.Concat(firstChar, restOfWord)", span="285-285"];
m0_0_116 [cluster="RestSharp.Extensions.StringExtensions.ToPascalCase(string, bool, System.Globalization.CultureInfo)", file=merged, label="int i = 0", span="271-271"];
m0_0_125 [cluster="RestSharp.Extensions.StringExtensions.ToPascalCase(string, bool, System.Globalization.CultureInfo)", file=merged, label="i++", span="271-271"];
m0_0_120 [cluster="RestSharp.Extensions.StringExtensions.ToPascalCase(string, bool, System.Globalization.CultureInfo)", file=merged, label="string restOfWord = word.Substring(1)", span="276-276"];
m0_0_121 [cluster="RestSharp.Extensions.StringExtensions.ToPascalCase(string, bool, System.Globalization.CultureInfo)", file=merged, label="restOfWord.IsUpperCase()", span="278-278"];
m0_0_128 [cluster="RestSharp.Extensions.StringExtensions.ToPascalCase(string, bool, System.Globalization.CultureInfo)", file=merged, label="Exit RestSharp.Extensions.StringExtensions.ToPascalCase(string, bool, System.Globalization.CultureInfo)", span="255-255"];
m0_0_38 [cluster="RestSharp.Extensions.StringExtensions.RemoveUnderscoresAndDashes(string)", file=merged, label="Entry RestSharp.Extensions.StringExtensions.RemoveUnderscoresAndDashes(string)", span="110-110"];
m0_0_39 [cluster="RestSharp.Extensions.StringExtensions.RemoveUnderscoresAndDashes(string)", file=merged, label="return input.Replace(''_'', '''')\r\n                        .Replace(''-'', '''');", span="112-113"];
m0_0_40 [cluster="RestSharp.Extensions.StringExtensions.RemoveUnderscoresAndDashes(string)", file=merged, label="Exit RestSharp.Extensions.StringExtensions.RemoveUnderscoresAndDashes(string)", span="110-110"];
m0_30 [cluster="System.IO.Path.Combine(string, string)", file=merged, label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m0_46 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", span="95-95"];
m0_47 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", file=merged, label="string content = ''{\''users\'':[\''johnsheehan\'',\''jagregory\'',\''drusellers\'',\''structuremap\'']}''", span="97-97"];
m0_48 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", file=merged, label="JsonDeserializer json = new JsonDeserializer { RootElement = ''users'' }", span="98-98"];
m0_49 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", file=merged, label="List<string> output = json.Deserialize<List<string>>(new RestResponse { Content = content })", span="99-99"];
m0_50 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", file=merged, label="Assert.IsNotEmpty(output)", span="101-101"];
m0_51 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", span="95-95"];
m0_437 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Null()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Null()", span="657-657"];
m0_438 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Null()", file=merged, label="DateTimeTestStructure payload = GetPayLoad<DateTimeTestStructure>(''datetimes.txt'')", span="659-659"];
m0_439 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Null()", file=merged, label="Assert.Null(payload.NullableDateTimeWithNull)", span="661-661"];
m0_440 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Null()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Null()", span="657-657"];
m0_0_33 [cluster="RestSharp.Extensions.MonoHttp.HttpUtility.HtmlEncode(string)", file=merged, label="Entry RestSharp.Extensions.MonoHttp.HttpUtility.HtmlEncode(string)", span="625-625"];
m0_0_63 [cluster="RestSharp.Extensions.StringExtensions.ParseFormattedDate(string, System.Globalization.CultureInfo)", file=merged, label="Entry RestSharp.Extensions.StringExtensions.ParseFormattedDate(string, System.Globalization.CultureInfo)", span="169-169"];
m0_0_71 [cluster="RestSharp.Extensions.StringExtensions.ParseFormattedDate(string, System.Globalization.CultureInfo)", file=merged, label="string[] formats =\r\n            {\r\n                ''u'',\r\n                ''s'',\r\n                ''yyyy'-'MM'-'dd'T'HH':'\\nmm':'ss'Z''',\r\n                ''yyyy-MM-ddTHH:mm:ssZ'',\r\n                ''yyyy-MM-dd HH:mm:ssZ'',\r\n                ''yyyy-MM-ddTHH:\\nmm:ss'',\r\n                ''yyyy-MM-ddTHH:mm:sszzzzzz'',\r\n                ''M/d/yyyy h:mm:ss tt'' // default format for invariant \\nculture\r\n            }", span="171-181"];
m0_0_72 [cluster="RestSharp.Extensions.StringExtensions.ParseFormattedDate(string, System.Globalization.CultureInfo)", file=merged, label="DateTime date", span="183-183"];
m0_0_73 [cluster="RestSharp.Extensions.StringExtensions.ParseFormattedDate(string, System.Globalization.CultureInfo)", file=merged, label="DateTime.TryParseExact(input, formats, culture, DateTimeStyles.AssumeUniversal | DateTimeStyles.AdjustToUniversal, out date)", span="185-185"];
m0_0_75 [cluster="RestSharp.Extensions.StringExtensions.ParseFormattedDate(string, System.Globalization.CultureInfo)", file=merged, label="DateTime.TryParse(input, culture, DateTimeStyles.None, out date)", span="190-190"];
m0_0_74 [cluster="RestSharp.Extensions.StringExtensions.ParseFormattedDate(string, System.Globalization.CultureInfo)", file=merged, label="return date;", span="187-187"];
m0_0_76 [cluster="RestSharp.Extensions.StringExtensions.ParseFormattedDate(string, System.Globalization.CultureInfo)", file=merged, label="return date;", span="192-192"];
m0_0_77 [cluster="RestSharp.Extensions.StringExtensions.ParseFormattedDate(string, System.Globalization.CultureInfo)", file=merged, label="return default(DateTime);", span="195-195"];
m0_0_78 [cluster="RestSharp.Extensions.StringExtensions.ParseFormattedDate(string, System.Globalization.CultureInfo)", file=merged, label="Exit RestSharp.Extensions.StringExtensions.ParseFormattedDate(string, System.Globalization.CultureInfo)", span="169-169"];
m0_0_180 [cluster="string.AddUnderscorePrefix()", file=merged, label="Entry string.AddUnderscorePrefix()", span="363-363"];
m0_310 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", span="477-477"];
m0_311 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", file=merged, label="string data = File.ReadAllText(Path.Combine(''SampleData'', ''underscore_prefix.txt''))", span="479-479"];
m0_312 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", file=merged, label="RestResponse response = new RestResponse { Content = data }", span="480-480"];
m0_313 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", file=merged, label="JsonDeserializer json = new JsonDeserializer { RootElement = ''User'' }", span="481-481"];
m0_314 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", file=merged, label="SoUser output = json.Deserialize<SoUser>(response)", span="482-482"];
m0_315 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", file=merged, label="Assert.AreEqual(''John Sheehan'', output.DisplayName)", span="484-484"];
m0_316 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", file=merged, label="Assert.AreEqual(1786, output.Id)", span="485-485"];
m0_317 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", span="477-477"];
m0_371 [cluster="RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", file=merged, label="Entry RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", span="559-559"];
m0_372 [cluster="RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", file=merged, label="string doc = CreateJson()", span="561-561"];
m0_373 [cluster="RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", file=merged, label="JsonDeserializer d = new JsonDeserializer()", span="562-562"];
m0_374 [cluster="RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", file=merged, label="RestResponse response = new RestResponse { Content = doc }", span="563-563"];
m0_375 [cluster="RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", file=merged, label="PersonForJson p = d.Deserialize<PersonForJson>(response)", span="564-564"];
m0_376 [cluster="RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", file=merged, label="Assert.Null(p.IgnoreProxy)", span="566-566"];
m0_377 [cluster="RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", file=merged, label="Exit RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", span="559-559"];
m0_0_131 [cluster="string.Substring(int)", file=merged, label="Entry string.Substring(int)", span="0-0"];
m0_134 [cluster="System.DateTime.ToString(string)", file=merged, label="Entry System.DateTime.ToString(string)", span="0-0"];
m0_152 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", span="254-254"];
m0_153 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", file=merged, label="string doc = CreateJsonWithNullValues()", span="256-256"];
m0_154 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", file=merged, label="JsonDeserializer json = new JsonDeserializer()", span="257-257"];
m0_155 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", file=merged, label="NullableValues output = json.Deserialize<NullableValues>(new RestResponse { Content = doc })", span="258-258"];
m0_156 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", file=merged, label="Assert.Null(output.Id)", span="260-260"];
m0_157 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", file=merged, label="Assert.Null(output.StartDate)", span="261-261"];
m0_158 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", file=merged, label="Assert.Null(output.UniqueId)", span="262-262"];
m0_159 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", span="254-254"];
m0_441 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTimeOffset()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_DateTimeOffset()", span="665-665"];
m0_442 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTimeOffset()", file=merged, label="DateTimeTestStructure payload = GetPayLoad<DateTimeTestStructure>(''datetimes.txt'')", span="667-667"];
m0_443 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTimeOffset()", file=merged, label="Assert.AreEqual(\r\n                new DateTime(2011, 6, 30, 8, 15, 46, 929, DateTimeKind.Utc).ToString(''yyyy-MM-dd HH:mm:ss.fff''),\r\n                \\npayload.DateTimeOffset.ToString(''yyyy-MM-dd HH:mm:ss.fff''))", span="669-671"];
m0_444 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTimeOffset()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_DateTimeOffset()", span="665-665"];
m0_385 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", span="581-581"];
m0_386 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file=merged, label="TimeSpanTestStructure payload = GetPayLoad<TimeSpanTestStructure>(''timespans.txt'')", span="583-583"];
m0_387 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file=merged, label="Assert.AreEqual(new TimeSpan(468006), payload.Tick)", span="585-585"];
m0_388 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file=merged, label="Assert.AreEqual(new TimeSpan(0, 0, 0, 0, 125), payload.Millisecond)", span="586-586"];
m0_389 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file=merged, label="Assert.AreEqual(new TimeSpan(0, 0, 8), payload.Second)", span="587-587"];
m0_390 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file=merged, label="Assert.AreEqual(new TimeSpan(0, 55, 2), payload.Minute)", span="588-588"];
m0_391 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file=merged, label="Assert.AreEqual(new TimeSpan(21, 30, 7), payload.Hour)", span="589-589"];
m0_392 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file=merged, label="Assert.Null(payload.NullableWithoutValue)", span="590-590"];
m0_393 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file=merged, label="Assert.NotNull(payload.NullableWithValue)", span="591-591"];
m0_394 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file=merged, label="Assert.AreEqual(new TimeSpan(21, 30, 7), payload.NullableWithValue.Value)", span="592-592"];
m0_395 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file=merged, label="Assert.AreEqual(new TimeSpan(0, 0, 10), payload.IsoSecond)", span="593-593"];
m0_396 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file=merged, label="Assert.AreEqual(new TimeSpan(0, 3, 23), payload.IsoMinute)", span="594-594"];
m0_397 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file=merged, label="Assert.AreEqual(new TimeSpan(5, 4, 9), payload.IsoHour)", span="595-595"];
m0_398 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file=merged, label="Assert.AreEqual(new TimeSpan(1, 19, 27, 13), payload.IsoDay)", span="596-596"];
m0_399 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file=merged, label="Assert.AreEqual(new TimeSpan(64, 3, 14, 19), payload.IsoMonth)", span="598-598"];
m0_400 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file=merged, label="Assert.AreEqual(new TimeSpan(365, 9, 27, 48), payload.IsoYear)", span="600-600"];
m0_401 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", span="581-581"];
m0_0_70 [cluster="string.EndsWith(string)", file=merged, label="Entry string.EndsWith(string)", span="0-0"];
m0_0_178 [cluster="string.AddUnderscores()", file=merged, label="Entry string.AddUnderscores()", span="331-331"];
m0_218 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", span="349-349"];
m0_219 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file=merged, label="string data = File.ReadAllText(Path.Combine(''SampleData'', ''jsonenums.txt''))", span="351-351"];
m0_220 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file=merged, label="RestResponse response = new RestResponse { Content = data }", span="352-352"];
m0_221 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file=merged, label="JsonDeserializer json = new JsonDeserializer()", span="353-353"];
m0_222 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file=merged, label="JsonEnumsTestStructure output = json.Deserialize<JsonEnumsTestStructure>(response)", span="354-354"];
m0_223 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file=merged, label="Assert.AreEqual(Disposition.Friendly, output.Upper)", span="356-356"];
m0_224 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file=merged, label="Assert.AreEqual(Disposition.Friendly, output.Lower)", span="357-357"];
m0_225 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file=merged, label="Assert.AreEqual(Disposition.SoSo, output.CamelCased)", span="358-358"];
m0_226 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file=merged, label="Assert.AreEqual(Disposition.SoSo, output.Underscores)", span="359-359"];
m0_227 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file=merged, label="Assert.AreEqual(Disposition.SoSo, output.LowerUnderscores)", span="360-360"];
m0_228 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file=merged, label="Assert.AreEqual(Disposition.SoSo, output.Dashes)", span="361-361"];
m0_229 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file=merged, label="Assert.AreEqual(Disposition.SoSo, output.LowerDashes)", span="362-362"];
m0_230 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file=merged, label="Assert.AreEqual(Disposition.SoSo, output.Integer)", span="363-363"];
m0_231 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", span="349-349"];
m0_604 [cluster="System.Guid.ToString()", file=merged, label="Entry System.Guid.ToString()", span="0-0"];
m0_203 [cluster="RestSharp.Tests.SimpleJson.SerializeObject(object)", file=merged, label="Entry RestSharp.Tests.SimpleJson.SerializeObject(object)", span="610-610"];
m0_450 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeZulu()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeZulu()", span="685-685"];
m0_451 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeZulu()", file=merged, label="Iso8601DateTimeTestStructure payload = GetPayLoad<Iso8601DateTimeTestStructure>(''iso8601datetimes.txt'')", span="687-687"];
m0_452 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeZulu()", file=merged, label="Assert.AreEqual(\r\n                new DateTime(2012, 7, 19, 10, 23, 25, 544, DateTimeKind.Utc),\r\n                payload.DateTimeUtc.ToUniversalTime())", span="689-691"];
m0_453 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeZulu()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeZulu()", span="685-685"];
m0_10 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file=merged, label="Entry RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.IRestResponse)", span="27-27"];
m0_0_132 [cluster="string.ToLower(System.Globalization.CultureInfo)", file=merged, label="Entry string.ToLower(System.Globalization.CultureInfo)", span="0-0"];
m0_427 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Millisecond_Dates()", color=green, community=0, file=merged, label="Birthdate bd = d.Deserialize<Birthdate>(response)", prediction=15, span="631-631"];
m0_0_64 [cluster="RestSharp.Extensions.StringExtensions.RemoveSurroundingQuotes(string)", file=merged, label="Entry RestSharp.Extensions.StringExtensions.RemoveSurroundingQuotes(string)", span="158-158"];
m0_0_65 [cluster="RestSharp.Extensions.StringExtensions.RemoveSurroundingQuotes(string)", file=merged, label="input.StartsWith(''\'''') && input.EndsWith(''\'''')", span="160-160"];
m0_0_66 [cluster="RestSharp.Extensions.StringExtensions.RemoveSurroundingQuotes(string)", file=merged, label="input = input.Substring(1, input.Length - 2)", span="163-163"];
m0_0_67 [cluster="RestSharp.Extensions.StringExtensions.RemoveSurroundingQuotes(string)", file=merged, label="return input;", span="166-166"];
m0_0_68 [cluster="RestSharp.Extensions.StringExtensions.RemoveSurroundingQuotes(string)", file=merged, label="Exit RestSharp.Extensions.StringExtensions.RemoveSurroundingQuotes(string)", span="158-158"];
m0_90 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", span="162-162"];
m0_91 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", file=merged, label="string doc = File.ReadAllText(Path.Combine(''SampleData'', ''jsondictionary_KeysType.txt''))", span="164-164"];
m0_92 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", file=merged, label="JsonDeserializer json = new JsonDeserializer()", span="165-165"];
m0_93 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", file=merged, label="Dictionary<int, object> output =\r\n                json.Deserialize<Dictionary<int, object>>(new RestResponse { Content = doc })", span="166-167"];
m0_94 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", file=merged, label="Assert.AreEqual(output.Keys.Count, 2)", span="169-169"];
m0_95 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", file=merged, label="object firstKeysVal = output.FirstOrDefault().Value", span="171-171"];
m0_96 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", file=merged, label="Assert.IsInstanceOf<IDictionary>(firstKeysVal)", span="173-173"];
m0_97 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", span="162-162"];
m0_23 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Select_Tokens()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Select_Tokens()", span="63-63"];
m0_24 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Select_Tokens()", file=merged, label="string data = File.ReadAllText(Path.Combine(''SampleData'', ''jsonarray.txt''))", span="65-65"];
m0_25 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Select_Tokens()", file=merged, label="RestResponse response = new RestResponse { Content = data }", span="66-66"];
m0_26 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Select_Tokens()", file=merged, label="JsonDeserializer json = new JsonDeserializer()", span="67-67"];
m0_27 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Select_Tokens()", file=merged, label="StatusComplexList output = json.Deserialize<StatusComplexList>(response)", span="68-68"];
m0_28 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Select_Tokens()", file=merged, label="Assert.AreEqual(4, output.Count)", span="70-70"];
m0_29 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Select_Tokens()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Select_Tokens()", span="63-63"];
m0_0_98 [cluster="System.DateTime.AddMilliseconds(double)", file=merged, label="Entry System.DateTime.AddMilliseconds(double)", span="0-0"];
m0_0_137 [cluster="string.Concat(string, string)", file=merged, label="Entry string.Concat(string, string)", span="0-0"];
m0_497 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Object_Type_Property_With_Primitive_Vale()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Object_Type_Property_With_Primitive_Vale()", span="763-763"];
m0_498 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Object_Type_Property_With_Primitive_Vale()", file=merged, label="ObjectProperties payload = GetPayLoad<ObjectProperties>(''objectproperty.txt'')", span="765-765"];
m0_499 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Object_Type_Property_With_Primitive_Vale()", file=merged, label="Assert.AreEqual(42L, payload.ObjectProperty)", span="767-767"];
m0_500 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Object_Type_Property_With_Primitive_Vale()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Object_Type_Property_With_Primitive_Vale()", span="763-763"];
m0_0_134 [cluster="string.Concat(object, object)", file=merged, label="Entry string.Concat(object, object)", span="0-0"];
m0_479 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", span="738-738"];
m0_480 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", file=merged, label="string doc = this.CreateDynamicJsonStringDictionary()", span="740-740"];
m0_481 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", file=merged, label="JsonDeserializer d = new JsonDeserializer()", span="741-741"];
m0_482 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", file=merged, label="RestResponse response = new RestResponse { Content = doc }", span="742-742"];
m0_483 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", file=merged, label="Dictionary<string, string> bd = d.Deserialize<Dictionary<string, string>>(response)", span="743-743"];
m0_484 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", file=merged, label="Assert.AreEqual(''[\''Value1\'',\''Value2\'']'', bd[''Thing1''])", span="745-745"];
m0_485 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", file=merged, label="Assert.AreEqual(''Thing2'', bd[''Thing2''])", span="746-746"];
m0_486 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", file=merged, label="Assert.AreEqual(''{\''Name\'':\''ThingRed\'',\''Color\'':\''Red\''}'', bd[''ThingRed''])", span="747-747"];
m0_487 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", file=merged, label="Assert.AreEqual(''{\''Name\'':\''ThingBlue\'',\''Color\'':\''Blue\''}'', bd[''ThingBlue''])", span="748-748"];
m0_488 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", span="738-738"];
m0_407 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", span="604-604"];
m0_408 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", file=merged, label="string doc = CreateIsoDateJson()", span="606-606"];
m0_409 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", file=merged, label="JsonDeserializer d = new JsonDeserializer()", span="607-607"];
m0_410 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", file=merged, label="RestResponse response = new RestResponse { Content = doc }", span="608-608"];
m0_411 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", file=merged, label="Birthdate bd = d.Deserialize<Birthdate>(response)", span="609-609"];
m0_412 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", file=merged, label="Assert.AreEqual(new DateTime(1910, 9, 25, 9, 30, 25, DateTimeKind.Utc), bd.Value)", span="611-611"];
m0_413 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", span="604-604"];
m0_445 [cluster="System.DateTimeOffset.ToString(string)", file=merged, label="Entry System.DateTimeOffset.ToString(string)", span="0-0"];
m0_366 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="Entry RestSharp.Tests.JsonTests.CreateJsonWithDashes()", span="849-849"];
m0_548 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="JsonObject doc = new JsonObject()", span="851-851"];
m0_549 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="doc[''name''] = ''John Sheehan''", span="853-853"];
m0_550 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="doc[''start-date''] = new DateTime(2009, 9, 25, 0, 6, 1, DateTimeKind.Utc)", span="854-854"];
m0_551 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="doc[''age''] = 28", span="855-855"];
m0_552 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="doc[''percent''] = 99.9999m", span="856-856"];
m0_553 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="doc[''big-number''] = long.MaxValue", span="857-857"];
m0_554 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="doc[''is-cool''] = false", span="858-858"];
m0_555 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="doc[''ignore''] = ''dummy''", span="859-859"];
m0_556 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="doc[''read-only''] = ''dummy''", span="860-860"];
m0_557 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="doc[''url''] = ''http://example.com''", span="861-861"];
m0_558 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="doc[''url-path''] = ''/foo/bar''", span="862-862"];
m0_559 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="doc[''best-friend''] = new JsonObject\r\n                                 {\r\n                                     { ''name'', ''\\nThe Fonz'' },\r\n                                     { ''since'', 1952 }\r\n                                 }", span="863-867"];
m0_565 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="doc[''friends''] = friendsArray", span="880-880"];
m0_567 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="doc[''foes''] = foesArray", span="888-888"];
m0_568 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="return doc.ToString();", span="890-890"];
m0_560 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="JsonArray friendsArray = new JsonArray()", span="869-869"];
m0_561 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="int i = 0", span="871-871"];
m0_563 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="friendsArray.Add(new JsonObject\r\n                                 {\r\n                                     { ''name'', ''Friend'' + \\ni },\r\n                                     { ''since'', DateTime.Now.Year - i }\r\n                                 })", span="873-877"];
m0_562 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="i < 10", span="871-871"];
m0_564 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="i++", span="871-871"];
m0_566 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="JsonObject foesArray = new JsonObject\r\n                                   {\r\n                                       { ''dict1'', \\nnew JsonObject { { ''nickname'', ''Foe 1'' } } },\r\n                                       { ''dict2'', new JsonObject { { ''nickname'', ''\\nFoe 2'' } } }\r\n                                   }", span="882-886"];
m0_569 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file=merged, label="Exit RestSharp.Tests.JsonTests.CreateJsonWithDashes()", span="849-849"];
m0_0_158 [cluster="string.Format(string, object)", file=merged, label="Entry string.Format(string, object)", span="0-0"];
m0_0_130 [cluster="string.IsUpperCase()", file=merged, label="Entry string.IsUpperCase()", span="321-321"];
m0_277 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", span="438-438"];
m0_278 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="string doc = CreateJson()", span="440-440"];
m0_279 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="JsonDeserializer d = new JsonDeserializer()", span="441-441"];
m0_280 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="RestResponse response = new RestResponse { Content = doc }", span="442-442"];
m0_281 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="PersonForJson p = d.Deserialize<PersonForJson>(response)", span="443-443"];
m0_282 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.AreEqual(''John Sheehan'', p.Name)", span="445-445"];
m0_283 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.AreEqual(new DateTime(2009, 9, 25, 0, 6, 1, DateTimeKind.Utc), p.StartDate)", span="446-446"];
m0_284 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.AreEqual(28, p.Age)", span="447-447"];
m0_285 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.AreEqual(long.MaxValue, p.BigNumber)", span="448-448"];
m0_286 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.AreEqual(99.9999m, p.Percent)", span="449-449"];
m0_287 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.AreEqual(false, p.IsCool)", span="450-450"];
m0_288 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.AreEqual(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="451-451"];
m0_289 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.AreEqual(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="452-452"];
m0_290 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.AreEqual(Guid.Empty, p.EmptyGuid)", span="453-453"];
m0_291 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.AreEqual(new Guid(GUID_STRING), p.Guid)", span="454-454"];
m0_292 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.AreEqual(Order.Third, p.Order)", span="455-455"];
m0_293 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.AreEqual(Disposition.SoSo, p.Disposition)", span="456-456"];
m0_294 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.NotNull(p.Friends)", span="457-457"];
m0_295 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.AreEqual(10, p.Friends.Count)", span="458-458"];
m0_296 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.NotNull(p.BestFriend)", span="459-459"];
m0_297 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.AreEqual(''The Fonz'', p.BestFriend.Name)", span="460-460"];
m0_298 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.AreEqual(1952, p.BestFriend.Since)", span="461-461"];
m0_299 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.IsNotEmpty(p.Foes)", span="462-462"];
m0_300 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.AreEqual(''Foe 1'', p.Foes[''dict1''].Nickname)", span="463-463"];
m0_301 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Assert.AreEqual(''Foe 2'', p.Foes[''dict2''].Nickname)", span="464-464"];
m0_302 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", span="438-438"];
m0_0_19 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file=merged, label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m0_0_162 [cluster="RestSharp.Extensions.StringExtensions.GetNameVariants(string, System.Globalization.CultureInfo)", file=merged, label="Entry RestSharp.Extensions.StringExtensions.GetNameVariants(string, System.Globalization.CultureInfo)", span="390-390"];
m0_0_163 [cluster="RestSharp.Extensions.StringExtensions.GetNameVariants(string, System.Globalization.CultureInfo)", file=merged, label="string.IsNullOrEmpty(name)", span="392-392"];
m0_0_164 [cluster="RestSharp.Extensions.StringExtensions.GetNameVariants(string, System.Globalization.CultureInfo)", file=merged, label="yield break;", span="394-394"];
m0_0_165 [cluster="RestSharp.Extensions.StringExtensions.GetNameVariants(string, System.Globalization.CultureInfo)", file=merged, label="yield return name;", span="397-397"];
m0_0_166 [cluster="RestSharp.Extensions.StringExtensions.GetNameVariants(string, System.Globalization.CultureInfo)", file=merged, label="yield return name.ToCamelCase(culture);", span="400-400"];
m0_0_167 [cluster="RestSharp.Extensions.StringExtensions.GetNameVariants(string, System.Globalization.CultureInfo)", file=merged, label="yield return name.ToLower(culture);", span="403-403"];
m0_0_168 [cluster="RestSharp.Extensions.StringExtensions.GetNameVariants(string, System.Globalization.CultureInfo)", file=merged, label="yield return name.AddUnderscores();", span="406-406"];
m0_0_169 [cluster="RestSharp.Extensions.StringExtensions.GetNameVariants(string, System.Globalization.CultureInfo)", file=merged, label="yield return name.AddUnderscores().ToLower(culture);", span="409-409"];
m0_0_170 [cluster="RestSharp.Extensions.StringExtensions.GetNameVariants(string, System.Globalization.CultureInfo)", file=merged, label="yield return name.AddDashes();", span="412-412"];
m0_0_171 [cluster="RestSharp.Extensions.StringExtensions.GetNameVariants(string, System.Globalization.CultureInfo)", file=merged, label="yield return name.AddDashes().ToLower(culture);", span="415-415"];
m0_0_172 [cluster="RestSharp.Extensions.StringExtensions.GetNameVariants(string, System.Globalization.CultureInfo)", file=merged, label="yield return name.AddUnderscorePrefix();", span="418-418"];
m0_0_173 [cluster="RestSharp.Extensions.StringExtensions.GetNameVariants(string, System.Globalization.CultureInfo)", file=merged, label="yield return name.ToCamelCase(culture).AddUnderscorePrefix();", span="421-421"];
m0_0_174 [cluster="RestSharp.Extensions.StringExtensions.GetNameVariants(string, System.Globalization.CultureInfo)", file=merged, label="yield return name.AddSpaces();", span="424-424"];
m0_0_175 [cluster="RestSharp.Extensions.StringExtensions.GetNameVariants(string, System.Globalization.CultureInfo)", file=merged, label="yield return name.AddSpaces().ToLower(culture);", span="427-427"];
m0_0_176 [cluster="RestSharp.Extensions.StringExtensions.GetNameVariants(string, System.Globalization.CultureInfo)", file=merged, label="Exit RestSharp.Extensions.StringExtensions.GetNameVariants(string, System.Globalization.CultureInfo)", span="390-390"];
m0_170 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithEmptyValues()", file=merged, label="Entry RestSharp.Tests.JsonTests.CreateJsonWithEmptyValues()", span="971-971"];
m0_611 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithEmptyValues()", file=merged, label="JsonObject doc = new JsonObject()", span="973-973"];
m0_612 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithEmptyValues()", file=merged, label="doc[''Id''] = ''''", span="975-975"];
m0_613 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithEmptyValues()", file=merged, label="doc[''StartDate''] = ''''", span="976-976"];
m0_614 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithEmptyValues()", file=merged, label="doc[''UniqueId''] = ''''", span="977-977"];
m0_615 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithEmptyValues()", file=merged, label="return doc.ToString();", span="979-979"];
m0_616 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithEmptyValues()", file=merged, label="Exit RestSharp.Tests.JsonTests.CreateJsonWithEmptyValues()", span="971-971"];
m0_191 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", span="308-308"];
m0_192 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file=merged, label="CultureInfo culture = CultureInfo.InvariantCulture", span="310-310"];
m0_193 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file=merged, label="string format = ''dd yyyy MMM, hh:mm ss tt''", span="311-311"];
m0_195 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file=merged, label="var formatted = new { StartDate = date.ToString(format, culture) }", span="313-313"];
m0_198 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file=merged, label="JsonDeserializer json = new JsonDeserializer\r\n                                    {\r\n                                        \\nDateFormat = format,\r\n                                        Culture = culture\r\n                                    }", span="316-320"];
m0_194 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file=merged, label="DateTime date = new DateTime(2010, 2, 8, 11, 11, 11)", span="312-312"];
m0_200 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file=merged, label="Assert.AreEqual(date, output.StartDate)", span="323-323"];
m0_196 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file=merged, label="string data = SimpleJson.SerializeObject(formatted)", span="314-314"];
m0_197 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file=merged, label="RestResponse response = new RestResponse { Content = data }", span="315-315"];
m0_199 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file=merged, label="PersonForJson output = json.Deserialize<PersonForJson>(response)", span="321-321"];
m0_201 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", span="308-308"];
m0_0 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", span="38-38"];
m0_1 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", file=merged, label="string content = ''{ \''Value\'': 4.8e-04 }''", span="40-40"];
m0_2 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", file=merged, label="JsonDeserializer json = new JsonDeserializer()", span="41-41"];
m0_3 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", file=merged, label="DecimalNumber output = json.Deserialize<DecimalNumber>(new RestResponse { Content = content })", span="42-42"];
m0_4 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", file=merged, label="decimal expected = decimal.Parse(''4.8e-04'', NumberStyles.Float, CultureInfo.InvariantCulture)", span="43-43"];
m0_5 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", file=merged, label="Assert.NotNull(output)", span="45-45"];
m0_6 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", file=merged, label="Assert.AreEqual(expected, output.Value)", span="46-46"];
m0_7 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", span="38-38"];
m0_0_42 [cluster="RestSharp.Extensions.StringExtensions.ParseJsonDate(string, System.Globalization.CultureInfo)", file=merged, label="Entry RestSharp.Extensions.StringExtensions.ParseJsonDate(string, System.Globalization.CultureInfo)", span="122-122"];
m0_0_43 [cluster="RestSharp.Extensions.StringExtensions.ParseJsonDate(string, System.Globalization.CultureInfo)", color=green, community=0, file=merged, label="input = input.Replace(''\n'', '''')", prediction=16, span="124-124"];
m0_0_51 [cluster="RestSharp.Extensions.StringExtensions.ParseJsonDate(string, System.Globalization.CultureInfo)", color=green, community=0, file=merged, label="return epoch.AddSeconds(unix);", prediction=17, span="137-137"];
m0_0_54 [cluster="RestSharp.Extensions.StringExtensions.ParseJsonDate(string, System.Globalization.CultureInfo)", file=merged, label="return ExtractDate(input, @''newDate\((-?\d+)*\)'', culture);", span="147-147"];
m0_0_55 [cluster="RestSharp.Extensions.StringExtensions.ParseJsonDate(string, System.Globalization.CultureInfo)", file=merged, label="return ParseFormattedDate(input, culture);", span="150-150"];
m0_0_44 [cluster="RestSharp.Extensions.StringExtensions.ParseJsonDate(string, System.Globalization.CultureInfo)", color=green, community=0, file=merged, label="input = input.Replace(''\r'', '''')", prediction=18, span="125-125"];
m0_0_45 [cluster="RestSharp.Extensions.StringExtensions.ParseJsonDate(string, System.Globalization.CultureInfo)", file=merged, label="input = input.RemoveSurroundingQuotes()", span="126-126"];
m0_0_46 [cluster="RestSharp.Extensions.StringExtensions.ParseJsonDate(string, System.Globalization.CultureInfo)", file=merged, label="long unix", span="128-128"];
m0_0_47 [cluster="RestSharp.Extensions.StringExtensions.ParseJsonDate(string, System.Globalization.CultureInfo)", file=merged, label="long.TryParse(input, out unix)", span="130-130"];
m0_0_50 [cluster="RestSharp.Extensions.StringExtensions.ParseJsonDate(string, System.Globalization.CultureInfo)", file=merged, label="return epoch.AddMilliseconds(unix);", span="135-135"];
m0_0_52 [cluster="RestSharp.Extensions.StringExtensions.ParseJsonDate(string, System.Globalization.CultureInfo)", file=merged, label="input.Contains(''new Date('')", span="142-142"];
m0_0_53 [cluster="RestSharp.Extensions.StringExtensions.ParseJsonDate(string, System.Globalization.CultureInfo)", file=merged, label="input = input.Replace('' '', '''')", span="144-144"];
m0_0_48 [cluster="RestSharp.Extensions.StringExtensions.ParseJsonDate(string, System.Globalization.CultureInfo)", file=merged, label="DateTime epoch = new DateTime(1970, 1, 1, 0, 0, 0, DateTimeKind.Utc)", span="132-132"];
m0_0_56 [cluster="RestSharp.Extensions.StringExtensions.ParseJsonDate(string, System.Globalization.CultureInfo)", file=merged, label="Exit RestSharp.Extensions.StringExtensions.ParseJsonDate(string, System.Globalization.CultureInfo)", span="122-122"];
m0_52 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", span="105-105"];
m0_53 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", file=merged, label="string content = ''{\''users\'':[\''johnsheehan\'',\''jagregory\'',null,\''drusellers\'',\''structuremap\'']}''", span="107-107"];
m0_54 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", file=merged, label="JsonDeserializer json = new JsonDeserializer { RootElement = ''users'' }", span="108-108"];
m0_55 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", file=merged, label="List<string> output = json.Deserialize<List<string>>(new RestResponse { Content = content })", span="109-109"];
m0_56 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", file=merged, label="Assert.IsNotEmpty(output)", span="111-111"];
m0_57 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", file=merged, label="Assert.AreEqual(null, output[2])", span="112-112"];
m0_58 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", file=merged, label="Assert.AreEqual(5, output.Count)", span="113-113"];
m0_59 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", span="105-105"];
m0_117 [cluster="RestSharp.Tests.JsonObject.JsonObject()", file=merged, label="Entry RestSharp.Tests.JsonObject.JsonObject()", span="134-134"];
m0_232 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", span="367-367"];
m0_233 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file=merged, label="string data = File.ReadAllText(Path.Combine(''SampleData'', ''jsonenumtypes.txt''))", span="369-369"];
m0_234 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file=merged, label="RestResponse response = new RestResponse { Content = data }", span="370-370"];
m0_235 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file=merged, label="JsonDeserializer json = new JsonDeserializer()", span="371-371"];
m0_236 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file=merged, label="JsonEnumTypesTestStructure output = json.Deserialize<JsonEnumTypesTestStructure>(response)", span="372-372"];
m0_237 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file=merged, label="Assert.AreEqual(ByteEnum.EnumMin, output.ByteEnumType)", span="374-374"];
m0_238 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file=merged, label="Assert.AreEqual(SByteEnum.EnumMin, output.SByteEnumType)", span="375-375"];
m0_239 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file=merged, label="Assert.AreEqual(ShortEnum.EnumMin, output.ShortEnumType)", span="376-376"];
m0_240 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file=merged, label="Assert.AreEqual(UShortEnum.EnumMin, output.UShortEnumType)", span="377-377"];
m0_241 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file=merged, label="Assert.AreEqual(IntEnum.EnumMin, output.IntEnumType)", span="378-378"];
m0_242 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file=merged, label="Assert.AreEqual(UIntEnum.EnumMin, output.UIntEnumType)", span="379-379"];
m0_243 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file=merged, label="Assert.AreEqual(LongEnum.EnumMin, output.LongEnumType)", span="380-380"];
m0_244 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file=merged, label="Assert.AreEqual(ULongEnum.EnumMin, output.ULongEnumType)", span="381-381"];
m0_245 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", span="367-367"];
m0_119 [cluster="RestSharp.Tests.JsonObject.ToString()", file=merged, label="Entry RestSharp.Tests.JsonObject.ToString()", span="342-342"];
m0_305 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root_Alternative_Culture()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root_Alternative_Culture()", span="468-468"];
m0_306 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root_Alternative_Culture()", file=merged, label="new CultureChange(ALTERNATIVE_CULTURE)", span="470-470"];
m0_307 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root_Alternative_Culture()", file=merged, label="this.Can_Deserialize_With_Default_Root()", span="472-472"];
m0_308 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root_Alternative_Culture()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root_Alternative_Culture()", span="468-468"];
m0_0_102 [cluster="RestSharp.Extensions.StringExtensions.Matches(string, string)", file=merged, label="Entry RestSharp.Extensions.StringExtensions.Matches(string, string)", span="232-232"];
m0_0_103 [cluster="RestSharp.Extensions.StringExtensions.Matches(string, string)", file=merged, label="return Regex.IsMatch(input, pattern);", span="234-234"];
m0_0_104 [cluster="RestSharp.Extensions.StringExtensions.Matches(string, string)", file=merged, label="Exit RestSharp.Extensions.StringExtensions.Matches(string, string)", span="232-232"];
m0_120 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", span="206-206"];
m0_121 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file=merged, label="DateTime item1 = new DateTime(2010, 2, 8, 11, 11, 11)", span="208-208"];
m0_122 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file=merged, label="DateTime item2 = item1.AddSeconds(12345)", span="209-209"];
m0_124 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file=merged, label="data[''Items''] = new JsonArray\r\n                            {\r\n                                item1.ToString(''u''),\r\n                                \\nitem2.ToString(''u'')\r\n                            }", span="212-216"];
m0_129 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file=merged, label="Assert.AreEqual(item1, p.Items[0])", span="223-223"];
m0_123 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file=merged, label="JsonObject data = new JsonObject()", span="210-210"];
m0_130 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file=merged, label="Assert.AreEqual(item2, p.Items[1])", span="224-224"];
m0_126 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file=merged, label="RestResponse response = new RestResponse { Content = data.ToString() }", span="219-219"];
m0_125 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file=merged, label="JsonDeserializer d = new JsonDeserializer()", span="218-218"];
m0_127 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file=merged, label="GenericWithList<DateTime> p = d.Deserialize<GenericWithList<DateTime>>(response)", span="220-220"];
m0_128 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file=merged, label="Assert.AreEqual(2, p.Items.Count)", span="222-222"];
m0_131 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", span="206-206"];
m0_60 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Item_Without_Array()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Item_Without_Array()", span="117-117"];
m0_61 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Item_Without_Array()", file=merged, label="string content = ''{\''users\'':\''johnsheehan\''}''", span="119-119"];
m0_62 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Item_Without_Array()", file=merged, label="JsonDeserializer json = new JsonDeserializer { RootElement = ''users'' }", span="120-120"];
m0_63 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Item_Without_Array()", file=merged, label="List<string> output = json.Deserialize<List<string>>(new RestResponse { Content = content })", span="121-121"];
m0_64 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Item_Without_Array()", file=merged, label="Assert.True(output.SequenceEqual(new[] { ''johnsheehan'' }))", span="123-123"];
m0_65 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Item_Without_Array()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Item_Without_Array()", span="117-117"];
m0_269 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", span="424-424"];
m0_270 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", file=merged, label="JsonObject doc = new JsonObject()", span="426-426"];
m0_271 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", file=merged, label="doc[''IsCool''] = 1", span="428-428"];
m0_273 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", file=merged, label="RestResponse response = new RestResponse { Content = doc.ToString() }", span="431-431"];
m0_272 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", file=merged, label="JsonDeserializer d = new JsonDeserializer()", span="430-430"];
m0_274 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", file=merged, label="PersonForJson p = d.Deserialize<PersonForJson>(response)", span="432-432"];
m0_275 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", file=merged, label="Assert.True(p.IsCool)", span="434-434"];
m0_276 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", span="424-424"];
m0_0_25 [cluster="System.Text.StringBuilder.ToString()", file=merged, label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m0_74 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", span="137-137"];
m0_75 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", file=merged, label="string doc = File.ReadAllText(Path.Combine(''SampleData'', ''sojson.txt''))", span="139-139"];
m0_76 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", file=merged, label="JsonDeserializer json = new JsonDeserializer { RootElement = ''User'' }", span="140-140"];
m0_77 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", file=merged, label="SoUser output = json.Deserialize<SoUser>(new RestResponse { Content = doc })", span="141-141"];
m0_78 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", file=merged, label="Assert.AreEqual(''John Sheehan'', output.DisplayName)", span="143-143"];
m0_79 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", span="137-137"];
m0_183 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", file=merged, label="Entry RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", span="982-982"];
m0_617 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", file=merged, label="JsonObject doc = new JsonObject()", span="984-984"];
m0_618 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", file=merged, label="doc[''Id''] = 123", span="986-986"];
m0_619 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", file=merged, label="doc[''StartDate''] = new DateTime(2010, 2, 21, 9, 35, 00, DateTimeKind.Utc)", span="987-987"];
m0_620 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", file=merged, label="doc[''UniqueId''] = new Guid(GUID_STRING).ToString()", span="988-988"];
m0_621 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", file=merged, label="return doc.ToString();", span="990-990"];
m0_622 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", file=merged, label="Exit RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", span="982-982"];
m0_0_61 [cluster="string.Contains(string)", file=merged, label="Entry string.Contains(string)", span="0-0"];
m0_0_23 [cluster="string.Substring(int, int)", file=merged, label="Entry string.Substring(int, int)", span="0-0"];
m0_414 [cluster="RestSharp.Tests.JsonTests.CreateIsoDateJson()", file=merged, label="Entry RestSharp.Tests.JsonTests.CreateIsoDateJson()", span="893-893"];
m0_570 [cluster="RestSharp.Tests.JsonTests.CreateIsoDateJson()", file=merged, label="Birthdate bd = new Birthdate\r\n                           {\r\n                               Value = new DateTime(1910, 9, 25, \\n9, 30, 25, DateTimeKind.Utc)\r\n                           }", span="895-898"];
m0_571 [cluster="RestSharp.Tests.JsonTests.CreateIsoDateJson()", file=merged, label="return SimpleJson.SerializeObject(bd);", span="900-900"];
m0_572 [cluster="RestSharp.Tests.JsonTests.CreateIsoDateJson()", file=merged, label="Exit RestSharp.Tests.JsonTests.CreateIsoDateJson()", span="893-893"];
m0_88 [cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file=merged, label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0"];
m0_422 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateJson()", file=merged, label="Entry RestSharp.Tests.JsonTests.CreateUnixDateJson()", span="903-903"];
m0_574 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateJson()", file=merged, label="JsonObject doc = new JsonObject()", span="905-905"];
m0_575 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateJson()", file=merged, label="doc[''Value''] = 1309421746", span="907-907"];
m0_576 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateJson()", file=merged, label="return doc.ToString();", span="909-909"];
m0_577 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateJson()", file=merged, label="Exit RestSharp.Tests.JsonTests.CreateUnixDateJson()", span="903-903"];
m0_0_129 [cluster="string.Split(params char[])", file=merged, label="Entry string.Split(params char[])", span="0-0"];
m0_0_95 [cluster="System.Text.RegularExpressions.Regex.IsMatch(string)", file=merged, label="Entry System.Text.RegularExpressions.Regex.IsMatch(string)", span="0-0"];
m0_459 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", span="705-705"];
m0_460 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", file=merged, label="DateTimeTestStructure payload = GetPayLoad<DateTimeTestStructure>(''datetimes.txt'')", span="707-707"];
m0_461 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", file=merged, label="Assert.NotNull(payload.NullableDateTimeOffsetWithValue)", span="709-709"];
m0_462 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", file=merged, label="Assert.AreEqual(\r\n                new DateTime(2011, 6, 30, 8, 15, 46, 929, DateTimeKind.Utc).ToString(''yyyy-MM-dd HH:mm:ss.fff''),\r\n                \\npayload.NullableDateTimeOffsetWithValue.Value.ToString(''yyyy-MM-dd HH:mm:ss.fff''))", span="710-712"];
m0_463 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", span="705-705"];
m0_0_4 [cluster="RestSharp.Extensions.StringExtensions.UrlEncode(string)", file=merged, label="Entry RestSharp.Extensions.StringExtensions.UrlEncode(string)", span="49-49"];
m0_0_5 [cluster="RestSharp.Extensions.StringExtensions.UrlEncode(string)", file=merged, label="int maxLength = 32766", span="51-51"];
m0_0_6 [cluster="RestSharp.Extensions.StringExtensions.UrlEncode(string)", file=merged, label="input == null", span="53-53"];
m0_0_8 [cluster="RestSharp.Extensions.StringExtensions.UrlEncode(string)", file=merged, label="input.Length <= maxLength", span="58-58"];
m0_0_9 [cluster="RestSharp.Extensions.StringExtensions.UrlEncode(string)", file=merged, label="return Uri.EscapeDataString(input);", span="60-60"];
m0_0_10 [cluster="RestSharp.Extensions.StringExtensions.UrlEncode(string)", file=merged, label="StringBuilder sb = new StringBuilder(input.Length * 2)", span="63-63"];
m0_0_12 [cluster="RestSharp.Extensions.StringExtensions.UrlEncode(string)", file=merged, label="index < input.Length", span="66-66"];
m0_0_13 [cluster="RestSharp.Extensions.StringExtensions.UrlEncode(string)", file=merged, label="int length = Math.Min(input.Length - index, maxLength)", span="68-68"];
m0_0_14 [cluster="RestSharp.Extensions.StringExtensions.UrlEncode(string)", file=merged, label="string subString = input.Substring(index, length)", span="69-69"];
m0_0_7 [cluster="RestSharp.Extensions.StringExtensions.UrlEncode(string)", file=merged, label="throw new ArgumentNullException(''input'');", span="55-55"];
m0_0_11 [cluster="RestSharp.Extensions.StringExtensions.UrlEncode(string)", file=merged, label="int index = 0", span="64-64"];
m0_0_15 [cluster="RestSharp.Extensions.StringExtensions.UrlEncode(string)", file=merged, label="sb.Append(Uri.EscapeDataString(subString))", span="71-71"];
m0_0_17 [cluster="RestSharp.Extensions.StringExtensions.UrlEncode(string)", file=merged, label="return sb.ToString();", span="75-75"];
m0_0_16 [cluster="RestSharp.Extensions.StringExtensions.UrlEncode(string)", file=merged, label="index += subString.Length", span="72-72"];
m0_0_18 [cluster="RestSharp.Extensions.StringExtensions.UrlEncode(string)", file=merged, label="Exit RestSharp.Extensions.StringExtensions.UrlEncode(string)", span="49-49"];
m0_0_159 [cluster="RestSharp.Extensions.StringExtensions.AddSpaces(string)", file=merged, label="Entry RestSharp.Extensions.StringExtensions.AddSpaces(string)", span="373-373"];
m0_0_160 [cluster="RestSharp.Extensions.StringExtensions.AddSpaces(string)", file=merged, label="return Regex.Replace(\r\n                Regex.Replace(\r\n                    Regex.Replace(pascalCasedWord, @''([A-Z]+)([A-Z][\\na-z])'', ''$1 $2''),\r\n                    @''([a-z\d])([A-Z])'',\r\n                    ''$1 $2''),\r\n                @''[-\s]'',\r\n                '' '');", span="375-381"];
m0_0_161 [cluster="RestSharp.Extensions.StringExtensions.AddSpaces(string)", file=merged, label="Exit RestSharp.Extensions.StringExtensions.AddSpaces(string)", span="373-373"];
m0_0_133 [cluster="char.ToUpper(char, System.Globalization.CultureInfo)", file=merged, label="Entry char.ToUpper(char, System.Globalization.CultureInfo)", span="0-0"];
m0_204 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", span="327-327"];
m0_205 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", file=merged, label="string data = File.ReadAllText(Path.Combine(''SampleData'', ''jsonarray.txt''))", span="329-329"];
m0_206 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", file=merged, label="RestResponse response = new RestResponse { Content = data }", span="330-330"];
m0_207 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", file=merged, label="JsonDeserializer json = new JsonDeserializer()", span="331-331"];
m0_208 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", file=merged, label="List<status> output = json.Deserialize<List<status>>(response)", span="332-332"];
m0_209 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", file=merged, label="Assert.AreEqual(4, output.Count)", span="334-334"];
m0_210 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", span="327-327"];
m0_0_34 [cluster="RestSharp.Extensions.StringExtensions.HasValue(string)", file=merged, label="Entry RestSharp.Extensions.StringExtensions.HasValue(string)", span="100-100"];
m0_0_35 [cluster="RestSharp.Extensions.StringExtensions.HasValue(string)", file=merged, label="return !string.IsNullOrEmpty(input);", span="102-102"];
m0_0_36 [cluster="RestSharp.Extensions.StringExtensions.HasValue(string)", file=merged, label="Exit RestSharp.Extensions.StringExtensions.HasValue(string)", span="100-100"];
m0_171 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", span="278-278"];
m0_172 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file=merged, label="string doc = CreateJsonWithoutEmptyValues()", span="280-280"];
m0_173 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file=merged, label="JsonDeserializer json = new JsonDeserializer()", span="281-281"];
m0_174 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file=merged, label="NullableValues output = json.Deserialize<NullableValues>(new RestResponse { Content = doc })", span="282-282"];
m0_175 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file=merged, label="Assert.NotNull(output.Id)", span="284-284"];
m0_176 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file=merged, label="Assert.NotNull(output.StartDate)", span="285-285"];
m0_177 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file=merged, label="Assert.NotNull(output.UniqueId)", span="286-286"];
m0_178 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file=merged, label="Assert.AreEqual(123, output.Id)", span="288-288"];
m0_179 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file=merged, label="Assert.NotNull(output.StartDate)", span="289-289"];
m0_180 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file=merged, label="Assert.AreEqual(\r\n                new DateTime(2010, 2, 21, 9, 35, 00, DateTimeKind.Utc),\r\n                output.StartDate.Value)", span="290-292"];
m0_181 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file=merged, label="Assert.AreEqual(new Guid(GUID_STRING), output.UniqueId)", span="293-293"];
m0_182 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", span="278-278"];
m0_455 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeWithOffset()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeWithOffset()", span="695-695"];
m0_456 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeWithOffset()", file=merged, label="Iso8601DateTimeTestStructure payload = GetPayLoad<Iso8601DateTimeTestStructure>(''iso8601datetimes.txt'')", span="697-697"];
m0_457 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeWithOffset()", file=merged, label="Assert.AreEqual(\r\n                new DateTime(2012, 7, 19, 10, 23, 25, 544, DateTimeKind.Utc),\r\n                payload.DateTimeWithOffset.ToUniversalTime())", span="699-701"];
m0_458 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeWithOffset()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeWithOffset()", span="695-695"];
m0_415 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", span="615-615"];
m0_416 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", file=merged, label="string doc = CreateUnixDateJson()", span="617-617"];
m0_417 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", file=merged, label="JsonDeserializer d = new JsonDeserializer()", span="618-618"];
m0_418 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", file=merged, label="RestResponse response = new RestResponse { Content = doc }", span="619-619"];
m0_419 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", file=merged, label="Birthdate bd = d.Deserialize<Birthdate>(response)", span="620-620"];
m0_420 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", file=merged, label="Assert.AreEqual(new DateTime(2011, 6, 30, 8, 15, 46, DateTimeKind.Utc), bd.Value)", span="622-622"];
m0_421 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", span="615-615"];
m0_68 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Toplevel_Item_Without_Array()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Toplevel_Item_Without_Array()", span="127-127"];
m0_69 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Toplevel_Item_Without_Array()", file=merged, label="string content = ''\''johnsheehan\''''", span="129-129"];
m0_70 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Toplevel_Item_Without_Array()", file=merged, label="JsonDeserializer json = new JsonDeserializer()", span="130-130"];
m0_71 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Toplevel_Item_Without_Array()", file=merged, label="List<string> output = json.Deserialize<List<string>>(new RestResponse { Content = content })", span="131-131"];
m0_72 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Toplevel_Item_Without_Array()", file=merged, label="Assert.True(output.SequenceEqual(new[] { ''johnsheehan'' }))", span="133-133"];
m0_73 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Toplevel_Item_Without_Array()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Toplevel_Item_Without_Array()", span="127-127"];
m0_573 [cluster="RestSharp.Tests.SampleClasses.Birthdate.Birthdate()", file=merged, label="Entry RestSharp.Tests.SampleClasses.Birthdate.Birthdate()", span="171-171"];
m0_378 [cluster="RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file=merged, label="Entry RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", span="570-570"];
m0_379 [cluster="RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file=merged, label="string doc = CreateJson()", span="572-572"];
m0_380 [cluster="RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file=merged, label="RestResponse response = new RestResponse { Content = doc }", span="573-573"];
m0_381 [cluster="RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file=merged, label="JsonDeserializer d = new JsonDeserializer()", span="574-574"];
m0_382 [cluster="RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file=merged, label="PersonForJson p = d.Deserialize<PersonForJson>(response)", span="575-575"];
m0_383 [cluster="RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file=merged, label="Assert.Null(p.ReadOnlyProxy)", span="577-577"];
m0_384 [cluster="RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file=merged, label="Exit RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", span="570-570"];
m0_160 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", file=merged, label="Entry RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", span="960-960"];
m0_605 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", file=merged, label="JsonObject doc = new JsonObject()", span="962-962"];
m0_606 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", file=merged, label="doc[''Id''] = null", span="964-964"];
m0_607 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", file=merged, label="doc[''StartDate''] = null", span="965-965"];
m0_608 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", file=merged, label="doc[''UniqueId''] = null", span="966-966"];
m0_609 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", file=merged, label="return doc.ToString();", span="968-968"];
m0_610 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", file=merged, label="Exit RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", span="960-960"];
m0_211 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_Inherited_List()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_Inherited_List()", span="338-338"];
m0_212 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_Inherited_List()", file=merged, label="string data = File.ReadAllText(Path.Combine(''SampleData'', ''jsonarray.txt''))", span="340-340"];
m0_213 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_Inherited_List()", file=merged, label="RestResponse response = new RestResponse { Content = data }", span="341-341"];
m0_214 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_Inherited_List()", file=merged, label="JsonDeserializer json = new JsonDeserializer()", span="342-342"];
m0_215 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_Inherited_List()", file=merged, label="StatusList output = json.Deserialize<StatusList>(response)", span="343-343"];
m0_216 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_Inherited_List()", file=merged, label="Assert.AreEqual(4, output.Count)", span="345-345"];
m0_217 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_Inherited_List()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_Inherited_List()", span="338-338"];
m0_0_69 [cluster="string.StartsWith(string)", file=merged, label="Entry string.StartsWith(string)", span="0-0"];
m0_0_41 [cluster="string.Replace(string, string)", file=merged, label="Entry string.Replace(string, string)", span="0-0"];
m0_116 [cluster="System.Guid.Guid(string)", file=merged, label="Entry System.Guid.Guid(string)", span="0-0"];
m0_501 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", span="771-771"];
m0_502 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", file=merged, label="string doc = File.ReadAllText(Path.Combine(''SampleData'', ''jsondictionary.txt''))", span="773-773"];
m0_503 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", file=merged, label="JsonDeserializer json = new JsonDeserializer { RootElement = ''response'' }", span="774-774"];
m0_504 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", file=merged, label="EmployeeTracker output = json.Deserialize<EmployeeTracker>(new RestResponse { Content = doc })", span="775-775"];
m0_505 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", file=merged, label="Assert.IsNotEmpty(output.EmployeesMail)", span="777-777"];
m0_506 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", file=merged, label="Assert.IsNotEmpty(output.EmployeesTime)", span="778-778"];
m0_507 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", file=merged, label="Assert.IsNotEmpty(output.EmployeesPay)", span="779-779"];
m0_508 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", span="771-771"];
m0_202 [cluster="System.DateTime.ToString(string, System.IFormatProvider)", file=merged, label="Entry System.DateTime.ToString(string, System.IFormatProvider)", span="0-0"];
m0_150 [cluster="System.DateTime.ToString()", file=merged, label="Entry System.DateTime.ToString()", span="0-0"];
m0_0_94 [cluster="System.Text.RegularExpressions.Regex.Regex(string)", file=merged, label="Entry System.Text.RegularExpressions.Regex.Regex(string)", span="0-0"];
m0_547 [cluster="System.Collections.Generic.List<T>.Add(T)", file=merged, label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m0_118 [cluster="RestSharp.Tests.JsonArray.JsonArray()", file=merged, label="Entry RestSharp.Tests.JsonArray.JsonArray()", span="91-91"];
m0_490 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Decimal_With_Four_Zeros_After_Floating_Point()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Decimal_With_Four_Zeros_After_Floating_Point()", span="752-752"];
m0_491 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Decimal_With_Four_Zeros_After_Floating_Point()", file=merged, label="string json = ''{\''Value\'':0.00005557}''", span="754-754"];
m0_492 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Decimal_With_Four_Zeros_After_Floating_Point()", file=merged, label="RestResponse response = new RestResponse { Content = json }", span="755-755"];
m0_493 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Decimal_With_Four_Zeros_After_Floating_Point()", file=merged, label="JsonDeserializer d = new JsonDeserializer()", span="756-756"];
m0_494 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Decimal_With_Four_Zeros_After_Floating_Point()", file=merged, label="DecimalNumber result = d.Deserialize<DecimalNumber>(response)", span="757-757"];
m0_495 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Decimal_With_Four_Zeros_After_Floating_Point()", file=merged, label="Assert.AreEqual(result.Value, .00005557m)", span="759-759"];
m0_496 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Decimal_With_Four_Zeros_After_Floating_Point()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Decimal_With_Four_Zeros_After_Floating_Point()", span="752-752"];
m0_32 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", span="74-74"];
m0_33 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", file=merged, label="string doc = File.ReadAllText(Path.Combine(''SampleData'', ''4sq.txt''))", span="76-76"];
m0_34 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", file=merged, label="JsonDeserializer json = new JsonDeserializer { RootElement = ''response'' }", span="77-77"];
m0_35 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", file=merged, label="VenuesResponse output = json.Deserialize<VenuesResponse>(new RestResponse { Content = doc })", span="78-78"];
m0_36 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", file=merged, label="Assert.IsNotEmpty(output.Groups)", span="80-80"];
m0_37 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", span="74-74"];
m0_345 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", span="524-524"];
m0_346 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="string doc = CreateJsonWithDashes()", span="526-526"];
m0_347 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="JsonDeserializer d = new JsonDeserializer()", span="527-527"];
m0_348 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="RestResponse response = new RestResponse { Content = doc }", span="528-528"];
m0_349 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="PersonForJson p = d.Deserialize<PersonForJson>(response)", span="529-529"];
m0_350 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="Assert.AreEqual(''John Sheehan'', p.Name)", span="531-531"];
m0_351 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="Assert.AreEqual(28, p.Age)", span="533-533"];
m0_352 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="Assert.AreEqual(long.MaxValue, p.BigNumber)", span="534-534"];
m0_353 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="Assert.AreEqual(99.9999m, p.Percent)", span="535-535"];
m0_354 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="Assert.AreEqual(false, p.IsCool)", span="536-536"];
m0_355 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="Assert.AreEqual(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="537-537"];
m0_356 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="Assert.AreEqual(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="538-538"];
m0_357 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="Assert.NotNull(p.Friends)", span="539-539"];
m0_358 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="Assert.AreEqual(10, p.Friends.Count)", span="540-540"];
m0_359 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="Assert.NotNull(p.BestFriend)", span="541-541"];
m0_360 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="Assert.AreEqual(''The Fonz'', p.BestFriend.Name)", span="542-542"];
m0_361 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="Assert.AreEqual(1952, p.BestFriend.Since)", span="543-543"];
m0_362 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="Assert.IsNotEmpty(p.Foes)", span="544-544"];
m0_363 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="Assert.AreEqual(''Foe 1'', p.Foes[''dict1''].Nickname)", span="545-545"];
m0_364 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="Assert.AreEqual(''Foe 2'', p.Foes[''dict2''].Nickname)", span="546-546"];
m0_365 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", span="524-524"];
m0_0_37 [cluster="string.IsNullOrEmpty(string)", file=merged, label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m0_402 [cluster="RestSharp.Tests.JsonTests.GetPayLoad<T>(string)", file=merged, label="Entry RestSharp.Tests.JsonTests.GetPayLoad<T>(string)", span="1029-1029"];
m0_637 [cluster="RestSharp.Tests.JsonTests.GetPayLoad<T>(string)", file=merged, label="string doc = File.ReadAllText(Path.Combine(''SampleData'', fileName))", span="1031-1031"];
m0_638 [cluster="RestSharp.Tests.JsonTests.GetPayLoad<T>(string)", file=merged, label="RestResponse response = new RestResponse { Content = doc }", span="1032-1032"];
m0_639 [cluster="RestSharp.Tests.JsonTests.GetPayLoad<T>(string)", file=merged, label="JsonDeserializer d = new JsonDeserializer()", span="1033-1033"];
m0_640 [cluster="RestSharp.Tests.JsonTests.GetPayLoad<T>(string)", file=merged, label="return d.Deserialize<T>(response);", span="1035-1035"];
m0_641 [cluster="RestSharp.Tests.JsonTests.GetPayLoad<T>(string)", file=merged, label="Exit RestSharp.Tests.JsonTests.GetPayLoad<T>(string)", span="1029-1029"];
m0_0_57 [cluster="string.RemoveSurroundingQuotes()", file=merged, label="Entry string.RemoveSurroundingQuotes()", span="158-158"];
m0_509 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Plain_Values()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Plain_Values()", span="783-783"];
m0_510 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Plain_Values()", file=merged, label="string json = ''\''c02bdd1e-cce3-4b9c-8473-165e6e93b92a\''''", span="785-785"];
m0_511 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Plain_Values()", file=merged, label="RestResponse response = new RestResponse { Content = json }", span="786-786"];
m0_512 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Plain_Values()", file=merged, label="JsonDeserializer d = new JsonDeserializer()", span="787-787"];
m0_513 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Plain_Values()", file=merged, label="Guid result = d.Deserialize<Guid>(response)", span="788-788"];
m0_514 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Plain_Values()", file=merged, label="Assert.AreEqual(result, new Guid(''c02bdd1e-cce3-4b9c-8473-165e6e93b92a''))", span="790-790"];
m0_515 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Plain_Values()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Plain_Values()", span="783-783"];
m0_80 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", span="147-147"];
m0_81 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", file=merged, label="string doc = File.ReadAllText(Path.Combine(''SampleData'', ''jsondictionary.txt''))", span="149-149"];
m0_82 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", file=merged, label="JsonDeserializer json = new JsonDeserializer()", span="150-150"];
m0_83 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", file=merged, label="Dictionary<string, object> output =\r\n                json.Deserialize<Dictionary<string, object>>(new RestResponse { Content = \\ndoc })", span="151-152"];
m0_84 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", file=merged, label="Assert.AreEqual(output.Keys.Count, 3)", span="154-154"];
m0_85 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", file=merged, label="object firstKeysVal = output.FirstOrDefault().Value", span="156-156"];
m0_86 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", file=merged, label="Assert.IsInstanceOf<IDictionary>(firstKeysVal)", span="158-158"];
m0_87 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", span="147-147"];
m0_261 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", span="410-410"];
m0_262 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", file=merged, label="JsonObject doc = new JsonObject()", span="412-412"];
m0_263 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", file=merged, label="doc[''Age''] = ''28''", span="414-414"];
m0_265 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", file=merged, label="RestResponse response = new RestResponse { Content = doc.ToString() }", span="417-417"];
m0_264 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", file=merged, label="JsonDeserializer d = new JsonDeserializer()", span="416-416"];
m0_266 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", file=merged, label="PersonForJson p = d.Deserialize<PersonForJson>(response)", span="418-418"];
m0_267 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", file=merged, label="Assert.AreEqual(28, p.Age)", span="420-420"];
m0_268 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", span="410-410"];
m0_0_179 [cluster="string.AddDashes()", file=merged, label="Entry string.AddDashes()", span="347-347"];
m0_304 [cluster="System.Uri.Uri(string, System.UriKind)", file=merged, label="Entry System.Uri.Uri(string, System.UriKind)", span="0-0"];
m0_0_155 [cluster="RestSharp.Extensions.StringExtensions.AddUnderscorePrefix(string)", file=merged, label="Entry RestSharp.Extensions.StringExtensions.AddUnderscorePrefix(string)", span="363-363"];
m0_0_156 [cluster="RestSharp.Extensions.StringExtensions.AddUnderscorePrefix(string)", file=merged, label="return string.Format(''_{0}'', pascalCasedWord);", span="365-365"];
m0_0_157 [cluster="RestSharp.Extensions.StringExtensions.AddUnderscorePrefix(string)", file=merged, label="Exit RestSharp.Extensions.StringExtensions.AddUnderscorePrefix(string)", span="363-363"];
m0_135 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", span="228-228"];
m0_136 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", file=merged, label="DateTime item0 = new DateTime(2010, 2, 8, 11, 11, 11, DateTimeKind.Local)", span="230-230"];
m0_137 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", file=merged, label="DateTime item1 = new DateTime(2011, 2, 8, 11, 11, 11, DateTimeKind.Utc)", span="231-231"];
m0_140 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", file=merged, label="data[''Items''] = new JsonArray\r\n                            {\r\n                                item0.ToString(),\r\n                                \\nitem1.ToString(),\r\n                                item2.ToString(),\r\n                                ''/Date(1309421746929+\\n0000)/''\r\n                            }", span="235-241"];
m0_144 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", file=merged, label="Assert.AreNotEqual(item0.Kind, p.Items[0].Kind)", span="247-247"];
m0_138 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", file=merged, label="DateTime item2 = new DateTime(2012, 2, 8, 11, 11, 11, DateTimeKind.Unspecified)", span="232-232"];
m0_145 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", file=merged, label="Assert.AreEqual(item1.Kind, p.Items[1].Kind)", span="248-248"];
m0_139 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", file=merged, label="JsonObject data = new JsonObject()", span="233-233"];
m0_142 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", file=merged, label="RestResponse response = new RestResponse { Content = data.ToString() }", span="244-244"];
m0_141 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", file=merged, label="JsonDeserializer d = new JsonDeserializer()", span="243-243"];
m0_143 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", file=merged, label="GenericWithList<DateTime> p = d.Deserialize<GenericWithList<DateTime>>(response)", span="245-245"];
m0_146 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", file=merged, label="Assert.AreEqual(DateTimeKind.Utc, p.Items[2].Kind)", span="249-249"];
m0_147 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", file=merged, label="Assert.AreEqual(DateTimeKind.Utc, p.Items[3].Kind)", span="250-250"];
m0_148 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", span="228-228"];
m0_464 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Null()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Null()", span="716-716"];
m0_465 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Null()", file=merged, label="DateTimeTestStructure payload = GetPayLoad<DateTimeTestStructure>(''datetimes.txt'')", span="718-718"];
m0_466 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Null()", file=merged, label="Assert.Null(payload.NullableDateTimeOffsetWithNull)", span="720-720"];
m0_467 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Null()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Null()", span="716-716"];
m0_468 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", span="724-724"];
m0_469 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file=merged, label="string doc = this.CreateJsonStringDictionary()", span="726-726"];
m0_470 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file=merged, label="JsonDeserializer d = new JsonDeserializer()", span="727-727"];
m0_471 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file=merged, label="RestResponse response = new RestResponse { Content = doc }", span="728-728"];
m0_472 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file=merged, label="Dictionary<string, string> bd = d.Deserialize<Dictionary<string, string>>(response)", span="729-729"];
m0_473 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file=merged, label="Assert.AreEqual(bd[''Thing1''], ''Thing1'')", span="731-731"];
m0_474 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file=merged, label="Assert.AreEqual(bd[''Thing2''], ''Thing2'')", span="732-732"];
m0_475 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file=merged, label="Assert.AreEqual(bd[''ThingRed''], ''ThingRed'')", span="733-733"];
m0_476 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file=merged, label="Assert.AreEqual(bd[''ThingBlue''], ''ThingBlue'')", span="734-734"];
m0_477 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", span="724-724"];
m0_516 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_with_Null()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_with_Null()", span="794-794"];
m0_517 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_with_Null()", file=merged, label="string doc = File.ReadAllText(Path.Combine(''SampleData'', ''jsondictionary_null.txt''))", span="796-796"];
m0_518 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_with_Null()", file=merged, label="JsonDeserializer json = new JsonDeserializer { RootElement = ''response'' }", span="797-797"];
m0_519 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_with_Null()", file=merged, label="IDictionary<string, object> output = json.Deserialize<Dictionary<string, object>>(new RestResponse { Content = doc })", span="798-798"];
m0_520 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_with_Null()", file=merged, label="IDictionary<string, object> dictionary = (IDictionary<string, object>)output[''SomeDictionary'']", span="800-800"];
m0_521 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_with_Null()", file=merged, label="Assert.AreEqual(''abra'', dictionary[''NonNull''])", span="801-801"];
m0_522 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_with_Null()", file=merged, label="Assert.IsNull(dictionary[''Null''])", span="802-802"];
m0_523 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_with_Null()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_with_Null()", span="794-794"];
m0_309 [cluster="RestSharp.Tests.CultureChange.CultureChange(string)", file=merged, label="Entry RestSharp.Tests.CultureChange.CultureChange(string)", span="10-10"];
m0_0_3 [cluster="RestSharp.Extensions.MonoHttp.HttpUtility.UrlDecode(string)", file=merged, label="Entry RestSharp.Extensions.MonoHttp.HttpUtility.UrlDecode(string)", span="87-87"];
m0_0_181 [cluster="string.AddSpaces()", file=merged, label="Entry string.AddSpaces()", span="373-373"];
m0_0_21 [cluster="System.Text.StringBuilder.StringBuilder(int)", file=merged, label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0"];
m0_0_136 [cluster="string.ToUpper(System.Globalization.CultureInfo)", file=merged, label="Entry string.ToUpper(System.Globalization.CultureInfo)", span="0-0"];
m0_98 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", span="177-177"];
m0_99 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", file=merged, label="string doc = File.ReadAllText(Path.Combine(''SampleData'', ''GenericWithList.txt''))", span="179-179"];
m0_100 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", file=merged, label="JsonDeserializer json = new JsonDeserializer()", span="180-180"];
m0_101 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", file=merged, label="Generic<GenericWithList<Foe>> output =\r\n                json.Deserialize<Generic<GenericWithList<Foe>>>(new RestResponse { Content = \\ndoc })", span="181-182"];
m0_102 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", file=merged, label="Assert.AreEqual(''Foe sho'', output.Data.Items[0].Nickname)", span="184-184"];
m0_103 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", span="177-177"];
m0_253 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", span="396-396"];
m0_254 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", file=merged, label="JsonObject doc = new JsonObject()", span="398-398"];
m0_255 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", file=merged, label="doc[''Guid''] = GUID_STRING", span="400-400"];
m0_257 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", file=merged, label="RestResponse response = new RestResponse { Content = doc.ToString() }", span="403-403"];
m0_256 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", file=merged, label="JsonDeserializer d = new JsonDeserializer()", span="402-402"];
m0_258 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", file=merged, label="PersonForJson p = d.Deserialize<PersonForJson>(response)", span="404-404"];
m0_259 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", file=merged, label="Assert.AreEqual(new Guid(GUID_STRING), p.Guid)", span="406-406"];
m0_260 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", span="396-396"];
m0_0_141 [cluster="RestSharp.Extensions.StringExtensions.MakeInitialLowerCase(string)", file=merged, label="Entry RestSharp.Extensions.StringExtensions.MakeInitialLowerCase(string)", span="311-311"];
m0_0_142 [cluster="RestSharp.Extensions.StringExtensions.MakeInitialLowerCase(string)", file=merged, label="return string.Concat(word.Substring(0, 1).ToLower(), word.Substring(1));", span="313-313"];
m0_0_143 [cluster="RestSharp.Extensions.StringExtensions.MakeInitialLowerCase(string)", file=merged, label="Exit RestSharp.Extensions.StringExtensions.MakeInitialLowerCase(string)", span="311-311"];
m0_0_0 [cluster="RestSharp.Extensions.StringExtensions.UrlDecode(string)", file=merged, label="Entry RestSharp.Extensions.StringExtensions.UrlDecode(string)", span="40-40"];
m0_0_1 [cluster="RestSharp.Extensions.StringExtensions.UrlDecode(string)", file=merged, label="return HttpUtility.UrlDecode(input);", span="42-42"];
m0_0_2 [cluster="RestSharp.Extensions.StringExtensions.UrlDecode(string)", file=merged, label="Exit RestSharp.Extensions.StringExtensions.UrlDecode(string)", span="40-40"];
m0_162 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file=merged, label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", span="266-266"];
m0_163 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file=merged, label="string doc = CreateJsonWithEmptyValues()", span="268-268"];
m0_164 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file=merged, label="JsonDeserializer json = new JsonDeserializer()", span="269-269"];
m0_165 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file=merged, label="NullableValues output = json.Deserialize<NullableValues>(new RestResponse { Content = doc })", span="270-270"];
m0_166 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file=merged, label="Assert.Null(output.Id)", span="272-272"];
m0_167 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file=merged, label="Assert.Null(output.StartDate)", span="273-273"];
m0_168 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file=merged, label="Assert.Null(output.UniqueId)", span="274-274"];
m0_169 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file=merged, label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", span="266-266"];
m0_8 [cluster="RestSharp.Deserializers.JsonDeserializer.JsonDeserializer()", file=merged, label="Entry RestSharp.Deserializers.JsonDeserializer.JsonDeserializer()", span="22-22"];
m1_64 [cluster="RestSharp.Extensions.StringExtensions.RemoveSurroundingQuotes(string)", file="StringExtensions.cs", label="Entry RestSharp.Extensions.StringExtensions.RemoveSurroundingQuotes(string)", span="158-158"];
m1_65 [cluster="RestSharp.Extensions.StringExtensions.RemoveSurroundingQuotes(string)", file="StringExtensions.cs", label="input.StartsWith(''\'''') && input.EndsWith(''\'''')", span="160-160"];
m1_66 [cluster="RestSharp.Extensions.StringExtensions.RemoveSurroundingQuotes(string)", file="StringExtensions.cs", label="input = input.Substring(1, input.Length - 2)", span="163-163"];
m1_67 [cluster="RestSharp.Extensions.StringExtensions.RemoveSurroundingQuotes(string)", file="StringExtensions.cs", label="return input;", span="166-166"];
m1_68 [cluster="RestSharp.Extensions.StringExtensions.RemoveSurroundingQuotes(string)", file="StringExtensions.cs", label="Exit RestSharp.Extensions.StringExtensions.RemoveSurroundingQuotes(string)", span="158-158"];
m1_134 [cluster="string.Concat(object, object)", file="StringExtensions.cs", label="Entry string.Concat(object, object)", span="0-0"];
m1_79 [cluster="System.DateTime.TryParseExact(string, string[], System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTime)", file="StringExtensions.cs", label="Entry System.DateTime.TryParseExact(string, string[], System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTime)", span="0-0"];
m1_135 [cluster="string.Join(string, params string[])", file="StringExtensions.cs", label="Entry string.Join(string, params string[])", span="0-0"];
m1_148 [cluster="RestSharp.Extensions.StringExtensions.AddUnderscores(string)", file="StringExtensions.cs", label="Entry RestSharp.Extensions.StringExtensions.AddUnderscores(string)", span="331-331"];
m1_149 [cluster="RestSharp.Extensions.StringExtensions.AddUnderscores(string)", file="StringExtensions.cs", label="return Regex.Replace(\r\n                Regex.Replace(\r\n                    Regex.Replace(pascalCasedWord, @''([A-Z]+)([A-Z][\\na-z])'', ''$1_$2''),\r\n                    @''([a-z\d])([A-Z])'',\r\n                    ''$1_$2''),\r\n                @''[-\s]'',\r\n                ''_'');", span="333-339"];
m1_150 [cluster="RestSharp.Extensions.StringExtensions.AddUnderscores(string)", file="StringExtensions.cs", label="Exit RestSharp.Extensions.StringExtensions.AddUnderscores(string)", span="331-331"];
m1_58 [cluster="long.TryParse(string, out long)", file="StringExtensions.cs", label="Entry long.TryParse(string, out long)", span="0-0"];
m1_177 [cluster="string.ToCamelCase(System.Globalization.CultureInfo)", file="StringExtensions.cs", label="Entry string.ToCamelCase(System.Globalization.CultureInfo)", span="301-301"];
m1_106 [cluster="RestSharp.Extensions.StringExtensions.ToPascalCase(string, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="Entry RestSharp.Extensions.StringExtensions.ToPascalCase(string, System.Globalization.CultureInfo)", span="243-243"];
m1_107 [cluster="RestSharp.Extensions.StringExtensions.ToPascalCase(string, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="return ToPascalCase(lowercaseAndUnderscoredWord, true, culture);", span="245-245"];
m1_108 [cluster="RestSharp.Extensions.StringExtensions.ToPascalCase(string, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="Exit RestSharp.Extensions.StringExtensions.ToPascalCase(string, System.Globalization.CultureInfo)", span="243-243"];
m1_145 [cluster="RestSharp.Extensions.StringExtensions.IsUpperCase(string)", file="StringExtensions.cs", label="Entry RestSharp.Extensions.StringExtensions.IsUpperCase(string)", span="321-321"];
m1_146 [cluster="RestSharp.Extensions.StringExtensions.IsUpperCase(string)", file="StringExtensions.cs", label="return Regex.IsMatch(inputString, @''^[A-Z]+$'');", span="323-323"];
m1_147 [cluster="RestSharp.Extensions.StringExtensions.IsUpperCase(string)", file="StringExtensions.cs", label="Exit RestSharp.Extensions.StringExtensions.IsUpperCase(string)", span="321-321"];
m1_97 [cluster="System.Convert.ToInt64(string)", file="StringExtensions.cs", label="Entry System.Convert.ToInt64(string)", span="0-0"];
m1_158 [cluster="string.Format(string, object)", file="StringExtensions.cs", label="Entry string.Format(string, object)", span="0-0"];
m1_69 [cluster="string.StartsWith(string)", file="StringExtensions.cs", label="Entry string.StartsWith(string)", span="0-0"];
m1_41 [cluster="string.Replace(string, string)", file="StringExtensions.cs", label="Entry string.Replace(string, string)", span="0-0"];
m1_59 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="StringExtensions.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m1_96 [cluster="System.Text.RegularExpressions.Regex.Matches(string)", file="StringExtensions.cs", label="Entry System.Text.RegularExpressions.Regex.Matches(string)", span="0-0"];
m1_130 [cluster="string.IsUpperCase()", file="StringExtensions.cs", label="Entry string.IsUpperCase()", span="321-321"];
m1_80 [cluster="System.DateTime.TryParse(string, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTime)", file="StringExtensions.cs", label="Entry System.DateTime.TryParse(string, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTime)", span="0-0"];
m1_19 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="StringExtensions.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m1_29 [cluster="RestSharp.Extensions.MonoHttp.HttpUtility.HtmlDecode(string)", file="StringExtensions.cs", label="Entry RestSharp.Extensions.MonoHttp.HttpUtility.HtmlDecode(string)", span="602-602"];
m1_99 [cluster="System.DateTime.ParseExact(string, string, System.IFormatProvider)", file="StringExtensions.cs", label="Entry System.DateTime.ParseExact(string, string, System.IFormatProvider)", span="0-0"];
m1_162 [cluster="RestSharp.Extensions.StringExtensions.GetNameVariants(string, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="Entry RestSharp.Extensions.StringExtensions.GetNameVariants(string, System.Globalization.CultureInfo)", span="390-390"];
m1_163 [cluster="RestSharp.Extensions.StringExtensions.GetNameVariants(string, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="string.IsNullOrEmpty(name)", span="392-392"];
m1_164 [cluster="RestSharp.Extensions.StringExtensions.GetNameVariants(string, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="yield break;", span="394-394"];
m1_165 [cluster="RestSharp.Extensions.StringExtensions.GetNameVariants(string, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="yield return name;", span="397-397"];
m1_166 [cluster="RestSharp.Extensions.StringExtensions.GetNameVariants(string, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="yield return name.ToCamelCase(culture);", span="400-400"];
m1_167 [cluster="RestSharp.Extensions.StringExtensions.GetNameVariants(string, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="yield return name.ToLower(culture);", span="403-403"];
m1_168 [cluster="RestSharp.Extensions.StringExtensions.GetNameVariants(string, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="yield return name.AddUnderscores();", span="406-406"];
m1_169 [cluster="RestSharp.Extensions.StringExtensions.GetNameVariants(string, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="yield return name.AddUnderscores().ToLower(culture);", span="409-409"];
m1_170 [cluster="RestSharp.Extensions.StringExtensions.GetNameVariants(string, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="yield return name.AddDashes();", span="412-412"];
m1_171 [cluster="RestSharp.Extensions.StringExtensions.GetNameVariants(string, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="yield return name.AddDashes().ToLower(culture);", span="415-415"];
m1_172 [cluster="RestSharp.Extensions.StringExtensions.GetNameVariants(string, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="yield return name.AddUnderscorePrefix();", span="418-418"];
m1_173 [cluster="RestSharp.Extensions.StringExtensions.GetNameVariants(string, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="yield return name.ToCamelCase(culture).AddUnderscorePrefix();", span="421-421"];
m1_174 [cluster="RestSharp.Extensions.StringExtensions.GetNameVariants(string, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="yield return name.AddSpaces();", span="424-424"];
m1_175 [cluster="RestSharp.Extensions.StringExtensions.GetNameVariants(string, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="yield return name.AddSpaces().ToLower(culture);", span="427-427"];
m1_176 [cluster="RestSharp.Extensions.StringExtensions.GetNameVariants(string, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="Exit RestSharp.Extensions.StringExtensions.GetNameVariants(string, System.Globalization.CultureInfo)", span="390-390"];
m1_94 [cluster="System.Text.RegularExpressions.Regex.Regex(string)", file="StringExtensions.cs", label="Entry System.Text.RegularExpressions.Regex.Regex(string)", span="0-0"];
m1_138 [cluster="RestSharp.Extensions.StringExtensions.ToCamelCase(string, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="Entry RestSharp.Extensions.StringExtensions.ToCamelCase(string, System.Globalization.CultureInfo)", span="301-301"];
m1_139 [cluster="RestSharp.Extensions.StringExtensions.ToCamelCase(string, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="return MakeInitialLowerCase(ToPascalCase(lowercaseAndUnderscoredWord, culture));", span="303-303"];
m1_140 [cluster="RestSharp.Extensions.StringExtensions.ToCamelCase(string, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="Exit RestSharp.Extensions.StringExtensions.ToCamelCase(string, System.Globalization.CultureInfo)", span="301-301"];
m1_22 [cluster="System.Math.Min(int, int)", file="StringExtensions.cs", label="Entry System.Math.Min(int, int)", span="0-0"];
m1_24 [cluster="System.Text.StringBuilder.Append(string)", file="StringExtensions.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m1_42 [cluster="RestSharp.Extensions.StringExtensions.ParseJsonDate(string, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="Entry RestSharp.Extensions.StringExtensions.ParseJsonDate(string, System.Globalization.CultureInfo)", span="122-122"];
m1_43 [cluster="RestSharp.Extensions.StringExtensions.ParseJsonDate(string, System.Globalization.CultureInfo)", color=green, community=0, file="StringExtensions.cs", label="input = input.Replace(''\n'', '''')", prediction=19, span="124-124"];
m1_51 [cluster="RestSharp.Extensions.StringExtensions.ParseJsonDate(string, System.Globalization.CultureInfo)", color=green, community=0, file="StringExtensions.cs", label="return epoch.AddSeconds(unix);", prediction=20, span="137-137"];
m1_54 [cluster="RestSharp.Extensions.StringExtensions.ParseJsonDate(string, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="return ExtractDate(input, @''newDate\((-?\d+)*\)'', culture);", span="147-147"];
m1_55 [cluster="RestSharp.Extensions.StringExtensions.ParseJsonDate(string, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="return ParseFormattedDate(input, culture);", span="150-150"];
m1_44 [cluster="RestSharp.Extensions.StringExtensions.ParseJsonDate(string, System.Globalization.CultureInfo)", color=green, community=0, file="StringExtensions.cs", label="input = input.Replace(''\r'', '''')", prediction=21, span="125-125"];
m1_45 [cluster="RestSharp.Extensions.StringExtensions.ParseJsonDate(string, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="input = input.RemoveSurroundingQuotes()", span="126-126"];
m1_46 [cluster="RestSharp.Extensions.StringExtensions.ParseJsonDate(string, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="long unix", span="128-128"];
m1_47 [cluster="RestSharp.Extensions.StringExtensions.ParseJsonDate(string, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="long.TryParse(input, out unix)", span="130-130"];
m1_50 [cluster="RestSharp.Extensions.StringExtensions.ParseJsonDate(string, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="return epoch.AddMilliseconds(unix);", span="135-135"];
m1_52 [cluster="RestSharp.Extensions.StringExtensions.ParseJsonDate(string, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="input.Contains(''new Date('')", span="142-142"];
m1_53 [cluster="RestSharp.Extensions.StringExtensions.ParseJsonDate(string, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="input = input.Replace('' '', '''')", span="144-144"];
m1_48 [cluster="RestSharp.Extensions.StringExtensions.ParseJsonDate(string, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="DateTime epoch = new DateTime(1970, 1, 1, 0, 0, 0, DateTimeKind.Utc)", span="132-132"];
m1_56 [cluster="RestSharp.Extensions.StringExtensions.ParseJsonDate(string, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="Exit RestSharp.Extensions.StringExtensions.ParseJsonDate(string, System.Globalization.CultureInfo)", span="122-122"];
m1_109 [cluster="RestSharp.Extensions.StringExtensions.ToPascalCase(string, bool, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="Entry RestSharp.Extensions.StringExtensions.ToPascalCase(string, bool, System.Globalization.CultureInfo)", span="255-255"];
m1_110 [cluster="RestSharp.Extensions.StringExtensions.ToPascalCase(string, bool, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="string.IsNullOrEmpty(text)", span="257-257"];
m1_111 [cluster="RestSharp.Extensions.StringExtensions.ToPascalCase(string, bool, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="return text;", span="259-259"];
m1_112 [cluster="RestSharp.Extensions.StringExtensions.ToPascalCase(string, bool, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="text = text.Replace(''_'', '' '')", span="262-262"];
m1_113 [cluster="RestSharp.Extensions.StringExtensions.ToPascalCase(string, bool, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="string joinString = removeUnderscores\r\n                ? string.Empty\r\n                : ''_''", span="264-266"];
m1_122 [cluster="RestSharp.Extensions.StringExtensions.ToPascalCase(string, bool, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="restOfWord = restOfWord.ToLower(culture)", span="280-280"];
m1_123 [cluster="RestSharp.Extensions.StringExtensions.ToPascalCase(string, bool, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="char firstChar = char.ToUpper(word[0], culture)", span="283-283"];
m1_127 [cluster="RestSharp.Extensions.StringExtensions.ToPascalCase(string, bool, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="return string.Concat(words[0].Substring(0, 1).ToUpper(culture), words[0].Substring(1));", span="292-292"];
m1_114 [cluster="RestSharp.Extensions.StringExtensions.ToPascalCase(string, bool, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="string[] words = text.Split(' ')", span="267-267"];
m1_126 [cluster="RestSharp.Extensions.StringExtensions.ToPascalCase(string, bool, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="return string.Join(joinString, words);", span="289-289"];
m1_115 [cluster="RestSharp.Extensions.StringExtensions.ToPascalCase(string, bool, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="words.Length > 1 || words[0].IsUpperCase()", span="269-269"];
m1_117 [cluster="RestSharp.Extensions.StringExtensions.ToPascalCase(string, bool, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="i < words.Length", span="271-271"];
m1_118 [cluster="RestSharp.Extensions.StringExtensions.ToPascalCase(string, bool, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="words[i].Length > 0", span="273-273"];
m1_119 [cluster="RestSharp.Extensions.StringExtensions.ToPascalCase(string, bool, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="string word = words[i]", span="275-275"];
m1_124 [cluster="RestSharp.Extensions.StringExtensions.ToPascalCase(string, bool, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="words[i] = string.Concat(firstChar, restOfWord)", span="285-285"];
m1_116 [cluster="RestSharp.Extensions.StringExtensions.ToPascalCase(string, bool, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="int i = 0", span="271-271"];
m1_125 [cluster="RestSharp.Extensions.StringExtensions.ToPascalCase(string, bool, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="i++", span="271-271"];
m1_120 [cluster="RestSharp.Extensions.StringExtensions.ToPascalCase(string, bool, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="string restOfWord = word.Substring(1)", span="276-276"];
m1_121 [cluster="RestSharp.Extensions.StringExtensions.ToPascalCase(string, bool, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="restOfWord.IsUpperCase()", span="278-278"];
m1_128 [cluster="RestSharp.Extensions.StringExtensions.ToPascalCase(string, bool, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="Exit RestSharp.Extensions.StringExtensions.ToPascalCase(string, bool, System.Globalization.CultureInfo)", span="255-255"];
m1_38 [cluster="RestSharp.Extensions.StringExtensions.RemoveUnderscoresAndDashes(string)", file="StringExtensions.cs", label="Entry RestSharp.Extensions.StringExtensions.RemoveUnderscoresAndDashes(string)", span="110-110"];
m1_39 [cluster="RestSharp.Extensions.StringExtensions.RemoveUnderscoresAndDashes(string)", file="StringExtensions.cs", label="return input.Replace(''_'', '''')\r\n                        .Replace(''-'', '''');", span="112-113"];
m1_40 [cluster="RestSharp.Extensions.StringExtensions.RemoveUnderscoresAndDashes(string)", file="StringExtensions.cs", label="Exit RestSharp.Extensions.StringExtensions.RemoveUnderscoresAndDashes(string)", span="110-110"];
m1_37 [cluster="string.IsNullOrEmpty(string)", file="StringExtensions.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m1_57 [cluster="string.RemoveSurroundingQuotes()", file="StringExtensions.cs", label="Entry string.RemoveSurroundingQuotes()", span="158-158"];
m1_151 [cluster="System.Text.RegularExpressions.Regex.Replace(string, string, string)", file="StringExtensions.cs", label="Entry System.Text.RegularExpressions.Regex.Replace(string, string, string)", span="0-0"];
m1_102 [cluster="RestSharp.Extensions.StringExtensions.Matches(string, string)", file="StringExtensions.cs", label="Entry RestSharp.Extensions.StringExtensions.Matches(string, string)", span="232-232"];
m1_103 [cluster="RestSharp.Extensions.StringExtensions.Matches(string, string)", file="StringExtensions.cs", label="return Regex.IsMatch(input, pattern);", span="234-234"];
m1_104 [cluster="RestSharp.Extensions.StringExtensions.Matches(string, string)", file="StringExtensions.cs", label="Exit RestSharp.Extensions.StringExtensions.Matches(string, string)", span="232-232"];
m1_144 [cluster="string.ToLower()", file="StringExtensions.cs", label="Entry string.ToLower()", span="0-0"];
m1_100 [cluster="System.DateTime.Add(System.TimeSpan)", file="StringExtensions.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m1_33 [cluster="RestSharp.Extensions.MonoHttp.HttpUtility.HtmlEncode(string)", file="StringExtensions.cs", label="Entry RestSharp.Extensions.MonoHttp.HttpUtility.HtmlEncode(string)", span="625-625"];
m1_26 [cluster="RestSharp.Extensions.StringExtensions.HtmlDecode(string)", file="StringExtensions.cs", label="Entry RestSharp.Extensions.StringExtensions.HtmlDecode(string)", span="78-78"];
m1_27 [cluster="RestSharp.Extensions.StringExtensions.HtmlDecode(string)", file="StringExtensions.cs", label="return HttpUtility.HtmlDecode(input);", span="80-80"];
m1_28 [cluster="RestSharp.Extensions.StringExtensions.HtmlDecode(string)", file="StringExtensions.cs", label="Exit RestSharp.Extensions.StringExtensions.HtmlDecode(string)", span="78-78"];
m1_101 [cluster="System.DateTime.Subtract(System.TimeSpan)", file="StringExtensions.cs", label="Entry System.DateTime.Subtract(System.TimeSpan)", span="0-0"];
m1_63 [cluster="RestSharp.Extensions.StringExtensions.ParseFormattedDate(string, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="Entry RestSharp.Extensions.StringExtensions.ParseFormattedDate(string, System.Globalization.CultureInfo)", span="169-169"];
m1_71 [cluster="RestSharp.Extensions.StringExtensions.ParseFormattedDate(string, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="string[] formats =\r\n            {\r\n                ''u'',\r\n                ''s'',\r\n                ''yyyy'-'MM'-'dd'T'HH':'\\nmm':'ss'Z''',\r\n                ''yyyy-MM-ddTHH:mm:ssZ'',\r\n                ''yyyy-MM-dd HH:mm:ssZ'',\r\n                ''yyyy-MM-ddTHH:\\nmm:ss'',\r\n                ''yyyy-MM-ddTHH:mm:sszzzzzz'',\r\n                ''M/d/yyyy h:mm:ss tt'' // default format for invariant \\nculture\r\n            }", span="171-181"];
m1_72 [cluster="RestSharp.Extensions.StringExtensions.ParseFormattedDate(string, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="DateTime date", span="183-183"];
m1_73 [cluster="RestSharp.Extensions.StringExtensions.ParseFormattedDate(string, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="DateTime.TryParseExact(input, formats, culture, DateTimeStyles.AssumeUniversal | DateTimeStyles.AdjustToUniversal, out date)", span="185-185"];
m1_75 [cluster="RestSharp.Extensions.StringExtensions.ParseFormattedDate(string, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="DateTime.TryParse(input, culture, DateTimeStyles.None, out date)", span="190-190"];
m1_74 [cluster="RestSharp.Extensions.StringExtensions.ParseFormattedDate(string, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="return date;", span="187-187"];
m1_76 [cluster="RestSharp.Extensions.StringExtensions.ParseFormattedDate(string, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="return date;", span="192-192"];
m1_77 [cluster="RestSharp.Extensions.StringExtensions.ParseFormattedDate(string, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="return default(DateTime);", span="195-195"];
m1_78 [cluster="RestSharp.Extensions.StringExtensions.ParseFormattedDate(string, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="Exit RestSharp.Extensions.StringExtensions.ParseFormattedDate(string, System.Globalization.CultureInfo)", span="169-169"];
m1_25 [cluster="System.Text.StringBuilder.ToString()", file="StringExtensions.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m1_180 [cluster="string.AddUnderscorePrefix()", file="StringExtensions.cs", label="Entry string.AddUnderscorePrefix()", span="363-363"];
m1_179 [cluster="string.AddDashes()", file="StringExtensions.cs", label="Entry string.AddDashes()", span="347-347"];
m1_20 [cluster="System.Uri.EscapeDataString(string)", file="StringExtensions.cs", label="Entry System.Uri.EscapeDataString(string)", span="0-0"];
m1_131 [cluster="string.Substring(int)", file="StringExtensions.cs", label="Entry string.Substring(int)", span="0-0"];
m1_155 [cluster="RestSharp.Extensions.StringExtensions.AddUnderscorePrefix(string)", file="StringExtensions.cs", label="Entry RestSharp.Extensions.StringExtensions.AddUnderscorePrefix(string)", span="363-363"];
m1_156 [cluster="RestSharp.Extensions.StringExtensions.AddUnderscorePrefix(string)", file="StringExtensions.cs", label="return string.Format(''_{0}'', pascalCasedWord);", span="365-365"];
m1_157 [cluster="RestSharp.Extensions.StringExtensions.AddUnderscorePrefix(string)", file="StringExtensions.cs", label="Exit RestSharp.Extensions.StringExtensions.AddUnderscorePrefix(string)", span="363-363"];
m1_61 [cluster="string.Contains(string)", file="StringExtensions.cs", label="Entry string.Contains(string)", span="0-0"];
m1_23 [cluster="string.Substring(int, int)", file="StringExtensions.cs", label="Entry string.Substring(int, int)", span="0-0"];
m1_152 [cluster="RestSharp.Extensions.StringExtensions.AddDashes(string)", file="StringExtensions.cs", label="Entry RestSharp.Extensions.StringExtensions.AddDashes(string)", span="347-347"];
m1_153 [cluster="RestSharp.Extensions.StringExtensions.AddDashes(string)", file="StringExtensions.cs", label="return Regex.Replace(\r\n                Regex.Replace(\r\n                    Regex.Replace(pascalCasedWord, @''([A-Z]+)([A-Z][\\na-z])'', ''$1-$2''),\r\n                    @''([a-z\d])([A-Z])'',\r\n                    ''$1-$2''),\r\n                @''[\s]'',\r\n                ''\\n-'');", span="349-355"];
m1_154 [cluster="RestSharp.Extensions.StringExtensions.AddDashes(string)", file="StringExtensions.cs", label="Exit RestSharp.Extensions.StringExtensions.AddDashes(string)", span="347-347"];
m1_3 [cluster="RestSharp.Extensions.MonoHttp.HttpUtility.UrlDecode(string)", file="StringExtensions.cs", label="Entry RestSharp.Extensions.MonoHttp.HttpUtility.UrlDecode(string)", span="87-87"];
m1_181 [cluster="string.AddSpaces()", file="StringExtensions.cs", label="Entry string.AddSpaces()", span="373-373"];
m1_21 [cluster="System.Text.StringBuilder.StringBuilder(int)", file="StringExtensions.cs", label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0"];
m1_95 [cluster="System.Text.RegularExpressions.Regex.IsMatch(string)", file="StringExtensions.cs", label="Entry System.Text.RegularExpressions.Regex.IsMatch(string)", span="0-0"];
m1_70 [cluster="string.EndsWith(string)", file="StringExtensions.cs", label="Entry string.EndsWith(string)", span="0-0"];
m1_129 [cluster="string.Split(params char[])", file="StringExtensions.cs", label="Entry string.Split(params char[])", span="0-0"];
m1_136 [cluster="string.ToUpper(System.Globalization.CultureInfo)", file="StringExtensions.cs", label="Entry string.ToUpper(System.Globalization.CultureInfo)", span="0-0"];
m1_62 [cluster="RestSharp.Extensions.StringExtensions.ExtractDate(string, string, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="Entry RestSharp.Extensions.StringExtensions.ExtractDate(string, string, System.Globalization.CultureInfo)", span="198-198"];
m1_81 [cluster="RestSharp.Extensions.StringExtensions.ExtractDate(string, string, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="DateTime dt = DateTime.MinValue", span="200-200"];
m1_82 [cluster="RestSharp.Extensions.StringExtensions.ExtractDate(string, string, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="Regex regex = new Regex(pattern)", span="201-201"];
m1_83 [cluster="RestSharp.Extensions.StringExtensions.ExtractDate(string, string, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="regex.IsMatch(input)", span="203-203"];
m1_84 [cluster="RestSharp.Extensions.StringExtensions.ExtractDate(string, string, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="MatchCollection matches = regex.Matches(input)", span="205-205"];
m1_90 [cluster="RestSharp.Extensions.StringExtensions.ExtractDate(string, string, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="DateTime mod = DateTime.ParseExact(match.Groups[3].Value, ''HHmm'', culture)", span="215-215"];
m1_92 [cluster="RestSharp.Extensions.StringExtensions.ExtractDate(string, string, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="return dt;", span="223-223"];
m1_85 [cluster="RestSharp.Extensions.StringExtensions.ExtractDate(string, string, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="Match match = matches[0]", span="206-206"];
m1_86 [cluster="RestSharp.Extensions.StringExtensions.ExtractDate(string, string, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="long ms = Convert.ToInt64(match.Groups[1].Value)", span="207-207"];
m1_89 [cluster="RestSharp.Extensions.StringExtensions.ExtractDate(string, string, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="match.Groups.Count > 2 && !string.IsNullOrEmpty(match.Groups[3].Value)", span="213-213"];
m1_91 [cluster="RestSharp.Extensions.StringExtensions.ExtractDate(string, string, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="dt = match.Groups[2].Value == ''+''\r\n                        ? dt.Add(mod.TimeOfDay)\r\n                        : dt.Subtract(\\nmod.TimeOfDay)", span="217-219"];
m1_87 [cluster="RestSharp.Extensions.StringExtensions.ExtractDate(string, string, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="DateTime epoch = new DateTime(1970, 1, 1, 0, 0, 0, DateTimeKind.Utc)", span="208-208"];
m1_88 [cluster="RestSharp.Extensions.StringExtensions.ExtractDate(string, string, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="dt = epoch.AddMilliseconds(ms)", span="210-210"];
m1_93 [cluster="RestSharp.Extensions.StringExtensions.ExtractDate(string, string, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="Exit RestSharp.Extensions.StringExtensions.ExtractDate(string, string, System.Globalization.CultureInfo)", span="198-198"];
m1_141 [cluster="RestSharp.Extensions.StringExtensions.MakeInitialLowerCase(string)", file="StringExtensions.cs", label="Entry RestSharp.Extensions.StringExtensions.MakeInitialLowerCase(string)", span="311-311"];
m1_142 [cluster="RestSharp.Extensions.StringExtensions.MakeInitialLowerCase(string)", file="StringExtensions.cs", label="return string.Concat(word.Substring(0, 1).ToLower(), word.Substring(1));", span="313-313"];
m1_143 [cluster="RestSharp.Extensions.StringExtensions.MakeInitialLowerCase(string)", file="StringExtensions.cs", label="Exit RestSharp.Extensions.StringExtensions.MakeInitialLowerCase(string)", span="311-311"];
m1_178 [cluster="string.AddUnderscores()", file="StringExtensions.cs", label="Entry string.AddUnderscores()", span="331-331"];
m1_0 [cluster="RestSharp.Extensions.StringExtensions.UrlDecode(string)", file="StringExtensions.cs", label="Entry RestSharp.Extensions.StringExtensions.UrlDecode(string)", span="40-40"];
m1_1 [cluster="RestSharp.Extensions.StringExtensions.UrlDecode(string)", file="StringExtensions.cs", label="return HttpUtility.UrlDecode(input);", span="42-42"];
m1_2 [cluster="RestSharp.Extensions.StringExtensions.UrlDecode(string)", file="StringExtensions.cs", label="Exit RestSharp.Extensions.StringExtensions.UrlDecode(string)", span="40-40"];
m1_4 [cluster="RestSharp.Extensions.StringExtensions.UrlEncode(string)", file="StringExtensions.cs", label="Entry RestSharp.Extensions.StringExtensions.UrlEncode(string)", span="49-49"];
m1_5 [cluster="RestSharp.Extensions.StringExtensions.UrlEncode(string)", file="StringExtensions.cs", label="int maxLength = 32766", span="51-51"];
m1_6 [cluster="RestSharp.Extensions.StringExtensions.UrlEncode(string)", file="StringExtensions.cs", label="input == null", span="53-53"];
m1_8 [cluster="RestSharp.Extensions.StringExtensions.UrlEncode(string)", file="StringExtensions.cs", label="input.Length <= maxLength", span="58-58"];
m1_9 [cluster="RestSharp.Extensions.StringExtensions.UrlEncode(string)", file="StringExtensions.cs", label="return Uri.EscapeDataString(input);", span="60-60"];
m1_10 [cluster="RestSharp.Extensions.StringExtensions.UrlEncode(string)", file="StringExtensions.cs", label="StringBuilder sb = new StringBuilder(input.Length * 2)", span="63-63"];
m1_12 [cluster="RestSharp.Extensions.StringExtensions.UrlEncode(string)", file="StringExtensions.cs", label="index < input.Length", span="66-66"];
m1_13 [cluster="RestSharp.Extensions.StringExtensions.UrlEncode(string)", file="StringExtensions.cs", label="int length = Math.Min(input.Length - index, maxLength)", span="68-68"];
m1_14 [cluster="RestSharp.Extensions.StringExtensions.UrlEncode(string)", file="StringExtensions.cs", label="string subString = input.Substring(index, length)", span="69-69"];
m1_7 [cluster="RestSharp.Extensions.StringExtensions.UrlEncode(string)", file="StringExtensions.cs", label="throw new ArgumentNullException(''input'');", span="55-55"];
m1_11 [cluster="RestSharp.Extensions.StringExtensions.UrlEncode(string)", file="StringExtensions.cs", label="int index = 0", span="64-64"];
m1_15 [cluster="RestSharp.Extensions.StringExtensions.UrlEncode(string)", file="StringExtensions.cs", label="sb.Append(Uri.EscapeDataString(subString))", span="71-71"];
m1_17 [cluster="RestSharp.Extensions.StringExtensions.UrlEncode(string)", file="StringExtensions.cs", label="return sb.ToString();", span="75-75"];
m1_16 [cluster="RestSharp.Extensions.StringExtensions.UrlEncode(string)", file="StringExtensions.cs", label="index += subString.Length", span="72-72"];
m1_18 [cluster="RestSharp.Extensions.StringExtensions.UrlEncode(string)", file="StringExtensions.cs", label="Exit RestSharp.Extensions.StringExtensions.UrlEncode(string)", span="49-49"];
m1_159 [cluster="RestSharp.Extensions.StringExtensions.AddSpaces(string)", file="StringExtensions.cs", label="Entry RestSharp.Extensions.StringExtensions.AddSpaces(string)", span="373-373"];
m1_160 [cluster="RestSharp.Extensions.StringExtensions.AddSpaces(string)", file="StringExtensions.cs", label="return Regex.Replace(\r\n                Regex.Replace(\r\n                    Regex.Replace(pascalCasedWord, @''([A-Z]+)([A-Z][\\na-z])'', ''$1 $2''),\r\n                    @''([a-z\d])([A-Z])'',\r\n                    ''$1 $2''),\r\n                @''[-\s]'',\r\n                '' '');", span="375-381"];
m1_161 [cluster="RestSharp.Extensions.StringExtensions.AddSpaces(string)", file="StringExtensions.cs", label="Exit RestSharp.Extensions.StringExtensions.AddSpaces(string)", span="373-373"];
m1_34 [cluster="RestSharp.Extensions.StringExtensions.HasValue(string)", file="StringExtensions.cs", label="Entry RestSharp.Extensions.StringExtensions.HasValue(string)", span="100-100"];
m1_35 [cluster="RestSharp.Extensions.StringExtensions.HasValue(string)", file="StringExtensions.cs", label="return !string.IsNullOrEmpty(input);", span="102-102"];
m1_36 [cluster="RestSharp.Extensions.StringExtensions.HasValue(string)", file="StringExtensions.cs", label="Exit RestSharp.Extensions.StringExtensions.HasValue(string)", span="100-100"];
m1_132 [cluster="string.ToLower(System.Globalization.CultureInfo)", file="StringExtensions.cs", label="Entry string.ToLower(System.Globalization.CultureInfo)", span="0-0"];
m1_105 [cluster="System.Text.RegularExpressions.Regex.IsMatch(string, string)", file="StringExtensions.cs", label="Entry System.Text.RegularExpressions.Regex.IsMatch(string, string)", span="0-0"];
m1_133 [cluster="char.ToUpper(char, System.Globalization.CultureInfo)", file="StringExtensions.cs", label="Entry char.ToUpper(char, System.Globalization.CultureInfo)", span="0-0"];
m1_30 [cluster="RestSharp.Extensions.StringExtensions.HtmlEncode(string)", file="StringExtensions.cs", label="Entry RestSharp.Extensions.StringExtensions.HtmlEncode(string)", span="83-83"];
m1_31 [cluster="RestSharp.Extensions.StringExtensions.HtmlEncode(string)", file="StringExtensions.cs", label="return HttpUtility.HtmlEncode(input);", span="85-85"];
m1_32 [cluster="RestSharp.Extensions.StringExtensions.HtmlEncode(string)", file="StringExtensions.cs", label="Exit RestSharp.Extensions.StringExtensions.HtmlEncode(string)", span="83-83"];
m1_137 [cluster="string.Concat(string, string)", file="StringExtensions.cs", label="Entry string.Concat(string, string)", span="0-0"];
m1_98 [cluster="System.DateTime.AddMilliseconds(double)", file="StringExtensions.cs", label="Entry System.DateTime.AddMilliseconds(double)", span="0-0"];
n12;
n13;
n38;
n66;
n67;
n89;
n151;
n161;
n524;
m0_13;
m0_12;
m0_38;
m0_161;
m0_89;
m0_66;
m0_67;
m0_151;
m0_524;
n642;
m0_642;
n3 -> n5  [color=darkseagreen4, key=1, label=output, style=dashed];
n3 -> n6  [color=darkseagreen4, key=1, label=output, style=dashed];
n4 -> n6  [color=darkseagreen4, key=1, label=expected, style=dashed];
n17 -> n19  [color=darkseagreen4, key=1, label=output, style=dashed];
n19 -> n19  [color=darkseagreen4, key=1, label=output, style=dashed];
n20 -> n20  [color=darkseagreen4, key=1, label=output, style=dashed];
n21 -> n21  [color=darkseagreen4, key=1, label=output, style=dashed];
n42 -> n44  [color=darkseagreen4, key=1, label=output, style=dashed];
n55 -> n57  [color=darkseagreen4, key=1, label=output, style=dashed];
n55 -> n58  [color=darkseagreen4, key=1, label=output, style=dashed];
n105 -> n113  [color=darkseagreen4, key=1, label=id1, style=dashed];
n106 -> n114  [color=darkseagreen4, key=1, label=id2, style=dashed];
n111 -> n113  [color=darkseagreen4, key=1, label=p, style=dashed];
n111 -> n114  [color=darkseagreen4, key=1, label=p, style=dashed];
n121 -> n129  [color=darkseagreen4, key=1, label=item1, style=dashed];
n122 -> n130  [color=darkseagreen4, key=1, label=item2, style=dashed];
n127 -> n129  [color=darkseagreen4, key=1, label=p, style=dashed];
n127 -> n130  [color=darkseagreen4, key=1, label=p, style=dashed];
n136 -> n144  [color=darkseagreen4, key=1, label=item0, style=dashed];
n137 -> n145  [color=darkseagreen4, key=1, label=item1, style=dashed];
n143 -> n145  [color=darkseagreen4, key=1, label=p, style=dashed];
n143 -> n146  [color=darkseagreen4, key=1, label=p, style=dashed];
n143 -> n147  [color=darkseagreen4, key=1, label=p, style=dashed];
n155 -> n157  [color=darkseagreen4, key=1, label=output, style=dashed];
n155 -> n158  [color=darkseagreen4, key=1, label=output, style=dashed];
n605 -> n609  [color=darkseagreen4, key=1, label=doc, style=dashed];
n165 -> n167  [color=darkseagreen4, key=1, label=output, style=dashed];
n165 -> n168  [color=darkseagreen4, key=1, label=output, style=dashed];
n611 -> n615  [color=darkseagreen4, key=1, label=doc, style=dashed];
n174 -> n176  [color=darkseagreen4, key=1, label=output, style=dashed];
n174 -> n177  [color=darkseagreen4, key=1, label=output, style=dashed];
n174 -> n178  [color=darkseagreen4, key=1, label=output, style=dashed];
n174 -> n179  [color=darkseagreen4, key=1, label=output, style=dashed];
n174 -> n180  [color=darkseagreen4, key=1, label=output, style=dashed];
n174 -> n181  [color=darkseagreen4, key=1, label=output, style=dashed];
n617 -> n621  [color=darkseagreen4, key=1, label=doc, style=dashed];
n187 -> n189  [color=darkseagreen4, key=1, label=output, style=dashed];
n194 -> n200  [color=darkseagreen4, key=1, label=date, style=dashed];
n222 -> n224  [color=darkseagreen4, key=1, label=output, style=dashed];
n222 -> n225  [color=darkseagreen4, key=1, label=output, style=dashed];
n222 -> n226  [color=darkseagreen4, key=1, label=output, style=dashed];
n222 -> n227  [color=darkseagreen4, key=1, label=output, style=dashed];
n222 -> n228  [color=darkseagreen4, key=1, label=output, style=dashed];
n222 -> n229  [color=darkseagreen4, key=1, label=output, style=dashed];
n222 -> n230  [color=darkseagreen4, key=1, label=output, style=dashed];
n236 -> n238  [color=darkseagreen4, key=1, label=output, style=dashed];
n236 -> n239  [color=darkseagreen4, key=1, label=output, style=dashed];
n236 -> n240  [color=darkseagreen4, key=1, label=output, style=dashed];
n236 -> n241  [color=darkseagreen4, key=1, label=output, style=dashed];
n236 -> n242  [color=darkseagreen4, key=1, label=output, style=dashed];
n236 -> n243  [color=darkseagreen4, key=1, label=output, style=dashed];
n236 -> n244  [color=darkseagreen4, key=1, label=output, style=dashed];
n281 -> n283  [color=darkseagreen4, key=1, label=p, style=dashed];
n281 -> n284  [color=darkseagreen4, key=1, label=p, style=dashed];
n281 -> n285  [color=darkseagreen4, key=1, label=p, style=dashed];
n281 -> n286  [color=darkseagreen4, key=1, label=p, style=dashed];
n281 -> n287  [color=darkseagreen4, key=1, label=p, style=dashed];
n281 -> n288  [color=darkseagreen4, key=1, label=p, style=dashed];
n281 -> n289  [color=darkseagreen4, key=1, label=p, style=dashed];
n281 -> n290  [color=darkseagreen4, key=1, label=p, style=dashed];
n281 -> n291  [color=darkseagreen4, key=1, label=p, style=dashed];
n281 -> n292  [color=darkseagreen4, key=1, label=p, style=dashed];
n281 -> n293  [color=darkseagreen4, key=1, label=p, style=dashed];
n281 -> n294  [color=darkseagreen4, key=1, label=p, style=dashed];
n281 -> n295  [color=darkseagreen4, key=1, label=p, style=dashed];
n281 -> n296  [color=darkseagreen4, key=1, label=p, style=dashed];
n281 -> n297  [color=darkseagreen4, key=1, label=p, style=dashed];
n281 -> n298  [color=darkseagreen4, key=1, label=p, style=dashed];
n281 -> n299  [color=darkseagreen4, key=1, label=p, style=dashed];
n281 -> n300  [color=darkseagreen4, key=1, label=p, style=dashed];
n281 -> n301  [color=darkseagreen4, key=1, label=p, style=dashed];
n578 -> n602  [color=darkseagreen4, key=1, label=doc, style=dashed];
n594 -> n597  [color=darkseagreen4, key=1, label=friendsArray, style=dashed];
n595 -> n597  [color=darkseagreen4, key=1, label=i, style=dashed];
n595 -> n598  [color=darkseagreen4, key=1, label=i, style=dashed];
n598 -> n598  [color=darkseagreen4, key=1, label=i, style=dashed];
n538 -> n540  [color=darkseagreen4, key=1, label=i, style=dashed];
n538 -> n541  [color=darkseagreen4, key=1, label=i, style=dashed];
n314 -> n316  [color=darkseagreen4, key=1, label=output, style=dashed];
n322 -> n324  [color=darkseagreen4, key=1, label=p, style=dashed];
n322 -> n325  [color=darkseagreen4, key=1, label=p, style=dashed];
n322 -> n326  [color=darkseagreen4, key=1, label=p, style=dashed];
n322 -> n327  [color=darkseagreen4, key=1, label=p, style=dashed];
n322 -> n328  [color=darkseagreen4, key=1, label=p, style=dashed];
n322 -> n329  [color=darkseagreen4, key=1, label=p, style=dashed];
n322 -> n330  [color=darkseagreen4, key=1, label=p, style=dashed];
n322 -> n331  [color=darkseagreen4, key=1, label=p, style=dashed];
n322 -> n332  [color=darkseagreen4, key=1, label=p, style=dashed];
n322 -> n333  [color=darkseagreen4, key=1, label=p, style=dashed];
n322 -> n334  [color=darkseagreen4, key=1, label=p, style=dashed];
n322 -> n335  [color=darkseagreen4, key=1, label=p, style=dashed];
n322 -> n336  [color=darkseagreen4, key=1, label=p, style=dashed];
n322 -> n337  [color=darkseagreen4, key=1, label=p, style=dashed];
n322 -> n338  [color=darkseagreen4, key=1, label=p, style=dashed];
n525 -> n545  [color=darkseagreen4, key=1, label=doc, style=dashed];
n537 -> n540  [color=darkseagreen4, key=1, label=friendsArray, style=dashed];
n541 -> n541  [color=darkseagreen4, key=1, label=i, style=dashed];
n349 -> n351  [color=darkseagreen4, key=1, label=p, style=dashed];
n349 -> n352  [color=darkseagreen4, key=1, label=p, style=dashed];
n349 -> n353  [color=darkseagreen4, key=1, label=p, style=dashed];
n349 -> n354  [color=darkseagreen4, key=1, label=p, style=dashed];
n349 -> n355  [color=darkseagreen4, key=1, label=p, style=dashed];
n349 -> n356  [color=darkseagreen4, key=1, label=p, style=dashed];
n349 -> n357  [color=darkseagreen4, key=1, label=p, style=dashed];
n349 -> n358  [color=darkseagreen4, key=1, label=p, style=dashed];
n349 -> n359  [color=darkseagreen4, key=1, label=p, style=dashed];
n349 -> n360  [color=darkseagreen4, key=1, label=p, style=dashed];
n349 -> n361  [color=darkseagreen4, key=1, label=p, style=dashed];
n349 -> n362  [color=darkseagreen4, key=1, label=p, style=dashed];
n349 -> n363  [color=darkseagreen4, key=1, label=p, style=dashed];
n349 -> n364  [color=darkseagreen4, key=1, label=p, style=dashed];
n548 -> n568  [color=darkseagreen4, key=1, label=doc, style=dashed];
n560 -> n563  [color=darkseagreen4, key=1, label=friendsArray, style=dashed];
n561 -> n563  [color=darkseagreen4, key=1, label=i, style=dashed];
n561 -> n564  [color=darkseagreen4, key=1, label=i, style=dashed];
n564 -> n564  [color=darkseagreen4, key=1, label=i, style=dashed];
n386 -> n388  [color=darkseagreen4, key=1, label=payload, style=dashed];
n386 -> n389  [color=darkseagreen4, key=1, label=payload, style=dashed];
n386 -> n390  [color=darkseagreen4, key=1, label=payload, style=dashed];
n386 -> n391  [color=darkseagreen4, key=1, label=payload, style=dashed];
n386 -> n392  [color=darkseagreen4, key=1, label=payload, style=dashed];
n386 -> n393  [color=darkseagreen4, key=1, label=payload, style=dashed];
n386 -> n394  [color=darkseagreen4, key=1, label=payload, style=dashed];
n386 -> n395  [color=darkseagreen4, key=1, label=payload, style=dashed];
n386 -> n396  [color=darkseagreen4, key=1, label=payload, style=dashed];
n386 -> n397  [color=darkseagreen4, key=1, label=payload, style=dashed];
n386 -> n398  [color=darkseagreen4, key=1, label=payload, style=dashed];
n386 -> n399  [color=darkseagreen4, key=1, label=payload, style=dashed];
n386 -> n400  [color=darkseagreen4, key=1, label=payload, style=dashed];
n638 -> n640  [color=darkseagreen4, key=1, label=response, style=dashed];
d586 -> d588  [color=green, key=1, label=doc, style=dashed];
n574 -> n576  [color=darkseagreen4, key=1, label=doc, style=dashed];
n433 -> n435  [color=darkseagreen4, key=1, label=payload, style=dashed];
n460 -> n462  [color=darkseagreen4, key=1, label=payload, style=dashed];
n472 -> n474  [color=darkseagreen4, key=1, label=bd, style=dashed];
n472 -> n475  [color=darkseagreen4, key=1, label=bd, style=dashed];
n472 -> n476  [color=darkseagreen4, key=1, label=bd, style=dashed];
n623 -> n628  [color=darkseagreen4, key=1, label=doc, style=dashed];
n483 -> n485  [color=darkseagreen4, key=1, label=bd, style=dashed];
n483 -> n486  [color=darkseagreen4, key=1, label=bd, style=dashed];
n483 -> n487  [color=darkseagreen4, key=1, label=bd, style=dashed];
n630 -> n635  [color=darkseagreen4, key=1, label=doc, style=dashed];
n504 -> n506  [color=darkseagreen4, key=1, label=output, style=dashed];
n504 -> n507  [color=darkseagreen4, key=1, label=output, style=dashed];
n520 -> n522  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m0_538 -> m0_540  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_538 -> m0_541  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_525 -> m0_545  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_537 -> m0_540  [color=darkseagreen4, key=1, label=friendsArray, style=dashed];
m0_541 -> m0_541  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_322 -> m0_324  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_322 -> m0_325  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_322 -> m0_326  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_322 -> m0_327  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_322 -> m0_328  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_322 -> m0_329  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_322 -> m0_330  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_322 -> m0_331  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_322 -> m0_332  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_322 -> m0_333  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_322 -> m0_334  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_322 -> m0_335  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_322 -> m0_336  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_322 -> m0_337  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_322 -> m0_338  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_623 -> m0_628  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_0_62 -> m0_0_83  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_0_81 -> m0_0_92  [color=darkseagreen4, key=1, label=dt, style=dashed];
m0_0_85 -> m0_0_89  [color=darkseagreen4, key=1, label=match, style=dashed];
m0_0_88 -> m0_0_92  [color=darkseagreen4, key=1, label=dt, style=dashed];
m0_17 -> m0_19  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_19 -> m0_19  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_20 -> m0_20  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_21 -> m0_21  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_105 -> m0_113  [color=darkseagreen4, key=1, label=id1, style=dashed];
m0_106 -> m0_114  [color=darkseagreen4, key=1, label=id2, style=dashed];
m0_111 -> m0_113  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_111 -> m0_114  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_42 -> m0_44  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_187 -> m0_189  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_433 -> m0_435  [color=darkseagreen4, key=1, label=payload, style=dashed];
m0_630 -> m0_635  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_578 -> m0_588  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_578 -> m0_589  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_578 -> m0_602  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_586 -> m0_588  [color=green, key=1, label=doc, style=dashed];
m0_594 -> m0_597  [color=darkseagreen4, key=1, label=friendsArray, style=dashed];
m0_595 -> m0_597  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_595 -> m0_598  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_598 -> m0_598  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_0_109 -> m0_0_111  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_0_109 -> m0_0_127  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m0_0_113 -> m0_0_126  [color=darkseagreen4, key=1, label=joinString, style=dashed];
m0_0_114 -> m0_0_117  [color=darkseagreen4, key=1, label=words, style=dashed];
m0_0_114 -> m0_0_118  [color=darkseagreen4, key=1, label=words, style=dashed];
m0_0_114 -> m0_0_126  [color=darkseagreen4, key=1, label=words, style=dashed];
m0_0_114 -> m0_0_127  [color=darkseagreen4, key=1, label=words, style=dashed];
m0_0_116 -> m0_0_118  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_0_116 -> m0_0_125  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_0_125 -> m0_0_125  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_0_63 -> m0_0_73  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m0_0_63 -> m0_0_75  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m0_0_71 -> m0_0_73  [color=darkseagreen4, key=1, label=formats, style=dashed];
m0_314 -> m0_316  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_155 -> m0_157  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_155 -> m0_158  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_386 -> m0_388  [color=darkseagreen4, key=1, label=payload, style=dashed];
m0_386 -> m0_389  [color=darkseagreen4, key=1, label=payload, style=dashed];
m0_386 -> m0_390  [color=darkseagreen4, key=1, label=payload, style=dashed];
m0_386 -> m0_391  [color=darkseagreen4, key=1, label=payload, style=dashed];
m0_386 -> m0_392  [color=darkseagreen4, key=1, label=payload, style=dashed];
m0_386 -> m0_393  [color=darkseagreen4, key=1, label=payload, style=dashed];
m0_386 -> m0_394  [color=darkseagreen4, key=1, label=payload, style=dashed];
m0_386 -> m0_395  [color=darkseagreen4, key=1, label=payload, style=dashed];
m0_386 -> m0_396  [color=darkseagreen4, key=1, label=payload, style=dashed];
m0_386 -> m0_397  [color=darkseagreen4, key=1, label=payload, style=dashed];
m0_386 -> m0_398  [color=darkseagreen4, key=1, label=payload, style=dashed];
m0_386 -> m0_399  [color=darkseagreen4, key=1, label=payload, style=dashed];
m0_386 -> m0_400  [color=darkseagreen4, key=1, label=payload, style=dashed];
m0_222 -> m0_224  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_222 -> m0_225  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_222 -> m0_226  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_222 -> m0_227  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_222 -> m0_228  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_222 -> m0_229  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_222 -> m0_230  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_0_64 -> m0_0_67  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_483 -> m0_485  [color=darkseagreen4, key=1, label=bd, style=dashed];
m0_483 -> m0_486  [color=darkseagreen4, key=1, label=bd, style=dashed];
m0_483 -> m0_487  [color=darkseagreen4, key=1, label=bd, style=dashed];
m0_548 -> m0_568  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_560 -> m0_563  [color=darkseagreen4, key=1, label=friendsArray, style=dashed];
m0_561 -> m0_563  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_561 -> m0_564  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_564 -> m0_564  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_281 -> m0_283  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_281 -> m0_284  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_281 -> m0_285  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_281 -> m0_286  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_281 -> m0_287  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_281 -> m0_288  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_281 -> m0_289  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_281 -> m0_290  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_281 -> m0_291  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_281 -> m0_292  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_281 -> m0_293  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_281 -> m0_294  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_281 -> m0_295  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_281 -> m0_296  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_281 -> m0_297  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_281 -> m0_298  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_281 -> m0_299  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_281 -> m0_300  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_281 -> m0_301  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_611 -> m0_615  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_194 -> m0_200  [color=darkseagreen4, key=1, label=date, style=dashed];
m0_3 -> m0_5  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_3 -> m0_6  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_4 -> m0_6  [color=darkseagreen4, key=1, label=expected, style=dashed];
m0_0_42 -> m0_0_51  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m0_0_42 -> m0_0_54  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m0_0_42 -> m0_0_55  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m0_0_45 -> m0_0_47  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_0_45 -> m0_0_50  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_0_45 -> m0_0_51  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_0_45 -> m0_0_52  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_0_45 -> m0_0_55  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_0_47 -> m0_0_51  [color=green, key=1, label=unix, style=dashed];
m0_0_53 -> m0_0_55  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_0_48 -> m0_0_51  [color=green, key=1, label=epoch, style=dashed];
m0_0_48 -> m0_0_50  [color=darkseagreen4, key=1, label=epoch, style=dashed];
m0_55 -> m0_57  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_55 -> m0_58  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_236 -> m0_238  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_236 -> m0_239  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_236 -> m0_240  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_236 -> m0_241  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_236 -> m0_242  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_236 -> m0_243  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_236 -> m0_244  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_121 -> m0_129  [color=darkseagreen4, key=1, label=item1, style=dashed];
m0_122 -> m0_130  [color=darkseagreen4, key=1, label=item2, style=dashed];
m0_127 -> m0_129  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_127 -> m0_130  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_617 -> m0_621  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_574 -> m0_576  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_460 -> m0_462  [color=darkseagreen4, key=1, label=payload, style=dashed];
m0_0_4 -> m0_0_6  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_0_4 -> m0_0_8  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_0_4 -> m0_0_9  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_0_4 -> m0_0_12  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_0_5 -> m0_0_8  [color=darkseagreen4, key=1, label=maxLength, style=dashed];
m0_0_10 -> m0_0_15  [color=darkseagreen4, key=1, label=sb, style=dashed];
m0_0_10 -> m0_0_17  [color=darkseagreen4, key=1, label=sb, style=dashed];
m0_174 -> m0_176  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_174 -> m0_177  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_174 -> m0_178  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_174 -> m0_179  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_174 -> m0_180  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_174 -> m0_181  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_605 -> m0_609  [color=darkseagreen4, key=1, label=doc, style=dashed];
m0_504 -> m0_506  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_504 -> m0_507  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_349 -> m0_351  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_349 -> m0_352  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_349 -> m0_353  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_349 -> m0_354  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_349 -> m0_355  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_349 -> m0_356  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_349 -> m0_357  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_349 -> m0_358  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_349 -> m0_359  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_349 -> m0_360  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_349 -> m0_361  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_349 -> m0_362  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_349 -> m0_363  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_349 -> m0_364  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_638 -> m0_640  [color=darkseagreen4, key=1, label=response, style=dashed];
m0_136 -> m0_144  [color=darkseagreen4, key=1, label=item0, style=dashed];
m0_137 -> m0_145  [color=darkseagreen4, key=1, label=item1, style=dashed];
m0_143 -> m0_145  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_143 -> m0_146  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_143 -> m0_147  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_472 -> m0_474  [color=darkseagreen4, key=1, label=bd, style=dashed];
m0_472 -> m0_475  [color=darkseagreen4, key=1, label=bd, style=dashed];
m0_472 -> m0_476  [color=darkseagreen4, key=1, label=bd, style=dashed];
m0_520 -> m0_522  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m0_165 -> m0_167  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_165 -> m0_168  [color=darkseagreen4, key=1, label=output, style=dashed];
m1_64 -> m1_67  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_42 -> m1_51  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m1_42 -> m1_54  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m1_42 -> m1_55  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m1_45 -> m1_47  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_45 -> m1_50  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_45 -> m1_51  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_45 -> m1_52  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_45 -> m1_55  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_47 -> m1_51  [color=green, key=1, label=unix, style=dashed];
m1_53 -> m1_55  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_48 -> m1_51  [color=green, key=1, label=epoch, style=dashed];
m1_48 -> m1_50  [color=darkseagreen4, key=1, label=epoch, style=dashed];
m1_109 -> m1_111  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_109 -> m1_127  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m1_113 -> m1_126  [color=darkseagreen4, key=1, label=joinString, style=dashed];
m1_114 -> m1_117  [color=darkseagreen4, key=1, label=words, style=dashed];
m1_114 -> m1_118  [color=darkseagreen4, key=1, label=words, style=dashed];
m1_114 -> m1_126  [color=darkseagreen4, key=1, label=words, style=dashed];
m1_114 -> m1_127  [color=darkseagreen4, key=1, label=words, style=dashed];
m1_116 -> m1_118  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_116 -> m1_125  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_125 -> m1_125  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_63 -> m1_73  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m1_63 -> m1_75  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m1_71 -> m1_73  [color=darkseagreen4, key=1, label=formats, style=dashed];
m1_62 -> m1_83  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_81 -> m1_92  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_85 -> m1_89  [color=darkseagreen4, key=1, label=match, style=dashed];
m1_88 -> m1_92  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_4 -> m1_6  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_4 -> m1_8  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_4 -> m1_9  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_4 -> m1_12  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_5 -> m1_8  [color=darkseagreen4, key=1, label=maxLength, style=dashed];
m1_10 -> m1_15  [color=darkseagreen4, key=1, label=sb, style=dashed];
m1_10 -> m1_17  [color=darkseagreen4, key=1, label=sb, style=dashed];
n642 -> n307  [color=darkseagreen4, key=1, label="RestSharp.Tests.JsonTests", style=dashed];
n642 -> n343  [color=darkseagreen4, key=1, label="RestSharp.Tests.JsonTests", style=dashed];
n642 -> n369  [color=darkseagreen4, key=1, label="RestSharp.Tests.JsonTests", style=dashed];
m0_642 -> m0_307  [color=darkseagreen4, key=1, label="RestSharp.Tests.JsonTests", style=dashed];
m0_642 -> m0_343  [color=darkseagreen4, key=1, label="RestSharp.Tests.JsonTests", style=dashed];
m0_642 -> m0_369  [color=darkseagreen4, key=1, label="RestSharp.Tests.JsonTests", style=dashed];
}
