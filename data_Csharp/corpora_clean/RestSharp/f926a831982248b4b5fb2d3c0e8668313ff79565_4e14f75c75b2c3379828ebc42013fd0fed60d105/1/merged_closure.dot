digraph  {
m0_284 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.InitEntities()", file="HtmlEncoder.cs", label="Entry RestSharp.Extensions.MonoHttp.HttpEncoder.InitEntities()", span="599-599"];
m0_285 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.InitEntities()", file="HtmlEncoder.cs", label="entities = new SortedDictionary<string, char>(StringComparer.Ordinal)\r\n                       {\r\n                           {''\\nnbsp'', '\u00A0'},\r\n                           {''iexcl'', '\u00A1'},\r\n                           {''cent'', '\u00A2'},\r\n                           {''\\npound'', '\u00A3'},\r\n                           {''curren'', '\u00A4'},\r\n                           {''yen'', '\u00A5'},\r\n                           {''\\nbrvbar'', '\u00A6'},\r\n                           {''sect'', '\u00A7'},\r\n                           {''uml'', '\u00A8'},\r\n                           {''\\ncopy'', '\u00A9'},\r\n                           {''ordf'', '\u00AA'},\r\n                           {''laquo'', '\u00AB'},\r\n                           {''\\nnot'', '\u00AC'},\r\n                           {''shy'', '\u00AD'},\r\n                           {''reg'', '\u00AE'},\r\n                           {''\\nmacr'', '\u00AF'},\r\n                           {''deg'', '\u00B0'},\r\n                           {''plusmn'', '\u00B1'},\r\n                           {''\\nsup2'', '\u00B2'},\r\n                           {''sup3'', '\u00B3'},\r\n                           {''acute'', '\u00B4'},\r\n                           {''\\nmicro'', '\u00B5'},\r\n                           {''para'', '\u00B6'},\r\n                           {''middot'', '\u00B7'},\r\n                           {''\\ncedil'', '\u00B8'},\r\n                           {''sup1'', '\u00B9'},\r\n                           {''ordm'', '\u00BA'},\r\n                           {''\\nraquo'', '\u00BB'},\r\n                           {''frac14'', '\u00BC'},\r\n                           {''frac12'', '\u00BD'},\r\n                           {''\\nfrac34'', '\u00BE'},\r\n                           {''iquest'', '\u00BF'},\r\n                           {''Agrave'', '\u00C0'},\r\n                           {''\\nAacute'', '\u00C1'},\r\n                           {''Acirc'', '\u00C2'},\r\n                           {''Atilde'', '\u00C3'},\r\n                           {''\\nAuml'', '\u00C4'},\r\n                           {''Aring'', '\u00C5'},\r\n                           {''AElig'', '\u00C6'},\r\n                           {''\\nCcedil'', '\u00C7'},\r\n                           {''Egrave'', '\u00C8'},\r\n                           {''Eacute'', '\u00C9'},\r\n                           {''\\nEcirc'', '\u00CA'},\r\n                           {''Euml'', '\u00CB'},\r\n                           {''Igrave'', '\u00CC'},\r\n                           {''\\nIacute'', '\u00CD'},\r\n                           {''Icirc'', '\u00CE'},\r\n                           {''Iuml'', '\u00CF'},\r\n                           {''\\nETH'', '\u00D0'},\r\n                           {''Ntilde'', '\u00D1'},\r\n                           {''Ograve'', '\u00D2'},\r\n                           {''\\nOacute'', '\u00D3'},\r\n                           {''Ocirc'', '\u00D4'},\r\n                           {''Otilde'', '\u00D5'},\r\n                           {''\\nOuml'', '\u00D6'},\r\n                           {''times'', '\u00D7'},\r\n                           {''Oslash'', '\u00D8'},\r\n                           {''\\nUgrave'', '\u00D9'},\r\n                           {''Uacute'', '\u00DA'},\r\n                           {''Ucirc'', '\u00DB'},\r\n                           {''\\nUuml'', '\u00DC'},\r\n                           {''Yacute'', '\u00DD'},\r\n                           {''THORN'', '\u00DE'},\r\n                           {''\\nszlig'', '\u00DF'},\r\n                           {''agrave'', '\u00E0'},\r\n                           {''aacute'', '\u00E1'},\r\n                           {''\\nacirc'', '\u00E2'},\r\n                           {''atilde'', '\u00E3'},\r\n                           {''auml'', '\u00E4'},\r\n                           {''\\naring'', '\u00E5'},\r\n                           {''aelig'', '\u00E6'},\r\n                           {''ccedil'', '\u00E7'},\r\n                           {''\\negrave'', '\u00E8'},\r\n                           {''eacute'', '\u00E9'},\r\n                           {''ecirc'', '\u00EA'},\r\n                           {''\\neuml'', '\u00EB'},\r\n                           {''igrave'', '\u00EC'},\r\n                           {''iacute'', '\u00ED'},\r\n                           {''\\nicirc'', '\u00EE'},\r\n                           {''iuml'', '\u00EF'},\r\n                           {''eth'', '\u00F0'},\r\n                           {''\\nntilde'', '\u00F1'},\r\n                           {''ograve'', '\u00F2'},\r\n                           {''oacute'', '\u00F3'},\r\n                           {''\\nocirc'', '\u00F4'},\r\n                           {''otilde'', '\u00F5'},\r\n                           {''ouml'', '\u00F6'},\r\n                           {''\\ndivide'', '\u00F7'},\r\n                           {''oslash'', '\u00F8'},\r\n                           {''ugrave'', '\u00F9'},\r\n                           {''\\nuacute'', '\u00FA'},\r\n                           {''ucirc'', '\u00FB'},\r\n                           {''uuml'', '\u00FC'},\r\n                           {''\\nyacute'', '\u00FD'},\r\n                           {''thorn'', '\u00FE'},\r\n                           {''yuml'', '\u00FF'},\r\n                           {''\\nfnof'', '\u0192'},\r\n                           {''Alpha'', '\u0391'},\r\n                           {''Beta'', '\u0392'},\r\n                           {''\\nGamma'', '\u0393'},\r\n                           {''Delta'', '\u0394'},\r\n                           {''Epsilon'', '\u0395'},\r\n                           {''\\nZeta'', '\u0396'},\r\n                           {''Eta'', '\u0397'},\r\n                           {''Theta'', '\u0398'},\r\n                           {''\\nIota'', '\u0399'},\r\n                           {''Kappa'', '\u039A'},\r\n                           {''Lambda'', '\u039B'},\r\n                           {''\\nMu'', '\u039C'},\r\n                           {''Nu'', '\u039D'},\r\n                           {''Xi'', '\u039E'},\r\n                           {''\\nOmicron'', '\u039F'},\r\n                           {''Pi'', '\u03A0'},\r\n                           {''Rho'', '\u03A1'},\r\n                           {''\\nSigma'', '\u03A3'},\r\n                           {''Tau'', '\u03A4'},\r\n                           {''Upsilon'', '\u03A5'},\r\n                           {''\\nPhi'', '\u03A6'},\r\n                           {''Chi'', '\u03A7'},\r\n                           {''Psi'', '\u03A8'},\r\n                           {''\\nOmega'', '\u03A9'},\r\n                           {''alpha'', '\u03B1'},\r\n                           {''beta'', '\u03B2'},\r\n                           {''\\ngamma'', '\u03B3'},\r\n                           {''delta'', '\u03B4'},\r\n                           {''epsilon'', '\u03B5'},\r\n                           {''\\nzeta'', '\u03B6'},\r\n                           {''eta'', '\u03B7'},\r\n                           {''theta'', '\u03B8'},\r\n                           {''\\niota'', '\u03B9'},\r\n                           {''kappa'', '\u03BA'},\r\n                           {''lambda'', '\u03BB'},\r\n                           {''\\nmu'', '\u03BC'},\r\n                           {''nu'', '\u03BD'},\r\n                           {''xi'', '\u03BE'},\r\n                           {''\\nomicron'', '\u03BF'},\r\n                           {''pi'', '\u03C0'},\r\n                           {''rho'', '\u03C1'},\r\n                           {''\\nsigmaf'', '\u03C2'},\r\n                           {''sigma'', '\u03C3'},\r\n                           {''tau'', '\u03C4'},\r\n                           {''\\nupsilon'', '\u03C5'},\r\n                           {''phi'', '\u03C6'},\r\n                           {''chi'', '\u03C7'},\r\n                           {''\\npsi'', '\u03C8'},\r\n                           {''omega'', '\u03C9'},\r\n                           {''thetasym'', '\u03D1'},\r\n                           {''\\nupsih'', '\u03D2'},\r\n                           {''piv'', '\u03D6'},\r\n                           {''bull'', '\u2022'},\r\n                           {''\\nhellip'', '\u2026'},\r\n                           {''prime'', '\u2032'},\r\n                           {''Prime'', '\u2033'},\r\n                           {''\\noline'', '\u203E'},\r\n                           {''frasl'', '\u2044'},\r\n                           {''weierp'', '\u2118'},\r\n                           {''\\nimage'', '\u2111'},\r\n                           {''real'', '\u211C'},\r\n                           {''trade'', '\u2122'},\r\n                           {''\\nalefsym'', '\u2135'},\r\n                           {''larr'', '\u2190'},\r\n                           {''uarr'', '\u2191'},\r\n                           {''\\nrarr'', '\u2192'},\r\n                           {''darr'', '\u2193'},\r\n                           {''harr'', '\u2194'},\r\n                           {''\\ncrarr'', '\u21B5'},\r\n                           {''lArr'', '\u21D0'},\r\n                           {''uArr'', '\u21D1'},\r\n                           {''\\nrArr'', '\u21D2'},\r\n                           {''dArr'', '\u21D3'},\r\n                           {''hArr'', '\u21D4'},\r\n                           {''\\nforall'', '\u2200'},\r\n                           {''part'', '\u2202'},\r\n                           {''exist'', '\u2203'},\r\n                           {''\\nempty'', '\u2205'},\r\n                           {''nabla'', '\u2207'},\r\n                           {''isin'', '\u2208'},\r\n                           {''\\nnotin'', '\u2209'},\r\n                           {''ni'', '\u220B'},\r\n                           {''prod'', '\u220F'},\r\n                           {''\\nsum'', '\u2211'},\r\n                           {''minus'', '\u2212'},\r\n                           {''lowast'', '\u2217'},\r\n                           {''\\nradic'', '\u221A'},\r\n                           {''prop'', '\u221D'},\r\n                           {''infin'', '\u221E'},\r\n                           {''\\nang'', '\u2220'},\r\n                           {''and'', '\u2227'},\r\n                           {''or'', '\u2228'},\r\n                           {''\\ncap'', '\u2229'},\r\n                           {''cup'', '\u222A'},\r\n                           {''int'', '\u222B'},\r\n                           {''\\nthere4'', '\u2234'},\r\n                           {''sim'', '\u223C'},\r\n                           {''cong'', '\u2245'},\r\n                           {''\\nasymp'', '\u2248'},\r\n                           {''ne'', '\u2260'},\r\n                           {''equiv'', '\u2261'},\r\n                           {''\\nle'', '\u2264'},\r\n                           {''ge'', '\u2265'},\r\n                           {''sub'', '\u2282'},\r\n                           {''\\nsup'', '\u2283'},\r\n                           {''nsub'', '\u2284'},\r\n                           {''sube'', '\u2286'},\r\n                           {''\\nsupe'', '\u2287'},\r\n                           {''oplus'', '\u2295'},\r\n                           {''otimes'', '\u2297'},\r\n                           {''\\nperp'', '\u22A5'},\r\n                           {''sdot'', '\u22C5'},\r\n                           {''lceil'', '\u2308'},\r\n                           {''\\nrceil'', '\u2309'},\r\n                           {''lfloor'', '\u230A'},\r\n                           {''rfloor'', '\u230B'},\r\n                           {''\\nlang'', '\u2329'},\r\n                           {''rang'', '\u232A'},\r\n                           {''loz'', '\u25CA'},\r\n                           {''\\nspades'', '\u2660'},\r\n                           {''clubs'', '\u2663'},\r\n                           {''hearts'', '\u2665'},\r\n                           {''\\ndiams'', '\u2666'},\r\n                           {''quot'', '\u0022'},\r\n                           {''amp'', '\u0026'},\r\n                           {''\\nlt'', '\u003C'},\r\n                           {''gt'', '\u003E'},\r\n                           {''OElig'', '\u0152'},\r\n                           {''\\noelig'', '\u0153'},\r\n                           {''Scaron'', '\u0160'},\r\n                           {''scaron'', '\u0161'},\r\n                           {''\\nYuml'', '\u0178'},\r\n                           {''circ'', '\u02C6'},\r\n                           {''tilde'', '\u02DC'},\r\n                           {''\\nensp'', '\u2002'},\r\n                           {''emsp'', '\u2003'},\r\n                           {''thinsp'', '\u2009'},\r\n                           {''\\nzwnj'', '\u200C'},\r\n                           {''zwj'', '\u200D'},\r\n                           {''lrm'', '\u200E'},\r\n                           {''\\nrlm'', '\u200F'},\r\n                           {''ndash'', '\u2013'},\r\n                           {''mdash'', '\u2014'},\r\n                           {''\\nlsquo'', '\u2018'},\r\n                           {''rsquo'', '\u2019'},\r\n                           {''sbquo'', '\u201A'},\r\n                           {''\\nldquo'', '\u201C'},\r\n                           {''rdquo'', '\u201D'},\r\n                           {''bdquo'', '\u201E'},\r\n                           {''\\ndagger'', '\u2020'},\r\n                           {''Dagger'', '\u2021'},\r\n                           {''permil'', '\u2030'},\r\n                           {''\\nlsaquo'', '\u2039'},\r\n                           {''rsaquo'', '\u203A'},\r\n                           {''euro'', '\u20AC'}\r\n                       }", span="603-857"];
m0_286 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.InitEntities()", file="HtmlEncoder.cs", label="Exit RestSharp.Extensions.MonoHttp.HttpEncoder.InitEntities()", span="599-599"];
m0_41 [cluster="System.Text.Encoding.GetString(byte[], int, int)", file="HtmlEncoder.cs", label="Entry System.Text.Encoding.GetString(byte[], int, int)", span="0-0"];
m0_106 [cluster="System.Text.StringBuilder.Append(char)", file="HtmlEncoder.cs", label="Entry System.Text.StringBuilder.Append(char)", span="0-0"];
m0_136 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="Entry RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", span="319-319"];
m0_137 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="s == null", span="321-321"];
m0_139 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="s.Length == 0", span="326-326"];
m0_141 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="s.IndexOf('&') == -1", span="331-331"];
m0_142 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="return s;", span="333-333"];
m0_145 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="int len = s.Length", span="338-338"];
m0_152 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="char c = s[i]", span="351-351"];
m0_138 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="return null;", span="323-323"];
m0_140 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="return string.Empty;", span="328-328"];
m0_143 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="StringBuilder entity = new StringBuilder()", span="336-336"];
m0_144 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="StringBuilder output = new StringBuilder()", span="337-337"];
m0_155 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="entity.Append(c)", span="357-357"];
m0_161 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="entity.Append(number.ToString(Helpers.InvariantCulture))", span="374-374"];
m0_163 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="output.Append(entity)", span="378-378"];
m0_164 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="entity.Length = 0", span="379-379"];
m0_165 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="entity.Append('&')", span="380-380"];
m0_170 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="output.Append(entity)", span="391-391"];
m0_172 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="entity.Length = 0", span="393-393"];
m0_176 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="entity.Append(c)", span="402-402"];
m0_178 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="entity.Append(c)", span="408-408"];
m0_180 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="string key = entity.ToString()", span="412-412"];
m0_185 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="entity.Length = 0", span="421-421"];
m0_194 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="entity.Length = 0", span="440-440"];
m0_206 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="entity.Append(number.ToString(Helpers.InvariantCulture))", span="463-463"];
m0_208 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="entity.Append(c)", span="467-467"];
m0_210 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="entity.Length > 0", span="474-474"];
m0_211 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="output.Append(entity)", span="476-476"];
m0_157 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="output.Append(c)", span="362-362"];
m0_171 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="output.Append(c)", span="392-392"];
m0_183 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="output.Append(key)", span="419-419"];
m0_189 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="output.Append(''&#'')", span="430-430"];
m0_190 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="output.Append(number.ToString(Helpers.InvariantCulture))", span="431-431"];
m0_191 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="output.Append('';'')", span="432-432"];
m0_192 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="output.Append((char) number)", span="436-436"];
m0_213 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="output.Append(number.ToString(Helpers.InvariantCulture))", span="480-480"];
m0_214 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="return output.ToString();", span="483-483"];
m0_146 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="int state = 0", span="344-344"];
m0_151 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="i < len", span="349-349"];
m0_147 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="int number = 0", span="345-345"];
m0_153 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="state == 0", span="353-353"];
m0_166 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label=state, span="385-385"];
m0_148 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="bool isHexValue = false", span="346-346"];
m0_188 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="number > 65535", span="428-428"];
m0_197 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="number = number * 16 + FromHex(c)", span="445-445"];
m0_200 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="number = number * 10 + (c - '0')", span="450-450"];
m0_202 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="number == 0 && (c == 'x' || c == 'X')", span="453-453"];
m0_149 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="bool haveTrailingDigits = false", span="347-347"];
m0_196 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="isHexValue && IsHexDigit(c)", span="443-443"];
m0_150 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="int i = 0", span="349-349"];
m0_160 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label=haveTrailingDigits, span="372-372"];
m0_205 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label=haveTrailingDigits, span="461-461"];
m0_212 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label=haveTrailingDigits, span="478-478"];
m0_209 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="i++", span="349-349"];
m0_154 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="c == '&'", span="355-355"];
m0_158 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="c == '&'", span="368-368"];
m0_168 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="c == ';'", span="388-388"];
m0_175 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="state = c != '#'\r\n                                ? 2\r\n                                : 3", span="399-401"];
m0_179 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="c == ';'", span="410-410"];
m0_187 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="c == ';'", span="426-426"];
m0_199 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="char.IsDigit(c)", span="448-448"];
m0_156 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="state = 1", span="358-358"];
m0_159 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="state = 1", span="370-370"];
m0_162 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="haveTrailingDigits = false", span="375-375"];
m0_167 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label=1, span="387-387"];
m0_177 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label=2, span="407-407"];
m0_186 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label=3, span="425-425"];
m0_169 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="state = 0", span="390-390"];
m0_173 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="number = 0", span="397-397"];
m0_174 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="isHexValue = false", span="398-398"];
m0_181 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="key.Length > 1 && Entities.ContainsKey(key.Substring(1, key.Length - 2))", span="414-414"];
m0_182 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="key = Entities[key.Substring(1, key.Length - 2)].ToString()", span="416-416"];
m0_184 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="state = 0", span="420-420"];
m0_193 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="state = 0", span="439-439"];
m0_195 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="haveTrailingDigits = false", span="441-441"];
m0_198 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="haveTrailingDigits = true", span="446-446"];
m0_201 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="haveTrailingDigits = true", span="451-451"];
m0_203 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="isHexValue = true", span="455-455"];
m0_204 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="state = 2", span="459-459"];
m0_207 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="haveTrailingDigits = false", span="464-464"];
m0_215 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", file="HtmlEncoder.cs", label="Exit RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlDecode(string)", span="319-319"];
m0_11 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.StringBuilderAppend(string, ref System.Text.StringBuilder)", file="HtmlEncoder.cs", label="Entry RestSharp.Extensions.MonoHttp.HttpEncoder.StringBuilderAppend(string, ref System.Text.StringBuilder)", span="95-95"];
m0_12 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.StringBuilderAppend(string, ref System.Text.StringBuilder)", file="HtmlEncoder.cs", label="sb == null", span="97-97"];
m0_13 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.StringBuilderAppend(string, ref System.Text.StringBuilder)", file="HtmlEncoder.cs", label="sb = new StringBuilder(s)", span="99-99"];
m0_14 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.StringBuilderAppend(string, ref System.Text.StringBuilder)", file="HtmlEncoder.cs", label="sb.Append(s)", span="103-103"];
m0_15 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.StringBuilderAppend(string, ref System.Text.StringBuilder)", file="HtmlEncoder.cs", label="Exit RestSharp.Extensions.MonoHttp.HttpEncoder.StringBuilderAppend(string, ref System.Text.StringBuilder)", span="95-95"];
m0_283 [cluster="System.Text.Encoding.GetBytes(string)", file="HtmlEncoder.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m0_226 [cluster="System.Convert.ToString(char)", file="HtmlEncoder.cs", label="Entry System.Convert.ToString(char)", span="0-0"];
m0_10 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.EncodeHeaderString(string)", file="HtmlEncoder.cs", label="Entry RestSharp.Extensions.MonoHttp.HttpEncoder.EncodeHeaderString(string)", span="107-107"];
m0_18 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.EncodeHeaderString(string)", file="HtmlEncoder.cs", label="StringBuilder sb = null", span="109-109"];
m0_19 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.EncodeHeaderString(string)", file="HtmlEncoder.cs", label=input, span="111-111"];
m0_22 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.EncodeHeaderString(string)", file="HtmlEncoder.cs", label="return sb != null\r\n                ? sb.ToString()\r\n                : input;", span="119-121"];
m0_21 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.EncodeHeaderString(string)", file="HtmlEncoder.cs", label="StringBuilderAppend(string.Format(''%{0:x2}'', (int) ch), ref sb)", span="115-115"];
m0_20 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.EncodeHeaderString(string)", file="HtmlEncoder.cs", label="(ch < 32 && ch != 9) || ch == 127", span="113-113"];
m0_23 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.EncodeHeaderString(string)", file="HtmlEncoder.cs", label="Exit RestSharp.Extensions.MonoHttp.HttpEncoder.EncodeHeaderString(string)", span="107-107"];
m0_104 [cluster="System.Text.StringBuilder.StringBuilder()", file="HtmlEncoder.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m0_24 [cluster="string.Format(string, object)", file="HtmlEncoder.cs", label="Entry string.Format(string, object)", span="0-0"];
m0_63 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="Entry RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", span="502-502"];
m0_234 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="c > 255", span="504-504"];
m0_235 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="int i = c", span="509-509"];
m0_236 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="result.WriteByte((byte) '%')", span="511-511"];
m0_237 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="result.WriteByte((byte) 'u')", span="512-512"];
m0_239 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="result.WriteByte((byte) hexChars[idx])", span="516-516"];
m0_241 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="result.WriteByte((byte) hexChars[idx])", span="518-518"];
m0_243 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="result.WriteByte((byte) hexChars[idx])", span="520-520"];
m0_245 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="result.WriteByte((byte) hexChars[idx])", span="522-522"];
m0_247 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="c > ' ' && NotEncoded(c)", span="527-527"];
m0_248 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="result.WriteByte((byte) c)", span="529-529"];
m0_250 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="c == ' '", span="534-534"];
m0_251 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="result.WriteByte((byte) '+')", span="536-536"];
m0_253 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="(c < '0') ||\r\n                (c < 'A' && c > '9') ||\r\n                (c > 'Z' && c < 'a') ||\r\n                (c > 'z')", span="541-544"];
m0_254 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="isUnicode && c > 127", span="546-546"];
m0_255 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="result.WriteByte((byte) '%')", span="548-548"];
m0_256 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="result.WriteByte((byte) 'u')", span="549-549"];
m0_257 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="result.WriteByte((byte) '0')", span="550-550"];
m0_258 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="result.WriteByte((byte) '0')", span="551-551"];
m0_259 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="result.WriteByte((byte) '%')", span="555-555"];
m0_260 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="int idx = c >> 4", span="558-558"];
m0_261 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="result.WriteByte((byte) hexChars[idx])", span="560-560"];
m0_262 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="idx = c & 0x0F", span="561-561"];
m0_263 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="result.WriteByte((byte) hexChars[idx])", span="562-562"];
m0_264 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="result.WriteByte((byte) c)", span="566-566"];
m0_238 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="int idx = i >> 12", span="514-514"];
m0_240 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="idx = (i >> 8) & 0x0F", span="517-517"];
m0_242 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="idx = (i >> 4) & 0x0F", span="519-519"];
m0_244 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="idx = i & 0x0F", span="521-521"];
m0_246 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="return;", span="524-524"];
m0_249 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="return;", span="531-531"];
m0_252 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="return;", span="538-538"];
m0_265 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", file="HtmlEncoder.cs", label="Exit RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeChar(char, System.IO.Stream, bool)", span="502-502"];
m0_222 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.FromHex(char)", file="HtmlEncoder.cs", label="Entry RestSharp.Extensions.MonoHttp.HttpEncoder.FromHex(char)", span="486-486"];
m0_224 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.FromHex(char)", file="HtmlEncoder.cs", label="return int.Parse(Convert.ToString(c), System.Globalization.NumberStyles.HexNumber);", span="488-488"];
m0_225 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.FromHex(char)", file="HtmlEncoder.cs", label="Exit RestSharp.Extensions.MonoHttp.HttpEncoder.FromHex(char)", span="486-486"];
m0_266 [cluster="System.IO.Stream.WriteByte(byte)", file="HtmlEncoder.cs", label="Entry System.IO.Stream.WriteByte(byte)", span="0-0"];
m0_60 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="HtmlEncoder.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m0_223 [cluster="char.IsDigit(char)", file="HtmlEncoder.cs", label="Entry char.IsDigit(char)", span="0-0"];
m0_61 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="HtmlEncoder.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
m0_287 [cluster="System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary(System.Collections.Generic.IComparer<TKey>)", file="HtmlEncoder.cs", label="Entry System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary(System.Collections.Generic.IComparer<TKey>)", span="0-0"];
m0_17 [cluster="System.Text.StringBuilder.Append(string)", file="HtmlEncoder.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m0_9 [cluster="string.IsNullOrEmpty(string)", file="HtmlEncoder.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m0_64 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="Entry RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", span="179-179"];
m0_65 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="s == null", span="181-181"];
m0_67 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="s.Length == 0", span="186-186"];
m0_71 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="i < s.Length", span="193-193"];
m0_72 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="char c = s[i]", span="195-195"];
m0_77 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="return s;", span="206-206"];
m0_79 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="int len = s.Length", span="210-210"];
m0_82 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="s[i]", span="214-214"];
m0_95 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="char ch = s[i]", span="241-241"];
m0_66 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="return null;", span="183-183"];
m0_68 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="return string.Empty;", span="188-188"];
m0_69 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="bool needEncode = false", span="191-191"];
m0_70 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="int i = 0", span="193-193"];
m0_76 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="!needEncode", span="204-204"];
m0_75 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="i++", span="193-193"];
m0_73 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="c == '&' || c == '''' || c == '<' || c == '>' || c > 159", span="197-197"];
m0_74 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="needEncode = true", span="199-199"];
m0_78 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="StringBuilder output = new StringBuilder()", span="209-209"];
m0_84 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="output.Append(''&amp;'')", span="217-217"];
m0_86 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="output.Append(''&gt;'')", span="221-221"];
m0_88 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="output.Append(''&lt;'')", span="225-225"];
m0_90 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="output.Append(''&quot;'')", span="229-229"];
m0_92 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="output.Append(''&#65308;'')", span="233-233"];
m0_94 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="output.Append(''&#65310;'')", span="237-237"];
m0_97 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="output.Append(''&#'')", span="245-245"];
m0_98 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="output.Append(((int) ch).ToString(Helpers.InvariantCulture))", span="246-246"];
m0_99 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="output.Append('';'')", span="247-247"];
m0_100 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="output.Append(ch)", span="251-251"];
m0_102 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="return output.ToString();", span="258-258"];
m0_80 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="int i = 0", span="212-212"];
m0_81 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="i < len", span="212-212"];
m0_101 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="i++", span="212-212"];
m0_83 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="'&'", span="216-216"];
m0_85 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="'>'", span="220-220"];
m0_87 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="'<'", span="224-224"];
m0_89 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="''''", span="228-228"];
m0_91 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="'\uff1c'", span="232-232"];
m0_93 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="'\uff1e'", span="236-236"];
m0_96 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="ch > 159 && ch < 256", span="243-243"];
m0_103 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", file="HtmlEncoder.cs", label="Exit RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlEncode(string)", span="179-179"];
m0_39 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlPathEncodeChar(char, System.IO.Stream)", file="HtmlEncoder.cs", label="Entry RestSharp.Extensions.MonoHttp.HttpEncoder.UrlPathEncodeChar(char, System.IO.Stream)", span="570-570"];
m0_267 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlPathEncodeChar(char, System.IO.Stream)", file="HtmlEncoder.cs", label="c < 33 || c > 126", span="572-572"];
m0_268 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlPathEncodeChar(char, System.IO.Stream)", file="HtmlEncoder.cs", label="byte[] bIn = Encoding.UTF8.GetBytes(c.ToString())", span="574-574"];
m0_271 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlPathEncodeChar(char, System.IO.Stream)", file="HtmlEncoder.cs", label="result.WriteByte((byte) '%')", span="578-578"];
m0_273 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlPathEncodeChar(char, System.IO.Stream)", file="HtmlEncoder.cs", label="result.WriteByte((byte) hexChars[idx])", span="582-582"];
m0_275 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlPathEncodeChar(char, System.IO.Stream)", file="HtmlEncoder.cs", label="result.WriteByte((byte) hexChars[idx])", span="584-584"];
m0_277 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlPathEncodeChar(char, System.IO.Stream)", file="HtmlEncoder.cs", label="c == ' '", span="587-587"];
m0_278 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlPathEncodeChar(char, System.IO.Stream)", file="HtmlEncoder.cs", label="result.WriteByte((byte) '%')", span="589-589"];
m0_279 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlPathEncodeChar(char, System.IO.Stream)", file="HtmlEncoder.cs", label="result.WriteByte((byte) '2')", span="590-590"];
m0_280 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlPathEncodeChar(char, System.IO.Stream)", file="HtmlEncoder.cs", label="result.WriteByte((byte) '0')", span="591-591"];
m0_281 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlPathEncodeChar(char, System.IO.Stream)", file="HtmlEncoder.cs", label="result.WriteByte((byte) c)", span="595-595"];
m0_269 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlPathEncodeChar(char, System.IO.Stream)", file="HtmlEncoder.cs", label="int i = 0", span="576-576"];
m0_270 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlPathEncodeChar(char, System.IO.Stream)", file="HtmlEncoder.cs", label="i < bIn.Length", span="576-576"];
m0_272 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlPathEncodeChar(char, System.IO.Stream)", file="HtmlEncoder.cs", label="int idx = bIn[i] >> 4", span="580-580"];
m0_274 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlPathEncodeChar(char, System.IO.Stream)", file="HtmlEncoder.cs", label="idx = bIn[i] & 0x0F", span="583-583"];
m0_276 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlPathEncodeChar(char, System.IO.Stream)", file="HtmlEncoder.cs", label="i++", span="576-576"];
m0_282 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlPathEncodeChar(char, System.IO.Stream)", file="HtmlEncoder.cs", label="Exit RestSharp.Extensions.MonoHttp.HttpEncoder.UrlPathEncodeChar(char, System.IO.Stream)", span="570-570"];
m0_217 [cluster="System.Text.StringBuilder.Append(object)", file="HtmlEncoder.cs", label="Entry System.Text.StringBuilder.Append(object)", span="0-0"];
m0_25 [cluster="System.Text.StringBuilder.ToString()", file="HtmlEncoder.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m0_227 [cluster="int.Parse(string, System.Globalization.NumberStyles)", file="HtmlEncoder.cs", label="Entry int.Parse(string, System.Globalization.NumberStyles)", span="0-0"];
m0_107 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", file="HtmlEncoder.cs", label="Entry RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", span="261-261"];
m0_108 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", file="HtmlEncoder.cs", label="s == null", span="263-263"];
m0_110 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", file="HtmlEncoder.cs", label="s.Length == 0", span="268-268"];
m0_114 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", file="HtmlEncoder.cs", label="i < s.Length", span="275-275"];
m0_115 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", file="HtmlEncoder.cs", label="char c = s[i]", span="277-277"];
m0_120 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", file="HtmlEncoder.cs", label="return s;", span="288-288"];
m0_122 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", file="HtmlEncoder.cs", label="int len = s.Length", span="292-292"];
m0_125 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", file="HtmlEncoder.cs", label="s[i]", span="296-296"];
m0_132 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", file="HtmlEncoder.cs", label="output.Append(s[i])", span="311-311"];
m0_109 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", file="HtmlEncoder.cs", label="return null;", span="265-265"];
m0_111 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", file="HtmlEncoder.cs", label="return string.Empty;", span="270-270"];
m0_112 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", file="HtmlEncoder.cs", label="bool needEncode = false", span="273-273"];
m0_113 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", file="HtmlEncoder.cs", label="int i = 0", span="275-275"];
m0_119 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", file="HtmlEncoder.cs", label="!needEncode", span="286-286"];
m0_118 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", file="HtmlEncoder.cs", label="i++", span="275-275"];
m0_116 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", file="HtmlEncoder.cs", label="c == '&' || c == '''' || c == '<'", span="279-279"];
m0_117 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", file="HtmlEncoder.cs", label="needEncode = true", span="281-281"];
m0_121 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", file="HtmlEncoder.cs", label="StringBuilder output = new StringBuilder()", span="291-291"];
m0_127 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", file="HtmlEncoder.cs", label="output.Append(''&amp;'')", span="299-299"];
m0_129 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", file="HtmlEncoder.cs", label="output.Append(''&quot;'')", span="303-303"];
m0_131 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", file="HtmlEncoder.cs", label="output.Append(''&lt;'')", span="307-307"];
m0_134 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", file="HtmlEncoder.cs", label="return output.ToString();", span="316-316"];
m0_123 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", file="HtmlEncoder.cs", label="int i = 0", span="294-294"];
m0_124 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", file="HtmlEncoder.cs", label="i < len", span="294-294"];
m0_133 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", file="HtmlEncoder.cs", label="i++", span="294-294"];
m0_126 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", file="HtmlEncoder.cs", label="'&'", span="298-298"];
m0_128 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", file="HtmlEncoder.cs", label="''''", span="302-302"];
m0_130 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", file="HtmlEncoder.cs", label="'<'", span="306-306"];
m0_135 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", file="HtmlEncoder.cs", label="Exit RestSharp.Extensions.MonoHttp.HttpEncoder.HtmlAttributeEncode(string)", span="261-261"];
m0_16 [cluster="System.Text.StringBuilder.StringBuilder(string)", file="HtmlEncoder.cs", label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0"];
m0_231 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.NotEncoded(char)", file="HtmlEncoder.cs", label="Entry RestSharp.Extensions.MonoHttp.HttpEncoder.NotEncoded(char)", span="497-497"];
m0_232 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.NotEncoded(char)", file="HtmlEncoder.cs", label="return (c == '!' || c == '(' || c == ')' || c == '*' || c == '-' || c == '.' || c == '_');", span="499-499"];
m0_233 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.NotEncoded(char)", file="HtmlEncoder.cs", label="Exit RestSharp.Extensions.MonoHttp.HttpEncoder.NotEncoded(char)", span="497-497"];
m0_218 [cluster="string.Substring(int, int)", file="HtmlEncoder.cs", label="Entry string.Substring(int, int)", span="0-0"];
m0_38 [cluster="System.IO.MemoryStream.MemoryStream()", file="HtmlEncoder.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m0_220 [cluster="char.ToString()", file="HtmlEncoder.cs", label="Entry char.ToString()", span="0-0"];
m0_42 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeToBytes(byte[], int, int)", file="HtmlEncoder.cs", label="Entry RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeToBytes(byte[], int, int)", span="144-144"];
m0_43 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeToBytes(byte[], int, int)", file="HtmlEncoder.cs", label="bytes == null", span="146-146"];
m0_45 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeToBytes(byte[], int, int)", file="HtmlEncoder.cs", label="int blen = bytes.Length", span="151-151"];
m0_48 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeToBytes(byte[], int, int)", file="HtmlEncoder.cs", label="offset < 0 || offset >= blen", span="158-158"];
m0_50 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeToBytes(byte[], int, int)", file="HtmlEncoder.cs", label="count < 0 || count > blen - offset", span="163-163"];
m0_52 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeToBytes(byte[], int, int)", file="HtmlEncoder.cs", label="MemoryStream result = new MemoryStream(count)", span="168-168"];
m0_53 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeToBytes(byte[], int, int)", file="HtmlEncoder.cs", label="int end = offset + count", span="169-169"];
m0_54 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeToBytes(byte[], int, int)", file="HtmlEncoder.cs", label="int i = offset", span="171-171"];
m0_56 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeToBytes(byte[], int, int)", file="HtmlEncoder.cs", label="UrlEncodeChar((char) bytes[i], result, false)", span="173-173"];
m0_44 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeToBytes(byte[], int, int)", file="HtmlEncoder.cs", label="throw new ArgumentNullException(''bytes'');", span="148-148"];
m0_46 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeToBytes(byte[], int, int)", file="HtmlEncoder.cs", label="blen == 0", span="153-153"];
m0_47 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeToBytes(byte[], int, int)", file="HtmlEncoder.cs", label="return new byte[0];", span="155-155"];
m0_49 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeToBytes(byte[], int, int)", file="HtmlEncoder.cs", label="throw new ArgumentOutOfRangeException(''offset'');", span="160-160"];
m0_51 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeToBytes(byte[], int, int)", file="HtmlEncoder.cs", label="throw new ArgumentOutOfRangeException(''count'');", span="165-165"];
m0_58 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeToBytes(byte[], int, int)", file="HtmlEncoder.cs", label="return result.ToArray();", span="176-176"];
m0_55 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeToBytes(byte[], int, int)", file="HtmlEncoder.cs", label="i < end", span="171-171"];
m0_57 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeToBytes(byte[], int, int)", file="HtmlEncoder.cs", label="i++", span="171-171"];
m0_59 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeToBytes(byte[], int, int)", file="HtmlEncoder.cs", label="Exit RestSharp.Extensions.MonoHttp.HttpEncoder.UrlEncodeToBytes(byte[], int, int)", span="144-144"];
m0_62 [cluster="System.IO.MemoryStream.MemoryStream(int)", file="HtmlEncoder.cs", label="Entry System.IO.MemoryStream.MemoryStream(int)", span="0-0"];
m0_219 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="HtmlEncoder.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m0_216 [cluster="string.IndexOf(char)", file="HtmlEncoder.cs", label="Entry string.IndexOf(char)", span="0-0"];
m0_5 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HeaderNameValueEncode(string, string, out string, out string)", file="HtmlEncoder.cs", label="Entry RestSharp.Extensions.MonoHttp.HttpEncoder.HeaderNameValueEncode(string, string, out string, out string)", span="84-84"];
m0_6 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HeaderNameValueEncode(string, string, out string, out string)", file="HtmlEncoder.cs", label="encodedHeaderName = string.IsNullOrEmpty(headerName)\r\n                ? headerName\r\n                : EncodeHeaderString(headerName)", span="87-89"];
m0_7 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HeaderNameValueEncode(string, string, out string, out string)", file="HtmlEncoder.cs", label="encodedHeaderValue = string.IsNullOrEmpty(headerValue)\r\n                ? headerValue\r\n                : EncodeHeaderString(\\nheaderValue)", span="90-92"];
m0_8 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HeaderNameValueEncode(string, string, out string, out string)", file="HtmlEncoder.cs", label="Exit RestSharp.Extensions.MonoHttp.HttpEncoder.HeaderNameValueEncode(string, string, out string, out string)", span="84-84"];
m0_4 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HttpEncoder()", file="HtmlEncoder.cs", label="Entry RestSharp.Extensions.MonoHttp.HttpEncoder.HttpEncoder()", span="40-40"];
m0_0 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HttpEncoder()", file="HtmlEncoder.cs", label="Entry RestSharp.Extensions.MonoHttp.HttpEncoder.HttpEncoder()", span="78-78"];
m0_1 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HttpEncoder()", file="HtmlEncoder.cs", label="defaultEncoder = new HttpEncoder()", span="80-80"];
m0_2 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HttpEncoder()", file="HtmlEncoder.cs", label="currentEncoder = defaultEncoder", span="81-81"];
m0_3 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.HttpEncoder()", file="HtmlEncoder.cs", label="Exit RestSharp.Extensions.MonoHttp.HttpEncoder.HttpEncoder()", span="78-78"];
m0_105 [cluster="int.ToString(System.IFormatProvider)", file="HtmlEncoder.cs", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
m0_26 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlPathEncode(string)", file="HtmlEncoder.cs", label="Entry RestSharp.Extensions.MonoHttp.HttpEncoder.UrlPathEncode(string)", span="124-124"];
m0_27 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlPathEncode(string)", file="HtmlEncoder.cs", label="string.IsNullOrEmpty(value)", span="126-126"];
m0_28 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlPathEncode(string)", file="HtmlEncoder.cs", label="return value;", span="128-128"];
m0_29 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlPathEncode(string)", color=green, community=0, file="HtmlEncoder.cs", label="MemoryStream result = new MemoryStream()", prediction=0, span="131-131"];
m0_35 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlPathEncode(string)", color=green, community=0, file="HtmlEncoder.cs", label="byte[] bytes = result.ToArray()", prediction=1, span="139-139"];
m0_36 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlPathEncode(string)", color=green, community=0, file="HtmlEncoder.cs", label="return Encoding.ASCII.GetString(bytes, 0, bytes.Length);", prediction=2, span="141-141"];
m0_37 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.UrlPathEncode(string)", file="HtmlEncoder.cs", label="Exit RestSharp.Extensions.MonoHttp.HttpEncoder.UrlPathEncode(string)", span="124-124"];
m0_40 [cluster="System.IO.MemoryStream.ToArray()", file="HtmlEncoder.cs", label="Entry System.IO.MemoryStream.ToArray()", span="0-0"];
m0_221 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.IsHexDigit(char)", file="HtmlEncoder.cs", label="Entry RestSharp.Extensions.MonoHttp.HttpEncoder.IsHexDigit(char)", span="491-491"];
m0_228 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.IsHexDigit(char)", file="HtmlEncoder.cs", label="String hexValues = ''0123456789abcdefABCDEF''", span="493-493"];
m0_229 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.IsHexDigit(char)", file="HtmlEncoder.cs", label="return hexValues.IndexOf(c) >= 0;", span="494-494"];
m0_230 [cluster="RestSharp.Extensions.MonoHttp.HttpEncoder.IsHexDigit(char)", file="HtmlEncoder.cs", label="Exit RestSharp.Extensions.MonoHttp.HttpEncoder.IsHexDigit(char)", span="491-491"];
m1_24 [cluster="RestSharp.IRestRequest.AddCookie(string, string)", file="IRestRequest.cs", label="Entry RestSharp.IRestRequest.AddCookie(string, string)", span="292-292"];
m1_25 [cluster="RestSharp.IRestRequest.AddCookie(string, string)", file="IRestRequest.cs", label="Exit RestSharp.IRestRequest.AddCookie(string, string)", span="292-292"];
m1_2 [cluster="RestSharp.IRestRequest.AddBody(object)", file="IRestRequest.cs", label="Entry RestSharp.IRestRequest.AddBody(object)", span="191-191"];
m1_3 [cluster="RestSharp.IRestRequest.AddBody(object)", file="IRestRequest.cs", label="Exit RestSharp.IRestRequest.AddBody(object)", span="191-191"];
m1_22 [cluster="RestSharp.IRestRequest.AddHeader(string, string)", file="IRestRequest.cs", label="Entry RestSharp.IRestRequest.AddHeader(string, string)", span="284-284"];
m1_23 [cluster="RestSharp.IRestRequest.AddHeader(string, string)", file="IRestRequest.cs", label="Exit RestSharp.IRestRequest.AddHeader(string, string)", span="284-284"];
m1_26 [cluster="RestSharp.IRestRequest.AddUrlSegment(string, string)", file="IRestRequest.cs", label="Entry RestSharp.IRestRequest.AddUrlSegment(string, string)", span="300-300"];
m1_27 [cluster="RestSharp.IRestRequest.AddUrlSegment(string, string)", file="IRestRequest.cs", label="Exit RestSharp.IRestRequest.AddUrlSegment(string, string)", span="300-300"];
m1_12 [cluster="RestSharp.IRestRequest.AddObject(object)", file="IRestRequest.cs", label="Entry RestSharp.IRestRequest.AddObject(object)", span="232-232"];
m1_13 [cluster="RestSharp.IRestRequest.AddObject(object)", file="IRestRequest.cs", label="Exit RestSharp.IRestRequest.AddObject(object)", span="232-232"];
m1_4 [cluster="RestSharp.IRestRequest.AddJsonBody(object)", file="IRestRequest.cs", label="Entry RestSharp.IRestRequest.AddJsonBody(object)", span="198-198"];
m1_5 [cluster="RestSharp.IRestRequest.AddJsonBody(object)", file="IRestRequest.cs", label="Exit RestSharp.IRestRequest.AddJsonBody(object)", span="198-198"];
m1_14 [cluster="RestSharp.IRestRequest.AddParameter(RestSharp.Parameter)", file="IRestRequest.cs", label="Entry RestSharp.IRestRequest.AddParameter(RestSharp.Parameter)", span="239-239"];
m1_15 [cluster="RestSharp.IRestRequest.AddParameter(RestSharp.Parameter)", file="IRestRequest.cs", label="Exit RestSharp.IRestRequest.AddParameter(RestSharp.Parameter)", span="239-239"];
m1_18 [cluster="RestSharp.IRestRequest.AddParameter(string, object, RestSharp.ParameterType)", file="IRestRequest.cs", label="Entry RestSharp.IRestRequest.AddParameter(string, object, RestSharp.ParameterType)", span="261-261"];
m1_19 [cluster="RestSharp.IRestRequest.AddParameter(string, object, RestSharp.ParameterType)", file="IRestRequest.cs", label="Exit RestSharp.IRestRequest.AddParameter(string, object, RestSharp.ParameterType)", span="261-261"];
m1_28 [cluster="RestSharp.IRestRequest.AddQueryParameter(string, string)", file="IRestRequest.cs", label="Entry RestSharp.IRestRequest.AddQueryParameter(string, string)", span="308-308"];
m1_29 [cluster="RestSharp.IRestRequest.AddQueryParameter(string, string)", file="IRestRequest.cs", label="Exit RestSharp.IRestRequest.AddQueryParameter(string, string)", span="308-308"];
m1_20 [cluster="RestSharp.IRestRequest.AddParameter(string, object, string, RestSharp.ParameterType)", file="IRestRequest.cs", label="Entry RestSharp.IRestRequest.AddParameter(string, object, string, RestSharp.ParameterType)", span="276-276"];
m1_21 [cluster="RestSharp.IRestRequest.AddParameter(string, object, string, RestSharp.ParameterType)", file="IRestRequest.cs", label="Exit RestSharp.IRestRequest.AddParameter(string, object, string, RestSharp.ParameterType)", span="276-276"];
m1_6 [cluster="RestSharp.IRestRequest.AddXmlBody(object)", file="IRestRequest.cs", label="Entry RestSharp.IRestRequest.AddXmlBody(object)", span="205-205"];
m1_7 [cluster="RestSharp.IRestRequest.AddXmlBody(object)", file="IRestRequest.cs", label="Exit RestSharp.IRestRequest.AddXmlBody(object)", span="205-205"];
m1_8 [cluster="RestSharp.IRestRequest.AddXmlBody(object, string)", file="IRestRequest.cs", label="Entry RestSharp.IRestRequest.AddXmlBody(object, string)", span="214-214"];
m1_9 [cluster="RestSharp.IRestRequest.AddXmlBody(object, string)", file="IRestRequest.cs", label="Exit RestSharp.IRestRequest.AddXmlBody(object, string)", span="214-214"];
m1_10 [cluster="RestSharp.IRestRequest.AddObject(object, params string[])", file="IRestRequest.cs", label="Entry RestSharp.IRestRequest.AddObject(object, params string[])", span="225-225"];
m1_11 [cluster="RestSharp.IRestRequest.AddObject(object, params string[])", file="IRestRequest.cs", label="Exit RestSharp.IRestRequest.AddObject(object, params string[])", span="225-225"];
m1_0 [cluster="RestSharp.IRestRequest.AddBody(object, string)", file="IRestRequest.cs", label="Entry RestSharp.IRestRequest.AddBody(object, string)", span="183-183"];
m1_1 [cluster="RestSharp.IRestRequest.AddBody(object, string)", file="IRestRequest.cs", label="Exit RestSharp.IRestRequest.AddBody(object, string)", span="183-183"];
m1_16 [cluster="RestSharp.IRestRequest.AddParameter(string, object)", file="IRestRequest.cs", label="Entry RestSharp.IRestRequest.AddParameter(string, object)", span="247-247"];
m1_17 [cluster="RestSharp.IRestRequest.AddParameter(string, object)", file="IRestRequest.cs", label="Exit RestSharp.IRestRequest.AddParameter(string, object)", span="247-247"];
m1_30 [cluster="RestSharp.IRestRequest.IncreaseNumAttempts()", file="IRestRequest.cs", label="Entry RestSharp.IRestRequest.IncreaseNumAttempts()", span="312-312"];
m1_31 [cluster="RestSharp.IRestRequest.IncreaseNumAttempts()", file="IRestRequest.cs", label="Exit RestSharp.IRestRequest.IncreaseNumAttempts()", span="312-312"];
m3_413 [cluster="System.TimeSpan.TimeSpan(int, int, int, int, int)", file="JsonTests.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int, int, int)", span="0-0"];
m3_445 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_DateTime()", span="658-658"];
m3_446 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime()", file="JsonTests.cs", label="DateTimeTestStructure payload = GetPayLoad<DateTimeTestStructure>(''datetimes.txt'')", span="660-660"];
m3_447 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime()", file="JsonTests.cs", label="Assert.AreEqual(\r\n                new DateTime(2011, 6, 30, 8, 15, 46, 929, DateTimeKind.Utc),\r\n                payload.DateTime)", span="662-664"];
m3_448 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_DateTime()", span="658-658"];
m3_46 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="JsonTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m3_349 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", span="827-827"];
m3_555 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="int i = 0", span="849-849"];
m3_542 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="JsonObject doc = new JsonObject()", span="829-829"];
m3_543 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="doc[''name''] = ''John Sheehan''", span="831-831"];
m3_544 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="doc[''start_date''] = new DateTime(2009, 9, 25, 0, 6, 1, DateTimeKind.Utc)", span="832-832"];
m3_545 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="doc[''age''] = 28", span="833-833"];
m3_546 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="doc[''percent''] = 99.9999m", span="834-834"];
m3_547 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="doc[''big_number''] = long.MaxValue", span="835-835"];
m3_548 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="doc[''is_cool''] = false", span="836-836"];
m3_549 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="doc[''ignore''] = ''dummy''", span="837-837"];
m3_550 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="doc[''read_only''] = ''dummy''", span="838-838"];
m3_551 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="doc[''url''] = ''http://example.com''", span="839-839"];
m3_552 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="doc[''url_path''] = ''/foo/bar''", span="840-840"];
m3_553 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="doc[''best_friend''] = new JsonObject\r\n                                 {\r\n                                     { ''name'', ''\\nThe Fonz'' },\r\n                                     { ''since'', 1952 }\r\n                                 }", span="841-845"];
m3_559 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="doc[''friends''] = friendsArray", span="858-858"];
m3_561 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="doc[''foes''] = foesArray", span="866-866"];
m3_562 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="return doc.ToString();", span="868-868"];
m3_554 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="JsonArray friendsArray = new JsonArray()", span="847-847"];
m3_557 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="friendsArray.Add(new JsonObject\r\n                                 {\r\n                                     { ''name'', ''Friend'' + \\ni },\r\n                                     { ''since'', DateTime.Now.Year - i }\r\n                                 })", span="851-855"];
m3_556 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="i < 10", span="849-849"];
m3_558 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="i++", span="849-849"];
m3_560 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="JsonObject foesArray = new JsonObject\r\n                                   {\r\n                                       { ''dict1'', \\nnew JsonObject { { ''nickname'', ''Foe 1'' } } },\r\n                                       { ''dict2'', new JsonObject { { ''nickname'', ''\\nFoe 2'' } } }\r\n                                   }", span="860-864"];
m3_563 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.CreateJsonWithUnderscores()", span="827-827"];
m3_327 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", span="500-500"];
m3_328 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="string doc = CreateJsonWithUnderscores()", span="502-502"];
m3_329 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="JsonDeserializer d = new JsonDeserializer()", span="503-503"];
m3_330 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="504-504"];
m3_331 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="PersonForJson p = d.Deserialize<PersonForJson>(response)", span="505-505"];
m3_332 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(''John Sheehan'', p.Name)", span="507-507"];
m3_333 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(new DateTime(2009, 9, 25, 0, 6, 1), p.StartDate)", span="508-508"];
m3_334 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(28, p.Age)", span="509-509"];
m3_335 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(long.MaxValue, p.BigNumber)", span="510-510"];
m3_336 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(99.9999m, p.Percent)", span="511-511"];
m3_337 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(false, p.IsCool)", span="512-512"];
m3_338 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="513-513"];
m3_339 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="514-514"];
m3_340 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.NotNull(p.Friends)", span="515-515"];
m3_341 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(10, p.Friends.Count)", span="516-516"];
m3_342 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.NotNull(p.BestFriend)", span="517-517"];
m3_343 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(''The Fonz'', p.BestFriend.Name)", span="518-518"];
m3_344 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(1952, p.BestFriend.Since)", span="519-519"];
m3_345 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.IsNotEmpty(p.Foes)", span="520-520"];
m3_346 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(''Foe 1'', p.Foes[''dict1''].Nickname)", span="521-521"];
m3_347 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(''Foe 2'', p.Foes[''dict2''].Nickname)", span="522-522"];
m3_348 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root()", span="500-500"];
m3_463 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeLocal()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeLocal()", span="697-697"];
m3_464 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeLocal()", file="JsonTests.cs", label="Iso8601DateTimeTestStructure payload = GetPayLoad<Iso8601DateTimeTestStructure>(''iso8601datetimes.txt'')", span="699-699"];
m3_465 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeLocal()", file="JsonTests.cs", label="Assert.AreEqual(\r\n                new DateTime(2012, 7, 19, 10, 23, 25, DateTimeKind.Utc),\r\n                payload.DateTimeLocal)", span="701-703"];
m3_466 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeLocal()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeLocal()", span="697-697"];
m3_471 [cluster="System.DateTime.ToUniversalTime()", file="JsonTests.cs", label="Entry System.DateTime.ToUniversalTime()", span="0-0"];
m3_440 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_JsonNet_Dates()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_JsonNet_Dates()", span="648-648"];
m3_441 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_JsonNet_Dates()", file="JsonTests.cs", label="PersonForJson person = GetPayLoad<PersonForJson>(''person.json.txt'')", span="650-650"];
m3_442 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_JsonNet_Dates()", file="JsonTests.cs", label="Assert.AreEqual(\r\n                new DateTime(2011, 6, 30, 8, 15, 46, 929, DateTimeKind.Utc),\r\n                person.StartDate)", span="652-654"];
m3_443 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_JsonNet_Dates()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_JsonNet_Dates()", span="648-648"];
m3_350 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root_Alternative_Culture()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root_Alternative_Culture()", span="526-526"];
m3_351 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root_Alternative_Culture()", file="JsonTests.cs", label="new CultureChange(ALTERNATIVE_CULTURE)", span="528-528"];
m3_352 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root_Alternative_Culture()", file="JsonTests.cs", label="this.Can_Deserialize_Names_With_Underscores_With_Default_Root()", span="530-530"];
m3_353 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root_Alternative_Culture()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscores_With_Default_Root_Alternative_Culture()", span="526-526"];
m3_141 [cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="JsonTests.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0"];
m3_495 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", span="1024-1024"];
m3_644 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", file="JsonTests.cs", label="JsonObject doc = new JsonObject()", span="1026-1026"];
m3_645 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", file="JsonTests.cs", label="doc[''Thing1''] = ''Thing1''", span="1028-1028"];
m3_646 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", file="JsonTests.cs", label="doc[''Thing2''] = ''Thing2''", span="1029-1029"];
m3_647 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", file="JsonTests.cs", label="doc[''ThingRed''] = ''ThingRed''", span="1030-1030"];
m3_648 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", file="JsonTests.cs", label="doc[''ThingBlue''] = ''ThingBlue''", span="1031-1031"];
m3_649 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", file="JsonTests.cs", label="return doc.ToString();", span="1033-1033"];
m3_650 [cluster="RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.CreateJsonStringDictionary()", span="1024-1024"];
m3_415 [cluster="System.TimeSpan.TimeSpan(int, int, int, int)", file="JsonTests.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int, int)", span="0-0"];
m3_412 [cluster="System.TimeSpan.TimeSpan(long)", file="JsonTests.cs", label="Entry System.TimeSpan.TimeSpan(long)", span="0-0"];
m3_14 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", span="50-50"];
m3_15 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", file="JsonTests.cs", label="string content = ''{\''one\'':\''oneOneOne\'', \''two\'':\''twoTwoTwo\'', \''three\'':3}''", span="52-52"];
m3_16 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", file="JsonTests.cs", label="JsonDeserializer json = new JsonDeserializer()", span="53-53"];
m3_17 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", file="JsonTests.cs", label="SimpleStruct output = json.Deserialize<SimpleStruct>(new RestResponse { Content = content })", span="54-54"];
m3_18 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", file="JsonTests.cs", label="Assert.NotNull(output)", span="56-56"];
m3_19 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", file="JsonTests.cs", label="Assert.AreEqual(''oneOneOne'', output.One)", span="57-57"];
m3_20 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", file="JsonTests.cs", label="Assert.AreEqual(''twoTwoTwo'', output.Two)", span="58-58"];
m3_21 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", file="JsonTests.cs", label="Assert.AreEqual(3, output.Three)", span="59-59"];
m3_22 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Into_Struct()", span="50-50"];
m3_113 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", span="199-199"];
m3_114 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file="JsonTests.cs", label="Guid id1 = new Guid(''b0e5c11f-e944-478c-aadd-753b956d0c8c'')", span="201-201"];
m3_115 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file="JsonTests.cs", label="Guid id2 = new Guid(''809399fa-21c4-4dca-8dcd-34cb697fbca0'')", span="202-202"];
m3_117 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file="JsonTests.cs", label="data[''Ids''] = new JsonArray { id1, id2 }", span="205-205"];
m3_122 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file="JsonTests.cs", label="Assert.AreEqual(id1, p.Ids[0])", span="212-212"];
m3_116 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file="JsonTests.cs", label="JsonObject data = new JsonObject()", span="203-203"];
m3_123 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file="JsonTests.cs", label="Assert.AreEqual(id2, p.Ids[1])", span="213-213"];
m3_119 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file="JsonTests.cs", label="RestResponse response = new RestResponse { Content = data.ToString()  }", span="208-208"];
m3_118 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file="JsonTests.cs", label="JsonDeserializer d = new JsonDeserializer()", span="207-207"];
m3_120 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file="JsonTests.cs", label="GuidList p = d.Deserialize<GuidList>(response)", span="209-209"];
m3_121 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file="JsonTests.cs", label="Assert.AreEqual(2, p.Ids.Count)", span="211-211"];
m3_124 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_List_of_Guid()", span="199-199"];
m3_31 [cluster="System.IO.File.ReadAllText(string)", file="JsonTests.cs", label="Entry System.IO.File.ReadAllText(string)", span="0-0"];
m3_48 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", span="95-95"];
m3_49 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", file="JsonTests.cs", label="string doc = File.ReadAllText(Path.Combine(''SampleData'', ''jsonlists.txt''))", span="97-97"];
m3_50 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", file="JsonTests.cs", label="JsonDeserializer json = new JsonDeserializer()", span="98-98"];
m3_51 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", file="JsonTests.cs", label="JsonLists output = json.Deserialize<JsonLists>(new RestResponse { Content = doc })", span="99-99"];
m3_52 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", file="JsonTests.cs", label="Assert.IsNotEmpty(output.Names)", span="101-101"];
m3_53 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", file="JsonTests.cs", label="Assert.IsNotEmpty(output.Numbers)", span="102-102"];
m3_54 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Lists_of_Simple_Types()", span="95-95"];
m3_376 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root_Alternative_Culture()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root_Alternative_Culture()", span="561-561"];
m3_377 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root_Alternative_Culture()", file="JsonTests.cs", label="new CultureChange(ALTERNATIVE_CULTURE)", span="563-563"];
m3_378 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root_Alternative_Culture()", file="JsonTests.cs", label="this.Can_Deserialize_Names_With_Dashes_With_Default_Root()", span="565-565"];
m3_379 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root_Alternative_Culture()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root_Alternative_Culture()", span="561-561"];
m3_142 [cluster="System.DateTime.AddSeconds(double)", file="JsonTests.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m3_193 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Json_Using_DeserializeAs_Attribute()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Json_Using_DeserializeAs_Attribute()", span="308-308"];
m3_194 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Json_Using_DeserializeAs_Attribute()", file="JsonTests.cs", label="string content = ''{\''sid\'':\''asdasdasdasdasdasdasda\'',\''friendlyName\'':\''VeryNiceName\'',\''oddballPropertyName\'':\''blahblah\''}''", span="310-310"];
m3_195 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Json_Using_DeserializeAs_Attribute()", file="JsonTests.cs", label="JsonDeserializer json = new JsonDeserializer { RootElement = ''users'' }", span="311-311"];
m3_196 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Json_Using_DeserializeAs_Attribute()", file="JsonTests.cs", label="Oddball output = json.Deserialize<Oddball>(new RestResponse { Content = content })", span="312-312"];
m3_197 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Json_Using_DeserializeAs_Attribute()", file="JsonTests.cs", label="Assert.NotNull(output)", span="314-314"];
m3_198 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Json_Using_DeserializeAs_Attribute()", file="JsonTests.cs", label="Assert.AreEqual(''blahblah'', output.GoodPropertyName)", span="315-315"];
m3_199 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Json_Using_DeserializeAs_Attribute()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Json_Using_DeserializeAs_Attribute()", span="308-308"];
m3_414 [cluster="System.TimeSpan.TimeSpan(int, int, int)", file="JsonTests.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int)", span="0-0"];
m3_449 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", span="668-668"];
m3_450 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", file="JsonTests.cs", label="DateTimeTestStructure payload = GetPayLoad<DateTimeTestStructure>(''datetimes.txt'')", span="670-670"];
m3_451 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", file="JsonTests.cs", label="Assert.NotNull(payload.NullableDateTimeWithValue)", span="672-672"];
m3_452 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", file="JsonTests.cs", label="Assert.AreEqual(\r\n                new DateTime(2011, 6, 30, 8, 15, 46, 929, DateTimeKind.Utc),\r\n                payload.NullableDateTimeWithValue.Value)", span="673-675"];
m3_453 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Value()", span="668-668"];
m3_158 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonTests.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m3_255 [cluster="RestSharp.Tests.JsonTests.Deserialization_Of_Undefined_Int_Value_Returns_Enum_Default()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Deserialization_Of_Undefined_Int_Value_Returns_Enum_Default()", span="396-396"];
m3_256 [cluster="RestSharp.Tests.JsonTests.Deserialization_Of_Undefined_Int_Value_Returns_Enum_Default()", file="JsonTests.cs", label="string data = @''{ ''''Integer'''' : 1024 }''", span="398-398"];
m3_257 [cluster="RestSharp.Tests.JsonTests.Deserialization_Of_Undefined_Int_Value_Returns_Enum_Default()", file="JsonTests.cs", label="RestResponse response = new RestResponse { Content = data }", span="399-399"];
m3_258 [cluster="RestSharp.Tests.JsonTests.Deserialization_Of_Undefined_Int_Value_Returns_Enum_Default()", file="JsonTests.cs", label="JsonDeserializer json = new JsonDeserializer()", span="400-400"];
m3_259 [cluster="RestSharp.Tests.JsonTests.Deserialization_Of_Undefined_Int_Value_Returns_Enum_Default()", file="JsonTests.cs", label="JsonEnumsTestStructure result = json.Deserialize<JsonEnumsTestStructure>(response)", span="401-401"];
m3_260 [cluster="RestSharp.Tests.JsonTests.Deserialization_Of_Undefined_Int_Value_Returns_Enum_Default()", file="JsonTests.cs", label="Assert.AreEqual(Disposition.Friendly, result.Integer)", span="403-403"];
m3_261 [cluster="RestSharp.Tests.JsonTests.Deserialization_Of_Undefined_Int_Value_Returns_Enum_Default()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Deserialization_Of_Undefined_Int_Value_Returns_Enum_Default()", span="396-396"];
m3_506 [cluster="RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", span="1036-1036"];
m3_651 [cluster="RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", file="JsonTests.cs", label="JsonObject doc = new JsonObject()", span="1038-1038"];
m3_652 [cluster="RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", file="JsonTests.cs", label="doc[''Thing1''] = new JsonArray\r\n                            {\r\n                                ''Value1'',\r\n                                ''\\nValue2''\r\n                            }", span="1040-1044"];
m3_653 [cluster="RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", file="JsonTests.cs", label="doc[''Thing2''] = ''Thing2''", span="1045-1045"];
m3_654 [cluster="RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", file="JsonTests.cs", label="doc[''ThingRed''] = new JsonObject\r\n                              {\r\n                                  { ''Name'', ''ThingRed'' },\r\n                                  { ''\\nColor'', ''Red'' }\r\n                              }", span="1046-1050"];
m3_655 [cluster="RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", file="JsonTests.cs", label="doc[''ThingBlue''] = new JsonObject\r\n                               {\r\n                                   { ''Name'', ''ThingBlue'' },\r\n                                   { ''\\nColor'', ''Blue'' }\r\n                               }", span="1051-1055"];
m3_656 [cluster="RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", file="JsonTests.cs", label="return doc.ToString();", span="1057-1057"];
m3_657 [cluster="RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.CreateDynamicJsonStringDictionary()", span="1036-1036"];
m3_312 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.CreateJson()", span="943-943"];
m3_599 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="JsonObject doc = new JsonObject()", span="945-945"];
m3_600 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''Name''] = ''John Sheehan''", span="947-947"];
m3_601 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''StartDate''] = new DateTime(2009, 9, 25, 0, 6, 1, DateTimeKind.Utc)", span="948-948"];
m3_602 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''Age''] = 28", span="949-949"];
m3_603 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''Percent''] = 99.9999m", span="950-950"];
m3_604 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''BigNumber''] = long.MaxValue", span="951-951"];
m3_605 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''IsCool''] = false", span="952-952"];
m3_606 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''Ignore''] = ''dummy''", span="953-953"];
m3_607 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''ReadOnly''] = ''dummy''", span="954-954"];
m3_608 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''Url''] = ''http://example.com''", span="955-955"];
m3_609 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''UrlPath''] = ''/foo/bar''", span="956-956"];
m3_610 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''Order''] = ''third''", span="957-957"];
m3_611 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''Disposition''] = ''so_so''", span="958-958"];
m3_612 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''Guid''] = new Guid(GUID_STRING).ToString()", span="959-959"];
m3_613 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''EmptyGuid''] = ''''", span="960-960"];
m3_614 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''BestFriend''] = new JsonObject\r\n                                {\r\n                                    { ''Name'', ''The \\nFonz'' },\r\n                                    { ''Since'', 1952 }\r\n                                }", span="961-965"];
m3_620 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''Friends''] = friendsArray", span="978-978"];
m3_622 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="doc[''Foes''] = foesArray", span="986-986"];
m3_623 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="return doc.ToString();", span="988-988"];
m3_615 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="JsonArray friendsArray = new JsonArray()", span="967-967"];
m3_616 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="int i = 0", span="969-969"];
m3_618 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="friendsArray.Add(new JsonObject\r\n                                 {\r\n                                     { ''Name'', ''Friend'' + \\ni },\r\n                                     { ''Since'', DateTime.Now.Year - i }\r\n                                 })", span="971-975"];
m3_617 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="i < 10", span="969-969"];
m3_619 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="i++", span="969-969"];
m3_621 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="JsonObject foesArray = new JsonObject\r\n                                   {\r\n                                       { ''dict1'', \\nnew JsonObject { { ''nickname'', ''Foe 1'' } } },\r\n                                       { ''dict2'', new JsonObject { { ''nickname'', ''\\nFoe 2'' } } }\r\n                                   }", span="980-984"];
m3_624 [cluster="RestSharp.Tests.JsonTests.CreateJson()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.CreateJson()", span="943-943"];
m3_9 [cluster="RestSharp.RestResponse.RestResponse()", file="JsonTests.cs", label="Entry RestSharp.RestResponse.RestResponse()", span="184-184"];
m3_11 [cluster="decimal.Parse(string, System.Globalization.NumberStyles, System.IFormatProvider)", file="JsonTests.cs", label="Entry decimal.Parse(string, System.Globalization.NumberStyles, System.IFormatProvider)", span="0-0"];
m3_30 [cluster="System.IO.Path.Combine(string, string)", file="JsonTests.cs", label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m3_55 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", span="106-106"];
m3_56 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", file="JsonTests.cs", label="string content = ''{\''users\'':[\''johnsheehan\'',\''jagregory\'',\''drusellers\'',\''structuremap\'']}''", span="108-108"];
m3_57 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", file="JsonTests.cs", label="JsonDeserializer json = new JsonDeserializer { RootElement = ''users'' }", span="109-109"];
m3_58 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", file="JsonTests.cs", label="List<string> output = json.Deserialize<List<string>>(new RestResponse { Content = content })", span="110-110"];
m3_59 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", file="JsonTests.cs", label="Assert.IsNotEmpty(output)", span="112-112"];
m3_60 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types()", span="106-106"];
m3_454 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Null()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Null()", span="679-679"];
m3_455 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Null()", file="JsonTests.cs", label="DateTimeTestStructure payload = GetPayLoad<DateTimeTestStructure>(''datetimes.txt'')", span="681-681"];
m3_456 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Null()", file="JsonTests.cs", label="Assert.Null(payload.NullableDateTimeWithNull)", span="683-683"];
m3_457 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Null()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTime_With_Null()", span="679-679"];
m3_319 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", span="488-488"];
m3_320 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", file="JsonTests.cs", label="string data = File.ReadAllText(Path.Combine(''SampleData'', ''underscore_prefix.txt''))", span="490-490"];
m3_321 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", file="JsonTests.cs", label="RestResponse response = new RestResponse { Content = data }", span="491-491"];
m3_322 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", file="JsonTests.cs", label="JsonDeserializer json = new JsonDeserializer { RootElement = ''User'' }", span="492-492"];
m3_323 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", file="JsonTests.cs", label="SoUser output = json.Deserialize<SoUser>(response)", span="493-493"];
m3_324 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", file="JsonTests.cs", label="Assert.AreEqual(''John Sheehan'', output.DisplayName)", span="495-495"];
m3_325 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", file="JsonTests.cs", label="Assert.AreEqual(1786, output.Id)", span="496-496"];
m3_326 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Underscore_Prefix()", span="488-488"];
m3_380 [cluster="RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", span="570-570"];
m3_381 [cluster="RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", file="JsonTests.cs", label="string doc = CreateJson()", span="572-572"];
m3_382 [cluster="RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", file="JsonTests.cs", label="JsonDeserializer d = new JsonDeserializer()", span="573-573"];
m3_383 [cluster="RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", file="JsonTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="574-574"];
m3_384 [cluster="RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", file="JsonTests.cs", label="PersonForJson p = d.Deserialize<PersonForJson>(response)", span="575-575"];
m3_385 [cluster="RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", file="JsonTests.cs", label="Assert.Null(p.IgnoreProxy)", span="577-577"];
m3_386 [cluster="RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Ignore_Protected_Property_That_Exists_In_Data()", span="570-570"];
m3_143 [cluster="System.DateTime.ToString(string)", file="JsonTests.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m3_161 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", span="265-265"];
m3_162 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", file="JsonTests.cs", label="string doc = CreateJsonWithNullValues()", span="267-267"];
m3_163 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", file="JsonTests.cs", label="JsonDeserializer json = new JsonDeserializer()", span="268-268"];
m3_164 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", file="JsonTests.cs", label="NullableValues output = json.Deserialize<NullableValues>(new RestResponse { Content = doc })", span="269-269"];
m3_165 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Assert.Null(output.Id)", span="271-271"];
m3_166 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Assert.Null(output.StartDate)", span="272-272"];
m3_167 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Assert.Null(output.UniqueId)", span="273-273"];
m3_168 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Null_Elements_to_Nullable_Values()", span="265-265"];
m3_458 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTimeOffset()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_DateTimeOffset()", span="687-687"];
m3_459 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTimeOffset()", file="JsonTests.cs", label="DateTimeTestStructure payload = GetPayLoad<DateTimeTestStructure>(''datetimes.txt'')", span="689-689"];
m3_460 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTimeOffset()", file="JsonTests.cs", label="Assert.AreEqual(\r\n                new DateTime(2011, 6, 30, 8, 15, 46, 929, DateTimeKind.Utc).ToString(''yyyy-MM-dd HH:mm:ss.fff''),\r\n                \\npayload.DateTimeOffset.ToString(''yyyy-MM-dd HH:mm:ss.fff''))", span="691-693"];
m3_461 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTimeOffset()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_DateTimeOffset()", span="687-687"];
m3_394 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", span="592-592"];
m3_395 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file="JsonTests.cs", label="TimeSpanTestStructure payload = GetPayLoad<TimeSpanTestStructure>(''timespans.txt'')", span="594-594"];
m3_396 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file="JsonTests.cs", label="Assert.AreEqual(new TimeSpan(468006), payload.Tick)", span="596-596"];
m3_397 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file="JsonTests.cs", label="Assert.AreEqual(new TimeSpan(0, 0, 0, 0, 125), payload.Millisecond)", span="597-597"];
m3_398 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file="JsonTests.cs", label="Assert.AreEqual(new TimeSpan(0, 0, 8), payload.Second)", span="598-598"];
m3_399 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file="JsonTests.cs", label="Assert.AreEqual(new TimeSpan(0, 55, 2), payload.Minute)", span="599-599"];
m3_400 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file="JsonTests.cs", label="Assert.AreEqual(new TimeSpan(21, 30, 7), payload.Hour)", span="600-600"];
m3_401 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file="JsonTests.cs", label="Assert.Null(payload.NullableWithoutValue)", span="601-601"];
m3_402 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file="JsonTests.cs", label="Assert.NotNull(payload.NullableWithValue)", span="602-602"];
m3_403 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file="JsonTests.cs", label="Assert.AreEqual(new TimeSpan(21, 30, 7), payload.NullableWithValue.Value)", span="603-603"];
m3_404 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file="JsonTests.cs", label="Assert.AreEqual(new TimeSpan(0, 0, 10), payload.IsoSecond)", span="604-604"];
m3_405 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file="JsonTests.cs", label="Assert.AreEqual(new TimeSpan(0, 3, 23), payload.IsoMinute)", span="605-605"];
m3_406 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file="JsonTests.cs", label="Assert.AreEqual(new TimeSpan(5, 4, 9), payload.IsoHour)", span="606-606"];
m3_407 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file="JsonTests.cs", label="Assert.AreEqual(new TimeSpan(1, 19, 27, 13), payload.IsoDay)", span="607-607"];
m3_408 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file="JsonTests.cs", label="Assert.AreEqual(new TimeSpan(64, 3, 14, 19), payload.IsoMonth)", span="609-609"];
m3_409 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file="JsonTests.cs", label="Assert.AreEqual(new TimeSpan(365, 9, 27, 48), payload.IsoYear)", span="611-611"];
m3_410 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_TimeSpan()", span="592-592"];
m3_227 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", span="360-360"];
m3_228 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file="JsonTests.cs", label="string data = File.ReadAllText(Path.Combine(''SampleData'', ''jsonenums.txt''))", span="362-362"];
m3_229 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file="JsonTests.cs", label="RestResponse response = new RestResponse { Content = data }", span="363-363"];
m3_230 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file="JsonTests.cs", label="JsonDeserializer json = new JsonDeserializer()", span="364-364"];
m3_231 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file="JsonTests.cs", label="JsonEnumsTestStructure output = json.Deserialize<JsonEnumsTestStructure>(response)", span="365-365"];
m3_232 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file="JsonTests.cs", label="Assert.AreEqual(Disposition.Friendly, output.Upper)", span="367-367"];
m3_233 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file="JsonTests.cs", label="Assert.AreEqual(Disposition.Friendly, output.Lower)", span="368-368"];
m3_234 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file="JsonTests.cs", label="Assert.AreEqual(Disposition.SoSo, output.CamelCased)", span="369-369"];
m3_235 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file="JsonTests.cs", label="Assert.AreEqual(Disposition.SoSo, output.Underscores)", span="370-370"];
m3_236 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file="JsonTests.cs", label="Assert.AreEqual(Disposition.SoSo, output.LowerUnderscores)", span="371-371"];
m3_237 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file="JsonTests.cs", label="Assert.AreEqual(Disposition.SoSo, output.Dashes)", span="372-372"];
m3_238 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file="JsonTests.cs", label="Assert.AreEqual(Disposition.SoSo, output.LowerDashes)", span="373-373"];
m3_239 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file="JsonTests.cs", label="Assert.AreEqual(Disposition.SoSo, output.Integer)", span="374-374"];
m3_240 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Values()", span="360-360"];
m3_625 [cluster="System.Guid.ToString()", file="JsonTests.cs", label="Entry System.Guid.ToString()", span="0-0"];
m3_212 [cluster="RestSharp.Tests.SimpleJson.SerializeObject(object)", file="JsonTests.cs", label="Entry RestSharp.Tests.SimpleJson.SerializeObject(object)", span="610-610"];
m3_467 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeZulu()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeZulu()", span="707-707"];
m3_468 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeZulu()", file="JsonTests.cs", label="Iso8601DateTimeTestStructure payload = GetPayLoad<Iso8601DateTimeTestStructure>(''iso8601datetimes.txt'')", span="709-709"];
m3_469 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeZulu()", file="JsonTests.cs", label="Assert.AreEqual(\r\n                new DateTime(2012, 7, 19, 10, 23, 25, 544, DateTimeKind.Utc),\r\n                payload.DateTimeUtc.ToUniversalTime())", span="711-713"];
m3_470 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeZulu()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeZulu()", span="707-707"];
m3_10 [cluster="RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file="JsonTests.cs", label="Entry RestSharp.Deserializers.JsonDeserializer.Deserialize<T>(RestSharp.IRestResponse)", span="27-27"];
m3_444 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, int, System.DateTimeKind)", file="JsonTests.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m3_99 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", span="173-173"];
m3_100 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", file="JsonTests.cs", label="string doc = File.ReadAllText(Path.Combine(''SampleData'', ''jsondictionary_KeysType.txt''))", span="175-175"];
m3_101 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", file="JsonTests.cs", label="JsonDeserializer json = new JsonDeserializer()", span="176-176"];
m3_102 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", file="JsonTests.cs", label="Dictionary<int, object> output =\r\n                json.Deserialize<Dictionary<int, object>>(new RestResponse { Content = doc })", span="177-178"];
m3_103 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", file="JsonTests.cs", label="Assert.AreEqual(output.Keys.Count, 2)", span="180-180"];
m3_104 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", file="JsonTests.cs", label="object firstKeysVal = output.FirstOrDefault().Value", span="182-182"];
m3_105 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", file="JsonTests.cs", label="Assert.IsInstanceOf<IDictionary>(firstKeysVal)", span="184-184"];
m3_106 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_Int_Object()", span="173-173"];
m3_23 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Select_Tokens()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Select_Tokens()", span="63-63"];
m3_24 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Select_Tokens()", file="JsonTests.cs", label="string data = File.ReadAllText(Path.Combine(''SampleData'', ''jsonarray.txt''))", span="65-65"];
m3_25 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Select_Tokens()", file="JsonTests.cs", label="RestResponse response = new RestResponse { Content = data }", span="66-66"];
m3_26 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Select_Tokens()", file="JsonTests.cs", label="JsonDeserializer json = new JsonDeserializer()", span="67-67"];
m3_27 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Select_Tokens()", file="JsonTests.cs", label="StatusComplexList output = json.Deserialize<StatusComplexList>(response)", span="68-68"];
m3_28 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Select_Tokens()", file="JsonTests.cs", label="Assert.AreEqual(4, output.Count)", span="70-70"];
m3_29 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Select_Tokens()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Select_Tokens()", span="63-63"];
m3_514 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Object_Type_Property_With_Primitive_Vale()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Object_Type_Property_With_Primitive_Vale()", span="785-785"];
m3_515 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Object_Type_Property_With_Primitive_Vale()", file="JsonTests.cs", label="ObjectProperties payload = GetPayLoad<ObjectProperties>(''objectproperty.txt'')", span="787-787"];
m3_516 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Object_Type_Property_With_Primitive_Vale()", file="JsonTests.cs", label="Assert.AreEqual(42L, payload.ObjectProperty)", span="789-789"];
m3_517 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Object_Type_Property_With_Primitive_Vale()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Object_Type_Property_With_Primitive_Vale()", span="785-785"];
m3_496 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", span="760-760"];
m3_497 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", file="JsonTests.cs", label="string doc = this.CreateDynamicJsonStringDictionary()", span="762-762"];
m3_498 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", file="JsonTests.cs", label="JsonDeserializer d = new JsonDeserializer()", span="763-763"];
m3_499 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", file="JsonTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="764-764"];
m3_500 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", file="JsonTests.cs", label="Dictionary<string, string> bd = d.Deserialize<Dictionary<string, string>>(response)", span="765-765"];
m3_501 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", file="JsonTests.cs", label="Assert.AreEqual(''[\''Value1\'',\''Value2\'']'', bd[''Thing1''])", span="767-767"];
m3_502 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", file="JsonTests.cs", label="Assert.AreEqual(''Thing2'', bd[''Thing2''])", span="768-768"];
m3_503 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", file="JsonTests.cs", label="Assert.AreEqual(''{\''Name\'':\''ThingRed\'',\''Color\'':\''Red\''}'', bd[''ThingRed''])", span="769-769"];
m3_504 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", file="JsonTests.cs", label="Assert.AreEqual(''{\''Name\'':\''ThingBlue\'',\''Color\'':\''Blue\''}'', bd[''ThingBlue''])", span="770-770"];
m3_505 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String_With_Dynamic_Values()", span="760-760"];
m3_416 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", span="615-615"];
m3_417 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", file="JsonTests.cs", label="string doc = CreateIsoDateJson()", span="617-617"];
m3_418 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", file="JsonTests.cs", label="JsonDeserializer d = new JsonDeserializer()", span="618-618"];
m3_419 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", file="JsonTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="619-619"];
m3_420 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", file="JsonTests.cs", label="Birthdate bd = d.Deserialize<Birthdate>(response)", span="620-620"];
m3_421 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", file="JsonTests.cs", label="Assert.AreEqual(new DateTime(1910, 9, 25, 9, 30, 25, DateTimeKind.Utc), bd.Value)", span="622-622"];
m3_422 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Iso_Json_Dates()", span="615-615"];
m3_462 [cluster="System.DateTimeOffset.ToString(string)", file="JsonTests.cs", label="Entry System.DateTimeOffset.ToString(string)", span="0-0"];
m3_375 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.CreateJsonWithDashes()", span="871-871"];
m3_565 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="JsonObject doc = new JsonObject()", span="873-873"];
m3_566 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="doc[''name''] = ''John Sheehan''", span="875-875"];
m3_567 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="doc[''start-date''] = new DateTime(2009, 9, 25, 0, 6, 1, DateTimeKind.Utc)", span="876-876"];
m3_568 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="doc[''age''] = 28", span="877-877"];
m3_569 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="doc[''percent''] = 99.9999m", span="878-878"];
m3_570 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="doc[''big-number''] = long.MaxValue", span="879-879"];
m3_571 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="doc[''is-cool''] = false", span="880-880"];
m3_572 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="doc[''ignore''] = ''dummy''", span="881-881"];
m3_573 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="doc[''read-only''] = ''dummy''", span="882-882"];
m3_574 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="doc[''url''] = ''http://example.com''", span="883-883"];
m3_575 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="doc[''url-path''] = ''/foo/bar''", span="884-884"];
m3_576 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="doc[''best-friend''] = new JsonObject\r\n                                 {\r\n                                     { ''name'', ''\\nThe Fonz'' },\r\n                                     { ''since'', 1952 }\r\n                                 }", span="885-889"];
m3_582 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="doc[''friends''] = friendsArray", span="902-902"];
m3_584 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="doc[''foes''] = foesArray", span="910-910"];
m3_585 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="return doc.ToString();", span="912-912"];
m3_577 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="JsonArray friendsArray = new JsonArray()", span="891-891"];
m3_578 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="int i = 0", span="893-893"];
m3_580 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="friendsArray.Add(new JsonObject\r\n                                 {\r\n                                     { ''name'', ''Friend'' + \\ni },\r\n                                     { ''since'', DateTime.Now.Year - i }\r\n                                 })", span="895-899"];
m3_579 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="i < 10", span="893-893"];
m3_581 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="i++", span="893-893"];
m3_583 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="JsonObject foesArray = new JsonObject\r\n                                   {\r\n                                       { ''dict1'', \\nnew JsonObject { { ''nickname'', ''Foe 1'' } } },\r\n                                       { ''dict2'', new JsonObject { { ''nickname'', ''\\nFoe 2'' } } }\r\n                                   }", span="904-908"];
m3_586 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithDashes()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.CreateJsonWithDashes()", span="871-871"];
m3_286 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", span="449-449"];
m3_287 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="string doc = CreateJson()", span="451-451"];
m3_288 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="JsonDeserializer d = new JsonDeserializer()", span="452-452"];
m3_289 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="453-453"];
m3_290 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="PersonForJson p = d.Deserialize<PersonForJson>(response)", span="454-454"];
m3_291 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(''John Sheehan'', p.Name)", span="456-456"];
m3_292 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(new DateTime(2009, 9, 25, 0, 6, 1, DateTimeKind.Utc), p.StartDate)", span="457-457"];
m3_293 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(28, p.Age)", span="458-458"];
m3_294 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(long.MaxValue, p.BigNumber)", span="459-459"];
m3_295 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(99.9999m, p.Percent)", span="460-460"];
m3_296 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(false, p.IsCool)", span="461-461"];
m3_297 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="462-462"];
m3_298 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="463-463"];
m3_299 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(Guid.Empty, p.EmptyGuid)", span="464-464"];
m3_300 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(new Guid(GUID_STRING), p.Guid)", span="465-465"];
m3_301 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(Order.Third, p.Order)", span="466-466"];
m3_302 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(Disposition.SoSo, p.Disposition)", span="467-467"];
m3_303 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.NotNull(p.Friends)", span="468-468"];
m3_304 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(10, p.Friends.Count)", span="469-469"];
m3_305 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.NotNull(p.BestFriend)", span="470-470"];
m3_306 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(''The Fonz'', p.BestFriend.Name)", span="471-471"];
m3_307 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(1952, p.BestFriend.Since)", span="472-472"];
m3_308 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.IsNotEmpty(p.Foes)", span="473-473"];
m3_309 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(''Foe 1'', p.Foes[''dict1''].Nickname)", span="474-474"];
m3_310 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(''Foe 2'', p.Foes[''dict2''].Nickname)", span="475-475"];
m3_311 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root()", span="449-449"];
m3_179 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithEmptyValues()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.CreateJsonWithEmptyValues()", span="1002-1002"];
m3_632 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithEmptyValues()", file="JsonTests.cs", label="JsonObject doc = new JsonObject()", span="1004-1004"];
m3_633 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithEmptyValues()", file="JsonTests.cs", label="doc[''Id''] = ''''", span="1006-1006"];
m3_634 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithEmptyValues()", file="JsonTests.cs", label="doc[''StartDate''] = ''''", span="1007-1007"];
m3_635 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithEmptyValues()", file="JsonTests.cs", label="doc[''UniqueId''] = ''''", span="1008-1008"];
m3_636 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithEmptyValues()", file="JsonTests.cs", label="return doc.ToString();", span="1010-1010"];
m3_637 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithEmptyValues()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.CreateJsonWithEmptyValues()", span="1002-1002"];
m3_200 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", span="319-319"];
m3_201 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file="JsonTests.cs", label="CultureInfo culture = CultureInfo.InvariantCulture", span="321-321"];
m3_202 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file="JsonTests.cs", label="string format = ''dd yyyy MMM, hh:mm ss tt''", span="322-322"];
m3_204 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file="JsonTests.cs", label="var formatted = new { StartDate = date.ToString(format, culture) }", span="324-324"];
m3_207 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file="JsonTests.cs", label="JsonDeserializer json = new JsonDeserializer\r\n                                    {\r\n                                        \\nDateFormat = format,\r\n                                        Culture = culture\r\n                                    }", span="327-331"];
m3_203 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file="JsonTests.cs", label="DateTime date = new DateTime(2010, 2, 8, 11, 11, 11)", span="323-323"];
m3_209 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file="JsonTests.cs", label="Assert.AreEqual(date, output.StartDate)", span="334-334"];
m3_205 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file="JsonTests.cs", label="string data = SimpleJson.SerializeObject(formatted)", span="325-325"];
m3_206 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file="JsonTests.cs", label="RestResponse response = new RestResponse { Content = data }", span="326-326"];
m3_208 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file="JsonTests.cs", label="PersonForJson output = json.Deserialize<PersonForJson>(response)", span="332-332"];
m3_210 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Custom_Formatted_Date()", span="319-319"];
m3_0 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", span="38-38"];
m3_1 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", file="JsonTests.cs", label="string content = ''{ \''Value\'': 4.8e-04 }''", span="40-40"];
m3_2 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", file="JsonTests.cs", label="JsonDeserializer json = new JsonDeserializer()", span="41-41"];
m3_3 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", file="JsonTests.cs", label="DecimalNumber output = json.Deserialize<DecimalNumber>(new RestResponse { Content = content })", span="42-42"];
m3_4 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", file="JsonTests.cs", label="decimal expected = decimal.Parse(''4.8e-04'', NumberStyles.Float, CultureInfo.InvariantCulture)", span="43-43"];
m3_5 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", file="JsonTests.cs", label="Assert.NotNull(output)", span="45-45"];
m3_6 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", file="JsonTests.cs", label="Assert.AreEqual(expected, output.Value)", span="46-46"];
m3_7 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Exponential_Notation()", span="38-38"];
m3_61 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", span="116-116"];
m3_62 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", file="JsonTests.cs", label="string content = ''{\''users\'':[\''johnsheehan\'',\''jagregory\'',null,\''drusellers\'',\''structuremap\'']}''", span="118-118"];
m3_63 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", file="JsonTests.cs", label="JsonDeserializer json = new JsonDeserializer { RootElement = ''users'' }", span="119-119"];
m3_64 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", file="JsonTests.cs", label="List<string> output = json.Deserialize<List<string>>(new RestResponse { Content = content })", span="120-120"];
m3_65 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", file="JsonTests.cs", label="Assert.IsNotEmpty(output)", span="122-122"];
m3_66 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", file="JsonTests.cs", label="Assert.AreEqual(null, output[2])", span="123-123"];
m3_67 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", file="JsonTests.cs", label="Assert.AreEqual(5, output.Count)", span="124-124"];
m3_68 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_of_Simple_Types_With_Nulls()", span="116-116"];
m3_126 [cluster="RestSharp.Tests.JsonObject.JsonObject()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonObject.JsonObject()", span="134-134"];
m3_241 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", span="378-378"];
m3_242 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file="JsonTests.cs", label="string data = File.ReadAllText(Path.Combine(''SampleData'', ''jsonenumtypes.txt''))", span="380-380"];
m3_243 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file="JsonTests.cs", label="RestResponse response = new RestResponse { Content = data }", span="381-381"];
m3_244 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file="JsonTests.cs", label="JsonDeserializer json = new JsonDeserializer()", span="382-382"];
m3_245 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file="JsonTests.cs", label="JsonEnumTypesTestStructure output = json.Deserialize<JsonEnumTypesTestStructure>(response)", span="383-383"];
m3_246 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file="JsonTests.cs", label="Assert.AreEqual(ByteEnum.EnumMin, output.ByteEnumType)", span="385-385"];
m3_247 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file="JsonTests.cs", label="Assert.AreEqual(SByteEnum.EnumMin, output.SByteEnumType)", span="386-386"];
m3_248 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file="JsonTests.cs", label="Assert.AreEqual(ShortEnum.EnumMin, output.ShortEnumType)", span="387-387"];
m3_249 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file="JsonTests.cs", label="Assert.AreEqual(UShortEnum.EnumMin, output.UShortEnumType)", span="388-388"];
m3_250 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file="JsonTests.cs", label="Assert.AreEqual(IntEnum.EnumMin, output.IntEnumType)", span="389-389"];
m3_251 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file="JsonTests.cs", label="Assert.AreEqual(UIntEnum.EnumMin, output.UIntEnumType)", span="390-390"];
m3_252 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file="JsonTests.cs", label="Assert.AreEqual(LongEnum.EnumMin, output.LongEnumType)", span="391-391"];
m3_253 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file="JsonTests.cs", label="Assert.AreEqual(ULongEnum.EnumMin, output.ULongEnumType)", span="392-392"];
m3_254 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Various_Enum_Types()", span="378-378"];
m3_128 [cluster="RestSharp.Tests.JsonObject.ToString()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonObject.ToString()", span="342-342"];
m3_314 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root_Alternative_Culture()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root_Alternative_Culture()", span="479-479"];
m3_315 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root_Alternative_Culture()", file="JsonTests.cs", label="new CultureChange(ALTERNATIVE_CULTURE)", span="481-481"];
m3_316 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root_Alternative_Culture()", file="JsonTests.cs", label="this.Can_Deserialize_With_Default_Root()", span="483-483"];
m3_317 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root_Alternative_Culture()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_With_Default_Root_Alternative_Culture()", span="479-479"];
m3_129 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", span="217-217"];
m3_130 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file="JsonTests.cs", label="DateTime item1 = new DateTime(2010, 2, 8, 11, 11, 11)", span="219-219"];
m3_131 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file="JsonTests.cs", label="DateTime item2 = item1.AddSeconds(12345)", span="220-220"];
m3_133 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file="JsonTests.cs", label="data[''Items''] = new JsonArray\r\n                            {\r\n                                item1.ToString(''u''),\r\n                                \\nitem2.ToString(''u'')\r\n                            }", span="223-227"];
m3_138 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file="JsonTests.cs", label="Assert.AreEqual(item1, p.Items[0])", span="234-234"];
m3_132 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file="JsonTests.cs", label="JsonObject data = new JsonObject()", span="221-221"];
m3_139 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file="JsonTests.cs", label="Assert.AreEqual(item2, p.Items[1])", span="235-235"];
m3_135 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file="JsonTests.cs", label="RestResponse response = new RestResponse { Content = data.ToString() }", span="230-230"];
m3_134 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file="JsonTests.cs", label="JsonDeserializer d = new JsonDeserializer()", span="229-229"];
m3_136 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file="JsonTests.cs", label="GenericWithList<DateTime> p = d.Deserialize<GenericWithList<DateTime>>(response)", span="231-231"];
m3_137 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file="JsonTests.cs", label="Assert.AreEqual(2, p.Items.Count)", span="233-233"];
m3_140 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Generic_List_of_DateTime()", span="217-217"];
m3_69 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Item_Without_Array()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Item_Without_Array()", span="128-128"];
m3_70 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Item_Without_Array()", file="JsonTests.cs", label="string content = ''{\''users\'':\''johnsheehan\''}''", span="130-130"];
m3_71 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Item_Without_Array()", file="JsonTests.cs", label="JsonDeserializer json = new JsonDeserializer { RootElement = ''users'' }", span="131-131"];
m3_72 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Item_Without_Array()", file="JsonTests.cs", label="List<string> output = json.Deserialize<List<string>>(new RestResponse { Content = content })", span="132-132"];
m3_73 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Item_Without_Array()", file="JsonTests.cs", label="Assert.True(output.SequenceEqual(new[] { ''johnsheehan'' }))", span="134-134"];
m3_74 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Item_Without_Array()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Item_Without_Array()", span="128-128"];
m3_278 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", span="435-435"];
m3_279 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", file="JsonTests.cs", label="JsonObject doc = new JsonObject()", span="437-437"];
m3_280 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", file="JsonTests.cs", label="doc[''IsCool''] = 1", span="439-439"];
m3_282 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", file="JsonTests.cs", label="RestResponse response = new RestResponse { Content = doc.ToString() }", span="442-442"];
m3_281 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", file="JsonTests.cs", label="JsonDeserializer d = new JsonDeserializer()", span="441-441"];
m3_283 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", file="JsonTests.cs", label="PersonForJson p = d.Deserialize<PersonForJson>(response)", span="443-443"];
m3_284 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", file="JsonTests.cs", label="Assert.True(p.IsCool)", span="445-445"];
m3_285 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Int_to_Bool()", span="435-435"];
m3_83 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", span="148-148"];
m3_84 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", file="JsonTests.cs", label="string doc = File.ReadAllText(Path.Combine(''SampleData'', ''sojson.txt''))", span="150-150"];
m3_85 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", file="JsonTests.cs", label="JsonDeserializer json = new JsonDeserializer { RootElement = ''User'' }", span="151-151"];
m3_86 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", file="JsonTests.cs", label="SoUser output = json.Deserialize<SoUser>(new RestResponse { Content = doc })", span="152-152"];
m3_87 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", file="JsonTests.cs", label="Assert.AreEqual(''John Sheehan'', output.DisplayName)", span="154-154"];
m3_88 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_From_Root_Element()", span="148-148"];
m3_192 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", span="1013-1013"];
m3_638 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", file="JsonTests.cs", label="JsonObject doc = new JsonObject()", span="1015-1015"];
m3_639 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", file="JsonTests.cs", label="doc[''Id''] = 123", span="1017-1017"];
m3_640 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", file="JsonTests.cs", label="doc[''StartDate''] = new DateTime(2010, 2, 21, 9, 35, 00, DateTimeKind.Utc)", span="1018-1018"];
m3_641 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", file="JsonTests.cs", label="doc[''UniqueId''] = new Guid(GUID_STRING).ToString()", span="1019-1019"];
m3_642 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", file="JsonTests.cs", label="return doc.ToString();", span="1021-1021"];
m3_643 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.CreateJsonWithoutEmptyValues()", span="1013-1013"];
m3_423 [cluster="RestSharp.Tests.JsonTests.CreateIsoDateJson()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.CreateIsoDateJson()", span="915-915"];
m3_587 [cluster="RestSharp.Tests.JsonTests.CreateIsoDateJson()", file="JsonTests.cs", label="Birthdate bd = new Birthdate\r\n                           {\r\n                               Value = new DateTime(1910, 9, 25, \\n9, 30, 25, DateTimeKind.Utc)\r\n                           }", span="917-920"];
m3_588 [cluster="RestSharp.Tests.JsonTests.CreateIsoDateJson()", file="JsonTests.cs", label="return SimpleJson.SerializeObject(bd);", span="922-922"];
m3_589 [cluster="RestSharp.Tests.JsonTests.CreateIsoDateJson()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.CreateIsoDateJson()", span="915-915"];
m3_97 [cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="JsonTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0"];
m3_431 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateJson()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.CreateUnixDateJson()", span="925-925"];
m3_591 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateJson()", file="JsonTests.cs", label="JsonObject doc = new JsonObject()", span="927-927"];
m3_592 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateJson()", file="JsonTests.cs", label="doc[''Value''] = 1309421746", span="929-929"];
m3_593 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateJson()", file="JsonTests.cs", label="return doc.ToString();", span="931-931"];
m3_594 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateJson()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.CreateUnixDateJson()", span="925-925"];
m3_432 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Millisecond_Dates()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Millisecond_Dates()", span="637-637"];
m3_433 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Millisecond_Dates()", file="JsonTests.cs", label="string doc = CreateUnixDateMillisecondsJson()", span="639-639"];
m3_434 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Millisecond_Dates()", file="JsonTests.cs", label="JsonDeserializer d = new JsonDeserializer()", span="640-640"];
m3_435 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Millisecond_Dates()", file="JsonTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="641-641"];
m3_436 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Millisecond_Dates()", file="JsonTests.cs", label="Birthdate bd = d.Deserialize<Birthdate>(response)", span="642-642"];
m3_437 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Millisecond_Dates()", file="JsonTests.cs", label="Assert.AreEqual(new DateTime(2011, 6, 30, 8, 15, 46, DateTimeKind.Utc), bd.Value)", span="644-644"];
m3_438 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Millisecond_Dates()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Millisecond_Dates()", span="637-637"];
m3_476 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", span="727-727"];
m3_477 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", file="JsonTests.cs", label="DateTimeTestStructure payload = GetPayLoad<DateTimeTestStructure>(''datetimes.txt'')", span="729-729"];
m3_478 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", file="JsonTests.cs", label="Assert.NotNull(payload.NullableDateTimeOffsetWithValue)", span="731-731"];
m3_479 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", file="JsonTests.cs", label="Assert.AreEqual(\r\n                new DateTime(2011, 6, 30, 8, 15, 46, 929, DateTimeKind.Utc).ToString(''yyyy-MM-dd HH:mm:ss.fff''),\r\n                \\npayload.NullableDateTimeOffsetWithValue.Value.ToString(''yyyy-MM-dd HH:mm:ss.fff''))", span="732-734"];
m3_480 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Value()", span="727-727"];
m3_213 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", span="338-338"];
m3_214 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", file="JsonTests.cs", label="string data = File.ReadAllText(Path.Combine(''SampleData'', ''jsonarray.txt''))", span="340-340"];
m3_215 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", file="JsonTests.cs", label="RestResponse response = new RestResponse { Content = data }", span="341-341"];
m3_216 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", file="JsonTests.cs", label="JsonDeserializer json = new JsonDeserializer()", span="342-342"];
m3_217 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", file="JsonTests.cs", label="List<status> output = json.Deserialize<List<status>>(response)", span="343-343"];
m3_218 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", file="JsonTests.cs", label="Assert.AreEqual(4, output.Count)", span="345-345"];
m3_219 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_List()", span="338-338"];
m3_180 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", span="289-289"];
m3_181 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file="JsonTests.cs", label="string doc = CreateJsonWithoutEmptyValues()", span="291-291"];
m3_182 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file="JsonTests.cs", label="JsonDeserializer json = new JsonDeserializer()", span="292-292"];
m3_183 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file="JsonTests.cs", label="NullableValues output = json.Deserialize<NullableValues>(new RestResponse { Content = doc })", span="293-293"];
m3_184 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Assert.NotNull(output.Id)", span="295-295"];
m3_185 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Assert.NotNull(output.StartDate)", span="296-296"];
m3_186 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Assert.NotNull(output.UniqueId)", span="297-297"];
m3_187 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Assert.AreEqual(123, output.Id)", span="299-299"];
m3_188 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Assert.NotNull(output.StartDate)", span="300-300"];
m3_189 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Assert.AreEqual(\r\n                new DateTime(2010, 2, 21, 9, 35, 00, DateTimeKind.Utc),\r\n                output.StartDate.Value)", span="301-303"];
m3_190 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Assert.AreEqual(new Guid(GUID_STRING), output.UniqueId)", span="304-304"];
m3_191 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Elements_to_Nullable_Values()", span="289-289"];
m3_472 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeWithOffset()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeWithOffset()", span="717-717"];
m3_473 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeWithOffset()", file="JsonTests.cs", label="Iso8601DateTimeTestStructure payload = GetPayLoad<Iso8601DateTimeTestStructure>(''iso8601datetimes.txt'')", span="719-719"];
m3_474 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeWithOffset()", file="JsonTests.cs", label="Assert.AreEqual(\r\n                new DateTime(2012, 7, 19, 10, 23, 25, 544, DateTimeKind.Utc),\r\n                payload.DateTimeWithOffset.ToUniversalTime())", span="721-723"];
m3_475 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeWithOffset()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Iso8601DateTimeWithOffset()", span="717-717"];
m3_424 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", span="626-626"];
m3_425 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", file="JsonTests.cs", label="string doc = CreateUnixDateJson()", span="628-628"];
m3_426 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", file="JsonTests.cs", label="JsonDeserializer d = new JsonDeserializer()", span="629-629"];
m3_427 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", file="JsonTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="630-630"];
m3_428 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", file="JsonTests.cs", label="Birthdate bd = d.Deserialize<Birthdate>(response)", span="631-631"];
m3_429 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", file="JsonTests.cs", label="Assert.AreEqual(new DateTime(2011, 6, 30, 8, 15, 46, DateTimeKind.Utc), bd.Value)", span="633-633"];
m3_430 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Unix_Json_Dates()", span="626-626"];
m3_77 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Toplevel_Item_Without_Array()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Toplevel_Item_Without_Array()", span="138-138"];
m3_78 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Toplevel_Item_Without_Array()", file="JsonTests.cs", label="string content = ''\''johnsheehan\''''", span="140-140"];
m3_79 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Toplevel_Item_Without_Array()", file="JsonTests.cs", label="JsonDeserializer json = new JsonDeserializer()", span="141-141"];
m3_80 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Toplevel_Item_Without_Array()", file="JsonTests.cs", label="List<string> output = json.Deserialize<List<string>>(new RestResponse { Content = content })", span="142-142"];
m3_81 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Toplevel_Item_Without_Array()", file="JsonTests.cs", label="Assert.True(output.SequenceEqual(new[] { ''johnsheehan'' }))", span="144-144"];
m3_82 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Toplevel_Item_Without_Array()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Simple_Generic_List_Given_Toplevel_Item_Without_Array()", span="138-138"];
m3_590 [cluster="RestSharp.Tests.SampleClasses.Birthdate.Birthdate()", file="JsonTests.cs", label="Entry RestSharp.Tests.SampleClasses.Birthdate.Birthdate()", span="171-171"];
m3_387 [cluster="RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", span="581-581"];
m3_388 [cluster="RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="JsonTests.cs", label="string doc = CreateJson()", span="583-583"];
m3_389 [cluster="RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="JsonTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="584-584"];
m3_390 [cluster="RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="JsonTests.cs", label="JsonDeserializer d = new JsonDeserializer()", span="585-585"];
m3_391 [cluster="RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="JsonTests.cs", label="PersonForJson p = d.Deserialize<PersonForJson>(response)", span="586-586"];
m3_392 [cluster="RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="JsonTests.cs", label="Assert.Null(p.ReadOnlyProxy)", span="588-588"];
m3_393 [cluster="RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", span="581-581"];
m3_169 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", span="991-991"];
m3_626 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", file="JsonTests.cs", label="JsonObject doc = new JsonObject()", span="993-993"];
m3_627 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", file="JsonTests.cs", label="doc[''Id''] = null", span="995-995"];
m3_628 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", file="JsonTests.cs", label="doc[''StartDate''] = null", span="996-996"];
m3_629 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", file="JsonTests.cs", label="doc[''UniqueId''] = null", span="997-997"];
m3_630 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", file="JsonTests.cs", label="return doc.ToString();", span="999-999"];
m3_631 [cluster="RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.CreateJsonWithNullValues()", span="991-991"];
m3_220 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_Inherited_List()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_Inherited_List()", span="349-349"];
m3_221 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_Inherited_List()", file="JsonTests.cs", label="string data = File.ReadAllText(Path.Combine(''SampleData'', ''jsonarray.txt''))", span="351-351"];
m3_222 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_Inherited_List()", file="JsonTests.cs", label="RestResponse response = new RestResponse { Content = data }", span="352-352"];
m3_223 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_Inherited_List()", file="JsonTests.cs", label="JsonDeserializer json = new JsonDeserializer()", span="353-353"];
m3_224 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_Inherited_List()", file="JsonTests.cs", label="StatusList output = json.Deserialize<StatusList>(response)", span="354-354"];
m3_225 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_Inherited_List()", file="JsonTests.cs", label="Assert.AreEqual(4, output.Count)", span="356-356"];
m3_226 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_Inherited_List()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Root_Json_Array_To_Inherited_List()", span="349-349"];
m3_125 [cluster="System.Guid.Guid(string)", file="JsonTests.cs", label="Entry System.Guid.Guid(string)", span="0-0"];
m3_518 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", span="793-793"];
m3_519 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", file="JsonTests.cs", label="string doc = File.ReadAllText(Path.Combine(''SampleData'', ''jsondictionary.txt''))", span="795-795"];
m3_520 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", file="JsonTests.cs", label="JsonDeserializer json = new JsonDeserializer { RootElement = ''response'' }", span="796-796"];
m3_521 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", file="JsonTests.cs", label="EmployeeTracker output = json.Deserialize<EmployeeTracker>(new RestResponse { Content = doc })", span="797-797"];
m3_522 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", file="JsonTests.cs", label="Assert.IsNotEmpty(output.EmployeesMail)", span="799-799"];
m3_523 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", file="JsonTests.cs", label="Assert.IsNotEmpty(output.EmployeesTime)", span="800-800"];
m3_524 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", file="JsonTests.cs", label="Assert.IsNotEmpty(output.EmployeesPay)", span="801-801"];
m3_525 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_of_Lists()", span="793-793"];
m3_211 [cluster="System.DateTime.ToString(string, System.IFormatProvider)", file="JsonTests.cs", label="Entry System.DateTime.ToString(string, System.IFormatProvider)", span="0-0"];
m3_159 [cluster="System.DateTime.ToString()", file="JsonTests.cs", label="Entry System.DateTime.ToString()", span="0-0"];
m3_564 [cluster="System.Collections.Generic.List<T>.Add(T)", file="JsonTests.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m3_127 [cluster="RestSharp.Tests.JsonArray.JsonArray()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonArray.JsonArray()", span="91-91"];
m3_507 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Decimal_With_Four_Zeros_After_Floating_Point()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Decimal_With_Four_Zeros_After_Floating_Point()", span="774-774"];
m3_508 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Decimal_With_Four_Zeros_After_Floating_Point()", file="JsonTests.cs", label="string json = ''{\''Value\'':0.00005557}''", span="776-776"];
m3_509 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Decimal_With_Four_Zeros_After_Floating_Point()", file="JsonTests.cs", label="RestResponse response = new RestResponse { Content = json }", span="777-777"];
m3_510 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Decimal_With_Four_Zeros_After_Floating_Point()", file="JsonTests.cs", label="JsonDeserializer d = new JsonDeserializer()", span="778-778"];
m3_511 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Decimal_With_Four_Zeros_After_Floating_Point()", file="JsonTests.cs", label="DecimalNumber result = d.Deserialize<DecimalNumber>(response)", span="779-779"];
m3_512 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Decimal_With_Four_Zeros_After_Floating_Point()", file="JsonTests.cs", label="Assert.AreEqual(result.Value, .00005557m)", span="781-781"];
m3_513 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Decimal_With_Four_Zeros_After_Floating_Point()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Decimal_With_Four_Zeros_After_Floating_Point()", span="774-774"];
m3_439 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateMillisecondsJson()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.CreateUnixDateMillisecondsJson()", span="934-934"];
m3_595 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateMillisecondsJson()", file="JsonTests.cs", label="JsonObject doc = new JsonObject()", span="936-936"];
m3_596 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateMillisecondsJson()", file="JsonTests.cs", label="doc[''Value''] = 1309421746000", span="938-938"];
m3_597 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateMillisecondsJson()", file="JsonTests.cs", label="return doc.ToString();", span="940-940"];
m3_598 [cluster="RestSharp.Tests.JsonTests.CreateUnixDateMillisecondsJson()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.CreateUnixDateMillisecondsJson()", span="934-934"];
m3_32 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", span="74-74"];
m3_33 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", file="JsonTests.cs", label="string doc = File.ReadAllText(Path.Combine(''SampleData'', ''4sq.txt''))", span="76-76"];
m3_34 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", file="JsonTests.cs", label="JsonDeserializer json = new JsonDeserializer { RootElement = ''response'' }", span="77-77"];
m3_35 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", file="JsonTests.cs", label="VenuesResponse output = json.Deserialize<VenuesResponse>(new RestResponse { Content = doc })", span="78-78"];
m3_36 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", file="JsonTests.cs", label="Assert.IsNotEmpty(output.Groups)", span="80-80"];
m3_37 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_4sq_Json_With_Root_Element_Specified()", span="74-74"];
m3_354 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", span="535-535"];
m3_355 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="string doc = CreateJsonWithDashes()", span="537-537"];
m3_356 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="JsonDeserializer d = new JsonDeserializer()", span="538-538"];
m3_357 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="539-539"];
m3_358 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="PersonForJson p = d.Deserialize<PersonForJson>(response)", span="540-540"];
m3_359 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(''John Sheehan'', p.Name)", span="542-542"];
m3_360 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(28, p.Age)", span="544-544"];
m3_361 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(long.MaxValue, p.BigNumber)", span="545-545"];
m3_362 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(99.9999m, p.Percent)", span="546-546"];
m3_363 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(false, p.IsCool)", span="547-547"];
m3_364 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="548-548"];
m3_365 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="549-549"];
m3_366 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.NotNull(p.Friends)", span="550-550"];
m3_367 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(10, p.Friends.Count)", span="551-551"];
m3_368 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.NotNull(p.BestFriend)", span="552-552"];
m3_369 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(''The Fonz'', p.BestFriend.Name)", span="553-553"];
m3_370 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(1952, p.BestFriend.Since)", span="554-554"];
m3_371 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.IsNotEmpty(p.Foes)", span="555-555"];
m3_372 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(''Foe 1'', p.Foes[''dict1''].Nickname)", span="556-556"];
m3_373 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Assert.AreEqual(''Foe 2'', p.Foes[''dict2''].Nickname)", span="557-557"];
m3_374 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Names_With_Dashes_With_Default_Root()", span="535-535"];
m3_411 [cluster="RestSharp.Tests.JsonTests.GetPayLoad<T>(string)", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.GetPayLoad<T>(string)", span="1060-1060"];
m3_658 [cluster="RestSharp.Tests.JsonTests.GetPayLoad<T>(string)", file="JsonTests.cs", label="string doc = File.ReadAllText(Path.Combine(''SampleData'', fileName))", span="1062-1062"];
m3_659 [cluster="RestSharp.Tests.JsonTests.GetPayLoad<T>(string)", file="JsonTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="1063-1063"];
m3_660 [cluster="RestSharp.Tests.JsonTests.GetPayLoad<T>(string)", file="JsonTests.cs", label="JsonDeserializer d = new JsonDeserializer()", span="1064-1064"];
m3_661 [cluster="RestSharp.Tests.JsonTests.GetPayLoad<T>(string)", file="JsonTests.cs", label="return d.Deserialize<T>(response);", span="1066-1066"];
m3_662 [cluster="RestSharp.Tests.JsonTests.GetPayLoad<T>(string)", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.GetPayLoad<T>(string)", span="1060-1060"];
m3_526 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Plain_Values()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Plain_Values()", span="805-805"];
m3_527 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Plain_Values()", file="JsonTests.cs", label="string json = ''\''c02bdd1e-cce3-4b9c-8473-165e6e93b92a\''''", span="807-807"];
m3_528 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Plain_Values()", file="JsonTests.cs", label="RestResponse response = new RestResponse { Content = json }", span="808-808"];
m3_529 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Plain_Values()", file="JsonTests.cs", label="JsonDeserializer d = new JsonDeserializer()", span="809-809"];
m3_530 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Plain_Values()", file="JsonTests.cs", label="Guid result = d.Deserialize<Guid>(response)", span="810-810"];
m3_531 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Plain_Values()", file="JsonTests.cs", label="Assert.AreEqual(result, new Guid(''c02bdd1e-cce3-4b9c-8473-165e6e93b92a''))", span="812-812"];
m3_532 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Plain_Values()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Plain_Values()", span="805-805"];
m3_89 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", span="158-158"];
m3_90 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", file="JsonTests.cs", label="string doc = File.ReadAllText(Path.Combine(''SampleData'', ''jsondictionary.txt''))", span="160-160"];
m3_91 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", file="JsonTests.cs", label="JsonDeserializer json = new JsonDeserializer()", span="161-161"];
m3_92 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", file="JsonTests.cs", label="Dictionary<string, object> output =\r\n                json.Deserialize<Dictionary<string, object>>(new RestResponse { Content = \\ndoc })", span="162-163"];
m3_93 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", file="JsonTests.cs", label="Assert.AreEqual(output.Keys.Count, 3)", span="165-165"];
m3_94 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", file="JsonTests.cs", label="object firstKeysVal = output.FirstOrDefault().Value", span="167-167"];
m3_95 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", file="JsonTests.cs", label="Assert.IsInstanceOf<IDictionary>(firstKeysVal)", span="169-169"];
m3_96 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_Object()", span="158-158"];
m3_270 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", span="421-421"];
m3_271 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", file="JsonTests.cs", label="JsonObject doc = new JsonObject()", span="423-423"];
m3_272 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", file="JsonTests.cs", label="doc[''Age''] = ''28''", span="425-425"];
m3_274 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", file="JsonTests.cs", label="RestResponse response = new RestResponse { Content = doc.ToString() }", span="428-428"];
m3_273 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", file="JsonTests.cs", label="JsonDeserializer d = new JsonDeserializer()", span="427-427"];
m3_275 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", file="JsonTests.cs", label="PersonForJson p = d.Deserialize<PersonForJson>(response)", span="429-429"];
m3_276 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", file="JsonTests.cs", label="Assert.AreEqual(28, p.Age)", span="431-431"];
m3_277 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Quoted_Primitive()", span="421-421"];
m3_313 [cluster="System.Uri.Uri(string, System.UriKind)", file="JsonTests.cs", label="Entry System.Uri.Uri(string, System.UriKind)", span="0-0"];
m3_144 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", span="239-239"];
m3_145 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", file="JsonTests.cs", label="DateTime item0 = new DateTime(2010, 2, 8, 11, 11, 11, DateTimeKind.Local)", span="241-241"];
m3_146 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", file="JsonTests.cs", label="DateTime item1 = new DateTime(2011, 2, 8, 11, 11, 11, DateTimeKind.Utc)", span="242-242"];
m3_149 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", color=green, community=0, file="JsonTests.cs", label="data[''Items''] = new JsonArray\r\n                            {\r\n                                item0.ToString(),\r\n                                \\nitem1.ToString(),\r\n                                item2.ToString(),\r\n                                ''/Date(1309421746929+\\n0000)/''\r\n                            }", prediction=3, span="246-252"];
m3_153 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", file="JsonTests.cs", label="Assert.AreNotEqual(item0.Kind, p.Items[0].Kind)", span="258-258"];
m3_147 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", file="JsonTests.cs", label="DateTime item2 = new DateTime(2012, 2, 8, 11, 11, 11, DateTimeKind.Unspecified)", span="243-243"];
m3_154 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", file="JsonTests.cs", label="Assert.AreEqual(item1.Kind, p.Items[1].Kind)", span="259-259"];
m3_148 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", file="JsonTests.cs", label="JsonObject data = new JsonObject()", span="244-244"];
m3_151 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", file="JsonTests.cs", label="RestResponse response = new RestResponse { Content = data.ToString() }", span="255-255"];
m3_150 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", file="JsonTests.cs", label="JsonDeserializer d = new JsonDeserializer()", span="254-254"];
m3_152 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", file="JsonTests.cs", label="GenericWithList<DateTime> p = d.Deserialize<GenericWithList<DateTime>>(response)", span="256-256"];
m3_155 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", file="JsonTests.cs", label="Assert.AreEqual(DateTimeKind.Utc, p.Items[2].Kind)", span="260-260"];
m3_156 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", file="JsonTests.cs", label="Assert.AreEqual(DateTimeKind.Utc, p.Items[3].Kind)", span="261-261"];
m3_157 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_DateTime_With_DateTimeStyles()", span="239-239"];
m3_481 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Null()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Null()", span="738-738"];
m3_482 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Null()", file="JsonTests.cs", label="DateTimeTestStructure payload = GetPayLoad<DateTimeTestStructure>(''datetimes.txt'')", span="740-740"];
m3_483 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Null()", file="JsonTests.cs", label="Assert.Null(payload.NullableDateTimeOffsetWithNull)", span="742-742"];
m3_484 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Null()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Nullable_DateTimeOffset_With_Null()", span="738-738"];
m3_485 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", span="746-746"];
m3_486 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file="JsonTests.cs", label="string doc = this.CreateJsonStringDictionary()", span="748-748"];
m3_487 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file="JsonTests.cs", label="JsonDeserializer d = new JsonDeserializer()", span="749-749"];
m3_488 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file="JsonTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="750-750"];
m3_489 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file="JsonTests.cs", label="Dictionary<string, string> bd = d.Deserialize<Dictionary<string, string>>(response)", span="751-751"];
m3_490 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file="JsonTests.cs", label="Assert.AreEqual(bd[''Thing1''], ''Thing1'')", span="753-753"];
m3_491 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file="JsonTests.cs", label="Assert.AreEqual(bd[''Thing2''], ''Thing2'')", span="754-754"];
m3_492 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file="JsonTests.cs", label="Assert.AreEqual(bd[''ThingRed''], ''ThingRed'')", span="755-755"];
m3_493 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file="JsonTests.cs", label="Assert.AreEqual(bd[''ThingBlue''], ''ThingBlue'')", span="756-756"];
m3_494 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_To_Dictionary_String_String()", span="746-746"];
m3_533 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_with_Null()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_with_Null()", span="816-816"];
m3_534 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_with_Null()", file="JsonTests.cs", label="string doc = File.ReadAllText(Path.Combine(''SampleData'', ''jsondictionary_null.txt''))", span="818-818"];
m3_535 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_with_Null()", file="JsonTests.cs", label="JsonDeserializer json = new JsonDeserializer { RootElement = ''response'' }", span="819-819"];
m3_536 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_with_Null()", file="JsonTests.cs", label="IDictionary<string, object> output = json.Deserialize<Dictionary<string, object>>(new RestResponse { Content = doc })", span="820-820"];
m3_537 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_with_Null()", file="JsonTests.cs", label="IDictionary<string, object> dictionary = (IDictionary<string, object>)output[''SomeDictionary'']", span="822-822"];
m3_538 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_with_Null()", file="JsonTests.cs", label="Assert.AreEqual(''abra'', dictionary[''NonNull''])", span="823-823"];
m3_539 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_with_Null()", file="JsonTests.cs", label="Assert.IsNull(dictionary[''Null''])", span="824-824"];
m3_540 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_with_Null()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Dictionary_with_Null()", span="816-816"];
m3_318 [cluster="RestSharp.Tests.CultureChange.CultureChange(string)", file="JsonTests.cs", label="Entry RestSharp.Tests.CultureChange.CultureChange(string)", span="10-10"];
m3_39 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_IEnumerable_of_Simple_Types()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_IEnumerable_of_Simple_Types()", span="84-84"];
m3_40 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_IEnumerable_of_Simple_Types()", file="JsonTests.cs", label="string content = ''{\''numbers\'':[1,2,3,4,5]}''", span="86-86"];
m3_41 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_IEnumerable_of_Simple_Types()", file="JsonTests.cs", label="JsonDeserializer json = new JsonDeserializer { RootElement = ''numbers'' }", span="87-87"];
m3_42 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_IEnumerable_of_Simple_Types()", file="JsonTests.cs", label="var output = json.Deserialize<IEnumerable<int>>(new RestResponse { Content = content })", span="88-88"];
m3_43 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_IEnumerable_of_Simple_Types()", file="JsonTests.cs", label="Assert.IsNotEmpty(output)", span="90-90"];
m3_44 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_IEnumerable_of_Simple_Types()", file="JsonTests.cs", label="Assert.IsTrue(output.Count() == 5)", span="91-91"];
m3_45 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_IEnumerable_of_Simple_Types()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_IEnumerable_of_Simple_Types()", span="84-84"];
m3_107 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", span="188-188"];
m3_108 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", file="JsonTests.cs", label="string doc = File.ReadAllText(Path.Combine(''SampleData'', ''GenericWithList.txt''))", span="190-190"];
m3_109 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", file="JsonTests.cs", label="JsonDeserializer json = new JsonDeserializer()", span="191-191"];
m3_110 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", file="JsonTests.cs", label="Generic<GenericWithList<Foe>> output =\r\n                json.Deserialize<Generic<GenericWithList<Foe>>>(new RestResponse { Content = \\ndoc })", span="192-193"];
m3_111 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", file="JsonTests.cs", label="Assert.AreEqual(''Foe sho'', output.Data.Items[0].Nickname)", span="195-195"];
m3_112 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Generic_Members()", span="188-188"];
m3_262 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", span="407-407"];
m3_263 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", file="JsonTests.cs", label="JsonObject doc = new JsonObject()", span="409-409"];
m3_264 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", file="JsonTests.cs", label="doc[''Guid''] = GUID_STRING", span="411-411"];
m3_266 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", file="JsonTests.cs", label="RestResponse response = new RestResponse { Content = doc.ToString() }", span="414-414"];
m3_265 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", file="JsonTests.cs", label="JsonDeserializer d = new JsonDeserializer()", span="413-413"];
m3_267 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", file="JsonTests.cs", label="PersonForJson p = d.Deserialize<PersonForJson>(response)", span="415-415"];
m3_268 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", file="JsonTests.cs", label="Assert.AreEqual(new Guid(GUID_STRING), p.Guid)", span="417-417"];
m3_269 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Guid_String_Fields()", span="407-407"];
m3_171 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Entry RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", span="277-277"];
m3_172 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="JsonTests.cs", label="string doc = CreateJsonWithEmptyValues()", span="279-279"];
m3_173 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="JsonTests.cs", label="JsonDeserializer json = new JsonDeserializer()", span="280-280"];
m3_174 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="JsonTests.cs", label="NullableValues output = json.Deserialize<NullableValues>(new RestResponse { Content = doc })", span="281-281"];
m3_175 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Assert.Null(output.Id)", span="283-283"];
m3_176 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Assert.Null(output.StartDate)", span="284-284"];
m3_177 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Assert.Null(output.UniqueId)", span="285-285"];
m3_178 [cluster="RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="JsonTests.cs", label="Exit RestSharp.Tests.JsonTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", span="277-277"];
m3_8 [cluster="RestSharp.Deserializers.JsonDeserializer.JsonDeserializer()", file="JsonTests.cs", label="Entry RestSharp.Deserializers.JsonDeserializer.JsonDeserializer()", span="22-22"];
m5_154 [cluster="RestSharp.RestClient.EncodeParameter(RestSharp.Parameter)", file="RestClient.cs", label="Entry RestSharp.RestClient.EncodeParameter(RestSharp.Parameter)", span="398-398"];
m5_155 [cluster="RestSharp.RestClient.EncodeParameter(RestSharp.Parameter)", file="RestClient.cs", label="return parameter.Value == null\r\n                ? string.Concat(parameter.Name.UrlEncode(), ''='')\r\n                : string.Concat(\\nparameter.Name.UrlEncode(), ''='', parameter.Value.ToString().UrlEncode());", span="400-402"];
m5_156 [cluster="RestSharp.RestClient.EncodeParameter(RestSharp.Parameter)", file="RestClient.cs", label="Exit RestSharp.RestClient.EncodeParameter(RestSharp.Parameter)", span="398-398"];
m5_0 [cluster="RestSharp.RestClient.RestClient()", file="RestClient.cs", label="Entry RestSharp.RestClient.RestClient()", span="137-137"];
m5_1 [cluster="RestSharp.RestClient.RestClient()", file="RestClient.cs", label="this.Encoding = Encoding.UTF8", span="139-139"];
m5_2 [cluster="RestSharp.RestClient.RestClient()", file="RestClient.cs", label="this.ContentHandlers = new Dictionary<string, IDeserializer>()", span="143-143"];
m5_3 [cluster="RestSharp.RestClient.RestClient()", file="RestClient.cs", label="this.AcceptTypes = new List<string>()", span="144-144"];
m5_4 [cluster="RestSharp.RestClient.RestClient()", file="RestClient.cs", label="this.DefaultParameters = new List<Parameter>()", span="145-145"];
m5_5 [cluster="RestSharp.RestClient.RestClient()", file="RestClient.cs", label="this.AddHandler(''application/json'', new JsonDeserializer())", span="148-148"];
m5_6 [cluster="RestSharp.RestClient.RestClient()", file="RestClient.cs", label="this.AddHandler(''application/xml'', new XmlDeserializer())", span="149-149"];
m5_7 [cluster="RestSharp.RestClient.RestClient()", file="RestClient.cs", label="this.AddHandler(''text/json'', new JsonDeserializer())", span="150-150"];
m5_8 [cluster="RestSharp.RestClient.RestClient()", file="RestClient.cs", label="this.AddHandler(''text/x-json'', new JsonDeserializer())", span="151-151"];
m5_9 [cluster="RestSharp.RestClient.RestClient()", file="RestClient.cs", label="this.AddHandler(''text/javascript'', new JsonDeserializer())", span="152-152"];
m5_10 [cluster="RestSharp.RestClient.RestClient()", file="RestClient.cs", label="this.AddHandler(''text/xml'', new XmlDeserializer())", span="153-153"];
m5_11 [cluster="RestSharp.RestClient.RestClient()", file="RestClient.cs", label="this.AddHandler(''*+json'', new JsonDeserializer())", span="154-154"];
m5_12 [cluster="RestSharp.RestClient.RestClient()", file="RestClient.cs", label="this.AddHandler(''*+xml'', new XmlDeserializer())", span="155-155"];
m5_13 [cluster="RestSharp.RestClient.RestClient()", file="RestClient.cs", label="this.AddHandler(''*'', new XmlDeserializer())", span="156-156"];
m5_14 [cluster="RestSharp.RestClient.RestClient()", file="RestClient.cs", label="this.FollowRedirects = true", span="158-158"];
m5_15 [cluster="RestSharp.RestClient.RestClient()", file="RestClient.cs", label="Exit RestSharp.RestClient.RestClient()", span="137-137"];
m5_89 [cluster="RestSharp.Authenticators.IAuthenticator.Authenticate(RestSharp.IRestClient, RestSharp.IRestRequest)", file="RestClient.cs", label="Entry RestSharp.Authenticators.IAuthenticator.Authenticate(RestSharp.IRestClient, RestSharp.IRestRequest)", span="22-22"];
m5_42 [cluster="string.Join(string, params string[])", file="RestClient.cs", label="Entry string.Join(string, params string[])", span="0-0"];
m5_52 [cluster="RestSharp.RestClient.ClearHandlers()", file="RestClient.cs", label="Entry RestSharp.RestClient.ClearHandlers()", span="228-228"];
m5_53 [cluster="RestSharp.RestClient.ClearHandlers()", file="RestClient.cs", label="this.ContentHandlers.Clear()", span="230-230"];
m5_54 [cluster="RestSharp.RestClient.ClearHandlers()", file="RestClient.cs", label="this.AcceptTypes.Clear()", span="231-231"];
m5_55 [cluster="RestSharp.RestClient.ClearHandlers()", file="RestClient.cs", label="this.RemoveDefaultParameter(''Accept'')", span="232-232"];
m5_56 [cluster="RestSharp.RestClient.ClearHandlers()", file="RestClient.cs", label="Exit RestSharp.RestClient.ClearHandlers()", span="228-228"];
m5_21 [cluster="RestSharp.RestClient.RestClient(System.Uri)", file="RestClient.cs", label="Entry RestSharp.RestClient.RestClient(System.Uri)", span="165-165"];
m5_22 [cluster="RestSharp.RestClient.RestClient(System.Uri)", file="RestClient.cs", label="this.BaseUrl = baseUrl", span="167-167"];
m5_23 [cluster="RestSharp.RestClient.RestClient(System.Uri)", file="RestClient.cs", label="Exit RestSharp.RestClient.RestClient(System.Uri)", span="165-165"];
m5_44 [cluster="RestSharp.IRestClient.AddDefaultParameter(string, object, RestSharp.ParameterType)", file="RestClient.cs", label="Entry RestSharp.IRestClient.AddDefaultParameter(string, object, RestSharp.ParameterType)", span="372-372"];
m5_58 [cluster="RestSharp.RestClient.Deserialize<T>(RestSharp.IRestResponse)", file="RestClient.cs", label="Entry RestSharp.RestClient.Deserialize<T>(RestSharp.IRestResponse)", span="235-235"];
m5_59 [cluster="RestSharp.RestClient.Deserialize<T>(RestSharp.IRestResponse)", file="RestClient.cs", label="return Deserialize<T>(response.Request, response);", span="237-237"];
m5_60 [cluster="RestSharp.RestClient.Deserialize<T>(RestSharp.IRestResponse)", file="RestClient.cs", label="Exit RestSharp.RestClient.Deserialize<T>(RestSharp.IRestResponse)", span="235-235"];
m5_61 [cluster="RestSharp.RestClient.Deserialize<T>(RestSharp.IRestRequest, RestSharp.IRestResponse)", file="RestClient.cs", label="Entry RestSharp.RestClient.Deserialize<T>(RestSharp.IRestRequest, RestSharp.IRestResponse)", span="635-635"];
m5_236 [cluster="RestSharp.RestClient.Deserialize<T>(RestSharp.IRestRequest, RestSharp.IRestResponse)", file="RestClient.cs", label="request.OnBeforeDeserialization(raw)", span="637-637"];
m5_237 [cluster="RestSharp.RestClient.Deserialize<T>(RestSharp.IRestRequest, RestSharp.IRestResponse)", file="RestClient.cs", label="IRestResponse<T> response = new RestResponse<T>()", span="639-639"];
m5_238 [cluster="RestSharp.RestClient.Deserialize<T>(RestSharp.IRestRequest, RestSharp.IRestResponse)", file="RestClient.cs", label="response = raw.ToAsyncResponse<T>()", span="643-643"];
m5_239 [cluster="RestSharp.RestClient.Deserialize<T>(RestSharp.IRestRequest, RestSharp.IRestResponse)", file="RestClient.cs", label="response.Request = request", span="644-644"];
m5_241 [cluster="RestSharp.RestClient.Deserialize<T>(RestSharp.IRestRequest, RestSharp.IRestResponse)", file="RestClient.cs", label="IDeserializer handler = this.GetHandler(raw.ContentType)", span="651-651"];
m5_243 [cluster="RestSharp.RestClient.Deserialize<T>(RestSharp.IRestRequest, RestSharp.IRestResponse)", file="RestClient.cs", label="handler.RootElement = request.RootElement", span="657-657"];
m5_244 [cluster="RestSharp.RestClient.Deserialize<T>(RestSharp.IRestRequest, RestSharp.IRestResponse)", file="RestClient.cs", label="handler.DateFormat = request.DateFormat", span="658-658"];
m5_245 [cluster="RestSharp.RestClient.Deserialize<T>(RestSharp.IRestRequest, RestSharp.IRestResponse)", file="RestClient.cs", label="handler.Namespace = request.XmlNamespace", span="659-659"];
m5_246 [cluster="RestSharp.RestClient.Deserialize<T>(RestSharp.IRestRequest, RestSharp.IRestResponse)", file="RestClient.cs", label="response.Data = handler.Deserialize<T>(raw)", span="661-661"];
m5_240 [cluster="RestSharp.RestClient.Deserialize<T>(RestSharp.IRestRequest, RestSharp.IRestResponse)", file="RestClient.cs", label="response.ErrorException == null", span="649-649"];
m5_248 [cluster="RestSharp.RestClient.Deserialize<T>(RestSharp.IRestRequest, RestSharp.IRestResponse)", file="RestClient.cs", label="response.ResponseStatus = ResponseStatus.Error", span="667-667"];
m5_249 [cluster="RestSharp.RestClient.Deserialize<T>(RestSharp.IRestRequest, RestSharp.IRestResponse)", file="RestClient.cs", label="response.ErrorMessage = ex.Message", span="668-668"];
m5_250 [cluster="RestSharp.RestClient.Deserialize<T>(RestSharp.IRestRequest, RestSharp.IRestResponse)", file="RestClient.cs", label="response.ErrorException = ex", span="669-669"];
m5_251 [cluster="RestSharp.RestClient.Deserialize<T>(RestSharp.IRestRequest, RestSharp.IRestResponse)", file="RestClient.cs", label="return response;", span="672-672"];
m5_247 [cluster="RestSharp.RestClient.Deserialize<T>(RestSharp.IRestRequest, RestSharp.IRestResponse)", file="RestClient.cs", label=Exception, span="665-665"];
m5_242 [cluster="RestSharp.RestClient.Deserialize<T>(RestSharp.IRestRequest, RestSharp.IRestResponse)", file="RestClient.cs", label="handler != null", span="655-655"];
m5_252 [cluster="RestSharp.RestClient.Deserialize<T>(RestSharp.IRestRequest, RestSharp.IRestResponse)", file="RestClient.cs", label="Exit RestSharp.RestClient.Deserialize<T>(RestSharp.IRestRequest, RestSharp.IRestResponse)", span="635-635"];
m5_256 [cluster="RestSharp.Deserializers.IDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file="RestClient.cs", label="Entry RestSharp.Deserializers.IDeserializer.Deserialize<T>(RestSharp.IRestResponse)", span="22-22"];
m5_57 [cluster="System.Collections.Generic.ICollection<T>.Clear()", file="RestClient.cs", label="Entry System.Collections.Generic.ICollection<T>.Clear()", span="0-0"];
m5_124 [cluster="string.Format(string, object)", file="RestClient.cs", label="Entry string.Format(string, object)", span="0-0"];
m5_130 [cluster="string.StartsWith(string)", file="RestClient.cs", label="Entry string.StartsWith(string)", span="0-0"];
m5_127 [cluster="string.Replace(string, string)", file="RestClient.cs", label="Entry string.Replace(string, string)", span="0-0"];
m5_17 [cluster="System.Collections.Generic.List<T>.List()", file="RestClient.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m5_222 [cluster="lambda expression", file="RestClient.cs", label="Entry lambda expression", span="532-532"];
m5_140 [cluster="lambda expression", file="RestClient.cs", label="Entry lambda expression", span="321-321"];
m5_143 [cluster="lambda expression", file="RestClient.cs", label="Entry lambda expression", span="365-366"];
m5_146 [cluster="lambda expression", file="RestClient.cs", label="Entry lambda expression", span="372-372"];
m5_141 [cluster="lambda expression", file="RestClient.cs", label="p.Type == ParameterType.UrlSegment", span="321-321"];
m5_142 [cluster="lambda expression", file="RestClient.cs", label="Exit lambda expression", span="321-321"];
m5_144 [cluster="lambda expression", file="RestClient.cs", label="p.Type == ParameterType.GetOrPost ||\r\n                                                p.Type == ParameterType.QueryString", span="365-366"];
m5_145 [cluster="lambda expression", file="RestClient.cs", label="Exit lambda expression", span="365-366"];
m5_147 [cluster="lambda expression", file="RestClient.cs", label="p.Type == ParameterType.QueryString", span="372-372"];
m5_148 [cluster="lambda expression", file="RestClient.cs", label="Exit lambda expression", span="372-372"];
m5_216 [cluster="lambda expression", file="RestClient.cs", label="p2.Name == p.Name && p2.Type == p.Type", span="417-417"];
m5_215 [cluster="lambda expression", file="RestClient.cs", label="Entry lambda expression", span="417-417"];
m5_218 [cluster="lambda expression", file="RestClient.cs", label="Entry lambda expression", span="426-426"];
m5_217 [cluster="lambda expression", file="RestClient.cs", label="Exit lambda expression", span="417-417"];
m5_219 [cluster="lambda expression", file="RestClient.cs", label="p2.Name.ToLowerInvariant() != ''accept''", span="426-426"];
m5_220 [cluster="lambda expression", file="RestClient.cs", label="Exit lambda expression", span="426-426"];
m5_223 [cluster="lambda expression", file="RestClient.cs", label="p.Type == ParameterType.RequestBody", span="532-532"];
m5_224 [cluster="lambda expression", file="RestClient.cs", label="Exit lambda expression", span="532-532"];
m5_120 [cluster="System.NullReferenceException.NullReferenceException(string)", file="RestClient.cs", label="Entry System.NullReferenceException.NullReferenceException(string)", span="0-0"];
m5_210 [cluster="RestSharp.HttpCookie.HttpCookie()", file="RestClient.cs", label="Entry RestSharp.HttpCookie.HttpCookie()", span="7-7"];
m5_24 [cluster="RestSharp.RestClient.RestClient(string)", file="RestClient.cs", label="Entry RestSharp.RestClient.RestClient(string)", span="174-174"];
m5_25 [cluster="RestSharp.RestClient.RestClient(string)", file="RestClient.cs", label="string.IsNullOrEmpty(baseUrl)", span="176-176"];
m5_27 [cluster="RestSharp.RestClient.RestClient(string)", file="RestClient.cs", label="this.BaseUrl = new Uri(baseUrl)", span="181-181"];
m5_26 [cluster="RestSharp.RestClient.RestClient(string)", file="RestClient.cs", label="throw new ArgumentNullException(''baseUrl'');", span="178-178"];
m5_28 [cluster="RestSharp.RestClient.RestClient(string)", file="RestClient.cs", label="Exit RestSharp.RestClient.RestClient(string)", span="174-174"];
m5_30 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="RestClient.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m5_233 [cluster="RestSharp.RestResponse.RestResponse()", file="RestClient.cs", label="Entry RestSharp.RestResponse.RestResponse()", span="184-184"];
m5_253 [cluster="System.Action<T>.Invoke(T)", file="RestClient.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m5_90 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label="Entry RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", span="313-313"];
m5_91 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label="this.BaseUrl == null", span="315-315"];
m5_93 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label="string assembled = request.Resource", span="320-320"];
m5_94 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label="IEnumerable<Parameter> urlParms = request.Parameters.Where(p => p.Type == ParameterType.UrlSegment)", span="321-321"];
m5_110 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label="request.Method != Method.POST && request.Method != Method.PUT && request.Method != Method.PATCH", span="362-362"];
m5_111 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label="parameters = request.Parameters\r\n                                    .Where(p => p.Type == ParameterType.GetOrPost ||\r\n                                                \\np.Type == ParameterType.QueryString)\r\n                                    .ToList()", span="364-367"];
m5_112 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label="parameters = request.Parameters\r\n                                    .Where(p => p.Type == ParameterType.QueryString)\r\n                                    \\n.ToList()", span="371-373"];
m5_92 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label="throw new NullReferenceException(''RestClient must contain a value for BaseUrl'');", span="317-317"];
m5_99 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label="!string.IsNullOrEmpty(assembled)", span="333-333"];
m5_100 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label="assembled = assembled.Replace(''{'' + p.Name + ''}'', p.Value.ToString().UrlEncode())", span="335-335"];
m5_103 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label="!string.IsNullOrEmpty(assembled) && assembled.StartsWith(''/'')", span="343-343"];
m5_104 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label="assembled = assembled.Substring(1)", span="345-345"];
m5_106 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label="!this.BaseUrl.AbsoluteUri.EndsWith(''/'') && !string.IsNullOrEmpty(assembled)", span="350-350"];
m5_107 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label="assembled = string.Concat(''/'', assembled)", span="352-352"];
m5_108 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label="assembled = string.IsNullOrEmpty(assembled)\r\n                    ? this.BaseUrl.AbsoluteUri\r\n                    : string.Format(''{\\n0}{1}'', this.BaseUrl, assembled)", span="355-357"];
m5_114 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label="return new Uri(assembled);", span="378-378"];
m5_116 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label="string separator = assembled != null && assembled.Contains(''?'')\r\n                ? ''&''\r\n                : ''?''", span="383-385"];
m5_117 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label="assembled = string.Concat(assembled, separator, data)", span="387-387"];
m5_95 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label="UriBuilder builder = new UriBuilder(this.BaseUrl)", span="322-322"];
m5_96 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label=urlParms, span="324-324"];
m5_101 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label="builder.Path = builder.Path.UrlDecode().Replace(''{'' + p.Name + ''}'', p.Value.ToString().UrlEncode())", span="338-338"];
m5_102 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label="this.BaseUrl = new Uri(builder.ToString())", span="341-341"];
m5_97 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label="p.Value == null", span="326-326"];
m5_98 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label="throw new ArgumentException(\r\n                        string.Format(''Cannot build uri when url segment parameter '{0}' value \\nis null.'', p.Name),\r\n                        ''request'');", span="328-330"];
m5_105 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label="this.BaseUrl != null && !string.IsNullOrEmpty(this.BaseUrl.AbsoluteUri)", span="348-348"];
m5_109 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label="IEnumerable<Parameter> parameters", span="360-360"];
m5_113 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label="!parameters.Any()", span="376-376"];
m5_115 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label="string data = EncodeParameters(parameters)", span="382-382"];
m5_118 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label="return new Uri(assembled);", span="389-389"];
m5_119 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="RestClient.cs", label="Exit RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", span="313-313"];
m5_206 [cluster="RestSharp.IRestRequest.AddParameter(string, object, RestSharp.ParameterType)", file="RestClient.cs", label="Entry RestSharp.IRestRequest.AddParameter(string, object, RestSharp.ParameterType)", span="261-261"];
m5_16 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RestClient.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m5_45 [cluster="RestSharp.RestClient.RemoveHandler(string)", file="RestClient.cs", label="Entry RestSharp.RestClient.RemoveHandler(string)", span="218-218"];
m5_46 [cluster="RestSharp.RestClient.RemoveHandler(string)", file="RestClient.cs", label="this.ContentHandlers.Remove(contentType)", span="220-220"];
m5_47 [cluster="RestSharp.RestClient.RemoveHandler(string)", file="RestClient.cs", label="this.AcceptTypes.Remove(contentType)", span="221-221"];
m5_48 [cluster="RestSharp.RestClient.RemoveHandler(string)", file="RestClient.cs", label="this.RemoveDefaultParameter(''Accept'')", span="222-222"];
m5_49 [cluster="RestSharp.RestClient.RemoveHandler(string)", file="RestClient.cs", label="Exit RestSharp.RestClient.RemoveHandler(string)", span="218-218"];
m5_29 [cluster="string.IsNullOrEmpty(string)", file="RestClient.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m5_51 [cluster="System.Collections.Generic.ICollection<T>.Remove(T)", file="RestClient.cs", label="Entry System.Collections.Generic.ICollection<T>.Remove(T)", span="0-0"];
m5_84 [cluster="System.Text.RegularExpressions.Regex.Match(string)", file="RestClient.cs", label="Entry System.Text.RegularExpressions.Regex.Match(string)", span="0-0"];
m5_126 [cluster="string.UrlEncode()", file="RestClient.cs", label="Entry string.UrlEncode()", span="49-49"];
m5_123 [cluster="System.ArgumentException.ArgumentException(string, string)", file="RestClient.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m5_43 [cluster="RestSharp.IRestClient.RemoveDefaultParameter(string)", file="RestClient.cs", label="Entry RestSharp.IRestClient.RemoveDefaultParameter(string)", span="331-331"];
m5_85 [cluster="RestSharp.RestClient.AuthenticateIfNeeded(RestSharp.RestClient, RestSharp.IRestRequest)", file="RestClient.cs", label="Entry RestSharp.RestClient.AuthenticateIfNeeded(RestSharp.RestClient, RestSharp.IRestRequest)", span="300-300"];
m5_86 [cluster="RestSharp.RestClient.AuthenticateIfNeeded(RestSharp.RestClient, RestSharp.IRestRequest)", file="RestClient.cs", label="this.Authenticator != null", span="302-302"];
m5_87 [cluster="RestSharp.RestClient.AuthenticateIfNeeded(RestSharp.RestClient, RestSharp.IRestRequest)", file="RestClient.cs", label="this.Authenticator.Authenticate(client, request)", span="304-304"];
m5_88 [cluster="RestSharp.RestClient.AuthenticateIfNeeded(RestSharp.RestClient, RestSharp.IRestRequest)", file="RestClient.cs", label="Exit RestSharp.RestClient.AuthenticateIfNeeded(RestSharp.RestClient, RestSharp.IRestRequest)", span="300-300"];
m5_211 [cluster="RestSharp.HttpParameter.HttpParameter()", file="RestClient.cs", label="Entry RestSharp.HttpParameter.HttpParameter()", span="5-5"];
m5_221 [cluster="string.ToLowerInvariant()", file="RestClient.cs", label="Entry string.ToLowerInvariant()", span="0-0"];
m5_40 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="RestClient.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m5_254 [cluster="RestSharp.RestResponse<T>.RestResponse()", file="RestClient.cs", label="Entry RestSharp.RestResponse<T>.RestResponse()", span="150-150"];
m5_235 [cluster="RestSharp.RestResponseCookie.RestResponseCookie()", file="RestClient.cs", label="Entry RestSharp.RestResponseCookie.RestResponseCookie()", span="4-4"];
m5_62 [cluster="RestSharp.RestClient.GetHandler(string)", file="RestClient.cs", label="Entry RestSharp.RestClient.GetHandler(string)", span="245-245"];
m5_63 [cluster="RestSharp.RestClient.GetHandler(string)", file="RestClient.cs", label="contentType == null", span="247-247"];
m5_65 [cluster="RestSharp.RestClient.GetHandler(string)", file="RestClient.cs", label="string.IsNullOrEmpty(contentType) && this.ContentHandlers.ContainsKey(''*'')", span="252-252"];
m5_67 [cluster="RestSharp.RestClient.GetHandler(string)", file="RestClient.cs", label="int semicolonIndex = contentType.IndexOf(';')", span="257-257"];
m5_69 [cluster="RestSharp.RestClient.GetHandler(string)", file="RestClient.cs", label="contentType = contentType.Substring(0, semicolonIndex)", span="261-261"];
m5_70 [cluster="RestSharp.RestClient.GetHandler(string)", file="RestClient.cs", label="this.ContentHandlers.ContainsKey(contentType)", span="264-264"];
m5_71 [cluster="RestSharp.RestClient.GetHandler(string)", file="RestClient.cs", label="return this.ContentHandlers[contentType];", span="266-266"];
m5_72 [cluster="RestSharp.RestClient.GetHandler(string)", color=green, community=0, file="RestClient.cs", label="Match structuredSyntaxSuffixMatch = this.structuredSyntaxSuffixRegex.Match(contentType)", prediction=4, span="270-270"];
m5_79 [cluster="RestSharp.RestClient.GetHandler(string)", file="RestClient.cs", label="return null;", span="287-287"];
m5_64 [cluster="RestSharp.RestClient.GetHandler(string)", file="RestClient.cs", label="throw new ArgumentNullException(''contentType'');", span="249-249"];
m5_66 [cluster="RestSharp.RestClient.GetHandler(string)", file="RestClient.cs", label="return this.ContentHandlers[''*''];", span="254-254"];
m5_68 [cluster="RestSharp.RestClient.GetHandler(string)", file="RestClient.cs", label="semicolonIndex > -1", span="259-259"];
m5_73 [cluster="RestSharp.RestClient.GetHandler(string)", file="RestClient.cs", label="structuredSyntaxSuffixMatch.Success", span="272-272"];
m5_74 [cluster="RestSharp.RestClient.GetHandler(string)", file="RestClient.cs", label="string structuredSyntaxSuffixWildcard = ''*'' + structuredSyntaxSuffixMatch.Value", span="274-274"];
m5_77 [cluster="RestSharp.RestClient.GetHandler(string)", file="RestClient.cs", label="this.ContentHandlers.ContainsKey(''*'')", span="282-282"];
m5_75 [cluster="RestSharp.RestClient.GetHandler(string)", file="RestClient.cs", label="this.ContentHandlers.ContainsKey(structuredSyntaxSuffixWildcard)", span="276-276"];
m5_76 [cluster="RestSharp.RestClient.GetHandler(string)", file="RestClient.cs", label="return this.ContentHandlers[structuredSyntaxSuffixWildcard];", span="278-278"];
m5_78 [cluster="RestSharp.RestClient.GetHandler(string)", file="RestClient.cs", label="return this.ContentHandlers[''*''];", span="284-284"];
m5_80 [cluster="RestSharp.RestClient.GetHandler(string)", file="RestClient.cs", label="Exit RestSharp.RestClient.GetHandler(string)", span="245-245"];
m5_136 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="RestClient.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m5_41 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="RestClient.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m5_204 [cluster="RestSharp.IRestRequest.AddParameter(RestSharp.Parameter)", file="RestClient.cs", label="Entry RestSharp.IRestRequest.AddParameter(RestSharp.Parameter)", span="239-239"];
m5_131 [cluster="string.Substring(int)", file="RestClient.cs", label="Entry string.Substring(int)", span="0-0"];
m5_31 [cluster="System.Uri.Uri(string)", file="RestClient.cs", label="Entry System.Uri.Uri(string)", span="0-0"];
m5_138 [cluster="string.Contains(string)", file="RestClient.cs", label="Entry string.Contains(string)", span="0-0"];
m5_83 [cluster="string.Substring(int, int)", file="RestClient.cs", label="Entry string.Substring(int, int)", span="0-0"];
m5_134 [cluster="string.Format(string, object, object)", file="RestClient.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m5_137 [cluster="RestSharp.RestClient.EncodeParameters(System.Collections.Generic.IEnumerable<RestSharp.Parameter>)", file="RestClient.cs", label="Entry RestSharp.RestClient.EncodeParameters(System.Collections.Generic.IEnumerable<RestSharp.Parameter>)", span="392-392"];
m5_149 [cluster="RestSharp.RestClient.EncodeParameters(System.Collections.Generic.IEnumerable<RestSharp.Parameter>)", file="RestClient.cs", label="return string.Join(''&'', parameters.Select(EncodeParameter)\r\n                                              .ToArray());", span="394-395"];
m5_150 [cluster="RestSharp.RestClient.EncodeParameters(System.Collections.Generic.IEnumerable<RestSharp.Parameter>)", file="RestClient.cs", label="Exit RestSharp.RestClient.EncodeParameters(System.Collections.Generic.IEnumerable<RestSharp.Parameter>)", span="392-392"];
m5_214 [cluster="System.Convert.ToString(object)", file="RestClient.cs", label="Entry System.Convert.ToString(object)", span="0-0"];
m5_225 [cluster="RestSharp.RestClient.ConvertToRestResponse(RestSharp.IRestRequest, RestSharp.HttpResponse)", file="RestClient.cs", label="Entry RestSharp.RestClient.ConvertToRestResponse(RestSharp.IRestRequest, RestSharp.HttpResponse)", span="581-581"];
m5_226 [cluster="RestSharp.RestClient.ConvertToRestResponse(RestSharp.IRestRequest, RestSharp.HttpResponse)", file="RestClient.cs", label="RestResponse restResponse = new RestResponse\r\n                                        {\r\n                                            \\nContent = httpResponse.Content,\r\n                                            ContentEncoding = httpResponse.ContentEncoding,\r\n                                            \\nContentLength = httpResponse.ContentLength,\r\n                                            ContentType = httpResponse.ContentType,\r\n                                            \\nErrorException = httpResponse.ErrorException,\r\n                                            ErrorMessage = httpResponse.ErrorMessage,\r\n                                            \\nRawBytes = httpResponse.RawBytes,\r\n                                            ResponseStatus = httpResponse.ResponseStatus,\r\n                                            \\nResponseUri = httpResponse.ResponseUri,\r\n                                            ProtocolVersion = httpResponse.ProtocolVersion,\r\n                                            \\nServer = httpResponse.Server,\r\n                                            StatusCode = httpResponse.StatusCode,\r\n                                            \\nStatusDescription = httpResponse.StatusDescription,\r\n                                            Request = request\r\n                                        }", span="583-599"];
m5_227 [cluster="RestSharp.RestClient.ConvertToRestResponse(RestSharp.IRestRequest, RestSharp.HttpResponse)", file="RestClient.cs", label="httpResponse.Headers", span="601-601"];
m5_229 [cluster="RestSharp.RestClient.ConvertToRestResponse(RestSharp.IRestRequest, RestSharp.HttpResponse)", file="RestClient.cs", label="httpResponse.Cookies", span="611-611"];
m5_228 [cluster="RestSharp.RestClient.ConvertToRestResponse(RestSharp.IRestRequest, RestSharp.HttpResponse)", file="RestClient.cs", label="restResponse.Headers.Add(new Parameter\r\n                                         {\r\n                                             \\nName = header.Name,\r\n                                             Value = header.Value,\r\n                                             \\nType = ParameterType.HttpHeader\r\n                                         })", span="603-608"];
m5_230 [cluster="RestSharp.RestClient.ConvertToRestResponse(RestSharp.IRestRequest, RestSharp.HttpResponse)", file="RestClient.cs", label="restResponse.Cookies.Add(new RestResponseCookie\r\n                                         {\r\n                                             \\nComment = cookie.Comment,\r\n                                             CommentUri = cookie.CommentUri,\r\n                                             \\nDiscard = cookie.Discard,\r\n                                             Domain = cookie.Domain,\r\n                                             \\nExpired = cookie.Expired,\r\n                                             Expires = cookie.Expires,\r\n                                             \\nHttpOnly = cookie.HttpOnly,\r\n                                             Name = cookie.Name,\r\n                                             \\nPath = cookie.Path,\r\n                                             Port = cookie.Port,\r\n                                             \\nSecure = cookie.Secure,\r\n                                             TimeStamp = cookie.TimeStamp,\r\n                                             \\nValue = cookie.Value,\r\n                                             Version = cookie.Version\r\n                                         })", span="613-629"];
m5_231 [cluster="RestSharp.RestClient.ConvertToRestResponse(RestSharp.IRestRequest, RestSharp.HttpResponse)", file="RestClient.cs", label="return restResponse;", span="632-632"];
m5_232 [cluster="RestSharp.RestClient.ConvertToRestResponse(RestSharp.IRestRequest, RestSharp.HttpResponse)", file="RestClient.cs", label="Exit RestSharp.RestClient.ConvertToRestResponse(RestSharp.IRestRequest, RestSharp.HttpResponse)", span="581-581"];
m5_125 [cluster="object.ToString()", file="RestClient.cs", label="Entry object.ToString()", span="0-0"];
m5_132 [cluster="string.EndsWith(string)", file="RestClient.cs", label="Entry string.EndsWith(string)", span="0-0"];
m5_139 [cluster="string.Concat(string, string, string)", file="RestClient.cs", label="Entry string.Concat(string, string, string)", span="0-0"];
m5_128 [cluster="string.UrlDecode()", file="RestClient.cs", label="Entry string.UrlDecode()", span="40-40"];
m5_39 [cluster="System.Text.RegularExpressions.Regex.IsMatch(string)", file="RestClient.cs", label="Entry System.Text.RegularExpressions.Regex.IsMatch(string)", span="0-0"];
m5_122 [cluster="System.UriBuilder.UriBuilder(System.Uri)", file="RestClient.cs", label="Entry System.UriBuilder.UriBuilder(System.Uri)", span="0-0"];
m5_157 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="Entry RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", span="405-405"];
m5_158 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="http.Encoding = this.Encoding", span="407-407"];
m5_159 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="http.AlwaysMultipartFormData = request.AlwaysMultipartFormData", span="408-408"];
m5_160 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="http.UseDefaultCredentials = request.UseDefaultCredentials", span="409-409"];
m5_161 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="http.ResponseWriter = request.ResponseWriter", span="410-410"];
m5_162 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="http.CookieContainer = this.CookieContainer", span="411-411"];
m5_164 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="request.Parameters.Any(p2 => p2.Name == p.Name && p2.Type == p.Type)", span="417-417"];
m5_165 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="request.AddParameter(p)", span="422-422"];
m5_166 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="request.Parameters.All(p2 => p2.Name.ToLowerInvariant() != ''accept'')", span="426-426"];
m5_168 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="request.AddParameter(''Accept'', accepts, ParameterType.HttpHeader)", span="430-430"];
m5_169 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="http.Url = this.BuildUri(request)", span="433-433"];
m5_170 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="http.PreAuthenticate = this.PreAuthenticate", span="434-434"];
m5_171 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="string userAgent = this.UserAgent ?? http.UserAgent", span="436-436"];
m5_172 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="http.UserAgent = userAgent.HasValue()\r\n                ? userAgent\r\n                : ''RestSharp/'' + version", span="438-440"];
m5_173 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="int timeout = request.Timeout > 0\r\n                ? request.Timeout\r\n                : this.Timeout", span="442-444"];
m5_175 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="http.Timeout = timeout", span="448-448"];
m5_176 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="int readWriteTimeout = request.ReadWriteTimeout > 0\r\n                ? request.ReadWriteTimeout\r\n                : this.ReadWriteTimeout", span="451-453"];
m5_178 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="http.ReadWriteTimeout = readWriteTimeout", span="457-457"];
m5_179 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="http.FollowRedirects = this.FollowRedirects", span="461-461"];
m5_180 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="request.Credentials != null", span="476-476"];
m5_181 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="http.Credentials = request.Credentials", span="478-478"];
m5_182 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="IEnumerable<HttpHeader> headers = from p in request.Parameters\r\n                                              where p.Type == \\nParameterType.HttpHeader\r\n                                              select new HttpHeader\r\n                                                     {\r\n                                                         \\nName = p.Name,\r\n                                                         Value = Convert.ToString(p.Value)\r\n                                                     }", span="481-487"];
m5_184 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="http.Headers.Add(header)", span="491-491"];
m5_185 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="IEnumerable<HttpCookie> cookies = from p in request.Parameters\r\n                                              where p.Type == \\nParameterType.Cookie\r\n                                              select new HttpCookie\r\n                                                     {\r\n                                                         \\nName = p.Name,\r\n                                                         Value = Convert.ToString(p.Value)\r\n                                                     }", span="494-500"];
m5_187 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="http.Cookies.Add(cookie)", span="504-504"];
m5_188 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="IEnumerable<HttpParameter> @params = from p in request.Parameters\r\n                                                 where p.Type == \\nParameterType.GetOrPost && p.Value != null\r\n                                                 select new HttpParameter\r\n                                                        {\r\n                                                            \\nName = p.Name,\r\n                                                            Value = Convert.ToString(p.Value)\r\n                                                        }", span="507-513"];
m5_190 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="http.Parameters.Add(parameter)", span="517-517"];
m5_191 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="request.Files", span="520-520"];
m5_192 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="http.Files.Add(new HttpFile\r\n                               {\r\n                                   Name = file.Name,\r\n                                   \\nContentType = file.ContentType,\r\n                                   Writer = file.Writer,\r\n                                   \\nFileName = file.FileName,\r\n                                   ContentLength = file.ContentLength\r\n                               })", span="522-529"];
m5_193 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="Parameter body = request.Parameters.FirstOrDefault(p => p.Type == ParameterType.RequestBody)", span="532-532"];
m5_195 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="http.RequestContentType = body.Name", span="538-538"];
m5_196 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="!http.Files.Any()", span="540-540"];
m5_199 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="http.RequestBodyBytes = (byte[]) val", span="546-546"];
m5_200 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="http.RequestBody = Convert.ToString(body.Value)", span="550-550"];
m5_201 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="http.Parameters.Add(new HttpParameter\r\n                                        {\r\n                                            \\nName = body.Name,\r\n                                            Value = Convert.ToString(body.Value),\r\n                                            \\nContentType = body.ContentType\r\n                                        })", span="555-560"];
m5_163 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="this.DefaultParameters", span="415-415"];
m5_167 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="string accepts = string.Join('', '', this.AcceptTypes.ToArray())", span="428-428"];
m5_174 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="timeout > 0", span="446-446"];
m5_177 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="readWriteTimeout > 0", span="455-455"];
m5_183 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label=headers, span="489-489"];
m5_186 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label=cookies, span="502-502"];
m5_189 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="@params", span="515-515"];
m5_194 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="body != null", span="536-536"];
m5_197 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="object val = body.Value", span="542-542"];
m5_198 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="val is byte[]", span="544-544"];
m5_202 [cluster="RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", file="RestClient.cs", label="Exit RestSharp.RestClient.ConfigureHttp(RestSharp.IRestRequest, RestSharp.IHttp)", span="405-405"];
m5_50 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Remove(TKey)", file="RestClient.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m5_81 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="RestClient.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m5_82 [cluster="string.IndexOf(char)", file="RestClient.cs", label="Entry string.IndexOf(char)", span="0-0"];
m5_234 [cluster="RestSharp.Parameter.Parameter()", file="RestClient.cs", label="Entry RestSharp.Parameter.Parameter()", span="23-23"];
m5_212 [cluster="RestSharp.HttpFile.HttpFile()", file="RestClient.cs", label="Entry RestSharp.HttpFile.HttpFile()", span="8-8"];
m5_207 [cluster="string.HasValue()", file="RestClient.cs", label="Entry string.HasValue()", span="100-100"];
m5_20 [cluster="RestSharp.Deserializers.XmlDeserializer.XmlDeserializer()", file="RestClient.cs", label="Entry RestSharp.Deserializers.XmlDeserializer.XmlDeserializer()", span="44-44"];
m5_208 [cluster="RestSharp.HttpHeader.HttpHeader()", file="RestClient.cs", label="Entry RestSharp.HttpHeader.HttpHeader()", span="5-5"];
m5_129 [cluster="System.UriBuilder.ToString()", file="RestClient.cs", label="Entry System.UriBuilder.ToString()", span="0-0"];
m5_255 [cluster="RestSharp.IRestResponse.ToAsyncResponse<T>()", file="RestClient.cs", label="Entry RestSharp.IRestResponse.ToAsyncResponse<T>()", span="4-4"];
m5_133 [cluster="string.Concat(string, string)", file="RestClient.cs", label="Entry string.Concat(string, string)", span="0-0"];
m5_18 [cluster="RestSharp.Deserializers.JsonDeserializer.JsonDeserializer()", file="RestClient.cs", label="Entry RestSharp.Deserializers.JsonDeserializer.JsonDeserializer()", span="22-22"];
m5_19 [cluster="RestSharp.RestClient.AddHandler(string, RestSharp.Deserializers.IDeserializer)", file="RestClient.cs", label="Entry RestSharp.RestClient.AddHandler(string, RestSharp.Deserializers.IDeserializer)", span="199-199"];
m5_32 [cluster="RestSharp.RestClient.AddHandler(string, RestSharp.Deserializers.IDeserializer)", file="RestClient.cs", label="this.ContentHandlers[contentType] = deserializer", span="201-201"];
m5_33 [cluster="RestSharp.RestClient.AddHandler(string, RestSharp.Deserializers.IDeserializer)", color=green, community=0, file="RestClient.cs", label="contentType != ''*'' && !this.structuredSyntaxSuffixWildcardRegex.IsMatch(contentType)", prediction=5, span="203-203"];
m5_34 [cluster="RestSharp.RestClient.AddHandler(string, RestSharp.Deserializers.IDeserializer)", file="RestClient.cs", label="this.AcceptTypes.Add(contentType)", span="205-205"];
m5_35 [cluster="RestSharp.RestClient.AddHandler(string, RestSharp.Deserializers.IDeserializer)", file="RestClient.cs", label="string accepts = string.Join('', '', this.AcceptTypes.ToArray())", span="207-207"];
m5_36 [cluster="RestSharp.RestClient.AddHandler(string, RestSharp.Deserializers.IDeserializer)", file="RestClient.cs", label="this.RemoveDefaultParameter(''Accept'')", span="209-209"];
m5_37 [cluster="RestSharp.RestClient.AddHandler(string, RestSharp.Deserializers.IDeserializer)", file="RestClient.cs", label="this.AddDefaultParameter(''Accept'', accepts, ParameterType.HttpHeader)", span="210-210"];
m5_38 [cluster="RestSharp.RestClient.AddHandler(string, RestSharp.Deserializers.IDeserializer)", file="RestClient.cs", label="Exit RestSharp.RestClient.AddHandler(string, RestSharp.Deserializers.IDeserializer)", span="199-199"];
m6_62 [cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="RestRequest.cs", label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0"];
m6_120 [cluster="string.Join(string, params string[])", file="RestRequest.cs", label="Entry string.Join(string, params string[])", span="0-0"];
m6_32 [cluster="System.IO.FileInfo.FileInfo(string)", file="RestRequest.cs", label="Entry System.IO.FileInfo.FileInfo(string)", span="0-0"];
m6_27 [cluster="RestSharp.RestRequest.AddFile(string, string, string)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddFile(string, string, string)", span="134-134"];
m6_28 [cluster="RestSharp.RestRequest.AddFile(string, string, string)", file="RestRequest.cs", label="FileInfo f = new FileInfo(path)", span="136-136"];
m6_30 [cluster="RestSharp.RestRequest.AddFile(string, string, string)", file="RestRequest.cs", label="return this.AddFile(new FileParameter\r\n                           {\r\n                               Name = name,\r\n                               \\nFileName = Path.GetFileName(path),\r\n                               ContentLength = fileLength,\r\n                               \\nWriter = s =>\r\n                                        {\r\n                                            using (StreamReader file = \\nnew StreamReader( new FileStream(path, FileMode.Open)))\r\n                                            {\r\n                                                \\nfile.BaseStream.CopyTo(s);\r\n                                            }\r\n                                        },\r\n                               \\nContentType = contentType\r\n                           });", span="139-152"];
m6_29 [cluster="RestSharp.RestRequest.AddFile(string, string, string)", file="RestRequest.cs", label="long fileLength = f.Length", span="137-137"];
m6_31 [cluster="RestSharp.RestRequest.AddFile(string, string, string)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddFile(string, string, string)", span="134-134"];
m6_164 [cluster="RestSharp.RestRequest.IncreaseNumAttempts()", file="RestRequest.cs", label="Entry RestSharp.RestRequest.IncreaseNumAttempts()", span="607-607"];
m6_165 [cluster="RestSharp.RestRequest.IncreaseNumAttempts()", file="RestRequest.cs", label="this.Attempts++", span="609-609"];
m6_166 [cluster="RestSharp.RestRequest.IncreaseNumAttempts()", file="RestRequest.cs", label="Exit RestSharp.RestRequest.IncreaseNumAttempts()", span="607-607"];
m6_115 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="RestRequest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0"];
m6_11 [cluster="RestSharp.Serializers.JsonSerializer.JsonSerializer()", file="RestRequest.cs", label="Entry RestSharp.Serializers.JsonSerializer.JsonSerializer()", span="12-12"];
m6_0 [cluster="RestSharp.RestRequest.RestRequest()", file="RestRequest.cs", label="Entry RestSharp.RestRequest.RestRequest()", span="69-69"];
m6_1 [cluster="RestSharp.RestRequest.RestRequest()", file="RestRequest.cs", label="this.RequestFormat = DataFormat.Xml", span="71-71"];
m6_2 [cluster="RestSharp.RestRequest.RestRequest()", file="RestRequest.cs", label="this.Method = Method.GET", span="72-72"];
m6_3 [cluster="RestSharp.RestRequest.RestRequest()", file="RestRequest.cs", label="this.Parameters = new List<Parameter>()", span="73-73"];
m6_4 [cluster="RestSharp.RestRequest.RestRequest()", file="RestRequest.cs", label="this.Files = new List<FileParameter>()", span="74-74"];
m6_5 [cluster="RestSharp.RestRequest.RestRequest()", file="RestRequest.cs", label="this.XmlSerializer = new XmlSerializer()", span="75-75"];
m6_6 [cluster="RestSharp.RestRequest.RestRequest()", file="RestRequest.cs", label="this.JsonSerializer = new JsonSerializer()", span="76-76"];
m6_7 [cluster="RestSharp.RestRequest.RestRequest()", file="RestRequest.cs", label="this.OnBeforeDeserialization = r => { }", span="78-78"];
m6_8 [cluster="RestSharp.RestRequest.RestRequest()", file="RestRequest.cs", label="Exit RestSharp.RestRequest.RestRequest()", span="69-69"];
m6_10 [cluster="RestSharp.Serializers.XmlSerializer.XmlSerializer()", file="RestRequest.cs", label="Entry RestSharp.Serializers.XmlSerializer.XmlSerializer()", span="37-37"];
m6_158 [cluster="RestSharp.RestRequest.AddUrlSegment(string, object)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddUrlSegment(string, object)", span="509-509"];
m6_159 [cluster="RestSharp.RestRequest.AddUrlSegment(string, object)", file="RestRequest.cs", label="return this.AddParameter(name, value, ParameterType.UrlSegment);", span="511-511"];
m6_160 [cluster="RestSharp.RestRequest.AddUrlSegment(string, object)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddUrlSegment(string, object)", span="509-509"];
m6_114 [cluster="System.Type.GetProperties()", file="RestRequest.cs", label="Entry System.Type.GetProperties()", span="0-0"];
m6_151 [cluster="System.Uri.CheckHostName(string)", file="RestRequest.cs", label="Entry System.Uri.CheckHostName(string)", span="0-0"];
m6_161 [cluster="RestSharp.RestRequest.AddQueryParameter(string, string)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddQueryParameter(string, string)", span="520-520"];
m6_162 [cluster="RestSharp.RestRequest.AddQueryParameter(string, string)", file="RestRequest.cs", label="return this.AddParameter(name, value, ParameterType.QueryString);", span="522-522"];
m6_163 [cluster="RestSharp.RestRequest.AddQueryParameter(string, string)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddQueryParameter(string, string)", span="520-520"];
m6_155 [cluster="RestSharp.RestRequest.AddUrlSegment(string, string)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddUrlSegment(string, string)", span="498-498"];
m6_156 [cluster="RestSharp.RestRequest.AddUrlSegment(string, string)", color=green, community=0, file="RestRequest.cs", label="return this.AddParameter(name, value, ParameterType.UrlSegment);", prediction=6, span="500-500"];
m6_157 [cluster="RestSharp.RestRequest.AddUrlSegment(string, string)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddUrlSegment(string, string)", span="498-498"];
m6_17 [cluster="RestSharp.RestRequest.RestRequest(string)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.RestRequest(string)", span="94-94"];
m6_18 [cluster="RestSharp.RestRequest.RestRequest(string)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.RestRequest(string)", span="94-94"];
m6_40 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="RestRequest.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m6_152 [cluster="RestSharp.RestRequest.AddCookie(string, string)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddCookie(string, string)", span="487-487"];
m6_153 [cluster="RestSharp.RestRequest.AddCookie(string, string)", color=green, community=0, file="RestRequest.cs", label="return this.AddParameter(name, value, ParameterType.Cookie);", prediction=6, span="489-489"];
m6_154 [cluster="RestSharp.RestRequest.AddCookie(string, string)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddCookie(string, string)", span="487-487"];
m6_9 [cluster="System.Collections.Generic.List<T>.List()", file="RestRequest.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m6_14 [cluster="RestSharp.RestRequest.RestRequest(RestSharp.Method)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.RestRequest(RestSharp.Method)", span="85-85"];
m6_15 [cluster="RestSharp.RestRequest.RestRequest(RestSharp.Method)", file="RestRequest.cs", label="this.Method = method", span="87-87"];
m6_16 [cluster="RestSharp.RestRequest.RestRequest(RestSharp.Method)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.RestRequest(RestSharp.Method)", span="85-85"];
m6_54 [cluster="RestSharp.RestRequest.AddFileBytes(string, byte[], string, string)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddFileBytes(string, byte[], string, string)", span="204-204"];
m6_55 [cluster="RestSharp.RestRequest.AddFileBytes(string, byte[], string, string)", file="RestRequest.cs", label="long length = bytes.Length", span="206-206"];
m6_56 [cluster="RestSharp.RestRequest.AddFileBytes(string, byte[], string, string)", file="RestRequest.cs", label="return this.AddFile(new FileParameter\r\n                                {\r\n                                    Name = name,\r\n                                    \\nFileName = filename,\r\n                                    ContentLength = length,\r\n                                    ContentType = \\ncontentType,\r\n                                    Writer = s =>\r\n                                             {\r\n                                                 \\nusing (StreamReader file = new StreamReader(new MemoryStream(bytes)))\r\n                                                 {\r\n                                                     \\nfile.BaseStream.CopyTo(s);\r\n                                                 }\r\n                                             }\r\n                                });", span="208-221"];
m6_57 [cluster="RestSharp.RestRequest.AddFileBytes(string, byte[], string, string)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddFileBytes(string, byte[], string, string)", span="204-204"];
m6_138 [cluster="RestSharp.RestRequest.AddHeader(string, string)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddHeader(string, string)", span="466-466"];
m6_143 [cluster="RestSharp.RestRequest.AddHeader(string, string)", color=green, community=0, file="RestRequest.cs", label="return this.AddParameter(name, value, ParameterType.HttpHeader);", prediction=6, span="478-478"];
m6_139 [cluster="RestSharp.RestRequest.AddHeader(string, string)", color=green, community=0, file="RestRequest.cs", label="string portSplit = @'':\d+''", prediction=9, span="469-469"];
m6_141 [cluster="RestSharp.RestRequest.AddHeader(string, string)", color=green, community=0, file="RestRequest.cs", label="name == ''Host'' && invalidHost(value)", prediction=6, span="473-473"];
m6_140 [cluster="RestSharp.RestRequest.AddHeader(string, string)", color=green, community=0, file="RestRequest.cs", label="Func<string, bool> invalidHost =\r\n                host => Uri.CheckHostName(Regex.Split(host, portSplit)[0]) == UriHostNameType.Unknown", prediction=9, span="470-471"];
m6_142 [cluster="RestSharp.RestRequest.AddHeader(string, string)", color=green, community=0, file="RestRequest.cs", label="throw new ArgumentException(''The specified value is not a valid Host header string.'', ''value'');", prediction=12, span="475-475"];
m6_144 [cluster="RestSharp.RestRequest.AddHeader(string, string)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddHeader(string, string)", span="466-466"];
m6_147 [cluster="lambda expression", file="RestRequest.cs", label="Entry lambda expression", span="471-471"];
m6_12 [cluster="lambda expression", file="RestRequest.cs", label="Entry lambda expression", span="78-78"];
m6_13 [cluster="lambda expression", file="RestRequest.cs", label="Exit lambda expression", span="78-78"];
m6_148 [cluster="lambda expression", color=green, community=0, file="RestRequest.cs", label="Uri.CheckHostName(Regex.Split(host, portSplit)[0]) == UriHostNameType.Unknown", prediction=9, span="471-471"];
m6_149 [cluster="lambda expression", file="RestRequest.cs", label="Exit lambda expression", span="471-471"];
m6_37 [cluster="lambda expression", file="RestRequest.cs", label="StreamReader file = new StreamReader( new FileStream(path, FileMode.Open))", span="146-146"];
m6_38 [cluster="lambda expression", file="RestRequest.cs", label="file.BaseStream.CopyTo(s)", span="148-148"];
m6_36 [cluster="lambda expression", file="RestRequest.cs", label="Entry lambda expression", span="144-150"];
m6_39 [cluster="lambda expression", file="RestRequest.cs", label="Exit lambda expression", span="144-150"];
m6_59 [cluster="lambda expression", file="RestRequest.cs", label="StreamReader file = new StreamReader(new MemoryStream(bytes))", span="216-216"];
m6_60 [cluster="lambda expression", file="RestRequest.cs", label="file.BaseStream.CopyTo(s)", span="218-218"];
m6_58 [cluster="lambda expression", file="RestRequest.cs", label="Entry lambda expression", span="214-220"];
m6_61 [cluster="lambda expression", file="RestRequest.cs", label="Exit lambda expression", span="214-220"];
m6_63 [cluster="RestSharp.RestRequest.AddBody(object, string)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddBody(object, string)", span="231-231"];
m6_64 [cluster="RestSharp.RestRequest.AddBody(object, string)", file="RestRequest.cs", label="string serialized", span="233-233"];
m6_68 [cluster="RestSharp.RestRequest.AddBody(object, string)", file="RestRequest.cs", label="serialized = this.JsonSerializer.Serialize(obj)", span="239-239"];
m6_71 [cluster="RestSharp.RestRequest.AddBody(object, string)", file="RestRequest.cs", label="this.XmlSerializer.Namespace = xmlNamespace", span="244-244"];
m6_72 [cluster="RestSharp.RestRequest.AddBody(object, string)", file="RestRequest.cs", label="serialized = this.XmlSerializer.Serialize(obj)", span="245-245"];
m6_65 [cluster="RestSharp.RestRequest.AddBody(object, string)", file="RestRequest.cs", label="string contentType", span="234-234"];
m6_66 [cluster="RestSharp.RestRequest.AddBody(object, string)", file="RestRequest.cs", label="this.RequestFormat", span="236-236"];
m6_67 [cluster="RestSharp.RestRequest.AddBody(object, string)", file="RestRequest.cs", label="DataFormat.Json", span="238-238"];
m6_70 [cluster="RestSharp.RestRequest.AddBody(object, string)", file="RestRequest.cs", label="DataFormat.Xml", span="243-243"];
m6_74 [cluster="RestSharp.RestRequest.AddBody(object, string)", file="RestRequest.cs", label="serialized = ''''", span="250-250"];
m6_69 [cluster="RestSharp.RestRequest.AddBody(object, string)", file="RestRequest.cs", label="contentType = this.JsonSerializer.ContentType", span="240-240"];
m6_76 [cluster="RestSharp.RestRequest.AddBody(object, string)", file="RestRequest.cs", label="return this.AddParameter(contentType, serialized, ParameterType.RequestBody);", span="258-258"];
m6_73 [cluster="RestSharp.RestRequest.AddBody(object, string)", file="RestRequest.cs", label="contentType = this.XmlSerializer.ContentType", span="246-246"];
m6_75 [cluster="RestSharp.RestRequest.AddBody(object, string)", file="RestRequest.cs", label="contentType = ''''", span="251-251"];
m6_77 [cluster="RestSharp.RestRequest.AddBody(object, string)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddBody(object, string)", span="231-231"];
m6_53 [cluster="System.Collections.Generic.List<T>.Add(T)", file="RestRequest.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m6_34 [cluster="System.IO.Path.GetFileName(string)", file="RestRequest.cs", label="Entry System.IO.Path.GetFileName(string)", span="0-0"];
m6_19 [cluster="RestSharp.RestRequest.RestRequest(string, RestSharp.Method)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.RestRequest(string, RestSharp.Method)", span="101-101"];
m6_20 [cluster="RestSharp.RestRequest.RestRequest(string, RestSharp.Method)", file="RestRequest.cs", label="this.Resource = resource", span="103-103"];
m6_21 [cluster="RestSharp.RestRequest.RestRequest(string, RestSharp.Method)", file="RestRequest.cs", label="this.Method = method", span="104-104"];
m6_22 [cluster="RestSharp.RestRequest.RestRequest(string, RestSharp.Method)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.RestRequest(string, RestSharp.Method)", span="101-101"];
m6_41 [cluster="System.IO.FileStream.FileStream(string, System.IO.FileMode)", file="RestRequest.cs", label="Entry System.IO.FileStream.FileStream(string, System.IO.FileMode)", span="0-0"];
m6_78 [cluster="RestSharp.Serializers.ISerializer.Serialize(object)", file="RestRequest.cs", label="Entry RestSharp.Serializers.ISerializer.Serialize(object)", span="22-22"];
m6_47 [cluster="RestSharp.RestRequest.AddFile(string, System.Action<System.IO.Stream>, string, long, string)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddFile(string, System.Action<System.IO.Stream>, string, long, string)", span="177-177"];
m6_48 [cluster="RestSharp.RestRequest.AddFile(string, System.Action<System.IO.Stream>, string, long, string)", file="RestRequest.cs", label="return this.AddFile(new FileParameter\r\n                                {\r\n                                    Name = name,\r\n                                    \\nWriter = writer,\r\n                                    FileName = fileName,\r\n                                    ContentLength = \\ncontentLength,\r\n                                    ContentType = contentType\r\n                                });", span="179-186"];
m6_49 [cluster="RestSharp.RestRequest.AddFile(string, System.Action<System.IO.Stream>, string, long, string)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddFile(string, System.Action<System.IO.Stream>, string, long, string)", span="177-177"];
m6_113 [cluster="object.GetType()", file="RestRequest.cs", label="Entry object.GetType()", span="0-0"];
m6_87 [cluster="RestSharp.RestRequest.AddXmlBody(object)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddXmlBody(object)", span="289-289"];
m6_88 [cluster="RestSharp.RestRequest.AddXmlBody(object)", file="RestRequest.cs", label="this.RequestFormat = DataFormat.Xml", span="291-291"];
m6_89 [cluster="RestSharp.RestRequest.AddXmlBody(object)", file="RestRequest.cs", label="return this.AddBody(obj, '''');", span="293-293"];
m6_90 [cluster="RestSharp.RestRequest.AddXmlBody(object)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddXmlBody(object)", span="289-289"];
m6_43 [cluster="RestSharp.RestRequest.AddFile(string, byte[], string, string)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddFile(string, byte[], string, string)", span="163-163"];
m6_44 [cluster="RestSharp.RestRequest.AddFile(string, byte[], string, string)", file="RestRequest.cs", label="return this.AddFile(FileParameter.Create(name, bytes, fileName, contentType));", span="165-165"];
m6_45 [cluster="RestSharp.RestRequest.AddFile(string, byte[], string, string)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddFile(string, byte[], string, string)", span="163-163"];
m6_91 [cluster="RestSharp.RestRequest.AddXmlBody(object, string)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddXmlBody(object, string)", span="303-303"];
m6_92 [cluster="RestSharp.RestRequest.AddXmlBody(object, string)", file="RestRequest.cs", label="this.RequestFormat = DataFormat.Xml", span="305-305"];
m6_93 [cluster="RestSharp.RestRequest.AddXmlBody(object, string)", file="RestRequest.cs", label="return this.AddBody(obj, xmlNamespace);", span="307-307"];
m6_94 [cluster="RestSharp.RestRequest.AddXmlBody(object, string)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddXmlBody(object, string)", span="303-303"];
m6_25 [cluster="RestSharp.RestRequest.RestRequest(System.Uri, RestSharp.Method)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.RestRequest(System.Uri, RestSharp.Method)", span="118-118"];
m6_26 [cluster="RestSharp.RestRequest.RestRequest(System.Uri, RestSharp.Method)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.RestRequest(System.Uri, RestSharp.Method)", span="118-118"];
m6_95 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddObject(object, params string[])", span="319-319"];
m6_96 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file="RestRequest.cs", label="Type type = obj.GetType()", span="322-322"];
m6_99 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file="RestRequest.cs", label="bool isAllowed = includedProperties.Length == 0 ||\r\n                                 (includedProperties.Length > 0 && includedProperties.Contains(\\nprop.Name))", span="327-328"];
m6_102 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file="RestRequest.cs", label="object val = prop.GetValue(obj, null)", span="336-336"];
m6_97 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file="RestRequest.cs", label="PropertyInfo[] props = type.GetProperties()", span="323-323"];
m6_98 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file="RestRequest.cs", label=props, span="325-325"];
m6_101 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file="RestRequest.cs", label="Type propType = prop.PropertyType", span="335-335"];
m6_110 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file="RestRequest.cs", label="this.AddParameter(prop.Name, val)", span="370-370"];
m6_111 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file="RestRequest.cs", label="return this;", span="373-373"];
m6_100 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file="RestRequest.cs", label="!isAllowed", span="330-330"];
m6_104 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file="RestRequest.cs", label="propType.IsArray", span="343-343"];
m6_105 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file="RestRequest.cs", label="Type elementType = propType.GetElementType()", span="345-345"];
m6_103 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file="RestRequest.cs", label="val == null", span="338-338"];
m6_106 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file="RestRequest.cs", label="((Array) val).Length > 0 &&\r\n                        elementType != null &&\r\n                        (elementType.IsPrimitive || \\nelementType.IsValueType || elementType == typeof(string))", span="348-350"];
m6_107 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file="RestRequest.cs", label="string[] values = (from object item in ((Array) val)\r\n                                           select item.ToString()).ToArray<\\nstring>()", span="358-359"];
m6_109 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file="RestRequest.cs", label="val = string.Join('','', (string[]) val)", span="366-366"];
m6_108 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file="RestRequest.cs", label="val = string.Join('','', values)", span="361-361"];
m6_112 [cluster="RestSharp.RestRequest.AddObject(object, params string[])", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddObject(object, params string[])", span="319-319"];
m6_146 [cluster="System.ArgumentException.ArgumentException(string, string)", file="RestRequest.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m6_126 [cluster="RestSharp.RestRequest.AddParameter(RestSharp.Parameter)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddParameter(RestSharp.Parameter)", span="393-393"];
m6_127 [cluster="RestSharp.RestRequest.AddParameter(RestSharp.Parameter)", file="RestRequest.cs", label="this.Parameters.Add(p)", span="395-395"];
m6_128 [cluster="RestSharp.RestRequest.AddParameter(RestSharp.Parameter)", file="RestRequest.cs", label="return this;", span="397-397"];
m6_129 [cluster="RestSharp.RestRequest.AddParameter(RestSharp.Parameter)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddParameter(RestSharp.Parameter)", span="393-393"];
m6_121 [cluster="RestSharp.RestRequest.AddParameter(string, object)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddParameter(string, object)", span="406-406"];
m6_130 [cluster="RestSharp.RestRequest.AddParameter(string, object)", file="RestRequest.cs", label="return this.AddParameter(new Parameter\r\n                                     {\r\n                                         Name = \\nname,\r\n                                         Value = value,\r\n                                         Type = ParameterType.GetOrPost\r\n                                     });", span="408-413"];
m6_131 [cluster="RestSharp.RestRequest.AddParameter(string, object)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddParameter(string, object)", span="406-406"];
m6_135 [cluster="RestSharp.RestRequest.AddParameter(string, object, string, RestSharp.ParameterType)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddParameter(string, object, string, RestSharp.ParameterType)", span="449-449"];
m6_136 [cluster="RestSharp.RestRequest.AddParameter(string, object, string, RestSharp.ParameterType)", file="RestRequest.cs", label="return this.AddParameter(new Parameter\r\n                                     {\r\n                                         Name = \\nname,\r\n                                         Value = value,\r\n                                         ContentType = contentType,\r\n                                         \\nType = type\r\n                                     });", span="451-457"];
m6_137 [cluster="RestSharp.RestRequest.AddParameter(string, object, string, RestSharp.ParameterType)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddParameter(string, object, string, RestSharp.ParameterType)", span="449-449"];
m6_150 [cluster="System.Text.RegularExpressions.Regex.Split(string, string)", file="RestRequest.cs", label="Entry System.Text.RegularExpressions.Regex.Split(string, string)", span="0-0"];
m6_35 [cluster="RestSharp.RestRequest.AddFile(RestSharp.FileParameter)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddFile(RestSharp.FileParameter)", span="189-189"];
m6_50 [cluster="RestSharp.RestRequest.AddFile(RestSharp.FileParameter)", file="RestRequest.cs", label="this.Files.Add(file)", span="191-191"];
m6_51 [cluster="RestSharp.RestRequest.AddFile(RestSharp.FileParameter)", file="RestRequest.cs", label="return this;", span="193-193"];
m6_52 [cluster="RestSharp.RestRequest.AddFile(RestSharp.FileParameter)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddFile(RestSharp.FileParameter)", span="189-189"];
m6_145 [cluster="System.Func<T, TResult>.Invoke(T)", file="RestRequest.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m6_33 [cluster="RestSharp.FileParameter.FileParameter()", file="RestRequest.cs", label="Entry RestSharp.FileParameter.FileParameter()", span="8-8"];
m6_80 [cluster="RestSharp.RestRequest.AddBody(object)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddBody(object)", span="267-267"];
m6_81 [cluster="RestSharp.RestRequest.AddBody(object)", file="RestRequest.cs", label="return this.AddBody(obj, '''');", span="269-269"];
m6_82 [cluster="RestSharp.RestRequest.AddBody(object)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddBody(object)", span="267-267"];
m6_116 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="RestRequest.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
m6_122 [cluster="RestSharp.RestRequest.AddObject(object)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddObject(object)", span="381-381"];
m6_123 [cluster="RestSharp.RestRequest.AddObject(object)", file="RestRequest.cs", label="this.AddObject(obj, new string[] { })", span="383-383"];
m6_124 [cluster="RestSharp.RestRequest.AddObject(object)", file="RestRequest.cs", label="return this;", span="385-385"];
m6_125 [cluster="RestSharp.RestRequest.AddObject(object)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddObject(object)", span="381-381"];
m6_83 [cluster="RestSharp.RestRequest.AddJsonBody(object)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddJsonBody(object)", span="277-277"];
m6_84 [cluster="RestSharp.RestRequest.AddJsonBody(object)", file="RestRequest.cs", label="this.RequestFormat = DataFormat.Json", span="279-279"];
m6_85 [cluster="RestSharp.RestRequest.AddJsonBody(object)", file="RestRequest.cs", label="return this.AddBody(obj, '''');", span="281-281"];
m6_86 [cluster="RestSharp.RestRequest.AddJsonBody(object)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddJsonBody(object)", span="277-277"];
m6_118 [cluster="object.ToString()", file="RestRequest.cs", label="Entry object.ToString()", span="0-0"];
m6_79 [cluster="RestSharp.RestRequest.AddParameter(string, object, RestSharp.ParameterType)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.AddParameter(string, object, RestSharp.ParameterType)", span="427-427"];
m6_133 [cluster="RestSharp.RestRequest.AddParameter(string, object, RestSharp.ParameterType)", file="RestRequest.cs", label="return this.AddParameter(new Parameter\r\n                                     {\r\n                                         Name = \\nname,\r\n                                         Value = value,\r\n                                         Type = type\r\n                                     });", span="429-434"];
m6_134 [cluster="RestSharp.RestRequest.AddParameter(string, object, RestSharp.ParameterType)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.AddParameter(string, object, RestSharp.ParameterType)", span="427-427"];
m6_46 [cluster="RestSharp.FileParameter.Create(string, byte[], string, string)", file="RestRequest.cs", label="Entry RestSharp.FileParameter.Create(string, byte[], string, string)", span="18-18"];
m6_132 [cluster="RestSharp.Parameter.Parameter()", file="RestRequest.cs", label="Entry RestSharp.Parameter.Parameter()", span="23-23"];
m6_42 [cluster="System.IO.Stream.CopyTo(System.IO.Stream)", file="RestRequest.cs", label="Entry System.IO.Stream.CopyTo(System.IO.Stream)", span="0-0"];
m6_23 [cluster="RestSharp.RestRequest.RestRequest(System.Uri)", file="RestRequest.cs", label="Entry RestSharp.RestRequest.RestRequest(System.Uri)", span="111-111"];
m6_24 [cluster="RestSharp.RestRequest.RestRequest(System.Uri)", file="RestRequest.cs", label="Exit RestSharp.RestRequest.RestRequest(System.Uri)", span="111-111"];
m6_117 [cluster="System.Type.GetElementType()", file="RestRequest.cs", label="Entry System.Type.GetElementType()", span="0-0"];
m7_13 [cluster="RestSharp.RestResponse<T>.RestResponse()", file="RestResponse.cs", label="Entry RestSharp.RestResponse<T>.RestResponse()", span="150-150"];
m7_6 [cluster="RestSharp.RestResponseBase.DebuggerDisplay()", file="RestResponse.cs", label="Entry RestSharp.RestResponseBase.DebuggerDisplay()", span="138-138"];
m7_7 [cluster="RestSharp.RestResponseBase.DebuggerDisplay()", file="RestResponse.cs", label="return string.Format(''StatusCode: {0}, Content-Type: {1}, Content-Length: {2})'',\r\n                this.StatusCode, this.ContentType, \\nthis.ContentLength);", span="140-141"];
m7_8 [cluster="RestSharp.RestResponseBase.DebuggerDisplay()", file="RestResponse.cs", label="Exit RestSharp.RestResponseBase.DebuggerDisplay()", span="138-138"];
m7_10 [cluster="RestSharp.RestResponse<T>.explicit operator RestSharp.RestResponse<T>(RestSharp.RestResponse)", file="RestResponse.cs", label="Entry RestSharp.RestResponse<T>.explicit operator RestSharp.RestResponse<T>(RestSharp.RestResponse)", span="157-157"];
m7_11 [cluster="RestSharp.RestResponse<T>.explicit operator RestSharp.RestResponse<T>(RestSharp.RestResponse)", file="RestResponse.cs", label="return new RestResponse<T>\r\n                   {\r\n                       ContentEncoding = response.ContentEncoding,\r\n                       \\nContentLength = response.ContentLength,\r\n                       ContentType = response.ContentType,\r\n                       \\nCookies = response.Cookies,\r\n                       ErrorMessage = response.ErrorMessage,\r\n                       ErrorException = \\nresponse.ErrorException,\r\n                       Headers = response.Headers,\r\n                       RawBytes = response.RawBytes,\r\n                       \\nResponseStatus = response.ResponseStatus,\r\n                       ResponseUri = response.ResponseUri,\r\n                       \\nProtocolVersion = response.ProtocolVersion,\r\n                       Server = response.Server,\r\n                       StatusCode = \\nresponse.StatusCode,\r\n                       StatusDescription = response.StatusDescription,\r\n                       Request = \\nresponse.Request\r\n                   };", span="159-176"];
m7_12 [cluster="RestSharp.RestResponse<T>.explicit operator RestSharp.RestResponse<T>(RestSharp.RestResponse)", file="RestResponse.cs", label="Exit RestSharp.RestResponse<T>.explicit operator RestSharp.RestResponse<T>(RestSharp.RestResponse)", span="157-157"];
m7_0 [cluster="RestSharp.RestResponseBase.RestResponseBase()", file="RestResponse.cs", label="Entry RestSharp.RestResponseBase.RestResponseBase()", span="38-38"];
m7_1 [cluster="RestSharp.RestResponseBase.RestResponseBase()", file="RestResponse.cs", label="this.ResponseStatus = ResponseStatus.None", span="40-40"];
m7_2 [cluster="RestSharp.RestResponseBase.RestResponseBase()", file="RestResponse.cs", label="this.Headers = new List<Parameter>()", span="41-41"];
m7_3 [cluster="RestSharp.RestResponseBase.RestResponseBase()", file="RestResponse.cs", label="this.Cookies = new List<RestResponseCookie>()", span="42-42"];
m7_4 [cluster="RestSharp.RestResponseBase.RestResponseBase()", file="RestResponse.cs", label="Exit RestSharp.RestResponseBase.RestResponseBase()", span="38-38"];
m7_9 [cluster="string.Format(string, object, object, object)", file="RestResponse.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m7_5 [cluster="System.Collections.Generic.List<T>.List()", file="RestResponse.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m8_45 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_Default_Root_Element_On_No_Error()", file="StatusCodeTests.cs", label="Entry RestSharp.IntegrationTests.StatusCodeTests.Handles_Default_Root_Element_On_No_Error()", span="78-78"];
m8_46 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_Default_Root_Element_On_No_Error()", file="StatusCodeTests.cs", label="Uri baseUrl = new Uri(''http://localhost:8888/'')", span="80-80"];
m8_47 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_Default_Root_Element_On_No_Error()", file="StatusCodeTests.cs", label="SimpleServer.Create(baseUrl.AbsoluteUri, Handlers.Generic<ResponseHandler>())", span="82-82"];
m8_48 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_Default_Root_Element_On_No_Error()", file="StatusCodeTests.cs", label="RestClient client = new RestClient(baseUrl)", span="84-84"];
m8_49 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_Default_Root_Element_On_No_Error()", file="StatusCodeTests.cs", label="RestRequest request = new RestRequest(''success'')\r\n                                      {\r\n                                          \\nRootElement = ''Success''\r\n                                      }", span="85-88"];
m8_51 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_Default_Root_Element_On_No_Error()", file="StatusCodeTests.cs", label="IRestResponse<Response> response = client.Execute<Response>(request)", span="98-98"];
m8_50 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_Default_Root_Element_On_No_Error()", file="StatusCodeTests.cs", label="request.OnBeforeDeserialization = resp =>\r\n                                                  {\r\n                                                      \\nif (resp.StatusCode == HttpStatusCode.NotFound)\r\n                                                      {\r\n                                                          \\nrequest.RootElement = ''Error'';\r\n                                                      }\r\n                                                  }", span="90-96"];
m8_52 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_Default_Root_Element_On_No_Error()", file="StatusCodeTests.cs", label="Assert.AreEqual(HttpStatusCode.OK, response.StatusCode)", span="100-100"];
m8_53 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_Default_Root_Element_On_No_Error()", file="StatusCodeTests.cs", label="Assert.AreEqual(''Works!'', response.Data.Message)", span="101-101"];
m8_54 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_Default_Root_Element_On_No_Error()", file="StatusCodeTests.cs", label="Exit RestSharp.IntegrationTests.StatusCodeTests.Handles_Default_Root_Element_On_No_Error()", span="78-78"];
m8_27 [cluster="System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", file="StatusCodeTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", span="0-0"];
m8_28 [cluster="int.Parse(string)", file="StatusCodeTests.cs", label="Entry int.Parse(string)", span="0-0"];
m8_39 [cluster="RestSharp.IntegrationTests.Helpers.Handlers.Generic<T>()", file="StatusCodeTests.cs", label="Entry RestSharp.IntegrationTests.Helpers.Handlers.Generic<T>()", span="59-59"];
m8_10 [cluster="RestSharp.RestClient.RestClient(System.Uri)", file="StatusCodeTests.cs", label="Entry RestSharp.RestClient.RestClient(System.Uri)", span="165-165"];
m8_9 [cluster="RestSharp.IntegrationTests.Helpers.SimpleServer.Create(string, System.Action<System.Net.HttpListenerContext>, System.Net.AuthenticationSchemes)", file="StatusCodeTests.cs", label="Entry RestSharp.IntegrationTests.Helpers.SimpleServer.Create(string, System.Action<System.Net.HttpListenerContext>, System.Net.AuthenticationSchemes)", span="21-21"];
m8_59 [cluster="RestSharp.IntegrationTests.ResponseHandler.error(System.Net.HttpListenerContext)", file="StatusCodeTests.cs", label="Entry RestSharp.IntegrationTests.ResponseHandler.error(System.Net.HttpListenerContext)", span="108-108"];
m8_60 [cluster="RestSharp.IntegrationTests.ResponseHandler.error(System.Net.HttpListenerContext)", color=green, community=0, file="StatusCodeTests.cs", label="context.Response.StatusCode = 400", prediction=14, span="110-110"];
m8_61 [cluster="RestSharp.IntegrationTests.ResponseHandler.error(System.Net.HttpListenerContext)", color=green, community=0, file="StatusCodeTests.cs", label="context.Response.Headers.Add(''Content-Type'', ''application/xml'')", prediction=15, span="111-111"];
m8_62 [cluster="RestSharp.IntegrationTests.ResponseHandler.error(System.Net.HttpListenerContext)", color=green, community=0, file="StatusCodeTests.cs", label="context.Response.OutputStream.WriteStringUtf8(\r\n                @''<?xml version=''''1.0'''' encoding=''''utf-8'''' ?>\r\n<Response>\r\n    <\\nError>\r\n        <Message>Not found!</Message>\r\n    </Error>\r\n</Response>'')", prediction=15, span="112-118"];
m8_63 [cluster="RestSharp.IntegrationTests.ResponseHandler.error(System.Net.HttpListenerContext)", file="StatusCodeTests.cs", label="Exit RestSharp.IntegrationTests.ResponseHandler.error(System.Net.HttpListenerContext)", span="108-108"];
m8_65 [cluster="System.IO.Stream.WriteStringUtf8(string)", file="StatusCodeTests.cs", label="Entry System.IO.Stream.WriteStringUtf8(string)", span="7-7"];
m8_29 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_Different_Root_Element_On_Http_Error()", file="StatusCodeTests.cs", label="Entry RestSharp.IntegrationTests.StatusCodeTests.Handles_Different_Root_Element_On_Http_Error()", span="50-50"];
m8_30 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_Different_Root_Element_On_Http_Error()", file="StatusCodeTests.cs", label="Uri baseUrl = new Uri(''http://localhost:8888/'')", span="52-52"];
m8_31 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_Different_Root_Element_On_Http_Error()", file="StatusCodeTests.cs", label="SimpleServer.Create(baseUrl.AbsoluteUri, Handlers.Generic<ResponseHandler>())", span="54-54"];
m8_32 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_Different_Root_Element_On_Http_Error()", file="StatusCodeTests.cs", label="RestClient client = new RestClient(baseUrl)", span="56-56"];
m8_33 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_Different_Root_Element_On_Http_Error()", file="StatusCodeTests.cs", label="RestRequest request = new RestRequest(''error'')\r\n                                      {\r\n                                          \\nRootElement = ''Success''\r\n                                      }", span="57-60"];
m8_35 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_Different_Root_Element_On_Http_Error()", file="StatusCodeTests.cs", label="IRestResponse<Response> response = client.Execute<Response>(request)", span="70-70"];
m8_34 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_Different_Root_Element_On_Http_Error()", file="StatusCodeTests.cs", label="request.OnBeforeDeserialization = resp =>\r\n                                                  {\r\n                                                      \\nif (resp.StatusCode == HttpStatusCode.BadRequest)\r\n                                                      {\r\n                                                          \\nrequest.RootElement = ''Error'';\r\n                                                      }\r\n                                                  }", span="62-68"];
m8_36 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_Different_Root_Element_On_Http_Error()", file="StatusCodeTests.cs", label="Assert.AreEqual(HttpStatusCode.BadRequest, response.StatusCode)", span="72-72"];
m8_37 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_Different_Root_Element_On_Http_Error()", file="StatusCodeTests.cs", label="Assert.AreEqual(''Not found!'', response.Data.Message)", span="73-73"];
m8_38 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_Different_Root_Element_On_Http_Error()", file="StatusCodeTests.cs", label="Exit RestSharp.IntegrationTests.StatusCodeTests.Handles_Different_Root_Element_On_Http_Error()", span="50-50"];
m8_8 [cluster="System.Uri.Uri(string)", file="StatusCodeTests.cs", label="Entry System.Uri.Uri(string)", span="0-0"];
m8_66 [cluster="RestSharp.IntegrationTests.ResponseHandler.errorwithbody(System.Net.HttpListenerContext)", file="StatusCodeTests.cs", label="Entry RestSharp.IntegrationTests.ResponseHandler.errorwithbody(System.Net.HttpListenerContext)", span="121-121"];
m8_67 [cluster="RestSharp.IntegrationTests.ResponseHandler.errorwithbody(System.Net.HttpListenerContext)", color=green, community=0, file="StatusCodeTests.cs", label="context.Response.StatusCode = 400", prediction=17, span="123-123"];
m8_68 [cluster="RestSharp.IntegrationTests.ResponseHandler.errorwithbody(System.Net.HttpListenerContext)", color=green, community=0, file="StatusCodeTests.cs", label="context.Response.Headers.Add(''Content-Type'', ''application/xml'')", prediction=18, span="124-124"];
m8_69 [cluster="RestSharp.IntegrationTests.ResponseHandler.errorwithbody(System.Net.HttpListenerContext)", color=green, community=0, file="StatusCodeTests.cs", label="context.Response.OutputStream.WriteStringUtf8(\r\n                @''<?xml version=''''1.0'''' encoding=''''utf-8'''' ?>\r\n<Response>\r\n    <\\nError>\r\n        <Message>Not found!</Message>\r\n    </Error>\r\n</Response>'')", prediction=18, span="125-131"];
m8_70 [cluster="RestSharp.IntegrationTests.ResponseHandler.errorwithbody(System.Net.HttpListenerContext)", file="StatusCodeTests.cs", label="Exit RestSharp.IntegrationTests.ResponseHandler.errorwithbody(System.Net.HttpListenerContext)", span="121-121"];
m8_11 [cluster="RestSharp.RestRequest.RestRequest(string)", file="StatusCodeTests.cs", label="Entry RestSharp.RestRequest.RestRequest(string)", span="94-94"];
m8_64 [cluster="System.Net.WebHeaderCollection.Add(string, string)", file="StatusCodeTests.cs", label="Entry System.Net.WebHeaderCollection.Add(string, string)", span="0-0"];
m8_23 [cluster="RestSharp.RestRequest.AddBody(object)", file="StatusCodeTests.cs", label="Entry RestSharp.RestRequest.AddBody(object)", span="267-267"];
m8_0 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_GET_Request_404_Error()", file="StatusCodeTests.cs", label="Entry RestSharp.IntegrationTests.StatusCodeTests.Handles_GET_Request_404_Error()", span="12-12"];
m8_1 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_GET_Request_404_Error()", file="StatusCodeTests.cs", label="Uri baseUrl = new Uri(''http://localhost:8080/'')", span="14-14"];
m8_2 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_GET_Request_404_Error()", file="StatusCodeTests.cs", label="SimpleServer.Create(baseUrl.AbsoluteUri, UrlToStatusCodeHandler)", span="16-16"];
m8_3 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_GET_Request_404_Error()", file="StatusCodeTests.cs", label="RestClient client = new RestClient(baseUrl)", span="18-18"];
m8_4 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_GET_Request_404_Error()", file="StatusCodeTests.cs", label="RestRequest request = new RestRequest(''404'')", span="19-19"];
m8_5 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_GET_Request_404_Error()", file="StatusCodeTests.cs", label="IRestResponse response = client.Execute(request)", span="20-20"];
m8_6 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_GET_Request_404_Error()", file="StatusCodeTests.cs", label="Assert.AreEqual(HttpStatusCode.NotFound, response.StatusCode)", span="22-22"];
m8_7 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_GET_Request_404_Error()", file="StatusCodeTests.cs", label="Exit RestSharp.IntegrationTests.StatusCodeTests.Handles_GET_Request_404_Error()", span="12-12"];
m8_71 [cluster="RestSharp.IntegrationTests.ResponseHandler.success(System.Net.HttpListenerContext)", file="StatusCodeTests.cs", label="Entry RestSharp.IntegrationTests.ResponseHandler.success(System.Net.HttpListenerContext)", span="134-134"];
m8_72 [cluster="RestSharp.IntegrationTests.ResponseHandler.success(System.Net.HttpListenerContext)", color=green, community=0, file="StatusCodeTests.cs", label="context.Response.OutputStream.WriteStringUtf8(\r\n                @''<?xml version=''''1.0'''' encoding=''''utf-8'''' ?>\r\n<Response>\r\n    <\\nSuccess>\r\n        <Message>Works!</Message>\r\n    </Success>\r\n</Response>'')", prediction=20, span="136-142"];
m8_73 [cluster="RestSharp.IntegrationTests.ResponseHandler.success(System.Net.HttpListenerContext)", file="StatusCodeTests.cs", label="Exit RestSharp.IntegrationTests.ResponseHandler.success(System.Net.HttpListenerContext)", span="134-134"];
m8_14 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_GET_Request_404_Error_With_Body()", file="StatusCodeTests.cs", label="Entry RestSharp.IntegrationTests.StatusCodeTests.Handles_GET_Request_404_Error_With_Body()", span="27-27"];
m8_15 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_GET_Request_404_Error_With_Body()", file="StatusCodeTests.cs", label="Uri baseUrl = new Uri(''http://localhost:8080/'')", span="29-29"];
m8_16 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_GET_Request_404_Error_With_Body()", file="StatusCodeTests.cs", label="SimpleServer.Create(baseUrl.AbsoluteUri, UrlToStatusCodeHandler)", span="31-31"];
m8_17 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_GET_Request_404_Error_With_Body()", file="StatusCodeTests.cs", label="RestClient client = new RestClient(baseUrl)", span="33-33"];
m8_18 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_GET_Request_404_Error_With_Body()", file="StatusCodeTests.cs", label="RestRequest request = new RestRequest(''404'')", span="34-34"];
m8_20 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_GET_Request_404_Error_With_Body()", file="StatusCodeTests.cs", label="IRestResponse response = client.Execute(request)", span="38-38"];
m8_19 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_GET_Request_404_Error_With_Body()", file="StatusCodeTests.cs", label="request.AddBody(''This is the body'')", span="36-36"];
m8_21 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_GET_Request_404_Error_With_Body()", file="StatusCodeTests.cs", label="Assert.AreEqual(HttpStatusCode.NotFound, response.StatusCode)", span="40-40"];
m8_22 [cluster="RestSharp.IntegrationTests.StatusCodeTests.Handles_GET_Request_404_Error_With_Body()", file="StatusCodeTests.cs", label="Exit RestSharp.IntegrationTests.StatusCodeTests.Handles_GET_Request_404_Error_With_Body()", span="27-27"];
m8_24 [cluster="RestSharp.IntegrationTests.StatusCodeTests.UrlToStatusCodeHandler(System.Net.HttpListenerContext)", file="StatusCodeTests.cs", label="Entry RestSharp.IntegrationTests.StatusCodeTests.UrlToStatusCodeHandler(System.Net.HttpListenerContext)", span="44-44"];
m8_25 [cluster="RestSharp.IntegrationTests.StatusCodeTests.UrlToStatusCodeHandler(System.Net.HttpListenerContext)", file="StatusCodeTests.cs", label="obj.Response.StatusCode = int.Parse(obj.Request.Url.Segments.Last())", span="46-46"];
m8_26 [cluster="RestSharp.IntegrationTests.StatusCodeTests.UrlToStatusCodeHandler(System.Net.HttpListenerContext)", file="StatusCodeTests.cs", label="Exit RestSharp.IntegrationTests.StatusCodeTests.UrlToStatusCodeHandler(System.Net.HttpListenerContext)", span="44-44"];
m8_55 [cluster="lambda expression", file="StatusCodeTests.cs", label="Entry lambda expression", span="90-96"];
m8_43 [cluster="lambda expression", file="StatusCodeTests.cs", label="request.RootElement = ''Error''", span="66-66"];
m8_42 [cluster="lambda expression", file="StatusCodeTests.cs", label="resp.StatusCode == HttpStatusCode.BadRequest", span="64-64"];
m8_41 [cluster="lambda expression", file="StatusCodeTests.cs", label="Entry lambda expression", span="62-68"];
m8_44 [cluster="lambda expression", file="StatusCodeTests.cs", label="Exit lambda expression", span="62-68"];
m8_57 [cluster="lambda expression", file="StatusCodeTests.cs", label="request.RootElement = ''Error''", span="94-94"];
m8_56 [cluster="lambda expression", file="StatusCodeTests.cs", label="resp.StatusCode == HttpStatusCode.NotFound", span="92-92"];
m8_58 [cluster="lambda expression", file="StatusCodeTests.cs", label="Exit lambda expression", span="90-96"];
m9_163 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_and_resource_containing_tokens()", span="250-250"];
m9_164 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest(''resource/{baz}'')", span="252-252"];
m9_165 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="request.AddUrlSegment(''foo'', ''bar'')", span="254-254"];
m9_166 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="request.AddUrlSegment(''baz'', ''bat'')", span="255-255"];
m9_169 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="259-259"];
m9_167 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(''http://example.com/{foo}'')", span="257-257"];
m9_168 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/bar/resource/bat'')", span="258-258"];
m9_170 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="261-261"];
m9_171 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_and_resource_containing_tokens()", span="250-250"];
m9_22 [cluster="RestSharp.RestClient.RestClient(System.Uri)", file="UrlBuilderTests.cs", label="Entry RestSharp.RestClient.RestClient(System.Uri)", span="165-165"];
m9_8 [cluster="RestSharp.RestRequest.RestRequest()", file="UrlBuilderTests.cs", label="Entry RestSharp.RestRequest.RestRequest()", span="69-69"];
m9_49 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash_and_baseurl_trailing_slash()", span="78-78"];
m9_50 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest(''/resource'', Method.POST)", span="80-80"];
m9_51 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(new Uri(''http://example.com''))", span="81-81"];
m9_53 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="83-83"];
m9_52 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/resource'')", span="82-82"];
m9_54 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="85-85"];
m9_55 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash_and_baseurl_trailing_slash()", span="78-78"];
m9_172 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Invalid_Url_string_throws_exception()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_Invalid_Url_string_throws_exception()", span="265-265"];
m9_173 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Invalid_Url_string_throws_exception()", file="UrlBuilderTests.cs", label="Assert.Throws<UriFormatException>(delegate { new RestClient(''invalid url''); })", span="267-267"];
m9_174 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Invalid_Url_string_throws_exception()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_Invalid_Url_string_throws_exception()", span="265-265"];
m9_39 [cluster="RestSharp.Tests.UrlBuilderTests.GET_wth_trailing_slash_and_query_parameters()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.GET_wth_trailing_slash_and_query_parameters()", span="62-62"];
m9_40 [cluster="RestSharp.Tests.UrlBuilderTests.GET_wth_trailing_slash_and_query_parameters()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest(''/resource/'')", span="64-64"];
m9_41 [cluster="RestSharp.Tests.UrlBuilderTests.GET_wth_trailing_slash_and_query_parameters()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(''http://example.com'')", span="65-65"];
m9_42 [cluster="RestSharp.Tests.UrlBuilderTests.GET_wth_trailing_slash_and_query_parameters()", file="UrlBuilderTests.cs", label="request.AddParameter(''foo'', ''bar'')", span="67-67"];
m9_44 [cluster="RestSharp.Tests.UrlBuilderTests.GET_wth_trailing_slash_and_query_parameters()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="70-70"];
m9_45 [cluster="RestSharp.Tests.UrlBuilderTests.GET_wth_trailing_slash_and_query_parameters()", file="UrlBuilderTests.cs", label="client.Execute(request)", span="72-72"];
m9_43 [cluster="RestSharp.Tests.UrlBuilderTests.GET_wth_trailing_slash_and_query_parameters()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/resource/?foo=bar'')", span="69-69"];
m9_46 [cluster="RestSharp.Tests.UrlBuilderTests.GET_wth_trailing_slash_and_query_parameters()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="74-74"];
m9_47 [cluster="RestSharp.Tests.UrlBuilderTests.GET_wth_trailing_slash_and_query_parameters()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.GET_wth_trailing_slash_and_query_parameters()", span="62-62"];
m9_21 [cluster="RestSharp.RestRequest.RestRequest(string)", file="UrlBuilderTests.cs", label="Entry RestSharp.RestRequest.RestRequest(string)", span="94-94"];
m9_78 [cluster="RestSharp.RestRequest.AddUrlSegment(string, string)", file="UrlBuilderTests.cs", label="Entry RestSharp.RestRequest.AddUrlSegment(string, string)", span="498-498"];
m9_118 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_querystring_containing_tokens()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.POST_with_querystring_containing_tokens()", span="176-176"];
m9_119 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_querystring_containing_tokens()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest(''resource'', Method.POST)", span="178-178"];
m9_120 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_querystring_containing_tokens()", file="UrlBuilderTests.cs", label="request.AddParameter(''foo'', ''bar'', ParameterType.QueryString)", span="180-180"];
m9_123 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_querystring_containing_tokens()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="184-184"];
m9_121 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_querystring_containing_tokens()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(''http://example.com'')", span="182-182"];
m9_122 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_querystring_containing_tokens()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/resource?foo=bar'')", span="183-183"];
m9_124 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_querystring_containing_tokens()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="186-186"];
m9_125 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_querystring_containing_tokens()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.POST_with_querystring_containing_tokens()", span="176-176"];
m9_175 [cluster="lambda expression", file="UrlBuilderTests.cs", label="Entry lambda expression", span="267-267"];
m9_94 [cluster="lambda expression", file="UrlBuilderTests.cs", label="client.BuildUri(request)", span="132-132"];
m9_93 [cluster="lambda expression", file="UrlBuilderTests.cs", label="Entry lambda expression", span="132-132"];
m9_95 [cluster="lambda expression", file="UrlBuilderTests.cs", label="Exit lambda expression", span="132-132"];
m9_176 [cluster="lambda expression", file="UrlBuilderTests.cs", label="new RestClient(''invalid url'')", span="267-267"];
m9_177 [cluster="lambda expression", file="UrlBuilderTests.cs", label="Exit lambda expression", span="267-267"];
m9_10 [cluster="RestSharp.RestClient.RestClient(string)", file="UrlBuilderTests.cs", label="Entry RestSharp.RestClient.RestClient(string)", span="174-174"];
m9_0 [cluster="RestSharp.Tests.UrlBuilderTests.Should_not_duplicate_question_mark()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.Should_not_duplicate_question_mark()", span="12-12"];
m9_1 [cluster="RestSharp.Tests.UrlBuilderTests.Should_not_duplicate_question_mark()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest()", span="14-14"];
m9_2 [cluster="RestSharp.Tests.UrlBuilderTests.Should_not_duplicate_question_mark()", file="UrlBuilderTests.cs", label="request.AddParameter(''param2'', ''value2'')", span="16-16"];
m9_5 [cluster="RestSharp.Tests.UrlBuilderTests.Should_not_duplicate_question_mark()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="20-20"];
m9_3 [cluster="RestSharp.Tests.UrlBuilderTests.Should_not_duplicate_question_mark()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(''http://example.com/resource?param1=value1'')", span="18-18"];
m9_4 [cluster="RestSharp.Tests.UrlBuilderTests.Should_not_duplicate_question_mark()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/resource?param1=value1&param2=value2'')", span="19-19"];
m9_6 [cluster="RestSharp.Tests.UrlBuilderTests.Should_not_duplicate_question_mark()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="22-22"];
m9_7 [cluster="RestSharp.Tests.UrlBuilderTests.Should_not_duplicate_question_mark()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.Should_not_duplicate_question_mark()", span="12-12"];
m9_104 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_empty_request()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_empty_request()", span="154-154"];
m9_105 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_empty_request()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest()", span="156-156"];
m9_106 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_empty_request()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(new Uri(''http://example.com''))", span="157-157"];
m9_108 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_empty_request()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="159-159"];
m9_107 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_empty_request()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/'')", span="158-158"];
m9_109 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_empty_request()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="161-161"];
m9_110 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_empty_request()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_empty_request()", span="154-154"];
m9_12 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="UrlBuilderTests.cs", label="Entry RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", span="313-313"];
m9_30 [cluster="RestSharp.RestRequest.RestRequest(string, RestSharp.Method)", file="UrlBuilderTests.cs", label="Entry RestSharp.RestRequest.RestRequest(string, RestSharp.Method)", span="101-101"];
m9_63 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_slashes()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_slashes()", span="100-100"];
m9_64 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_slashes()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest(''resource/foo'', Method.POST)", span="102-102"];
m9_65 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_slashes()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(new Uri(''http://example.com''))", span="103-103"];
m9_67 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_slashes()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="105-105"];
m9_66 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_slashes()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/resource/foo'')", span="104-104"];
m9_68 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_slashes()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="107-107"];
m9_69 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_slashes()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_slashes()", span="100-100"];
m9_14 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash()", span="26-26"];
m9_15 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest(''/resource'')", span="28-28"];
m9_16 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(new Uri(''http://example.com''))", span="29-29"];
m9_18 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="31-31"];
m9_17 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/resource'')", span="30-30"];
m9_19 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="33-33"];
m9_20 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash()", span="26-26"];
m9_111 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_empty_request_and_bare_hostname()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_empty_request_and_bare_hostname()", span="165-165"];
m9_112 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_empty_request_and_bare_hostname()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest()", span="167-167"];
m9_113 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_empty_request_and_bare_hostname()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(new Uri(''http://example.com''))", span="168-168"];
m9_115 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_empty_request_and_bare_hostname()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="170-170"];
m9_114 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_empty_request_and_bare_hostname()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/'')", span="169-169"];
m9_116 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_empty_request_and_bare_hostname()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="172-172"];
m9_117 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_empty_request_and_bare_hostname()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_empty_request_and_bare_hostname()", span="165-165"];
m9_154 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_Uri_and_resource_containing_tokens()", span="235-235"];
m9_155 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest(''resource/{baz}'')", span="237-237"];
m9_156 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="request.AddUrlSegment(''foo'', ''bar'')", span="239-239"];
m9_157 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="request.AddUrlSegment(''baz'', ''bat'')", span="240-240"];
m9_160 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="244-244"];
m9_158 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(new Uri(''http://example.com/{foo}''))", span="242-242"];
m9_159 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/bar/resource/bat'')", span="243-243"];
m9_161 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="246-246"];
m9_162 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_Uri_and_resource_containing_tokens()", span="235-235"];
m9_96 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_tokens()", span="140-140"];
m9_97 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest(''resource/{foo}'', Method.POST)", span="142-142"];
m9_98 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="request.AddUrlSegment(''foo'', ''bar'')", span="144-144"];
m9_101 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="148-148"];
m9_99 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(new Uri(''http://example.com''))", span="146-146"];
m9_100 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/resource/bar'')", span="147-147"];
m9_102 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="150-150"];
m9_103 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_tokens()", span="140-140"];
m9_146 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_containing_tokens()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_containing_tokens()", span="221-221"];
m9_147 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_containing_tokens()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest()", span="223-223"];
m9_148 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_containing_tokens()", file="UrlBuilderTests.cs", label="request.AddUrlSegment(''foo'', ''bar'')", span="225-225"];
m9_151 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_containing_tokens()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="229-229"];
m9_149 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_containing_tokens()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(''http://example.com/{foo}'')", span="227-227"];
m9_150 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_containing_tokens()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/bar'')", span="228-228"];
m9_152 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_containing_tokens()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="231-231"];
m9_153 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_containing_tokens()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_containing_tokens()", span="221-221"];
m9_79 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_null_token()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_null_token()", span="125-125"];
m9_80 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_null_token()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest(''/resource/{foo}'', Method.GET)", span="127-127"];
m9_81 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_null_token()", file="UrlBuilderTests.cs", label="request.AddUrlSegment(''foo'', null)", span="129-129"];
m9_83 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_null_token()", file="UrlBuilderTests.cs", label="ArgumentException exception = Assert.Throws<ArgumentException>(() => client.BuildUri(request))", span="132-132"];
m9_82 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_null_token()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(''http://example.com/api/1.0'')", span="131-131"];
m9_84 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_null_token()", file="UrlBuilderTests.cs", label="Assert.IsNotNull(exception)", span="134-134"];
m9_85 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_null_token()", file="UrlBuilderTests.cs", label="Assert.IsNotNullOrEmpty(exception.Message)", span="135-135"];
m9_86 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_null_token()", file="UrlBuilderTests.cs", label="Assert.IsTrue(exception.Message.Contains(''foo''))", span="136-136"];
m9_87 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_null_token()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_null_token()", span="125-125"];
m9_9 [cluster="RestSharp.RestRequest.AddParameter(string, object)", file="UrlBuilderTests.cs", label="Entry RestSharp.RestRequest.AddParameter(string, object)", span="406-406"];
m9_11 [cluster="System.Uri.Uri(string)", file="UrlBuilderTests.cs", label="Entry System.Uri.Uri(string)", span="0-0"];
m9_91 [cluster="string.Contains(string)", file="UrlBuilderTests.cs", label="Entry string.Contains(string)", span="0-0"];
m9_56 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_slashes()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_slashes()", span="89-89"];
m9_57 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_slashes()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest(''resource/foo'')", span="91-91"];
m9_58 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_slashes()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(new Uri(''http://example.com''))", span="92-92"];
m9_60 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_slashes()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="94-94"];
m9_59 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_slashes()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/resource/foo'')", span="93-93"];
m9_61 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_slashes()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="96-96"];
m9_62 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_slashes()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_slashes()", span="89-89"];
m9_127 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_multiple_instances_of_same_key()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_multiple_instances_of_same_key()", span="190-190"];
m9_128 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_multiple_instances_of_same_key()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest(''v1/people/~/network/updates'', Method.GET)", span="192-192"];
m9_129 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_multiple_instances_of_same_key()", file="UrlBuilderTests.cs", label="request.AddParameter(''type'', ''STAT'')", span="194-194"];
m9_130 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_multiple_instances_of_same_key()", file="UrlBuilderTests.cs", label="request.AddParameter(''type'', ''PICT'')", span="195-195"];
m9_131 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_multiple_instances_of_same_key()", file="UrlBuilderTests.cs", label="request.AddParameter(''count'', ''50'')", span="196-196"];
m9_132 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_multiple_instances_of_same_key()", file="UrlBuilderTests.cs", label="request.AddParameter(''start'', ''50'')", span="197-197"];
m9_135 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_multiple_instances_of_same_key()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="201-201"];
m9_133 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_multiple_instances_of_same_key()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(''http://api.linkedin.com'')", span="199-199"];
m9_134 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_multiple_instances_of_same_key()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://api.linkedin.com/v1/people/~/network/updates?type=STAT&type=PICT&count=50&start=50'')", span="200-200"];
m9_136 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_multiple_instances_of_same_key()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="203-203"];
m9_137 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_multiple_instances_of_same_key()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_multiple_instances_of_same_key()", span="190-190"];
m9_138 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_containing_tokens()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_Uri_containing_tokens()", span="207-207"];
m9_139 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_containing_tokens()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest()", span="209-209"];
m9_140 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_containing_tokens()", file="UrlBuilderTests.cs", label="request.AddUrlSegment(''foo'', ''bar'')", span="211-211"];
m9_143 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_containing_tokens()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="215-215"];
m9_141 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_containing_tokens()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(new Uri(''http://example.com/{foo}''))", span="213-213"];
m9_142 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_containing_tokens()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/bar'')", span="214-214"];
m9_144 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_containing_tokens()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="217-217"];
m9_145 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_containing_tokens()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_Uri_containing_tokens()", span="207-207"];
m9_126 [cluster="RestSharp.RestRequest.AddParameter(string, object, RestSharp.ParameterType)", file="UrlBuilderTests.cs", label="Entry RestSharp.RestRequest.AddParameter(string, object, RestSharp.ParameterType)", span="427-427"];
m9_70 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_tokens()", span="111-111"];
m9_71 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest(''resource/{foo}'')", span="113-113"];
m9_72 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="request.AddUrlSegment(''foo'', ''bar'')", span="115-115"];
m9_75 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="119-119"];
m9_73 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(new Uri(''http://example.com''))", span="117-117"];
m9_74 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/resource/bar'')", span="118-118"];
m9_76 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="121-121"];
m9_77 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_tokens()", span="111-111"];
m9_23 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash()", span="37-37"];
m9_24 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest(''/resource'', Method.POST)", span="39-39"];
m9_25 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(new Uri(''http://example.com''))", span="40-40"];
m9_27 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="42-42"];
m9_26 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/resource'')", span="41-41"];
m9_28 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="44-44"];
m9_29 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash()", span="37-37"];
m9_31 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash_and_baseurl_trailing_slash()", span="48-48"];
m9_32 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest(''/resource'')", span="50-50"];
m9_33 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="request.AddParameter(''foo'', ''bar'')", span="52-52"];
m9_36 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="56-56"];
m9_34 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(new Uri(''http://example.com''))", span="54-54"];
m9_35 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/resource?foo=bar'')", span="55-55"];
m9_37 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="58-58"];
m9_38 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash_and_baseurl_trailing_slash()", span="48-48"];
m10_152 [cluster="object.ChangeType(System.Type, System.Globalization.CultureInfo)", file="XmlDeserializer.cs", label="Entry object.ChangeType(System.Type, System.Globalization.CultureInfo)", span="107-107"];
m10_210 [cluster="string.ToCamelCase(System.Globalization.CultureInfo)", file="XmlDeserializer.cs", label="Entry string.ToCamelCase(System.Globalization.CultureInfo)", span="318-318"];
m10_137 [cluster="System.Type.GetProperties()", file="XmlDeserializer.cs", label="Entry System.Type.GetProperties()", span="0-0"];
m10_174 [cluster="System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)", file="XmlDeserializer.cs", label="Entry System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)", span="0-0"];
m10_143 [cluster="System.Activator.CreateInstance(System.Type)", file="XmlDeserializer.cs", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m10_26 [cluster="System.Activator.CreateInstance<T>()", file="XmlDeserializer.cs", label="Entry System.Activator.CreateInstance<T>()", span="0-0"];
m10_173 [cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="XmlDeserializer.cs", label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0"];
m10_161 [cluster="System.Guid.Guid(string)", file="XmlDeserializer.cs", label="Entry System.Guid.Guid(string)", span="0-0"];
m10_276 [cluster="System.Collections.Generic.List<T>.List()", file="XmlDeserializer.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m10_28 [cluster="System.Type.IsSubclassOfRawGeneric(System.Type)", file="XmlDeserializer.cs", label="Entry System.Type.IsSubclassOfRawGeneric(System.Type)", span="70-70"];
m10_280 [cluster="lambda expression", file="XmlDeserializer.cs", label="Entry lambda expression", span="552-552"];
m10_43 [cluster="lambda expression", file="XmlDeserializer.cs", label="Entry lambda expression", span="97-97"];
m10_46 [cluster="lambda expression", file="XmlDeserializer.cs", label="Entry lambda expression", span="101-105"];
m10_215 [cluster="lambda expression", file="XmlDeserializer.cs", label="e.Name.LocalName.RemoveUnderscoresAndDashes() == name", span="420-420"];
m10_214 [cluster="lambda expression", file="XmlDeserializer.cs", label="Entry lambda expression", span="420-420"];
m10_219 [cluster="lambda expression", file="XmlDeserializer.cs", label="e.Name.LocalName.RemoveUnderscoresAndDashes() == lowerName", span="429-429"];
m10_218 [cluster="lambda expression", file="XmlDeserializer.cs", label="Entry lambda expression", span="429-429"];
m10_44 [cluster="lambda expression", file="XmlDeserializer.cs", label="a.IsNamespaceDeclaration || a.Name.Namespace != XNamespace.None", span="97-97"];
m10_45 [cluster="lambda expression", file="XmlDeserializer.cs", label="Exit lambda expression", span="97-97"];
m10_47 [cluster="lambda expression", file="XmlDeserializer.cs", label="a.IsNamespaceDeclaration\r\n                                 ? null\r\n                                 : a.Name.Namespace != XNamespace.None\r\n                                     ? \\nnew XAttribute(XNamespace.None.GetName(a.Name.LocalName), a.Value)\r\n                                     : a", span="101-105"];
m10_48 [cluster="lambda expression", file="XmlDeserializer.cs", label="Exit lambda expression", span="101-105"];
m10_181 [cluster="lambda expression", file="XmlDeserializer.cs", label="this.CreateAndMap(t, element)", span="375-375"];
m10_180 [cluster="lambda expression", file="XmlDeserializer.cs", label="Entry lambda expression", span="375-375"];
m10_265 [cluster="lambda expression", file="XmlDeserializer.cs", label="d.Name.LocalName.RemoveUnderscoresAndDashes() == name.LocalName", span="532-532"];
m10_271 [cluster="lambda expression", file="XmlDeserializer.cs", label="d.Name.LocalName.RemoveUnderscoresAndDashes() == name.LocalName.ToLower()", span="535-535"];
m10_259 [cluster="lambda expression", file="XmlDeserializer.cs", label="Entry lambda expression", span="531-531"];
m10_264 [cluster="lambda expression", file="XmlDeserializer.cs", label="Entry lambda expression", span="532-532"];
m10_267 [cluster="lambda expression", file="XmlDeserializer.cs", label="Entry lambda expression", span="534-534"];
m10_270 [cluster="lambda expression", file="XmlDeserializer.cs", label="Entry lambda expression", span="535-535"];
m10_182 [cluster="lambda expression", file="XmlDeserializer.cs", label="Exit lambda expression", span="375-375"];
m10_216 [cluster="lambda expression", file="XmlDeserializer.cs", label="Exit lambda expression", span="420-420"];
m10_220 [cluster="lambda expression", file="XmlDeserializer.cs", label="Exit lambda expression", span="429-429"];
m10_281 [cluster="lambda expression", file="XmlDeserializer.cs", label="names.Contains(d.Name.LocalName.RemoveUnderscoresAndDashes())", span="552-552"];
m10_277 [cluster="lambda expression", file="XmlDeserializer.cs", label="Entry lambda expression", span="550-550"];
m10_260 [cluster="lambda expression", file="XmlDeserializer.cs", label="d.Ancestors().Count()", span="531-531"];
m10_261 [cluster="lambda expression", file="XmlDeserializer.cs", label="Exit lambda expression", span="531-531"];
m10_266 [cluster="lambda expression", file="XmlDeserializer.cs", label="Exit lambda expression", span="532-532"];
m10_268 [cluster="lambda expression", file="XmlDeserializer.cs", label="d.Ancestors().Count()", span="534-534"];
m10_269 [cluster="lambda expression", file="XmlDeserializer.cs", label="Exit lambda expression", span="534-534"];
m10_272 [cluster="lambda expression", file="XmlDeserializer.cs", label="Exit lambda expression", span="535-535"];
m10_278 [cluster="lambda expression", file="XmlDeserializer.cs", label="d.Ancestors().Count()", span="550-550"];
m10_279 [cluster="lambda expression", file="XmlDeserializer.cs", label="Exit lambda expression", span="550-550"];
m10_282 [cluster="lambda expression", file="XmlDeserializer.cs", label="Exit lambda expression", span="552-552"];
m10_155 [cluster="System.DateTime.ParseExact(string, string, System.IFormatProvider)", file="XmlDeserializer.cs", label="Entry System.DateTime.ParseExact(string, string, System.IFormatProvider)", span="0-0"];
m10_242 [cluster="RestSharp.Deserializers.XmlDeserializer.GetAttributeByName(XElement, XName)", file="XmlDeserializer.cs", label="Entry RestSharp.Deserializers.XmlDeserializer.GetAttributeByName(XElement, XName)", span="538-538"];
m10_273 [cluster="RestSharp.Deserializers.XmlDeserializer.GetAttributeByName(XElement, XName)", file="XmlDeserializer.cs", label="List<XName> names = new List<XName>\r\n                                {\r\n                                    name.LocalName,\r\n                                    \\nname.LocalName.ToLower()\r\n                                        .AsNamespaced(name.NamespaceName),\r\n                                    \\nname.LocalName.ToCamelCase(this.Culture)\r\n                                        .AsNamespaced(name.NamespaceName)\r\n                                }", span="540-547"];
m10_274 [cluster="RestSharp.Deserializers.XmlDeserializer.GetAttributeByName(XElement, XName)", file="XmlDeserializer.cs", label="return root.DescendantsAndSelf()\r\n                       .OrderBy(d => d.Ancestors().Count())\r\n                       .Attributes()\r\n                       \\n.FirstOrDefault(d => names.Contains(d.Name.LocalName.RemoveUnderscoresAndDashes()));", span="549-552"];
m10_275 [cluster="RestSharp.Deserializers.XmlDeserializer.GetAttributeByName(XElement, XName)", file="XmlDeserializer.cs", label="Exit RestSharp.Deserializers.XmlDeserializer.GetAttributeByName(XElement, XName)", span="538-538"];
m10_158 [cluster="RestSharp.Deserializers.XmlDeserializer.TryGetFromString(string, out object, System.Type)", file="XmlDeserializer.cs", label="Entry RestSharp.Deserializers.XmlDeserializer.TryGetFromString(string, out object, System.Type)", span="350-350"];
m10_166 [cluster="RestSharp.Deserializers.XmlDeserializer.TryGetFromString(string, out object, System.Type)", file="XmlDeserializer.cs", label="TypeConverter converter = TypeDescriptor.GetConverter(type)", span="354-354"];
m10_168 [cluster="RestSharp.Deserializers.XmlDeserializer.TryGetFromString(string, out object, System.Type)", file="XmlDeserializer.cs", label="result = (converter.ConvertFromInvariantString(inputString))", span="358-358"];
m10_169 [cluster="RestSharp.Deserializers.XmlDeserializer.TryGetFromString(string, out object, System.Type)", file="XmlDeserializer.cs", label="return true;", span="360-360"];
m10_171 [cluster="RestSharp.Deserializers.XmlDeserializer.TryGetFromString(string, out object, System.Type)", file="XmlDeserializer.cs", label="return false;", span="365-365"];
m10_167 [cluster="RestSharp.Deserializers.XmlDeserializer.TryGetFromString(string, out object, System.Type)", file="XmlDeserializer.cs", label="converter.CanConvertFrom(typeof(string))", span="356-356"];
m10_170 [cluster="RestSharp.Deserializers.XmlDeserializer.TryGetFromString(string, out object, System.Type)", file="XmlDeserializer.cs", label="result = null", span="363-363"];
m10_172 [cluster="RestSharp.Deserializers.XmlDeserializer.TryGetFromString(string, out object, System.Type)", file="XmlDeserializer.cs", label="Exit RestSharp.Deserializers.XmlDeserializer.TryGetFromString(string, out object, System.Type)", span="350-350"];
m10_27 [cluster="object.GetType()", file="XmlDeserializer.cs", label="Entry object.GetType()", span="0-0"];
m10_19 [cluster="string.IsNullOrEmpty(string)", file="XmlDeserializer.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m10_22 [cluster="string.AsNamespaced(string)", file="XmlDeserializer.cs", label="Entry string.AsNamespaced(string)", span="33-33"];
m10_160 [cluster="decimal.Parse(string, System.IFormatProvider)", file="XmlDeserializer.cs", label="Entry decimal.Parse(string, System.IFormatProvider)", span="0-0"];
m10_149 [cluster="string.ToLower()", file="XmlDeserializer.cs", label="Entry string.ToLower()", span="0-0"];
m10_30 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="Entry RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", span="111-111"];
m10_53 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="Type type = prop.PropertyType", span="118-118"];
m10_50 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="Type objType = x.GetType()", span="113-113"];
m10_62 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="object value = this.GetValueFromXml(root, name, prop)", span="150-150"];
m10_66 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="XElement first = this.GetElementByName(root, genericType.Name)", span="162-162"];
m10_68 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="first != null && root != null", span="165-165"];
m10_69 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="IEnumerable<XElement> elements = root.Elements(first.Name)", span="167-167"];
m10_71 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="prop.SetValue(x, list, null)", span="172-172"];
m10_74 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="prop.SetValue(x, null, null)", span="187-187"];
m10_78 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="prop.SetValue(x, XmlConvert.ToBoolean(toConvert), null)", span="199-199"];
m10_80 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="prop.SetValue(x, value.ChangeType(type, this.Culture), null)", span="207-207"];
m10_83 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="prop.SetValue(x, converted, null)", span="217-217"];
m10_86 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="prop.SetValue(x, uri, null)", span="223-223"];
m10_88 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="prop.SetValue(x, value, null)", span="227-227"];
m10_91 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="prop.SetValue(x, value, null)", span="235-235"];
m10_97 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="prop.SetValue(x, deserialisedValue, null)", span="248-248"];
m10_101 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="prop.SetValue(x, result, null)", span="256-256"];
m10_103 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="prop.SetValue(x, deserialisedValue, null)", span="262-262"];
m10_106 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="prop.SetValue(x, value, null)", span="270-270"];
m10_110 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="prop.SetValue(x, value, null)", span="280-280"];
m10_113 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="prop.SetValue(x, timeSpan, null)", span="286-286"];
m10_117 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="XElement container = this.GetElementByName(root, prop.Name.AsNamespaced(this.Namespace))", span="296-296"];
m10_123 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="prop.SetValue(x, list, null)", span="310-310"];
m10_125 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="object list = this.HandleListDerivative(root, prop.Name, type)", span="316-316"];
m10_126 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="prop.SetValue(x, list, null)", span="318-318"];
m10_129 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="prop.SetValue(x, result, null)", span="327-327"];
m10_130 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="root != null", span="332-332"];
m10_131 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="XElement element = this.GetElementByName(root, name)", span="334-334"];
m10_134 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="prop.SetValue(x, item, null)", span="340-340"];
m10_135 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="return x;", span="347-347"];
m10_51 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="PropertyInfo[] props = objType.GetProperties()", span="114-114"];
m10_52 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label=props, span="116-116"];
m10_55 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="!typeIsPublic || !prop.CanWrite", span="125-125"];
m10_57 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="object[] attributes = prop.GetCustomAttributes(typeof(DeserializeAsAttribute), false)", span="132-132"];
m10_61 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="name = prop.Name.AsNamespaced(this.Namespace)", span="147-147"];
m10_54 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="bool typeIsPublic = type.IsPublic || type.IsNestedPublic", span="120-120"];
m10_64 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="type.IsGenericType", span="156-156"];
m10_65 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="Type genericType = type.GetGenericArguments()[0]", span="161-161"];
m10_67 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="IList list = (IList) Activator.CreateInstance(type)", span="163-163"];
m10_72 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>)", span="179-179"];
m10_75 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="type = type.GetGenericArguments()[0]", span="191-191"];
m10_76 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="type == typeof(bool)", span="194-194"];
m10_79 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="type.IsPrimitive", span="202-202"];
m10_81 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="type.IsEnum", span="210-210"];
m10_82 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="object converted = type.FindEnumValue(value.ToString(), this.Culture)", span="215-215"];
m10_84 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="type == typeof(Uri)", span="219-219"];
m10_87 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="type == typeof(string)", span="225-225"];
m10_89 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="type == typeof(DateTime)", span="229-229"];
m10_92 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="type == typeof(DateTimeOffset)", span="237-237"];
m10_100 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="TryGetFromString(toConvert, out result, type)", span="254-254"];
m10_104 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="type == typeof(decimal)", span="267-267"];
m10_107 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="type == typeof(Guid)", span="272-272"];
m10_111 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="type == typeof(TimeSpan)", span="282-282"];
m10_114 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="type.IsGenericType", span="289-289"];
m10_115 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="Type t = type.GetGenericArguments()[0]", span="294-294"];
m10_116 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="IList list = (IList) Activator.CreateInstance(type)", span="295-295"];
m10_124 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="type.IsSubclassOfRawGeneric(typeof(List<>))", span="312-312"];
m10_128 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="TryGetFromString(value.ToString(), out result, type)", span="325-325"];
m10_133 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="object item = this.CreateAndMap(type, element)", span="338-338"];
m10_56 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="XName name", span="130-130"];
m10_58 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="attributes.Length > 0", span="134-134"];
m10_59 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="DeserializeAsAttribute attribute = (DeserializeAsAttribute) attributes.First()", span="141-141"];
m10_60 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="name = attribute.Name.AsNamespaced(this.Namespace)", span="143-143"];
m10_63 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="value == null", span="152-152"];
m10_73 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="string.IsNullOrEmpty(value.ToString())", span="185-185"];
m10_77 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="string toConvert = value.ToString()\r\n                                            .ToLower()", span="196-197"];
m10_85 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="Uri uri = new Uri(value.ToString(), UriKind.RelativeOrAbsolute)", span="221-221"];
m10_90 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="value = this.DateFormat.HasValue()\r\n                        ? DateTime.ParseExact(value.ToString(), this.DateFormat, this.Culture)\r\n                        : \\nDateTime.Parse(value.ToString(), this.Culture)", span="231-233"];
m10_93 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="string toConvert = value.ToString()", span="239-239"];
m10_105 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="value = decimal.Parse(value.ToString(), this.Culture)", span="269-269"];
m10_108 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="string raw = value.ToString()", span="274-274"];
m10_109 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="value = string.IsNullOrEmpty(raw)\r\n                        ? Guid.Empty\r\n                        : new Guid(value.ToString())", span="276-278"];
m10_112 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="TimeSpan timeSpan = XmlConvert.ToTimeSpan(value.ToString())", span="284-284"];
m10_70 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="this.PopulateListFromElements(genericType, elements, list)", span="169-169"];
m10_94 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="!string.IsNullOrEmpty(toConvert)", span="241-241"];
m10_96 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="deserialisedValue = XmlConvert.ToDateTimeOffset(toConvert)", span="247-247"];
m10_102 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="deserialisedValue = DateTimeOffset.Parse(toConvert)", span="261-261"];
m10_95 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="DateTimeOffset deserialisedValue", span="243-243"];
m10_98 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label=Exception, span="250-250"];
m10_99 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="object result", span="252-252"];
m10_122 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="this.PopulateListFromElements(t, elements, list)", span="306-306"];
m10_118 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="container.HasElements", span="298-298"];
m10_119 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="XElement first = container.Elements().FirstOrDefault()", span="300-300"];
m10_121 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="IEnumerable<XElement> elements = container.Elements(first.Name)", span="304-304"];
m10_120 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="first != null", span="302-302"];
m10_127 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="object result", span="323-323"];
m10_132 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="element != null", span="336-336"];
m10_136 [cluster="RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", file="XmlDeserializer.cs", label="Exit RestSharp.Deserializers.XmlDeserializer.Map(object, XElement)", span="111-111"];
m10_153 [cluster="System.Type.FindEnumValue(string, System.Globalization.CultureInfo)", file="XmlDeserializer.cs", label="Entry System.Type.FindEnumValue(string, System.Globalization.CultureInfo)", span="124-124"];
m10_209 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="XmlDeserializer.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m10_154 [cluster="System.Uri.Uri(string, System.UriKind)", file="XmlDeserializer.cs", label="Entry System.Uri.Uri(string, System.UriKind)", span="0-0"];
m10_29 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(XElement, string, System.Type)", file="XmlDeserializer.cs", label="Entry RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(XElement, string, System.Type)", span="381-381"];
m10_183 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(XElement, string, System.Type)", file="XmlDeserializer.cs", label="Type t = type.IsGenericType\r\n                ? type.GetGenericArguments()[0]\r\n                : type.BaseType.GetGenericArguments()[\\n0]", span="384-386"];
m10_184 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(XElement, string, System.Type)", file="XmlDeserializer.cs", label="IList list = (IList) Activator.CreateInstance(type)", span="392-392"];
m10_185 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(XElement, string, System.Type)", file="XmlDeserializer.cs", label="IList<XElement> elements = root.Descendants(t.Name.AsNamespaced(this.Namespace))\r\n                                           .ToList()", span="393-394"];
m10_192 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(XElement, string, System.Type)", file="XmlDeserializer.cs", label="elements = root.Descendants(lowerName).ToList()", span="407-407"];
m10_195 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(XElement, string, System.Type)", file="XmlDeserializer.cs", label="elements = root.Descendants(camelName).ToList()", span="414-414"];
m10_197 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(XElement, string, System.Type)", file="XmlDeserializer.cs", label="elements = root.Descendants()\r\n                               .Where(e => e.Name.LocalName.RemoveUnderscoresAndDashes() == name)\r\n                               \\n.ToList()", span="419-421"];
m10_200 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(XElement, string, System.Type)", file="XmlDeserializer.cs", label="elements = root.Descendants()\r\n                               .Where(e => e.Name.LocalName.RemoveUnderscoresAndDashes() == lowerName)\r\n                               \\n.ToList()", span="428-430"];
m10_202 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(XElement, string, System.Type)", file="XmlDeserializer.cs", label="!type.IsGenericType", span="438-438"];
m10_203 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(XElement, string, System.Type)", file="XmlDeserializer.cs", label="this.Map(list, root.Element(propName.AsNamespaced(this.Namespace)) ?? root)", span="443-443"];
m10_186 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(XElement, string, System.Type)", file="XmlDeserializer.cs", label="string name = t.Name", span="395-395"];
m10_187 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(XElement, string, System.Type)", file="XmlDeserializer.cs", label="DeserializeAsAttribute attribute = t.GetAttribute<DeserializeAsAttribute>()", span="396-396"];
m10_201 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(XElement, string, System.Type)", file="XmlDeserializer.cs", label="this.PopulateListFromElements(t, elements, list)", span="433-433"];
m10_204 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(XElement, string, System.Type)", file="XmlDeserializer.cs", label="return list;", span="447-447"];
m10_190 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(XElement, string, System.Type)", file="XmlDeserializer.cs", label="!elements.Any()", span="403-403"];
m10_193 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(XElement, string, System.Type)", file="XmlDeserializer.cs", label="!elements.Any()", span="410-410"];
m10_196 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(XElement, string, System.Type)", file="XmlDeserializer.cs", label="!elements.Any()", span="417-417"];
m10_198 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(XElement, string, System.Type)", file="XmlDeserializer.cs", label="!elements.Any()", span="424-424"];
m10_191 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(XElement, string, System.Type)", file="XmlDeserializer.cs", label="XName lowerName = name.ToLower().AsNamespaced(this.Namespace)", span="405-405"];
m10_194 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(XElement, string, System.Type)", file="XmlDeserializer.cs", label="XName camelName = name.ToCamelCase(this.Culture).AsNamespaced(this.Namespace)", span="412-412"];
m10_199 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(XElement, string, System.Type)", file="XmlDeserializer.cs", label="XName lowerName = name.ToLower().AsNamespaced(this.Namespace)", span="426-426"];
m10_188 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(XElement, string, System.Type)", file="XmlDeserializer.cs", label="attribute != null", span="398-398"];
m10_189 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(XElement, string, System.Type)", file="XmlDeserializer.cs", label="name = attribute.Name", span="400-400"];
m10_205 [cluster="RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(XElement, string, System.Type)", file="XmlDeserializer.cs", label="Exit RestSharp.Deserializers.XmlDeserializer.HandleListDerivative(XElement, string, System.Type)", span="381-381"];
m10_141 [cluster="System.Type.GetGenericArguments()", file="XmlDeserializer.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m10_145 [cluster="RestSharp.Deserializers.XmlDeserializer.PopulateListFromElements(System.Type, System.Collections.Generic.IEnumerable<XElement>, \\nSystem.Collections.IList)", file="XmlDeserializer.cs", label="Entry RestSharp.Deserializers.XmlDeserializer.PopulateListFromElements(System.Type, System.Collections.Generic.IEnumerable<XElement>, \\nSystem.Collections.IList)", span="373-373"];
m10_176 [cluster="RestSharp.Deserializers.XmlDeserializer.PopulateListFromElements(System.Type, System.Collections.Generic.IEnumerable<XElement>, \\nSystem.Collections.IList)", file="XmlDeserializer.cs", label="elements.Select(element => this.CreateAndMap(t, element))", span="375-375"];
m10_177 [cluster="RestSharp.Deserializers.XmlDeserializer.PopulateListFromElements(System.Type, System.Collections.Generic.IEnumerable<XElement>, \\nSystem.Collections.IList)", file="XmlDeserializer.cs", label="list.Add(item)", span="377-377"];
m10_178 [cluster="RestSharp.Deserializers.XmlDeserializer.PopulateListFromElements(System.Type, System.Collections.Generic.IEnumerable<XElement>, \\nSystem.Collections.IList)", file="XmlDeserializer.cs", label="Exit RestSharp.Deserializers.XmlDeserializer.PopulateListFromElements(System.Type, System.Collections.Generic.IEnumerable<XElement>, \\nSystem.Collections.IList)", span="373-373"];
m10_165 [cluster="RestSharp.Deserializers.XmlDeserializer.CreateAndMap(System.Type, XElement)", file="XmlDeserializer.cs", label="Entry RestSharp.Deserializers.XmlDeserializer.CreateAndMap(System.Type, XElement)", span="450-450"];
m10_221 [cluster="RestSharp.Deserializers.XmlDeserializer.CreateAndMap(System.Type, XElement)", file="XmlDeserializer.cs", label="object item", span="452-452"];
m10_222 [cluster="RestSharp.Deserializers.XmlDeserializer.CreateAndMap(System.Type, XElement)", file="XmlDeserializer.cs", label="t == typeof(string)", span="454-454"];
m10_223 [cluster="RestSharp.Deserializers.XmlDeserializer.CreateAndMap(System.Type, XElement)", file="XmlDeserializer.cs", label="item = element.Value", span="456-456"];
m10_224 [cluster="RestSharp.Deserializers.XmlDeserializer.CreateAndMap(System.Type, XElement)", file="XmlDeserializer.cs", label="t.IsPrimitive", span="459-459"];
m10_225 [cluster="RestSharp.Deserializers.XmlDeserializer.CreateAndMap(System.Type, XElement)", file="XmlDeserializer.cs", label="item = element.Value.ChangeType(t, this.Culture)", span="464-464"];
m10_226 [cluster="RestSharp.Deserializers.XmlDeserializer.CreateAndMap(System.Type, XElement)", file="XmlDeserializer.cs", label="item = Activator.CreateInstance(t)", span="468-468"];
m10_227 [cluster="RestSharp.Deserializers.XmlDeserializer.CreateAndMap(System.Type, XElement)", file="XmlDeserializer.cs", label="this.Map(item, element)", span="469-469"];
m10_228 [cluster="RestSharp.Deserializers.XmlDeserializer.CreateAndMap(System.Type, XElement)", file="XmlDeserializer.cs", label="return item;", span="472-472"];
m10_229 [cluster="RestSharp.Deserializers.XmlDeserializer.CreateAndMap(System.Type, XElement)", file="XmlDeserializer.cs", label="Exit RestSharp.Deserializers.XmlDeserializer.CreateAndMap(System.Type, XElement)", span="450-450"];
m10_159 [cluster="System.DateTimeOffset.Parse(string)", file="XmlDeserializer.cs", label="Entry System.DateTimeOffset.Parse(string)", span="0-0"];
m10_208 [cluster="System.Type.GetAttribute<T>()", file="XmlDeserializer.cs", label="Entry System.Type.GetAttribute<T>()", span="54-54"];
m10_139 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="XmlDeserializer.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m10_179 [cluster="System.Collections.IList.Add(object)", file="XmlDeserializer.cs", label="Entry System.Collections.IList.Add(object)", span="0-0"];
m10_148 [cluster="object.ToString()", file="XmlDeserializer.cs", label="Entry object.ToString()", span="0-0"];
m10_163 [cluster="RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", file="XmlDeserializer.cs", label="Entry RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", span="504-504"];
m10_243 [cluster="RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", file="XmlDeserializer.cs", label="XName lowerName = name.LocalName.ToLower().AsNamespaced(name.NamespaceName)", span="506-506"];
m10_244 [cluster="RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", file="XmlDeserializer.cs", label="XName camelName = name.LocalName.ToCamelCase(this.Culture).AsNamespaced(name.NamespaceName)", span="507-507"];
m10_245 [cluster="RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", file="XmlDeserializer.cs", label="root.Element(name) != null", span="509-509"];
m10_246 [cluster="RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", file="XmlDeserializer.cs", label="return root.Element(name);", span="511-511"];
m10_247 [cluster="RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", file="XmlDeserializer.cs", label="root.Element(lowerName) != null", span="514-514"];
m10_248 [cluster="RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", file="XmlDeserializer.cs", label="return root.Element(lowerName);", span="516-516"];
m10_249 [cluster="RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", file="XmlDeserializer.cs", label="root.Element(camelName) != null", span="519-519"];
m10_250 [cluster="RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", file="XmlDeserializer.cs", label="return root.Element(camelName);", span="521-521"];
m10_251 [cluster="RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", color=green, community=0, file="XmlDeserializer.cs", label="name == ''Value''.AsNamespaced(name.NamespaceName)", prediction=21, span="524-524"];
m10_252 [cluster="RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", file="XmlDeserializer.cs", label="return root;", span="526-526"];
m10_253 [cluster="RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", file="XmlDeserializer.cs", label="return root.Descendants()\r\n                       .OrderBy(d => d.Ancestors().Count())\r\n                       .FirstOrDefault(\\nd => d.Name.LocalName.RemoveUnderscoresAndDashes() == name.LocalName) ??\r\n                   root.Descendants()\r\n                       \\n.OrderBy(d => d.Ancestors().Count())\r\n                       .FirstOrDefault(d => d.Name.LocalName.RemoveUnderscoresAndDashes() == \\nname.LocalName.ToLower());", span="530-535"];
m10_254 [cluster="RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", file="XmlDeserializer.cs", label="Exit RestSharp.Deserializers.XmlDeserializer.GetElementByName(XElement, XName)", span="504-504"];
m10_3 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file="XmlDeserializer.cs", label="Entry RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.IRestResponse)", span="49-49"];
m10_4 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file="XmlDeserializer.cs", label="string.IsNullOrEmpty(response.Content)", span="51-51"];
m10_6 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file="XmlDeserializer.cs", label="XDocument doc = XDocument.Parse(response.Content)", span="56-56"];
m10_12 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file="XmlDeserializer.cs", label="T x = Activator.CreateInstance<T>()", span="70-70"];
m10_5 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file="XmlDeserializer.cs", label="return default(T);", span="53-53"];
m10_7 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file="XmlDeserializer.cs", label="XElement root = doc.Root", span="57-57"];
m10_8 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file="XmlDeserializer.cs", label="this.RootElement.HasValue() && doc.Root != null", span="59-59"];
m10_9 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file="XmlDeserializer.cs", label="root = doc.Root.DescendantsAndSelf(this.RootElement.AsNamespaced(this.Namespace)).SingleOrDefault()", span="61-61"];
m10_11 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file="XmlDeserializer.cs", label="RemoveNamespace(doc)", span="67-67"];
m10_15 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file="XmlDeserializer.cs", label="x = (T) this.HandleListDerivative(root, objType.Name, objType)", span="75-75"];
m10_16 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file="XmlDeserializer.cs", label="x = (T) this.Map(x, root)", span="79-79"];
m10_10 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file="XmlDeserializer.cs", label="!this.Namespace.HasValue()", span="65-65"];
m10_13 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file="XmlDeserializer.cs", label="Type objType = x.GetType()", span="71-71"];
m10_14 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file="XmlDeserializer.cs", label="objType.IsSubclassOfRawGeneric(typeof(List<>))", span="73-73"];
m10_17 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file="XmlDeserializer.cs", label="return x;", span="82-82"];
m10_18 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file="XmlDeserializer.cs", label="Exit RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.IRestResponse)", span="49-49"];
m10_147 [cluster="System.Type.GetGenericTypeDefinition()", file="XmlDeserializer.cs", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
m10_140 [cluster="RestSharp.Deserializers.XmlDeserializer.GetValueFromXml(XElement, XName, System.Reflection.PropertyInfo)", file="XmlDeserializer.cs", label="Entry RestSharp.Deserializers.XmlDeserializer.GetValueFromXml(XElement, XName, System.Reflection.PropertyInfo)", span="475-475"];
m10_231 [cluster="RestSharp.Deserializers.XmlDeserializer.GetValueFromXml(XElement, XName, System.Reflection.PropertyInfo)", file="XmlDeserializer.cs", label="object val = null", span="477-477"];
m10_232 [cluster="RestSharp.Deserializers.XmlDeserializer.GetValueFromXml(XElement, XName, System.Reflection.PropertyInfo)", file="XmlDeserializer.cs", label="root != null", span="479-479"];
m10_233 [cluster="RestSharp.Deserializers.XmlDeserializer.GetValueFromXml(XElement, XName, System.Reflection.PropertyInfo)", file="XmlDeserializer.cs", label="XElement element = this.GetElementByName(root, name)", span="481-481"];
m10_235 [cluster="RestSharp.Deserializers.XmlDeserializer.GetValueFromXml(XElement, XName, System.Reflection.PropertyInfo)", file="XmlDeserializer.cs", label="XAttribute attribute = this.GetAttributeByName(root, name)", span="485-485"];
m10_240 [cluster="RestSharp.Deserializers.XmlDeserializer.GetValueFromXml(XElement, XName, System.Reflection.PropertyInfo)", file="XmlDeserializer.cs", label="return val;", span="501-501"];
m10_234 [cluster="RestSharp.Deserializers.XmlDeserializer.GetValueFromXml(XElement, XName, System.Reflection.PropertyInfo)", file="XmlDeserializer.cs", label="element == null", span="483-483"];
m10_238 [cluster="RestSharp.Deserializers.XmlDeserializer.GetValueFromXml(XElement, XName, System.Reflection.PropertyInfo)", file="XmlDeserializer.cs", label="!element.IsEmpty || element.HasElements || element.HasAttributes", span="494-494"];
m10_239 [cluster="RestSharp.Deserializers.XmlDeserializer.GetValueFromXml(XElement, XName, System.Reflection.PropertyInfo)", file="XmlDeserializer.cs", label="val = element.Value", span="496-496"];
m10_236 [cluster="RestSharp.Deserializers.XmlDeserializer.GetValueFromXml(XElement, XName, System.Reflection.PropertyInfo)", file="XmlDeserializer.cs", label="attribute != null", span="487-487"];
m10_237 [cluster="RestSharp.Deserializers.XmlDeserializer.GetValueFromXml(XElement, XName, System.Reflection.PropertyInfo)", file="XmlDeserializer.cs", label="val = attribute.Value", span="489-489"];
m10_241 [cluster="RestSharp.Deserializers.XmlDeserializer.GetValueFromXml(XElement, XName, System.Reflection.PropertyInfo)", file="XmlDeserializer.cs", label="Exit RestSharp.Deserializers.XmlDeserializer.GetValueFromXml(XElement, XName, System.Reflection.PropertyInfo)", span="475-475"];
m10_156 [cluster="System.DateTime.Parse(string, System.IFormatProvider)", file="XmlDeserializer.cs", label="Entry System.DateTime.Parse(string, System.IFormatProvider)", span="0-0"];
m10_21 [cluster="string.HasValue()", file="XmlDeserializer.cs", label="Entry string.HasValue()", span="100-100"];
m10_0 [cluster="RestSharp.Deserializers.XmlDeserializer.XmlDeserializer()", file="XmlDeserializer.cs", label="Entry RestSharp.Deserializers.XmlDeserializer.XmlDeserializer()", span="44-44"];
m10_1 [cluster="RestSharp.Deserializers.XmlDeserializer.XmlDeserializer()", file="XmlDeserializer.cs", label="this.Culture = CultureInfo.InvariantCulture", span="46-46"];
m10_2 [cluster="RestSharp.Deserializers.XmlDeserializer.XmlDeserializer()", file="XmlDeserializer.cs", label="Exit RestSharp.Deserializers.XmlDeserializer.XmlDeserializer()", span="44-44"];
m10_175 [cluster="System.ComponentModel.TypeConverter.ConvertFromInvariantString(string)", file="XmlDeserializer.cs", label="Entry System.ComponentModel.TypeConverter.ConvertFromInvariantString(string)", span="0-0"];
m10_138 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", file="XmlDeserializer.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", span="0-0"];
m10_25 [cluster="RestSharp.Deserializers.XmlDeserializer.RemoveNamespace(XDocument)", file="XmlDeserializer.cs", label="Entry RestSharp.Deserializers.XmlDeserializer.RemoveNamespace(XDocument)", span="85-85"];
m10_31 [cluster="RestSharp.Deserializers.XmlDeserializer.RemoveNamespace(XDocument)", file="XmlDeserializer.cs", label="xdoc.Root != null", span="87-87"];
m10_32 [cluster="RestSharp.Deserializers.XmlDeserializer.RemoveNamespace(XDocument)", file="XmlDeserializer.cs", label="xdoc.Root.DescendantsAndSelf()", span="89-89"];
m10_33 [cluster="RestSharp.Deserializers.XmlDeserializer.RemoveNamespace(XDocument)", file="XmlDeserializer.cs", label="e.Name.Namespace != XNamespace.None", span="91-91"];
m10_34 [cluster="RestSharp.Deserializers.XmlDeserializer.RemoveNamespace(XDocument)", file="XmlDeserializer.cs", label="e.Name = XNamespace.None.GetName(e.Name.LocalName)", span="93-93"];
m10_35 [cluster="RestSharp.Deserializers.XmlDeserializer.RemoveNamespace(XDocument)", file="XmlDeserializer.cs", label="e.Attributes()\r\n                         .Any(a => a.IsNamespaceDeclaration || a.Name.Namespace != XNamespace.None)", span="96-97"];
m10_36 [cluster="RestSharp.Deserializers.XmlDeserializer.RemoveNamespace(XDocument)", file="XmlDeserializer.cs", label="e.ReplaceAttributes(\r\n                            e.Attributes()\r\n                             .Select(a => a.IsNamespaceDeclaration\r\n                                 ? \\nnull\r\n                                 : a.Name.Namespace != XNamespace.None\r\n                                     ? new XAttribute(\\nXNamespace.None.GetName(a.Name.LocalName), a.Value)\r\n                                     : a))", span="99-105"];
m10_37 [cluster="RestSharp.Deserializers.XmlDeserializer.RemoveNamespace(XDocument)", file="XmlDeserializer.cs", label="Exit RestSharp.Deserializers.XmlDeserializer.RemoveNamespace(XDocument)", span="85-85"];
m10_146 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="XmlDeserializer.cs", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
m11_305 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", span="436-436"];
m11_306 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="string doc = CreateDashesXml()", span="438-438"];
m11_307 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="439-439"];
m11_308 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="XmlDeserializer d = new XmlDeserializer()", span="440-440"];
m11_309 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="PersonForXml p = d.Deserialize<PersonForXml>(response)", span="441-441"];
m11_310 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''John Sheehan'', p.Name)", span="443-443"];
m11_311 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new DateTime(2009, 9, 25, 0, 6, 1), p.StartDate)", span="444-444"];
m11_312 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(28, p.Age)", span="445-445"];
m11_313 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(long.MaxValue, p.BigNumber)", span="446-446"];
m11_314 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(99.9999m, p.Percent)", span="447-447"];
m11_315 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(false, p.IsCool)", span="448-448"];
m11_316 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Guid(GUID_STRING), p.UniqueId)", span="449-449"];
m11_317 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="450-450"];
m11_318 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="451-451"];
m11_319 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.NotNull(p.Friends)", span="452-452"];
m11_320 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(10, p.Friends.Count)", span="453-453"];
m11_321 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.NotNull(p.BestFriend)", span="454-454"];
m11_322 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''The Fonz'', p.BestFriend.Name)", span="455-455"];
m11_323 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(1952, p.BestFriend.Since)", span="456-456"];
m11_324 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.NotNull(p.Foes)", span="457-457"];
m11_325 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(5, p.Foes.Count)", span="458-458"];
m11_326 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''Yankees'', p.Foes.Team)", span="459-459"];
m11_327 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Dashes_On_Default_Root()", span="436-436"];
m11_267 [cluster="RestSharp.Tests.XmlDeserializerTests.Ignore_Protected_Property_That_Exists_In_Data()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Ignore_Protected_Property_That_Exists_In_Data()", span="387-387"];
m11_268 [cluster="RestSharp.Tests.XmlDeserializerTests.Ignore_Protected_Property_That_Exists_In_Data()", file="XmlDeserializerTests.cs", label="string doc = CreateElementsXml()", span="389-389"];
m11_269 [cluster="RestSharp.Tests.XmlDeserializerTests.Ignore_Protected_Property_That_Exists_In_Data()", file="XmlDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="390-390"];
m11_270 [cluster="RestSharp.Tests.XmlDeserializerTests.Ignore_Protected_Property_That_Exists_In_Data()", file="XmlDeserializerTests.cs", label="XmlDeserializer d = new XmlDeserializer()", span="391-391"];
m11_271 [cluster="RestSharp.Tests.XmlDeserializerTests.Ignore_Protected_Property_That_Exists_In_Data()", file="XmlDeserializerTests.cs", label="PersonForXml p = d.Deserialize<PersonForXml>(response)", span="392-392"];
m11_272 [cluster="RestSharp.Tests.XmlDeserializerTests.Ignore_Protected_Property_That_Exists_In_Data()", file="XmlDeserializerTests.cs", label="Assert.Null(p.IgnoreProxy)", span="394-394"];
m11_273 [cluster="RestSharp.Tests.XmlDeserializerTests.Ignore_Protected_Property_That_Exists_In_Data()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Ignore_Protected_Property_That_Exists_In_Data()", span="387-387"];
m11_177 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", span="276-276"];
m11_178 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="CultureInfo culture = CultureInfo.InvariantCulture", span="278-278"];
m11_179 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="XDocument doc = new XDocument(culture)", span="279-279"];
m11_192 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="XmlDeserializer d = new XmlDeserializer\r\n                                {\r\n                                    Culture = culture,\r\n                                }", span="298-301"];
m11_180 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="TimeSpan? nullTimespan = null", span="280-280"];
m11_190 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="doc.Add(root)", span="292-292"];
m11_191 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="RestResponse response = new RestResponse\r\n                                    {\r\n                                        Content = \\ndoc.ToString()\r\n                                    }", span="294-297"];
m11_181 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="TimeSpan? nullValueTimeSpan = new TimeSpan(21, 30, 7)", span="281-281"];
m11_188 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''NullableWithoutValue'', nullTimespan))", span="289-289"];
m11_182 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="XElement root = new XElement(''Person'')", span="282-282"];
m11_189 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''NullableWithValue'', nullValueTimeSpan))", span="290-290"];
m11_183 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Tick'', new TimeSpan(468006)))", span="284-284"];
m11_184 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Millisecond'', new TimeSpan(0, 0, 0, 0, 125)))", span="285-285"];
m11_185 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Second'', new TimeSpan(0, 0, 8)))", span="286-286"];
m11_186 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Minute'', new TimeSpan(0, 55, 2)))", span="287-287"];
m11_187 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Hour'', new TimeSpan(21, 30, 7)))", span="288-288"];
m11_193 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="TimeSpanTestStructure payload = d.Deserialize<TimeSpanTestStructure>(response)", span="302-302"];
m11_194 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new TimeSpan(468006), payload.Tick)", span="304-304"];
m11_195 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new TimeSpan(0, 0, 0, 0, 125), payload.Millisecond)", span="305-305"];
m11_196 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new TimeSpan(0, 0, 8), payload.Second)", span="306-306"];
m11_197 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new TimeSpan(0, 55, 2), payload.Minute)", span="307-307"];
m11_198 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new TimeSpan(21, 30, 7), payload.Hour)", span="308-308"];
m11_199 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="Assert.Null(payload.NullableWithoutValue)", span="309-309"];
m11_200 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="Assert.NotNull(payload.NullableWithValue)", span="310-310"];
m11_201 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new TimeSpan(21, 30, 7), payload.NullableWithValue.Value)", span="311-311"];
m11_202 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_TimeSpan()", span="276-276"];
m11_352 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", span="707-707"];
m11_513 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", color=green, community=0, file="XmlDeserializerTests.cs", label="XDocument doc = new XDocument()", prediction=22, span="709-709"];
m11_514 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", color=green, community=0, file="XmlDeserializerTests.cs", label="XElement root = new XElement(''Person'')", prediction=23, span="710-710"];
m11_540 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="doc.Add(root)", span="748-748"];
m11_541 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="return doc.ToString();", span="750-750"];
m11_515 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", color=green, community=0, file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Name'', ''John Sheehan''))", prediction=24, span="712-712"];
m11_516 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", color=green, community=0, file="XmlDeserializerTests.cs", label="root.Add(new XElement(''start_date'', new DateTime(2009, 9, 25, 0, 6, 1)))", prediction=23, span="713-713"];
m11_517 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", color=green, community=0, file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''Age'', 28))", prediction=23, span="714-714"];
m11_518 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", color=green, community=0, file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Percent'', 99.9999m))", prediction=23, span="715-715"];
m11_519 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", color=green, community=0, file="XmlDeserializerTests.cs", label="root.Add(new XElement(''big_number'', long.MaxValue))", prediction=23, span="716-716"];
m11_520 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", color=green, community=0, file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''is_cool'', false))", prediction=23, span="717-717"];
m11_521 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", color=green, community=0, file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Ignore'', ''dummy''))", prediction=23, span="718-718"];
m11_522 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", color=green, community=0, file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''read_only'', ''dummy''))", prediction=23, span="719-719"];
m11_523 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", color=green, community=0, file="XmlDeserializerTests.cs", label="root.Add(new XElement(''unique_id'', new Guid(GUID_STRING)))", prediction=23, span="720-720"];
m11_524 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", color=green, community=0, file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Url'', ''http://example.com''))", prediction=23, span="721-721"];
m11_525 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''url_path'', ''/foo/bar''))", span="722-722"];
m11_526 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''best_friend'',\r\n                new XElement(''name'', ''The Fonz''),\r\n                new XAttribute(''\\nSince'', 1952)))", span="723-725"];
m11_532 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(friends)", span="736-736"];
m11_539 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="root.Add(foes)", span="747-747"];
m11_527 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="XElement friends = new XElement(''Friends'')", span="727-727"];
m11_528 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="int i = 0", span="729-729"];
m11_530 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="friends.Add(new XElement(''Friend'',\r\n                    new XElement(''Name'', ''Friend'' + i),\r\n                    new XAttribute(''\\nSince'', DateTime.Now.Year - i)))", span="731-733"];
m11_529 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="i < 10", span="729-729"];
m11_531 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="i++", span="729-729"];
m11_533 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="XElement foes = new XElement(''Foes'')", span="738-738"];
m11_534 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="foes.Add(new XAttribute(''Team'', ''Yankees''))", span="740-740"];
m11_537 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="foes.Add(new XElement(''Foe'', new XElement(''Nickname'', ''Foe'' + i)))", span="744-744"];
m11_535 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="int i = 0", span="742-742"];
m11_536 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="i < 5", span="742-742"];
m11_538 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="i++", span="742-742"];
m11_542 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.CreateLowercaseUnderscoresXml()", span="707-707"];
m11_481 [cluster="System.TimeSpan.FromHours(double)", file="XmlDeserializerTests.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m11_208 [cluster="System.TimeSpan.TimeSpan(int, int, int, int, int)", file="XmlDeserializerTests.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int, int, int)", span="0-0"];
m11_453 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", span="624-624"];
m11_454 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", file="XmlDeserializerTests.cs", label="string doc = CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", span="626-626"];
m11_455 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", file="XmlDeserializerTests.cs", label="XmlDeserializer xml = new XmlDeserializer()", span="627-627"];
m11_456 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", file="XmlDeserializerTests.cs", label="NullableValues output = xml.Deserialize<NullableValues>(new RestResponse { Content = doc })", span="628-628"];
m11_457 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", file="XmlDeserializerTests.cs", label="Assert.Null(output.Id)", span="630-630"];
m11_458 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", file="XmlDeserializerTests.cs", label="Assert.Null(output.StartDate)", span="631-631"];
m11_459 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Guid(GUID_STRING), output.UniqueId)", span="632-632"];
m11_460 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Mixture_Of_Empty_Elements_With_Attributes_And_Populated_Elements()", span="624-624"];
m11_304 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", span="661-661"];
m11_497 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", color=green, community=0, file="XmlDeserializerTests.cs", label="int i = 0", prediction=34, span="683-683"];
m11_482 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", color=green, community=0, file="XmlDeserializerTests.cs", label="XDocument doc = new XDocument()", prediction=34, span="663-663"];
m11_483 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", color=green, community=0, file="XmlDeserializerTests.cs", label="XElement root = new XElement(''Person'')", prediction=34, span="664-664"];
m11_509 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", color=green, community=0, file="XmlDeserializerTests.cs", label="doc.Add(root)", prediction=34, span="702-702"];
m11_510 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", color=green, community=0, file="XmlDeserializerTests.cs", label="return doc.ToString();", prediction=34, span="704-704"];
m11_484 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", color=green, community=0, file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Name'', ''John Sheehan''))", prediction=39, span="666-666"];
m11_485 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", color=green, community=0, file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Start_Date'', new DateTime(2009, 9, 25, 0, 6, 1)))", prediction=34, span="667-667"];
m11_486 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", color=green, community=0, file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''Age'', 28))", prediction=34, span="668-668"];
m11_487 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", color=green, community=0, file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Percent'', 99.9999m))", prediction=34, span="669-669"];
m11_488 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", color=green, community=0, file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Big_Number'', long.MaxValue))", prediction=34, span="670-670"];
m11_489 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", color=green, community=0, file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''Is_Cool'', false))", prediction=34, span="671-671"];
m11_490 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", color=green, community=0, file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Ignore'', ''dummy''))", prediction=34, span="672-672"];
m11_491 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", color=green, community=0, file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''Read_Only'', ''dummy''))", prediction=34, span="673-673"];
m11_492 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", color=green, community=0, file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Unique_Id'', new Guid(GUID_STRING)))", prediction=34, span="674-674"];
m11_493 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", color=green, community=0, file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Url'', ''http://example.com''))", prediction=34, span="675-675"];
m11_494 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", color=green, community=0, file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Url_Path'', ''/foo/bar''))", prediction=34, span="676-676"];
m11_495 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", color=green, community=0, file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Best_Friend'',\r\n                new XElement(''Name'', ''The Fonz''),\r\n                new XAttribute(''\\nSince'', 1952)))", prediction=34, span="677-679"];
m11_501 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", color=green, community=0, file="XmlDeserializerTests.cs", label="root.Add(friends)", prediction=34, span="690-690"];
m11_508 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", color=green, community=0, file="XmlDeserializerTests.cs", label="root.Add(foes)", prediction=34, span="701-701"];
m11_496 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", color=green, community=0, file="XmlDeserializerTests.cs", label="XElement friends = new XElement(''Friends'')", prediction=34, span="681-681"];
m11_499 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", color=green, community=0, file="XmlDeserializerTests.cs", label="friends.Add(new XElement(''Friend'',\r\n                    new XElement(''Name'', ''Friend'' + i),\r\n                    new XAttribute(''\\nSince'', DateTime.Now.Year - i)))", prediction=34, span="685-687"];
m11_498 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", color=green, community=0, file="XmlDeserializerTests.cs", label="i < 10", prediction=55, span="683-683"];
m11_500 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", color=green, community=0, file="XmlDeserializerTests.cs", label="i++", prediction=34, span="683-683"];
m11_502 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", color=green, community=0, file="XmlDeserializerTests.cs", label="XElement foes = new XElement(''Foes'')", prediction=34, span="692-692"];
m11_503 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", color=green, community=0, file="XmlDeserializerTests.cs", label="foes.Add(new XAttribute(''Team'', ''Yankees''))", prediction=58, span="694-694"];
m11_506 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", color=green, community=0, file="XmlDeserializerTests.cs", label="foes.Add(new XElement(''Foe'', new XElement(''Nickname'', ''Foe'' + i)))", prediction=34, span="698-698"];
m11_504 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", color=green, community=0, file="XmlDeserializerTests.cs", label="int i = 0", prediction=34, span="696-696"];
m11_505 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", color=green, community=0, file="XmlDeserializerTests.cs", label="i < 5", prediction=61, span="696-696"];
m11_507 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", color=green, community=0, file="XmlDeserializerTests.cs", label="i++", prediction=34, span="696-696"];
m11_511 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.CreateUnderscoresXml()", span="661-661"];
m11_444 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", span="612-612"];
m11_445 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="string doc = CreateXmlWithAttributesAndNullValues()", span="614-614"];
m11_446 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="XmlDeserializer xml = new XmlDeserializer()", span="615-615"];
m11_447 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="NullableValues output = xml.Deserialize<NullableValues>(new RestResponse { Content = doc })", span="616-616"];
m11_448 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="Assert.Null(output.Id)", span="618-618"];
m11_449 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="Assert.Null(output.StartDate)", span="619-619"];
m11_450 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="Assert.Null(output.UniqueId)", span="620-620"];
m11_451 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_With_Attributes_to_Nullable_Values()", span="612-612"];
m11_248 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", span="365-365"];
m11_249 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlDeserializerTests.cs", label="string doc = CreateAttributesXml()", span="367-367"];
m11_250 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="368-368"];
m11_251 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlDeserializerTests.cs", label="XmlDeserializer d = new XmlDeserializer()", span="369-369"];
m11_252 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlDeserializerTests.cs", label="PersonForXml p = d.Deserialize<PersonForXml>(response)", span="370-370"];
m11_253 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''John Sheehan'', p.Name)", span="372-372"];
m11_254 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new DateTime(2009, 9, 25, 0, 6, 1), p.StartDate)", span="373-373"];
m11_255 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(28, p.Age)", span="374-374"];
m11_256 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(long.MaxValue, p.BigNumber)", span="375-375"];
m11_257 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(99.9999m, p.Percent)", span="376-376"];
m11_258 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(false, p.IsCool)", span="377-377"];
m11_259 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Guid(GUID_STRING), p.UniqueId)", span="378-378"];
m11_260 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="379-379"];
m11_261 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="380-380"];
m11_262 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.NotNull(p.BestFriend)", span="381-381"];
m11_263 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''The Fonz'', p.BestFriend.Name)", span="382-382"];
m11_264 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(1952, p.BestFriend.Since)", span="383-383"];
m11_265 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Attributes_On_Default_Root()", span="365-365"];
m11_353 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", span="490-490"];
m11_354 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="string doc = CreateDashesXml()", span="492-492"];
m11_355 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="493-493"];
m11_356 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="XmlDeserializer d = new XmlDeserializer()", span="494-494"];
m11_357 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="PersonForXml p = d.Deserialize<PersonForXml>(response)", span="495-495"];
m11_358 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''John Sheehan'', p.Name)", span="497-497"];
m11_359 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new DateTime(2009, 9, 25, 0, 6, 1), p.StartDate)", span="498-498"];
m11_360 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(28, p.Age)", span="499-499"];
m11_361 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(long.MaxValue, p.BigNumber)", span="500-500"];
m11_362 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(99.9999m, p.Percent)", span="501-501"];
m11_363 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(false, p.IsCool)", span="502-502"];
m11_364 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Guid(GUID_STRING), p.UniqueId)", span="503-503"];
m11_365 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="504-504"];
m11_366 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="505-505"];
m11_367 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="Assert.NotNull(p.Friends)", span="506-506"];
m11_368 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(10, p.Friends.Count)", span="507-507"];
m11_369 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="Assert.NotNull(p.BestFriend)", span="508-508"];
m11_370 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''The Fonz'', p.BestFriend.Name)", span="509-509"];
m11_371 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(1952, p.BestFriend.Since)", span="510-510"];
m11_372 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="Assert.NotNull(p.Foes)", span="511-511"];
m11_373 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(5, p.Foes.Count)", span="512-512"];
m11_374 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''Yankees'', p.Foes.Team)", span="513-513"];
m11_375 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lower_Cased_Root_Elements_With_Dashes()", span="490-490"];
m11_385 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowerCasedRootElementWithDashesXml()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.CreateLowerCasedRootElementWithDashesXml()", span="799-799"];
m11_573 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowerCasedRootElementWithDashesXml()", file="XmlDeserializerTests.cs", label="XDocument doc = new XDocument()", span="801-801"];
m11_574 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowerCasedRootElementWithDashesXml()", file="XmlDeserializerTests.cs", label="XElement root = new XElement(''incoming-invoices'',\r\n                new XElement(''incoming-invoice'', new XElement(''concept-id'', \\n45)))", span="802-803"];
m11_575 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowerCasedRootElementWithDashesXml()", file="XmlDeserializerTests.cs", label="doc.Add(root)", span="805-805"];
m11_576 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowerCasedRootElementWithDashesXml()", file="XmlDeserializerTests.cs", label="return doc.ToString();", span="807-807"];
m11_577 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateLowerCasedRootElementWithDashesXml()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.CreateLowerCasedRootElementWithDashesXml()", span="799-799"];
m11_0 [cluster="RestSharp.Tests.XmlDeserializerTests.PathFor(string)", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.PathFor(string)", span="38-38"];
m11_1 [cluster="RestSharp.Tests.XmlDeserializerTests.PathFor(string)", file="XmlDeserializerTests.cs", label="return Path.Combine(this.sampleDataPath, sampleFile);", span="40-40"];
m11_2 [cluster="RestSharp.Tests.XmlDeserializerTests.PathFor(string)", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.PathFor(string)", span="38-38"];
m11_108 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name_With_Additional_Property()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name_With_Additional_\\nProperty()", span="184-184"];
m11_109 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name_With_Additional_Property()", file="XmlDeserializerTests.cs", label="string xmlpath = this.PathFor(''InlineListSample.xml'')", span="186-186"];
m11_110 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name_With_Additional_Property()", file="XmlDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="187-187"];
m11_111 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name_With_Additional_Property()", file="XmlDeserializerTests.cs", label="XmlDeserializer xml = new XmlDeserializer()", span="188-188"];
m11_112 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name_With_Additional_Property()", file="XmlDeserializerTests.cs", label="InlineListSample output = xml.Deserialize<InlineListSample>(new RestResponse { Content = doc.ToString() })", span="189-189"];
m11_113 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name_With_Additional_Property()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(4, output.Count)", span="191-191"];
m11_114 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name_With_Additional_Property()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name_With_Additional_\\nProperty()", span="184-184"];
m11_204 [cluster="System.TimeSpan.TimeSpan(int, int, int)", file="XmlDeserializerTests.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int)", span="0-0"];
m11_461 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", span="939-939"];
m11_654 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", file="XmlDeserializerTests.cs", label="XDocument doc = new XDocument()", span="941-941"];
m11_655 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", file="XmlDeserializerTests.cs", label="XElement root = new XElement(''NullableValues'')", span="942-942"];
m11_659 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", file="XmlDeserializerTests.cs", label="doc.Add(root)", span="951-951"];
m11_660 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", file="XmlDeserializerTests.cs", label="return doc.ToString();", span="953-953"];
m11_656 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", file="XmlDeserializerTests.cs", label="XElement idElement = new XElement(''Id'', null)", span="943-943"];
m11_658 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", file="XmlDeserializerTests.cs", label="root.Add(idElement,\r\n                new XElement(''StartDate'', null),\r\n                new XElement(''UniqueId'', new Guid(\\nGUID_STRING)))", span="947-949"];
m11_657 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", file="XmlDeserializerTests.cs", label="idElement.SetAttributeValue(''SomeAttribute'', ''SomeAttribute_Value'')", span="945-945"];
m11_661 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValuesAndPopulatedValues()", span="939-939"];
m11_28 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Into_Struct()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Into_Struct()", span="70-70"];
m11_29 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Into_Struct()", file="XmlDeserializerTests.cs", label="string content = ''<root><one>oneOneOne</one><two>twoTwoTwo</two><three>3</three></root>''", span="72-72"];
m11_30 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Into_Struct()", file="XmlDeserializerTests.cs", label="XmlDeserializer xml = new XmlDeserializer()", span="73-73"];
m11_31 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Into_Struct()", file="XmlDeserializerTests.cs", label="SimpleStruct output = xml.Deserialize<SimpleStruct>(new RestResponse { Content = content })", span="74-74"];
m11_32 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Into_Struct()", file="XmlDeserializerTests.cs", label="Assert.NotNull(output)", span="76-76"];
m11_33 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Into_Struct()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''oneOneOne'', output.One)", span="77-77"];
m11_34 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Into_Struct()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''twoTwoTwo'', output.Two)", span="78-78"];
m11_35 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Into_Struct()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(3, output.Three)", span="79-79"];
m11_36 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Into_Struct()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Into_Struct()", span="70-70"];
m11_176 [cluster="System.Guid.Guid(string)", file="XmlDeserializerTests.cs", label="Entry System.Guid.Guid(string)", span="0-0"];
m11_222 [cluster="System.DateTime.ToString(string, System.IFormatProvider)", file="XmlDeserializerTests.cs", label="Entry System.DateTime.ToString(string, System.IFormatProvider)", span="0-0"];
m11_281 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", span="409-409"];
m11_282 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="string doc = CreateUnderscoresXml()", span="411-411"];
m11_283 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="412-412"];
m11_284 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="XmlDeserializer d = new XmlDeserializer()", span="413-413"];
m11_285 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="PersonForXml p = d.Deserialize<PersonForXml>(response)", span="414-414"];
m11_286 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''John Sheehan'', p.Name)", span="416-416"];
m11_287 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new DateTime(2009, 9, 25, 0, 6, 1), p.StartDate)", span="417-417"];
m11_288 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(28, p.Age)", span="418-418"];
m11_289 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(long.MaxValue, p.BigNumber)", span="419-419"];
m11_290 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(99.9999m, p.Percent)", span="420-420"];
m11_291 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(false, p.IsCool)", span="421-421"];
m11_292 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Guid(GUID_STRING), p.UniqueId)", span="422-422"];
m11_293 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="423-423"];
m11_294 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="424-424"];
m11_295 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.NotNull(p.Friends)", span="425-425"];
m11_296 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(10, p.Friends.Count)", span="426-426"];
m11_297 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.NotNull(p.BestFriend)", span="427-427"];
m11_298 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''The Fonz'', p.BestFriend.Name)", span="428-428"];
m11_299 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(1952, p.BestFriend.Since)", span="429-429"];
m11_300 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.NotNull(p.Foes)", span="430-430"];
m11_301 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(5, p.Foes.Count)", span="431-431"];
m11_302 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''Yankees'', p.Foes.Team)", span="432-432"];
m11_303 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_On_Default_Root()", span="409-409"];
m11_14 [cluster="RestSharp.RestResponse.RestResponse()", file="XmlDeserializerTests.cs", label="Entry RestSharp.RestResponse.RestResponse()", span="184-184"];
m11_162 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", span="257-257"];
m11_163 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="CultureInfo culture = CultureInfo.InvariantCulture", span="259-259"];
m11_164 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="string doc = CreateXmlWithoutEmptyValues(culture)", span="260-260"];
m11_165 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="XmlDeserializer xml = new XmlDeserializer\r\n                                  {\r\n                                      Culture = \\nculture\r\n                                  }", span="261-264"];
m11_166 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="NullableValues output = xml.Deserialize<NullableValues>(new RestResponse { Content = doc })", span="265-265"];
m11_167 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="Assert.NotNull(output.Id)", span="267-267"];
m11_168 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="Assert.NotNull(output.StartDate)", span="268-268"];
m11_169 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="Assert.NotNull(output.UniqueId)", span="269-269"];
m11_170 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(123, output.Id)", span="270-270"];
m11_171 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new DateTime(2010, 2, 21, 9, 35, 00), output.StartDate)", span="271-271"];
m11_172 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Guid(GUID_STRING), output.UniqueId)", span="272-272"];
m11_173 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_to_Nullable_Values()", span="257-257"];
m11_68 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_Without_Matching_Class_Case()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_Without_Matching_Class_Case()", span="124-124"];
m11_69 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_Without_Matching_Class_Case()", file="XmlDeserializerTests.cs", label="string xmlpath = this.PathFor(''InlineListSample.xml'')", span="126-126"];
m11_70 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_Without_Matching_Class_Case()", file="XmlDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="127-127"];
m11_71 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_Without_Matching_Class_Case()", file="XmlDeserializerTests.cs", label="XmlDeserializer xml = new XmlDeserializer()", span="128-128"];
m11_72 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_Without_Matching_Class_Case()", file="XmlDeserializerTests.cs", label="List<Image> output = xml.Deserialize<List<Image>>(new RestResponse { Content = doc.ToString() })", span="129-129"];
m11_73 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_Without_Matching_Class_Case()", file="XmlDeserializerTests.cs", label="Assert.IsNotEmpty(output)", span="131-131"];
m11_74 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_Without_Matching_Class_Case()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(4, output.Count)", span="132-132"];
m11_75 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_Without_Matching_Class_Case()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_Without_Matching_Class_Case()", span="124-124"];
m11_59 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_List_Inheritor_From_Custom_Root_With_Attributes()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_List_Inheritor_From_Custom_Root_With_Attributes()", span="111-111"];
m11_60 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_List_Inheritor_From_Custom_Root_With_Attributes()", file="XmlDeserializerTests.cs", label="string xmlpath = this.PathFor(''ListWithAttributes.xml'')", span="113-113"];
m11_61 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_List_Inheritor_From_Custom_Root_With_Attributes()", file="XmlDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="114-114"];
m11_62 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_List_Inheritor_From_Custom_Root_With_Attributes()", file="XmlDeserializerTests.cs", label="XmlDeserializer xml = new XmlDeserializer { RootElement = ''Calls'' }", span="115-115"];
m11_63 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_List_Inheritor_From_Custom_Root_With_Attributes()", file="XmlDeserializerTests.cs", label="TwilioCallList output = xml.Deserialize<TwilioCallList>(new RestResponse { Content = doc.ToString() })", span="116-116"];
m11_64 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_List_Inheritor_From_Custom_Root_With_Attributes()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(3, output.NumPages)", span="118-118"];
m11_65 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_List_Inheritor_From_Custom_Root_With_Attributes()", file="XmlDeserializerTests.cs", label="Assert.IsNotEmpty(output)", span="119-119"];
m11_66 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_List_Inheritor_From_Custom_Root_With_Attributes()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(2, output.Count)", span="120-120"];
m11_67 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_List_Inheritor_From_Custom_Root_With_Attributes()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_List_Inheritor_From_Custom_Root_With_Attributes()", span="111-111"];
m11_328 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", span="753-753"];
m11_543 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="XDocument doc = new XDocument()", span="755-755"];
m11_544 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="XElement root = new XElement(''Person'')", span="756-756"];
m11_570 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="doc.Add(root)", span="794-794"];
m11_571 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="return doc.ToString();", span="796-796"];
m11_545 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Name'', ''John Sheehan''))", span="758-758"];
m11_546 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Start_Date'', new DateTime(2009, 9, 25, 0, 6, 1)))", span="759-759"];
m11_547 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''Age'', 28))", span="760-760"];
m11_548 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Percent'', 99.9999m))", span="761-761"];
m11_549 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Big-Number'', long.MaxValue))", span="762-762"];
m11_550 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''Is-Cool'', false))", span="763-763"];
m11_551 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Ignore'', ''dummy''))", span="764-764"];
m11_552 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''Read-Only'', ''dummy''))", span="765-765"];
m11_553 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Unique-Id'', new Guid(GUID_STRING)))", span="766-766"];
m11_554 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Url'', ''http://example.com''))", span="767-767"];
m11_555 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Url-Path'', ''/foo/bar''))", span="768-768"];
m11_556 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Best-Friend'',\r\n                new XElement(''Name'', ''The Fonz''),\r\n                new XAttribute(''\\nSince'', 1952)))", span="769-771"];
m11_562 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="root.Add(friends)", span="782-782"];
m11_569 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="root.Add(foes)", span="793-793"];
m11_557 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="XElement friends = new XElement(''Friends'')", span="773-773"];
m11_558 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="int i = 0", span="775-775"];
m11_560 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="friends.Add(new XElement(''Friend'',\r\n                    new XElement(''Name'', ''Friend'' + i),\r\n                    new XAttribute(''\\nSince'', DateTime.Now.Year - i)))", span="777-779"];
m11_559 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="i < 10", span="775-775"];
m11_561 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="i++", span="775-775"];
m11_563 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="XElement foes = new XElement(''Foes'')", span="784-784"];
m11_564 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="foes.Add(new XAttribute(''Team'', ''Yankees''))", span="786-786"];
m11_567 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="foes.Add(new XElement(''Foe'', new XElement(''Nickname'', ''Foe'' + i)))", span="790-790"];
m11_565 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="int i = 0", span="788-788"];
m11_566 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="i < 5", span="788-788"];
m11_568 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="i++", span="788-788"];
m11_572 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.CreateDashesXml()", span="753-753"];
m11_417 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Goodreads_Xml()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Goodreads_Xml()", span="574-574"];
m11_418 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Goodreads_Xml()", file="XmlDeserializerTests.cs", label="string xmlpath = this.PathFor(''Goodreads.xml'')", span="576-576"];
m11_419 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Goodreads_Xml()", file="XmlDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="577-577"];
m11_420 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Goodreads_Xml()", file="XmlDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc.ToString() }", span="578-578"];
m11_421 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Goodreads_Xml()", file="XmlDeserializerTests.cs", label="XmlDeserializer d = new XmlDeserializer()", span="579-579"];
m11_422 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Goodreads_Xml()", file="XmlDeserializerTests.cs", label="GoodReadsReviewCollection output = d.Deserialize<GoodReadsReviewCollection>(response)", span="580-580"];
m11_423 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Goodreads_Xml()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(2, output.Reviews.Count)", span="582-582"];
m11_424 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Goodreads_Xml()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''1208943892'', output.Reviews[0].Id)", span="583-583"];
m11_425 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Goodreads_Xml()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''1198344567'', output.Reviews[1].Id)", span="584-584"];
m11_426 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Goodreads_Xml()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Goodreads_Xml()", span="574-574"];
m11_92 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", span="160-160"];
m11_93 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="string xmlpath = this.PathFor(''InlineListSample.xml'')", span="162-162"];
m11_94 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="163-163"];
m11_95 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="XmlDeserializer xml = new XmlDeserializer()", span="164-164"];
m11_96 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="InlineListSample output = xml.Deserialize<InlineListSample>(new RestResponse { Content = doc.ToString() })", span="165-165"];
m11_97 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="Assert.IsNotEmpty(output.Images)", span="167-167"];
m11_98 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(4, output.Images.Count)", span="168-168"];
m11_99 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_Without_Matching_Class_Name()", span="160-160"];
m11_246 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", span="810-810"];
m11_578 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="XDocument doc = new XDocument()", span="812-812"];
m11_579 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="XElement root = new XElement(''Person'')", span="813-813"];
m11_601 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="doc.Add(root)", span="843-843"];
m11_602 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="return doc.ToString();", span="845-845"];
m11_580 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Name'', ''John Sheehan''))", span="815-815"];
m11_581 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''StartDate'', new DateTime(2009, 9, 25, 0, 6, 1)))", span="816-816"];
m11_582 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Age'', 28))", span="817-817"];
m11_583 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Percent'', 99.9999m))", span="818-818"];
m11_584 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''BigNumber'', long.MaxValue))", span="819-819"];
m11_585 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''IsCool'', false))", span="820-820"];
m11_586 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Ignore'', ''dummy''))", span="821-821"];
m11_587 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''ReadOnly'', ''dummy''))", span="822-822"];
m11_588 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''UniqueId'', new Guid(GUID_STRING)))", span="823-823"];
m11_589 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''EmptyGuid'', ''''))", span="824-824"];
m11_590 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Url'', ''http://example.com''))", span="825-825"];
m11_591 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''UrlPath'', ''/foo/bar''))", span="826-826"];
m11_592 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Order'', ''third''))", span="827-827"];
m11_593 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Disposition'', ''so-so''))", span="828-828"];
m11_594 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''BestFriend'',\r\n                new XElement(''Name'', ''The Fonz''),\r\n                new XElement(''\\nSince'', 1952)))", span="829-831"];
m11_600 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="root.Add(friends)", span="842-842"];
m11_595 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="XElement friends = new XElement(''Friends'')", span="833-833"];
m11_596 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="int i = 0", span="835-835"];
m11_598 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="friends.Add(new XElement(''Friend'',\r\n                    new XElement(''Name'', ''Friend'' + i),\r\n                    new XElement(''\\nSince'', DateTime.Now.Year - i)))", span="837-839"];
m11_597 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="i < 10", span="835-835"];
m11_599 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="i++", span="835-835"];
m11_603 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.CreateElementsXml()", span="810-810"];
m11_3 [cluster="System.IO.Path.Combine(string, string)", file="XmlDeserializerTests.cs", label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m11_223 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", span="338-338"];
m11_224 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="string doc = CreateElementsXml()", span="340-340"];
m11_225 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="341-341"];
m11_226 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="XmlDeserializer d = new XmlDeserializer()", span="342-342"];
m11_227 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="PersonForXml p = d.Deserialize<PersonForXml>(response)", span="343-343"];
m11_228 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''John Sheehan'', p.Name)", span="345-345"];
m11_229 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new DateTime(2009, 9, 25, 0, 6, 1), p.StartDate)", span="346-346"];
m11_230 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(28, p.Age)", span="347-347"];
m11_231 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(long.MaxValue, p.BigNumber)", span="348-348"];
m11_232 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(99.9999m, p.Percent)", span="349-349"];
m11_233 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(false, p.IsCool)", span="350-350"];
m11_234 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Guid(GUID_STRING), p.UniqueId)", span="351-351"];
m11_235 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(Guid.Empty, p.EmptyGuid)", span="352-352"];
m11_236 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="353-353"];
m11_237 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="354-354"];
m11_238 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(Order.Third, p.Order)", span="355-355"];
m11_239 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(Disposition.SoSo, p.Disposition)", span="356-356"];
m11_240 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.NotNull(p.Friends)", span="357-357"];
m11_241 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(10, p.Friends.Count)", span="358-358"];
m11_242 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.NotNull(p.BestFriend)", span="359-359"];
m11_243 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''The Fonz'', p.BestFriend.Name)", span="360-360"];
m11_244 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(1952, p.BestFriend.Since)", span="361-361"];
m11_245 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Elements_On_Default_Root()", span="338-338"];
m11_436 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_String()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_String()", span="600-600"];
m11_437 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_String()", file="XmlDeserializerTests.cs", label="string xmlpath = this.PathFor(''boolean_from_string.xml'')", span="602-602"];
m11_438 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_String()", file="XmlDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="603-603"];
m11_439 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_String()", file="XmlDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc.ToString() }", span="604-604"];
m11_440 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_String()", file="XmlDeserializerTests.cs", label="XmlDeserializer d = new XmlDeserializer()", span="605-605"];
m11_441 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_String()", file="XmlDeserializerTests.cs", label="BooleanTest output = d.Deserialize<BooleanTest>(response)", span="606-606"];
m11_442 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_String()", file="XmlDeserializerTests.cs", label="Assert.True(output.Value)", span="608-608"];
m11_443 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_String()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_String()", span="600-600"];
m11_76 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_With_Matching_Class_Case()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_With_Matching_Class_Case()", span="136-136"];
m11_77 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_With_Matching_Class_Case()", file="XmlDeserializerTests.cs", label="string xmlpath = this.PathFor(''InlineListSample.xml'')", span="138-138"];
m11_78 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_With_Matching_Class_Case()", file="XmlDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="139-139"];
m11_79 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_With_Matching_Class_Case()", file="XmlDeserializerTests.cs", label="XmlDeserializer xml = new XmlDeserializer()", span="140-140"];
m11_80 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_With_Matching_Class_Case()", file="XmlDeserializerTests.cs", label="List<image> output = xml.Deserialize<List<image>>(new RestResponse { Content = doc.ToString() })", span="141-141"];
m11_81 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_With_Matching_Class_Case()", file="XmlDeserializerTests.cs", label="Assert.IsNotEmpty(output)", span="143-143"];
m11_82 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_With_Matching_Class_Case()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(4, output.Count)", span="144-144"];
m11_83 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_With_Matching_Class_Case()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_To_Standalone_List_With_Matching_Class_Case()", span="136-136"];
m11_462 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", span="636-636"];
m11_463 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlDeserializerTests.cs", label="CultureInfo culture = CultureInfo.InvariantCulture", span="638-638"];
m11_464 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlDeserializerTests.cs", label="XDocument doc = new XDocument(culture)", span="639-639"];
m11_473 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlDeserializerTests.cs", label="XmlDeserializer d = new XmlDeserializer { Culture = culture }", span="652-652"];
m11_465 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlDeserializerTests.cs", label="DateTimeOffset dateTimeOffset = new DateTimeOffset(2013, 02, 08, 9, 18, 22, TimeSpan.FromHours(10))", span="640-640"];
m11_471 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlDeserializerTests.cs", label="doc.Add(root)", span="648-648"];
m11_472 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc.ToString() }", span="651-651"];
m11_466 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlDeserializerTests.cs", label="DateTimeOffset? nullableDateTimeOffsetWithValue = new DateTimeOffset(2013, 02, 08, 9, 18, 23, TimeSpan.FromHours(10))", span="641-641"];
m11_468 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''DateTimeOffset'', dateTimeOffset))", span="644-644"];
m11_475 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(dateTimeOffset, payload.DateTimeOffset)", span="655-655"];
m11_467 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlDeserializerTests.cs", label="XElement root = new XElement(''Dates'')", span="642-642"];
m11_470 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''NullableDateTimeOffsetWithValue'', nullableDateTimeOffsetWithValue))", span="646-646"];
m11_478 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(nullableDateTimeOffsetWithValue, payload.NullableDateTimeOffsetWithValue)", span="658-658"];
m11_469 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''NullableDateTimeOffsetWithNull'', string.Empty))", span="645-645"];
m11_474 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlDeserializerTests.cs", label="DateTimeTestStructure payload = d.Deserialize<DateTimeTestStructure>(response)", span="653-653"];
m11_476 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlDeserializerTests.cs", label="Assert.Null(payload.NullableDateTimeOffsetWithNull)", span="656-656"];
m11_477 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlDeserializerTests.cs", label="Assert.True(payload.NullableDateTimeOffsetWithValue.HasValue)", span="657-657"];
m11_479 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_DateTimeOffset()", span="636-636"];
m11_174 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithoutEmptyValues(System.Globalization.CultureInfo)", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.CreateXmlWithoutEmptyValues(System.Globalization.CultureInfo)", span="887-887"];
m11_627 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithoutEmptyValues(System.Globalization.CultureInfo)", file="XmlDeserializerTests.cs", label="XDocument doc = new XDocument()", span="889-889"];
m11_629 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithoutEmptyValues(System.Globalization.CultureInfo)", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Id'', 123),\r\n                new XElement(''StartDate'', new DateTime(2010, 2, 21, 9, 35, 00).ToString(\\nculture)),\r\n                new XElement(''UniqueId'', new Guid(GUID_STRING)))", span="892-894"];
m11_628 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithoutEmptyValues(System.Globalization.CultureInfo)", file="XmlDeserializerTests.cs", label="XElement root = new XElement(''NullableValues'')", span="890-890"];
m11_630 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithoutEmptyValues(System.Globalization.CultureInfo)", file="XmlDeserializerTests.cs", label="doc.Add(root)", span="896-896"];
m11_631 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithoutEmptyValues(System.Globalization.CultureInfo)", file="XmlDeserializerTests.cs", label="return doc.ToString();", span="898-898"];
m11_632 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithoutEmptyValues(System.Globalization.CultureInfo)", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.CreateXmlWithoutEmptyValues(System.Globalization.CultureInfo)", span="887-887"];
m11_37 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_When_RootElement_Deeper_Then_One()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_When_RootElement_Deeper_Then_One()", span="83-83"];
m11_38 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_When_RootElement_Deeper_Then_One()", file="XmlDeserializerTests.cs", label="string content = ''<root><subroot><subsubroot><one>oneOneOne</one><two>twoTwoTwo</two><three>3</three></subsubroot></subroot></root>''", span="85-85"];
m11_39 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_When_RootElement_Deeper_Then_One()", file="XmlDeserializerTests.cs", label="XmlDeserializer xml = new XmlDeserializer() { RootElement = ''subsubroot'' }", span="86-86"];
m11_40 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_When_RootElement_Deeper_Then_One()", file="XmlDeserializerTests.cs", label="SimpleStruct output = xml.Deserialize<SimpleStruct>(new RestResponse { Content = content })", span="87-87"];
m11_41 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_When_RootElement_Deeper_Then_One()", file="XmlDeserializerTests.cs", label="Assert.NotNull(output)", span="89-89"];
m11_42 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_When_RootElement_Deeper_Then_One()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''oneOneOne'', output.One)", span="90-90"];
m11_43 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_When_RootElement_Deeper_Then_One()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''twoTwoTwo'', output.Two)", span="91-91"];
m11_44 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_When_RootElement_Deeper_Then_One()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(3, output.Three)", span="92-92"];
m11_45 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_When_RootElement_Deeper_Then_One()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_When_RootElement_Deeper_Then_One()", span="83-83"];
m11_247 [cluster="System.Uri.Uri(string, System.UriKind)", file="XmlDeserializerTests.cs", label="Entry System.Uri.Uri(string, System.UriKind)", span="0-0"];
m11_58 [cluster="System.Collections.Generic.IEnumerable<int>.Sum()", file="XmlDeserializerTests.cs", label="Entry System.Collections.Generic.IEnumerable<int>.Sum()", span="0-0"];
m11_452 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValues()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValues()", span="922-922"];
m11_645 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValues()", file="XmlDeserializerTests.cs", label="XDocument doc = new XDocument()", span="924-924"];
m11_646 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValues()", file="XmlDeserializerTests.cs", label="XElement root = new XElement(''NullableValues'')", span="925-925"];
m11_650 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValues()", file="XmlDeserializerTests.cs", label="doc.Add(root)", span="934-934"];
m11_651 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValues()", file="XmlDeserializerTests.cs", label="return doc.ToString();", span="936-936"];
m11_647 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValues()", file="XmlDeserializerTests.cs", label="XElement idElement = new XElement(''Id'', null)", span="926-926"];
m11_649 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValues()", file="XmlDeserializerTests.cs", label="root.Add(idElement,\r\n                new XElement(''StartDate'', null),\r\n                new XElement(''UniqueId'', null))", span="930-932"];
m11_648 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValues()", file="XmlDeserializerTests.cs", label="idElement.SetAttributeValue(''SomeAttribute'', ''SomeAttribute_Value'')", span="928-928"];
m11_652 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValues()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.CreateXmlWithAttributesAndNullValues()", span="922-922"];
m11_46 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", span="96-96"];
m11_47 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", file="XmlDeserializerTests.cs", label="string xmlpath = this.PathFor(''xmllists.xml'')", span="98-98"];
m11_48 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", file="XmlDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="99-99"];
m11_49 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", file="XmlDeserializerTests.cs", label="XmlDeserializer xml = new XmlDeserializer()", span="100-100"];
m11_50 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", file="XmlDeserializerTests.cs", label="SimpleTypesListSample output = xml.Deserialize<SimpleTypesListSample>(\r\n                new RestResponse { Content = doc.ToString() })", span="101-102"];
m11_51 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", file="XmlDeserializerTests.cs", label="Assert.IsNotEmpty(output.Names)", span="104-104"];
m11_52 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", file="XmlDeserializerTests.cs", label="Assert.IsNotEmpty(output.Numbers)", span="105-105"];
m11_53 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", file="XmlDeserializerTests.cs", label="Assert.False(output.Names[0].Length == 0)", span="106-106"];
m11_54 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", file="XmlDeserializerTests.cs", label="Assert.False(output.Numbers.Sum() == 0)", span="107-107"];
m11_55 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lists_of_Simple_Types()", span="96-96"];
m11_115 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", span="195-195"];
m11_116 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="string xmlpath = this.PathFor(''NestedListSample.xml'')", span="197-197"];
m11_117 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="198-198"];
m11_118 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="XmlDeserializer xml = new XmlDeserializer()", span="199-199"];
m11_119 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="InlineListSample output = xml.Deserialize<InlineListSample>(new RestResponse { Content = doc.ToString() })", span="200-200"];
m11_120 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="Assert.IsNotEmpty(output.Images)", span="202-202"];
m11_121 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(4, output.Images.Count)", span="203-203"];
m11_122 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_Without_Matching_Class_Name()", span="195-195"];
m11_4 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute()", span="44-44"];
m11_5 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute()", file="XmlDeserializerTests.cs", label="string content =\r\n                ''<oddball><sid>1</sid><friendlyName>Jackson</friendlyName><oddballPropertyName>oddball</oddballPropertyName></\\noddball>''", span="46-47"];
m11_6 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute()", file="XmlDeserializerTests.cs", label="XmlDeserializer xml = new XmlDeserializer()", span="48-48"];
m11_7 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute()", file="XmlDeserializerTests.cs", label="Oddball output = xml.Deserialize<Oddball>(new RestResponse { Content = content })", span="49-49"];
m11_8 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute()", file="XmlDeserializerTests.cs", label="Assert.NotNull(output)", span="51-51"];
m11_9 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''1'', output.Sid)", span="52-52"];
m11_10 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''Jackson'', output.FriendlyName)", span="53-53"];
m11_11 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''oddball'', output.GoodPropertyName)", span="54-54"];
m11_12 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute()", span="44-44"];
m11_274 [cluster="RestSharp.Tests.XmlDeserializerTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", span="398-398"];
m11_275 [cluster="RestSharp.Tests.XmlDeserializerTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="XmlDeserializerTests.cs", label="string doc = CreateElementsXml()", span="400-400"];
m11_276 [cluster="RestSharp.Tests.XmlDeserializerTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="XmlDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="401-401"];
m11_277 [cluster="RestSharp.Tests.XmlDeserializerTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="XmlDeserializerTests.cs", label="XmlDeserializer d = new XmlDeserializer()", span="402-402"];
m11_278 [cluster="RestSharp.Tests.XmlDeserializerTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="XmlDeserializerTests.cs", label="PersonForXml p = d.Deserialize<PersonForXml>(response)", span="403-403"];
m11_279 [cluster="RestSharp.Tests.XmlDeserializerTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="XmlDeserializerTests.cs", label="Assert.Null(p.ReadOnlyProxy)", span="405-405"];
m11_280 [cluster="RestSharp.Tests.XmlDeserializerTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Ignore_ReadOnly_Property_That_Exists_In_Data()", span="398-398"];
m11_376 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", span="517-517"];
m11_377 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", file="XmlDeserializerTests.cs", label="string doc = CreateLowerCasedRootElementWithDashesXml()", span="519-519"];
m11_378 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", file="XmlDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="520-520"];
m11_379 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", file="XmlDeserializerTests.cs", label="XmlDeserializer d = new XmlDeserializer()", span="521-521"];
m11_380 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", file="XmlDeserializerTests.cs", label="List<IncomingInvoice> p = d.Deserialize<List<IncomingInvoice>>(response)", span="522-522"];
m11_381 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", file="XmlDeserializerTests.cs", label="Assert.NotNull(p)", span="524-524"];
m11_382 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(1, p.Count)", span="525-525"];
m11_383 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(45, p[0].ConceptId)", span="526-526"];
m11_384 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Root_Elements_Without_Matching_Case_And_Dashes()", span="517-517"];
m11_160 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithNullValues()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.CreateXmlWithNullValues()", span="873-873"];
m11_621 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithNullValues()", file="XmlDeserializerTests.cs", label="XDocument doc = new XDocument()", span="875-875"];
m11_622 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithNullValues()", file="XmlDeserializerTests.cs", label="XElement root = new XElement(''NullableValues'')", span="876-876"];
m11_624 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithNullValues()", file="XmlDeserializerTests.cs", label="doc.Add(root)", span="882-882"];
m11_625 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithNullValues()", file="XmlDeserializerTests.cs", label="return doc.ToString();", span="884-884"];
m11_623 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithNullValues()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Id'', null),\r\n                new XElement(''StartDate'', null),\r\n                new XElement(''UniqueId'', \\nnull))", span="878-880"];
m11_626 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithNullValues()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.CreateXmlWithNullValues()", span="873-873"];
m11_480 [cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="XmlDeserializerTests.cs", label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0"];
m11_100 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", span="172-172"];
m11_101 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="string xmlpath = this.PathFor(''InlineListSample.xml'')", span="174-174"];
m11_102 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="175-175"];
m11_103 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="XmlDeserializer xml = new XmlDeserializer()", span="176-176"];
m11_104 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="InlineListSample output = xml.Deserialize<InlineListSample>(new RestResponse { Content = doc.ToString() })", span="177-177"];
m11_105 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="Assert.IsNotEmpty(output.images)", span="179-179"];
m11_106 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(4, output.images.Count)", span="180-180"];
m11_107 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Parentless_aka_Inline_List_Items_With_Matching_Class_Name()", span="172-172"];
m11_175 [cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="XmlDeserializerTests.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0"];
m11_142 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", span="232-232"];
m11_143 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", file="XmlDeserializerTests.cs", label="string doc = CreateXmlWithEmptyInlineList()", span="234-234"];
m11_144 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", file="XmlDeserializerTests.cs", label="XmlDeserializer xml = new XmlDeserializer()", span="235-235"];
m11_145 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", file="XmlDeserializerTests.cs", label="EmptyListSample output = xml.Deserialize<EmptyListSample>(new RestResponse { Content = doc })", span="236-236"];
m11_146 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", file="XmlDeserializerTests.cs", label="Assert.NotNull(output.images)", span="238-238"];
m11_147 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", file="XmlDeserializerTests.cs", label="Assert.NotNull(output.Images)", span="239-239"];
m11_148 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", file="XmlDeserializerTests.cs", label="Assert.IsEmpty(output.images)", span="240-240"];
m11_149 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", file="XmlDeserializerTests.cs", label="Assert.IsEmpty(output.Images)", span="241-241"];
m11_150 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Inline_List_Without_Elements_To_Empty_List()", span="232-232"];
m11_329 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", span="463-463"];
m11_330 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="string doc = CreateLowercaseUnderscoresXml()", span="465-465"];
m11_331 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc }", span="466-466"];
m11_332 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="XmlDeserializer d = new XmlDeserializer()", span="467-467"];
m11_333 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="PersonForXml p = d.Deserialize<PersonForXml>(response)", span="468-468"];
m11_334 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''John Sheehan'', p.Name)", span="470-470"];
m11_335 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new DateTime(2009, 9, 25, 0, 6, 1), p.StartDate)", span="471-471"];
m11_336 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(28, p.Age)", span="472-472"];
m11_337 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(long.MaxValue, p.BigNumber)", span="473-473"];
m11_338 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(99.9999m, p.Percent)", span="474-474"];
m11_339 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(false, p.IsCool)", span="475-475"];
m11_340 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Guid(GUID_STRING), p.UniqueId)", span="476-476"];
m11_341 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Uri(''http://example.com'', UriKind.RelativeOrAbsolute), p.Url)", span="477-477"];
m11_342 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(new Uri(''/foo/bar'', UriKind.RelativeOrAbsolute), p.UrlPath)", span="478-478"];
m11_343 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.NotNull(p.Friends)", span="479-479"];
m11_344 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(10, p.Friends.Count)", span="480-480"];
m11_345 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.NotNull(p.BestFriend)", span="481-481"];
m11_346 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''The Fonz'', p.BestFriend.Name)", span="482-482"];
m11_347 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(1952, p.BestFriend.Since)", span="483-483"];
m11_348 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.NotNull(p.Foes)", span="484-484"];
m11_349 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(5, p.Foes.Count)", span="485-485"];
m11_350 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''Yankees'', p.Foes.Team)", span="486-486"];
m11_351 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Names_With_Underscores_Without_Matching_Case_On_Default_Root()", span="463-463"];
m11_15 [cluster="RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.IRestResponse)", file="XmlDeserializerTests.cs", label="Entry RestSharp.Deserializers.XmlDeserializer.Deserialize<T>(RestSharp.IRestResponse)", span="49-49"];
m11_407 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Google_Weather_Xml()", span="560-560"];
m11_408 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file="XmlDeserializerTests.cs", label="string xmlpath = this.PathFor(''GoogleWeather.xml'')", span="562-562"];
m11_409 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file="XmlDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="563-563"];
m11_410 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file="XmlDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc.ToString() }", span="564-564"];
m11_411 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file="XmlDeserializerTests.cs", label="XmlDeserializer d = new XmlDeserializer()", span="565-565"];
m11_412 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file="XmlDeserializerTests.cs", label="xml_api_reply output = d.Deserialize<xml_api_reply>(response)", span="566-566"];
m11_413 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file="XmlDeserializerTests.cs", label="Assert.IsNotEmpty(output.weather)", span="568-568"];
m11_414 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(4, output.weather.Count)", span="569-569"];
m11_415 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''Sunny'', output.weather[0].condition.data)", span="570-570"];
m11_416 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Google_Weather_Xml()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Google_Weather_Xml()", span="560-560"];
m11_151 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyInlineList()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyInlineList()", span="912-912"];
m11_640 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyInlineList()", file="XmlDeserializerTests.cs", label="XDocument doc = new XDocument()", span="914-914"];
m11_641 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyInlineList()", file="XmlDeserializerTests.cs", label="XElement root = new XElement(''EmptyListSample'')", span="915-915"];
m11_642 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyInlineList()", file="XmlDeserializerTests.cs", label="doc.Add(root)", span="917-917"];
m11_643 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyInlineList()", file="XmlDeserializerTests.cs", label="return doc.ToString();", span="919-919"];
m11_644 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyInlineList()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyInlineList()", span="912-912"];
m11_206 [cluster="System.TimeSpan.TimeSpan(long)", file="XmlDeserializerTests.cs", label="Entry System.TimeSpan.TimeSpan(long)", span="0-0"];
m11_209 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", span="315-315"];
m11_210 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlDeserializerTests.cs", label="CultureInfo culture = CultureInfo.InvariantCulture", span="317-317"];
m11_211 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlDeserializerTests.cs", label="string format = ''dd yyyy MMM, hh:mm ss tt zzz''", span="318-318"];
m11_215 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''StartDate'', date.ToString(format, culture)))", span="323-323"];
m11_217 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlDeserializerTests.cs", label="XmlDeserializer xml = new XmlDeserializer\r\n                                  {\r\n                                      DateFormat = \\nformat,\r\n                                      Culture = culture\r\n                                  }", span="326-330"];
m11_212 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlDeserializerTests.cs", label="DateTime date = new DateTime(2010, 2, 8, 11, 11, 11)", span="319-319"];
m11_213 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlDeserializerTests.cs", label="XDocument doc = new XDocument()", span="320-320"];
m11_220 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(date, output.StartDate)", span="334-334"];
m11_214 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlDeserializerTests.cs", label="XElement root = new XElement(''Person'')", span="321-321"];
m11_216 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlDeserializerTests.cs", label="doc.Add(root)", span="324-324"];
m11_218 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc.ToString() }", span="331-331"];
m11_219 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlDeserializerTests.cs", label="PersonForXml output = xml.Deserialize<PersonForXml>(response)", span="332-332"];
m11_221 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Custom_Formatted_Date()", span="315-315"];
m11_123 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", span="207-207"];
m11_124 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="string xmlpath = this.PathFor(''NestedListSample.xml'')", span="209-209"];
m11_125 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="210-210"];
m11_126 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="XmlDeserializer xml = new XmlDeserializer()", span="211-211"];
m11_127 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="InlineListSample output = xml.Deserialize<InlineListSample>(new RestResponse { Content = doc.ToString() })", span="212-212"];
m11_128 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="Assert.IsNotEmpty(output.images)", span="214-214"];
m11_129 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(4, output.images.Count)", span="215-215"];
m11_130 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Items_With_Matching_Class_Name()", span="207-207"];
m11_18 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute_for_List()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute_for_List()", span="58-58"];
m11_19 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute_for_List()", file="XmlDeserializerTests.cs", label="string xmlpath = this.PathFor(''deserialize_as_list.xml'')", span="60-60"];
m11_20 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute_for_List()", file="XmlDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="61-61"];
m11_21 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute_for_List()", file="XmlDeserializerTests.cs", label="XmlDeserializer xml = new XmlDeserializer()", span="62-62"];
m11_22 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute_for_List()", file="XmlDeserializerTests.cs", label="List<Oddball> output = xml.Deserialize<List<Oddball>>(new RestResponse { Content = doc.ToString() })", span="63-63"];
m11_23 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute_for_List()", file="XmlDeserializerTests.cs", label="Assert.NotNull(output)", span="65-65"];
m11_24 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute_for_List()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''1'', output[0].Sid)", span="66-66"];
m11_25 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute_for_List()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Use_DeserializeAs_Attribute_for_List()", span="58-58"];
m11_398 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lastfm_Xml()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lastfm_Xml()", span="546-546"];
m11_399 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lastfm_Xml()", file="XmlDeserializerTests.cs", label="string xmlpath = this.PathFor(''Lastfm.xml'')", span="548-548"];
m11_400 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lastfm_Xml()", file="XmlDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="549-549"];
m11_401 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lastfm_Xml()", file="XmlDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc.ToString() }", span="550-550"];
m11_402 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lastfm_Xml()", file="XmlDeserializerTests.cs", label="XmlDeserializer d = new XmlDeserializer()", span="551-551"];
m11_403 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lastfm_Xml()", file="XmlDeserializerTests.cs", label="Event output = d.Deserialize<Event>(response)", span="552-552"];
m11_404 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lastfm_Xml()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''http://www.last.fm/event/328799+Philip+Glass+at+Barbican+Centre+on+12+June+2008'', output.url)", span="555-555"];
m11_405 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lastfm_Xml()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''http://www.last.fm/venue/8777860+Barbican+Centre'', output.venue.url)", span="556-556"];
m11_406 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lastfm_Xml()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Lastfm_Xml()", span="546-546"];
m11_13 [cluster="RestSharp.Deserializers.XmlDeserializer.XmlDeserializer()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Deserializers.XmlDeserializer.XmlDeserializer()", span="44-44"];
m11_84 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Directly_To_Lists_Off_Root_Element()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Directly_To_Lists_Off_Root_Element()", span="148-148"];
m11_85 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Directly_To_Lists_Off_Root_Element()", file="XmlDeserializerTests.cs", label="string xmlpath = this.PathFor(''directlists.xml'')", span="150-150"];
m11_86 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Directly_To_Lists_Off_Root_Element()", file="XmlDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="151-151"];
m11_87 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Directly_To_Lists_Off_Root_Element()", file="XmlDeserializerTests.cs", label="XmlDeserializer xml = new XmlDeserializer()", span="152-152"];
m11_88 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Directly_To_Lists_Off_Root_Element()", file="XmlDeserializerTests.cs", label="List<Database> output = xml.Deserialize<List<Database>>(new RestResponse { Content = doc.ToString() })", span="153-153"];
m11_89 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Directly_To_Lists_Off_Root_Element()", file="XmlDeserializerTests.cs", label="Assert.IsNotEmpty(output)", span="155-155"];
m11_90 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Directly_To_Lists_Off_Root_Element()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(2, output.Count)", span="156-156"];
m11_91 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Directly_To_Lists_Off_Root_Element()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Directly_To_Lists_Off_Root_Element()", span="148-148"];
m11_633 [cluster="System.DateTime.ToString(System.IFormatProvider)", file="XmlDeserializerTests.cs", label="Entry System.DateTime.ToString(System.IFormatProvider)", span="0-0"];
m11_140 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyNestedList()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyNestedList()", span="901-901"];
m11_634 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyNestedList()", file="XmlDeserializerTests.cs", label="XDocument doc = new XDocument()", span="903-903"];
m11_635 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyNestedList()", file="XmlDeserializerTests.cs", label="XElement root = new XElement(''EmptyListSample'')", span="904-904"];
m11_637 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyNestedList()", file="XmlDeserializerTests.cs", label="doc.Add(root)", span="907-907"];
m11_638 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyNestedList()", file="XmlDeserializerTests.cs", label="return doc.ToString();", span="909-909"];
m11_636 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyNestedList()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''Images''))", span="906-906"];
m11_639 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyNestedList()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.CreateXmlWithEmptyNestedList()", span="901-901"];
m11_386 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Eventful_Xml()", span="530-530"];
m11_387 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlDeserializerTests.cs", label="string xmlpath = this.PathFor(''eventful.xml'')", span="532-532"];
m11_388 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="533-533"];
m11_389 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc.ToString() }", span="534-534"];
m11_390 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlDeserializerTests.cs", label="XmlDeserializer d = new XmlDeserializer()", span="535-535"];
m11_391 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlDeserializerTests.cs", label="VenueSearch output = d.Deserialize<VenueSearch>(response)", span="536-536"];
m11_392 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlDeserializerTests.cs", label="Assert.IsNotEmpty(output.venues)", span="538-538"];
m11_393 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(3, output.venues.Count)", span="539-539"];
m11_394 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''Tivoli'', output.venues[0].name)", span="540-540"];
m11_395 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''http://eventful.com/brisbane/venues/tivoli-/V0-001-002169294-8'', output.venues[1].url)", span="541-541"];
m11_396 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlDeserializerTests.cs", label="Assert.AreEqual(''V0-001-000266914-3'', output.venues[2].id)", span="542-542"];
m11_397 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Eventful_Xml()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Eventful_Xml()", span="530-530"];
m11_152 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", span="245-245"];
m11_153 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="string doc = CreateXmlWithNullValues()", span="247-247"];
m11_154 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="XmlDeserializer xml = new XmlDeserializer()", span="248-248"];
m11_155 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="NullableValues output = xml.Deserialize<NullableValues>(new RestResponse { Content = doc })", span="249-249"];
m11_156 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="Assert.Null(output.Id)", span="251-251"];
m11_157 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="Assert.Null(output.StartDate)", span="252-252"];
m11_158 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="Assert.Null(output.UniqueId)", span="253-253"];
m11_159 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Empty_Elements_to_Nullable_Values()", span="245-245"];
m11_266 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", span="848-848"];
m11_604 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file="XmlDeserializerTests.cs", label="XDocument doc = new XDocument()", span="850-850"];
m11_605 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file="XmlDeserializerTests.cs", label="XElement root = new XElement(''Person'')", span="851-851"];
m11_618 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file="XmlDeserializerTests.cs", label="doc.Add(root)", span="868-868"];
m11_619 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file="XmlDeserializerTests.cs", label="return doc.ToString();", span="870-870"];
m11_606 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''Name'', ''John Sheehan''))", span="853-853"];
m11_607 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''StartDate'', new DateTime(2009, 9, 25, 0, 6, 1)))", span="854-854"];
m11_608 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''Age'', 28))", span="855-855"];
m11_609 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''Percent'', 99.9999m))", span="856-856"];
m11_610 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''BigNumber'', long.MaxValue))", span="857-857"];
m11_611 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''IsCool'', false))", span="858-858"];
m11_612 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''Ignore'', ''dummy''))", span="859-859"];
m11_613 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''ReadOnly'', ''dummy''))", span="860-860"];
m11_614 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''UniqueId'', new Guid(GUID_STRING)))", span="861-861"];
m11_615 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''Url'', ''http://example.com''))", span="862-862"];
m11_616 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XAttribute(''UrlPath'', ''/foo/bar''))", span="863-863"];
m11_617 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file="XmlDeserializerTests.cs", label="root.Add(new XElement(''BestFriend'',\r\n                new XAttribute(''Name'', ''The Fonz''),\r\n                new XAttribute(''\\nSince'', 1952)))", span="864-866"];
m11_620 [cluster="RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.CreateAttributesXml()", span="848-848"];
m11_131 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", span="219-219"];
m11_132 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", file="XmlDeserializerTests.cs", label="string doc = CreateXmlWithEmptyNestedList()", span="221-221"];
m11_133 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", file="XmlDeserializerTests.cs", label="XmlDeserializer xml = new XmlDeserializer()", span="222-222"];
m11_134 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", file="XmlDeserializerTests.cs", label="EmptyListSample output = xml.Deserialize<EmptyListSample>(new RestResponse { Content = doc })", span="223-223"];
m11_135 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", file="XmlDeserializerTests.cs", label="Assert.NotNull(output.images)", span="225-225"];
m11_136 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", file="XmlDeserializerTests.cs", label="Assert.NotNull(output.Images)", span="226-226"];
m11_137 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", file="XmlDeserializerTests.cs", label="Assert.IsEmpty(output.images)", span="227-227"];
m11_138 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", file="XmlDeserializerTests.cs", label="Assert.IsEmpty(output.Images)", span="228-228"];
m11_139 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Nested_List_Without_Elements_To_Empty_List()", span="219-219"];
m11_427 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_Number()", file="XmlDeserializerTests.cs", label="Entry RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_Number()", span="588-588"];
m11_428 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_Number()", file="XmlDeserializerTests.cs", label="string xmlpath = this.PathFor(''boolean_from_number.xml'')", span="590-590"];
m11_429 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_Number()", file="XmlDeserializerTests.cs", label="XDocument doc = XDocument.Load(xmlpath)", span="591-591"];
m11_430 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_Number()", file="XmlDeserializerTests.cs", label="RestResponse response = new RestResponse { Content = doc.ToString() }", span="592-592"];
m11_431 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_Number()", file="XmlDeserializerTests.cs", label="XmlDeserializer d = new XmlDeserializer()", span="593-593"];
m11_432 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_Number()", file="XmlDeserializerTests.cs", label="BooleanTest output = d.Deserialize<BooleanTest>(response)", span="594-594"];
m11_433 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_Number()", file="XmlDeserializerTests.cs", label="Assert.True(output.Value)", span="596-596"];
m11_434 [cluster="RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_Number()", file="XmlDeserializerTests.cs", label="Exit RestSharp.Tests.XmlDeserializerTests.Can_Deserialize_Boolean_From_Number()", span="588-588"];
m3_13;
m3_12;
m3_38;
m3_170;
m3_98;
m3_75;
m3_76;
m3_160;
m3_541;
m3_47;
m5_121;
m5_135;
m5_151;
m5_152;
m5_153;
m5_203;
m5_205;
m5_209;
m5_213;
m6_119;
m8_40;
m8_13;
m8_12;
m9_13;
m9_88;
m9_48;
m9_89;
m9_90;
m9_92;
m10_217;
m10_38;
m10_49;
m10_255;
m10_283;
m10_262;
m10_263;
m10_256;
m10_257;
m10_23;
m10_39;
m10_164;
m10_258;
m10_142;
m10_144;
m10_150;
m10_151;
m10_162;
m10_157;
m10_206;
m10_207;
m10_211;
m10_212;
m10_213;
m10_41;
m10_230;
m10_20;
m10_24;
m10_40;
m10_42;
m11_17;
m11_16;
m11_161;
m11_203;
m11_207;
m11_27;
m11_205;
m11_512;
m11_26;
m11_653;
m11_56;
m11_435;
m11_57;
m11_141;
m3_663;
m5_257;
m5_258;
m6_167;
m6_168;
m6_169;
m6_170;
m7_14;
m8_74;
m8_75;
m9_178;
m9_179;
m10_284;
m10_285;
m10_286;
m10_287;
m10_288;
m10_289;
m11_662;
m0_136 -> m0_139  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_136 -> m0_141  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_136 -> m0_142  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_145 -> m0_151  [color=darkseagreen4, key=1, label=len, style=dashed];
m0_152 -> m0_154  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_152 -> m0_155  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_152 -> m0_157  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_152 -> m0_158  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_152 -> m0_168  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_152 -> m0_171  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_152 -> m0_176  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_152 -> m0_178  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_152 -> m0_179  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_152 -> m0_187  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_152 -> m0_196  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_152 -> m0_199  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_152 -> m0_202  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_152 -> m0_208  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_143 -> m0_155  [color=darkseagreen4, key=1, label=entity, style=dashed];
m0_143 -> m0_161  [color=darkseagreen4, key=1, label=entity, style=dashed];
m0_143 -> m0_163  [color=darkseagreen4, key=1, label=entity, style=dashed];
m0_143 -> m0_165  [color=darkseagreen4, key=1, label=entity, style=dashed];
m0_143 -> m0_170  [color=darkseagreen4, key=1, label=entity, style=dashed];
m0_143 -> m0_176  [color=darkseagreen4, key=1, label=entity, style=dashed];
m0_143 -> m0_178  [color=darkseagreen4, key=1, label=entity, style=dashed];
m0_143 -> m0_206  [color=darkseagreen4, key=1, label=entity, style=dashed];
m0_143 -> m0_208  [color=darkseagreen4, key=1, label=entity, style=dashed];
m0_143 -> m0_210  [color=darkseagreen4, key=1, label=entity, style=dashed];
m0_143 -> m0_211  [color=darkseagreen4, key=1, label=entity, style=dashed];
m0_144 -> m0_157  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_144 -> m0_163  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_144 -> m0_170  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_144 -> m0_171  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_144 -> m0_183  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_144 -> m0_189  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_144 -> m0_190  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_144 -> m0_191  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_144 -> m0_192  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_144 -> m0_211  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_144 -> m0_213  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_144 -> m0_214  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_180 -> m0_183  [color=darkseagreen4, key=1, label=key, style=dashed];
m0_146 -> m0_153  [color=darkseagreen4, key=1, label=state, style=dashed];
m0_146 -> m0_166  [color=darkseagreen4, key=1, label=state, style=dashed];
m0_147 -> m0_161  [color=darkseagreen4, key=1, label=number, style=dashed];
m0_147 -> m0_188  [color=darkseagreen4, key=1, label=number, style=dashed];
m0_147 -> m0_190  [color=darkseagreen4, key=1, label=number, style=dashed];
m0_147 -> m0_192  [color=darkseagreen4, key=1, label=number, style=dashed];
m0_147 -> m0_202  [color=darkseagreen4, key=1, label=number, style=dashed];
m0_147 -> m0_206  [color=darkseagreen4, key=1, label=number, style=dashed];
m0_147 -> m0_213  [color=darkseagreen4, key=1, label=number, style=dashed];
m0_148 -> m0_196  [color=darkseagreen4, key=1, label=isHexValue, style=dashed];
m0_197 -> m0_213  [color=darkseagreen4, key=1, label=number, style=dashed];
m0_200 -> m0_213  [color=darkseagreen4, key=1, label=number, style=dashed];
m0_149 -> m0_160  [color=darkseagreen4, key=1, label=haveTrailingDigits, style=dashed];
m0_149 -> m0_205  [color=darkseagreen4, key=1, label=haveTrailingDigits, style=dashed];
m0_149 -> m0_212  [color=darkseagreen4, key=1, label=haveTrailingDigits, style=dashed];
m0_150 -> m0_209  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_209 -> m0_209  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_156 -> m0_166  [color=darkseagreen4, key=1, label=state, style=dashed];
m0_159 -> m0_166  [color=darkseagreen4, key=1, label=state, style=dashed];
m0_162 -> m0_205  [color=darkseagreen4, key=1, label=haveTrailingDigits, style=dashed];
m0_162 -> m0_212  [color=darkseagreen4, key=1, label=haveTrailingDigits, style=dashed];
m0_173 -> m0_188  [color=darkseagreen4, key=1, label=number, style=dashed];
m0_173 -> m0_190  [color=darkseagreen4, key=1, label=number, style=dashed];
m0_173 -> m0_192  [color=darkseagreen4, key=1, label=number, style=dashed];
m0_173 -> m0_202  [color=darkseagreen4, key=1, label=number, style=dashed];
m0_173 -> m0_206  [color=darkseagreen4, key=1, label=number, style=dashed];
m0_173 -> m0_213  [color=darkseagreen4, key=1, label=number, style=dashed];
m0_174 -> m0_196  [color=darkseagreen4, key=1, label=isHexValue, style=dashed];
m0_195 -> m0_212  [color=darkseagreen4, key=1, label=haveTrailingDigits, style=dashed];
m0_198 -> m0_212  [color=darkseagreen4, key=1, label=haveTrailingDigits, style=dashed];
m0_201 -> m0_212  [color=darkseagreen4, key=1, label=haveTrailingDigits, style=dashed];
m0_207 -> m0_212  [color=darkseagreen4, key=1, label=haveTrailingDigits, style=dashed];
m0_11 -> m0_14  [color=darkseagreen4, key=1, label="ref System.Text.StringBuilder", style=dashed];
m0_11 -> m0_15  [color=darkseagreen4, key=1, label="ref System.Text.StringBuilder", style=dashed];
m0_10 -> m0_19  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_10 -> m0_22  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_18 -> m0_21  [color=darkseagreen4, key=1, label=sb, style=dashed];
m0_18 -> m0_22  [color=darkseagreen4, key=1, label=sb, style=dashed];
m0_19 -> m0_21  [color=darkseagreen4, key=1, label=ch, style=dashed];
m0_21 -> m0_21  [color=darkseagreen4, key=1, label=sb, style=dashed];
m0_21 -> m0_22  [color=darkseagreen4, key=1, label=sb, style=dashed];
m0_63 -> m0_236  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
m0_63 -> m0_237  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
m0_63 -> m0_239  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
m0_63 -> m0_241  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
m0_63 -> m0_243  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
m0_63 -> m0_245  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
m0_63 -> m0_247  [color=darkseagreen4, key=1, label=char, style=dashed];
m0_63 -> m0_248  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
m0_63 -> m0_250  [color=darkseagreen4, key=1, label=char, style=dashed];
m0_63 -> m0_251  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
m0_63 -> m0_253  [color=darkseagreen4, key=1, label=char, style=dashed];
m0_63 -> m0_254  [color=darkseagreen4, key=1, label=bool, style=dashed];
m0_63 -> m0_255  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
m0_63 -> m0_256  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
m0_63 -> m0_257  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
m0_63 -> m0_258  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
m0_63 -> m0_259  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
m0_63 -> m0_261  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
m0_63 -> m0_263  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
m0_63 -> m0_264  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
m0_64 -> m0_67  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_64 -> m0_71  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_64 -> m0_77  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_64 -> m0_82  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_79 -> m0_81  [color=darkseagreen4, key=1, label=len, style=dashed];
m0_95 -> m0_98  [color=darkseagreen4, key=1, label=ch, style=dashed];
m0_95 -> m0_100  [color=darkseagreen4, key=1, label=ch, style=dashed];
m0_69 -> m0_76  [color=darkseagreen4, key=1, label=needEncode, style=dashed];
m0_70 -> m0_75  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_75 -> m0_75  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_78 -> m0_84  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_78 -> m0_86  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_78 -> m0_88  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_78 -> m0_90  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_78 -> m0_92  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_78 -> m0_94  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_78 -> m0_97  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_78 -> m0_98  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_78 -> m0_99  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_78 -> m0_100  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_78 -> m0_102  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_80 -> m0_82  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_80 -> m0_101  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_101 -> m0_101  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_39 -> m0_271  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
m0_39 -> m0_273  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
m0_39 -> m0_275  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
m0_39 -> m0_277  [color=darkseagreen4, key=1, label=char, style=dashed];
m0_39 -> m0_278  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
m0_39 -> m0_279  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
m0_39 -> m0_280  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
m0_39 -> m0_281  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
m0_268 -> m0_270  [color=darkseagreen4, key=1, label=bIn, style=dashed];
m0_269 -> m0_276  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_276 -> m0_276  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_107 -> m0_110  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_107 -> m0_114  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_107 -> m0_120  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_107 -> m0_125  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_107 -> m0_132  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_122 -> m0_124  [color=darkseagreen4, key=1, label=len, style=dashed];
m0_112 -> m0_119  [color=darkseagreen4, key=1, label=needEncode, style=dashed];
m0_113 -> m0_118  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_118 -> m0_118  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_121 -> m0_127  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_121 -> m0_129  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_121 -> m0_131  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_121 -> m0_132  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_121 -> m0_134  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_123 -> m0_125  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_123 -> m0_132  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_123 -> m0_133  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_133 -> m0_133  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_42 -> m0_48  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_42 -> m0_50  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_42 -> m0_56  [color=darkseagreen4, key=1, label="byte[]", style=dashed];
m0_45 -> m0_48  [color=darkseagreen4, key=1, label=blen, style=dashed];
m0_45 -> m0_50  [color=darkseagreen4, key=1, label=blen, style=dashed];
m0_52 -> m0_56  [color=darkseagreen4, key=1, label=result, style=dashed];
m0_52 -> m0_58  [color=darkseagreen4, key=1, label=result, style=dashed];
m0_53 -> m0_55  [color=darkseagreen4, key=1, label=end, style=dashed];
m0_54 -> m0_56  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_54 -> m0_57  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_57 -> m0_57  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_6 -> m0_8  [color=darkseagreen4, key=1, label="out string", style=dashed];
m0_26 -> m0_28  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_221 -> m0_229  [color=darkseagreen4, key=1, label=char, style=dashed];
m3_555 -> m3_557  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_555 -> m3_558  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_542 -> m3_562  [color=darkseagreen4, key=1, label=doc, style=dashed];
m3_554 -> m3_557  [color=darkseagreen4, key=1, label=friendsArray, style=dashed];
m3_558 -> m3_558  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_331 -> m3_333  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_331 -> m3_334  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_331 -> m3_335  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_331 -> m3_336  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_331 -> m3_337  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_331 -> m3_338  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_331 -> m3_339  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_331 -> m3_340  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_331 -> m3_341  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_331 -> m3_342  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_331 -> m3_343  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_331 -> m3_344  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_331 -> m3_345  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_331 -> m3_346  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_331 -> m3_347  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_644 -> m3_649  [color=darkseagreen4, key=1, label=doc, style=dashed];
m3_17 -> m3_19  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_19 -> m3_19  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_20 -> m3_20  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_21 -> m3_21  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_114 -> m3_122  [color=darkseagreen4, key=1, label=id1, style=dashed];
m3_115 -> m3_123  [color=darkseagreen4, key=1, label=id2, style=dashed];
m3_120 -> m3_122  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_120 -> m3_123  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_51 -> m3_53  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_196 -> m3_198  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_450 -> m3_452  [color=darkseagreen4, key=1, label=payload, style=dashed];
m3_651 -> m3_656  [color=darkseagreen4, key=1, label=doc, style=dashed];
m3_599 -> m3_623  [color=darkseagreen4, key=1, label=doc, style=dashed];
m3_615 -> m3_618  [color=darkseagreen4, key=1, label=friendsArray, style=dashed];
m3_616 -> m3_618  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_616 -> m3_619  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_619 -> m3_619  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_323 -> m3_325  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_164 -> m3_166  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_164 -> m3_167  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_395 -> m3_397  [color=darkseagreen4, key=1, label=payload, style=dashed];
m3_395 -> m3_398  [color=darkseagreen4, key=1, label=payload, style=dashed];
m3_395 -> m3_399  [color=darkseagreen4, key=1, label=payload, style=dashed];
m3_395 -> m3_400  [color=darkseagreen4, key=1, label=payload, style=dashed];
m3_395 -> m3_401  [color=darkseagreen4, key=1, label=payload, style=dashed];
m3_395 -> m3_402  [color=darkseagreen4, key=1, label=payload, style=dashed];
m3_395 -> m3_403  [color=darkseagreen4, key=1, label=payload, style=dashed];
m3_395 -> m3_404  [color=darkseagreen4, key=1, label=payload, style=dashed];
m3_395 -> m3_405  [color=darkseagreen4, key=1, label=payload, style=dashed];
m3_395 -> m3_406  [color=darkseagreen4, key=1, label=payload, style=dashed];
m3_395 -> m3_407  [color=darkseagreen4, key=1, label=payload, style=dashed];
m3_395 -> m3_408  [color=darkseagreen4, key=1, label=payload, style=dashed];
m3_395 -> m3_409  [color=darkseagreen4, key=1, label=payload, style=dashed];
m3_231 -> m3_233  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_231 -> m3_234  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_231 -> m3_235  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_231 -> m3_236  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_231 -> m3_237  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_231 -> m3_238  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_231 -> m3_239  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_500 -> m3_502  [color=darkseagreen4, key=1, label=bd, style=dashed];
m3_500 -> m3_503  [color=darkseagreen4, key=1, label=bd, style=dashed];
m3_500 -> m3_504  [color=darkseagreen4, key=1, label=bd, style=dashed];
m3_565 -> m3_585  [color=darkseagreen4, key=1, label=doc, style=dashed];
m3_577 -> m3_580  [color=darkseagreen4, key=1, label=friendsArray, style=dashed];
m3_578 -> m3_580  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_578 -> m3_581  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_581 -> m3_581  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_290 -> m3_292  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_290 -> m3_293  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_290 -> m3_294  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_290 -> m3_295  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_290 -> m3_296  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_290 -> m3_297  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_290 -> m3_298  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_290 -> m3_299  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_290 -> m3_300  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_290 -> m3_301  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_290 -> m3_302  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_290 -> m3_303  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_290 -> m3_304  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_290 -> m3_305  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_290 -> m3_306  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_290 -> m3_307  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_290 -> m3_308  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_290 -> m3_309  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_290 -> m3_310  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_632 -> m3_636  [color=darkseagreen4, key=1, label=doc, style=dashed];
m3_203 -> m3_209  [color=darkseagreen4, key=1, label=date, style=dashed];
m3_3 -> m3_5  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_3 -> m3_6  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_4 -> m3_6  [color=darkseagreen4, key=1, label=expected, style=dashed];
m3_64 -> m3_66  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_64 -> m3_67  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_245 -> m3_247  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_245 -> m3_248  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_245 -> m3_249  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_245 -> m3_250  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_245 -> m3_251  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_245 -> m3_252  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_245 -> m3_253  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_130 -> m3_138  [color=darkseagreen4, key=1, label=item1, style=dashed];
m3_131 -> m3_139  [color=darkseagreen4, key=1, label=item2, style=dashed];
m3_136 -> m3_138  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_136 -> m3_139  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_638 -> m3_642  [color=darkseagreen4, key=1, label=doc, style=dashed];
m3_591 -> m3_593  [color=darkseagreen4, key=1, label=doc, style=dashed];
m3_477 -> m3_479  [color=darkseagreen4, key=1, label=payload, style=dashed];
m3_183 -> m3_185  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_183 -> m3_186  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_183 -> m3_187  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_183 -> m3_188  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_183 -> m3_189  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_183 -> m3_190  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_626 -> m3_630  [color=darkseagreen4, key=1, label=doc, style=dashed];
m3_521 -> m3_523  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_521 -> m3_524  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_595 -> m3_597  [color=darkseagreen4, key=1, label=doc, style=dashed];
m3_358 -> m3_360  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_358 -> m3_361  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_358 -> m3_362  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_358 -> m3_363  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_358 -> m3_364  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_358 -> m3_365  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_358 -> m3_366  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_358 -> m3_367  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_358 -> m3_368  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_358 -> m3_369  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_358 -> m3_370  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_358 -> m3_371  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_358 -> m3_372  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_358 -> m3_373  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_659 -> m3_661  [color=darkseagreen4, key=1, label=response, style=dashed];
m3_145 -> m3_153  [color=darkseagreen4, key=1, label=item0, style=dashed];
m3_146 -> m3_154  [color=darkseagreen4, key=1, label=item1, style=dashed];
m3_152 -> m3_154  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_152 -> m3_155  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_152 -> m3_156  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_489 -> m3_491  [color=darkseagreen4, key=1, label=bd, style=dashed];
m3_489 -> m3_492  [color=darkseagreen4, key=1, label=bd, style=dashed];
m3_489 -> m3_493  [color=darkseagreen4, key=1, label=bd, style=dashed];
m3_537 -> m3_539  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m3_42 -> m3_44  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_174 -> m3_176  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_174 -> m3_177  [color=darkseagreen4, key=1, label=output, style=dashed];
m5_238 -> m5_240  [color=darkseagreen4, key=1, label=response, style=dashed];
m5_238 -> m5_251  [color=darkseagreen4, key=1, label=response, style=dashed];
m5_90 -> m5_110  [color=darkseagreen4, key=1, label="RestSharp.IRestRequest", style=dashed];
m5_93 -> m5_99  [color=darkseagreen4, key=1, label=assembled, style=dashed];
m5_93 -> m5_103  [color=darkseagreen4, key=1, label=assembled, style=dashed];
m5_93 -> m5_106  [color=darkseagreen4, key=1, label=assembled, style=dashed];
m5_93 -> m5_114  [color=darkseagreen4, key=1, label=assembled, style=dashed];
m5_94 -> m5_96  [color=darkseagreen4, key=1, label=urlParms, style=dashed];
m5_94 -> m5_140  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_111 -> m5_143  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_112 -> m5_146  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_100 -> m5_103  [color=darkseagreen4, key=1, label=assembled, style=dashed];
m5_100 -> m5_106  [color=darkseagreen4, key=1, label=assembled, style=dashed];
m5_100 -> m5_114  [color=darkseagreen4, key=1, label=assembled, style=dashed];
m5_104 -> m5_106  [color=darkseagreen4, key=1, label=assembled, style=dashed];
m5_104 -> m5_114  [color=darkseagreen4, key=1, label=assembled, style=dashed];
m5_108 -> m5_114  [color=darkseagreen4, key=1, label=assembled, style=dashed];
m5_96 -> m5_98  [color=darkseagreen4, key=1, label=p, style=dashed];
m5_45 -> m5_47  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_85 -> m5_87  [color=darkseagreen4, key=1, label="RestSharp.IRestRequest", style=dashed];
m5_62 -> m5_65  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_62 -> m5_70  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_62 -> m5_71  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_69 -> m5_71  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_74 -> m5_76  [color=darkseagreen4, key=1, label=structuredSyntaxSuffixWildcard, style=dashed];
m5_225 -> m5_227  [color=darkseagreen4, key=1, label="RestSharp.HttpResponse", style=dashed];
m5_225 -> m5_229  [color=darkseagreen4, key=1, label="RestSharp.HttpResponse", style=dashed];
m5_226 -> m5_231  [color=darkseagreen4, key=1, label=restResponse, style=dashed];
m5_157 -> m5_164  [color=darkseagreen4, key=1, label="RestSharp.IRestRequest", style=dashed];
m5_157 -> m5_165  [color=darkseagreen4, key=1, label="RestSharp.IRestRequest", style=dashed];
m5_157 -> m5_166  [color=darkseagreen4, key=1, label="RestSharp.IRestRequest", style=dashed];
m5_157 -> m5_168  [color=darkseagreen4, key=1, label="RestSharp.IRestRequest", style=dashed];
m5_157 -> m5_180  [color=darkseagreen4, key=1, label="RestSharp.IRestRequest", style=dashed];
m5_157 -> m5_184  [color=darkseagreen4, key=1, label="RestSharp.IHttp", style=dashed];
m5_157 -> m5_187  [color=darkseagreen4, key=1, label="RestSharp.IHttp", style=dashed];
m5_157 -> m5_190  [color=darkseagreen4, key=1, label="RestSharp.IHttp", style=dashed];
m5_157 -> m5_191  [color=darkseagreen4, key=1, label="RestSharp.IRestRequest", style=dashed];
m5_157 -> m5_196  [color=darkseagreen4, key=1, label="RestSharp.IHttp", style=dashed];
m5_164 -> m5_215  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_166 -> m5_218  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_193 -> m5_222  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_163 -> m5_165  [color=darkseagreen4, key=1, label=p, style=dashed];
m5_163 -> m5_216  [color=darkseagreen4, key=1, label=p, style=dashed];
m5_19 -> m5_34  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_35 -> m5_37  [color=darkseagreen4, key=1, label=accepts, style=dashed];
m6_30 -> m6_38  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
m6_56 -> m6_60  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
m6_138 -> m6_141  [color=green, key=1, label=string, style=dashed];
m6_138 -> m6_143  [color=green, key=1, label=string, style=dashed];
m6_139 -> m6_148  [color=green, key=1, label=portSplit, style=dashed];
m6_140 -> m6_148  [color=green, key=1, label=string, style=dashed];
m6_36 -> m6_38  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
m6_58 -> m6_60  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
m6_74 -> m6_76  [color=darkseagreen4, key=1, label=serialized, style=dashed];
m6_87 -> m6_89  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_91 -> m6_93  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_102 -> m6_106  [color=darkseagreen4, key=1, label=val, style=dashed];
m6_102 -> m6_110  [color=darkseagreen4, key=1, label=val, style=dashed];
m6_98 -> m6_110  [color=darkseagreen4, key=1, label=prop, style=dashed];
m6_101 -> m6_104  [color=darkseagreen4, key=1, label=propType, style=dashed];
m6_83 -> m6_85  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_51 -> m8_53  [color=darkseagreen4, key=1, label=response, style=dashed];
m8_50 -> m8_56  [color=darkseagreen4, key=1, label="RestSharp.IRestResponse", style=dashed];
m8_59 -> m8_61  [color=green, key=1, label="System.Net.HttpListenerContext", style=dashed];
m8_59 -> m8_62  [color=green, key=1, label="System.Net.HttpListenerContext", style=dashed];
m8_35 -> m8_37  [color=darkseagreen4, key=1, label=response, style=dashed];
m8_34 -> m8_42  [color=darkseagreen4, key=1, label="RestSharp.IRestResponse", style=dashed];
m8_66 -> m8_68  [color=green, key=1, label="System.Net.HttpListenerContext", style=dashed];
m8_66 -> m8_69  [color=green, key=1, label="System.Net.HttpListenerContext", style=dashed];
m9_164 -> m9_166  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_168 -> m9_170  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_52 -> m9_54  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_173 -> m9_175  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_40 -> m9_42  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_40 -> m9_45  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_41 -> m9_45  [color=darkseagreen4, key=1, label=client, style=dashed];
m9_44 -> m9_46  [color=darkseagreen4, key=1, label=output, style=dashed];
m9_43 -> m9_46  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_122 -> m9_124  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_4 -> m9_6  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_107 -> m9_109  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_66 -> m9_68  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_17 -> m9_19  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_114 -> m9_116  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_155 -> m9_157  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_159 -> m9_161  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_100 -> m9_102  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_150 -> m9_152  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_80 -> m9_94  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_83 -> m9_85  [color=darkseagreen4, key=1, label=exception, style=dashed];
m9_83 -> m9_86  [color=darkseagreen4, key=1, label=exception, style=dashed];
m9_83 -> m9_93  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_82 -> m9_94  [color=darkseagreen4, key=1, label=client, style=dashed];
m9_59 -> m9_61  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_128 -> m9_130  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_128 -> m9_131  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_128 -> m9_132  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_134 -> m9_136  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_142 -> m9_144  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_74 -> m9_76  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_26 -> m9_28  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_35 -> m9_37  [color=darkseagreen4, key=1, label=expected, style=dashed];
m10_242 -> m10_274  [color=darkseagreen4, key=1, label=XElement, style=dashed];
m10_273 -> m10_281  [color=darkseagreen4, key=1, label=names, style=dashed];
m10_274 -> m10_277  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_274 -> m10_280  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_170 -> m10_172  [color=darkseagreen4, key=1, label="out object", style=dashed];
m10_30 -> m10_68  [color=darkseagreen4, key=1, label=XElement, style=dashed];
m10_30 -> m10_71  [color=darkseagreen4, key=1, label=object, style=dashed];
m10_30 -> m10_74  [color=darkseagreen4, key=1, label=object, style=dashed];
m10_30 -> m10_78  [color=darkseagreen4, key=1, label=object, style=dashed];
m10_30 -> m10_80  [color=darkseagreen4, key=1, label=object, style=dashed];
m10_30 -> m10_83  [color=darkseagreen4, key=1, label=object, style=dashed];
m10_30 -> m10_86  [color=darkseagreen4, key=1, label=object, style=dashed];
m10_30 -> m10_88  [color=darkseagreen4, key=1, label=object, style=dashed];
m10_30 -> m10_91  [color=darkseagreen4, key=1, label=object, style=dashed];
m10_30 -> m10_97  [color=darkseagreen4, key=1, label=object, style=dashed];
m10_30 -> m10_101  [color=darkseagreen4, key=1, label=object, style=dashed];
m10_30 -> m10_103  [color=darkseagreen4, key=1, label=object, style=dashed];
m10_30 -> m10_106  [color=darkseagreen4, key=1, label=object, style=dashed];
m10_30 -> m10_110  [color=darkseagreen4, key=1, label=object, style=dashed];
m10_30 -> m10_113  [color=darkseagreen4, key=1, label=object, style=dashed];
m10_30 -> m10_123  [color=darkseagreen4, key=1, label=object, style=dashed];
m10_30 -> m10_126  [color=darkseagreen4, key=1, label=object, style=dashed];
m10_30 -> m10_129  [color=darkseagreen4, key=1, label=object, style=dashed];
m10_30 -> m10_130  [color=darkseagreen4, key=1, label=XElement, style=dashed];
m10_30 -> m10_134  [color=darkseagreen4, key=1, label=object, style=dashed];
m10_30 -> m10_135  [color=darkseagreen4, key=1, label=object, style=dashed];
m10_53 -> m10_64  [color=darkseagreen4, key=1, label=type, style=dashed];
m10_53 -> m10_72  [color=darkseagreen4, key=1, label=type, style=dashed];
m10_53 -> m10_76  [color=darkseagreen4, key=1, label=type, style=dashed];
m10_53 -> m10_79  [color=darkseagreen4, key=1, label=type, style=dashed];
m10_53 -> m10_80  [color=darkseagreen4, key=1, label=type, style=dashed];
m10_53 -> m10_81  [color=darkseagreen4, key=1, label=type, style=dashed];
m10_53 -> m10_84  [color=darkseagreen4, key=1, label=type, style=dashed];
m10_53 -> m10_87  [color=darkseagreen4, key=1, label=type, style=dashed];
m10_53 -> m10_89  [color=darkseagreen4, key=1, label=type, style=dashed];
m10_53 -> m10_92  [color=darkseagreen4, key=1, label=type, style=dashed];
m10_53 -> m10_100  [color=darkseagreen4, key=1, label=type, style=dashed];
m10_53 -> m10_104  [color=darkseagreen4, key=1, label=type, style=dashed];
m10_53 -> m10_107  [color=darkseagreen4, key=1, label=type, style=dashed];
m10_53 -> m10_111  [color=darkseagreen4, key=1, label=type, style=dashed];
m10_53 -> m10_114  [color=darkseagreen4, key=1, label=type, style=dashed];
m10_53 -> m10_124  [color=darkseagreen4, key=1, label=type, style=dashed];
m10_53 -> m10_128  [color=darkseagreen4, key=1, label=type, style=dashed];
m10_62 -> m10_73  [color=darkseagreen4, key=1, label=value, style=dashed];
m10_62 -> m10_80  [color=darkseagreen4, key=1, label=value, style=dashed];
m10_62 -> m10_88  [color=darkseagreen4, key=1, label=value, style=dashed];
m10_62 -> m10_128  [color=darkseagreen4, key=1, label=value, style=dashed];
m10_66 -> m10_68  [color=darkseagreen4, key=1, label=first, style=dashed];
m10_52 -> m10_55  [color=darkseagreen4, key=1, label=prop, style=dashed];
m10_52 -> m10_71  [color=darkseagreen4, key=1, label=prop, style=dashed];
m10_52 -> m10_74  [color=darkseagreen4, key=1, label=prop, style=dashed];
m10_52 -> m10_78  [color=darkseagreen4, key=1, label=prop, style=dashed];
m10_52 -> m10_80  [color=darkseagreen4, key=1, label=prop, style=dashed];
m10_52 -> m10_83  [color=darkseagreen4, key=1, label=prop, style=dashed];
m10_52 -> m10_86  [color=darkseagreen4, key=1, label=prop, style=dashed];
m10_52 -> m10_88  [color=darkseagreen4, key=1, label=prop, style=dashed];
m10_52 -> m10_91  [color=darkseagreen4, key=1, label=prop, style=dashed];
m10_52 -> m10_97  [color=darkseagreen4, key=1, label=prop, style=dashed];
m10_52 -> m10_101  [color=darkseagreen4, key=1, label=prop, style=dashed];
m10_52 -> m10_103  [color=darkseagreen4, key=1, label=prop, style=dashed];
m10_52 -> m10_106  [color=darkseagreen4, key=1, label=prop, style=dashed];
m10_52 -> m10_110  [color=darkseagreen4, key=1, label=prop, style=dashed];
m10_52 -> m10_113  [color=darkseagreen4, key=1, label=prop, style=dashed];
m10_52 -> m10_123  [color=darkseagreen4, key=1, label=prop, style=dashed];
m10_52 -> m10_126  [color=darkseagreen4, key=1, label=prop, style=dashed];
m10_52 -> m10_129  [color=darkseagreen4, key=1, label=prop, style=dashed];
m10_52 -> m10_134  [color=darkseagreen4, key=1, label=prop, style=dashed];
m10_65 -> m10_70  [color=darkseagreen4, key=1, label=genericType, style=dashed];
m10_67 -> m10_70  [color=darkseagreen4, key=1, label=list, style=dashed];
m10_67 -> m10_71  [color=darkseagreen4, key=1, label=list, style=dashed];
m10_75 -> m10_79  [color=darkseagreen4, key=1, label=type, style=dashed];
m10_75 -> m10_80  [color=darkseagreen4, key=1, label=type, style=dashed];
m10_75 -> m10_81  [color=darkseagreen4, key=1, label=type, style=dashed];
m10_75 -> m10_84  [color=darkseagreen4, key=1, label=type, style=dashed];
m10_75 -> m10_87  [color=darkseagreen4, key=1, label=type, style=dashed];
m10_75 -> m10_89  [color=darkseagreen4, key=1, label=type, style=dashed];
m10_75 -> m10_92  [color=darkseagreen4, key=1, label=type, style=dashed];
m10_75 -> m10_100  [color=darkseagreen4, key=1, label=type, style=dashed];
m10_75 -> m10_104  [color=darkseagreen4, key=1, label=type, style=dashed];
m10_75 -> m10_107  [color=darkseagreen4, key=1, label=type, style=dashed];
m10_75 -> m10_111  [color=darkseagreen4, key=1, label=type, style=dashed];
m10_75 -> m10_114  [color=darkseagreen4, key=1, label=type, style=dashed];
m10_75 -> m10_124  [color=darkseagreen4, key=1, label=type, style=dashed];
m10_75 -> m10_128  [color=darkseagreen4, key=1, label=type, style=dashed];
m10_115 -> m10_122  [color=darkseagreen4, key=1, label=t, style=dashed];
m10_116 -> m10_122  [color=darkseagreen4, key=1, label=list, style=dashed];
m10_116 -> m10_123  [color=darkseagreen4, key=1, label=list, style=dashed];
m10_93 -> m10_100  [color=darkseagreen4, key=1, label=toConvert, style=dashed];
m10_29 -> m10_202  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m10_29 -> m10_203  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_183 -> m10_201  [color=darkseagreen4, key=1, label=t, style=dashed];
m10_184 -> m10_201  [color=darkseagreen4, key=1, label=list, style=dashed];
m10_184 -> m10_203  [color=darkseagreen4, key=1, label=list, style=dashed];
m10_184 -> m10_204  [color=darkseagreen4, key=1, label=list, style=dashed];
m10_185 -> m10_190  [color=darkseagreen4, key=1, label=elements, style=dashed];
m10_185 -> m10_193  [color=darkseagreen4, key=1, label=elements, style=dashed];
m10_185 -> m10_196  [color=darkseagreen4, key=1, label=elements, style=dashed];
m10_185 -> m10_198  [color=darkseagreen4, key=1, label=elements, style=dashed];
m10_185 -> m10_201  [color=darkseagreen4, key=1, label=elements, style=dashed];
m10_192 -> m10_196  [color=darkseagreen4, key=1, label=elements, style=dashed];
m10_192 -> m10_198  [color=darkseagreen4, key=1, label=elements, style=dashed];
m10_192 -> m10_201  [color=darkseagreen4, key=1, label=elements, style=dashed];
m10_195 -> m10_198  [color=darkseagreen4, key=1, label=elements, style=dashed];
m10_195 -> m10_201  [color=darkseagreen4, key=1, label=elements, style=dashed];
m10_197 -> m10_201  [color=darkseagreen4, key=1, label=elements, style=dashed];
m10_197 -> m10_214  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_200 -> m10_218  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_186 -> m10_215  [color=darkseagreen4, key=1, label=name, style=dashed];
m10_199 -> m10_219  [color=darkseagreen4, key=1, label=lowerName, style=dashed];
m10_189 -> m10_215  [color=darkseagreen4, key=1, label=name, style=dashed];
m10_145 -> m10_177  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m10_145 -> m10_181  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m10_176 -> m10_180  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_165 -> m10_222  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m10_165 -> m10_224  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m10_165 -> m10_227  [color=darkseagreen4, key=1, label=XElement, style=dashed];
m10_226 -> m10_228  [color=darkseagreen4, key=1, label=item, style=dashed];
m10_163 -> m10_245  [color=darkseagreen4, key=1, label=XName, style=dashed];
m10_163 -> m10_246  [color=darkseagreen4, key=1, label=XName, style=dashed];
m10_163 -> m10_247  [color=darkseagreen4, key=1, label=XElement, style=dashed];
m10_163 -> m10_248  [color=darkseagreen4, key=1, label=XElement, style=dashed];
m10_163 -> m10_249  [color=darkseagreen4, key=1, label=XElement, style=dashed];
m10_163 -> m10_250  [color=darkseagreen4, key=1, label=XElement, style=dashed];
m10_163 -> m10_251  [color=green, key=1, label=XName, style=dashed];
m10_163 -> m10_252  [color=darkseagreen4, key=1, label=XElement, style=dashed];
m10_163 -> m10_253  [color=darkseagreen4, key=1, label=XName, style=dashed];
m10_163 -> m10_265  [color=darkseagreen4, key=1, label=XName, style=dashed];
m10_163 -> m10_271  [color=darkseagreen4, key=1, label=XName, style=dashed];
m10_243 -> m10_247  [color=darkseagreen4, key=1, label=lowerName, style=dashed];
m10_243 -> m10_248  [color=darkseagreen4, key=1, label=lowerName, style=dashed];
m10_244 -> m10_249  [color=darkseagreen4, key=1, label=camelName, style=dashed];
m10_244 -> m10_250  [color=darkseagreen4, key=1, label=camelName, style=dashed];
m10_253 -> m10_259  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_253 -> m10_264  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_253 -> m10_267  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_253 -> m10_270  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_6 -> m10_8  [color=darkseagreen4, key=1, label=doc, style=dashed];
m10_6 -> m10_11  [color=darkseagreen4, key=1, label=doc, style=dashed];
m10_140 -> m10_232  [color=darkseagreen4, key=1, label=XElement, style=dashed];
m10_231 -> m10_240  [color=darkseagreen4, key=1, label=val, style=dashed];
m10_233 -> m10_238  [color=darkseagreen4, key=1, label=element, style=dashed];
m10_25 -> m10_32  [color=darkseagreen4, key=1, label=XDocument, style=dashed];
m10_32 -> m10_35  [color=darkseagreen4, key=1, label=e, style=dashed];
m10_32 -> m10_36  [color=darkseagreen4, key=1, label=e, style=dashed];
m10_34 -> m10_36  [color=darkseagreen4, key=1, label=e, style=dashed];
m10_35 -> m10_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_36 -> m10_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_309 -> m11_311  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_309 -> m11_312  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_309 -> m11_313  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_309 -> m11_314  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_309 -> m11_315  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_309 -> m11_316  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_309 -> m11_317  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_309 -> m11_318  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_309 -> m11_319  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_309 -> m11_320  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_309 -> m11_321  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_309 -> m11_322  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_309 -> m11_323  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_309 -> m11_324  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_309 -> m11_325  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_309 -> m11_326  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_179 -> m11_190  [color=darkseagreen4, key=1, label=doc, style=dashed];
m11_180 -> m11_188  [color=darkseagreen4, key=1, label=nullTimespan, style=dashed];
m11_181 -> m11_189  [color=darkseagreen4, key=1, label=nullValueTimeSpan, style=dashed];
m11_182 -> m11_184  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_182 -> m11_185  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_182 -> m11_186  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_182 -> m11_187  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_182 -> m11_188  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_182 -> m11_189  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_182 -> m11_190  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_193 -> m11_195  [color=darkseagreen4, key=1, label=payload, style=dashed];
m11_193 -> m11_196  [color=darkseagreen4, key=1, label=payload, style=dashed];
m11_193 -> m11_197  [color=darkseagreen4, key=1, label=payload, style=dashed];
m11_193 -> m11_198  [color=darkseagreen4, key=1, label=payload, style=dashed];
m11_193 -> m11_199  [color=darkseagreen4, key=1, label=payload, style=dashed];
m11_193 -> m11_200  [color=darkseagreen4, key=1, label=payload, style=dashed];
m11_193 -> m11_201  [color=darkseagreen4, key=1, label=payload, style=dashed];
m11_513 -> m11_540  [color=green, key=1, label=doc, style=dashed];
m11_513 -> m11_541  [color=green, key=1, label=doc, style=dashed];
m11_514 -> m11_516  [color=green, key=1, label=root, style=dashed];
m11_514 -> m11_517  [color=green, key=1, label=root, style=dashed];
m11_514 -> m11_518  [color=green, key=1, label=root, style=dashed];
m11_514 -> m11_519  [color=green, key=1, label=root, style=dashed];
m11_514 -> m11_520  [color=green, key=1, label=root, style=dashed];
m11_514 -> m11_521  [color=green, key=1, label=root, style=dashed];
m11_514 -> m11_522  [color=green, key=1, label=root, style=dashed];
m11_514 -> m11_523  [color=green, key=1, label=root, style=dashed];
m11_514 -> m11_524  [color=green, key=1, label=root, style=dashed];
m11_514 -> m11_525  [color=green, key=1, label=root, style=dashed];
m11_514 -> m11_526  [color=green, key=1, label=root, style=dashed];
m11_514 -> m11_532  [color=green, key=1, label=root, style=dashed];
m11_514 -> m11_539  [color=green, key=1, label=root, style=dashed];
m11_514 -> m11_540  [color=green, key=1, label=root, style=dashed];
m11_527 -> m11_530  [color=darkseagreen4, key=1, label=friends, style=dashed];
m11_527 -> m11_532  [color=darkseagreen4, key=1, label=friends, style=dashed];
m11_528 -> m11_530  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_528 -> m11_531  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_531 -> m11_531  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_533 -> m11_537  [color=darkseagreen4, key=1, label=foes, style=dashed];
m11_533 -> m11_539  [color=darkseagreen4, key=1, label=foes, style=dashed];
m11_535 -> m11_537  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_535 -> m11_538  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_538 -> m11_538  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_456 -> m11_458  [color=darkseagreen4, key=1, label=output, style=dashed];
m11_456 -> m11_459  [color=darkseagreen4, key=1, label=output, style=dashed];
m11_497 -> m11_499  [color=green, key=1, label=i, style=dashed];
m11_497 -> m11_500  [color=green, key=1, label=i, style=dashed];
m11_482 -> m11_509  [color=green, key=1, label=doc, style=dashed];
m11_482 -> m11_510  [color=green, key=1, label=doc, style=dashed];
m11_483 -> m11_485  [color=green, key=1, label=root, style=dashed];
m11_483 -> m11_486  [color=green, key=1, label=root, style=dashed];
m11_483 -> m11_487  [color=green, key=1, label=root, style=dashed];
m11_483 -> m11_488  [color=green, key=1, label=root, style=dashed];
m11_483 -> m11_489  [color=green, key=1, label=root, style=dashed];
m11_483 -> m11_490  [color=green, key=1, label=root, style=dashed];
m11_483 -> m11_491  [color=green, key=1, label=root, style=dashed];
m11_483 -> m11_492  [color=green, key=1, label=root, style=dashed];
m11_483 -> m11_493  [color=green, key=1, label=root, style=dashed];
m11_483 -> m11_494  [color=green, key=1, label=root, style=dashed];
m11_483 -> m11_495  [color=green, key=1, label=root, style=dashed];
m11_483 -> m11_501  [color=green, key=1, label=root, style=dashed];
m11_483 -> m11_508  [color=green, key=1, label=root, style=dashed];
m11_483 -> m11_509  [color=green, key=1, label=root, style=dashed];
m11_496 -> m11_499  [color=green, key=1, label=friends, style=dashed];
m11_496 -> m11_501  [color=green, key=1, label=friends, style=dashed];
m11_500 -> m11_500  [color=green, key=1, label=i, style=dashed];
m11_502 -> m11_506  [color=green, key=1, label=foes, style=dashed];
m11_502 -> m11_508  [color=green, key=1, label=foes, style=dashed];
m11_504 -> m11_506  [color=green, key=1, label=i, style=dashed];
m11_504 -> m11_507  [color=green, key=1, label=i, style=dashed];
m11_507 -> m11_507  [color=green, key=1, label=i, style=dashed];
m11_447 -> m11_449  [color=darkseagreen4, key=1, label=output, style=dashed];
m11_447 -> m11_450  [color=darkseagreen4, key=1, label=output, style=dashed];
m11_252 -> m11_254  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_252 -> m11_255  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_252 -> m11_256  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_252 -> m11_257  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_252 -> m11_258  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_252 -> m11_259  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_252 -> m11_260  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_252 -> m11_261  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_252 -> m11_262  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_252 -> m11_263  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_252 -> m11_264  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_357 -> m11_359  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_357 -> m11_360  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_357 -> m11_361  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_357 -> m11_362  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_357 -> m11_363  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_357 -> m11_364  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_357 -> m11_365  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_357 -> m11_366  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_357 -> m11_367  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_357 -> m11_368  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_357 -> m11_369  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_357 -> m11_370  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_357 -> m11_371  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_357 -> m11_372  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_357 -> m11_373  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_357 -> m11_374  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_573 -> m11_575  [color=darkseagreen4, key=1, label=doc, style=dashed];
m11_573 -> m11_576  [color=darkseagreen4, key=1, label=doc, style=dashed];
m11_654 -> m11_659  [color=darkseagreen4, key=1, label=doc, style=dashed];
m11_654 -> m11_660  [color=darkseagreen4, key=1, label=doc, style=dashed];
m11_655 -> m11_658  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_655 -> m11_659  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_656 -> m11_658  [color=darkseagreen4, key=1, label=idElement, style=dashed];
m11_31 -> m11_33  [color=darkseagreen4, key=1, label=output, style=dashed];
m11_33 -> m11_33  [color=darkseagreen4, key=1, label=output, style=dashed];
m11_34 -> m11_34  [color=darkseagreen4, key=1, label=output, style=dashed];
m11_35 -> m11_35  [color=darkseagreen4, key=1, label=output, style=dashed];
m11_285 -> m11_287  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_285 -> m11_288  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_285 -> m11_289  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_285 -> m11_290  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_285 -> m11_291  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_285 -> m11_292  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_285 -> m11_293  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_285 -> m11_294  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_285 -> m11_295  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_285 -> m11_296  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_285 -> m11_297  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_285 -> m11_298  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_285 -> m11_299  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_285 -> m11_300  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_285 -> m11_301  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_285 -> m11_302  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_166 -> m11_168  [color=darkseagreen4, key=1, label=output, style=dashed];
m11_166 -> m11_169  [color=darkseagreen4, key=1, label=output, style=dashed];
m11_166 -> m11_170  [color=darkseagreen4, key=1, label=output, style=dashed];
m11_166 -> m11_171  [color=darkseagreen4, key=1, label=output, style=dashed];
m11_166 -> m11_172  [color=darkseagreen4, key=1, label=output, style=dashed];
m11_72 -> m11_74  [color=darkseagreen4, key=1, label=output, style=dashed];
m11_63 -> m11_65  [color=darkseagreen4, key=1, label=output, style=dashed];
m11_63 -> m11_66  [color=darkseagreen4, key=1, label=output, style=dashed];
m11_543 -> m11_570  [color=darkseagreen4, key=1, label=doc, style=dashed];
m11_543 -> m11_571  [color=darkseagreen4, key=1, label=doc, style=dashed];
m11_544 -> m11_546  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_544 -> m11_547  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_544 -> m11_548  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_544 -> m11_549  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_544 -> m11_550  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_544 -> m11_551  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_544 -> m11_552  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_544 -> m11_553  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_544 -> m11_554  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_544 -> m11_555  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_544 -> m11_556  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_544 -> m11_562  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_544 -> m11_569  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_544 -> m11_570  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_557 -> m11_560  [color=darkseagreen4, key=1, label=friends, style=dashed];
m11_557 -> m11_562  [color=darkseagreen4, key=1, label=friends, style=dashed];
m11_558 -> m11_560  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_558 -> m11_561  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_561 -> m11_561  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_563 -> m11_567  [color=darkseagreen4, key=1, label=foes, style=dashed];
m11_563 -> m11_569  [color=darkseagreen4, key=1, label=foes, style=dashed];
m11_565 -> m11_567  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_565 -> m11_568  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_568 -> m11_568  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_422 -> m11_424  [color=darkseagreen4, key=1, label=output, style=dashed];
m11_422 -> m11_425  [color=darkseagreen4, key=1, label=output, style=dashed];
m11_96 -> m11_98  [color=darkseagreen4, key=1, label=output, style=dashed];
m11_578 -> m11_601  [color=darkseagreen4, key=1, label=doc, style=dashed];
m11_578 -> m11_602  [color=darkseagreen4, key=1, label=doc, style=dashed];
m11_579 -> m11_581  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_579 -> m11_582  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_579 -> m11_583  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_579 -> m11_584  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_579 -> m11_585  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_579 -> m11_586  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_579 -> m11_587  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_579 -> m11_588  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_579 -> m11_589  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_579 -> m11_590  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_579 -> m11_591  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_579 -> m11_592  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_579 -> m11_593  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_579 -> m11_594  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_579 -> m11_600  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_579 -> m11_601  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_595 -> m11_598  [color=darkseagreen4, key=1, label=friends, style=dashed];
m11_595 -> m11_600  [color=darkseagreen4, key=1, label=friends, style=dashed];
m11_596 -> m11_598  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_596 -> m11_599  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_599 -> m11_599  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_227 -> m11_229  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_227 -> m11_230  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_227 -> m11_231  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_227 -> m11_232  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_227 -> m11_233  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_227 -> m11_234  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_227 -> m11_235  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_227 -> m11_236  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_227 -> m11_237  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_227 -> m11_238  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_227 -> m11_239  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_227 -> m11_240  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_227 -> m11_241  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_227 -> m11_242  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_227 -> m11_243  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_227 -> m11_244  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_80 -> m11_82  [color=darkseagreen4, key=1, label=output, style=dashed];
m11_464 -> m11_471  [color=darkseagreen4, key=1, label=doc, style=dashed];
m11_465 -> m11_468  [color=darkseagreen4, key=1, label=dateTimeOffset, style=dashed];
m11_465 -> m11_475  [color=darkseagreen4, key=1, label=dateTimeOffset, style=dashed];
m11_466 -> m11_470  [color=darkseagreen4, key=1, label=nullableDateTimeOffsetWithValue, style=dashed];
m11_466 -> m11_478  [color=darkseagreen4, key=1, label=nullableDateTimeOffsetWithValue, style=dashed];
m11_467 -> m11_469  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_467 -> m11_470  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_467 -> m11_471  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_474 -> m11_476  [color=darkseagreen4, key=1, label=payload, style=dashed];
m11_474 -> m11_477  [color=darkseagreen4, key=1, label=payload, style=dashed];
m11_474 -> m11_478  [color=darkseagreen4, key=1, label=payload, style=dashed];
m11_174 -> m11_629  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m11_627 -> m11_630  [color=darkseagreen4, key=1, label=doc, style=dashed];
m11_627 -> m11_631  [color=darkseagreen4, key=1, label=doc, style=dashed];
m11_628 -> m11_630  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_40 -> m11_42  [color=darkseagreen4, key=1, label=output, style=dashed];
m11_42 -> m11_42  [color=darkseagreen4, key=1, label=output, style=dashed];
m11_43 -> m11_43  [color=darkseagreen4, key=1, label=output, style=dashed];
m11_44 -> m11_44  [color=darkseagreen4, key=1, label=output, style=dashed];
m11_645 -> m11_650  [color=darkseagreen4, key=1, label=doc, style=dashed];
m11_645 -> m11_651  [color=darkseagreen4, key=1, label=doc, style=dashed];
m11_646 -> m11_649  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_646 -> m11_650  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_647 -> m11_649  [color=darkseagreen4, key=1, label=idElement, style=dashed];
m11_50 -> m11_52  [color=darkseagreen4, key=1, label=output, style=dashed];
m11_50 -> m11_53  [color=darkseagreen4, key=1, label=output, style=dashed];
m11_50 -> m11_54  [color=darkseagreen4, key=1, label=output, style=dashed];
m11_119 -> m11_121  [color=darkseagreen4, key=1, label=output, style=dashed];
m11_7 -> m11_9  [color=darkseagreen4, key=1, label=output, style=dashed];
m11_7 -> m11_10  [color=darkseagreen4, key=1, label=output, style=dashed];
m11_7 -> m11_11  [color=darkseagreen4, key=1, label=output, style=dashed];
m11_380 -> m11_382  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_380 -> m11_383  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_621 -> m11_624  [color=darkseagreen4, key=1, label=doc, style=dashed];
m11_621 -> m11_625  [color=darkseagreen4, key=1, label=doc, style=dashed];
m11_622 -> m11_624  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_104 -> m11_106  [color=darkseagreen4, key=1, label=output, style=dashed];
m11_145 -> m11_147  [color=darkseagreen4, key=1, label=output, style=dashed];
m11_145 -> m11_148  [color=darkseagreen4, key=1, label=output, style=dashed];
m11_145 -> m11_149  [color=darkseagreen4, key=1, label=output, style=dashed];
m11_333 -> m11_335  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_333 -> m11_336  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_333 -> m11_337  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_333 -> m11_338  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_333 -> m11_339  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_333 -> m11_340  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_333 -> m11_341  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_333 -> m11_342  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_333 -> m11_343  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_333 -> m11_344  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_333 -> m11_345  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_333 -> m11_346  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_333 -> m11_347  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_333 -> m11_348  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_333 -> m11_349  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_333 -> m11_350  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_412 -> m11_414  [color=darkseagreen4, key=1, label=output, style=dashed];
m11_412 -> m11_415  [color=darkseagreen4, key=1, label=output, style=dashed];
m11_640 -> m11_642  [color=darkseagreen4, key=1, label=doc, style=dashed];
m11_640 -> m11_643  [color=darkseagreen4, key=1, label=doc, style=dashed];
m11_210 -> m11_215  [color=darkseagreen4, key=1, label=culture, style=dashed];
m11_211 -> m11_215  [color=darkseagreen4, key=1, label=format, style=dashed];
m11_212 -> m11_215  [color=darkseagreen4, key=1, label=date, style=dashed];
m11_212 -> m11_220  [color=darkseagreen4, key=1, label=date, style=dashed];
m11_213 -> m11_216  [color=darkseagreen4, key=1, label=doc, style=dashed];
m11_214 -> m11_216  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_127 -> m11_129  [color=darkseagreen4, key=1, label=output, style=dashed];
m11_22 -> m11_24  [color=darkseagreen4, key=1, label=output, style=dashed];
m11_403 -> m11_405  [color=darkseagreen4, key=1, label=output, style=dashed];
m11_88 -> m11_90  [color=darkseagreen4, key=1, label=output, style=dashed];
m11_634 -> m11_637  [color=darkseagreen4, key=1, label=doc, style=dashed];
m11_634 -> m11_638  [color=darkseagreen4, key=1, label=doc, style=dashed];
m11_635 -> m11_637  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_391 -> m11_393  [color=darkseagreen4, key=1, label=output, style=dashed];
m11_391 -> m11_394  [color=darkseagreen4, key=1, label=output, style=dashed];
m11_391 -> m11_395  [color=darkseagreen4, key=1, label=output, style=dashed];
m11_391 -> m11_396  [color=darkseagreen4, key=1, label=output, style=dashed];
m11_155 -> m11_157  [color=darkseagreen4, key=1, label=output, style=dashed];
m11_155 -> m11_158  [color=darkseagreen4, key=1, label=output, style=dashed];
m11_604 -> m11_618  [color=darkseagreen4, key=1, label=doc, style=dashed];
m11_604 -> m11_619  [color=darkseagreen4, key=1, label=doc, style=dashed];
m11_605 -> m11_607  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_605 -> m11_608  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_605 -> m11_609  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_605 -> m11_610  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_605 -> m11_611  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_605 -> m11_612  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_605 -> m11_613  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_605 -> m11_614  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_605 -> m11_615  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_605 -> m11_616  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_605 -> m11_617  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_605 -> m11_618  [color=darkseagreen4, key=1, label=root, style=dashed];
m11_134 -> m11_136  [color=darkseagreen4, key=1, label=output, style=dashed];
m11_134 -> m11_137  [color=darkseagreen4, key=1, label=output, style=dashed];
m11_134 -> m11_138  [color=darkseagreen4, key=1, label=output, style=dashed];
m3_663 -> m3_316  [color=darkseagreen4, key=1, label="RestSharp.Tests.JsonTests", style=dashed];
m3_663 -> m3_352  [color=darkseagreen4, key=1, label="RestSharp.Tests.JsonTests", style=dashed];
m3_663 -> m3_378  [color=darkseagreen4, key=1, label="RestSharp.Tests.JsonTests", style=dashed];
m5_257 -> m5_86  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m5_257 -> m5_87  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m5_257 -> m5_91  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m5_257 -> m5_105  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m5_257 -> m5_106  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m5_257 -> m5_163  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m5_257 -> m5_5  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m5_257 -> m5_6  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m5_257 -> m5_7  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m5_257 -> m5_8  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m5_257 -> m5_9  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m5_257 -> m5_10  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m5_257 -> m5_11  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m5_257 -> m5_12  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m5_257 -> m5_13  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m5_257 -> m5_33  [color=green, key=1, label="RestSharp.RestClient", style=dashed];
m5_257 -> m5_34  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m5_257 -> m5_36  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m5_257 -> m5_37  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m5_257 -> m5_46  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m5_257 -> m5_47  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m5_257 -> m5_48  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m5_257 -> m5_53  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m5_257 -> m5_54  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m5_257 -> m5_55  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m5_257 -> m5_59  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m5_257 -> m5_65  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m5_257 -> m5_66  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m5_257 -> m5_70  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m5_257 -> m5_71  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m5_257 -> m5_75  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m5_257 -> m5_76  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m5_257 -> m5_77  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m5_257 -> m5_78  [color=darkseagreen4, key=1, label="RestSharp.RestClient", style=dashed];
m5_258 -> m5_216  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_167 -> m6_50  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m6_167 -> m6_51  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m6_167 -> m6_44  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m6_167 -> m6_66  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m6_167 -> m6_76  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m6_167 -> m6_81  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m6_167 -> m6_85  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m6_167 -> m6_89  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m6_167 -> m6_93  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m6_167 -> m6_110  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m6_167 -> m6_111  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m6_167 -> m6_123  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m6_167 -> m6_124  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m6_167 -> m6_127  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m6_167 -> m6_128  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m6_167 -> m6_143  [color=green, key=1, label="RestSharp.RestRequest", style=dashed];
m6_167 -> m6_153  [color=green, key=1, label="RestSharp.RestRequest", style=dashed];
m6_167 -> m6_156  [color=green, key=1, label="RestSharp.RestRequest", style=dashed];
m6_167 -> m6_159  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m6_167 -> m6_162  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m6_167 -> m6_165  [color=darkseagreen4, key=1, label="RestSharp.RestRequest", style=dashed];
m6_170 -> m6_148  [color=darkseagreen4, key=1, label=portSplit, style=dashed];
m7_14 -> m7_7  [color=darkseagreen4, key=1, label="RestSharp.RestResponseBase", style=dashed];
m9_178 -> m9_94  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_179 -> m9_94  [color=darkseagreen4, key=1, label=client, style=dashed];
m10_284 -> m10_8  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.XmlDeserializer", style=dashed];
m10_284 -> m10_10  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.XmlDeserializer", style=dashed];
m10_284 -> m10_201  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.XmlDeserializer", style=dashed];
m10_284 -> m10_203  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.XmlDeserializer", style=dashed];
m10_284 -> m10_70  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.XmlDeserializer", style=dashed];
m10_284 -> m10_80  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.XmlDeserializer", style=dashed];
m10_284 -> m10_122  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.XmlDeserializer", style=dashed];
m10_284 -> m10_176  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.XmlDeserializer", style=dashed];
m10_284 -> m10_227  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.XmlDeserializer", style=dashed];
m10_284 -> m10_181  [color=darkseagreen4, key=1, label="RestSharp.Deserializers.XmlDeserializer", style=dashed];
m10_285 -> m10_181  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m10_286 -> m10_215  [color=darkseagreen4, key=1, label=name, style=dashed];
m10_287 -> m10_219  [color=darkseagreen4, key=1, label=lowerName, style=dashed];
m10_288 -> m10_265  [color=darkseagreen4, key=1, label=XName, style=dashed];
m10_288 -> m10_271  [color=darkseagreen4, key=1, label=XName, style=dashed];
m10_289 -> m10_281  [color=darkseagreen4, key=1, label=names, style=dashed];
m11_662 -> m11_1  [color=darkseagreen4, key=1, label="RestSharp.Tests.XmlDeserializerTests", style=dashed];
}
