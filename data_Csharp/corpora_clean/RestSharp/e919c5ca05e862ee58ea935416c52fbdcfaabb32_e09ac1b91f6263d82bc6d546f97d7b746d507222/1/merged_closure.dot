digraph  {
n0 [cluster="RestSharp.Tests.StringExtensionsTests.UrlEncode_Throws_ArgumentNullException_For_Null_Input()", label="Entry RestSharp.Tests.StringExtensionsTests.UrlEncode_Throws_ArgumentNullException_For_Null_Input()", span="10-10"];
n1 [cluster="RestSharp.Tests.StringExtensionsTests.UrlEncode_Throws_ArgumentNullException_For_Null_Input()", label="string nullString = null", span="12-12"];
n2 [cluster="RestSharp.Tests.StringExtensionsTests.UrlEncode_Throws_ArgumentNullException_For_Null_Input()", label="Assert.Throws<ArgumentNullException>(\r\n                delegate { nullString.UrlEncode(); })", span="13-14"];
n6 [cluster="lambda expression", label="nullString.UrlEncode()", span="14-14"];
n3 [cluster="RestSharp.Tests.StringExtensionsTests.UrlEncode_Throws_ArgumentNullException_For_Null_Input()", label="Exit RestSharp.Tests.StringExtensionsTests.UrlEncode_Throws_ArgumentNullException_For_Null_Input()", span="10-10"];
n5 [cluster="lambda expression", label="Entry lambda expression", span="14-14"];
n7 [cluster="lambda expression", label="Exit lambda expression", span="14-14"];
n8 [cluster="string.UrlEncode()", label="Entry string.UrlEncode()", span="38-38"];
n9 [cluster="RestSharp.Tests.StringExtensionsTests.UrlEncode_Returns_Correct_Length_When_Less_Than_Limit()", label="Entry RestSharp.Tests.StringExtensionsTests.UrlEncode_Returns_Correct_Length_When_Less_Than_Limit()", span="18-18"];
n10 [cluster="RestSharp.Tests.StringExtensionsTests.UrlEncode_Returns_Correct_Length_When_Less_Than_Limit()", label="int numLessThanLimit = 32766", span="20-20"];
n11 [cluster="RestSharp.Tests.StringExtensionsTests.UrlEncode_Returns_Correct_Length_When_Less_Than_Limit()", label="var stringWithLimitLength = new string('*', numLessThanLimit)", span="21-21"];
n13 [cluster="RestSharp.Tests.StringExtensionsTests.UrlEncode_Returns_Correct_Length_When_Less_Than_Limit()", label="Assert.AreEqual(numLessThanLimit, encodedAndDecoded.Length)", span="23-23"];
n12 [cluster="RestSharp.Tests.StringExtensionsTests.UrlEncode_Returns_Correct_Length_When_Less_Than_Limit()", label="var encodedAndDecoded = stringWithLimitLength.UrlEncode().UrlDecode()", span="22-22"];
n15 [cluster="string.String(char, int)", label="Entry string.String(char, int)", span="0-0"];
n16 [cluster="string.UrlDecode()", label="Entry string.UrlDecode()", span="29-29"];
n14 [cluster="RestSharp.Tests.StringExtensionsTests.UrlEncode_Returns_Correct_Length_When_Less_Than_Limit()", label="Exit RestSharp.Tests.StringExtensionsTests.UrlEncode_Returns_Correct_Length_When_Less_Than_Limit()", span="18-18"];
n18 [cluster="RestSharp.Tests.StringExtensionsTests.UrlEncode_Returns_Correct_Length_When_More_Than_Limit()", label="Entry RestSharp.Tests.StringExtensionsTests.UrlEncode_Returns_Correct_Length_When_More_Than_Limit()", span="27-27"];
n19 [cluster="RestSharp.Tests.StringExtensionsTests.UrlEncode_Returns_Correct_Length_When_More_Than_Limit()", label="int numGreaterThanLimit = 65000", span="29-29"];
n20 [cluster="RestSharp.Tests.StringExtensionsTests.UrlEncode_Returns_Correct_Length_When_More_Than_Limit()", label="var stringWithLimitLength = new string('*', numGreaterThanLimit)", span="30-30"];
n22 [cluster="RestSharp.Tests.StringExtensionsTests.UrlEncode_Returns_Correct_Length_When_More_Than_Limit()", label="Assert.AreEqual(numGreaterThanLimit, encodedAndDecoded.Length)", span="32-32"];
n21 [cluster="RestSharp.Tests.StringExtensionsTests.UrlEncode_Returns_Correct_Length_When_More_Than_Limit()", label="var encodedAndDecoded = stringWithLimitLength.UrlEncode().UrlDecode()", span="31-31"];
n23 [cluster="RestSharp.Tests.StringExtensionsTests.UrlEncode_Returns_Correct_Length_When_More_Than_Limit()", label="Exit RestSharp.Tests.StringExtensionsTests.UrlEncode_Returns_Correct_Length_When_More_Than_Limit()", span="27-27"];
n24 [cluster="RestSharp.Tests.StringExtensionsTests.UrlEncodeTest()", label="Entry RestSharp.Tests.StringExtensionsTests.UrlEncodeTest()", span="36-36"];
n25 [cluster="RestSharp.Tests.StringExtensionsTests.UrlEncodeTest()", label="string parameter = ''Ã¸''", span="38-38"];
d26 [cluster="RestSharp.Tests.StringExtensionsTests.UrlEncodeTest()", color=green, community=0, label="Assert.True(string.Compare(''%F8'', parameter.UrlEncode(Encoding.GetEncoding(''ISO-8859-1'')), StringComparison.OrdinalIgnoreCase))", prediction=0, span="39-39"];
d27 [cluster="RestSharp.Tests.StringExtensionsTests.UrlEncodeTest()", color=green, community=0, label="Assert.True(string.Compare(''%C3%B8'', parameter.UrlEncode(), StringComparison.OrdinalIgnoreCase))", prediction=1, span="40-40"];
n29 [cluster="System.Text.Encoding.GetEncoding(string)", label="Entry System.Text.Encoding.GetEncoding(string)", span="0-0"];
n30 [cluster="string.UrlEncode(System.Text.Encoding)", label="Entry string.UrlEncode(System.Text.Encoding)", span="73-73"];
n28 [cluster="RestSharp.Tests.StringExtensionsTests.UrlEncodeTest()", label="Exit RestSharp.Tests.StringExtensionsTests.UrlEncodeTest()", span="36-36"];
d31 [cluster="string.Compare(string, string, System.StringComparison)", label="Entry string.Compare(string, string, System.StringComparison)", span="0-0"];
m0_164 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_and_resource_containing_tokens()", span="250-250"];
m0_165 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest(''resource/{baz}'')", span="252-252"];
m0_166 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="request.AddUrlSegment(''foo'', ''bar'')", span="254-254"];
m0_167 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="request.AddUrlSegment(''baz'', ''bat'')", span="255-255"];
m0_170 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="259-259"];
m0_168 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(''http://example.com/{foo}'')", span="257-257"];
m0_169 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/bar/resource/bat'')", span="258-258"];
m0_171 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="261-261"];
m0_172 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_and_resource_containing_tokens()", span="250-250"];
m0_22 [cluster="RestSharp.RestClient.RestClient(System.Uri)", file="UrlBuilderTests.cs", label="Entry RestSharp.RestClient.RestClient(System.Uri)", span="79-79"];
m0_8 [cluster="RestSharp.RestRequest.RestRequest()", file="UrlBuilderTests.cs", label="Entry RestSharp.RestRequest.RestRequest()", span="36-36"];
m0_49 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash_and_baseurl_trailing_slash()", span="78-78"];
m0_50 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest(''/resource'', Method.POST)", span="80-80"];
m0_51 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(new Uri(''http://example.com''))", span="81-81"];
m0_53 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="83-83"];
m0_52 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/resource'')", span="82-82"];
m0_54 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="85-85"];
m0_55 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash_and_baseurl_trailing_slash()", span="78-78"];
m0_173 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Invalid_Url_string_throws_exception()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_Invalid_Url_string_throws_exception()", span="265-265"];
m0_174 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Invalid_Url_string_throws_exception()", file="UrlBuilderTests.cs", label="Assert.Throws<UriFormatException>(delegate { new RestClient(''invalid url''); })", span="267-267"];
m0_175 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Invalid_Url_string_throws_exception()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_Invalid_Url_string_throws_exception()", span="265-265"];
m0_39 [cluster="RestSharp.Tests.UrlBuilderTests.GET_wth_trailing_slash_and_query_parameters()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.GET_wth_trailing_slash_and_query_parameters()", span="62-62"];
m0_40 [cluster="RestSharp.Tests.UrlBuilderTests.GET_wth_trailing_slash_and_query_parameters()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest(''/resource/'')", span="64-64"];
m0_41 [cluster="RestSharp.Tests.UrlBuilderTests.GET_wth_trailing_slash_and_query_parameters()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(''http://example.com'')", span="65-65"];
m0_42 [cluster="RestSharp.Tests.UrlBuilderTests.GET_wth_trailing_slash_and_query_parameters()", file="UrlBuilderTests.cs", label="request.AddParameter(''foo'', ''bar'')", span="67-67"];
m0_44 [cluster="RestSharp.Tests.UrlBuilderTests.GET_wth_trailing_slash_and_query_parameters()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="70-70"];
m0_45 [cluster="RestSharp.Tests.UrlBuilderTests.GET_wth_trailing_slash_and_query_parameters()", file="UrlBuilderTests.cs", label="client.Execute(request)", span="72-72"];
m0_43 [cluster="RestSharp.Tests.UrlBuilderTests.GET_wth_trailing_slash_and_query_parameters()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/resource/?foo=bar'')", span="69-69"];
m0_46 [cluster="RestSharp.Tests.UrlBuilderTests.GET_wth_trailing_slash_and_query_parameters()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="74-74"];
m0_47 [cluster="RestSharp.Tests.UrlBuilderTests.GET_wth_trailing_slash_and_query_parameters()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.GET_wth_trailing_slash_and_query_parameters()", span="62-62"];
m0_21 [cluster="RestSharp.RestRequest.RestRequest(string)", file="UrlBuilderTests.cs", label="Entry RestSharp.RestRequest.RestRequest(string)", span="61-61"];
m0_78 [cluster="RestSharp.RestRequest.AddUrlSegment(string, string)", file="UrlBuilderTests.cs", label="Entry RestSharp.RestRequest.AddUrlSegment(string, string)", span="565-565"];
m0_119 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_querystring_containing_tokens()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.POST_with_querystring_containing_tokens()", span="176-176"];
m0_120 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_querystring_containing_tokens()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest(''resource'', Method.POST)", span="178-178"];
m0_121 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_querystring_containing_tokens()", file="UrlBuilderTests.cs", label="request.AddParameter(''foo'', ''bar'', ParameterType.QueryString)", span="180-180"];
m0_124 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_querystring_containing_tokens()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="184-184"];
m0_122 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_querystring_containing_tokens()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(''http://example.com'')", span="182-182"];
m0_123 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_querystring_containing_tokens()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/resource?foo=bar'')", span="183-183"];
m0_125 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_querystring_containing_tokens()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="186-186"];
m0_126 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_querystring_containing_tokens()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.POST_with_querystring_containing_tokens()", span="176-176"];
m0_176 [cluster="lambda expression", file="UrlBuilderTests.cs", label="Entry lambda expression", span="267-267"];
m0_95 [cluster="lambda expression", file="UrlBuilderTests.cs", label="client.BuildUri(request)", span="132-132"];
m0_94 [cluster="lambda expression", file="UrlBuilderTests.cs", label="Entry lambda expression", span="132-132"];
m0_96 [cluster="lambda expression", file="UrlBuilderTests.cs", label="Exit lambda expression", span="132-132"];
m0_177 [cluster="lambda expression", file="UrlBuilderTests.cs", label="new RestClient(''invalid url'')", span="267-267"];
m0_178 [cluster="lambda expression", file="UrlBuilderTests.cs", label="Exit lambda expression", span="267-267"];
m0_10 [cluster="RestSharp.RestClient.RestClient(string)", file="UrlBuilderTests.cs", label="Entry RestSharp.RestClient.RestClient(string)", span="88-88"];
m0_0 [cluster="RestSharp.Tests.UrlBuilderTests.Should_not_duplicate_question_mark()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.Should_not_duplicate_question_mark()", span="12-12"];
m0_1 [cluster="RestSharp.Tests.UrlBuilderTests.Should_not_duplicate_question_mark()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest()", span="14-14"];
m0_2 [cluster="RestSharp.Tests.UrlBuilderTests.Should_not_duplicate_question_mark()", file="UrlBuilderTests.cs", label="request.AddParameter(''param2'', ''value2'')", span="16-16"];
m0_5 [cluster="RestSharp.Tests.UrlBuilderTests.Should_not_duplicate_question_mark()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="20-20"];
m0_3 [cluster="RestSharp.Tests.UrlBuilderTests.Should_not_duplicate_question_mark()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(''http://example.com/resource?param1=value1'')", span="18-18"];
m0_4 [cluster="RestSharp.Tests.UrlBuilderTests.Should_not_duplicate_question_mark()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/resource?param1=value1&param2=value2'')", span="19-19"];
m0_6 [cluster="RestSharp.Tests.UrlBuilderTests.Should_not_duplicate_question_mark()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="22-22"];
m0_7 [cluster="RestSharp.Tests.UrlBuilderTests.Should_not_duplicate_question_mark()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.Should_not_duplicate_question_mark()", span="12-12"];
m0_105 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_empty_request()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_empty_request()", span="154-154"];
m0_106 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_empty_request()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest()", span="156-156"];
m0_107 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_empty_request()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(new Uri(''http://example.com''))", span="157-157"];
m0_109 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_empty_request()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="159-159"];
m0_108 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_empty_request()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/'')", span="158-158"];
m0_110 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_empty_request()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="161-161"];
m0_111 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_empty_request()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_empty_request()", span="154-154"];
m0_12 [cluster="RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", file="UrlBuilderTests.cs", label="Entry RestSharp.RestClient.BuildUri(RestSharp.IRestRequest)", span="239-239"];
m0_30 [cluster="RestSharp.RestRequest.RestRequest(string, RestSharp.Method)", file="UrlBuilderTests.cs", label="Entry RestSharp.RestRequest.RestRequest(string, RestSharp.Method)", span="70-70"];
m0_189 [cluster="RestSharp.Tests.UrlBuilderTests.Should_update_parameter_if_it_already_exists()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.Should_update_parameter_if_it_already_exists()", span="286-286"];
m0_190 [cluster="RestSharp.Tests.UrlBuilderTests.Should_update_parameter_if_it_already_exists()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest()", span="288-288"];
m0_191 [cluster="RestSharp.Tests.UrlBuilderTests.Should_update_parameter_if_it_already_exists()", file="UrlBuilderTests.cs", label="request.AddOrUpdateParameter(''param2'', ''value2'')", span="290-290"];
m0_192 [cluster="RestSharp.Tests.UrlBuilderTests.Should_update_parameter_if_it_already_exists()", file="UrlBuilderTests.cs", label="request.AddOrUpdateParameter(''param2'', ''value2-1'')", span="291-291"];
m0_195 [cluster="RestSharp.Tests.UrlBuilderTests.Should_update_parameter_if_it_already_exists()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="295-295"];
m0_193 [cluster="RestSharp.Tests.UrlBuilderTests.Should_update_parameter_if_it_already_exists()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(''http://example.com/resource?param1=value1'')", span="293-293"];
m0_194 [cluster="RestSharp.Tests.UrlBuilderTests.Should_update_parameter_if_it_already_exists()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/resource?param1=value1&param2=value2-1'')", span="294-294"];
m0_196 [cluster="RestSharp.Tests.UrlBuilderTests.Should_update_parameter_if_it_already_exists()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="297-297"];
m0_197 [cluster="RestSharp.Tests.UrlBuilderTests.Should_update_parameter_if_it_already_exists()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.Should_update_parameter_if_it_already_exists()", span="286-286"];
m0_63 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_slashes()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_slashes()", span="100-100"];
m0_64 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_slashes()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest(''resource/foo'', Method.POST)", span="102-102"];
m0_65 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_slashes()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(new Uri(''http://example.com''))", span="103-103"];
m0_67 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_slashes()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="105-105"];
m0_66 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_slashes()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/resource/foo'')", span="104-104"];
m0_68 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_slashes()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="107-107"];
m0_69 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_slashes()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_slashes()", span="100-100"];
m0_14 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash()", span="26-26"];
m0_15 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest(''/resource'')", span="28-28"];
m0_16 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(new Uri(''http://example.com''))", span="29-29"];
m0_18 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="31-31"];
m0_17 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/resource'')", span="30-30"];
m0_19 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="33-33"];
m0_20 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash()", span="26-26"];
m0_90 [cluster="string.IsNullOrEmpty(string)", file="UrlBuilderTests.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m0_112 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_empty_request_and_bare_hostname()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_empty_request_and_bare_hostname()", span="165-165"];
m0_113 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_empty_request_and_bare_hostname()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest()", span="167-167"];
m0_114 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_empty_request_and_bare_hostname()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(new Uri(''http://example.com''))", span="168-168"];
m0_116 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_empty_request_and_bare_hostname()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="170-170"];
m0_115 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_empty_request_and_bare_hostname()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/'')", span="169-169"];
m0_117 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_empty_request_and_bare_hostname()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="172-172"];
m0_118 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_empty_request_and_bare_hostname()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_empty_request_and_bare_hostname()", span="165-165"];
m0_155 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_Uri_and_resource_containing_tokens()", span="235-235"];
m0_156 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest(''resource/{baz}'')", span="237-237"];
m0_157 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="request.AddUrlSegment(''foo'', ''bar'')", span="239-239"];
m0_158 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="request.AddUrlSegment(''baz'', ''bat'')", span="240-240"];
m0_161 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="244-244"];
m0_159 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(new Uri(''http://example.com/{foo}''))", span="242-242"];
m0_160 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/bar/resource/bat'')", span="243-243"];
m0_162 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="246-246"];
m0_163 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_and_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_Uri_and_resource_containing_tokens()", span="235-235"];
m0_97 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_tokens()", span="140-140"];
m0_98 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest(''resource/{foo}'', Method.POST)", span="142-142"];
m0_99 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="request.AddUrlSegment(''foo'', ''bar'')", span="144-144"];
m0_102 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="148-148"];
m0_100 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(new Uri(''http://example.com''))", span="146-146"];
m0_101 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/resource/bar'')", span="147-147"];
m0_103 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="150-150"];
m0_104 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.POST_with_resource_containing_tokens()", span="140-140"];
m0_147 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_containing_tokens()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_containing_tokens()", span="221-221"];
m0_148 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_containing_tokens()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest()", span="223-223"];
m0_149 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_containing_tokens()", file="UrlBuilderTests.cs", label="request.AddUrlSegment(''foo'', ''bar'')", span="225-225"];
m0_152 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_containing_tokens()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="229-229"];
m0_150 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_containing_tokens()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(''http://example.com/{foo}'')", span="227-227"];
m0_151 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_containing_tokens()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/bar'')", span="228-228"];
m0_153 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_containing_tokens()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="231-231"];
m0_154 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_containing_tokens()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_Url_string_containing_tokens()", span="221-221"];
m0_79 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_null_token()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_null_token()", span="125-125"];
m0_80 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_null_token()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest(''/resource/{foo}'', Method.GET)", span="127-127"];
m0_81 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_null_token()", file="UrlBuilderTests.cs", label="request.AddUrlSegment(''foo'', null)", span="129-129"];
m0_83 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_null_token()", file="UrlBuilderTests.cs", label="ArgumentException exception = Assert.Throws<ArgumentException>(() => client.BuildUri(request))", span="132-132"];
m0_82 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_null_token()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(''http://example.com/api/1.0'')", span="131-131"];
m0_84 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_null_token()", file="UrlBuilderTests.cs", label="Assert.IsNotNull(exception)", span="134-134"];
m0_85 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_null_token()", file="UrlBuilderTests.cs", label="Assert.False(string.IsNullOrEmpty(exception.Message))", span="135-135"];
m0_86 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_null_token()", file="UrlBuilderTests.cs", label="Assert.IsTrue(exception.Message.Contains(''foo''))", span="136-136"];
m0_87 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_null_token()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_null_token()", span="125-125"];
m0_9 [cluster="RestSharp.RestRequest.AddParameter(string, object)", file="UrlBuilderTests.cs", label="Entry RestSharp.RestRequest.AddParameter(string, object)", span="398-398"];
m0_188 [cluster="RestSharp.RestRequest.AddOrUpdateParameter(string, object)", file="UrlBuilderTests.cs", label="Entry RestSharp.RestRequest.AddOrUpdateParameter(string, object)", span="477-477"];
m0_11 [cluster="System.Uri.Uri(string)", file="UrlBuilderTests.cs", label="Entry System.Uri.Uri(string)", span="0-0"];
m0_92 [cluster="string.Contains(string)", file="UrlBuilderTests.cs", label="Entry string.Contains(string)", span="0-0"];
m0_179 [cluster="RestSharp.Tests.UrlBuilderTests.Should_add_parameter_if_it_is_new()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.Should_add_parameter_if_it_is_new()", span="271-271"];
m0_180 [cluster="RestSharp.Tests.UrlBuilderTests.Should_add_parameter_if_it_is_new()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest()", span="273-273"];
m0_181 [cluster="RestSharp.Tests.UrlBuilderTests.Should_add_parameter_if_it_is_new()", file="UrlBuilderTests.cs", label="request.AddOrUpdateParameter(''param2'', ''value2'')", span="275-275"];
m0_182 [cluster="RestSharp.Tests.UrlBuilderTests.Should_add_parameter_if_it_is_new()", file="UrlBuilderTests.cs", label="request.AddOrUpdateParameter(''param3'', ''value3'')", span="276-276"];
m0_185 [cluster="RestSharp.Tests.UrlBuilderTests.Should_add_parameter_if_it_is_new()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="280-280"];
m0_183 [cluster="RestSharp.Tests.UrlBuilderTests.Should_add_parameter_if_it_is_new()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(''http://example.com/resource?param1=value1'')", span="278-278"];
m0_184 [cluster="RestSharp.Tests.UrlBuilderTests.Should_add_parameter_if_it_is_new()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/resource?param1=value1&param2=value2&param3=value3'')", span="279-279"];
m0_186 [cluster="RestSharp.Tests.UrlBuilderTests.Should_add_parameter_if_it_is_new()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="282-282"];
m0_187 [cluster="RestSharp.Tests.UrlBuilderTests.Should_add_parameter_if_it_is_new()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.Should_add_parameter_if_it_is_new()", span="271-271"];
m0_48 [cluster="RestSharp.RestClient.Execute(RestSharp.IRestRequest)", file="UrlBuilderTests.cs", label="Entry RestSharp.RestClient.Execute(RestSharp.IRestRequest)", span="23-23"];
m0_56 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_slashes()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_slashes()", span="89-89"];
m0_57 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_slashes()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest(''resource/foo'')", span="91-91"];
m0_58 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_slashes()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(new Uri(''http://example.com''))", span="92-92"];
m0_60 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_slashes()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="94-94"];
m0_59 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_slashes()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/resource/foo'')", span="93-93"];
m0_61 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_slashes()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="96-96"];
m0_62 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_slashes()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_slashes()", span="89-89"];
m0_128 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_multiple_instances_of_same_key()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_multiple_instances_of_same_key()", span="190-190"];
m0_129 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_multiple_instances_of_same_key()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest(''v1/people/~/network/updates'', Method.GET)", span="192-192"];
m0_130 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_multiple_instances_of_same_key()", file="UrlBuilderTests.cs", label="request.AddParameter(''type'', ''STAT'')", span="194-194"];
m0_131 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_multiple_instances_of_same_key()", file="UrlBuilderTests.cs", label="request.AddParameter(''type'', ''PICT'')", span="195-195"];
m0_132 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_multiple_instances_of_same_key()", file="UrlBuilderTests.cs", label="request.AddParameter(''count'', ''50'')", span="196-196"];
m0_133 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_multiple_instances_of_same_key()", file="UrlBuilderTests.cs", label="request.AddParameter(''start'', ''50'')", span="197-197"];
m0_136 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_multiple_instances_of_same_key()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="201-201"];
m0_134 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_multiple_instances_of_same_key()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(''http://api.linkedin.com'')", span="199-199"];
m0_135 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_multiple_instances_of_same_key()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://api.linkedin.com/v1/people/~/network/updates?type=STAT&type=PICT&count=50&start=50'')", span="200-200"];
m0_137 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_multiple_instances_of_same_key()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="203-203"];
m0_138 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_multiple_instances_of_same_key()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_multiple_instances_of_same_key()", span="190-190"];
m0_139 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_containing_tokens()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_Uri_containing_tokens()", span="207-207"];
m0_140 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_containing_tokens()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest()", span="209-209"];
m0_141 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_containing_tokens()", file="UrlBuilderTests.cs", label="request.AddUrlSegment(''foo'', ''bar'')", span="211-211"];
m0_144 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_containing_tokens()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="215-215"];
m0_142 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_containing_tokens()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(new Uri(''http://example.com/{foo}''))", span="213-213"];
m0_143 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_containing_tokens()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/bar'')", span="214-214"];
m0_145 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_containing_tokens()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="217-217"];
m0_146 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_Uri_containing_tokens()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_Uri_containing_tokens()", span="207-207"];
m0_127 [cluster="RestSharp.RestRequest.AddParameter(string, object, RestSharp.ParameterType)", file="UrlBuilderTests.cs", label="Entry RestSharp.RestRequest.AddParameter(string, object, RestSharp.ParameterType)", span="419-419"];
m0_70 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_tokens()", span="111-111"];
m0_71 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest(''resource/{foo}'')", span="113-113"];
m0_72 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="request.AddUrlSegment(''foo'', ''bar'')", span="115-115"];
m0_75 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="119-119"];
m0_73 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(new Uri(''http://example.com''))", span="117-117"];
m0_74 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/resource/bar'')", span="118-118"];
m0_76 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="121-121"];
m0_77 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_tokens()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_resource_containing_tokens()", span="111-111"];
m0_23 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash()", span="37-37"];
m0_24 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest(''/resource'', Method.POST)", span="39-39"];
m0_25 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(new Uri(''http://example.com''))", span="40-40"];
m0_27 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="42-42"];
m0_26 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/resource'')", span="41-41"];
m0_28 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="44-44"];
m0_29 [cluster="RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.POST_with_leading_slash()", span="37-37"];
m0_31 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash_and_baseurl_trailing_slash()", span="48-48"];
m0_32 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest(''/resource'')", span="50-50"];
m0_33 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="request.AddParameter(''foo'', ''bar'')", span="52-52"];
m0_36 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="Uri output = client.BuildUri(request)", span="56-56"];
m0_34 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="RestClient client = new RestClient(new Uri(''http://example.com''))", span="54-54"];
m0_35 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="Uri expected = new Uri(''http://example.com/resource?foo=bar'')", span="55-55"];
m0_37 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="Assert.AreEqual(expected, output)", span="58-58"];
m0_38 [cluster="RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash_and_baseurl_trailing_slash()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.GET_with_leading_slash_and_baseurl_trailing_slash()", span="48-48"];
m0_198 [cluster="RestSharp.Tests.UrlBuilderTests.Should_build_uri_using_selected_encoding()", file="UrlBuilderTests.cs", label="Entry RestSharp.Tests.UrlBuilderTests.Should_build_uri_using_selected_encoding()", span="302-302"];
m0_199 [cluster="RestSharp.Tests.UrlBuilderTests.Should_build_uri_using_selected_encoding()", color=green, community=0, file="UrlBuilderTests.cs", label="RestRequest request = new RestRequest()", prediction=2, span="304-304"];
m0_200 [cluster="RestSharp.Tests.UrlBuilderTests.Should_build_uri_using_selected_encoding()", color=green, community=0, file="UrlBuilderTests.cs", label="request.AddOrUpdateParameter(''town'', ''HillerÃ¸d'')", prediction=3, span="307-307"];
m0_204 [cluster="RestSharp.Tests.UrlBuilderTests.Should_build_uri_using_selected_encoding()", color=green, community=0, file="UrlBuilderTests.cs", label="Assert.AreEqual(expectedDefaultEncoding, client.BuildUri(request))", prediction=2, span="313-313"];
m0_206 [cluster="RestSharp.Tests.UrlBuilderTests.Should_build_uri_using_selected_encoding()", color=green, community=0, file="UrlBuilderTests.cs", label="Assert.AreEqual(expectedIso89591Encoding, client.BuildUri(request))", prediction=2, span="316-316"];
m0_201 [cluster="RestSharp.Tests.UrlBuilderTests.Should_build_uri_using_selected_encoding()", color=green, community=0, file="UrlBuilderTests.cs", label="RestClient client = new RestClient(''http://example.com/resource'')", prediction=2, span="309-309"];
m0_205 [cluster="RestSharp.Tests.UrlBuilderTests.Should_build_uri_using_selected_encoding()", color=green, community=0, file="UrlBuilderTests.cs", label="client.Encoding = Encoding.GetEncoding(''ISO-8859-1'')", prediction=7, span="315-315"];
m0_202 [cluster="RestSharp.Tests.UrlBuilderTests.Should_build_uri_using_selected_encoding()", color=green, community=0, file="UrlBuilderTests.cs", label="Uri expectedDefaultEncoding = new Uri(''http://example.com/resource?town=Hiller%C3%B8d'')", prediction=2, span="311-311"];
m0_203 [cluster="RestSharp.Tests.UrlBuilderTests.Should_build_uri_using_selected_encoding()", color=green, community=0, file="UrlBuilderTests.cs", label="Uri expectedIso89591Encoding = new Uri(''http://example.com/resource?town=Hiller%F8d'')", prediction=2, span="312-312"];
m0_207 [cluster="RestSharp.Tests.UrlBuilderTests.Should_build_uri_using_selected_encoding()", file="UrlBuilderTests.cs", label="Exit RestSharp.Tests.UrlBuilderTests.Should_build_uri_using_selected_encoding()", span="302-302"];
n4;
n17;
d32;
m0_13;
m0_88;
m0_89;
m0_91;
m0_93;
n31;
n1 -> n6  [color=darkseagreen4, key=1, label=nullString, style=dashed];
n2 -> n5  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n10 -> n13  [color=darkseagreen4, key=1, label=numLessThanLimit, style=dashed];
n19 -> n22  [color=darkseagreen4, key=1, label=numGreaterThanLimit, style=dashed];
n25 -> d27  [color=green, key=1, label=parameter, style=dashed];
m0_165 -> m0_167  [color=darkseagreen4, key=1, label=request, style=dashed];
m0_169 -> m0_171  [color=darkseagreen4, key=1, label=expected, style=dashed];
m0_52 -> m0_54  [color=darkseagreen4, key=1, label=expected, style=dashed];
m0_174 -> m0_176  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_40 -> m0_42  [color=darkseagreen4, key=1, label=request, style=dashed];
m0_40 -> m0_45  [color=darkseagreen4, key=1, label=request, style=dashed];
m0_41 -> m0_45  [color=darkseagreen4, key=1, label=client, style=dashed];
m0_44 -> m0_46  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_43 -> m0_46  [color=darkseagreen4, key=1, label=expected, style=dashed];
m0_123 -> m0_125  [color=darkseagreen4, key=1, label=expected, style=dashed];
m0_4 -> m0_6  [color=darkseagreen4, key=1, label=expected, style=dashed];
m0_108 -> m0_110  [color=darkseagreen4, key=1, label=expected, style=dashed];
m0_190 -> m0_192  [color=darkseagreen4, key=1, label=request, style=dashed];
m0_194 -> m0_196  [color=darkseagreen4, key=1, label=expected, style=dashed];
m0_66 -> m0_68  [color=darkseagreen4, key=1, label=expected, style=dashed];
m0_17 -> m0_19  [color=darkseagreen4, key=1, label=expected, style=dashed];
m0_115 -> m0_117  [color=darkseagreen4, key=1, label=expected, style=dashed];
m0_156 -> m0_158  [color=darkseagreen4, key=1, label=request, style=dashed];
m0_160 -> m0_162  [color=darkseagreen4, key=1, label=expected, style=dashed];
m0_101 -> m0_103  [color=darkseagreen4, key=1, label=expected, style=dashed];
m0_151 -> m0_153  [color=darkseagreen4, key=1, label=expected, style=dashed];
m0_80 -> m0_95  [color=darkseagreen4, key=1, label=request, style=dashed];
m0_83 -> m0_85  [color=darkseagreen4, key=1, label=exception, style=dashed];
m0_83 -> m0_86  [color=darkseagreen4, key=1, label=exception, style=dashed];
m0_83 -> m0_94  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_82 -> m0_95  [color=darkseagreen4, key=1, label=client, style=dashed];
m0_180 -> m0_182  [color=darkseagreen4, key=1, label=request, style=dashed];
m0_184 -> m0_186  [color=darkseagreen4, key=1, label=expected, style=dashed];
m0_59 -> m0_61  [color=darkseagreen4, key=1, label=expected, style=dashed];
m0_129 -> m0_131  [color=darkseagreen4, key=1, label=request, style=dashed];
m0_129 -> m0_132  [color=darkseagreen4, key=1, label=request, style=dashed];
m0_129 -> m0_133  [color=darkseagreen4, key=1, label=request, style=dashed];
m0_135 -> m0_137  [color=darkseagreen4, key=1, label=expected, style=dashed];
m0_143 -> m0_145  [color=darkseagreen4, key=1, label=expected, style=dashed];
m0_74 -> m0_76  [color=darkseagreen4, key=1, label=expected, style=dashed];
m0_26 -> m0_28  [color=darkseagreen4, key=1, label=expected, style=dashed];
m0_35 -> m0_37  [color=darkseagreen4, key=1, label=expected, style=dashed];
m0_198 -> m0_95  [color=darkseagreen4, key=1, label=request, style=dashed];
m0_199 -> m0_204  [color=green, key=1, label=request, style=dashed];
m0_199 -> m0_206  [color=green, key=1, label=request, style=dashed];
m0_199 -> m0_95  [color=darkseagreen4, key=1, label=client, style=dashed];
m0_201 -> m0_204  [color=green, key=1, label=client, style=dashed];
m0_201 -> m0_206  [color=green, key=1, label=client, style=dashed];
m0_202 -> m0_204  [color=green, key=1, label=expectedDefaultEncoding, style=dashed];
m0_203 -> m0_206  [color=green, key=1, label=expectedIso89591Encoding, style=dashed];
n31 -> n6  [color=darkseagreen4, key=1, label=nullString, style=dashed];
}
