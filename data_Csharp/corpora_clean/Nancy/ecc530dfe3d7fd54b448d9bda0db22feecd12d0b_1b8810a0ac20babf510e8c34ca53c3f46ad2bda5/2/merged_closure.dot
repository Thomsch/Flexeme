digraph  {
n0 [cluster="Nancy.Routing.Constraints.AlphaRouteSegmentConstraint.TryMatch(string, string, out string)", label="Entry Nancy.Routing.Constraints.AlphaRouteSegmentConstraint.TryMatch(string, string, out string)", span="11-11"];
n1 [cluster="Nancy.Routing.Constraints.AlphaRouteSegmentConstraint.TryMatch(string, string, out string)", label="!segment.All(char.IsLetter)", span="13-13"];
n4 [cluster="Nancy.Routing.Constraints.AlphaRouteSegmentConstraint.TryMatch(string, string, out string)", label="matchedValue = segment", span="19-19"];
n2 [cluster="Nancy.Routing.Constraints.AlphaRouteSegmentConstraint.TryMatch(string, string, out string)", label="matchedValue = null", span="15-15"];
n7 [cluster="Unk.All", label="Entry Unk.All", span=""];
n3 [cluster="Nancy.Routing.Constraints.AlphaRouteSegmentConstraint.TryMatch(string, string, out string)", label="return false;", span="16-16"];
n5 [cluster="Nancy.Routing.Constraints.AlphaRouteSegmentConstraint.TryMatch(string, string, out string)", label="return true;", span="20-20"];
n6 [cluster="Nancy.Routing.Constraints.AlphaRouteSegmentConstraint.TryMatch(string, string, out string)", label="Exit Nancy.Routing.Constraints.AlphaRouteSegmentConstraint.TryMatch(string, string, out string)", span="11-11"];
m0_3 [cluster="bool.TryParse(string, out bool)", file="BoolRouteSegmentConstraint.cs", label="Entry bool.TryParse(string, out bool)", span="0-0"];
m0_0 [cluster="Nancy.Routing.Constraints.BoolRouteSegmentConstraint.TryMatch(string, string, out bool)", file="BoolRouteSegmentConstraint.cs", label="Entry Nancy.Routing.Constraints.BoolRouteSegmentConstraint.TryMatch(string, string, out bool)", span="9-9"];
m0_1 [cluster="Nancy.Routing.Constraints.BoolRouteSegmentConstraint.TryMatch(string, string, out bool)", file="BoolRouteSegmentConstraint.cs", label="return bool.TryParse(segment, out matchedValue);", span="11-11"];
m0_2 [cluster="Nancy.Routing.Constraints.BoolRouteSegmentConstraint.TryMatch(string, string, out bool)", file="BoolRouteSegmentConstraint.cs", label="Exit Nancy.Routing.Constraints.BoolRouteSegmentConstraint.TryMatch(string, string, out bool)", span="9-9"];
m1_14 [cluster="Nancy.Testing.BrowserResponseBodyWrapper.GetEnumerator()", file="BrowserResponseBodyWrapper.cs", label="return this.responseBytes.GetEnumerator();", span="54-54"];
m1_0 [cluster="Nancy.Routing.DefaultNancyModuleBuilder.DefaultNancyModuleBuilder(Nancy.ViewEngines.IViewFactory, Nancy.IResponseFormatterFactory, Nancy.ModelBinding.IModelBinderLocator, Nancy.Validation.IModelValidatorLocator)", file="BrowserResponseBodyWrapper.cs", label="Entry Nancy.Routing.DefaultNancyModuleBuilder.DefaultNancyModuleBuilder(Nancy.ViewEngines.IViewFactory, Nancy.IResponseFormatterFactory, Nancy.ModelBinding.IModelBinderLocator, Nancy.Validation.IModelValidatorLocator)", span="23-23"];
m1_1 [cluster="Nancy.Routing.DefaultNancyModuleBuilder.DefaultNancyModuleBuilder(Nancy.ViewEngines.IViewFactory, Nancy.IResponseFormatterFactory, Nancy.ModelBinding.IModelBinderLocator, Nancy.Validation.IModelValidatorLocator)", color=green, community=0, file="BrowserResponseBodyWrapper.cs", label="this.viewFactory = viewFactory", prediction=0, span="25-25"];
m1_2 [cluster="Nancy.Routing.DefaultNancyModuleBuilder.DefaultNancyModuleBuilder(Nancy.ViewEngines.IViewFactory, Nancy.IResponseFormatterFactory, Nancy.ModelBinding.IModelBinderLocator, Nancy.Validation.IModelValidatorLocator)", file="BrowserResponseBodyWrapper.cs", label="this.responseFormatterFactory = responseFormatterFactory", span="26-26"];
m1_3 [cluster="Nancy.Routing.DefaultNancyModuleBuilder.DefaultNancyModuleBuilder(Nancy.ViewEngines.IViewFactory, Nancy.IResponseFormatterFactory, Nancy.ModelBinding.IModelBinderLocator, Nancy.Validation.IModelValidatorLocator)", file="BrowserResponseBodyWrapper.cs", label="this.modelBinderLocator = modelBinderLocator", span="27-27"];
m1_4 [cluster="Nancy.Testing.BrowserResponseBodyWrapper.GetContentStream(Nancy.Response)", file="BrowserResponseBodyWrapper.cs", label="Entry Nancy.Testing.BrowserResponseBodyWrapper.GetContentStream(Nancy.Response)", span="22-22"];
m1_5 [cluster="System.IO.MemoryStream.ToArray()", file="BrowserResponseBodyWrapper.cs", label="Entry System.IO.MemoryStream.ToArray()", span="0-0"];
m1_17 [cluster="Nancy.Testing.BrowserResponseBodyWrapper.System.Collections.IEnumerable.GetEnumerator()", file="BrowserResponseBodyWrapper.cs", label="Entry Nancy.Testing.BrowserResponseBodyWrapper.System.Collections.IEnumerable.GetEnumerator()", span="61-61"];
m1_18 [cluster="Nancy.Testing.BrowserResponseBodyWrapper.System.Collections.IEnumerable.GetEnumerator()", file="BrowserResponseBodyWrapper.cs", label="return this.GetEnumerator();", span="63-63"];
m1_19 [cluster="Nancy.Testing.BrowserResponseBodyWrapper.System.Collections.IEnumerable.GetEnumerator()", file="BrowserResponseBodyWrapper.cs", label="Exit Nancy.Testing.BrowserResponseBodyWrapper.System.Collections.IEnumerable.GetEnumerator()", span="61-61"];
m1_6 [cluster="Nancy.Testing.BrowserResponseBodyWrapper.GetContentStream(Nancy.Response)", color=green, community=0, file="BrowserResponseBodyWrapper.cs", label="var contentsStream = new MemoryStream()", prediction=1, span="24-24"];
m1_7 [cluster="Nancy.Testing.BrowserResponseBodyWrapper.GetContentStream(Nancy.Response)", color=green, community=0, file="BrowserResponseBodyWrapper.cs", label="response.Contents.Invoke(contentsStream)", prediction=2, span="25-25"];
m1_8 [cluster="Nancy.Testing.BrowserResponseBodyWrapper.GetContentStream(Nancy.Response)", file="BrowserResponseBodyWrapper.cs", label="contentsStream.Position = 0", span="26-26"];
m1_9 [cluster="Nancy.Testing.BrowserResponseBodyWrapper.GetContentStream(Nancy.Response)", file="BrowserResponseBodyWrapper.cs", label="return contentsStream;", span="27-27"];
m1_10 [cluster="Nancy.Testing.BrowserResponseBodyWrapper.GetContentStream(Nancy.Response)", file="BrowserResponseBodyWrapper.cs", label="Exit Nancy.Testing.BrowserResponseBodyWrapper.GetContentStream(Nancy.Response)", span="22-22"];
m1_11 [cluster="System.IO.MemoryStream.MemoryStream()", file="BrowserResponseBodyWrapper.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m1_12 [cluster="System.Action<T>.Invoke(T)", file="BrowserResponseBodyWrapper.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m1_13 [cluster="Nancy.Testing.BrowserResponseBodyWrapper.GetEnumerator()", file="BrowserResponseBodyWrapper.cs", label="Entry Nancy.Testing.BrowserResponseBodyWrapper.GetEnumerator()", span="52-52"];
m1_16 [cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()", file="BrowserResponseBodyWrapper.cs", label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0"];
m1_15 [cluster="Nancy.Testing.BrowserResponseBodyWrapper.GetEnumerator()", file="BrowserResponseBodyWrapper.cs", label="Nancy.Routing.DefaultNancyModuleBuilder", span=""];
m1_20 [file="BrowserResponseBodyWrapper.cs", label="Nancy.Testing.BrowserResponseBodyWrapper", span=""];
m2_444 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_options_request_when_route_is_defined()", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_options_request_when_route_is_defined()", span="454-454"];
m2_445 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_options_request_when_route_is_defined()", file="BrowserResponseBodyWrapperExtensions.cs", label="var request = new FakeRequest(''OPTIONS'', ''/foo/bar'')", span="457-457"];
m2_446 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_options_request_when_route_is_defined()", file="BrowserResponseBodyWrapperExtensions.cs", label="var context = new NancyContext {Request = request}", span="458-458"];
m2_447 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_options_request_when_route_is_defined()", file="BrowserResponseBodyWrapperExtensions.cs", label="var resolver = CreateResolver(x => x.AddGetRoute(''/foo/bar''))", span="459-459"];
m2_448 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_options_request_when_route_is_defined()", file="BrowserResponseBodyWrapperExtensions.cs", label="var resolvedRoute = resolver.Resolve(context)", span="462-462"];
m2_449 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_options_request_when_route_is_defined()", file="BrowserResponseBodyWrapperExtensions.cs", label="resolvedRoute.ShouldNotBeNull()", span="465-465"];
m2_450 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_options_request_when_route_is_defined()", file="BrowserResponseBodyWrapperExtensions.cs", label="resolvedRoute.Item1.ShouldBeOfType<OptionsRoute>()", span="466-466"];
m2_451 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_options_request_when_route_is_defined()", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_options_request_when_route_is_defined()", span="454-454"];
m2_478 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_optionsroute_with_allow_header_set_to_allowed_methods_matching_request_route_for_options()", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_optionsroute_with_allow_header_set_to_allowed_methods_matching_request_route_for_options()", span="503-503"];
m2_479 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_optionsroute_with_allow_header_set_to_allowed_methods_matching_request_route_for_options()", file="BrowserResponseBodyWrapperExtensions.cs", label="var request = new FakeRequest(''OPTIONS'', ''/foo/bar'')", span="506-506"];
m2_480 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_optionsroute_with_allow_header_set_to_allowed_methods_matching_request_route_for_options()", file="BrowserResponseBodyWrapperExtensions.cs", label="var context = new NancyContext {Request = request}", span="507-507"];
m2_481 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_optionsroute_with_allow_header_set_to_allowed_methods_matching_request_route_for_options()", file="BrowserResponseBodyWrapperExtensions.cs", label="var resolver = CreateResolver(x =>\r\n            {\r\n                x.AddGetRoute(''/foo/bar'');\r\n                x.AddPutRoute(''/foo/bar'');\r\n            })", span="508-512"];
m2_482 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_optionsroute_with_allow_header_set_to_allowed_methods_matching_request_route_for_options()", file="BrowserResponseBodyWrapperExtensions.cs", label="var route = resolver.Resolve(context).Item1", span="515-515"];
m2_483 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_optionsroute_with_allow_header_set_to_allowed_methods_matching_request_route_for_options()", file="BrowserResponseBodyWrapperExtensions.cs", label="route.ShouldNotBeNull()", span="518-518"];
m2_484 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_optionsroute_with_allow_header_set_to_allowed_methods_matching_request_route_for_options()", file="BrowserResponseBodyWrapperExtensions.cs", label="route.ShouldBeOfType<OptionsRoute>()", span="519-519"];
m2_485 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_optionsroute_with_allow_header_set_to_allowed_methods_matching_request_route_for_options()", file="BrowserResponseBodyWrapperExtensions.cs", label="route.Invoke(new DynamicDictionary()).Headers[''Allow''].ShouldEqual(''GET, PUT'')", span="520-520"];
m2_486 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_optionsroute_with_allow_header_set_to_allowed_methods_matching_request_route_for_options()", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_optionsroute_with_allow_header_set_to_allowed_methods_matching_request_route_for_options()", span="503-503"];
m2_270 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_request_uri()", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_request_uri()", span="245-245"];
m2_271 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_request_uri()", file="BrowserResponseBodyWrapperExtensions.cs", label="var request = new FakeRequest(''get'', ''/foo/bar'')", span="248-248"];
m2_272 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_request_uri()", file="BrowserResponseBodyWrapperExtensions.cs", label="var context = new NancyContext {Request = request}", span="249-249"];
m2_275 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_request_uri()", file="BrowserResponseBodyWrapperExtensions.cs", label="A.CallTo(() => this.matcher.Match(request.Path, A<string>.Ignored, A<NancyContext>.Ignored)).MustHaveHappened()", span="256-256"];
m2_273 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_request_uri()", file="BrowserResponseBodyWrapperExtensions.cs", label="var resolver = CreateResolver(x => x.AddGetRoute(''/foo/bar''))", span="250-250"];
m2_274 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_request_uri()", file="BrowserResponseBodyWrapperExtensions.cs", label="resolver.Resolve(context)", span="253-253"];
m2_276 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_request_uri()", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_request_uri()", span="245-245"];
m2_61 [cluster="Unk.GetKeyForModuleType", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Unk.GetKeyForModuleType", span=""];
m2_161 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", span="150-150"];
m2_162 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", file="BrowserResponseBodyWrapperExtensions.cs", label="var request = new FakeRequest(''get'', ''/foo/bar'')", span="153-153"];
m2_163 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", file="BrowserResponseBodyWrapperExtensions.cs", label="var context = new NancyContext { Request = request }", span="154-154"];
m2_165 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", file="BrowserResponseBodyWrapperExtensions.cs", label="A.CallTo(() => this.matcher.Match(request.Path, ''/foo/bar'', null)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(true)))", span="166-167"];
m2_166 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", file="BrowserResponseBodyWrapperExtensions.cs", label="A.CallTo(() => this.matcher.Match(request.Path, ''/foo/{bar}'', null)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(true).AddParameter(''bar'', ''fake value'')))", span="169-170"];
m2_167 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", file="BrowserResponseBodyWrapperExtensions.cs", label="A.CallTo(() => this.matcher.Match(request.Path, ''/foo/{bar}'', null)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(true)\r\n                    .AddParameter(''foo'', ''fake value'')\r\n                    .AddParameter(''bar'', ''fake value'')))", span="172-175"];
m2_164 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", file="BrowserResponseBodyWrapperExtensions.cs", label="var resolver = CreateResolver(x =>\r\n            {\r\n                x.AddGetRoute(''/foo/{bar}'', ''module-key-parameters'');\r\n                x.AddGetRoute(''/{foo}/{bar}'', ''module-key-two-parameters'');\r\n                x.AddGetRoute(''/foo/bar'', ''module-key-no-parameters'');\r\n                x.AddGetRoute(''/foo/bar'', ''module-key-no-parameters-second'');\r\n                x.AddGetRoute(''/foo/{bar}'', ''module-key-parameters'');\r\n                x.AddGetRoute(''/{foo}/{bar}'', ''module-key-two-parameters'');\r\n            })", span="156-164"];
m2_168 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", file="BrowserResponseBodyWrapperExtensions.cs", label="resolver.Resolve(context)", span="177-177"];
m2_169 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", file="BrowserResponseBodyWrapperExtensions.cs", label="A.CallTo(() => this.catalog.GetModuleByKey(''module-key-no-parameters'', context)).MustHaveHappened()", span="180-180"];
m2_170 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", span="150-150"];
m2_346 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_allow_header_set_to_allowed_methods_matching_request_route()", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_allow_header_set_to_allowed_methods_matching_request_route()", span="331-331"];
m2_347 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_allow_header_set_to_allowed_methods_matching_request_route()", file="BrowserResponseBodyWrapperExtensions.cs", label="var request = new FakeRequest(''POST'', ''/foo/bar'')", span="334-334"];
m2_348 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_allow_header_set_to_allowed_methods_matching_request_route()", file="BrowserResponseBodyWrapperExtensions.cs", label="var context = new NancyContext { Request = request }", span="335-335"];
m2_349 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_allow_header_set_to_allowed_methods_matching_request_route()", file="BrowserResponseBodyWrapperExtensions.cs", label="var resolver = CreateResolver(x => {\r\n                x.AddGetRoute(''/foo/bar'');\r\n                x.AddPutRoute(''/foo/bar'');\r\n            })", span="337-340"];
m2_350 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_allow_header_set_to_allowed_methods_matching_request_route()", file="BrowserResponseBodyWrapperExtensions.cs", label="var route = resolver.Resolve(context).Item1", span="343-343"];
m2_351 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_allow_header_set_to_allowed_methods_matching_request_route()", file="BrowserResponseBodyWrapperExtensions.cs", label="route.ShouldNotBeNull()", span="346-346"];
m2_352 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_allow_header_set_to_allowed_methods_matching_request_route()", file="BrowserResponseBodyWrapperExtensions.cs", label="route.ShouldBeOfType<MethodNotAllowedRoute>()", span="347-347"];
m2_353 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_allow_header_set_to_allowed_methods_matching_request_route()", file="BrowserResponseBodyWrapperExtensions.cs", label="route.Invoke(new DynamicDictionary()).Headers[''Allow''].ShouldEqual(''GET, PUT'')", span="348-348"];
m2_354 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_allow_header_set_to_allowed_methods_matching_request_route()", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_allow_header_set_to_allowed_methods_matching_request_route()", span="331-331"];
m2_26 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="27-27"];
m2_550 [cluster="DefaultRouteResolver.cstr", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry DefaultRouteResolver.cstr", span=""];
m2_105 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_first_route_with_when_multiple_matches_are_available_and_contains_same_number_of_parameter_captures()", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_first_route_with_when_multiple_matches_are_available_and_contains_same_number_of_parameter_captures()", span="99-99"];
m2_106 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_first_route_with_when_multiple_matches_are_available_and_contains_same_number_of_parameter_captures()", file="BrowserResponseBodyWrapperExtensions.cs", label="var request = new FakeRequest(''get'', ''/foo/bar'')", span="102-102"];
m2_107 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_first_route_with_when_multiple_matches_are_available_and_contains_same_number_of_parameter_captures()", file="BrowserResponseBodyWrapperExtensions.cs", label="var context = new NancyContext { Request = request }", span="103-103"];
m2_110 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_first_route_with_when_multiple_matches_are_available_and_contains_same_number_of_parameter_captures()", file="BrowserResponseBodyWrapperExtensions.cs", label="A.CallTo(() => this.matcher.Match(request.Path, ''/foo/{bar}'', A<NancyContext>.Ignored)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(true).AddParameter(''bar'', ''fake value'')))", span="112-113"];
m2_108 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_first_route_with_when_multiple_matches_are_available_and_contains_same_number_of_parameter_captures()", file="BrowserResponseBodyWrapperExtensions.cs", label="var resolver = CreateResolver(x => {\r\n                x.AddGetRoute(''/foo/{bar}'', ''first-module-key-parameters'');\r\n                x.AddGetRoute(''/foo/{bar}'', ''second-module-key-parameters'');\r\n            })", span="105-108"];
m2_111 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_first_route_with_when_multiple_matches_are_available_and_contains_same_number_of_parameter_captures()", file="BrowserResponseBodyWrapperExtensions.cs", label="resolver.Resolve(context)", span="116-116"];
m2_112 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_first_route_with_when_multiple_matches_are_available_and_contains_same_number_of_parameter_captures()", file="BrowserResponseBodyWrapperExtensions.cs", label="A.CallTo(() => this.catalog.GetModuleByKey(''first-module-key-parameters'', context)).MustHaveHappened()", span="119-119"];
m2_109 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_first_route_with_when_multiple_matches_are_available_and_contains_same_number_of_parameter_captures()", file="BrowserResponseBodyWrapperExtensions.cs", label="this.expectedModule = new FakeNancyModule(x => x.AddGetRoute(''/foo/{bar}'', this.expectedAction))", span="110-110"];
m2_113 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_first_route_with_when_multiple_matches_are_available_and_contains_same_number_of_parameter_captures()", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_first_route_with_when_multiple_matches_are_available_and_contains_same_number_of_parameter_captures()", span="99-99"];
m2_466 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_options_route_with_path_set_to_request_route_for_options()", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_options_route_with_path_set_to_request_route_for_options()", span="486-486"];
m2_467 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_options_route_with_path_set_to_request_route_for_options()", file="BrowserResponseBodyWrapperExtensions.cs", label="var request = new FakeRequest(''OPTIONS'', ''/foo/bar'')", span="489-489"];
m2_468 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_options_route_with_path_set_to_request_route_for_options()", file="BrowserResponseBodyWrapperExtensions.cs", label="var context = new NancyContext { Request = request }", span="490-490"];
m2_473 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_options_route_with_path_set_to_request_route_for_options()", file="BrowserResponseBodyWrapperExtensions.cs", label="resolvedRoute.Item1.Description.Path.ShouldEqual(request.Path)", span="499-499"];
m2_469 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_options_route_with_path_set_to_request_route_for_options()", file="BrowserResponseBodyWrapperExtensions.cs", label="var resolver = CreateResolver(x => x.AddGetRoute(''/foo/bar''))", span="491-491"];
m2_470 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_options_route_with_path_set_to_request_route_for_options()", file="BrowserResponseBodyWrapperExtensions.cs", label="var resolvedRoute = resolver.Resolve(context)", span="494-494"];
m2_471 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_options_route_with_path_set_to_request_route_for_options()", file="BrowserResponseBodyWrapperExtensions.cs", label="resolvedRoute.ShouldNotBeNull()", span="497-497"];
m2_472 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_options_route_with_path_set_to_request_route_for_options()", file="BrowserResponseBodyWrapperExtensions.cs", label="resolvedRoute.Item1.ShouldBeOfType<OptionsRoute>()", span="498-498"];
m2_474 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_options_route_with_path_set_to_request_route_for_options()", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_options_route_with_path_set_to_request_route_for_options()", span="486-486"];
m2_91 [cluster="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator.AddGetRoute(string, string)", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator.AddGetRoute(string, string)", span="62-62"];
m2_200 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", span="184-184"];
m2_201 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", file="BrowserResponseBodyWrapperExtensions.cs", label="var request = new FakeRequest(''get'', ''/foo/bar/me'')", span="189-189"];
m2_202 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", file="BrowserResponseBodyWrapperExtensions.cs", label="var context = new NancyContext { Request = request }", span="190-190"];
m2_205 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", file="BrowserResponseBodyWrapperExtensions.cs", label="A.CallTo(() => this.matcher.Match(request.Path, ''/foo/bar/{two}'', A<NancyContext>.Ignored)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(true).AddParameter(''two'', ''fake values'')))", span="202-203"];
m2_206 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", file="BrowserResponseBodyWrapperExtensions.cs", label="A.CallTo(() => this.matcher.Match(request.Path, ''/foo/{bar}/{two}'', A<NancyContext>.Ignored)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(true)\r\n                    .AddParameter(''bar'', ''fake values'')\r\n                    .AddParameter(''two'', ''fake values'')))", span="205-208"];
m2_207 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", file="BrowserResponseBodyWrapperExtensions.cs", label="A.CallTo(() => this.matcher.Match(request.Path, ''/foo/{bar}'', A<NancyContext>.Ignored)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(true).AddParameter(''bar'', ''fake value'')))", span="210-211"];
m2_203 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", file="BrowserResponseBodyWrapperExtensions.cs", label="var resolver = CreateResolver(x =>\r\n            {\r\n                x.AddGetRoute(''/foo/{bar}'', ''module-key-first'');\r\n                x.AddGetRoute(''/foo/{bar}/{two}'', ''module-key-third'');\r\n                x.AddGetRoute(''/foo/bar/{two}'', ''module-key-second'');\r\n                x.AddGetRoute(''/foo/{bar}/{two}'', ''module-key-third'');\r\n            })", span="192-198"];
m2_208 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", file="BrowserResponseBodyWrapperExtensions.cs", label="resolver.Resolve(context)", span="214-214"];
m2_209 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", file="BrowserResponseBodyWrapperExtensions.cs", label="A.CallTo(() => this.catalog.GetModuleByKey(''module-key-second'', context)).MustHaveHappened()", span="217-217"];
m2_204 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", file="BrowserResponseBodyWrapperExtensions.cs", label="this.expectedModule = new FakeNancyModule(x => x.AddGetRoute(''/foo/bar/{two}'', this.expectedAction))", span="200-200"];
m2_210 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", span="184-184"];
m2_17 [cluster="Unk.Returns", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Unk.Returns", span=""];
m2_18 [cluster="Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModule(System.Action<Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModuleConfigurator>)", color=green, community=0, file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModule(System.Action<Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModuleConfigurator>)", prediction=3, span="10-10"];
m2_19 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="23-23"];
m2_20 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="this.moduleBuilder.BuildModule(A<NancyModule>.Ignored, A<NancyContext>.Ignored)", span="23-23"];
m2_526 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_whos_filter_returns_true_when_there_is_also_a_matching_route_with_a_failing_filter()", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_whos_filter_returns_true_when_there_is_also_a_matching_route_with_a_failing_filter()", span="578-578"];
m2_527 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_whos_filter_returns_true_when_there_is_also_a_matching_route_with_a_failing_filter()", file="BrowserResponseBodyWrapperExtensions.cs", label="var moduleCatalog = new FakeModuleCatalog()", span="581-581"];
m2_528 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_whos_filter_returns_true_when_there_is_also_a_matching_route_with_a_failing_filter()", file="BrowserResponseBodyWrapperExtensions.cs", label="var routeCache = new RouteCache(moduleCatalog, new FakeModuleKeyGenerator(), A.Fake<INancyContextFactory>())", span="582-582"];
m2_529 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_whos_filter_returns_true_when_there_is_also_a_matching_route_with_a_failing_filter()", file="BrowserResponseBodyWrapperExtensions.cs", label="var specificResolver = new DefaultRouteResolver(moduleCatalog, this.matcher, this.moduleBuilder, routeCache)", span="583-583"];
m2_530 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_whos_filter_returns_true_when_there_is_also_a_matching_route_with_a_failing_filter()", file="BrowserResponseBodyWrapperExtensions.cs", label="var request = new FakeRequest(''GET'', ''/filt'')", span="584-584"];
m2_532 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_whos_filter_returns_true_when_there_is_also_a_matching_route_with_a_failing_filter()", file="BrowserResponseBodyWrapperExtensions.cs", label="var route = specificResolver.Resolve(context).Item1", span="588-588"];
m2_531 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_whos_filter_returns_true_when_there_is_also_a_matching_route_with_a_failing_filter()", file="BrowserResponseBodyWrapperExtensions.cs", label="var context = new NancyContext { Request = request }", span="585-585"];
m2_533 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_whos_filter_returns_true_when_there_is_also_a_matching_route_with_a_failing_filter()", file="BrowserResponseBodyWrapperExtensions.cs", label="route.Description.Condition(context).ShouldBeTrue()", span="591-591"];
m2_534 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_whos_filter_returns_true_when_there_is_also_a_matching_route_with_a_failing_filter()", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_whos_filter_returns_true_when_there_is_also_a_matching_route_with_a_failing_filter()", span="578-578"];
m2_241 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_choose_root_route_over_one_with_capture_if_requesting_root_uri()", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_choose_root_route_over_one_with_capture_if_requesting_root_uri()", span="221-221"];
m2_242 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_choose_root_route_over_one_with_capture_if_requesting_root_uri()", file="BrowserResponseBodyWrapperExtensions.cs", label="var request = new FakeRequest(''get'', ''/'')", span="223-223"];
m2_243 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_choose_root_route_over_one_with_capture_if_requesting_root_uri()", file="BrowserResponseBodyWrapperExtensions.cs", label="var context = new NancyContext { Request = request }", span="224-224"];
m2_245 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_choose_root_route_over_one_with_capture_if_requesting_root_uri()", file="BrowserResponseBodyWrapperExtensions.cs", label="A.CallTo(() => this.matcher.Match(request.Path, ''/'', A<NancyContext>.Ignored)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(true)))", span="232-233"];
m2_246 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_choose_root_route_over_one_with_capture_if_requesting_root_uri()", file="BrowserResponseBodyWrapperExtensions.cs", label="A.CallTo(() => this.matcher.Match(request.Path, ''/{name}'', A<NancyContext>.Ignored)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(true).AddParameter(''name'', ''fake values'')))", span="234-235"];
m2_244 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_choose_root_route_over_one_with_capture_if_requesting_root_uri()", file="BrowserResponseBodyWrapperExtensions.cs", label="var resolver = CreateResolver(x => {\r\n                x.AddGetRoute(''/{name}'', ''module-key-second'');\r\n                x.AddGetRoute(''/'', ''module-key-first'');\r\n                x.AddGetRoute(''/{name}'', ''module-key-second'');\r\n            })", span="226-230"];
m2_247 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_choose_root_route_over_one_with_capture_if_requesting_root_uri()", file="BrowserResponseBodyWrapperExtensions.cs", label="resolver.Resolve(context)", span="238-238"];
m2_248 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_choose_root_route_over_one_with_capture_if_requesting_root_uri()", file="BrowserResponseBodyWrapperExtensions.cs", label="A.CallTo(() => this.catalog.GetModuleByKey(''module-key-first'', context)).MustHaveHappened()", span="241-241"];
m2_249 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_choose_root_route_over_one_with_capture_if_requesting_root_uri()", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_choose_root_route_over_one_with_capture_if_requesting_root_uri()", span="221-221"];
m2_280 [cluster="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator.AddGetRoute(string)", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator.AddGetRoute(string)", span="55-55"];
m2_31 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="HttpStatusCode.OK", span="29-29"];
m2_46 [cluster="Unk.Match", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Unk.Match", span=""];
m2_329 [cluster="object.ShouldNotBeNull()", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry object.ShouldNotBeNull()", span="140-140"];
m2_70 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.CreateResolver(Nancy.Routing.IRouteCache)", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.CreateResolver(Nancy.Routing.IRouteCache)", span="55-55"];
m2_72 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.CreateResolver(Nancy.Routing.IRouteCache)", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.CreateResolver(Nancy.Routing.IRouteCache)", span="55-55"];
m2_455 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_have_status_code_200_for_options_when_route_is_defined()", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_have_status_code_200_for_options_when_route_is_defined()", span="470-470"];
m2_456 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_have_status_code_200_for_options_when_route_is_defined()", file="BrowserResponseBodyWrapperExtensions.cs", label="var request = new FakeRequest(''OPTIONS'', ''/foo/bar'')", span="473-473"];
m2_457 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_have_status_code_200_for_options_when_route_is_defined()", file="BrowserResponseBodyWrapperExtensions.cs", label="var context = new NancyContext { Request = request }", span="474-474"];
m2_458 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_have_status_code_200_for_options_when_route_is_defined()", file="BrowserResponseBodyWrapperExtensions.cs", label="var resolver = CreateResolver(x => x.AddGetRoute(''/foo/bar''))", span="475-475"];
m2_459 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_have_status_code_200_for_options_when_route_is_defined()", file="BrowserResponseBodyWrapperExtensions.cs", label="var resolvedRoute = resolver.Resolve(context)", span="478-478"];
m2_460 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_have_status_code_200_for_options_when_route_is_defined()", file="BrowserResponseBodyWrapperExtensions.cs", label="var response = resolvedRoute.Item1.Invoke(null)", span="479-479"];
m2_461 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_have_status_code_200_for_options_when_route_is_defined()", file="BrowserResponseBodyWrapperExtensions.cs", label="response.StatusCode.ShouldEqual(HttpStatusCode.OK)", span="482-482"];
m2_462 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_have_status_code_200_for_options_when_route_is_defined()", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_have_status_code_200_for_options_when_route_is_defined()", span="470-470"];
m2_85 [cluster="Nancy.Routing.DefaultRouteResolver.Resolve(Nancy.NancyContext)", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.Routing.DefaultRouteResolver.Resolve(Nancy.NancyContext)", span="40-40"];
m2_101 [cluster="object.ShouldBeSameAs(object)", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry object.ShouldBeSameAs(object)", span="130-130"];
m2_29 [cluster="Nancy.Testing.BrowserResponseBodyWrapperExtensions.DeserializeXml<TModel>(Nancy.Testing.BrowserResponseBodyWrapper)", color=green, community=0, file="BrowserResponseBodyWrapperExtensions.cs", label="return (TModel)serializer.Deserialize(bodyWrapper.AsStream());", prediction=4, span="86-86"];
m2_55 [cluster="string.Equals(string)", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry string.Equals(string)", span="0-0"];
m2_535 [cluster="System.Func<T, TResult>.Invoke(T)", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m2_537 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", span="595-595"];
m2_538 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="BrowserResponseBodyWrapperExtensions.cs", label="var moduleCatalog = A.Fake<INancyModuleCatalog>()", span="598-598"];
m2_539 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="BrowserResponseBodyWrapperExtensions.cs", label="A.CallTo(() => moduleCatalog.GetAllModules(A<NancyContext>.Ignored)).Returns(new[] { new FakeNancyModuleWithPreAndPostHooks() })", span="599-599"];
m2_540 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="BrowserResponseBodyWrapperExtensions.cs", label="A.CallTo(() => moduleCatalog.GetModuleByKey(A<string>.Ignored, A<NancyContext>.Ignored)).Returns(\r\n                new FakeNancyModuleWithPreAndPostHooks())", span="600-601"];
m2_541 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="BrowserResponseBodyWrapperExtensions.cs", label="var routeCache = new RouteCache(moduleCatalog, new FakeModuleKeyGenerator(), A.Fake<INancyContextFactory>())", span="603-603"];
m2_542 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="BrowserResponseBodyWrapperExtensions.cs", label="var specificResolver = new DefaultRouteResolver(moduleCatalog, this.matcher, this.moduleBuilder, routeCache)", span="604-604"];
m2_543 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="BrowserResponseBodyWrapperExtensions.cs", label="var request = new FakeRequest(''GET'', ''/PrePost'')", span="605-605"];
m2_545 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="BrowserResponseBodyWrapperExtensions.cs", label="var result = specificResolver.Resolve(context)", span="609-609"];
m2_544 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="BrowserResponseBodyWrapperExtensions.cs", label="var context = new NancyContext { Request = request }", span="606-606"];
m2_546 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="BrowserResponseBodyWrapperExtensions.cs", label="result.Item3.ShouldNotBeNull()", span="612-612"];
m2_547 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="BrowserResponseBodyWrapperExtensions.cs", label="result.Item4.ShouldNotBeNull()", span="613-613"];
m2_548 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", span="595-595"];
m2_333 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_path_set_to_request_uri_when_matched_route_was_for_wrong_request_method()", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_path_set_to_request_uri_when_matched_route_was_for_wrong_request_method()", span="314-314"];
m2_334 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_path_set_to_request_uri_when_matched_route_was_for_wrong_request_method()", file="BrowserResponseBodyWrapperExtensions.cs", label="var request = new FakeRequest(''POST'', ''/foo/bar'')", span="317-317"];
m2_335 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_path_set_to_request_uri_when_matched_route_was_for_wrong_request_method()", file="BrowserResponseBodyWrapperExtensions.cs", label="var context = new NancyContext { Request = request }", span="318-318"];
m2_340 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_path_set_to_request_uri_when_matched_route_was_for_wrong_request_method()", file="BrowserResponseBodyWrapperExtensions.cs", label="route.Description.Path.ShouldEqual(request.Path)", span="327-327"];
m2_336 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_path_set_to_request_uri_when_matched_route_was_for_wrong_request_method()", file="BrowserResponseBodyWrapperExtensions.cs", label="var resolver = CreateResolver(x => x.AddGetRoute(''/foo/bar''))", span="319-319"];
m2_337 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_path_set_to_request_uri_when_matched_route_was_for_wrong_request_method()", file="BrowserResponseBodyWrapperExtensions.cs", label="var route = resolver.Resolve(context).Item1", span="322-322"];
m2_338 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_path_set_to_request_uri_when_matched_route_was_for_wrong_request_method()", file="BrowserResponseBodyWrapperExtensions.cs", label="route.ShouldNotBeNull()", span="325-325"];
m2_339 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_path_set_to_request_uri_when_matched_route_was_for_wrong_request_method()", file="BrowserResponseBodyWrapperExtensions.cs", label="route.ShouldBeOfType<MethodNotAllowedRoute>()", span="326-326"];
m2_341 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_path_set_to_request_uri_when_matched_route_was_for_wrong_request_method()", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_path_set_to_request_uri_when_matched_route_was_for_wrong_request_method()", span="314-314"];
m2_15 [cluster="Unk.CallTo", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Unk.CallTo", span=""];
m2_555 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="600-600"];
m2_23 [cluster="Nancy.Testing.BrowserResponseBodyWrapperExtensions.DeserializeJson<TModel>(Nancy.Testing.BrowserResponseBodyWrapper, Nancy.Json.JavaScriptSerializer)", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.Testing.BrowserResponseBodyWrapperExtensions.DeserializeJson<TModel>(Nancy.Testing.BrowserResponseBodyWrapper, Nancy.Json.JavaScriptSerializer)", span="70-70"];
m2_34 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="x.AddGetRoute(''/foo/bar'', this.expectedAction)", span="30-30"];
m2_37 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="32-32"];
m2_40 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="32-32"];
m2_43 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="35-35"];
m2_47 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="35-40"];
m2_58 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="44-44"];
m2_62 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="44-44"];
m2_21 [cluster="Nancy.Json.JavaScriptSerializer.JavaScriptSerializer()", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.Json.JavaScriptSerializer.JavaScriptSerializer()", span="64-64"];
m2_24 [cluster="Nancy.Testing.BrowserResponseBodyWrapperExtensions.DeserializeJson<TModel>(Nancy.Testing.BrowserResponseBodyWrapper, Nancy.Json.JavaScriptSerializer)", color=green, community=0, file="BrowserResponseBodyWrapperExtensions.cs", label="return serializer.Deserialize<TModel>(bodyWrapper.AsString());", prediction=5, span="72-72"];
m2_25 [cluster="Nancy.Testing.BrowserResponseBodyWrapperExtensions.DeserializeJson<TModel>(Nancy.Testing.BrowserResponseBodyWrapper, Nancy.Json.JavaScriptSerializer)", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit Nancy.Testing.BrowserResponseBodyWrapperExtensions.DeserializeJson<TModel>(Nancy.Testing.BrowserResponseBodyWrapper, Nancy.Json.JavaScriptSerializer)", span="70-70"];
m2_27 [cluster="Nancy.Testing.BrowserResponseBodyWrapperExtensions.DeserializeXml<TModel>(Nancy.Testing.BrowserResponseBodyWrapper)", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.Testing.BrowserResponseBodyWrapperExtensions.DeserializeXml<TModel>(Nancy.Testing.BrowserResponseBodyWrapper)", span="81-81"];
m2_28 [cluster="Nancy.Testing.BrowserResponseBodyWrapperExtensions.DeserializeXml<TModel>(Nancy.Testing.BrowserResponseBodyWrapper)", color=green, community=0, file="BrowserResponseBodyWrapperExtensions.cs", label="var serializer =\r\n                new XmlSerializer(typeof(TModel))", prediction=6, span="83-84"];
m2_30 [cluster="Nancy.Testing.BrowserResponseBodyWrapperExtensions.DeserializeXml<TModel>(Nancy.Testing.BrowserResponseBodyWrapper)", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit Nancy.Testing.BrowserResponseBodyWrapperExtensions.DeserializeXml<TModel>(Nancy.Testing.BrowserResponseBodyWrapper)", span="81-81"];
m2_32 [cluster="Nancy.Testing.BrowserResponseBodyWrapper.AsStream()", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.Testing.BrowserResponseBodyWrapper.AsStream()", span="20-20"];
m2_33 [cluster="Unk.Deserialize", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Unk.Deserialize", span=""];
m2_35 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="30-30"];
m2_38 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="this.catalog.GetModuleByKey(A<string>.Ignored, A<NancyContext>.Ignored)", span="32-32"];
m2_39 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="32-32"];
m2_41 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="this.expectedModule", span="32-32"];
m2_42 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="32-32"];
m2_44 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="this.matcher.Match(A<string>.Ignored, A<string>.Ignored, A<NancyContext>.Ignored)", span="35-35"];
m2_45 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="35-35"];
m2_48 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="new FakeRoutePatternMatchResult(c =>\r\n                {\r\n                    c.IsMatch(((string)x.Arguments[0]).Equals(((string)x.Arguments[1])));\r\n                    c.AddParameter(''foo'', ''bar'');\r\n                })", span="36-40"];
m2_52 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="c.IsMatch(((string)x.Arguments[0]).Equals(((string)x.Arguments[1])))", span="38-38"];
m2_49 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="35-40"];
m2_53 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="c.AddParameter(''foo'', ''bar'')", span="39-39"];
m2_51 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="36-40"];
m2_54 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="36-40"];
m2_59 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="moduleKeyGenerator.GetKeyForModuleType(A<Type>._)", span="44-44"];
m2_60 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="44-44"];
m2_63 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="(string) x.Arguments[0]", span="44-44"];
m2_64 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="44-44"];
m2_88 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="68-68"];
m2_90 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="68-68"];
m2_102 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="87-87"];
m2_103 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="x.AddGetRoute(''/foo/bar'', ''module-key'')", span="87-87"];
m2_104 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="87-87"];
m2_123 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="this.matcher.Match(request.Path, ''/foo/{bar}'', A<NancyContext>.Ignored)", span="112-112"];
m2_129 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="this.catalog.GetModuleByKey(''first-module-key-parameters'', context)", span="119-119"];
m2_115 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="105-108"];
m2_120 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="x.AddGetRoute(''/foo/{bar}'', this.expectedAction)", span="110-110"];
m2_122 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="112-112"];
m2_126 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="x.IsMatch(true).AddParameter(''bar'', ''fake value'')", span="113-113"];
m2_128 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="119-119"];
m2_116 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="x.AddGetRoute(''/foo/{bar}'', ''first-module-key-parameters'')", span="106-106"];
m2_117 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="x.AddGetRoute(''/foo/{bar}'', ''second-module-key-parameters'')", span="107-107"];
m2_118 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="105-108"];
m2_119 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="110-110"];
m2_121 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="110-110"];
m2_124 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="112-112"];
m2_125 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="113-113"];
m2_127 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="113-113"];
m2_130 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="119-119"];
m2_146 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="this.matcher.Match(request.Path, ''/foo/{bar}'', null)", span="134-134"];
m2_153 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="this.matcher.Match(request.Path, ''/foo/{bar}/{foo}'', A<NancyContext>.Ignored)", span="137-137"];
m2_159 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="this.catalog.GetModuleByKey(''module-key-two-parameters'', context)", span="146-146"];
m2_141 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="129-132"];
m2_145 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="134-134"];
m2_150 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="x.IsMatch(true).AddParameter(''bar'', ''fake value'')", span="135-135"];
m2_152 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="137-137"];
m2_156 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="x.IsMatch(true)\r\n                    .AddParameter(''foo'', ''fake value'')\r\n                    .AddParameter(''bar'', ''fake value 2'')", span="138-140"];
m2_158 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="146-146"];
m2_142 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="x.AddGetRoute(''/foo/{bar}/{foo}'', ''module-key-two-parameters'')", span="130-130"];
m2_143 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="x.AddGetRoute(''/foo/{bar}'', ''module-key-one-parameter'')", span="131-131"];
m2_144 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="129-132"];
m2_147 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="134-134"];
m2_149 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="135-135"];
m2_151 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="135-135"];
m2_154 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="137-137"];
m2_155 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="138-140"];
m2_157 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="138-140"];
m2_160 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="146-146"];
m2_180 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="this.matcher.Match(request.Path, ''/foo/bar'', null)", span="166-166"];
m2_186 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="this.matcher.Match(request.Path, ''/foo/{bar}'', null)", span="169-169"];
m2_192 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="this.matcher.Match(request.Path, ''/foo/{bar}'', null)", span="172-172"];
m2_198 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="this.catalog.GetModuleByKey(''module-key-no-parameters'', context)", span="180-180"];
m2_171 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="156-164"];
m2_179 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="166-166"];
m2_183 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="x.IsMatch(true)", span="167-167"];
m2_185 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="169-169"];
m2_189 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="x.IsMatch(true).AddParameter(''bar'', ''fake value'')", span="170-170"];
m2_191 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="172-172"];
m2_195 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="x.IsMatch(true)\r\n                    .AddParameter(''foo'', ''fake value'')\r\n                    .AddParameter(''bar'', ''fake value'')", span="173-175"];
m2_197 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="180-180"];
m2_172 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="x.AddGetRoute(''/foo/{bar}'', ''module-key-parameters'')", span="158-158"];
m2_173 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="x.AddGetRoute(''/{foo}/{bar}'', ''module-key-two-parameters'')", span="159-159"];
m2_174 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="x.AddGetRoute(''/foo/bar'', ''module-key-no-parameters'')", span="160-160"];
m2_175 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="x.AddGetRoute(''/foo/bar'', ''module-key-no-parameters-second'')", span="161-161"];
m2_176 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="x.AddGetRoute(''/foo/{bar}'', ''module-key-parameters'')", span="162-162"];
m2_177 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="x.AddGetRoute(''/{foo}/{bar}'', ''module-key-two-parameters'')", span="163-163"];
m2_178 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="156-164"];
m2_181 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="166-166"];
m2_182 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="167-167"];
m2_184 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="167-167"];
m2_187 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="169-169"];
m2_188 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="170-170"];
m2_190 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="170-170"];
m2_193 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="172-172"];
m2_194 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="173-175"];
m2_196 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="173-175"];
m2_199 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="180-180"];
m2_221 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="this.matcher.Match(request.Path, ''/foo/bar/{two}'', A<NancyContext>.Ignored)", span="202-202"];
m2_227 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="this.matcher.Match(request.Path, ''/foo/{bar}/{two}'', A<NancyContext>.Ignored)", span="205-205"];
m2_233 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="this.matcher.Match(request.Path, ''/foo/{bar}'', A<NancyContext>.Ignored)", span="210-210"];
m2_239 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="this.catalog.GetModuleByKey(''module-key-second'', context)", span="217-217"];
m2_211 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="192-198"];
m2_218 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="x.AddGetRoute(''/foo/bar/{two}'', this.expectedAction)", span="200-200"];
m2_220 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="202-202"];
m2_224 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="x.IsMatch(true).AddParameter(''two'', ''fake values'')", span="203-203"];
m2_226 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="205-205"];
m2_230 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="x.IsMatch(true)\r\n                    .AddParameter(''bar'', ''fake values'')\r\n                    .AddParameter(''two'', ''fake values'')", span="206-208"];
m2_232 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="210-210"];
m2_236 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="x.IsMatch(true).AddParameter(''bar'', ''fake value'')", span="211-211"];
m2_238 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="217-217"];
m2_212 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="x.AddGetRoute(''/foo/{bar}'', ''module-key-first'')", span="194-194"];
m2_213 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="x.AddGetRoute(''/foo/{bar}/{two}'', ''module-key-third'')", span="195-195"];
m2_214 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="x.AddGetRoute(''/foo/bar/{two}'', ''module-key-second'')", span="196-196"];
m2_215 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="x.AddGetRoute(''/foo/{bar}/{two}'', ''module-key-third'')", span="197-197"];
m2_216 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="192-198"];
m2_217 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="200-200"];
m2_219 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="200-200"];
m2_222 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="202-202"];
m2_223 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="203-203"];
m2_225 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="203-203"];
m2_228 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="205-205"];
m2_229 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="206-208"];
m2_231 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="206-208"];
m2_234 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="210-210"];
m2_235 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="211-211"];
m2_237 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="211-211"];
m2_240 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="217-217"];
m2_256 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="this.matcher.Match(request.Path, ''/'', A<NancyContext>.Ignored)", span="232-232"];
m2_262 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="this.matcher.Match(request.Path, ''/{name}'', A<NancyContext>.Ignored)", span="234-234"];
m2_268 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="this.catalog.GetModuleByKey(''module-key-first'', context)", span="241-241"];
m2_250 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="226-230"];
m2_255 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="232-232"];
m2_259 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="x.IsMatch(true)", span="233-233"];
m2_261 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="234-234"];
m2_265 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="x.IsMatch(true).AddParameter(''name'', ''fake values'')", span="235-235"];
m2_267 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="241-241"];
m2_251 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="x.AddGetRoute(''/{name}'', ''module-key-second'')", span="227-227"];
m2_252 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="x.AddGetRoute(''/'', ''module-key-first'')", span="228-228"];
m2_253 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="x.AddGetRoute(''/{name}'', ''module-key-second'')", span="229-229"];
m2_254 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="226-230"];
m2_257 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="232-232"];
m2_258 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="233-233"];
m2_260 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="233-233"];
m2_263 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="234-234"];
m2_264 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="235-235"];
m2_266 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="235-235"];
m2_269 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="241-241"];
m2_282 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="this.matcher.Match(request.Path, A<string>.Ignored, A<NancyContext>.Ignored)", span="256-256"];
m2_277 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="250-250"];
m2_281 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="256-256"];
m2_278 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="x.AddGetRoute(''/foo/bar'')", span="250-250"];
m2_279 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="250-250"];
m2_283 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="256-256"];
m2_295 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="this.matcher.Match(A<string>.Ignored, A<string>.Ignored, context)", span="271-271"];
m2_291 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="265-265"];
m2_294 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="271-271"];
m2_292 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="x.AddGetRoute(''/foo/bar'')", span="265-265"];
m2_293 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="265-265"];
m2_296 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="271-271"];
m2_306 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="281-285"];
m2_311 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="291-291"];
m2_314 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="292-292"];
m2_317 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="293-293"];
m2_307 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="x.AddGetRoute(''/foo/bar'')", span="282-282"];
m2_308 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="x.AddGetRoute(''/bar/foo'')", span="283-283"];
m2_309 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="x.AddGetRoute(''/foobar'')", span="284-284"];
m2_310 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="281-285"];
m2_312 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="this.matcher.Match(A<string>.Ignored, ''/foo/bar'', A<NancyContext>.Ignored)", span="291-291"];
m2_313 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="291-291"];
m2_315 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="this.matcher.Match(A<string>.Ignored, ''/bar/foo'', A<NancyContext>.Ignored)", span="292-292"];
m2_316 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="292-292"];
m2_318 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="this.matcher.Match(A<string>.Ignored, ''/foobar'', A<NancyContext>.Ignored)", span="293-293"];
m2_319 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="293-293"];
m2_330 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="302-302"];
m2_331 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="x.AddGetRoute(''/foo/bar'')", span="302-302"];
m2_332 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="302-302"];
m2_343 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="319-319"];
m2_344 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="x.AddGetRoute(''/foo/bar'')", span="319-319"];
m2_345 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="319-319"];
m2_357 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="337-340"];
m2_358 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="x.AddGetRoute(''/foo/bar'')", span="338-338"];
m2_359 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="x.AddPutRoute(''/foo/bar'')", span="339-339"];
m2_360 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="337-340"];
m2_373 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="this.moduleBuilder.BuildModule(this.expectedModule, context)", span="363-363"];
m2_369 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="357-357"];
m2_372 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="363-363"];
m2_370 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="x.AddGetRoute(''/foo/bar'')", span="357-357"];
m2_371 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="357-357"];
m2_374 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="363-363"];
m2_385 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="372-372"];
m2_389 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="x.AddGetRoute(''/bar/foo'')", span="374-374"];
m2_392 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="375-375"];
m2_386 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="x.AddGetRoute(''/foo/bar'')", span="372-372"];
m2_387 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="372-372"];
m2_388 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="374-374"];
m2_390 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="374-374"];
m2_393 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="this.moduleBuilder.BuildModule(A<NancyModule>.Ignored, A<NancyContext>.Ignored)", span="375-375"];
m2_394 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="375-375"];
m2_403 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="391-391"];
m2_404 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="x.AddGetRoute(''/foo/bar'')", span="391-391"];
m2_405 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="391-391"];
m2_423 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="423-423"];
m2_426 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="425-425"];
m2_430 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="x.IsMatch(false)", span="426-426"];
m2_424 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="x.AddGetRoute(''/bar/foo'')", span="423-423"];
m2_425 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="423-423"];
m2_427 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="this.matcher.Match(''/foo/bar'', ''/bar/foo'', null)", span="425-425"];
m2_428 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="425-425"];
m2_429 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="426-426"];
m2_431 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="426-426"];
m2_441 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="442-442"];
m2_442 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="x.AddGetRoute(''/bar/foo'')", span="442-442"];
m2_443 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="442-442"];
m2_452 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="459-459"];
m2_453 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="x.AddGetRoute(''/foo/bar'')", span="459-459"];
m2_454 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="459-459"];
m2_463 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="475-475"];
m2_464 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="x.AddGetRoute(''/foo/bar'')", span="475-475"];
m2_465 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="475-475"];
m2_475 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="491-491"];
m2_476 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="x.AddGetRoute(''/foo/bar'')", span="491-491"];
m2_477 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="491-491"];
m2_487 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="508-512"];
m2_488 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="x.AddGetRoute(''/foo/bar'')", span="510-510"];
m2_489 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="x.AddPutRoute(''/foo/bar'')", span="511-511"];
m2_490 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="508-512"];
m2_499 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="529-533"];
m2_500 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="x.AddGetRoute(''/foo/bar'')", span="531-531"];
m2_501 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="x.AddOptionsRoute(''/foo/bar'')", span="532-532"];
m2_502 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="529-533"];
m2_552 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="moduleCatalog.GetAllModules(A<NancyContext>.Ignored)", span="599-599"];
m2_556 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="moduleCatalog.GetModuleByKey(A<string>.Ignored, A<NancyContext>.Ignored)", span="600-600"];
m2_551 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry lambda expression", span="599-599"];
m2_553 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="599-599"];
m2_557 [cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit lambda expression", span="600-600"];
m2_356 [cluster="Nancy.Routing.Route.Invoke(Nancy.DynamicDictionary)", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.Routing.Route.Invoke(Nancy.DynamicDictionary)", span="54-54"];
m2_0 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", span="20-20"];
m2_1 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", file="BrowserResponseBodyWrapperExtensions.cs", label="this.moduleBuilder = A.Fake<INancyModuleBuilder>()", span="22-22"];
m2_2 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", file="BrowserResponseBodyWrapperExtensions.cs", label="A.CallTo(() => this.moduleBuilder.BuildModule(A<NancyModule>.Ignored, A<NancyContext>.Ignored)).\r\n                ReturnsLazily(r => r.Arguments[0] as NancyModule)", span="23-24"];
m2_3 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", file="BrowserResponseBodyWrapperExtensions.cs", label="this.catalog = A.Fake<INancyModuleCatalog>()", span="26-26"];
m2_4 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", file="BrowserResponseBodyWrapperExtensions.cs", label="A.CallTo(() => this.catalog.GetModuleByKey(A<string>.Ignored, A<NancyContext>.Ignored)).Returns(expectedModule)", span="27-27"];
m2_5 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", file="BrowserResponseBodyWrapperExtensions.cs", label="this.expectedAction = x => HttpStatusCode.OK", span="29-29"];
m2_6 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", file="BrowserResponseBodyWrapperExtensions.cs", label="this.expectedModule = new FakeNancyModule(x => x.AddGetRoute(''/foo/bar'', this.expectedAction))", span="30-30"];
m2_7 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", file="BrowserResponseBodyWrapperExtensions.cs", label="A.CallTo(() => this.catalog.GetModuleByKey(A<string>.Ignored, A<NancyContext>.Ignored)).ReturnsLazily(() => this.expectedModule)", span="32-32"];
m2_8 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", file="BrowserResponseBodyWrapperExtensions.cs", label="this.matcher = A.Fake<IRoutePatternMatcher>()", span="34-34"];
m2_9 [cluster="Nancy.Testing.BrowserResponseBodyWrapperExtensions.AsXmlDocument(Nancy.Testing.BrowserResponseBodyWrapper)", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.Testing.BrowserResponseBodyWrapperExtensions.AsXmlDocument(Nancy.Testing.BrowserResponseBodyWrapper)", span="40-40"];
m2_10 [cluster="Nancy.Testing.BrowserResponseBodyWrapperExtensions.AsXmlDocument(Nancy.Testing.BrowserResponseBodyWrapper)", color=green, community=1, file="BrowserResponseBodyWrapperExtensions.cs", label="var document =\r\n                new XmlDocument()", prediction=7, span="42-43"];
m2_12 [cluster="Nancy.Testing.BrowserResponseBodyWrapperExtensions.AsXmlDocument(Nancy.Testing.BrowserResponseBodyWrapper)", file="BrowserResponseBodyWrapperExtensions.cs", label="return document;", span="46-46"];
m2_13 [cluster="Nancy.Testing.BrowserResponseBodyWrapperExtensions.AsXmlDocument(Nancy.Testing.BrowserResponseBodyWrapper)", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit Nancy.Testing.BrowserResponseBodyWrapperExtensions.AsXmlDocument(Nancy.Testing.BrowserResponseBodyWrapper)", span="40-40"];
m2_14 [cluster="Unk.>", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Unk.>", span=""];
m2_50 [cluster="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResult(System.Action<Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator>)", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResult(System.Action<Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator>)", span="13-13"];
m2_16 [cluster="Unk.LoadXml", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Unk.LoadXml", span=""];
m2_36 [cluster="Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModuleConfigurator.AddGetRoute(string, System.Func<object, Nancy.Response>)", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModuleConfigurator.AddGetRoute(string, System.Func<object, Nancy.Response>)", span="41-41"];
m2_22 [cluster="Nancy.Testing.BrowserResponseBodyWrapper.DeserializeJson<TModel>(Nancy.Json.JavaScriptSerializer)", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.Testing.BrowserResponseBodyWrapper.DeserializeJson<TModel>(Nancy.Json.JavaScriptSerializer)", span="70-70"];
m2_114 [cluster="Unk.MustHaveHappened", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Unk.MustHaveHappened", span=""];
m2_504 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_a_route_if_matching_and_the_filter_returns_false()", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_a_route_if_matching_and_the_filter_returns_false()", span="544-544"];
m2_505 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_a_route_if_matching_and_the_filter_returns_false()", file="BrowserResponseBodyWrapperExtensions.cs", label="var moduleCatalog = new FakeModuleCatalog()", span="547-547"];
m2_506 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_a_route_if_matching_and_the_filter_returns_false()", file="BrowserResponseBodyWrapperExtensions.cs", label="var routeCache = new RouteCache(moduleCatalog, new FakeModuleKeyGenerator(), A.Fake<INancyContextFactory>())", span="548-548"];
m2_507 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_a_route_if_matching_and_the_filter_returns_false()", file="BrowserResponseBodyWrapperExtensions.cs", label="var specificResolver = new DefaultRouteResolver(moduleCatalog, this.matcher, this.moduleBuilder, routeCache)", span="549-549"];
m2_508 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_a_route_if_matching_and_the_filter_returns_false()", file="BrowserResponseBodyWrapperExtensions.cs", label="var request = new FakeRequest(''GET'', ''/filtered'')", span="550-550"];
m2_510 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_a_route_if_matching_and_the_filter_returns_false()", file="BrowserResponseBodyWrapperExtensions.cs", label="var route = specificResolver.Resolve(context).Item1", span="554-554"];
m2_509 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_a_route_if_matching_and_the_filter_returns_false()", file="BrowserResponseBodyWrapperExtensions.cs", label="var context = new NancyContext { Request = request }", span="551-551"];
m2_511 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_a_route_if_matching_and_the_filter_returns_false()", file="BrowserResponseBodyWrapperExtensions.cs", label="route.ShouldBeOfType(typeof(NotFoundRoute))", span="557-557"];
m2_512 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_a_route_if_matching_and_the_filter_returns_false()", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_a_route_if_matching_and_the_filter_returns_false()", span="544-544"];
m2_87 [cluster="object.ShouldEqual(object)", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry object.ShouldEqual(object)", span="95-95"];
m2_375 [cluster="Nancy.Routing.INancyModuleBuilder.BuildModule(Nancy.NancyModule, Nancy.NancyContext)", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.Routing.INancyModuleBuilder.BuildModule(Nancy.NancyModule, Nancy.NancyContext)", span="13-13"];
m2_503 [cluster="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator.AddOptionsRoute(string)", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator.AddOptionsRoute(string)", span="90-90"];
m2_284 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_context()", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_context()", span="260-260"];
m2_285 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_context()", file="BrowserResponseBodyWrapperExtensions.cs", label="var request = new FakeRequest(''get'', ''/foo/bar'')", span="263-263"];
m2_286 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_context()", file="BrowserResponseBodyWrapperExtensions.cs", label="var context = new NancyContext { Request = request }", span="264-264"];
m2_287 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_context()", file="BrowserResponseBodyWrapperExtensions.cs", label="var resolver = CreateResolver(x => x.AddGetRoute(''/foo/bar''))", span="265-265"];
m2_288 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_context()", file="BrowserResponseBodyWrapperExtensions.cs", label="resolver.Resolve(context)", span="268-268"];
m2_289 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_context()", file="BrowserResponseBodyWrapperExtensions.cs", label="A.CallTo(() => this.matcher.Match(A<string>.Ignored, A<string>.Ignored, context)).MustHaveHappened()", span="271-271"];
m2_290 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_context()", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_context()", span="260-260"];
m2_514 [cluster="RouteCache.cstr", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry RouteCache.cstr", span=""];
m2_297 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_for_all_entries_in_route_cache()", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_for_all_entries_in_route_cache()", span="275-275"];
m2_298 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_for_all_entries_in_route_cache()", file="BrowserResponseBodyWrapperExtensions.cs", label="var request = new FakeRequest(''get'', ''/foo/bar'')", span="278-278"];
m2_299 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_for_all_entries_in_route_cache()", file="BrowserResponseBodyWrapperExtensions.cs", label="var context = new NancyContext { Request = request }", span="279-279"];
m2_300 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_for_all_entries_in_route_cache()", file="BrowserResponseBodyWrapperExtensions.cs", label="var resolver = CreateResolver(x => {\r\n                x.AddGetRoute(''/foo/bar'');\r\n                x.AddGetRoute(''/bar/foo'');\r\n                x.AddGetRoute(''/foobar'');\r\n            })", span="281-285"];
m2_301 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_for_all_entries_in_route_cache()", file="BrowserResponseBodyWrapperExtensions.cs", label="resolver.Resolve(context)", span="288-288"];
m2_302 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_for_all_entries_in_route_cache()", file="BrowserResponseBodyWrapperExtensions.cs", label="A.CallTo(() => this.matcher.Match(A<string>.Ignored, ''/foo/bar'', A<NancyContext>.Ignored)).MustHaveHappened()", span="291-291"];
m2_303 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_for_all_entries_in_route_cache()", file="BrowserResponseBodyWrapperExtensions.cs", label="A.CallTo(() => this.matcher.Match(A<string>.Ignored, ''/bar/foo'', A<NancyContext>.Ignored)).MustHaveHappened()", span="292-292"];
m2_304 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_for_all_entries_in_route_cache()", file="BrowserResponseBodyWrapperExtensions.cs", label="A.CallTo(() => this.matcher.Match(A<string>.Ignored, ''/foobar'', A<NancyContext>.Ignored)).MustHaveHappened()", span="293-293"];
m2_305 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_for_all_entries_in_route_cache()", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_for_all_entries_in_route_cache()", span="275-275"];
m2_92 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_action_on_resolved_route()", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_action_on_resolved_route()", span="80-80"];
m2_96 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_action_on_resolved_route()", file="BrowserResponseBodyWrapperExtensions.cs", label="var resolvedRoute = resolver.Resolve(context).Item1", span="90-90"];
m2_97 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_action_on_resolved_route()", file="BrowserResponseBodyWrapperExtensions.cs", label="resolvedRoute.ShouldNotBeOfType<NotFoundRoute>()", span="93-93"];
m2_98 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_action_on_resolved_route()", file="BrowserResponseBodyWrapperExtensions.cs", label="resolvedRoute.ShouldNotBeOfType<MethodNotAllowedRoute>()", span="94-94"];
m2_99 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_action_on_resolved_route()", file="BrowserResponseBodyWrapperExtensions.cs", label="resolvedRoute.Action.ShouldBeSameAs(this.expectedAction)", span="95-95"];
m2_100 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_action_on_resolved_route()", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_action_on_resolved_route()", span="80-80"];
m2_362 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_module_builder_with_context_and_resolved_module()", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_module_builder_with_context_and_resolved_module()", span="352-352"];
m2_363 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_module_builder_with_context_and_resolved_module()", file="BrowserResponseBodyWrapperExtensions.cs", label="var request = new FakeRequest(''GET'', ''/foo/bar'')", span="355-355"];
m2_364 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_module_builder_with_context_and_resolved_module()", file="BrowserResponseBodyWrapperExtensions.cs", label="var context = new NancyContext { Request = request }", span="356-356"];
m2_365 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_module_builder_with_context_and_resolved_module()", file="BrowserResponseBodyWrapperExtensions.cs", label="var resolver = CreateResolver(x => x.AddGetRoute(''/foo/bar''))", span="357-357"];
m2_366 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_module_builder_with_context_and_resolved_module()", file="BrowserResponseBodyWrapperExtensions.cs", label="resolver.Resolve(context)", span="360-360"];
m2_367 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_module_builder_with_context_and_resolved_module()", file="BrowserResponseBodyWrapperExtensions.cs", label="A.CallTo(() => this.moduleBuilder.BuildModule(this.expectedModule, context)).MustHaveHappened()", span="363-363"];
m2_368 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_module_builder_with_context_and_resolved_module()", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_module_builder_with_context_and_resolved_module()", span="352-352"];
m2_86 [cluster="object.ShouldNotBeOfType<T>()", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry object.ShouldNotBeOfType<T>()", span="160-160"];
m2_69 [cluster="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCache(System.Action<Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator>)", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCache(System.Action<Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator>)", span="17-17"];
m2_391 [cluster="Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModuleConfigurator.AddGetRoute(string)", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModuleConfigurator.AddGetRoute(string)", span="36-36"];
m2_395 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_path_set_to_request_uri_when_single_route_could_be_resolved()", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_path_set_to_request_uri_when_single_route_could_be_resolved()", span="386-386"];
m2_396 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_path_set_to_request_uri_when_single_route_could_be_resolved()", file="BrowserResponseBodyWrapperExtensions.cs", label="var request = new FakeRequest(''GET'', ''/foo/bar'')", span="389-389"];
m2_397 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_path_set_to_request_uri_when_single_route_could_be_resolved()", file="BrowserResponseBodyWrapperExtensions.cs", label="var context = new NancyContext { Request = request }", span="390-390"];
m2_401 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_path_set_to_request_uri_when_single_route_could_be_resolved()", file="BrowserResponseBodyWrapperExtensions.cs", label="resolvedRoute.Item1.Description.Path.ShouldEqual(request.Path)", span="398-398"];
m2_398 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_path_set_to_request_uri_when_single_route_could_be_resolved()", file="BrowserResponseBodyWrapperExtensions.cs", label="var resolver = CreateResolver(x => x.AddGetRoute(''/foo/bar''))", span="391-391"];
m2_399 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_path_set_to_request_uri_when_single_route_could_be_resolved()", file="BrowserResponseBodyWrapperExtensions.cs", label="var resolvedRoute = resolver.Resolve(context)", span="394-394"];
m2_400 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_path_set_to_request_uri_when_single_route_could_be_resolved()", file="BrowserResponseBodyWrapperExtensions.cs", label="resolvedRoute.ShouldNotBeOfType<NotFoundRoute>()", span="397-397"];
m2_402 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_path_set_to_request_uri_when_single_route_could_be_resolved()", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_path_set_to_request_uri_when_single_route_could_be_resolved()", span="386-386"];
m2_65 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.CreateResolver(System.Action<Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator>)", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.CreateResolver(System.Action<Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator>)", span="47-47"];
m2_67 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.CreateResolver(System.Action<Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator>)", file="BrowserResponseBodyWrapperExtensions.cs", label="return CreateResolver(cache);", span="52-52"];
m2_68 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.CreateResolver(System.Action<Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator>)", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.CreateResolver(System.Action<Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator>)", span="47-47"];
m2_406 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.should_return_notfoundroute_with_path_set_to_request_uri_when_route_cache_is_empty()", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.should_return_notfoundroute_with_path_set_to_request_uri_when_route_cache_is_empty()", span="402-402"];
m2_407 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.should_return_notfoundroute_with_path_set_to_request_uri_when_route_cache_is_empty()", file="BrowserResponseBodyWrapperExtensions.cs", label="var request = new FakeRequest(''GET'', ''/foo/bar'')", span="405-405"];
m2_408 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.should_return_notfoundroute_with_path_set_to_request_uri_when_route_cache_is_empty()", file="BrowserResponseBodyWrapperExtensions.cs", label="var context = new NancyContext { Request = request }", span="406-406"];
m2_412 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.should_return_notfoundroute_with_path_set_to_request_uri_when_route_cache_is_empty()", file="BrowserResponseBodyWrapperExtensions.cs", label="resolvedRoute.Description.Path.ShouldEqual(request.Path)", span="414-414"];
m2_409 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.should_return_notfoundroute_with_path_set_to_request_uri_when_route_cache_is_empty()", file="BrowserResponseBodyWrapperExtensions.cs", label="var resolver = CreateResolver(FakeRouteCache.Empty)", span="407-407"];
m2_410 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.should_return_notfoundroute_with_path_set_to_request_uri_when_route_cache_is_empty()", file="BrowserResponseBodyWrapperExtensions.cs", label="var resolvedRoute = resolver.Resolve(context).Item1", span="410-410"];
m2_411 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.should_return_notfoundroute_with_path_set_to_request_uri_when_route_cache_is_empty()", file="BrowserResponseBodyWrapperExtensions.cs", label="resolvedRoute.ShouldBeOfType<NotFoundRoute>()", span="413-413"];
m2_413 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.should_return_notfoundroute_with_path_set_to_request_uri_when_route_cache_is_empty()", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.should_return_notfoundroute_with_path_set_to_request_uri_when_route_cache_is_empty()", span="402-402"];
m2_549 [cluster="Nancy.Tests.Fakes.FakeNancyModuleWithPreAndPostHooks.FakeNancyModuleWithPreAndPostHooks()", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.Tests.Fakes.FakeNancyModuleWithPreAndPostHooks.FakeNancyModuleWithPreAndPostHooks()", span="4-4"];
m2_74 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_parameters_on_resolved_route_to_parameteres_that_was_matched()", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_parameters_on_resolved_route_to_parameteres_that_was_matched()", span="61-61"];
m2_76 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_parameters_on_resolved_route_to_parameteres_that_was_matched()", file="BrowserResponseBodyWrapperExtensions.cs", label="var context = new NancyContext {Request = request}", span="65-65"];
m2_78 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_parameters_on_resolved_route_to_parameteres_that_was_matched()", file="BrowserResponseBodyWrapperExtensions.cs", label="var resolvedRoute = resolver.Resolve(context)", span="71-71"];
m2_79 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_parameters_on_resolved_route_to_parameteres_that_was_matched()", file="BrowserResponseBodyWrapperExtensions.cs", label="resolvedRoute.ShouldNotBeOfType<NotFoundRoute>()", span="74-74"];
m2_80 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_parameters_on_resolved_route_to_parameteres_that_was_matched()", file="BrowserResponseBodyWrapperExtensions.cs", label="resolvedRoute.ShouldNotBeOfType<MethodNotAllowedRoute>()", span="75-75"];
m2_82 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_parameters_on_resolved_route_to_parameteres_that_was_matched()", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_parameters_on_resolved_route_to_parameteres_that_was_matched()", span="61-61"];
m2_132 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_most_parameter_captures_when_multiple_matches_with_parameters_are_available()", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_most_parameter_captures_when_multiple_matches_with_parameters_are_available()", span="123-123"];
m2_133 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_most_parameter_captures_when_multiple_matches_with_parameters_are_available()", file="BrowserResponseBodyWrapperExtensions.cs", label="var request = new FakeRequest(''get'', ''/foo/bar/foo'')", span="126-126"];
m2_134 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_most_parameter_captures_when_multiple_matches_with_parameters_are_available()", file="BrowserResponseBodyWrapperExtensions.cs", label="var context = new NancyContext { Request = request }", span="127-127"];
m2_136 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_most_parameter_captures_when_multiple_matches_with_parameters_are_available()", file="BrowserResponseBodyWrapperExtensions.cs", label="A.CallTo(() => this.matcher.Match(request.Path, ''/foo/{bar}'', null)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(true).AddParameter(''bar'', ''fake value'')))", span="134-135"];
m2_137 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_most_parameter_captures_when_multiple_matches_with_parameters_are_available()", file="BrowserResponseBodyWrapperExtensions.cs", label="A.CallTo(() => this.matcher.Match(request.Path, ''/foo/{bar}/{foo}'', A<NancyContext>.Ignored)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(true)\r\n                    .AddParameter(''foo'', ''fake value'')\r\n                    .AddParameter(''bar'', ''fake value 2'')))", span="137-140"];
m2_135 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_most_parameter_captures_when_multiple_matches_with_parameters_are_available()", file="BrowserResponseBodyWrapperExtensions.cs", label="var resolver = CreateResolver(x => {\r\n                x.AddGetRoute(''/foo/{bar}/{foo}'', ''module-key-two-parameters'');\r\n                x.AddGetRoute(''/foo/{bar}'', ''module-key-one-parameter'');\r\n            })", span="129-132"];
m2_138 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_most_parameter_captures_when_multiple_matches_with_parameters_are_available()", file="BrowserResponseBodyWrapperExtensions.cs", label="resolver.Resolve(context)", span="143-143"];
m2_139 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_most_parameter_captures_when_multiple_matches_with_parameters_are_available()", file="BrowserResponseBodyWrapperExtensions.cs", label="A.CallTo(() => this.catalog.GetModuleByKey(''module-key-two-parameters'', context)).MustHaveHappened()", span="146-146"];
m2_140 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_most_parameter_captures_when_multiple_matches_with_parameters_are_available()", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_most_parameter_captures_when_multiple_matches_with_parameters_are_available()", span="123-123"];
m2_320 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_ignore_method_casing_when_resolving_routes()", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_ignore_method_casing_when_resolving_routes()", span="297-297"];
m2_321 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_ignore_method_casing_when_resolving_routes()", file="BrowserResponseBodyWrapperExtensions.cs", label="var request = new FakeRequest(''GeT'', ''/foo/bar'')", span="300-300"];
m2_322 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_ignore_method_casing_when_resolving_routes()", file="BrowserResponseBodyWrapperExtensions.cs", label="var context = new NancyContext { Request = request }", span="301-301"];
m2_323 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_ignore_method_casing_when_resolving_routes()", file="BrowserResponseBodyWrapperExtensions.cs", label="var resolver = CreateResolver(x => x.AddGetRoute(''/foo/bar''))", span="302-302"];
m2_324 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_ignore_method_casing_when_resolving_routes()", file="BrowserResponseBodyWrapperExtensions.cs", label="var resolvedRoute = resolver.Resolve(context)", span="305-305"];
m2_325 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_ignore_method_casing_when_resolving_routes()", file="BrowserResponseBodyWrapperExtensions.cs", label="resolvedRoute.ShouldNotBeNull()", span="308-308"];
m2_326 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_ignore_method_casing_when_resolving_routes()", file="BrowserResponseBodyWrapperExtensions.cs", label="resolvedRoute.ShouldNotBeOfType<NotFoundRoute>()", span="309-309"];
m2_327 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_ignore_method_casing_when_resolving_routes()", file="BrowserResponseBodyWrapperExtensions.cs", label="resolvedRoute.ShouldNotBeOfType<MethodNotAllowedRoute>()", span="310-310"];
m2_328 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_ignore_method_casing_when_resolving_routes()", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_ignore_method_casing_when_resolving_routes()", span="297-297"];
m2_491 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_user_defined_route_for_route_with_custom_options_defined()", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_user_defined_route_for_route_with_custom_options_defined()", span="524-524"];
m2_492 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_user_defined_route_for_route_with_custom_options_defined()", file="BrowserResponseBodyWrapperExtensions.cs", label="var request = new FakeRequest(''OPTIONS'', ''/foo/bar'')", span="527-527"];
m2_493 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_user_defined_route_for_route_with_custom_options_defined()", file="BrowserResponseBodyWrapperExtensions.cs", label="var context = new NancyContext {Request = request}", span="528-528"];
m2_494 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_user_defined_route_for_route_with_custom_options_defined()", file="BrowserResponseBodyWrapperExtensions.cs", label="var resolver = CreateResolver(x =>\r\n            {\r\n                x.AddGetRoute(''/foo/bar'');\r\n                x.AddOptionsRoute(''/foo/bar'');\r\n            })", span="529-533"];
m2_495 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_user_defined_route_for_route_with_custom_options_defined()", file="BrowserResponseBodyWrapperExtensions.cs", label="var route = resolver.Resolve(context).Item1", span="536-536"];
m2_496 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_user_defined_route_for_route_with_custom_options_defined()", file="BrowserResponseBodyWrapperExtensions.cs", label="route.ShouldNotBeNull()", span="539-539"];
m2_497 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_user_defined_route_for_route_with_custom_options_defined()", file="BrowserResponseBodyWrapperExtensions.cs", label="route.ShouldNotBeOfType<OptionsRoute>()", span="540-540"];
m2_498 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_user_defined_route_for_route_with_custom_options_defined()", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_user_defined_route_for_route_with_custom_options_defined()", span="524-524"];
m2_73 [cluster="Nancy.Routing.DefaultRouteResolver.DefaultRouteResolver(Nancy.INancyModuleCatalog, Nancy.Routing.IRoutePatternMatcher, Nancy.Routing.INancyModuleBuilder, Nancy.Routing.IRouteCache)", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.Routing.DefaultRouteResolver.DefaultRouteResolver(Nancy.INancyModuleCatalog, Nancy.Routing.IRoutePatternMatcher, Nancy.Routing.INancyModuleBuilder, Nancy.Routing.IRouteCache)", span="26-26"];
m2_513 [cluster="Nancy.Tests.Fakes.FakeModuleCatalog.FakeModuleCatalog()", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.Tests.Fakes.FakeModuleCatalog.FakeModuleCatalog()", span="13-13"];
m2_517 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_a_route_if_matching_and_the_filter_returns_true()", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_a_route_if_matching_and_the_filter_returns_true()", span="561-561"];
m2_518 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_a_route_if_matching_and_the_filter_returns_true()", file="BrowserResponseBodyWrapperExtensions.cs", label="var moduleCatalog = new FakeModuleCatalog()", span="564-564"];
m2_519 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_a_route_if_matching_and_the_filter_returns_true()", file="BrowserResponseBodyWrapperExtensions.cs", label="var routeCache = new RouteCache(moduleCatalog, new FakeModuleKeyGenerator(), A.Fake<INancyContextFactory>())", span="565-565"];
m2_520 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_a_route_if_matching_and_the_filter_returns_true()", file="BrowserResponseBodyWrapperExtensions.cs", label="var specificResolver = new DefaultRouteResolver(moduleCatalog, this.matcher, this.moduleBuilder, routeCache)", span="566-566"];
m2_521 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_a_route_if_matching_and_the_filter_returns_true()", file="BrowserResponseBodyWrapperExtensions.cs", label="var request = new FakeRequest(''GET'', ''/notfiltered'')", span="567-567"];
m2_523 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_a_route_if_matching_and_the_filter_returns_true()", file="BrowserResponseBodyWrapperExtensions.cs", label="var route = specificResolver.Resolve(context).Item1", span="571-571"];
m2_522 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_a_route_if_matching_and_the_filter_returns_true()", file="BrowserResponseBodyWrapperExtensions.cs", label="var context = new NancyContext { Request = request }", span="568-568"];
m2_524 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_a_route_if_matching_and_the_filter_returns_true()", file="BrowserResponseBodyWrapperExtensions.cs", label="route.ShouldBeOfType(typeof(Route))", span="574-574"];
m2_525 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_a_route_if_matching_and_the_filter_returns_true()", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_a_route_if_matching_and_the_filter_returns_true()", span="561-561"];
m2_554 [cluster="Unk.GetAllModules", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Unk.GetAllModules", span=""];
m2_56 [cluster="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator.IsMatch(bool)", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator.IsMatch(bool)", span="49-49"];
m2_57 [cluster="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator.AddParameter(string, object)", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator.AddParameter(string, object)", span="55-55"];
m2_148 [cluster="Nancy.Routing.IRoutePatternMatcher.Match(string, string, Nancy.NancyContext)", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.Routing.IRoutePatternMatcher.Match(string, string, Nancy.NancyContext)", span="15-15"];
m2_515 [cluster="Nancy.Tests.Fakes.FakeModuleKeyGenerator.FakeModuleKeyGenerator()", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.Tests.Fakes.FakeModuleKeyGenerator.FakeModuleKeyGenerator()", span="4-4"];
m2_83 [cluster="Nancy.Tests.Fakes.FakeRequest.FakeRequest(string, string)", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.Tests.Fakes.FakeRequest.FakeRequest(string, string)", span="8-8"];
m2_131 [cluster="Nancy.INancyModuleCatalog.GetModuleByKey(string, Nancy.NancyContext)", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.INancyModuleCatalog.GetModuleByKey(string, Nancy.NancyContext)", span="22-22"];
m2_342 [cluster="object.ShouldBeOfType<T>()", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry object.ShouldBeOfType<T>()", span="150-150"];
m2_536 [cluster="bool.ShouldBeTrue()", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry bool.ShouldBeTrue()", span="85-85"];
m2_414 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_notfoundroute_with_path_set_to_request_uri_when_route_could_not_be_resolved()", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_notfoundroute_with_path_set_to_request_uri_when_route_could_not_be_resolved()", span="418-418"];
m2_415 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_notfoundroute_with_path_set_to_request_uri_when_route_could_not_be_resolved()", file="BrowserResponseBodyWrapperExtensions.cs", label="var request = new FakeRequest(''GET'', ''/foo/bar'')", span="421-421"];
m2_416 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_notfoundroute_with_path_set_to_request_uri_when_route_could_not_be_resolved()", file="BrowserResponseBodyWrapperExtensions.cs", label="var context = new NancyContext { Request = request }", span="422-422"];
m2_421 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_notfoundroute_with_path_set_to_request_uri_when_route_could_not_be_resolved()", file="BrowserResponseBodyWrapperExtensions.cs", label="resolvedRoute.Description.Path.ShouldEqual(request.Path)", span="433-433"];
m2_417 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_notfoundroute_with_path_set_to_request_uri_when_route_could_not_be_resolved()", file="BrowserResponseBodyWrapperExtensions.cs", label="var resolver = CreateResolver(x => x.AddGetRoute(''/bar/foo''))", span="423-423"];
m2_419 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_notfoundroute_with_path_set_to_request_uri_when_route_could_not_be_resolved()", file="BrowserResponseBodyWrapperExtensions.cs", label="var resolvedRoute = resolver.Resolve(context).Item1", span="429-429"];
m2_418 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_notfoundroute_with_path_set_to_request_uri_when_route_could_not_be_resolved()", file="BrowserResponseBodyWrapperExtensions.cs", label="A.CallTo(() => this.matcher.Match(''/foo/bar'', ''/bar/foo'', null)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(false)))", span="425-426"];
m2_420 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_notfoundroute_with_path_set_to_request_uri_when_route_could_not_be_resolved()", file="BrowserResponseBodyWrapperExtensions.cs", label="resolvedRoute.ShouldBeOfType<NotFoundRoute>()", span="432-432"];
m2_422 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_notfoundroute_with_path_set_to_request_uri_when_route_could_not_be_resolved()", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_notfoundroute_with_path_set_to_request_uri_when_route_could_not_be_resolved()", span="418-418"];
m2_84 [cluster="Nancy.NancyContext.NancyContext()", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.NancyContext.NancyContext()", span="19-19"];
m2_432 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_head_request_when_route_is_defined_for_get()", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_head_request_when_route_is_defined_for_get()", span="437-437"];
m2_433 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_head_request_when_route_is_defined_for_get()", file="BrowserResponseBodyWrapperExtensions.cs", label="var request = new FakeRequest(''HEAD'', ''/foo/bar'')", span="440-440"];
m2_434 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_head_request_when_route_is_defined_for_get()", file="BrowserResponseBodyWrapperExtensions.cs", label="var context = new NancyContext { Request = request }", span="441-441"];
m2_435 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_head_request_when_route_is_defined_for_get()", file="BrowserResponseBodyWrapperExtensions.cs", label="var resolver = CreateResolver(x => x.AddGetRoute(''/bar/foo''))", span="442-442"];
m2_436 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_head_request_when_route_is_defined_for_get()", file="BrowserResponseBodyWrapperExtensions.cs", label="var resolvedRoute = resolver.Resolve(context)", span="445-445"];
m2_437 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_head_request_when_route_is_defined_for_get()", file="BrowserResponseBodyWrapperExtensions.cs", label="resolvedRoute.ShouldNotBeNull()", span="448-448"];
m2_438 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_head_request_when_route_is_defined_for_get()", file="BrowserResponseBodyWrapperExtensions.cs", label="resolvedRoute.ShouldNotBeOfType<NotFoundRoute>()", span="449-449"];
m2_439 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_head_request_when_route_is_defined_for_get()", file="BrowserResponseBodyWrapperExtensions.cs", label="resolvedRoute.ShouldNotBeOfType<MethodNotAllowedRoute>()", span="450-450"];
m2_440 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_head_request_when_route_is_defined_for_get()", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_head_request_when_route_is_defined_for_get()", span="437-437"];
m2_376 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_module_returned_by_module_builder()", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_module_returned_by_module_builder()", span="367-367"];
m2_377 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_module_returned_by_module_builder()", file="BrowserResponseBodyWrapperExtensions.cs", label="var request = new FakeRequest(''GET'', ''/foo/bar'')", span="370-370"];
m2_378 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_module_returned_by_module_builder()", file="BrowserResponseBodyWrapperExtensions.cs", label="var context = new NancyContext { Request = request }", span="371-371"];
m2_379 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_module_returned_by_module_builder()", file="BrowserResponseBodyWrapperExtensions.cs", label="var resolver = CreateResolver(x => x.AddGetRoute(''/foo/bar''))", span="372-372"];
m2_382 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_module_returned_by_module_builder()", file="BrowserResponseBodyWrapperExtensions.cs", label="var route = resolver.Resolve(context)", span="379-379"];
m2_380 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_module_returned_by_module_builder()", file="BrowserResponseBodyWrapperExtensions.cs", label="var moduleReturnedByBuilder = new FakeNancyModule(x => x.AddGetRoute(''/bar/foo''))", span="374-374"];
m2_381 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_module_returned_by_module_builder()", file="BrowserResponseBodyWrapperExtensions.cs", label="A.CallTo(() => this.moduleBuilder.BuildModule(A<NancyModule>.Ignored, A<NancyContext>.Ignored)).Returns(\r\n                moduleReturnedByBuilder)", span="375-376"];
m2_383 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_module_returned_by_module_builder()", file="BrowserResponseBodyWrapperExtensions.cs", label="route.Item1.Description.Path.ShouldEqual(''/bar/foo'')", span="382-382"];
m2_384 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_module_returned_by_module_builder()", file="BrowserResponseBodyWrapperExtensions.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_module_returned_by_module_builder()", span="367-367"];
m2_516 [cluster="object.ShouldBeOfType(System.Type)", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry object.ShouldBeOfType(System.Type)", span="155-155"];
m2_355 [cluster="Nancy.DynamicDictionary.DynamicDictionary()", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.DynamicDictionary.DynamicDictionary()", span="10-10"];
m2_361 [cluster="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator.AddPutRoute(string)", file="BrowserResponseBodyWrapperExtensions.cs", label="Entry Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator.AddPutRoute(string)", span="83-83"];
m2_558 [file="BrowserResponseBodyWrapperExtensions.cs", label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", span=""];
m2_559 [file="BrowserResponseBodyWrapperExtensions.cs", label="?", span=""];
m2_560 [file="BrowserResponseBodyWrapperExtensions.cs", label=request, span=""];
m2_561 [file="BrowserResponseBodyWrapperExtensions.cs", label=context, span=""];
m2_562 [file="BrowserResponseBodyWrapperExtensions.cs", label=request, span=""];
m2_563 [file="BrowserResponseBodyWrapperExtensions.cs", label=context, span=""];
m2_564 [file="BrowserResponseBodyWrapperExtensions.cs", label=request, span=""];
m2_565 [file="BrowserResponseBodyWrapperExtensions.cs", label=context, span=""];
m2_566 [file="BrowserResponseBodyWrapperExtensions.cs", label=request, span=""];
m2_567 [file="BrowserResponseBodyWrapperExtensions.cs", label=context, span=""];
m2_568 [file="BrowserResponseBodyWrapperExtensions.cs", label=request, span=""];
m2_569 [file="BrowserResponseBodyWrapperExtensions.cs", label=context, span=""];
m2_570 [file="BrowserResponseBodyWrapperExtensions.cs", label=request, span=""];
m2_571 [file="BrowserResponseBodyWrapperExtensions.cs", label=context, span=""];
m2_572 [file="BrowserResponseBodyWrapperExtensions.cs", label=context, span=""];
m2_573 [file="BrowserResponseBodyWrapperExtensions.cs", label=moduleCatalog, span=""];
m3_21 [cluster="Nancy.Validation.IModelValidator.Validate(object, Nancy.NancyContext)", file="CompositeValidator.cs", label="Entry Nancy.Validation.IModelValidator.Validate(object, Nancy.NancyContext)", span="25-25"];
m3_31 [cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="CompositeValidator.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0"];
m3_17 [cluster="ModelValidationResult.cstr", file="CompositeValidator.cs", label="Entry ModelValidationResult.cstr", span=""];
m3_13 [cluster="Unk.Where", file="CompositeValidator.cs", label="Entry Unk.Where", span=""];
m3_16 [cluster="Unk.Any", file="CompositeValidator.cs", label="Entry Unk.Any", span=""];
m3_33 [cluster="ModelValidationDescriptor.cstr", file="CompositeValidator.cs", label="Entry ModelValidationDescriptor.cstr", span=""];
m3_14 [cluster="Unk.SelectMany", file="CompositeValidator.cs", label="Entry Unk.SelectMany", span=""];
m3_32 [cluster="Unk.ToDictionary", file="CompositeValidator.cs", label="Entry Unk.ToDictionary", span=""];
m3_0 [cluster="Nancy.Validation.CompositeValidator.CompositeValidator(System.Collections.Generic.IEnumerable<Nancy.Validation.IModelValidator>, System.Type)", file="CompositeValidator.cs", label="Entry Nancy.Validation.CompositeValidator.CompositeValidator(System.Collections.Generic.IEnumerable<Nancy.Validation.IModelValidator>, System.Type)", span="18-18"];
m3_1 [cluster="Nancy.Validation.CompositeValidator.CompositeValidator(System.Collections.Generic.IEnumerable<Nancy.Validation.IModelValidator>, System.Type)", file="CompositeValidator.cs", label="var modelValidators = \r\n                validators.ToArray()", span="20-21"];
m3_2 [cluster="Nancy.Validation.CompositeValidator.CompositeValidator(System.Collections.Generic.IEnumerable<Nancy.Validation.IModelValidator>, System.Type)", file="CompositeValidator.cs", label="this.ModelType = modelType", span="23-23"];
m3_3 [cluster="Nancy.Validation.CompositeValidator.CompositeValidator(System.Collections.Generic.IEnumerable<Nancy.Validation.IModelValidator>, System.Type)", file="CompositeValidator.cs", label="this.Description = CreateCompositeDescription(modelValidators, modelType)", span="24-24"];
m3_4 [cluster="Nancy.Validation.CompositeValidator.CompositeValidator(System.Collections.Generic.IEnumerable<Nancy.Validation.IModelValidator>, System.Type)", file="CompositeValidator.cs", label="this.validators = modelValidators", span="25-25"];
m3_5 [cluster="Nancy.Validation.CompositeValidator.CompositeValidator(System.Collections.Generic.IEnumerable<Nancy.Validation.IModelValidator>, System.Type)", file="CompositeValidator.cs", label="Exit Nancy.Validation.CompositeValidator.CompositeValidator(System.Collections.Generic.IEnumerable<Nancy.Validation.IModelValidator>, System.Type)", span="18-18"];
m3_6 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="CompositeValidator.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m3_15 [cluster="Unk.ToArray", file="CompositeValidator.cs", label="Entry Unk.ToArray", span=""];
m3_40 [cluster="lambda expression", file="CompositeValidator.cs", label="Entry lambda expression", span="61-61"];
m3_19 [cluster="lambda expression", file="CompositeValidator.cs", label="v.Validate(instance, context)", span="47-47"];
m3_18 [cluster="lambda expression", file="CompositeValidator.cs", label="Entry lambda expression", span="47-47"];
m3_22 [cluster="lambda expression", file="CompositeValidator.cs", label="Entry lambda expression", span="48-48"];
m3_25 [cluster="lambda expression", file="CompositeValidator.cs", label="Entry lambda expression", span="49-49"];
m3_20 [cluster="lambda expression", file="CompositeValidator.cs", label="Exit lambda expression", span="47-47"];
m3_23 [cluster="lambda expression", file="CompositeValidator.cs", label="r != null", span="48-48"];
m3_24 [cluster="lambda expression", file="CompositeValidator.cs", label="Exit lambda expression", span="48-48"];
m3_26 [cluster="lambda expression", file="CompositeValidator.cs", label="r.Errors", span="49-49"];
m3_27 [cluster="lambda expression", file="CompositeValidator.cs", label="Exit lambda expression", span="49-49"];
m3_34 [cluster="lambda expression", file="CompositeValidator.cs", label="Entry lambda expression", span="60-60"];
m3_37 [cluster="lambda expression", file="CompositeValidator.cs", label="Entry lambda expression", span="61-61"];
m3_35 [cluster="lambda expression", file="CompositeValidator.cs", label="v.Description.Rules", span="60-60"];
m3_36 [cluster="lambda expression", file="CompositeValidator.cs", label="Exit lambda expression", span="60-60"];
m3_38 [cluster="lambda expression", file="CompositeValidator.cs", label="x.Key", span="61-61"];
m3_39 [cluster="lambda expression", file="CompositeValidator.cs", label="Exit lambda expression", span="61-61"];
m3_41 [cluster="lambda expression", file="CompositeValidator.cs", label="x.Value", span="61-61"];
m3_42 [cluster="lambda expression", file="CompositeValidator.cs", label="Exit lambda expression", span="61-61"];
m3_12 [cluster="Unk.Select", file="CompositeValidator.cs", label="Entry Unk.Select", span=""];
m3_7 [cluster="Nancy.Validation.CompositeValidator.CreateCompositeDescription(System.Collections.Generic.IEnumerable<Nancy.Validation.IModelValidator>, System.Type)", file="CompositeValidator.cs", label="Entry Nancy.Validation.CompositeValidator.CreateCompositeDescription(System.Collections.Generic.IEnumerable<Nancy.Validation.IModelValidator>, System.Type)", span="57-57"];
m3_28 [cluster="Nancy.Validation.CompositeValidator.CreateCompositeDescription(System.Collections.Generic.IEnumerable<Nancy.Validation.IModelValidator>, System.Type)", file="CompositeValidator.cs", label="var rules = validators\r\n                .SelectMany(v => v.Description.Rules)\r\n                .ToDictionary(x => x.Key, x => x.Value)", span="59-61"];
m3_29 [cluster="Nancy.Validation.CompositeValidator.CreateCompositeDescription(System.Collections.Generic.IEnumerable<Nancy.Validation.IModelValidator>, System.Type)", file="CompositeValidator.cs", label="return new ModelValidationDescriptor(rules, modelType);", span="63-63"];
m3_30 [cluster="Nancy.Validation.CompositeValidator.CreateCompositeDescription(System.Collections.Generic.IEnumerable<Nancy.Validation.IModelValidator>, System.Type)", file="CompositeValidator.cs", label="Exit Nancy.Validation.CompositeValidator.CreateCompositeDescription(System.Collections.Generic.IEnumerable<Nancy.Validation.IModelValidator>, System.Type)", span="57-57"];
m3_8 [cluster="Nancy.Validation.CompositeValidator.Validate(object, Nancy.NancyContext)", file="CompositeValidator.cs", label="Entry Nancy.Validation.CompositeValidator.Validate(object, Nancy.NancyContext)", span="44-44"];
m3_10 [cluster="Nancy.Validation.CompositeValidator.Validate(object, Nancy.NancyContext)", file="CompositeValidator.cs", label="return (!errors.Any()) ?\r\n                ModelValidationResult.Valid :\r\n                new ModelValidationResult(errors);", span="52-54"];
m3_11 [cluster="Nancy.Validation.CompositeValidator.Validate(object, Nancy.NancyContext)", file="CompositeValidator.cs", label="Exit Nancy.Validation.CompositeValidator.Validate(object, Nancy.NancyContext)", span="44-44"];
m3_43 [file="CompositeValidator.cs", label="Nancy.Validation.CompositeValidator", span=""];
m3_44 [file="CompositeValidator.cs", label=object, span=""];
m3_45 [file="CompositeValidator.cs", label="Nancy.NancyContext", span=""];
m4_469 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.NullProcessor.CanProcess(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.NullProcessor.CanProcess(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", span="697-697"];
m4_470 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.NullProcessor.CanProcess(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", file="ContentNegotiationFixture.cs", label="return new ProcessorMatch\r\n                {\r\n                    RequestedContentTypeResult = MatchResult.ExactMatch,\r\n                    ModelResult = MatchResult.ExactMatch\r\n                };", span="699-703"];
m4_471 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.NullProcessor.CanProcess(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.NullProcessor.CanProcess(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", span="697-697"];
m4_303 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_status_code_to_response_when_set_as_integer()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_status_code_to_response_when_set_as_integer()", span="449-449"];
m4_304 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_status_code_to_response_when_set_as_integer()", file="ContentNegotiationFixture.cs", label="var browser = new Browser(with =>\r\n            {\r\n                with.ResponseProcessor<TestProcessor>();\r\n\r\n                with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithStatusCode(507);\r\n                    }));\r\n                }));\r\n            })", span="452-463"];
m4_305 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_status_code_to_response_when_set_as_integer()", file="ContentNegotiationFixture.cs", label="var response = browser.Get(''/'', with =>\r\n            {\r\n                with.Accept(''test/test'', 0.9m);\r\n            })", span="466-469"];
m4_306 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_status_code_to_response_when_set_as_integer()", file="ContentNegotiationFixture.cs", label="Assert.Equal(HttpStatusCode.InsufficientStorage, response.StatusCode)", span="472-472"];
m4_307 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_status_code_to_response_when_set_as_integer()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_status_code_to_response_when_set_as_integer()", span="449-449"];
m4_166 [cluster="string.Contains(string)", file="ContentNegotiationFixture.cs", label="Entry string.Contains(string)", span="0-0"];
m4_349 [cluster="Unk.Same", file="ContentNegotiationFixture.cs", label="Entry Unk.Same", span=""];
m4_8 [cluster="Nancy.Testing.Browser.Get(string, System.Action<Nancy.Testing.BrowserContext>)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Testing.Browser.Get(string, System.Action<Nancy.Testing.BrowserContext>)", span="70-70"];
m4_397 [cluster="string.StartsWith(string)", file="ContentNegotiationFixture.cs", label="Entry string.StartsWith(string)", span="0-0"];
m4_488 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.NegotiationModule.GetModel()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.NegotiationModule.GetModel()", span="754-754"];
m4_494 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.NegotiationModule.GetModel()", file="ContentNegotiationFixture.cs", label="yield return new Foo();", span="756-756"];
m4_495 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.NegotiationModule.GetModel()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.NegotiationModule.GetModel()", span="754-754"];
m4_9 [cluster="Unk.Equal", file="ContentNegotiationFixture.cs", label="Entry Unk.Equal", span=""];
m4_95 [cluster="Nancy.Responses.Negotiation.NegotiationContext.NegotiationContext()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Responses.Negotiation.NegotiationContext.NegotiationContext()", span="15-15"];
m4_97 [cluster="Nancy.Responses.Negotiation.Negotiator.WithHeader(string, string)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Responses.Negotiation.Negotiator.WithHeader(string, string)", span="45-45"];
m4_282 [cluster="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.ResponseProcessors(params System.Type[])", file="ContentNegotiationFixture.cs", label="Entry Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.ResponseProcessors(params System.Type[])", span="1226-1226"];
m4_224 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.CreateNegotiatedResponse(System.Action<Nancy.Responses.Negotiation.Negotiator>)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.CreateNegotiatedResponse(System.Action<Nancy.Responses.Negotiation.Negotiator>)", span="639-639"];
m4_451 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.CreateNegotiatedResponse(System.Action<Nancy.Responses.Negotiation.Negotiator>)", file="ContentNegotiationFixture.cs", label="return (parameters, module) =>\r\n                {\r\n                    var negotiator = new Negotiator(module.Context);\r\n\r\n                    if (action != null)\r\n                    {\r\n                        action.Invoke(negotiator);\r\n                    }\r\n\r\n                    return negotiator;\r\n                };", span="641-651"];
m4_452 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.CreateNegotiatedResponse(System.Action<Nancy.Responses.Negotiation.Negotiator>)", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.CreateNegotiatedResponse(System.Action<Nancy.Responses.Negotiation.Negotiator>)", span="639-639"];
m4_460 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.TestProcessor.CanProcess(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.TestProcessor.CanProcess(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", span="672-672"];
m4_461 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.TestProcessor.CanProcess(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", file="ContentNegotiationFixture.cs", label="return new ProcessorMatch\r\n                {\r\n                    RequestedContentTypeResult = MatchResult.DontCare,\r\n                    ModelResult = MatchResult.DontCare\r\n                };", span="674-678"];
m4_462 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.TestProcessor.CanProcess(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.TestProcessor.CanProcess(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", span="672-672"];
m4_160 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_boost_html_priority_if_set_to_the_same_priority_as_others()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_boost_html_priority_if_set_to_the_same_priority_as_others()", span="245-245"];
m4_161 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_boost_html_priority_if_set_to_the_same_priority_as_others()", file="ContentNegotiationFixture.cs", label="var browser = new Browser(with =>\r\n            {\r\n                with.ResponseProcessor<TestProcessor>();\r\n\r\n                with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', (parameters, module) =>\r\n                    {\r\n                        var context =\r\n                            new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n                        var negotiator =\r\n                            new Negotiator(context);\r\n\r\n                        negotiator.WithAllowedMediaRange(''application/xml'');\r\n                        negotiator.WithAllowedMediaRange(''text/html'');\r\n\r\n                        return negotiator;\r\n                    });\r\n                }));\r\n            })", span="248-268"];
m4_162 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_boost_html_priority_if_set_to_the_same_priority_as_others()", file="ContentNegotiationFixture.cs", label="var response = browser.Get(''/'', with =>\r\n            {\r\n                with.Header(''User-Agent'', ''Mozilla/5.0 (Windows; U; Windows NT 5.1; ru-RU) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4'');\r\n                with.Accept(''application/xml'', 0.9m);\r\n                with.Accept(''text/html'', 0.9m);\r\n            })", span="271-276"];
m4_163 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_boost_html_priority_if_set_to_the_same_priority_as_others()", file="ContentNegotiationFixture.cs", label="Assert.Equal(HttpStatusCode.OK, response.StatusCode)", span="279-279"];
m4_164 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_boost_html_priority_if_set_to_the_same_priority_as_others()", file="ContentNegotiationFixture.cs", label="Assert.True(response.Body.AsString().Contains(''text/html''), ''Media type mismatch'')", span="280-280"];
m4_165 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_boost_html_priority_if_set_to_the_same_priority_as_others()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_boost_html_priority_if_set_to_the_same_priority_as_others()", span="245-245"];
m4_189 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_override_with_extension()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_override_with_extension()", span="284-284"];
m4_190 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_override_with_extension()", file="ContentNegotiationFixture.cs", label="var browser = new Browser(with =>\r\n            {\r\n                with.ResponseProcessor<TestProcessor>();\r\n\r\n                with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/test'', (parameters, module) =>\r\n                    {\r\n                        var context =\r\n                            new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n                        var negotiator =\r\n                            new Negotiator(context);\r\n\r\n                        return negotiator;\r\n                    });\r\n                }));\r\n            })", span="287-304"];
m4_191 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_override_with_extension()", file="ContentNegotiationFixture.cs", label="var response = browser.Get(''/test.foo'', with =>\r\n            {\r\n                with.Header(''User-Agent'', ''Mozilla/5.0 (Windows; U; Windows NT 5.1; ru-RU) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4'');\r\n                with.Accept(''application/xml'', 0.9m);\r\n                with.Accept(''text/html'', 0.9m);\r\n            })", span="307-312"];
m4_192 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_override_with_extension()", file="ContentNegotiationFixture.cs", label="Assert.Equal(HttpStatusCode.OK, response.StatusCode)", span="315-315"];
m4_193 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_override_with_extension()", file="ContentNegotiationFixture.cs", label="Assert.True(response.Body.AsString().Contains(''foo/bar''), ''Media type mismatch'')", span="316-316"];
m4_194 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_override_with_extension()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_override_with_extension()", span="284-284"];
m4_289 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_link_header_for_matching_response_processors()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_link_header_for_matching_response_processors()", span="426-426"];
m4_290 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_link_header_for_matching_response_processors()", file="ContentNegotiationFixture.cs", label="var browser = new Browser(with =>\r\n            {\r\n                with.ResponseProcessors(typeof(XmlProcessor), typeof(JsonProcessor), typeof(TestProcessor));\r\n\r\n                with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse());\r\n                }));\r\n            })", span="429-437"];
m4_291 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_link_header_for_matching_response_processors()", file="ContentNegotiationFixture.cs", label="var response = browser.Get(''/'')", span="440-440"];
m4_292 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_link_header_for_matching_response_processors()", file="ContentNegotiationFixture.cs", label="Assert.True(response.Headers[''Link''].Contains(@''</.foo>; rel=''''foo/bar''''''))", span="443-443"];
m4_293 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_link_header_for_matching_response_processors()", file="ContentNegotiationFixture.cs", label="Assert.True(response.Headers[''Link''].Contains(@''</.json>; rel=''''application/json''''''))", span="444-444"];
m4_294 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_link_header_for_matching_response_processors()", file="ContentNegotiationFixture.cs", label="Assert.True(response.Headers[''Link''].Contains(@''</.xml>; rel=''''application/xml''''''))", span="445-445"];
m4_295 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_link_header_for_matching_response_processors()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_link_header_for_matching_response_processors()", span="426-426"];
m4_231 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_that_contains_default_model_when_no_media_range_specific_model_was_declared()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_that_contains_default_model_when_no_media_range_specific_model_was_declared()", span="347-347"];
m4_232 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_that_contains_default_model_when_no_media_range_specific_model_was_declared()", file="ContentNegotiationFixture.cs", label="var browser = new Browser(with =>\r\n            {\r\n                with.ResponseProcessor<ModelProcessor>();\r\n\r\n                with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithModel(''the model'');\r\n                        config.WithAllowedMediaRange(''test/test'');\r\n                    }));\r\n                }));\r\n            })", span="350-362"];
m4_233 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_that_contains_default_model_when_no_media_range_specific_model_was_declared()", file="ContentNegotiationFixture.cs", label="var response = browser.Get(''/'', with =>\r\n            {\r\n                with.Accept(''test/test'', 0.9m);\r\n            })", span="365-368"];
m4_234 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_that_contains_default_model_when_no_media_range_specific_model_was_declared()", file="ContentNegotiationFixture.cs", label="Assert.Equal(''the model'', response.Body.AsString())", span="371-371"];
m4_235 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_that_contains_default_model_when_no_media_range_specific_model_was_declared()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_that_contains_default_model_when_no_media_range_specific_model_was_declared()", span="347-347"];
m4_384 [cluster="Nancy.Responses.Negotiation.Negotiator.WithView(string)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Responses.Negotiation.Negotiator.WithView(string)", span="148-148"];
m4_391 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_use_next_processor_if_processor_returns_null()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_use_next_processor_if_processor_returns_null()", span="557-557"];
m4_392 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_use_next_processor_if_processor_returns_null()", file="ContentNegotiationFixture.cs", label="var browser = new Browser(with =>\r\n                {\r\n                with.ResponseProcessors(typeof(NullProcessor), typeof(TestProcessor));\r\n\r\n                with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/test'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithAllowedMediaRange(''application/xml'');\r\n                    }));\r\n                }));\r\n            })", span="560-571"];
m4_393 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_use_next_processor_if_processor_returns_null()", file="ContentNegotiationFixture.cs", label="var response = browser.Get(''/test'', with =>\r\n            {\r\n                with.Accept(''application/xml'', 0.9m);\r\n            })", span="574-577"];
m4_394 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_use_next_processor_if_processor_returns_null()", file="ContentNegotiationFixture.cs", label="var bodyResult = response.Body.AsString()", span="580-580"];
m4_395 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_use_next_processor_if_processor_returns_null()", file="ContentNegotiationFixture.cs", label="Assert.True(bodyResult.StartsWith(''application/xml''), string.Format(''Body should have started with 'application/xml' but was actually '{0}''', bodyResult))", span="581-581"];
m4_396 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_use_next_processor_if_processor_returns_null()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_use_next_processor_if_processor_returns_null()", span="557-557"];
m4_398 [cluster="string.Format(string, object)", file="ContentNegotiationFixture.cs", label="Entry string.Format(string, object)", span="0-0"];
m4_472 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.NullProcessor.Process(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.NullProcessor.Process(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", span="706-706"];
m4_473 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.NullProcessor.Process(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", file="ContentNegotiationFixture.cs", label="return null;", span="708-708"];
m4_474 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.NullProcessor.Process(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.NullProcessor.Process(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", span="706-706"];
m4_481 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.NegotiationModule.NegotiationModule()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.NegotiationModule.NegotiationModule()", span="739-739"];
m4_482 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.NegotiationModule.NegotiationModule()", file="ContentNegotiationFixture.cs", label="Get[''/invalid-view-name''] = _ =>\r\n                {\r\n                    return this.GetModel();\r\n                }", span="741-744"];
m4_483 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.NegotiationModule.NegotiationModule()", file="ContentNegotiationFixture.cs", label="Get[''/negotiate''] = parameters =>\r\n                {\r\n                    return Negotiate\r\n                        .WithMediaRangeResponse(''text/html'', Response.AsRedirect(''/''))\r\n                        .WithMediaRangeModel(''application/json'', new { Name = ''Nancy'' });\r\n                }", span="746-751"];
m4_484 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.NegotiationModule.NegotiationModule()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.NegotiationModule.NegotiationModule()", span="739-739"];
m4_20 [cluster="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.Module(Nancy.INancyModule)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.Module(Nancy.INancyModule)", span="818-818"];
m4_435 [cluster="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.Module<T>()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.Module<T>()", span="808-808"];
m4_337 [cluster="Nancy.Responses.Negotiation.Negotiator.WithStatusCode(Nancy.HttpStatusCode)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Responses.Negotiation.Negotiator.WithStatusCode(Nancy.HttpStatusCode)", span="240-240"];
m4_439 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_response_negotiated_based_on_media_range()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_response_negotiated_based_on_media_range()", span="624-624"];
m4_440 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_response_negotiated_based_on_media_range()", file="ContentNegotiationFixture.cs", label="var browser = new Browser(with => with.Module<NegotiationModule>())", span="627-627"];
m4_441 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_response_negotiated_based_on_media_range()", file="ContentNegotiationFixture.cs", label="var result = browser.Get(''/negotiate'', with =>\r\n            {\r\n                with.Accept(''text/html'');\r\n            })", span="630-633"];
m4_442 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_response_negotiated_based_on_media_range()", file="ContentNegotiationFixture.cs", label="Assert.Equal(HttpStatusCode.SeeOther, result.StatusCode)", span="636-636"];
m4_443 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_response_negotiated_based_on_media_range()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_response_negotiated_based_on_media_range()", span="624-624"];
m4_6 [cluster="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModule(System.Action<Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator>)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModule(System.Action<Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator>)", span="20-20"];
m4_188 [cluster="Nancy.Testing.BrowserContext.Accept(Nancy.Responses.Negotiation.MediaRange, decimal)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Testing.BrowserContext.Accept(Nancy.Responses.Negotiation.MediaRange, decimal)", span="177-177"];
m4_251 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_media_range_specific_model_when_declared()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_media_range_specific_model_when_declared()", span="375-375"];
m4_252 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_media_range_specific_model_when_declared()", file="ContentNegotiationFixture.cs", label="var browser = new Browser(with =>\r\n            {\r\n                with.ResponseProcessor<ModelProcessor>();\r\n\r\n                with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithModel(''the model'');\r\n                        config.WithAllowedMediaRange(''test/test'');\r\n                        config.WithMediaRangeModel(''test/test'', ''media model'');\r\n                    }));\r\n                }));\r\n            })", span="378-391"];
m4_253 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_media_range_specific_model_when_declared()", file="ContentNegotiationFixture.cs", label="var response = browser.Get(''/'', with =>\r\n            {\r\n                with.Accept(''test/test'', 0.9m);\r\n            })", span="394-397"];
m4_254 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_media_range_specific_model_when_declared()", file="ContentNegotiationFixture.cs", label="Assert.Equal(''media model'', response.Body.AsString())", span="400-400"];
m4_255 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_media_range_specific_model_when_declared()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_media_range_specific_model_when_declared()", span="375-375"];
m4_27 [cluster="Nancy.Testing.BrowserResponseBodyWrapper.AsString()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Testing.BrowserResponseBodyWrapper.AsString()", span="30-30"];
m4_143 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_apply_default_accept_when_no_accept_header_sent()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_apply_default_accept_when_no_accept_header_sent()", span="215-215"];
m4_144 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_apply_default_accept_when_no_accept_header_sent()", file="ContentNegotiationFixture.cs", label="var browser = new Browser(with =>\r\n            {\r\n                with.ResponseProcessor<TestProcessor>();\r\n\r\n                with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', (parameters, module) =>\r\n                    {\r\n                        var context =\r\n                            new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n                        var negotiator =\r\n                            new Negotiator(context);\r\n\r\n                        return negotiator;\r\n                    });\r\n                }));\r\n            })", span="218-235"];
m4_145 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_apply_default_accept_when_no_accept_header_sent()", file="ContentNegotiationFixture.cs", label="var response = browser.Get(''/'')", span="238-238"];
m4_146 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_apply_default_accept_when_no_accept_header_sent()", file="ContentNegotiationFixture.cs", label="Assert.Equal(HttpStatusCode.OK, response.StatusCode)", span="241-241"];
m4_147 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_apply_default_accept_when_no_accept_header_sent()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_apply_default_accept_when_no_accept_header_sent()", span="215-215"];
m4_118 [cluster="Nancy.Responses.Negotiation.Negotiator.WithReasonPhrase(string)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Responses.Negotiation.Negotiator.WithReasonPhrase(string)", span="228-228"];
m4_318 [cluster="Nancy.Responses.Negotiation.Negotiator.WithStatusCode(int)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Responses.Negotiation.Negotiator.WithStatusCode(int)", span="216-216"];
m4_364 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_throw_exception_if_view_location_fails()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_throw_exception_if_view_location_fails()", span="533-533"];
m4_365 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_throw_exception_if_view_location_fails()", file="ContentNegotiationFixture.cs", label="var browser = new Browser(with =>\r\n            {\r\n                with.ResponseProcessor<ViewProcessor>();\r\n\r\n                with.Module(new ConfigurableNancyModule(x => x.Get(''/FakeModuleInvalidViewName'', CreateNegotiatedResponse(neg => neg.WithView(''blahblahblah'')))));\r\n            })", span="535-540"];
m4_366 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_throw_exception_if_view_location_fails()", file="ContentNegotiationFixture.cs", label="var result = Record.Exception(() =>\r\n                {\r\n                    var response = browser.Get(\r\n                        ''/FakeModuleInvalidViewName'',\r\n                        with =>\r\n                            { with.Accept(''text/html'', 1.0m); });\r\n                })", span="543-549"];
m4_367 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_throw_exception_if_view_location_fails()", file="ContentNegotiationFixture.cs", label="Assert.NotNull(result)", span="552-552"];
m4_368 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_throw_exception_if_view_location_fails()", file="ContentNegotiationFixture.cs", label="Assert.Contains(''Unable to locate view'', result.ToString())", span="553-553"];
m4_369 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_throw_exception_if_view_location_fails()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_throw_exception_if_view_location_fails()", span="533-533"];
m4_427 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_not_try_and_serve_view_with_invalid_name()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_not_try_and_serve_view_with_invalid_name()", span="611-611"];
m4_428 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_not_try_and_serve_view_with_invalid_name()", file="ContentNegotiationFixture.cs", label="var browser = new Browser(with => with.Module<NegotiationModule>())", span="614-614"];
m4_429 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_not_try_and_serve_view_with_invalid_name()", file="ContentNegotiationFixture.cs", label="var result = Record.Exception(() => browser.Get(''/invalid-view-name''))", span="617-617"];
m4_430 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_not_try_and_serve_view_with_invalid_name()", file="ContentNegotiationFixture.cs", label="Assert.True(result.ToString().Contains(''Unable to locate view''))", span="620-620"];
m4_431 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_not_try_and_serve_view_with_invalid_name()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_not_try_and_serve_view_with_invalid_name()", span="611-611"];
m4_0 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_int_value_from_get_route_as_response_with_status_code_set_to_value()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_int_value_from_get_route_as_response_with_status_code_set_to_value()", span="17-17"];
m4_1 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_int_value_from_get_route_as_response_with_status_code_set_to_value()", file="ContentNegotiationFixture.cs", label="var module = new ConfigurableNancyModule(with =>\r\n            {\r\n                with.Get(''/int'', (x,m) => 200);\r\n            })", span="20-23"];
m4_2 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_int_value_from_get_route_as_response_with_status_code_set_to_value()", file="ContentNegotiationFixture.cs", label="var browser = new Browser(with =>\r\n            {\r\n                with.Module(module);\r\n            })", span="25-28"];
m4_3 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_int_value_from_get_route_as_response_with_status_code_set_to_value()", file="ContentNegotiationFixture.cs", label="var response = browser.Get(''/int'')", span="31-31"];
m4_4 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_int_value_from_get_route_as_response_with_status_code_set_to_value()", file="ContentNegotiationFixture.cs", label="Assert.Equal((HttpStatusCode)200, response.StatusCode)", span="34-34"];
m4_5 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_int_value_from_get_route_as_response_with_status_code_set_to_value()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_int_value_from_get_route_as_response_with_status_code_set_to_value()", span="17-17"];
m4_459 [cluster="System.Action<T>.Invoke(T)", file="ContentNegotiationFixture.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m4_322 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_status_code_to_response_when_set_as_httpstatuscode()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_status_code_to_response_when_set_as_httpstatuscode()", span="476-476"];
m4_323 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_status_code_to_response_when_set_as_httpstatuscode()", file="ContentNegotiationFixture.cs", label="var browser = new Browser(with =>\r\n            {\r\n                with.ResponseProcessor<TestProcessor>();\r\n\r\n                with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithStatusCode(HttpStatusCode.InsufficientStorage);\r\n                    }));\r\n                }));\r\n            })", span="479-490"];
m4_324 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_status_code_to_response_when_set_as_httpstatuscode()", file="ContentNegotiationFixture.cs", label="var response = browser.Get(''/'', with =>\r\n            {\r\n                with.Accept(''test/test'', 0.9m);\r\n            })", span="493-496"];
m4_325 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_status_code_to_response_when_set_as_httpstatuscode()", file="ContentNegotiationFixture.cs", label="Assert.Equal(HttpStatusCode.InsufficientStorage, response.StatusCode)", span="499-499"];
m4_326 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_status_code_to_response_when_set_as_httpstatuscode()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_status_code_to_response_when_set_as_httpstatuscode()", span="476-476"];
m4_372 [cluster="Unk.ToString", file="ContentNegotiationFixture.cs", label="Entry Unk.ToString", span=""];
m4_492 [cluster="Nancy.IResponseFormatter.AsRedirect(string, Nancy.Responses.RedirectResponse.RedirectType)", file="ContentNegotiationFixture.cs", label="Entry Nancy.IResponseFormatter.AsRedirect(string, Nancy.Responses.RedirectResponse.RedirectType)", span="50-50"];
m4_71 [cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", file="ContentNegotiationFixture.cs", label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0"];
m4_371 [cluster="Unk.NotNull", file="ContentNegotiationFixture.cs", label="Entry Unk.NotNull", span=""];
m4_7 [cluster="Nancy.Testing.Browser.Browser(System.Action<Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator>)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Testing.Browser.Browser(System.Action<Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator>)", span="26-26"];
m4_493 [cluster="Nancy.Responses.Negotiation.Negotiator.WithMediaRangeResponse(Nancy.Responses.Negotiation.MediaRange, Nancy.Response)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Responses.Negotiation.Negotiator.WithMediaRangeResponse(Nancy.Responses.Negotiation.MediaRange, Nancy.Response)", span="192-192"];
m4_138 [cluster="Nancy.Responses.Negotiation.Negotiator.WithContentType(string)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Responses.Negotiation.Negotiator.WithContentType(string)", span="56-56"];
m4_496 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.NegotiationModule.Foo.Foo()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.NegotiationModule.Foo.Foo()", span="759-759"];
m4_52 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_action_value_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_action_value_as_response_with_content_set_as_value()", span="80-80"];
m4_53 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_action_value_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs", label="var module = new ConfigurableNancyModule(with =>\r\n            {\r\n                with.Get(''/action'', (x, m) =>\r\n                {\r\n                    Action<Stream> result = stream =>\r\n                    {\r\n                        var wrapper = new UnclosableStreamWrapper(stream);\r\n                        using (var writer = new StreamWriter(wrapper))\r\n                        {\r\n                            writer.Write(''Hiya Nancy!'');\r\n                        }\r\n                    };\r\n\r\n                    return result;\r\n                });\r\n            })", span="83-98"];
m4_54 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_action_value_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs", label="var browser = new Browser(with =>\r\n            {\r\n                with.Module(module);\r\n            })", span="100-103"];
m4_55 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_action_value_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs", label="var response = browser.Get(''/action'')", span="106-106"];
m4_56 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_action_value_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs", label="Assert.Equal(''Hiya Nancy!'', response.Body.AsString())", span="109-109"];
m4_57 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_action_value_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_action_value_as_response_with_content_set_as_value()", span="80-80"];
m4_181 [cluster="Nancy.Responses.Negotiation.Negotiator.WithAllowedMediaRange(Nancy.Responses.Negotiation.MediaRange)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Responses.Negotiation.Negotiator.WithAllowedMediaRange(Nancy.Responses.Negotiation.MediaRange)", span="113-113"];
m4_212 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_response_with_notacceptable_when_route_does_not_allow_any_of_the_accepted_formats()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_response_with_notacceptable_when_route_does_not_allow_any_of_the_accepted_formats()", span="320-320"];
m4_213 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_response_with_notacceptable_when_route_does_not_allow_any_of_the_accepted_formats()", file="ContentNegotiationFixture.cs", label="var browser = new Browser(with =>\r\n            {\r\n                with.ResponseProcessor<TestProcessor>();\r\n\r\n                with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/test'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithAllowedMediaRange(''application/xml'');\r\n                    }));\r\n                }));\r\n            })", span="323-334"];
m4_214 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_response_with_notacceptable_when_route_does_not_allow_any_of_the_accepted_formats()", file="ContentNegotiationFixture.cs", label="var response = browser.Get(''/test'', with =>\r\n            {\r\n                with.Accept(''foo/bar'', 0.9m);\r\n            })", span="337-340"];
m4_215 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_response_with_notacceptable_when_route_does_not_allow_any_of_the_accepted_formats()", file="ContentNegotiationFixture.cs", label="Assert.Equal(HttpStatusCode.NotAcceptable, response.StatusCode)", span="343-343"];
m4_216 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_response_with_notacceptable_when_route_does_not_allow_any_of_the_accepted_formats()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_response_with_notacceptable_when_route_does_not_allow_any_of_the_accepted_formats()", span="320-320"];
m4_37 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_httpstatuscode_value_from_get_route_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_httpstatuscode_value_from_get_route_as_response_with_content_set_as_value()", span="59-59"];
m4_38 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_httpstatuscode_value_from_get_route_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs", label="var module = new ConfigurableNancyModule(with =>\r\n            {\r\n                with.Get(''/httpstatuscode'', (x, m) => HttpStatusCode.Accepted);\r\n            })", span="62-65"];
m4_39 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_httpstatuscode_value_from_get_route_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs", label="var browser = new Browser(with =>\r\n            {\r\n                with.Module(module);\r\n            })", span="67-70"];
m4_40 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_httpstatuscode_value_from_get_route_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs", label="var response = browser.Get(''/httpstatuscode'')", span="73-73"];
m4_41 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_httpstatuscode_value_from_get_route_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs", label="Assert.Equal(HttpStatusCode.Accepted, response.StatusCode)", span="76-76"];
m4_42 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_httpstatuscode_value_from_get_route_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_httpstatuscode_value_from_get_route_as_response_with_content_set_as_value()", span="59-59"];
m4_83 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="ContentNegotiationFixture.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m4_94 [cluster="Nancy.NancyContext.NancyContext()", file="ContentNegotiationFixture.cs", label="Entry Nancy.NancyContext.NancyContext()", span="25-25"];
m4_348 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="ContentNegotiationFixture.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m4_489 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="746-751"];
m4_11 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Get(''/int'', (x,m) => 200)", span="22-22"];
m4_18 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(module)", span="27-27"];
m4_10 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="20-23"];
m4_12 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="20-23"];
m4_14 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="22-22"];
m4_15 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label=200, span="22-22"];
m4_16 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="22-22"];
m4_17 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="25-28"];
m4_19 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="25-28"];
m4_29 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Get(''/string'', (x, m) => ''hello'')", span="43-43"];
m4_35 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(module)", span="48-48"];
m4_28 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="41-44"];
m4_30 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="41-44"];
m4_31 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="43-43"];
m4_32 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="''hello''", span="43-43"];
m4_33 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="43-43"];
m4_34 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="46-49"];
m4_36 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="46-49"];
m4_44 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Get(''/httpstatuscode'', (x, m) => HttpStatusCode.Accepted)", span="64-64"];
m4_50 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(module)", span="69-69"];
m4_43 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="62-65"];
m4_45 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="62-65"];
m4_46 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="64-64"];
m4_47 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="HttpStatusCode.Accepted", span="64-64"];
m4_48 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="64-64"];
m4_49 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="67-70"];
m4_51 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="67-70"];
m4_59 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Get(''/action'', (x, m) =>\r\n                {\r\n                    Action<Stream> result = stream =>\r\n                    {\r\n                        var wrapper = new UnclosableStreamWrapper(stream);\r\n                        using (var writer = new StreamWriter(wrapper))\r\n                        {\r\n                            writer.Write(''Hiya Nancy!'');\r\n                        }\r\n                    };\r\n\r\n                    return result;\r\n                })", span="85-97"];
m4_74 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(module)", span="102-102"];
m4_58 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="83-98"];
m4_60 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="83-98"];
m4_61 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="85-97"];
m4_62 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Action<Stream> result = stream =>\r\n                    {\r\n                        var wrapper = new UnclosableStreamWrapper(stream);\r\n                        using (var writer = new StreamWriter(wrapper))\r\n                        {\r\n                            writer.Write(''Hiya Nancy!'');\r\n                        }\r\n                    }", span="87-94"];
m4_63 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="return result;", span="96-96"];
m4_66 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="var wrapper = new UnclosableStreamWrapper(stream)", span="89-89"];
m4_64 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="85-97"];
m4_65 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="87-94"];
m4_67 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="var writer = new StreamWriter(wrapper)", span="90-90"];
m4_68 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="writer.Write(''Hiya Nancy!'')", span="92-92"];
m4_69 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="87-94"];
m4_73 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="100-103"];
m4_75 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="100-103"];
m4_86 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Get(''/headers'', (x, m) =>\r\n                {\r\n                    var context =\r\n                        new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n                    var negotiator =\r\n                        new Negotiator(context);\r\n                    negotiator.WithHeader(''foo'', ''bar'');\r\n\r\n                    return negotiator;\r\n                })", span="119-129"];
m4_100 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(module)", span="136-136"];
m4_99 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.ResponseProcessor<TestProcessor>()", span="134-134"];
m4_85 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="117-130"];
m4_87 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="117-130"];
m4_88 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="119-129"];
m4_89 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="var context =\r\n                        new NancyContext { NegotiationContext = new NegotiationContext() }", span="121-122"];
m4_90 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="var negotiator =\r\n                        new Negotiator(context)", span="124-125"];
m4_91 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="negotiator.WithHeader(''foo'', ''bar'')", span="126-126"];
m4_92 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="return negotiator;", span="128-128"];
m4_93 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="119-129"];
m4_98 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="132-137"];
m4_101 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="132-137"];
m4_110 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Get(''/customPhrase'', (x, m) =>\r\n                {\r\n                    var context =\r\n                        new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n                    var negotiator =\r\n                        new Negotiator(context);\r\n                    negotiator.WithReasonPhrase(''The test is passing!'');\r\n\r\n                    return negotiator;\r\n                })", span="153-163"];
m4_121 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(module)", span="170-170"];
m4_120 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.ResponseProcessor<TestProcessor>()", span="168-168"];
m4_109 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="151-164"];
m4_111 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="151-164"];
m4_112 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="153-163"];
m4_113 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="var context =\r\n                        new NancyContext { NegotiationContext = new NegotiationContext() }", span="155-156"];
m4_114 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="var negotiator =\r\n                        new Negotiator(context)", span="158-159"];
m4_115 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="negotiator.WithReasonPhrase(''The test is passing!'')", span="160-160"];
m4_116 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="return negotiator;", span="162-162"];
m4_117 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="153-163"];
m4_119 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="166-171"];
m4_122 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="166-171"];
m4_130 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Get(''/headers'', (x, m) =>\r\n            {\r\n              var context =\r\n                  new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n              var negotiator =\r\n                  new Negotiator(context);\r\n              negotiator.WithContentType(''text/xml'');\r\n\r\n              return negotiator;\r\n            })", span="187-197"];
m4_141 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(module)", span="204-204"];
m4_140 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.ResponseProcessor<TestProcessor>()", span="202-202"];
m4_129 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="185-198"];
m4_131 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="185-198"];
m4_132 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="187-197"];
m4_133 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="var context =\r\n                  new NancyContext { NegotiationContext = new NegotiationContext() }", span="189-190"];
m4_134 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="var negotiator =\r\n                  new Negotiator(context)", span="192-193"];
m4_135 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="negotiator.WithContentType(''text/xml'')", span="194-194"];
m4_136 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="return negotiator;", span="196-196"];
m4_137 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="187-197"];
m4_139 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="200-205"];
m4_142 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="200-205"];
m4_149 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.ResponseProcessor<TestProcessor>()", span="220-220"];
m4_150 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', (parameters, module) =>\r\n                    {\r\n                        var context =\r\n                            new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n                        var negotiator =\r\n                            new Negotiator(context);\r\n\r\n                        return negotiator;\r\n                    });\r\n                }))", span="222-234"];
m4_148 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="218-235"];
m4_151 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="218-235"];
m4_153 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="x.Get(''/'', (parameters, module) =>\r\n                    {\r\n                        var context =\r\n                            new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n                        var negotiator =\r\n                            new Negotiator(context);\r\n\r\n                        return negotiator;\r\n                    })", span="224-233"];
m4_152 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="222-234"];
m4_154 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="222-234"];
m4_155 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="224-233"];
m4_156 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="var context =\r\n                            new NancyContext { NegotiationContext = new NegotiationContext() }", span="226-227"];
m4_157 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="var negotiator =\r\n                            new Negotiator(context)", span="229-230"];
m4_158 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="return negotiator;", span="232-232"];
m4_159 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="224-233"];
m4_168 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.ResponseProcessor<TestProcessor>()", span="250-250"];
m4_169 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', (parameters, module) =>\r\n                    {\r\n                        var context =\r\n                            new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n                        var negotiator =\r\n                            new Negotiator(context);\r\n\r\n                        negotiator.WithAllowedMediaRange(''application/xml'');\r\n                        negotiator.WithAllowedMediaRange(''text/html'');\r\n\r\n                        return negotiator;\r\n                    });\r\n                }))", span="252-267"];
m4_182 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="271-276"];
m4_167 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="248-268"];
m4_170 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="248-268"];
m4_172 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="x.Get(''/'', (parameters, module) =>\r\n                    {\r\n                        var context =\r\n                            new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n                        var negotiator =\r\n                            new Negotiator(context);\r\n\r\n                        negotiator.WithAllowedMediaRange(''application/xml'');\r\n                        negotiator.WithAllowedMediaRange(''text/html'');\r\n\r\n                        return negotiator;\r\n                    })", span="254-266"];
m4_171 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="252-267"];
m4_173 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="252-267"];
m4_174 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="254-266"];
m4_175 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="var context =\r\n                            new NancyContext { NegotiationContext = new NegotiationContext() }", span="256-257"];
m4_176 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="var negotiator =\r\n                            new Negotiator(context)", span="259-260"];
m4_177 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="negotiator.WithAllowedMediaRange(''application/xml'')", span="262-262"];
m4_178 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="negotiator.WithAllowedMediaRange(''text/html'')", span="263-263"];
m4_179 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="return negotiator;", span="265-265"];
m4_180 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="254-266"];
m4_183 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Header(''User-Agent'', ''Mozilla/5.0 (Windows; U; Windows NT 5.1; ru-RU) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4'')", span="273-273"];
m4_184 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Accept(''application/xml'', 0.9m)", span="274-274"];
m4_185 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Accept(''text/html'', 0.9m)", span="275-275"];
m4_186 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="271-276"];
m4_196 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.ResponseProcessor<TestProcessor>()", span="289-289"];
m4_197 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/test'', (parameters, module) =>\r\n                    {\r\n                        var context =\r\n                            new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n                        var negotiator =\r\n                            new Negotiator(context);\r\n\r\n                        return negotiator;\r\n                    });\r\n                }))", span="291-303"];
m4_207 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="307-312"];
m4_195 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="287-304"];
m4_198 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="287-304"];
m4_200 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="x.Get(''/test'', (parameters, module) =>\r\n                    {\r\n                        var context =\r\n                            new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n                        var negotiator =\r\n                            new Negotiator(context);\r\n\r\n                        return negotiator;\r\n                    })", span="293-302"];
m4_199 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="291-303"];
m4_201 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="291-303"];
m4_202 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="293-302"];
m4_203 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="var context =\r\n                            new NancyContext { NegotiationContext = new NegotiationContext() }", span="295-296"];
m4_204 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="var negotiator =\r\n                            new Negotiator(context)", span="298-299"];
m4_205 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="return negotiator;", span="301-301"];
m4_206 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="293-302"];
m4_208 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Header(''User-Agent'', ''Mozilla/5.0 (Windows; U; Windows NT 5.1; ru-RU) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4'')", span="309-309"];
m4_209 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Accept(''application/xml'', 0.9m)", span="310-310"];
m4_210 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Accept(''text/html'', 0.9m)", span="311-311"];
m4_211 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="307-312"];
m4_218 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.ResponseProcessor<TestProcessor>()", span="325-325"];
m4_219 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/test'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithAllowedMediaRange(''application/xml'');\r\n                    }));\r\n                }))", span="327-333"];
m4_228 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="337-340"];
m4_217 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="323-334"];
m4_220 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="323-334"];
m4_222 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="x.Get(''/test'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithAllowedMediaRange(''application/xml'');\r\n                    }))", span="329-332"];
m4_221 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="327-333"];
m4_223 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="327-333"];
m4_225 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="329-332"];
m4_226 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="config.WithAllowedMediaRange(''application/xml'')", span="331-331"];
m4_227 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="329-332"];
m4_229 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Accept(''foo/bar'', 0.9m)", span="339-339"];
m4_230 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="337-340"];
m4_237 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.ResponseProcessor<ModelProcessor>()", span="352-352"];
m4_238 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithModel(''the model'');\r\n                        config.WithAllowedMediaRange(''test/test'');\r\n                    }));\r\n                }))", span="354-361"];
m4_248 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="365-368"];
m4_236 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="350-362"];
m4_239 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="350-362"];
m4_241 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithModel(''the model'');\r\n                        config.WithAllowedMediaRange(''test/test'');\r\n                    }))", span="356-360"];
m4_240 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="354-361"];
m4_242 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="354-361"];
m4_243 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="356-360"];
m4_244 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="config.WithModel(''the model'')", span="358-358"];
m4_245 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="config.WithAllowedMediaRange(''test/test'')", span="359-359"];
m4_246 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="356-360"];
m4_249 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Accept(''test/test'', 0.9m)", span="367-367"];
m4_250 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="365-368"];
m4_257 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.ResponseProcessor<ModelProcessor>()", span="380-380"];
m4_258 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithModel(''the model'');\r\n                        config.WithAllowedMediaRange(''test/test'');\r\n                        config.WithMediaRangeModel(''test/test'', ''media model'');\r\n                    }));\r\n                }))", span="382-390"];
m4_269 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="394-397"];
m4_256 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="378-391"];
m4_259 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="378-391"];
m4_261 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithModel(''the model'');\r\n                        config.WithAllowedMediaRange(''test/test'');\r\n                        config.WithMediaRangeModel(''test/test'', ''media model'');\r\n                    }))", span="384-389"];
m4_260 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="382-390"];
m4_262 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="382-390"];
m4_263 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="384-389"];
m4_264 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="config.WithModel(''the model'')", span="386-386"];
m4_265 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="config.WithAllowedMediaRange(''test/test'')", span="387-387"];
m4_266 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="config.WithMediaRangeModel(''test/test'', ''media model'')", span="388-388"];
m4_267 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="384-389"];
m4_270 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Accept(''test/test'', 0.9m)", span="396-396"];
m4_271 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="394-397"];
m4_279 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.ResponseProcessors(typeof(XmlProcessor), typeof(JsonProcessor), typeof(TestProcessor))", span="409-409"];
m4_280 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse());\r\n                }))", span="411-414"];
m4_286 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="418-418"];
m4_278 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="407-415"];
m4_281 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="407-415"];
m4_284 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="x.Get(''/'', CreateNegotiatedResponse())", span="413-413"];
m4_283 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="411-414"];
m4_285 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="411-414"];
m4_287 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Header(''Accept'', ''application/json'')", span="418-418"];
m4_288 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="418-418"];
m4_297 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.ResponseProcessors(typeof(XmlProcessor), typeof(JsonProcessor), typeof(TestProcessor))", span="431-431"];
m4_298 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse());\r\n                }))", span="433-436"];
m4_296 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="429-437"];
m4_299 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="429-437"];
m4_301 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="x.Get(''/'', CreateNegotiatedResponse())", span="435-435"];
m4_300 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="433-436"];
m4_302 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="433-436"];
m4_309 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.ResponseProcessor<TestProcessor>()", span="454-454"];
m4_310 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithStatusCode(507);\r\n                    }));\r\n                }))", span="456-462"];
m4_319 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="466-469"];
m4_308 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="452-463"];
m4_311 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="452-463"];
m4_313 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithStatusCode(507);\r\n                    }))", span="458-461"];
m4_312 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="456-462"];
m4_314 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="456-462"];
m4_315 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="458-461"];
m4_316 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="config.WithStatusCode(507)", span="460-460"];
m4_317 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="458-461"];
m4_320 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Accept(''test/test'', 0.9m)", span="468-468"];
m4_321 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="466-469"];
m4_328 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.ResponseProcessor<TestProcessor>()", span="481-481"];
m4_329 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithStatusCode(HttpStatusCode.InsufficientStorage);\r\n                    }));\r\n                }))", span="483-489"];
m4_338 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="493-496"];
m4_327 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="479-490"];
m4_330 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="479-490"];
m4_332 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithStatusCode(HttpStatusCode.InsufficientStorage);\r\n                    }))", span="485-488"];
m4_331 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="483-489"];
m4_333 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="483-489"];
m4_334 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="485-488"];
m4_335 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="config.WithStatusCode(HttpStatusCode.InsufficientStorage)", span="487-487"];
m4_336 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="485-488"];
m4_339 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Accept(''test/test'', 0.9m)", span="495-495"];
m4_340 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="493-496"];
m4_352 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithCookie(negotiatedCookie);\r\n                    }));\r\n                }))", span="513-519"];
m4_355 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithCookie(negotiatedCookie);\r\n                    }))", span="515-518"];
m4_358 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="config.WithCookie(negotiatedCookie)", span="517-517"];
m4_351 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.ResponseProcessor<TestProcessor>()", span="511-511"];
m4_361 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="523-526"];
m4_350 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="509-520"];
m4_353 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="509-520"];
m4_354 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="513-519"];
m4_356 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="513-519"];
m4_357 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="515-518"];
m4_359 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="515-518"];
m4_362 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Accept(''test/test'', 0.9m)", span="525-525"];
m4_363 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="523-526"];
m4_375 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.ResponseProcessor<ViewProcessor>()", span="537-537"];
m4_376 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(new ConfigurableNancyModule(x => x.Get(''/FakeModuleInvalidViewName'', CreateNegotiatedResponse(neg => neg.WithView(''blahblahblah'')))))", span="539-539"];
m4_386 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="var response = browser.Get(\r\n                        ''/FakeModuleInvalidViewName'',\r\n                        with =>\r\n                            { with.Accept(''text/html'', 1.0m); })", span="545-548"];
m4_385 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="543-549"];
m4_374 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="535-540"];
m4_377 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="535-540"];
m4_379 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="x.Get(''/FakeModuleInvalidViewName'', CreateNegotiatedResponse(neg => neg.WithView(''blahblahblah'')))", span="539-539"];
m4_378 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="539-539"];
m4_380 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="539-539"];
m4_381 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="539-539"];
m4_382 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="neg.WithView(''blahblahblah'')", span="539-539"];
m4_383 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="539-539"];
m4_387 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="543-549"];
m4_388 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="547-548"];
m4_389 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Accept(''text/html'', 1.0m)", span="548-548"];
m4_390 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="547-548"];
m4_400 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.ResponseProcessors(typeof(NullProcessor), typeof(TestProcessor))", span="562-562"];
m4_401 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/test'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithAllowedMediaRange(''application/xml'');\r\n                    }));\r\n                }))", span="564-570"];
m4_409 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="574-577"];
m4_399 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="560-571"];
m4_402 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="560-571"];
m4_404 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="x.Get(''/test'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithAllowedMediaRange(''application/xml'');\r\n                    }))", span="566-569"];
m4_403 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="564-570"];
m4_405 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="564-570"];
m4_406 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="566-569"];
m4_407 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="config.WithAllowedMediaRange(''application/xml'')", span="568-568"];
m4_408 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="566-569"];
m4_410 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Accept(''application/xml'', 0.9m)", span="576-576"];
m4_411 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="574-577"];
m4_425 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Header(''Accept'', header)", span="603-603"];
m4_418 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.ResponseProcessors(typeof(XmlProcessor), typeof(JsonProcessor), typeof(TestProcessor))", span="592-592"];
m4_419 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse());\r\n                }))", span="594-597"];
m4_424 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="601-604"];
m4_417 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="590-598"];
m4_420 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="590-598"];
m4_422 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="x.Get(''/'', CreateNegotiatedResponse())", span="596-596"];
m4_421 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="594-597"];
m4_423 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="594-597"];
m4_426 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="601-604"];
m4_433 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module<NegotiationModule>()", span="614-614"];
m4_437 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="browser.Get(''/invalid-view-name'')", span="617-617"];
m4_436 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="617-617"];
m4_432 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="614-614"];
m4_434 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="614-614"];
m4_438 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="617-617"];
m4_445 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module<NegotiationModule>()", span="627-627"];
m4_447 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="630-633"];
m4_444 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="627-627"];
m4_446 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="627-627"];
m4_448 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Accept(''text/html'')", span="632-632"];
m4_449 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="630-633"];
m4_455 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="action != null", span="645-645"];
m4_456 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="action.Invoke(negotiator)", span="647-647"];
m4_454 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="var negotiator = new Negotiator(module.Context)", span="643-643"];
m4_453 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="641-651"];
m4_457 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="return negotiator;", span="650-650"];
m4_458 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="641-651"];
m4_485 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="741-744"];
m4_486 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="return this.GetModel();", span="743-743"];
m4_487 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="741-744"];
m4_490 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="return Negotiate\r\n                        .WithMediaRangeResponse(''text/html'', Response.AsRedirect(''/''))\r\n                        .WithMediaRangeModel(''application/json'', new { Name = ''Nancy'' });", span="748-750"];
m4_491 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="746-751"];
m4_21 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_string_value_from_get_route_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_string_value_from_get_route_as_response_with_content_set_as_value()", span="38-38"];
m4_22 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_string_value_from_get_route_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs", label="var module = new ConfigurableNancyModule(with =>\r\n            {\r\n                with.Get(''/string'', (x, m) => ''hello'');\r\n            })", span="41-44"];
m4_23 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_string_value_from_get_route_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs", label="var browser = new Browser(with =>\r\n            {\r\n                with.Module(module);\r\n            })", span="46-49"];
m4_24 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_string_value_from_get_route_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs", label="var response = browser.Get(''/string'')", span="52-52"];
m4_25 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_string_value_from_get_route_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs", label="Assert.Equal(''hello'', response.Body.AsString())", span="55-55"];
m4_26 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_string_value_from_get_route_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_string_value_from_get_route_as_response_with_content_set_as_value()", span="38-38"];
m4_268 [cluster="Nancy.Responses.Negotiation.Negotiator.WithMediaRangeModel(Nancy.Responses.Negotiation.MediaRange, object)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Responses.Negotiation.Negotiator.WithMediaRangeModel(Nancy.Responses.Negotiation.MediaRange, object)", span="163-163"];
m4_373 [cluster="Unk.Contains", file="ContentNegotiationFixture.cs", label="Entry Unk.Contains", span=""];
m4_96 [cluster="Nancy.Responses.Negotiation.Negotiator.Negotiator(Nancy.NancyContext)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Responses.Negotiation.Negotiator.Negotiator(Nancy.NancyContext)", span="13-13"];
m4_478 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.ModelProcessor.Process(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.ModelProcessor.Process(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", span="731-731"];
m4_479 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.ModelProcessor.Process(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", file="ContentNegotiationFixture.cs", label="return (string) model;", span="733-733"];
m4_480 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.ModelProcessor.Process(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.ModelProcessor.Process(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", span="731-731"];
m4_70 [cluster="Nancy.IO.UnclosableStreamWrapper.UnclosableStreamWrapper(System.IO.Stream)", file="ContentNegotiationFixture.cs", label="Entry Nancy.IO.UnclosableStreamWrapper.UnclosableStreamWrapper(System.IO.Stream)", span="22-22"];
m4_72 [cluster="System.IO.StreamWriter.Write(string)", file="ContentNegotiationFixture.cs", label="Entry System.IO.StreamWriter.Write(string)", span="0-0"];
m4_370 [cluster="Unk.Exception", file="ContentNegotiationFixture.cs", label="Entry Unk.Exception", span=""];
m4_347 [cluster="Nancy.Cookies.NancyCookie.NancyCookie(string, string)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Cookies.NancyCookie.NancyCookie(string, string)", span="10-10"];
m4_450 [cluster="Nancy.Testing.BrowserContext.Accept(Nancy.Responses.Negotiation.MediaRange)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Testing.BrowserContext.Accept(Nancy.Responses.Negotiation.MediaRange)", span="172-172"];
m4_412 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_not_throw_exception_because_of_uncommon_accept_header(string)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_not_throw_exception_because_of_uncommon_accept_header(string)", span="587-587"];
m4_413 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_not_throw_exception_because_of_uncommon_accept_header(string)", file="ContentNegotiationFixture.cs", label="var browser = new Browser(with =>\r\n            {\r\n                with.ResponseProcessors(typeof(XmlProcessor), typeof(JsonProcessor), typeof(TestProcessor));\r\n\r\n                with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse());\r\n                }));\r\n            })", span="590-598"];
m4_414 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_not_throw_exception_because_of_uncommon_accept_header(string)", file="ContentNegotiationFixture.cs", label="var response = browser.Get(''/'', with =>\r\n            {\r\n                with.Header(''Accept'', header);\r\n            })", span="601-604"];
m4_415 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_not_throw_exception_because_of_uncommon_accept_header(string)", file="ContentNegotiationFixture.cs", label="Assert.Equal((HttpStatusCode)200, response.StatusCode)", span="607-607"];
m4_416 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_not_throw_exception_because_of_uncommon_accept_header(string)", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_not_throw_exception_because_of_uncommon_accept_header(string)", span="587-587"];
m4_467 [cluster="Unk.GetType", file="ContentNegotiationFixture.cs", label="Entry Unk.GetType", span=""];
m4_187 [cluster="Nancy.Testing.BrowserContext.Header(string, string)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Testing.BrowserContext.Header(string, string)", span="115-115"];
m4_84 [cluster="Unk.True", file="ContentNegotiationFixture.cs", label="Entry Unk.True", span=""];
m4_475 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.ModelProcessor.CanProcess(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.ModelProcessor.CanProcess(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", span="722-722"];
m4_476 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.ModelProcessor.CanProcess(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", file="ContentNegotiationFixture.cs", label="return new ProcessorMatch\r\n                {\r\n                    RequestedContentTypeResult = MatchResult.DontCare,\r\n                    ModelResult = MatchResult.DontCare\r\n                };", span="724-728"];
m4_477 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.ModelProcessor.CanProcess(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.ModelProcessor.CanProcess(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", span="722-722"];
m4_468 [cluster="Unk.Format", file="ContentNegotiationFixture.cs", label="Entry Unk.Format", span=""];
m4_102 [cluster="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.ResponseProcessor<T>()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.ResponseProcessor<T>()", span="1213-1213"];
m4_272 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_vary_accept_header()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_vary_accept_header()", span="404-404"];
m4_273 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_vary_accept_header()", file="ContentNegotiationFixture.cs", label="var browser = new Browser(with =>\r\n            {\r\n                with.ResponseProcessors(typeof(XmlProcessor), typeof(JsonProcessor), typeof(TestProcessor));\r\n\r\n                with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse());\r\n                }));\r\n            })", span="407-415"];
m4_274 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_vary_accept_header()", file="ContentNegotiationFixture.cs", label="var response = browser.Get(''/'', with => with.Header(''Accept'', ''application/json''))", span="418-418"];
m4_275 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_vary_accept_header()", file="ContentNegotiationFixture.cs", label="Assert.True(response.Headers.ContainsKey(''Vary''))", span="421-421"];
m4_276 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_vary_accept_header()", file="ContentNegotiationFixture.cs", label="Assert.True(response.Headers[''Vary''].Contains(''Accept''))", span="422-422"];
m4_277 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_vary_accept_header()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_vary_accept_header()", span="404-404"];
m4_341 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_cookies_to_response()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_cookies_to_response()", span="503-503"];
m4_342 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_cookies_to_response()", file="ContentNegotiationFixture.cs", label="var negotiatedCookie = \r\n                new NancyCookie(''test'', ''test'')", span="506-507"];
m4_343 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_cookies_to_response()", file="ContentNegotiationFixture.cs", label="var browser = new Browser(with =>\r\n            {\r\n                with.ResponseProcessor<TestProcessor>();\r\n\r\n                with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithCookie(negotiatedCookie);\r\n                    }));\r\n                }));\r\n            })", span="509-520"];
m4_345 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_cookies_to_response()", file="ContentNegotiationFixture.cs", label="Assert.Same(negotiatedCookie, response.Cookies.First())", span="529-529"];
m4_344 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_cookies_to_response()", file="ContentNegotiationFixture.cs", label="var response = browser.Get(''/'', with =>\r\n            {\r\n                with.Accept(''test/test'', 0.9m);\r\n            })", span="523-526"];
m4_346 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_cookies_to_response()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_cookies_to_response()", span="503-503"];
m4_13 [cluster="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator.Get(string, System.Func<dynamic, Nancy.NancyModule, dynamic>)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator.Get(string, System.Func<dynamic, Nancy.NancyModule, dynamic>)", span="133-133"];
m4_123 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_content_headers_to_response()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_content_headers_to_response()", span="181-181"];
m4_124 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_content_headers_to_response()", file="ContentNegotiationFixture.cs", label="var module = new ConfigurableNancyModule(with =>\r\n          {\r\n            with.Get(''/headers'', (x, m) =>\r\n            {\r\n              var context =\r\n                  new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n              var negotiator =\r\n                  new Negotiator(context);\r\n              negotiator.WithContentType(''text/xml'');\r\n\r\n              return negotiator;\r\n            });\r\n          })", span="185-198"];
m4_125 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_content_headers_to_response()", file="ContentNegotiationFixture.cs", label="var brower = new Browser(with =>\r\n          {\r\n            with.ResponseProcessor<TestProcessor>();\r\n\r\n            with.Module(module);\r\n          })", span="200-205"];
m4_126 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_content_headers_to_response()", file="ContentNegotiationFixture.cs", label="var response = brower.Get(''/headers'')", span="208-208"];
m4_127 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_content_headers_to_response()", file="ContentNegotiationFixture.cs", label="Assert.Equal(''text/xml'', response.Context.Response.ContentType)", span="211-211"];
m4_128 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_content_headers_to_response()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_content_headers_to_response()", span="181-181"];
m4_103 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_reason_phrase_on_response()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_reason_phrase_on_response()", span="148-148"];
m4_104 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_reason_phrase_on_response()", file="ContentNegotiationFixture.cs", label="var module = new ConfigurableNancyModule(with =>\r\n            {\r\n                with.Get(''/customPhrase'', (x, m) =>\r\n                {\r\n                    var context =\r\n                        new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n                    var negotiator =\r\n                        new Negotiator(context);\r\n                    negotiator.WithReasonPhrase(''The test is passing!'');\r\n\r\n                    return negotiator;\r\n                });\r\n            })", span="151-164"];
m4_105 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_reason_phrase_on_response()", file="ContentNegotiationFixture.cs", label="var brower = new Browser(with =>\r\n            {\r\n                with.ResponseProcessor<TestProcessor>();\r\n\r\n                with.Module(module);\r\n            })", span="166-171"];
m4_106 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_reason_phrase_on_response()", file="ContentNegotiationFixture.cs", label="var response = brower.Get(''/customPhrase'')", span="174-174"];
m4_107 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_reason_phrase_on_response()", file="ContentNegotiationFixture.cs", label="Assert.Equal(''The test is passing!'', response.ReasonPhrase)", span="177-177"];
m4_108 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_reason_phrase_on_response()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_reason_phrase_on_response()", span="148-148"];
m4_463 [cluster="Nancy.Responses.Negotiation.ProcessorMatch.ProcessorMatch()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Responses.Negotiation.ProcessorMatch.ProcessorMatch()", span="5-5"];
m4_247 [cluster="Nancy.Responses.Negotiation.Negotiator.WithModel(dynamic)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Responses.Negotiation.Negotiator.WithModel(dynamic)", span="135-135"];
m4_464 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.TestProcessor.Process(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.TestProcessor.Process(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", span="681-681"];
m4_465 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.TestProcessor.Process(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", file="ContentNegotiationFixture.cs", label="return string.Format(ResponseTemplate, requestedMediaRange, model == null ? ''None'' : model.GetType());", span="683-683"];
m4_466 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.TestProcessor.Process(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.TestProcessor.Process(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", span="681-681"];
m4_76 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_headers_to_response()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_headers_to_response()", span="113-113"];
m4_77 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_headers_to_response()", file="ContentNegotiationFixture.cs", label="var module = new ConfigurableNancyModule(with =>\r\n            {\r\n                with.Get(''/headers'', (x, m) =>\r\n                {\r\n                    var context =\r\n                        new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n                    var negotiator =\r\n                        new Negotiator(context);\r\n                    negotiator.WithHeader(''foo'', ''bar'');\r\n\r\n                    return negotiator;\r\n                });\r\n            })", span="117-130"];
m4_78 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_headers_to_response()", file="ContentNegotiationFixture.cs", label="var brower = new Browser(with =>\r\n            {\r\n                with.ResponseProcessor<TestProcessor>();\r\n\r\n                with.Module(module);\r\n            })", span="132-137"];
m4_79 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_headers_to_response()", file="ContentNegotiationFixture.cs", label="var response = brower.Get(''/headers'')", span="140-140"];
m4_80 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_headers_to_response()", file="ContentNegotiationFixture.cs", label="Assert.True(response.Headers.ContainsKey(''foo''))", span="143-143"];
m4_81 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_headers_to_response()", file="ContentNegotiationFixture.cs", label="Assert.Equal(''bar'', response.Headers[''foo''])", span="144-144"];
m4_82 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_headers_to_response()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_headers_to_response()", span="113-113"];
m4_360 [cluster="Nancy.Responses.Negotiation.Negotiator.WithCookie(Nancy.Cookies.INancyCookie)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Responses.Negotiation.Negotiator.WithCookie(Nancy.Cookies.INancyCookie)", span="16-16"];
m4_497 [file="ContentNegotiationFixture.cs", label=module, span=""];
m4_498 [file="ContentNegotiationFixture.cs", label=module, span=""];
m4_499 [file="ContentNegotiationFixture.cs", label=module, span=""];
m4_500 [file="ContentNegotiationFixture.cs", label=module, span=""];
m4_501 [file="ContentNegotiationFixture.cs", label=module, span=""];
m4_502 [file="ContentNegotiationFixture.cs", label=module, span=""];
m4_503 [file="ContentNegotiationFixture.cs", label=module, span=""];
m4_504 [file="ContentNegotiationFixture.cs", label=negotiatedCookie, span=""];
m4_505 [file="ContentNegotiationFixture.cs", label=browser, span=""];
m4_506 [file="ContentNegotiationFixture.cs", label=string, span=""];
m4_507 [file="ContentNegotiationFixture.cs", label=browser, span=""];
m4_508 [file="ContentNegotiationFixture.cs", label="System.Action<Nancy.Responses.Negotiation.Negotiator>", span=""];
m4_509 [file="ContentNegotiationFixture.cs", label="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.NegotiationModule", span=""];
m5_3 [cluster="System.DateTime.TryParseExact(string, string, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTime)", file="CustomDateTimeRouteSegmenConstraint.cs", label="Entry System.DateTime.TryParseExact(string, string, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTime)", span="0-0"];
m5_0 [cluster="Nancy.Routing.Constraints.CustomDateTimeRouteSegmenConstraint.TryMatch(string, string[], out System.DateTime)", file="CustomDateTimeRouteSegmenConstraint.cs", label="Entry Nancy.Routing.Constraints.CustomDateTimeRouteSegmenConstraint.TryMatch(string, string[], out System.DateTime)", span="12-12"];
m5_1 [cluster="Nancy.Routing.Constraints.CustomDateTimeRouteSegmenConstraint.TryMatch(string, string[], out System.DateTime)", file="CustomDateTimeRouteSegmenConstraint.cs", label="return DateTime.TryParseExact(segment,\r\n                parameters[0],\r\n                CultureInfo.InvariantCulture,\r\n                DateTimeStyles.None,\r\n                out matchedValue);", span="14-18"];
m5_2 [cluster="Nancy.Routing.Constraints.CustomDateTimeRouteSegmenConstraint.TryMatch(string, string[], out System.DateTime)", file="CustomDateTimeRouteSegmenConstraint.cs", label="Exit Nancy.Routing.Constraints.CustomDateTimeRouteSegmenConstraint.TryMatch(string, string[], out System.DateTime)", span="12-12"];
m6_0 [cluster="Nancy.Validation.DataAnnotations.DataAnnotationsValidatorAdapter.DataAnnotationsValidatorAdapter(string)", file="DataAnnotationsValidatorAdapter.cs", label="Entry Nancy.Validation.DataAnnotations.DataAnnotationsValidatorAdapter.DataAnnotationsValidatorAdapter(string)", span="17-17"];
m6_1 [cluster="Nancy.Validation.DataAnnotations.DataAnnotationsValidatorAdapter.DataAnnotationsValidatorAdapter(string)", file="DataAnnotationsValidatorAdapter.cs", label="this.ruleType = ruleType", span="19-19"];
m6_2 [cluster="Nancy.Validation.DataAnnotations.DataAnnotationsValidatorAdapter.DataAnnotationsValidatorAdapter(string)", file="DataAnnotationsValidatorAdapter.cs", label="Exit Nancy.Validation.DataAnnotations.DataAnnotationsValidatorAdapter.DataAnnotationsValidatorAdapter(string)", span="17-17"];
m6_19 [cluster="Unk.GetValidationResult", file="DataAnnotationsValidatorAdapter.cs", label="Entry Unk.GetValidationResult", span=""];
m6_3 [cluster="Nancy.Validation.DataAnnotations.DataAnnotationsValidatorAdapter.CanHandle(ValidationAttribute)", file="DataAnnotationsValidatorAdapter.cs", label="Entry Nancy.Validation.DataAnnotations.DataAnnotationsValidatorAdapter.CanHandle(ValidationAttribute)", span="28-28"];
m6_4 [cluster="Nancy.Validation.DataAnnotations.DataAnnotationsValidatorAdapter.CanHandle(ValidationAttribute)", file="DataAnnotationsValidatorAdapter.cs", label="Exit Nancy.Validation.DataAnnotations.DataAnnotationsValidatorAdapter.CanHandle(ValidationAttribute)", span="28-28"];
m6_17 [cluster="ValidationContext.cstr", file="DataAnnotationsValidatorAdapter.cs", label="Entry ValidationContext.cstr", span=""];
m6_18 [cluster="System.ComponentModel.PropertyDescriptor.GetValue(object)", file="DataAnnotationsValidatorAdapter.cs", label="Entry System.ComponentModel.PropertyDescriptor.GetValue(object)", span="0-0"];
m6_5 [cluster="Nancy.Validation.DataAnnotations.DataAnnotationsValidatorAdapter.GetRules(ValidationAttribute, System.ComponentModel.PropertyDescriptor)", file="DataAnnotationsValidatorAdapter.cs", label="Entry Nancy.Validation.DataAnnotations.DataAnnotationsValidatorAdapter.GetRules(ValidationAttribute, System.ComponentModel.PropertyDescriptor)", span="36-36"];
m6_6 [cluster="Nancy.Validation.DataAnnotations.DataAnnotationsValidatorAdapter.GetRules(ValidationAttribute, System.ComponentModel.PropertyDescriptor)", file="DataAnnotationsValidatorAdapter.cs", label="yield return new ModelValidationRule(ruleType, attribute.FormatErrorMessage, descriptor == null ? null : new[] { descriptor.Name });", span="38-38"];
m6_7 [cluster="Nancy.Validation.DataAnnotations.DataAnnotationsValidatorAdapter.GetRules(ValidationAttribute, System.ComponentModel.PropertyDescriptor)", file="DataAnnotationsValidatorAdapter.cs", label="Exit Nancy.Validation.DataAnnotations.DataAnnotationsValidatorAdapter.GetRules(ValidationAttribute, System.ComponentModel.PropertyDescriptor)", span="36-36"];
m6_20 [cluster="ModelValidationError.cstr", file="DataAnnotationsValidatorAdapter.cs", label="Entry ModelValidationError.cstr", span=""];
m6_8 [cluster="ModelValidationRule.cstr", file="DataAnnotationsValidatorAdapter.cs", label="Entry ModelValidationRule.cstr", span=""];
m6_9 [cluster="Nancy.Validation.DataAnnotations.DataAnnotationsValidatorAdapter.Validate(object, ValidationAttribute, System.ComponentModel.PropertyDescriptor)", file="DataAnnotationsValidatorAdapter.cs", label="Entry Nancy.Validation.DataAnnotations.DataAnnotationsValidatorAdapter.Validate(object, ValidationAttribute, System.ComponentModel.PropertyDescriptor)", span="48-48"];
m6_10 [cluster="Nancy.Validation.DataAnnotations.DataAnnotationsValidatorAdapter.Validate(object, ValidationAttribute, System.ComponentModel.PropertyDescriptor)", file="DataAnnotationsValidatorAdapter.cs", label="var context = \r\n                new ValidationContext(instance, null, null)\r\n                {\r\n                    MemberName = descriptor == null ? null : descriptor.Name\r\n                }", span="50-54"];
m6_11 [cluster="Nancy.Validation.DataAnnotations.DataAnnotationsValidatorAdapter.Validate(object, ValidationAttribute, System.ComponentModel.PropertyDescriptor)", file="DataAnnotationsValidatorAdapter.cs", label="descriptor != null", span="56-56"];
m6_12 [cluster="Nancy.Validation.DataAnnotations.DataAnnotationsValidatorAdapter.Validate(object, ValidationAttribute, System.ComponentModel.PropertyDescriptor)", file="DataAnnotationsValidatorAdapter.cs", label="instance = descriptor.GetValue(instance)", span="58-58"];
m6_13 [cluster="Nancy.Validation.DataAnnotations.DataAnnotationsValidatorAdapter.Validate(object, ValidationAttribute, System.ComponentModel.PropertyDescriptor)", file="DataAnnotationsValidatorAdapter.cs", label="var result = \r\n                attribute.GetValidationResult(instance, context)", span="61-62"];
m6_14 [cluster="Nancy.Validation.DataAnnotations.DataAnnotationsValidatorAdapter.Validate(object, ValidationAttribute, System.ComponentModel.PropertyDescriptor)", file="DataAnnotationsValidatorAdapter.cs", label="result != null", span="64-64"];
m6_16 [cluster="Nancy.Validation.DataAnnotations.DataAnnotationsValidatorAdapter.Validate(object, ValidationAttribute, System.ComponentModel.PropertyDescriptor)", file="DataAnnotationsValidatorAdapter.cs", label="Exit Nancy.Validation.DataAnnotations.DataAnnotationsValidatorAdapter.Validate(object, ValidationAttribute, System.ComponentModel.PropertyDescriptor)", span="48-48"];
m6_21 [file="DataAnnotationsValidatorAdapter.cs", label="Nancy.Validation.DataAnnotations.DataAnnotationsValidatorAdapter", span=""];
m8_0 [cluster="Nancy.Routing.Constraints.DateTimeRouteSegmentConstraint.TryMatch(string, string, out System.DateTime)", file="DateTimeRouteSegmentConstraint.cs", label="Entry Nancy.Routing.Constraints.DateTimeRouteSegmentConstraint.TryMatch(string, string, out System.DateTime)", span="11-11"];
m8_1 [cluster="Nancy.Routing.Constraints.DateTimeRouteSegmentConstraint.TryMatch(string, string, out System.DateTime)", file="DateTimeRouteSegmentConstraint.cs", label="return DateTime.TryParse(segment, out matchedValue);", span="13-13"];
m8_2 [cluster="Nancy.Routing.Constraints.DateTimeRouteSegmentConstraint.TryMatch(string, string, out System.DateTime)", file="DateTimeRouteSegmentConstraint.cs", label="Exit Nancy.Routing.Constraints.DateTimeRouteSegmentConstraint.TryMatch(string, string, out System.DateTime)", span="11-11"];
m8_3 [cluster="System.DateTime.TryParse(string, out System.DateTime)", file="DateTimeRouteSegmentConstraint.cs", label="Entry System.DateTime.TryParse(string, out System.DateTime)", span="0-0"];
m9_0 [cluster="Nancy.Routing.Constraints.DecimalRouteSegmentConstraint.TryMatch(string, string, out decimal)", file="DecimalRouteSegmentConstraint.cs", label="Entry Nancy.Routing.Constraints.DecimalRouteSegmentConstraint.TryMatch(string, string, out decimal)", span="11-11"];
m9_1 [cluster="Nancy.Routing.Constraints.DecimalRouteSegmentConstraint.TryMatch(string, string, out decimal)", file="DecimalRouteSegmentConstraint.cs", label="return decimal.TryParse(segment, NumberStyles.Number, CultureInfo.InvariantCulture, out matchedValue);", span="13-13"];
m9_2 [cluster="Nancy.Routing.Constraints.DecimalRouteSegmentConstraint.TryMatch(string, string, out decimal)", file="DecimalRouteSegmentConstraint.cs", label="Exit Nancy.Routing.Constraints.DecimalRouteSegmentConstraint.TryMatch(string, string, out decimal)", span="11-11"];
m9_3 [cluster="decimal.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out decimal)", file="DecimalRouteSegmentConstraint.cs", label="Entry decimal.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out decimal)", span="0-0"];
m10_6 [cluster="Unk.Validate", file="DefaultValidatableObjectAdapter.cs", label="Entry Unk.Validate", span=""];
m10_0 [cluster="Nancy.Validation.DataAnnotations.DefaultValidatableObjectAdapter.Validate(object)", file="DefaultValidatableObjectAdapter.cs", label="Entry Nancy.Validation.DataAnnotations.DefaultValidatableObjectAdapter.Validate(object)", span="16-16"];
m10_1 [cluster="Nancy.Validation.DataAnnotations.DefaultValidatableObjectAdapter.Validate(object)", file="DefaultValidatableObjectAdapter.cs", label="var context =\r\n                new ValidationContext(instance, null, null)", span="18-19"];
m10_2 [cluster="Nancy.Validation.DataAnnotations.DefaultValidatableObjectAdapter.Validate(object)", file="DefaultValidatableObjectAdapter.cs", label="var result =\r\n                ((IValidatableObject)instance).Validate(context)", span="21-22"];
m10_3 [cluster="Nancy.Validation.DataAnnotations.DefaultValidatableObjectAdapter.Validate(object)", color=green, community=0, file="DefaultValidatableObjectAdapter.cs", label="return result.Select(r => new ModelValidationError(r.MemberNames, s => r.ErrorMessage));", prediction=8, span="24-24"];
m10_4 [cluster="Nancy.Validation.DataAnnotations.DefaultValidatableObjectAdapter.Validate(object)", file="DefaultValidatableObjectAdapter.cs", label="Exit Nancy.Validation.DataAnnotations.DefaultValidatableObjectAdapter.Validate(object)", span="16-16"];
m10_5 [cluster="ValidationContext.cstr", file="DefaultValidatableObjectAdapter.cs", label="Entry ValidationContext.cstr", span=""];
m10_11 [cluster="ModelValidationError.cstr", file="DefaultValidatableObjectAdapter.cs", label="Entry ModelValidationError.cstr", span=""];
m10_12 [cluster="lambda expression", file="DefaultValidatableObjectAdapter.cs", label="Entry lambda expression", span="24-24"];
m10_8 [cluster="lambda expression", file="DefaultValidatableObjectAdapter.cs", label="Entry lambda expression", span="24-24"];
m10_9 [cluster="lambda expression", color=green, community=0, file="DefaultValidatableObjectAdapter.cs", label="new ModelValidationError(r.MemberNames, s => r.ErrorMessage)", prediction=9, span="24-24"];
m10_13 [cluster="lambda expression", color=green, community=0, file="DefaultValidatableObjectAdapter.cs", label="r.ErrorMessage", prediction=10, span="24-24"];
m10_10 [cluster="lambda expression", file="DefaultValidatableObjectAdapter.cs", label="Exit lambda expression", span="24-24"];
m10_14 [cluster="lambda expression", file="DefaultValidatableObjectAdapter.cs", label="Exit lambda expression", span="24-24"];
m10_7 [cluster="Unk.Select", file="DefaultValidatableObjectAdapter.cs", label="Entry Unk.Select", span=""];
m10_15 [file="DefaultValidatableObjectAdapter.cs", label="?", span=""];
m11_35 [cluster="Nancy.DynamicDictionary.Equals(object)", file="DynamicDictionary.cs", label="Entry Nancy.DynamicDictionary.Equals(object)", span="143-143"];
m11_36 [cluster="Nancy.DynamicDictionary.Equals(object)", file="DynamicDictionary.cs", label="ReferenceEquals(null, obj)", span="145-145"];
m11_38 [cluster="Nancy.DynamicDictionary.Equals(object)", file="DynamicDictionary.cs", label="ReferenceEquals(this, obj)", span="150-150"];
m11_40 [cluster="Nancy.DynamicDictionary.Equals(object)", file="DynamicDictionary.cs", label="return obj.GetType() == typeof (DynamicDictionary) && this.Equals((DynamicDictionary) obj);", span="155-155"];
m11_37 [cluster="Nancy.DynamicDictionary.Equals(object)", file="DynamicDictionary.cs", label="return false;", span="147-147"];
m11_39 [cluster="Nancy.DynamicDictionary.Equals(object)", file="DynamicDictionary.cs", label="return true;", span="152-152"];
m11_41 [cluster="Nancy.DynamicDictionary.Equals(object)", file="DynamicDictionary.cs", label="Exit Nancy.DynamicDictionary.Equals(object)", span="143-143"];
m11_56 [cluster="Nancy.DynamicDictionary.ContainsKey(string)", file="DynamicDictionary.cs", label="Entry Nancy.DynamicDictionary.ContainsKey(string)", span="201-201"];
m11_57 [cluster="Nancy.DynamicDictionary.ContainsKey(string)", file="DynamicDictionary.cs", label="return this.dictionary.ContainsKey(key);", span="203-203"];
m11_58 [cluster="Nancy.DynamicDictionary.ContainsKey(string)", file="DynamicDictionary.cs", label="Exit Nancy.DynamicDictionary.ContainsKey(string)", span="201-201"];
m11_28 [cluster="Nancy.DynamicDictionary.Equals(Nancy.DynamicDictionary)", file="DynamicDictionary.cs", label="Entry Nancy.DynamicDictionary.Equals(Nancy.DynamicDictionary)", span="128-128"];
m11_29 [cluster="Nancy.DynamicDictionary.Equals(Nancy.DynamicDictionary)", file="DynamicDictionary.cs", label="ReferenceEquals(null, other)", span="130-130"];
m11_31 [cluster="Nancy.DynamicDictionary.Equals(Nancy.DynamicDictionary)", file="DynamicDictionary.cs", label="return ReferenceEquals(this, other) || Equals(other.dictionary, this.dictionary);", span="135-135"];
m11_30 [cluster="Nancy.DynamicDictionary.Equals(Nancy.DynamicDictionary)", file="DynamicDictionary.cs", label="return false;", span="132-132"];
m11_32 [cluster="Nancy.DynamicDictionary.Equals(Nancy.DynamicDictionary)", file="DynamicDictionary.cs", label="Exit Nancy.DynamicDictionary.Equals(Nancy.DynamicDictionary)", span="128-128"];
m11_7 [cluster="Nancy.DynamicDictionary.TrySetMember(System.Dynamic.SetMemberBinder, object)", file="DynamicDictionary.cs", label="Entry Nancy.DynamicDictionary.TrySetMember(System.Dynamic.SetMemberBinder, object)", span="49-49"];
m11_8 [cluster="Nancy.DynamicDictionary.TrySetMember(System.Dynamic.SetMemberBinder, object)", file="DynamicDictionary.cs", label="this[binder.Name] = value", span="51-51"];
m11_9 [cluster="Nancy.DynamicDictionary.TrySetMember(System.Dynamic.SetMemberBinder, object)", file="DynamicDictionary.cs", label="return true;", span="52-52"];
m11_10 [cluster="Nancy.DynamicDictionary.TrySetMember(System.Dynamic.SetMemberBinder, object)", file="DynamicDictionary.cs", label="Exit Nancy.DynamicDictionary.TrySetMember(System.Dynamic.SetMemberBinder, object)", span="49-49"];
m11_81 [cluster="Nancy.DynamicDictionary.Remove(System.Collections.Generic.KeyValuePair<string, dynamic>)", file="DynamicDictionary.cs", label="Entry Nancy.DynamicDictionary.Remove(System.Collections.Generic.KeyValuePair<string, dynamic>)", span="291-291"];
m11_82 [cluster="Nancy.DynamicDictionary.Remove(System.Collections.Generic.KeyValuePair<string, dynamic>)", file="DynamicDictionary.cs", label="var dynamicValueKeyValuePair = \r\n                GetDynamicKeyValuePair(item)", span="293-294"];
m11_83 [cluster="Nancy.DynamicDictionary.Remove(System.Collections.Generic.KeyValuePair<string, dynamic>)", file="DynamicDictionary.cs", label="return this.dictionary.Remove(dynamicValueKeyValuePair);", span="296-296"];
m11_84 [cluster="Nancy.DynamicDictionary.Remove(System.Collections.Generic.KeyValuePair<string, dynamic>)", file="DynamicDictionary.cs", label="Exit Nancy.DynamicDictionary.Remove(System.Collections.Generic.KeyValuePair<string, dynamic>)", span="291-291"];
m11_49 [cluster="object.GetHashCode()", file="DynamicDictionary.cs", label="Entry object.GetHashCode()", span="0-0"];
m11_42 [cluster="object.GetType()", file="DynamicDictionary.cs", label="Entry object.GetType()", span="0-0"];
m11_53 [cluster="Nancy.DynamicDictionary.Add(System.Collections.Generic.KeyValuePair<string, dynamic>)", file="DynamicDictionary.cs", label="Entry Nancy.DynamicDictionary.Add(System.Collections.Generic.KeyValuePair<string, dynamic>)", span="190-190"];
m11_54 [cluster="Nancy.DynamicDictionary.Add(System.Collections.Generic.KeyValuePair<string, dynamic>)", file="DynamicDictionary.cs", label="this[item.Key] = item.Value", span="192-192"];
m11_55 [cluster="Nancy.DynamicDictionary.Add(System.Collections.Generic.KeyValuePair<string, dynamic>)", file="DynamicDictionary.cs", label="Exit Nancy.DynamicDictionary.Add(System.Collections.Generic.KeyValuePair<string, dynamic>)", span="190-190"];
m11_76 [cluster="System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", file="DynamicDictionary.cs", label="Entry System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", span="0-0"];
m11_89 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="DynamicDictionary.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m11_67 [cluster="Nancy.DynamicDictionary.Contains(System.Collections.Generic.KeyValuePair<string, dynamic>)", file="DynamicDictionary.cs", label="Entry Nancy.DynamicDictionary.Contains(System.Collections.Generic.KeyValuePair<string, dynamic>)", span="249-249"];
m11_68 [cluster="Nancy.DynamicDictionary.Contains(System.Collections.Generic.KeyValuePair<string, dynamic>)", file="DynamicDictionary.cs", label="var dynamicValueKeyValuePair =\r\n                GetDynamicKeyValuePair(item)", span="251-252"];
m11_69 [cluster="Nancy.DynamicDictionary.Contains(System.Collections.Generic.KeyValuePair<string, dynamic>)", file="DynamicDictionary.cs", label="return this.dictionary.Contains(dynamicValueKeyValuePair);", span="254-254"];
m11_70 [cluster="Nancy.DynamicDictionary.Contains(System.Collections.Generic.KeyValuePair<string, dynamic>)", file="DynamicDictionary.cs", label="Exit Nancy.DynamicDictionary.Contains(System.Collections.Generic.KeyValuePair<string, dynamic>)", span="249-249"];
m11_93 [cluster="string.Replace(string, string)", file="DynamicDictionary.cs", label="Entry string.Replace(string, string)", span="0-0"];
m11_11 [cluster="Nancy.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder, out object)", file="DynamicDictionary.cs", label="Entry Nancy.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder, out object)", span="60-60"];
m11_12 [cluster="Nancy.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder, out object)", file="DynamicDictionary.cs", label="!dictionary.TryGetValue(binder.Name, out result)", span="62-62"];
m11_13 [cluster="Nancy.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder, out object)", file="DynamicDictionary.cs", label="result = new DynamicDictionaryValue(null)", span="64-64"];
m11_14 [cluster="Nancy.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder, out object)", file="DynamicDictionary.cs", label="return true;", span="67-67"];
m11_15 [cluster="Nancy.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder, out object)", file="DynamicDictionary.cs", label="Exit Nancy.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder, out object)", span="60-60"];
m11_90 [cluster="Nancy.DynamicDictionary.GetNeutralKey(string)", file="DynamicDictionary.cs", label="Entry Nancy.DynamicDictionary.GetNeutralKey(string)", span="315-315"];
m11_91 [cluster="Nancy.DynamicDictionary.GetNeutralKey(string)", file="DynamicDictionary.cs", label="return key.Replace(''-'', string.Empty);", span="317-317"];
m11_92 [cluster="Nancy.DynamicDictionary.GetNeutralKey(string)", file="DynamicDictionary.cs", label="Exit Nancy.DynamicDictionary.GetNeutralKey(string)", span="315-315"];
m11_18 [cluster="Nancy.DynamicDictionary.GetDynamicMemberNames()", file="DynamicDictionary.cs", label="Entry Nancy.DynamicDictionary.GetDynamicMemberNames()", span="74-74"];
m11_19 [cluster="Nancy.DynamicDictionary.GetDynamicMemberNames()", file="DynamicDictionary.cs", label="return dictionary.Keys;", span="76-76"];
m11_20 [cluster="Nancy.DynamicDictionary.GetDynamicMemberNames()", file="DynamicDictionary.cs", label="Exit Nancy.DynamicDictionary.GetDynamicMemberNames()", span="74-74"];
m11_43 [cluster="Nancy.DynamicDictionary.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, object>>.GetEnumerator()", file="DynamicDictionary.cs", label="Entry Nancy.DynamicDictionary.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, object>>.GetEnumerator()", span="162-162"];
m11_44 [cluster="Nancy.DynamicDictionary.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, object>>.GetEnumerator()", file="DynamicDictionary.cs", label="return this.dictionary.GetEnumerator();", span="164-164"];
m11_45 [cluster="Nancy.DynamicDictionary.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, object>>.GetEnumerator()", file="DynamicDictionary.cs", label="Exit Nancy.DynamicDictionary.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, object>>.GetEnumerator()", span="162-162"];
m11_80 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Remove(TKey)", file="DynamicDictionary.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m11_66 [cluster="System.Collections.Generic.ICollection<T>.Clear()", file="DynamicDictionary.cs", label="Entry System.Collections.Generic.ICollection<T>.Clear()", span="0-0"];
m11_46 [cluster="Nancy.DynamicDictionary.GetHashCode()", file="DynamicDictionary.cs", label="Entry Nancy.DynamicDictionary.GetHashCode()", span="171-171"];
m11_47 [cluster="Nancy.DynamicDictionary.GetHashCode()", file="DynamicDictionary.cs", label="return (dictionary != null ? dictionary.GetHashCode() : 0);", span="173-173"];
m11_48 [cluster="Nancy.DynamicDictionary.GetHashCode()", file="DynamicDictionary.cs", label="Exit Nancy.DynamicDictionary.GetHashCode()", span="171-171"];
m11_63 [cluster="Nancy.DynamicDictionary.Clear()", file="DynamicDictionary.cs", label="Entry Nancy.DynamicDictionary.Clear()", span="229-229"];
m11_64 [cluster="Nancy.DynamicDictionary.Clear()", file="DynamicDictionary.cs", label="this.dictionary.Clear()", span="231-231"];
m11_65 [cluster="Nancy.DynamicDictionary.Clear()", file="DynamicDictionary.cs", label="Exit Nancy.DynamicDictionary.Clear()", span="229-229"];
m11_17 [cluster="Nancy.DynamicDictionaryValue.DynamicDictionaryValue(object)", file="DynamicDictionary.cs", label="Entry Nancy.DynamicDictionaryValue.DynamicDictionaryValue(object)", span="17-17"];
m11_73 [cluster="Nancy.DynamicDictionary.CopyTo(System.Collections.Generic.KeyValuePair<string, dynamic>[], int)", file="DynamicDictionary.cs", label="Entry Nancy.DynamicDictionary.CopyTo(System.Collections.Generic.KeyValuePair<string, dynamic>[], int)", span="262-262"];
m11_74 [cluster="Nancy.DynamicDictionary.CopyTo(System.Collections.Generic.KeyValuePair<string, dynamic>[], int)", file="DynamicDictionary.cs", label="this.dictionary.CopyTo(array, arrayIndex)", span="264-264"];
m11_75 [cluster="Nancy.DynamicDictionary.CopyTo(System.Collections.Generic.KeyValuePair<string, dynamic>[], int)", file="DynamicDictionary.cs", label="Exit Nancy.DynamicDictionary.CopyTo(System.Collections.Generic.KeyValuePair<string, dynamic>[], int)", span="262-262"];
m11_0 [cluster="Nancy.DynamicDictionary.Create(System.Collections.Generic.IDictionary<string, object>)", file="DynamicDictionary.cs", label="Entry Nancy.DynamicDictionary.Create(System.Collections.Generic.IDictionary<string, object>)", span="32-32"];
m11_1 [cluster="Nancy.DynamicDictionary.Create(System.Collections.Generic.IDictionary<string, object>)", file="DynamicDictionary.cs", label="var instance = new DynamicDictionary()", span="34-34"];
m11_2 [cluster="Nancy.DynamicDictionary.Create(System.Collections.Generic.IDictionary<string, object>)", file="DynamicDictionary.cs", label="values.Keys", span="36-36"];
m11_3 [cluster="Nancy.DynamicDictionary.Create(System.Collections.Generic.IDictionary<string, object>)", file="DynamicDictionary.cs", label="instance[key] = values[key]", span="38-38"];
m11_4 [cluster="Nancy.DynamicDictionary.Create(System.Collections.Generic.IDictionary<string, object>)", file="DynamicDictionary.cs", label="return instance;", span="41-41"];
m11_5 [cluster="Nancy.DynamicDictionary.Create(System.Collections.Generic.IDictionary<string, object>)", file="DynamicDictionary.cs", label="Exit Nancy.DynamicDictionary.Create(System.Collections.Generic.IDictionary<string, object>)", span="32-32"];
m11_50 [cluster="Nancy.DynamicDictionary.Add(string, dynamic)", file="DynamicDictionary.cs", label="Entry Nancy.DynamicDictionary.Add(string, dynamic)", span="181-181"];
m11_51 [cluster="Nancy.DynamicDictionary.Add(string, dynamic)", file="DynamicDictionary.cs", label="this[key] = value", span="183-183"];
m11_52 [cluster="Nancy.DynamicDictionary.Add(string, dynamic)", file="DynamicDictionary.cs", label="Exit Nancy.DynamicDictionary.Add(string, dynamic)", span="181-181"];
m11_59 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="DynamicDictionary.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m11_60 [cluster="Nancy.DynamicDictionary.TryGetValue(string, out dynamic)", file="DynamicDictionary.cs", label="Entry Nancy.DynamicDictionary.TryGetValue(string, out dynamic)", span="221-221"];
m11_61 [cluster="Nancy.DynamicDictionary.TryGetValue(string, out dynamic)", file="DynamicDictionary.cs", label="return this.dictionary.TryGetValue(key, out value);", span="223-223"];
m11_62 [cluster="Nancy.DynamicDictionary.TryGetValue(string, out dynamic)", file="DynamicDictionary.cs", label="Exit Nancy.DynamicDictionary.TryGetValue(string, out dynamic)", span="221-221"];
m11_72 [cluster="System.Collections.Generic.ICollection<T>.Contains(T)", file="DynamicDictionary.cs", label="Entry System.Collections.Generic.ICollection<T>.Contains(T)", span="0-0"];
m11_33 [cluster="object.ReferenceEquals(object, object)", file="DynamicDictionary.cs", label="Entry object.ReferenceEquals(object, object)", span="0-0"];
m11_77 [cluster="Nancy.DynamicDictionary.Remove(string)", file="DynamicDictionary.cs", label="Entry Nancy.DynamicDictionary.Remove(string)", span="281-281"];
m11_78 [cluster="Nancy.DynamicDictionary.Remove(string)", file="DynamicDictionary.cs", label="return this.dictionary.Remove(key);", span="283-283"];
m11_79 [cluster="Nancy.DynamicDictionary.Remove(string)", file="DynamicDictionary.cs", label="Exit Nancy.DynamicDictionary.Remove(string)", span="281-281"];
m11_16 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="DynamicDictionary.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m11_85 [cluster="System.Collections.Generic.ICollection<T>.Remove(T)", file="DynamicDictionary.cs", label="Entry System.Collections.Generic.ICollection<T>.Remove(T)", span="0-0"];
m11_34 [cluster="object.Equals(object, object)", file="DynamicDictionary.cs", label="Entry object.Equals(object, object)", span="0-0"];
m11_71 [cluster="Nancy.DynamicDictionary.GetDynamicKeyValuePair(System.Collections.Generic.KeyValuePair<string, dynamic>)", file="DynamicDictionary.cs", label="Entry Nancy.DynamicDictionary.GetDynamicKeyValuePair(System.Collections.Generic.KeyValuePair<string, dynamic>)", span="308-308"];
m11_86 [cluster="Nancy.DynamicDictionary.GetDynamicKeyValuePair(System.Collections.Generic.KeyValuePair<string, dynamic>)", file="DynamicDictionary.cs", label="var dynamicValueKeyValuePair =\r\n                new KeyValuePair<string, dynamic>(item.Key, new DynamicDictionaryValue(item.Value))", span="310-311"];
m11_87 [cluster="Nancy.DynamicDictionary.GetDynamicKeyValuePair(System.Collections.Generic.KeyValuePair<string, dynamic>)", file="DynamicDictionary.cs", label="return dynamicValueKeyValuePair;", span="312-312"];
m11_88 [cluster="Nancy.DynamicDictionary.GetDynamicKeyValuePair(System.Collections.Generic.KeyValuePair<string, dynamic>)", file="DynamicDictionary.cs", label="Exit Nancy.DynamicDictionary.GetDynamicKeyValuePair(System.Collections.Generic.KeyValuePair<string, dynamic>)", span="308-308"];
m11_24 [cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()", file="DynamicDictionary.cs", label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0"];
m11_6 [cluster="Nancy.DynamicDictionary.DynamicDictionary()", file="DynamicDictionary.cs", label="Entry Nancy.DynamicDictionary.DynamicDictionary()", span="10-10"];
m11_21 [cluster="Nancy.DynamicDictionary.GetEnumerator()", file="DynamicDictionary.cs", label="Entry Nancy.DynamicDictionary.GetEnumerator()", span="83-83"];
m11_22 [cluster="Nancy.DynamicDictionary.GetEnumerator()", file="DynamicDictionary.cs", label="return dictionary.Keys.GetEnumerator();", span="85-85"];
m11_23 [cluster="Nancy.DynamicDictionary.GetEnumerator()", file="DynamicDictionary.cs", label="Exit Nancy.DynamicDictionary.GetEnumerator()", span="83-83"];
m11_25 [cluster="Nancy.DynamicDictionary.System.Collections.IEnumerable.GetEnumerator()", file="DynamicDictionary.cs", label="Entry Nancy.DynamicDictionary.System.Collections.IEnumerable.GetEnumerator()", span="92-92"];
m11_26 [cluster="Nancy.DynamicDictionary.System.Collections.IEnumerable.GetEnumerator()", file="DynamicDictionary.cs", label="return dictionary.Keys.GetEnumerator();", span="94-94"];
m11_27 [cluster="Nancy.DynamicDictionary.System.Collections.IEnumerable.GetEnumerator()", file="DynamicDictionary.cs", label="Exit Nancy.DynamicDictionary.System.Collections.IEnumerable.GetEnumerator()", span="92-92"];
m11_94 [file="DynamicDictionary.cs", label="Nancy.DynamicDictionary", span=""];
m13_27 [cluster="Unk.GetRulesForMember", file="FluentValidationValidator.cs", label="Entry Unk.GetRulesForMember", span=""];
m13_25 [cluster="System.Collections.Generic.List<T>.List()", file="FluentValidationValidator.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m13_44 [cluster="Nancy.Validation.FluentValidation.FluentValidationValidator.GetValidationRule(PropertyRule, IPropertyValidator)", file="FluentValidationValidator.cs", label="Entry Nancy.Validation.FluentValidation.FluentValidationValidator.GetValidationRule(PropertyRule, IPropertyValidator)", span="98-98"];
m13_45 [cluster="Nancy.Validation.FluentValidation.FluentValidationValidator.GetValidationRule(PropertyRule, IPropertyValidator)", file="FluentValidationValidator.cs", label="return this.factory.Create(propertyValidator).GetRules(rule, propertyValidator);", span="100-100"];
m13_46 [cluster="Nancy.Validation.FluentValidation.FluentValidationValidator.GetValidationRule(PropertyRule, IPropertyValidator)", file="FluentValidationValidator.cs", label="Exit Nancy.Validation.FluentValidation.FluentValidationValidator.GetValidationRule(PropertyRule, IPropertyValidator)", span="98-98"];
m13_40 [cluster="ModelValidationError.cstr", file="FluentValidationValidator.cs", label="Entry ModelValidationError.cstr", span=""];
m13_24 [cluster="Unk.CreateDescriptor", file="FluentValidationValidator.cs", label="Entry Unk.CreateDescriptor", span=""];
m13_48 [cluster="Nancy.Validation.FluentValidation.IFluentAdapter.GetRules(PropertyRule, IPropertyValidator)", file="FluentValidationValidator.cs", label="Entry Nancy.Validation.FluentValidation.IFluentAdapter.GetRules(PropertyRule, IPropertyValidator)", span="22-22"];
m13_10 [cluster="Unk.Validate", file="FluentValidationValidator.cs", label="Entry Unk.Validate", span=""];
m13_28 [cluster="Unk.>", file="FluentValidationValidator.cs", label="Entry Unk.>", span=""];
m13_12 [cluster="Nancy.Validation.ModelValidationResult.ModelValidationResult(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationError>)", file="FluentValidationValidator.cs", label="Entry Nancy.Validation.ModelValidationResult.ModelValidationResult(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationError>)", span="20-20"];
m13_31 [cluster="Nancy.Validation.ModelValidationDescriptor.ModelValidationDescriptor(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationRule>, System.Type)", file="FluentValidationValidator.cs", label="Entry Nancy.Validation.ModelValidationDescriptor.ModelValidationDescriptor(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationRule>, System.Type)", span="15-15"];
m13_0 [cluster="Nancy.Validation.FluentValidation.FluentValidationValidator.FluentValidationValidator(IValidator, Nancy.Validation.FluentValidation.IFluentAdapterFactory, System.Type)", file="FluentValidationValidator.cs", label="Entry Nancy.Validation.FluentValidation.FluentValidationValidator.FluentValidationValidator(IValidator, Nancy.Validation.FluentValidation.IFluentAdapterFactory, System.Type)", span="25-25"];
m13_1 [cluster="Nancy.Validation.FluentValidation.FluentValidationValidator.FluentValidationValidator(IValidator, Nancy.Validation.FluentValidation.IFluentAdapterFactory, System.Type)", file="FluentValidationValidator.cs", label="this.ModelType = modelType", span="27-27"];
m13_2 [cluster="Nancy.Validation.FluentValidation.FluentValidationValidator.FluentValidationValidator(IValidator, Nancy.Validation.FluentValidation.IFluentAdapterFactory, System.Type)", file="FluentValidationValidator.cs", label="this.validator = validator", span="28-28"];
m13_3 [cluster="Nancy.Validation.FluentValidation.FluentValidationValidator.FluentValidationValidator(IValidator, Nancy.Validation.FluentValidation.IFluentAdapterFactory, System.Type)", file="FluentValidationValidator.cs", label="this.factory = factory", span="29-29"];
m13_4 [cluster="Nancy.Validation.FluentValidation.FluentValidationValidator.FluentValidationValidator(IValidator, Nancy.Validation.FluentValidation.IFluentAdapterFactory, System.Type)", file="FluentValidationValidator.cs", label="Exit Nancy.Validation.FluentValidation.FluentValidationValidator.FluentValidationValidator(IValidator, Nancy.Validation.FluentValidation.IFluentAdapterFactory, System.Type)", span="25-25"];
m13_13 [cluster="Nancy.Validation.FluentValidation.FluentValidationValidator.CreateDescriptor()", file="FluentValidationValidator.cs", label="Entry Nancy.Validation.FluentValidation.FluentValidationValidator.CreateDescriptor()", span="63-63"];
m13_14 [cluster="Nancy.Validation.FluentValidation.FluentValidationValidator.CreateDescriptor()", file="FluentValidationValidator.cs", label="var fluentDescriptor =\r\n                this.validator.CreateDescriptor()", span="65-66"];
m13_15 [cluster="Nancy.Validation.FluentValidation.FluentValidationValidator.CreateDescriptor()", file="FluentValidationValidator.cs", label="var rules = new List<ModelValidationRule>()", span="68-68"];
m13_16 [cluster="Nancy.Validation.FluentValidation.FluentValidationValidator.CreateDescriptor()", file="FluentValidationValidator.cs", label="var membersWithValidators = \r\n                fluentDescriptor.GetMembersWithValidators()", span="70-71"];
m13_18 [cluster="Nancy.Validation.FluentValidation.FluentValidationValidator.CreateDescriptor()", file="FluentValidationValidator.cs", label="var fluentRules = fluentDescriptor\r\n                    .GetRulesForMember(memberWithValidators.Key)\r\n                    .OfType<PropertyRule>()", span="75-77"];
m13_21 [cluster="Nancy.Validation.FluentValidation.FluentValidationValidator.CreateDescriptor()", file="FluentValidationValidator.cs", label="rules.AddRange(GetValidationRule(rule, v))", span="83-83"];
m13_22 [cluster="Nancy.Validation.FluentValidation.FluentValidationValidator.CreateDescriptor()", file="FluentValidationValidator.cs", label="return new ModelValidationDescriptor(rules, this.ModelType);", span="88-88"];
m13_17 [cluster="Nancy.Validation.FluentValidation.FluentValidationValidator.CreateDescriptor()", file="FluentValidationValidator.cs", label=membersWithValidators, span="73-73"];
m13_19 [cluster="Nancy.Validation.FluentValidation.FluentValidationValidator.CreateDescriptor()", file="FluentValidationValidator.cs", label=fluentRules, span="79-79"];
m13_20 [cluster="Nancy.Validation.FluentValidation.FluentValidationValidator.CreateDescriptor()", file="FluentValidationValidator.cs", label="rule.Validators", span="81-81"];
m13_23 [cluster="Nancy.Validation.FluentValidation.FluentValidationValidator.CreateDescriptor()", file="FluentValidationValidator.cs", label="Exit Nancy.Validation.FluentValidation.FluentValidationValidator.CreateDescriptor()", span="63-63"];
m13_32 [cluster="Nancy.Validation.FluentValidation.FluentValidationValidator.GetErrors(ValidationResult)", file="FluentValidationValidator.cs", label="Entry Nancy.Validation.FluentValidation.FluentValidationValidator.GetErrors(ValidationResult)", span="91-91"];
m13_33 [cluster="Nancy.Validation.FluentValidation.FluentValidationValidator.GetErrors(ValidationResult)", color=green, community=0, file="FluentValidationValidator.cs", label="return results.IsValid ? \r\n                Enumerable.Empty<ModelValidationError>() :\r\n                results.Errors.Select(error => new ModelValidationError(new[] { error.PropertyName }, s => error.ErrorMessage));", prediction=11, span="93-95"];
m13_34 [cluster="Nancy.Validation.FluentValidation.FluentValidationValidator.GetErrors(ValidationResult)", file="FluentValidationValidator.cs", label="Exit Nancy.Validation.FluentValidation.FluentValidationValidator.GetErrors(ValidationResult)", span="91-91"];
m13_11 [cluster="Unk.GetErrors", file="FluentValidationValidator.cs", label="Entry Unk.GetErrors", span=""];
m13_26 [cluster="Unk.GetMembersWithValidators", file="FluentValidationValidator.cs", label="Entry Unk.GetMembersWithValidators", span=""];
m13_5 [cluster="Nancy.Validation.FluentValidation.FluentValidationValidator.Validate(object, Nancy.NancyContext)", file="FluentValidationValidator.cs", label="Entry Nancy.Validation.FluentValidation.FluentValidationValidator.Validate(object, Nancy.NancyContext)", span="52-52"];
m13_6 [cluster="Nancy.Validation.FluentValidation.FluentValidationValidator.Validate(object, Nancy.NancyContext)", file="FluentValidationValidator.cs", label="var result =\r\n                this.validator.Validate(instance)", span="54-55"];
m13_7 [cluster="Nancy.Validation.FluentValidation.FluentValidationValidator.Validate(object, Nancy.NancyContext)", file="FluentValidationValidator.cs", label="var errors =\r\n                GetErrors(result)", span="57-58"];
m13_8 [cluster="Nancy.Validation.FluentValidation.FluentValidationValidator.Validate(object, Nancy.NancyContext)", file="FluentValidationValidator.cs", label="return new ModelValidationResult(errors);", span="60-60"];
m13_9 [cluster="Nancy.Validation.FluentValidation.FluentValidationValidator.Validate(object, Nancy.NancyContext)", file="FluentValidationValidator.cs", label="Exit Nancy.Validation.FluentValidation.FluentValidationValidator.Validate(object, Nancy.NancyContext)", span="52-52"];
m13_41 [cluster="lambda expression", file="FluentValidationValidator.cs", label="Entry lambda expression", span="95-95"];
m13_37 [cluster="lambda expression", file="FluentValidationValidator.cs", label="Entry lambda expression", span="95-95"];
m13_38 [cluster="lambda expression", color=green, community=0, file="FluentValidationValidator.cs", label="new ModelValidationError(new[] { error.PropertyName }, s => error.ErrorMessage)", prediction=12, span="95-95"];
m13_42 [cluster="lambda expression", color=green, community=0, file="FluentValidationValidator.cs", label="error.ErrorMessage", prediction=13, span="95-95"];
m13_39 [cluster="lambda expression", file="FluentValidationValidator.cs", label="Exit lambda expression", span="95-95"];
m13_43 [cluster="lambda expression", file="FluentValidationValidator.cs", label="Exit lambda expression", span="95-95"];
m13_36 [cluster="Unk.Select", file="FluentValidationValidator.cs", label="Entry Unk.Select", span=""];
m13_30 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="FluentValidationValidator.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m13_47 [cluster="Nancy.Validation.FluentValidation.IFluentAdapterFactory.Create(IPropertyValidator)", file="FluentValidationValidator.cs", label="Entry Nancy.Validation.FluentValidation.IFluentAdapterFactory.Create(IPropertyValidator)", span="14-14"];
m13_29 [cluster="Unk.GetValidationRule", file="FluentValidationValidator.cs", label="Entry Unk.GetValidationRule", span=""];
m13_35 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="FluentValidationValidator.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m13_49 [file="FluentValidationValidator.cs", label="Nancy.Validation.FluentValidation.FluentValidationValidator", span=""];
m13_50 [file="FluentValidationValidator.cs", label="?", span=""];
m14_3 [cluster="System.Guid.TryParse(string, out System.Guid)", file="GuidRouteSegmentConstraint.cs", label="Entry System.Guid.TryParse(string, out System.Guid)", span="0-0"];
m14_0 [cluster="Nancy.Routing.Constraints.GuidRouteSegmentConstraint.TryMatch(string, string, out System.Guid)", file="GuidRouteSegmentConstraint.cs", label="Entry Nancy.Routing.Constraints.GuidRouteSegmentConstraint.TryMatch(string, string, out System.Guid)", span="11-11"];
m14_1 [cluster="Nancy.Routing.Constraints.GuidRouteSegmentConstraint.TryMatch(string, string, out System.Guid)", file="GuidRouteSegmentConstraint.cs", label="return Guid.TryParse(segment, out matchedValue);", span="13-13"];
m14_2 [cluster="Nancy.Routing.Constraints.GuidRouteSegmentConstraint.TryMatch(string, string, out System.Guid)", file="GuidRouteSegmentConstraint.cs", label="Exit Nancy.Routing.Constraints.GuidRouteSegmentConstraint.TryMatch(string, string, out System.Guid)", span="11-11"];
m15_0 [cluster="Nancy.Routing.Constraints.IntRouteSegmentConstraint.TryMatch(string, string, out long)", file="IntRouteSegmentConstraint.cs", label="Entry Nancy.Routing.Constraints.IntRouteSegmentConstraint.TryMatch(string, string, out long)", span="11-11"];
m15_1 [cluster="Nancy.Routing.Constraints.IntRouteSegmentConstraint.TryMatch(string, string, out long)", file="IntRouteSegmentConstraint.cs", label="return long.TryParse(segment, NumberStyles.Integer, CultureInfo.InvariantCulture, out matchedValue);", span="13-13"];
m15_2 [cluster="Nancy.Routing.Constraints.IntRouteSegmentConstraint.TryMatch(string, string, out long)", file="IntRouteSegmentConstraint.cs", label="Exit Nancy.Routing.Constraints.IntRouteSegmentConstraint.TryMatch(string, string, out long)", span="11-11"];
m15_3 [cluster="long.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out long)", file="IntRouteSegmentConstraint.cs", label="Entry long.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out long)", span="0-0"];
m16_2 [cluster="Nancy.Routing.Constraints.IRouteSegmentConstraint.GetMatch(string, string, string)", file="IRouteSegmentConstraint.cs", label="Entry Nancy.Routing.Constraints.IRouteSegmentConstraint.GetMatch(string, string, string)", span="8-8"];
m16_3 [cluster="Nancy.Routing.Constraints.IRouteSegmentConstraint.GetMatch(string, string, string)", file="IRouteSegmentConstraint.cs", label="Exit Nancy.Routing.Constraints.IRouteSegmentConstraint.GetMatch(string, string, string)", span="8-8"];
m16_0 [cluster="Nancy.Routing.Constraints.IRouteSegmentConstraint.Matches(string)", file="IRouteSegmentConstraint.cs", label="Entry Nancy.Routing.Constraints.IRouteSegmentConstraint.Matches(string)", span="6-6"];
m16_1 [cluster="Nancy.Routing.Constraints.IRouteSegmentConstraint.Matches(string)", file="IRouteSegmentConstraint.cs", label="Exit Nancy.Routing.Constraints.IRouteSegmentConstraint.Matches(string)", span="6-6"];
m17_0 [cluster="Nancy.Routing.Constraints.LengthRouteSegmentConstraint.TryMatch(string, string[], out string)", file="LengthRouteSegmentConstraint.cs", label="Entry Nancy.Routing.Constraints.LengthRouteSegmentConstraint.TryMatch(string, string[], out string)", span="9-9"];
m17_1 [cluster="Nancy.Routing.Constraints.LengthRouteSegmentConstraint.TryMatch(string, string[], out string)", file="LengthRouteSegmentConstraint.cs", label="int minLength", span="11-11"];
m17_3 [cluster="Nancy.Routing.Constraints.LengthRouteSegmentConstraint.TryMatch(string, string[], out string)", file="LengthRouteSegmentConstraint.cs", label="parameters.Length == 2", span="14-14"];
m17_4 [cluster="Nancy.Routing.Constraints.LengthRouteSegmentConstraint.TryMatch(string, string[], out string)", file="LengthRouteSegmentConstraint.cs", label="!this.TryParseInt(parameters[0], out minLength) ||\r\n                    !this.TryParseInt(parameters[1], out maxLength)", span="16-17"];
m17_7 [cluster="Nancy.Routing.Constraints.LengthRouteSegmentConstraint.TryMatch(string, string[], out string)", file="LengthRouteSegmentConstraint.cs", label="parameters.Length == 1", span="23-23"];
m17_9 [cluster="Nancy.Routing.Constraints.LengthRouteSegmentConstraint.TryMatch(string, string[], out string)", file="LengthRouteSegmentConstraint.cs", label="!this.TryParseInt(parameters[0], out maxLength)", span="27-27"];
m17_14 [cluster="Nancy.Routing.Constraints.LengthRouteSegmentConstraint.TryMatch(string, string[], out string)", file="LengthRouteSegmentConstraint.cs", label="segment.Length < minLength || segment.Length > maxLength", span="39-39"];
m17_17 [cluster="Nancy.Routing.Constraints.LengthRouteSegmentConstraint.TryMatch(string, string[], out string)", file="LengthRouteSegmentConstraint.cs", label="matchedValue = segment", span="45-45"];
m17_2 [cluster="Nancy.Routing.Constraints.LengthRouteSegmentConstraint.TryMatch(string, string[], out string)", file="LengthRouteSegmentConstraint.cs", label="int maxLength", span="12-12"];
m17_5 [cluster="Nancy.Routing.Constraints.LengthRouteSegmentConstraint.TryMatch(string, string[], out string)", file="LengthRouteSegmentConstraint.cs", label="matchedValue = null", span="19-19"];
m17_6 [cluster="Nancy.Routing.Constraints.LengthRouteSegmentConstraint.TryMatch(string, string[], out string)", file="LengthRouteSegmentConstraint.cs", label="return false;", span="20-20"];
m17_8 [cluster="Nancy.Routing.Constraints.LengthRouteSegmentConstraint.TryMatch(string, string[], out string)", file="LengthRouteSegmentConstraint.cs", label="minLength = 0", span="25-25"];
m17_12 [cluster="Nancy.Routing.Constraints.LengthRouteSegmentConstraint.TryMatch(string, string[], out string)", file="LengthRouteSegmentConstraint.cs", label="matchedValue = null", span="35-35"];
m17_10 [cluster="Nancy.Routing.Constraints.LengthRouteSegmentConstraint.TryMatch(string, string[], out string)", file="LengthRouteSegmentConstraint.cs", label="matchedValue = null", span="29-29"];
m17_11 [cluster="Nancy.Routing.Constraints.LengthRouteSegmentConstraint.TryMatch(string, string[], out string)", file="LengthRouteSegmentConstraint.cs", label="return false;", span="30-30"];
m17_13 [cluster="Nancy.Routing.Constraints.LengthRouteSegmentConstraint.TryMatch(string, string[], out string)", file="LengthRouteSegmentConstraint.cs", label="return false;", span="36-36"];
m17_15 [cluster="Nancy.Routing.Constraints.LengthRouteSegmentConstraint.TryMatch(string, string[], out string)", file="LengthRouteSegmentConstraint.cs", label="matchedValue = null", span="41-41"];
m17_16 [cluster="Nancy.Routing.Constraints.LengthRouteSegmentConstraint.TryMatch(string, string[], out string)", file="LengthRouteSegmentConstraint.cs", label="return false;", span="42-42"];
m17_18 [cluster="Nancy.Routing.Constraints.LengthRouteSegmentConstraint.TryMatch(string, string[], out string)", file="LengthRouteSegmentConstraint.cs", label="return true;", span="46-46"];
m17_19 [cluster="Nancy.Routing.Constraints.LengthRouteSegmentConstraint.TryMatch(string, string[], out string)", file="LengthRouteSegmentConstraint.cs", label="Exit Nancy.Routing.Constraints.LengthRouteSegmentConstraint.TryMatch(string, string[], out string)", span="9-9"];
m17_20 [cluster="Nancy.Routing.Constraints.ParameterizedRouteSegmentConstraintBase<T>.TryParseInt(string, out int)", file="LengthRouteSegmentConstraint.cs", label="Entry Nancy.Routing.Constraints.ParameterizedRouteSegmentConstraintBase<T>.TryParseInt(string, out int)", span="19-19"];
m17_21 [file="LengthRouteSegmentConstraint.cs", label="Nancy.Routing.Constraints.LengthRouteSegmentConstraint", span=""];
m18_54 [cluster="Unk.Same", file="MaxLengthRouteSegmentConstraint.cs", label="Entry Unk.Same", span=""];
m18_153 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PlusEquals_with_another_pipeline_adds_those_pipeline_items_to_end_of_pipeline()", file="MaxLengthRouteSegmentConstraint.cs", label="Entry Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PlusEquals_with_another_pipeline_adds_those_pipeline_items_to_end_of_pipeline()", span="132-132"];
m18_154 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PlusEquals_with_another_pipeline_adds_those_pipeline_items_to_end_of_pipeline()", file="MaxLengthRouteSegmentConstraint.cs", label="Func<NancyContext, Response> item1 = (r) => { return null; }", span="134-134"];
m18_155 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PlusEquals_with_another_pipeline_adds_those_pipeline_items_to_end_of_pipeline()", file="MaxLengthRouteSegmentConstraint.cs", label="Func<NancyContext, Response> item2 = (r) => { return CreateResponse(); }", span="135-135"];
m18_156 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PlusEquals_with_another_pipeline_adds_those_pipeline_items_to_end_of_pipeline()", file="MaxLengthRouteSegmentConstraint.cs", label="pipeline.AddItemToEndOfPipeline(item1)", span="136-136"];
m18_157 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PlusEquals_with_another_pipeline_adds_those_pipeline_items_to_end_of_pipeline()", file="MaxLengthRouteSegmentConstraint.cs", label="pipeline.AddItemToEndOfPipeline(item2)", span="137-137"];
m18_158 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PlusEquals_with_another_pipeline_adds_those_pipeline_items_to_end_of_pipeline()", file="MaxLengthRouteSegmentConstraint.cs", label="Func<NancyContext, Response> item3 = (r) => { return null; }", span="138-138"];
m18_159 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PlusEquals_with_another_pipeline_adds_those_pipeline_items_to_end_of_pipeline()", file="MaxLengthRouteSegmentConstraint.cs", label="Func<NancyContext, Response> item4 = (r) => { return CreateResponse(); }", span="139-139"];
m18_161 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PlusEquals_with_another_pipeline_adds_those_pipeline_items_to_end_of_pipeline()", file="MaxLengthRouteSegmentConstraint.cs", label="pipeline2.AddItemToEndOfPipeline(item3)", span="141-141"];
m18_165 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PlusEquals_with_another_pipeline_adds_those_pipeline_items_to_end_of_pipeline()", file="MaxLengthRouteSegmentConstraint.cs", label="Assert.Same(item3, pipeline.PipelineItems.ElementAt(2))", span="147-147"];
m18_160 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PlusEquals_with_another_pipeline_adds_those_pipeline_items_to_end_of_pipeline()", file="MaxLengthRouteSegmentConstraint.cs", label="var pipeline2 = new BeforePipeline()", span="140-140"];
m18_162 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PlusEquals_with_another_pipeline_adds_those_pipeline_items_to_end_of_pipeline()", file="MaxLengthRouteSegmentConstraint.cs", label="pipeline2.AddItemToEndOfPipeline(item4)", span="142-142"];
m18_166 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PlusEquals_with_another_pipeline_adds_those_pipeline_items_to_end_of_pipeline()", file="MaxLengthRouteSegmentConstraint.cs", label="Assert.Same(item4, pipeline.PipelineItems.Last())", span="148-148"];
m18_163 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PlusEquals_with_another_pipeline_adds_those_pipeline_items_to_end_of_pipeline()", file="MaxLengthRouteSegmentConstraint.cs", label="pipeline += pipeline2", span="144-144"];
m18_164 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PlusEquals_with_another_pipeline_adds_those_pipeline_items_to_end_of_pipeline()", file="MaxLengthRouteSegmentConstraint.cs", label="Assert.Equal(4, pipeline.PipelineItems.Count())", span="146-146"];
m18_167 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PlusEquals_with_another_pipeline_adds_those_pipeline_items_to_end_of_pipeline()", file="MaxLengthRouteSegmentConstraint.cs", label="Exit Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PlusEquals_with_another_pipeline_adds_those_pipeline_items_to_end_of_pipeline()", span="132-132"];
m18_8 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PreRequestHooksPipelineFixture()", file="MaxLengthRouteSegmentConstraint.cs", label="Entry Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PreRequestHooksPipelineFixture()", span="20-20"];
m18_9 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PreRequestHooksPipelineFixture()", file="MaxLengthRouteSegmentConstraint.cs", label="this.pipeline = new BeforePipeline()", span="22-22"];
m18_10 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PreRequestHooksPipelineFixture()", file="MaxLengthRouteSegmentConstraint.cs", label="Exit Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PreRequestHooksPipelineFixture()", span="20-20"];
m18_93 [cluster="Unk.Equal", file="MaxLengthRouteSegmentConstraint.cs", label="Entry Unk.Equal", span=""];
m18_180 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_cast_to_func_and_invoked_members_are_invoked()", file="MaxLengthRouteSegmentConstraint.cs", label="Entry Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_cast_to_func_and_invoked_members_are_invoked()", span="152-152"];
m18_181 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_cast_to_func_and_invoked_members_are_invoked()", file="MaxLengthRouteSegmentConstraint.cs", label="var item1Called = false", span="154-154"];
m18_182 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_cast_to_func_and_invoked_members_are_invoked()", file="MaxLengthRouteSegmentConstraint.cs", label="Func<NancyContext, Response> item1 = (r) => { item1Called = true; return null; }", span="155-155"];
m18_183 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_cast_to_func_and_invoked_members_are_invoked()", file="MaxLengthRouteSegmentConstraint.cs", label="var item2Called = false", span="156-156"];
m18_187 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_cast_to_func_and_invoked_members_are_invoked()", file="MaxLengthRouteSegmentConstraint.cs", label="pipeline.AddItemToEndOfPipeline(item1)", span="160-160"];
m18_184 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_cast_to_func_and_invoked_members_are_invoked()", file="MaxLengthRouteSegmentConstraint.cs", label="Func<NancyContext, Response> item2 = (r) => { item2Called = true; return null; }", span="157-157"];
m18_185 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_cast_to_func_and_invoked_members_are_invoked()", file="MaxLengthRouteSegmentConstraint.cs", label="var item3Called = false", span="158-158"];
m18_188 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_cast_to_func_and_invoked_members_are_invoked()", file="MaxLengthRouteSegmentConstraint.cs", label="pipeline.AddItemToEndOfPipeline(item2)", span="161-161"];
m18_186 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_cast_to_func_and_invoked_members_are_invoked()", file="MaxLengthRouteSegmentConstraint.cs", label="Func<NancyContext, Response> item3 = (r) => { item3Called = true; return null; }", span="159-159"];
m18_189 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_cast_to_func_and_invoked_members_are_invoked()", file="MaxLengthRouteSegmentConstraint.cs", label="pipeline.AddItemToEndOfPipeline(item3)", span="162-162"];
m18_190 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_cast_to_func_and_invoked_members_are_invoked()", file="MaxLengthRouteSegmentConstraint.cs", label="Func<NancyContext, Response> func = pipeline", span="164-164"];
m18_191 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_cast_to_func_and_invoked_members_are_invoked()", file="MaxLengthRouteSegmentConstraint.cs", label="func.Invoke(CreateContext())", span="165-165"];
m18_192 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_cast_to_func_and_invoked_members_are_invoked()", file="MaxLengthRouteSegmentConstraint.cs", label="Assert.True(item1Called)", span="167-167"];
m18_193 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_cast_to_func_and_invoked_members_are_invoked()", file="MaxLengthRouteSegmentConstraint.cs", label="Assert.True(item2Called)", span="168-168"];
m18_194 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_cast_to_func_and_invoked_members_are_invoked()", file="MaxLengthRouteSegmentConstraint.cs", label="Assert.True(item3Called)", span="169-169"];
m18_195 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_cast_to_func_and_invoked_members_are_invoked()", file="MaxLengthRouteSegmentConstraint.cs", label="Exit Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_cast_to_func_and_invoked_members_are_invoked()", span="152-152"];
m18_12 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_stops_pipeline_execution()", file="MaxLengthRouteSegmentConstraint.cs", label="Entry Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_stops_pipeline_execution()", span="26-26"];
m18_13 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_stops_pipeline_execution()", file="MaxLengthRouteSegmentConstraint.cs", label="var item1Called = false", span="28-28"];
m18_14 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_stops_pipeline_execution()", file="MaxLengthRouteSegmentConstraint.cs", label="Func<NancyContext, Response> item1 = (r) => { item1Called = true; return null; }", span="29-29"];
m18_15 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_stops_pipeline_execution()", file="MaxLengthRouteSegmentConstraint.cs", label="var item2Called = false", span="30-30"];
m18_19 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_stops_pipeline_execution()", file="MaxLengthRouteSegmentConstraint.cs", label="pipeline.AddItemToEndOfPipeline(item1)", span="34-34"];
m18_16 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_stops_pipeline_execution()", file="MaxLengthRouteSegmentConstraint.cs", label="Func<NancyContext, Response> item2 = (r) => { item2Called = true; return CreateResponse(); }", span="31-31"];
m18_17 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_stops_pipeline_execution()", file="MaxLengthRouteSegmentConstraint.cs", label="var item3Called = false", span="32-32"];
m18_20 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_stops_pipeline_execution()", file="MaxLengthRouteSegmentConstraint.cs", label="pipeline.AddItemToEndOfPipeline(item2)", span="35-35"];
m18_18 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_stops_pipeline_execution()", file="MaxLengthRouteSegmentConstraint.cs", label="Func<NancyContext, Response> item3 = (r) => { item3Called = true; return null; }", span="33-33"];
m18_21 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_stops_pipeline_execution()", file="MaxLengthRouteSegmentConstraint.cs", label="pipeline.AddItemToEndOfPipeline(item3)", span="36-36"];
m18_22 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_stops_pipeline_execution()", file="MaxLengthRouteSegmentConstraint.cs", label="pipeline.Invoke(CreateContext())", span="38-38"];
m18_23 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_stops_pipeline_execution()", file="MaxLengthRouteSegmentConstraint.cs", label="Assert.True(item1Called)", span="40-40"];
m18_24 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_stops_pipeline_execution()", file="MaxLengthRouteSegmentConstraint.cs", label="Assert.True(item2Called)", span="41-41"];
m18_25 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_stops_pipeline_execution()", file="MaxLengthRouteSegmentConstraint.cs", label="Assert.False(item3Called)", span="42-42"];
m18_26 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_stops_pipeline_execution()", file="MaxLengthRouteSegmentConstraint.cs", label="Exit Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_stops_pipeline_execution()", span="26-26"];
m18_209 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_cast_from_func_creates_a_pipeline_with_one_item()", file="MaxLengthRouteSegmentConstraint.cs", label="Entry Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_cast_from_func_creates_a_pipeline_with_one_item()", span="173-173"];
m18_210 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_cast_from_func_creates_a_pipeline_with_one_item()", file="MaxLengthRouteSegmentConstraint.cs", label="Func<NancyContext, Response> item1 = (r) => null", span="175-175"];
m18_211 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_cast_from_func_creates_a_pipeline_with_one_item()", file="MaxLengthRouteSegmentConstraint.cs", label="BeforePipeline castPipeline = item1", span="177-177"];
m18_213 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_cast_from_func_creates_a_pipeline_with_one_item()", file="MaxLengthRouteSegmentConstraint.cs", label="Assert.Same(item1, castPipeline.PipelineItems.First())", span="180-180"];
m18_212 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_cast_from_func_creates_a_pipeline_with_one_item()", file="MaxLengthRouteSegmentConstraint.cs", label="Assert.Equal(1, castPipeline.PipelineItems.Count())", span="179-179"];
m18_214 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_cast_from_func_creates_a_pipeline_with_one_item()", file="MaxLengthRouteSegmentConstraint.cs", label="Exit Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_cast_from_func_creates_a_pipeline_with_one_item()", span="173-173"];
m18_218 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", file="MaxLengthRouteSegmentConstraint.cs", label="Entry Nancy.Tests.Unit.PreRequestHooksPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", span="184-184"];
m18_219 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", file="MaxLengthRouteSegmentConstraint.cs", label="var item1Called = false", span="186-186"];
m18_220 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", file="MaxLengthRouteSegmentConstraint.cs", label="Func<NancyContext, Response> item1 = (r) => { item1Called = true; return null; }", span="187-187"];
m18_221 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", file="MaxLengthRouteSegmentConstraint.cs", label="var item2Called = false", span="188-188"];
m18_227 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", file="MaxLengthRouteSegmentConstraint.cs", label="pipeline += item1", span="194-194"];
m18_222 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", file="MaxLengthRouteSegmentConstraint.cs", label="Func<NancyContext, Response> item2 = (r) => { item2Called = true; return null; }", span="189-189"];
m18_223 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", file="MaxLengthRouteSegmentConstraint.cs", label="var item3Called = false", span="190-190"];
m18_228 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", file="MaxLengthRouteSegmentConstraint.cs", label="pipeline += item2", span="195-195"];
m18_224 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", file="MaxLengthRouteSegmentConstraint.cs", label="Func<NancyContext, Response> item3 = (r) => { item3Called = true; return null; }", span="191-191"];
m18_225 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", file="MaxLengthRouteSegmentConstraint.cs", label="var item4Called = false", span="192-192"];
m18_230 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", file="MaxLengthRouteSegmentConstraint.cs", label="subPipeline += item3", span="197-197"];
m18_226 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", file="MaxLengthRouteSegmentConstraint.cs", label="Func<NancyContext, Response> item4 = (r) => { item4Called = true; return null; }", span="193-193"];
m18_231 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", file="MaxLengthRouteSegmentConstraint.cs", label="subPipeline += item4", span="198-198"];
m18_229 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", file="MaxLengthRouteSegmentConstraint.cs", label="var subPipeline = new BeforePipeline()", span="196-196"];
m18_232 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", file="MaxLengthRouteSegmentConstraint.cs", label="pipeline.AddItemToEndOfPipeline(subPipeline)", span="200-200"];
m18_233 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", file="MaxLengthRouteSegmentConstraint.cs", label="pipeline.Invoke(CreateContext())", span="201-201"];
m18_234 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", file="MaxLengthRouteSegmentConstraint.cs", label="Assert.True(item1Called)", span="203-203"];
m18_235 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", file="MaxLengthRouteSegmentConstraint.cs", label="Assert.True(item2Called)", span="204-204"];
m18_236 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", file="MaxLengthRouteSegmentConstraint.cs", label="Assert.True(item3Called)", span="205-205"];
m18_237 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", file="MaxLengthRouteSegmentConstraint.cs", label="Assert.True(item4Called)", span="206-206"];
m18_238 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", file="MaxLengthRouteSegmentConstraint.cs", label="Exit Nancy.Tests.Unit.PreRequestHooksPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", span="184-184"];
m18_11 [cluster="Nancy.BeforePipeline.BeforePipeline()", file="MaxLengthRouteSegmentConstraint.cs", label="Entry Nancy.BeforePipeline.BeforePipeline()", span="27-27"];
m18_196 [cluster="System.Func<T, TResult>.Invoke(T)", file="MaxLengthRouteSegmentConstraint.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m18_30 [cluster="Unk.False", file="MaxLengthRouteSegmentConstraint.cs", label="Entry Unk.False", span=""];
m18_109 [cluster="Nancy.BeforePipeline.AddItemToStartOfPipeline(System.Func<Nancy.NancyContext, Nancy.Response>)", file="MaxLengthRouteSegmentConstraint.cs", label="Entry Nancy.BeforePipeline.AddItemToStartOfPipeline(System.Func<Nancy.NancyContext, Nancy.Response>)", span="96-96"];
m18_43 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_returns_that_response()", file="MaxLengthRouteSegmentConstraint.cs", label="Entry Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_returns_that_response()", span="46-46"];
m18_44 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_returns_that_response()", file="MaxLengthRouteSegmentConstraint.cs", label="var response = CreateResponse()", span="48-48"];
m18_45 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_returns_that_response()", file="MaxLengthRouteSegmentConstraint.cs", label="Func<NancyContext, Response> item1 = (r) => null", span="49-49"];
m18_46 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_returns_that_response()", file="MaxLengthRouteSegmentConstraint.cs", label="Func<NancyContext, Response> item2 = (r) => response", span="50-50"];
m18_52 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_returns_that_response()", file="MaxLengthRouteSegmentConstraint.cs", label="Assert.Same(response, result)", span="58-58"];
m18_48 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_returns_that_response()", file="MaxLengthRouteSegmentConstraint.cs", label="pipeline.AddItemToEndOfPipeline(item1)", span="52-52"];
m18_47 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_returns_that_response()", file="MaxLengthRouteSegmentConstraint.cs", label="Func<NancyContext, Response> item3 = (r) => null", span="51-51"];
m18_49 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_returns_that_response()", file="MaxLengthRouteSegmentConstraint.cs", label="pipeline.AddItemToEndOfPipeline(item2)", span="53-53"];
m18_50 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_returns_that_response()", file="MaxLengthRouteSegmentConstraint.cs", label="pipeline.AddItemToEndOfPipeline(item3)", span="54-54"];
m18_51 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_returns_that_response()", file="MaxLengthRouteSegmentConstraint.cs", label="var result = pipeline.Invoke(CreateContext())", span="56-56"];
m18_53 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_returns_that_response()", file="MaxLengthRouteSegmentConstraint.cs", label="Exit Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_returns_that_response()", span="46-46"];
m18_27 [cluster="Nancy.BeforePipeline.AddItemToEndOfPipeline(System.Func<Nancy.NancyContext, Nancy.Response>)", file="MaxLengthRouteSegmentConstraint.cs", label="Entry Nancy.BeforePipeline.AddItemToEndOfPipeline(System.Func<Nancy.NancyContext, Nancy.Response>)", span="105-105"];
m18_101 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.AddItemToStartOfPipeline_adds_to_the_end_of_the_pipeline()", file="MaxLengthRouteSegmentConstraint.cs", label="Entry Nancy.Tests.Unit.PreRequestHooksPipelineFixture.AddItemToStartOfPipeline_adds_to_the_end_of_the_pipeline()", span="90-90"];
m18_102 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.AddItemToStartOfPipeline_adds_to_the_end_of_the_pipeline()", file="MaxLengthRouteSegmentConstraint.cs", label="Func<NancyContext, Response> item1 = (r) => { return null; }", span="92-92"];
m18_103 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.AddItemToStartOfPipeline_adds_to_the_end_of_the_pipeline()", file="MaxLengthRouteSegmentConstraint.cs", label="Func<NancyContext, Response> item2 = (r) => { return new Response(); }", span="93-93"];
m18_105 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.AddItemToStartOfPipeline_adds_to_the_end_of_the_pipeline()", file="MaxLengthRouteSegmentConstraint.cs", label="pipeline.AddItemToStartOfPipeline(item1)", span="96-96"];
m18_107 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.AddItemToStartOfPipeline_adds_to_the_end_of_the_pipeline()", file="MaxLengthRouteSegmentConstraint.cs", label="Assert.Same(item1, pipeline.PipelineItems.First())", span="99-99"];
m18_104 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.AddItemToStartOfPipeline_adds_to_the_end_of_the_pipeline()", file="MaxLengthRouteSegmentConstraint.cs", label="pipeline.AddItemToEndOfPipeline(item2)", span="94-94"];
m18_106 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.AddItemToStartOfPipeline_adds_to_the_end_of_the_pipeline()", file="MaxLengthRouteSegmentConstraint.cs", label="Assert.Equal(2, pipeline.PipelineItems.Count())", span="98-98"];
m18_108 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.AddItemToStartOfPipeline_adds_to_the_end_of_the_pipeline()", file="MaxLengthRouteSegmentConstraint.cs", label="Exit Nancy.Tests.Unit.PreRequestHooksPipelineFixture.AddItemToStartOfPipeline_adds_to_the_end_of_the_pipeline()", span="90-90"];
m18_94 [cluster="System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", file="MaxLengthRouteSegmentConstraint.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", span="0-0"];
m18_4 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.CreateContext()", file="MaxLengthRouteSegmentConstraint.cs", label="Entry Nancy.Tests.Unit.PreRequestHooksPipelineFixture.CreateContext()", span="15-15"];
m18_5 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.CreateContext()", file="MaxLengthRouteSegmentConstraint.cs", label="return new NancyContext();", span="17-17"];
m18_6 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.CreateContext()", file="MaxLengthRouteSegmentConstraint.cs", label="Exit Nancy.Tests.Unit.PreRequestHooksPipelineFixture.CreateContext()", span="15-15"];
m18_74 [cluster="Unk.Null", file="MaxLengthRouteSegmentConstraint.cs", label="Entry Unk.Null", span=""];
m18_7 [cluster="Nancy.NancyContext.NancyContext()", file="MaxLengthRouteSegmentConstraint.cs", label="Entry Nancy.NancyContext.NancyContext()", span="14-14"];
m18_110 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="MaxLengthRouteSegmentConstraint.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m18_251 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Entry lambda expression", span="193-193"];
m18_31 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Entry lambda expression", span="29-29"];
m18_32 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="item1Called = true", span="29-29"];
m18_33 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="return null;", span="29-29"];
m18_34 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Exit lambda expression", span="29-29"];
m18_35 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Entry lambda expression", span="31-31"];
m18_36 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="item2Called = true", span="31-31"];
m18_37 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="return CreateResponse();", span="31-31"];
m18_38 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Exit lambda expression", span="31-31"];
m18_39 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Entry lambda expression", span="33-33"];
m18_40 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="item3Called = true", span="33-33"];
m18_41 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="return null;", span="33-33"];
m18_42 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Exit lambda expression", span="33-33"];
m18_59 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label=response, span="50-50"];
m18_55 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Entry lambda expression", span="49-49"];
m18_56 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label=null, span="49-49"];
m18_57 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Exit lambda expression", span="49-49"];
m18_58 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Entry lambda expression", span="50-50"];
m18_60 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Exit lambda expression", span="50-50"];
m18_61 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Entry lambda expression", span="51-51"];
m18_62 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label=null, span="51-51"];
m18_63 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Exit lambda expression", span="51-51"];
m18_75 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Entry lambda expression", span="64-64"];
m18_76 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label=null, span="64-64"];
m18_77 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Exit lambda expression", span="64-64"];
m18_78 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Entry lambda expression", span="65-65"];
m18_79 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label=null, span="65-65"];
m18_80 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Exit lambda expression", span="65-65"];
m18_81 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Entry lambda expression", span="66-66"];
m18_82 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label=null, span="66-66"];
m18_83 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Exit lambda expression", span="66-66"];
m18_95 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Entry lambda expression", span="79-79"];
m18_96 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="return null;", span="79-79"];
m18_97 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Exit lambda expression", span="79-79"];
m18_98 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Entry lambda expression", span="80-80"];
m18_99 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="return CreateResponse();", span="80-80"];
m18_100 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Exit lambda expression", span="80-80"];
m18_111 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Entry lambda expression", span="92-92"];
m18_112 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="return null;", span="92-92"];
m18_113 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Exit lambda expression", span="92-92"];
m18_114 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Entry lambda expression", span="93-93"];
m18_115 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="return new Response();", span="93-93"];
m18_116 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Exit lambda expression", span="93-93"];
m18_130 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Entry lambda expression", span="105-105"];
m18_131 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label=null, span="105-105"];
m18_132 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Exit lambda expression", span="105-105"];
m18_133 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Entry lambda expression", span="106-106"];
m18_134 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label=null, span="106-106"];
m18_135 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Exit lambda expression", span="106-106"];
m18_136 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Entry lambda expression", span="107-107"];
m18_137 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label=null, span="107-107"];
m18_138 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Exit lambda expression", span="107-107"];
m18_147 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Entry lambda expression", span="121-121"];
m18_148 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="return null;", span="121-121"];
m18_149 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Exit lambda expression", span="121-121"];
m18_150 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Entry lambda expression", span="122-122"];
m18_151 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="return CreateResponse();", span="122-122"];
m18_152 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Exit lambda expression", span="122-122"];
m18_168 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Entry lambda expression", span="134-134"];
m18_169 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="return null;", span="134-134"];
m18_170 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Exit lambda expression", span="134-134"];
m18_171 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Entry lambda expression", span="135-135"];
m18_172 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="return CreateResponse();", span="135-135"];
m18_173 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Exit lambda expression", span="135-135"];
m18_174 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Entry lambda expression", span="138-138"];
m18_175 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="return null;", span="138-138"];
m18_176 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Exit lambda expression", span="138-138"];
m18_177 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Entry lambda expression", span="139-139"];
m18_178 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="return CreateResponse();", span="139-139"];
m18_179 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Exit lambda expression", span="139-139"];
m18_197 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Entry lambda expression", span="155-155"];
m18_198 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="item1Called = true", span="155-155"];
m18_199 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="return null;", span="155-155"];
m18_200 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Exit lambda expression", span="155-155"];
m18_201 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Entry lambda expression", span="157-157"];
m18_202 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="item2Called = true", span="157-157"];
m18_203 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="return null;", span="157-157"];
m18_204 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Exit lambda expression", span="157-157"];
m18_205 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Entry lambda expression", span="159-159"];
m18_206 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="item3Called = true", span="159-159"];
m18_207 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="return null;", span="159-159"];
m18_208 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Exit lambda expression", span="159-159"];
m18_215 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Entry lambda expression", span="175-175"];
m18_216 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label=null, span="175-175"];
m18_217 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Exit lambda expression", span="175-175"];
m18_239 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Entry lambda expression", span="187-187"];
m18_240 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="item1Called = true", span="187-187"];
m18_241 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="return null;", span="187-187"];
m18_242 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Exit lambda expression", span="187-187"];
m18_243 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Entry lambda expression", span="189-189"];
m18_244 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="item2Called = true", span="189-189"];
m18_245 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="return null;", span="189-189"];
m18_246 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Exit lambda expression", span="189-189"];
m18_247 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Entry lambda expression", span="191-191"];
m18_248 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="item3Called = true", span="191-191"];
m18_249 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="return null;", span="191-191"];
m18_250 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Exit lambda expression", span="191-191"];
m18_252 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="item4Called = true", span="193-193"];
m18_253 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="return null;", span="193-193"];
m18_254 [cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs", label="Exit lambda expression", span="193-193"];
m18_92 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="MaxLengthRouteSegmentConstraint.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m18_28 [cluster="Nancy.BeforePipeline.Invoke(Nancy.NancyContext)", file="MaxLengthRouteSegmentConstraint.cs", label="Entry Nancy.BeforePipeline.Invoke(Nancy.NancyContext)", span="77-77"];
m18_0 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.CreateResponse()", file="MaxLengthRouteSegmentConstraint.cs", label="Entry Nancy.Tests.Unit.PreRequestHooksPipelineFixture.CreateResponse()", span="10-10"];
m18_1 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.CreateResponse()", file="MaxLengthRouteSegmentConstraint.cs", label="return new Response();", span="12-12"];
m18_2 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.CreateResponse()", file="MaxLengthRouteSegmentConstraint.cs", label="Exit Nancy.Tests.Unit.PreRequestHooksPipelineFixture.CreateResponse()", span="10-10"];
m18_29 [cluster="Unk.True", file="MaxLengthRouteSegmentConstraint.cs", label="Entry Unk.True", span=""];
m18_84 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.AddItemToEndOfPipeline_adds_to_the_end_of_the_pipeline()", file="MaxLengthRouteSegmentConstraint.cs", label="Entry Nancy.Tests.Unit.PreRequestHooksPipelineFixture.AddItemToEndOfPipeline_adds_to_the_end_of_the_pipeline()", span="77-77"];
m18_85 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.AddItemToEndOfPipeline_adds_to_the_end_of_the_pipeline()", file="MaxLengthRouteSegmentConstraint.cs", label="Func<NancyContext, Response> item1 = (r) => { return null; }", span="79-79"];
m18_86 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.AddItemToEndOfPipeline_adds_to_the_end_of_the_pipeline()", file="MaxLengthRouteSegmentConstraint.cs", label="Func<NancyContext, Response> item2 = (r) => { return CreateResponse(); }", span="80-80"];
m18_88 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.AddItemToEndOfPipeline_adds_to_the_end_of_the_pipeline()", file="MaxLengthRouteSegmentConstraint.cs", label="pipeline.AddItemToEndOfPipeline(item1)", span="83-83"];
m18_90 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.AddItemToEndOfPipeline_adds_to_the_end_of_the_pipeline()", file="MaxLengthRouteSegmentConstraint.cs", label="Assert.Same(item1, pipeline.PipelineItems.Last())", span="86-86"];
m18_87 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.AddItemToEndOfPipeline_adds_to_the_end_of_the_pipeline()", file="MaxLengthRouteSegmentConstraint.cs", label="pipeline.AddItemToEndOfPipeline(item2)", span="81-81"];
m18_89 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.AddItemToEndOfPipeline_adds_to_the_end_of_the_pipeline()", file="MaxLengthRouteSegmentConstraint.cs", label="Assert.Equal(2, pipeline.PipelineItems.Count())", span="85-85"];
m18_91 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.AddItemToEndOfPipeline_adds_to_the_end_of_the_pipeline()", file="MaxLengthRouteSegmentConstraint.cs", label="Exit Nancy.Tests.Unit.PreRequestHooksPipelineFixture.AddItemToEndOfPipeline_adds_to_the_end_of_the_pipeline()", span="77-77"];
m18_129 [cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="MaxLengthRouteSegmentConstraint.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0"];
m18_139 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PlusEquals_with_func_add_item_to_end_of_pipeline()", file="MaxLengthRouteSegmentConstraint.cs", label="Entry Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PlusEquals_with_func_add_item_to_end_of_pipeline()", span="119-119"];
m18_140 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PlusEquals_with_func_add_item_to_end_of_pipeline()", file="MaxLengthRouteSegmentConstraint.cs", label="Func<NancyContext, Response> item1 = (r) => { return null; }", span="121-121"];
m18_141 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PlusEquals_with_func_add_item_to_end_of_pipeline()", file="MaxLengthRouteSegmentConstraint.cs", label="Func<NancyContext, Response> item2 = (r) => { return CreateResponse(); }", span="122-122"];
m18_143 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PlusEquals_with_func_add_item_to_end_of_pipeline()", file="MaxLengthRouteSegmentConstraint.cs", label="pipeline += item1", span="125-125"];
m18_145 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PlusEquals_with_func_add_item_to_end_of_pipeline()", file="MaxLengthRouteSegmentConstraint.cs", label="Assert.Same(item1, pipeline.PipelineItems.Last())", span="128-128"];
m18_142 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PlusEquals_with_func_add_item_to_end_of_pipeline()", file="MaxLengthRouteSegmentConstraint.cs", label="pipeline.AddItemToEndOfPipeline(item2)", span="123-123"];
m18_144 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PlusEquals_with_func_add_item_to_end_of_pipeline()", file="MaxLengthRouteSegmentConstraint.cs", label="Assert.Equal(2, pipeline.PipelineItems.Count())", span="127-127"];
m18_146 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PlusEquals_with_func_add_item_to_end_of_pipeline()", file="MaxLengthRouteSegmentConstraint.cs", label="Exit Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PlusEquals_with_func_add_item_to_end_of_pipeline()", span="119-119"];
m18_117 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.InsertItemAtPipelineIndex_adds_at_correct_index()", file="MaxLengthRouteSegmentConstraint.cs", label="Entry Nancy.Tests.Unit.PreRequestHooksPipelineFixture.InsertItemAtPipelineIndex_adds_at_correct_index()", span="103-103"];
m18_118 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.InsertItemAtPipelineIndex_adds_at_correct_index()", file="MaxLengthRouteSegmentConstraint.cs", label="Func<NancyContext, Response> item1 = (r) => null", span="105-105"];
m18_119 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.InsertItemAtPipelineIndex_adds_at_correct_index()", file="MaxLengthRouteSegmentConstraint.cs", label="Func<NancyContext, Response> item2 = (r) => null", span="106-106"];
m18_121 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.InsertItemAtPipelineIndex_adds_at_correct_index()", file="MaxLengthRouteSegmentConstraint.cs", label="pipeline.AddItemToEndOfPipeline(item1)", span="108-108"];
m18_124 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.InsertItemAtPipelineIndex_adds_at_correct_index()", file="MaxLengthRouteSegmentConstraint.cs", label="Assert.Same(item1, pipeline.PipelineItems.ElementAt(0))", span="113-113"];
m18_120 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.InsertItemAtPipelineIndex_adds_at_correct_index()", file="MaxLengthRouteSegmentConstraint.cs", label="Func<NancyContext, Response> item3 = (r) => null", span="107-107"];
m18_123 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.InsertItemAtPipelineIndex_adds_at_correct_index()", file="MaxLengthRouteSegmentConstraint.cs", label="pipeline.InsertItemAtPipelineIndex(1, item2)", span="111-111"];
m18_125 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.InsertItemAtPipelineIndex_adds_at_correct_index()", file="MaxLengthRouteSegmentConstraint.cs", label="Assert.Same(item2, pipeline.PipelineItems.ElementAt(1))", span="114-114"];
m18_122 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.InsertItemAtPipelineIndex_adds_at_correct_index()", file="MaxLengthRouteSegmentConstraint.cs", label="pipeline.AddItemToEndOfPipeline(item3)", span="109-109"];
m18_126 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.InsertItemAtPipelineIndex_adds_at_correct_index()", file="MaxLengthRouteSegmentConstraint.cs", label="Assert.Same(item3, pipeline.PipelineItems.ElementAt(2))", span="115-115"];
m18_127 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.InsertItemAtPipelineIndex_adds_at_correct_index()", file="MaxLengthRouteSegmentConstraint.cs", label="Exit Nancy.Tests.Unit.PreRequestHooksPipelineFixture.InsertItemAtPipelineIndex_adds_at_correct_index()", span="103-103"];
m18_64 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_members_all_return_null_returns_null()", file="MaxLengthRouteSegmentConstraint.cs", label="Entry Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_members_all_return_null_returns_null()", span="62-62"];
m18_65 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_members_all_return_null_returns_null()", file="MaxLengthRouteSegmentConstraint.cs", label="Func<NancyContext, Response> item1 = (r) => null", span="64-64"];
m18_66 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_members_all_return_null_returns_null()", file="MaxLengthRouteSegmentConstraint.cs", label="Func<NancyContext, Response> item2 = (r) => null", span="65-65"];
m18_68 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_members_all_return_null_returns_null()", file="MaxLengthRouteSegmentConstraint.cs", label="pipeline.AddItemToEndOfPipeline(item1)", span="67-67"];
m18_67 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_members_all_return_null_returns_null()", file="MaxLengthRouteSegmentConstraint.cs", label="Func<NancyContext, Response> item3 = (r) => null", span="66-66"];
m18_69 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_members_all_return_null_returns_null()", file="MaxLengthRouteSegmentConstraint.cs", label="pipeline.AddItemToEndOfPipeline(item2)", span="68-68"];
m18_70 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_members_all_return_null_returns_null()", file="MaxLengthRouteSegmentConstraint.cs", label="pipeline.AddItemToEndOfPipeline(item3)", span="69-69"];
m18_71 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_members_all_return_null_returns_null()", file="MaxLengthRouteSegmentConstraint.cs", label="var result = pipeline.Invoke(CreateContext())", span="71-71"];
m18_72 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_members_all_return_null_returns_null()", file="MaxLengthRouteSegmentConstraint.cs", label="Assert.Null(result)", span="73-73"];
m18_73 [cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_members_all_return_null_returns_null()", file="MaxLengthRouteSegmentConstraint.cs", label="Exit Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_members_all_return_null_returns_null()", span="62-62"];
m18_128 [cluster="Nancy.BeforePipeline.InsertItemAtPipelineIndex(int, System.Func<Nancy.NancyContext, Nancy.Response>)", file="MaxLengthRouteSegmentConstraint.cs", label="Entry Nancy.BeforePipeline.InsertItemAtPipelineIndex(int, System.Func<Nancy.NancyContext, Nancy.Response>)", span="115-115"];
m18_3 [cluster="Nancy.Response.Response()", file="MaxLengthRouteSegmentConstraint.cs", label="Entry Nancy.Response.Response()", span="15-15"];
m18_255 [file="MaxLengthRouteSegmentConstraint.cs", label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture", span=""];
m18_256 [file="MaxLengthRouteSegmentConstraint.cs", label=response, span=""];
m19_0 [cluster="Nancy.Routing.Constraints.MaxRouteSegmentConstraint.TryMatch(string, string[], out int)", file="MaxRouteSegmentConstraint.cs", label="Entry Nancy.Routing.Constraints.MaxRouteSegmentConstraint.TryMatch(string, string[], out int)", span="9-9"];
m19_1 [cluster="Nancy.Routing.Constraints.MaxRouteSegmentConstraint.TryMatch(string, string[], out int)", file="MaxRouteSegmentConstraint.cs", label="int minValue", span="11-11"];
m19_3 [cluster="Nancy.Routing.Constraints.MaxRouteSegmentConstraint.TryMatch(string, string[], out int)", file="MaxRouteSegmentConstraint.cs", label="!this.TryParseInt(parameters[0], out minValue) ||\r\n                !this.TryParseInt(segment, out intValue)", span="14-15"];
m19_2 [cluster="Nancy.Routing.Constraints.MaxRouteSegmentConstraint.TryMatch(string, string[], out int)", file="MaxRouteSegmentConstraint.cs", label="int intValue", span="12-12"];
m19_4 [cluster="Nancy.Routing.Constraints.MaxRouteSegmentConstraint.TryMatch(string, string[], out int)", file="MaxRouteSegmentConstraint.cs", label="matchedValue = default(int)", span="17-17"];
m19_6 [cluster="Nancy.Routing.Constraints.MaxRouteSegmentConstraint.TryMatch(string, string[], out int)", file="MaxRouteSegmentConstraint.cs", label="intValue > minValue", span="21-21"];
m19_9 [cluster="Nancy.Routing.Constraints.MaxRouteSegmentConstraint.TryMatch(string, string[], out int)", file="MaxRouteSegmentConstraint.cs", label="matchedValue = intValue", span="27-27"];
m19_5 [cluster="Nancy.Routing.Constraints.MaxRouteSegmentConstraint.TryMatch(string, string[], out int)", file="MaxRouteSegmentConstraint.cs", label="return false;", span="18-18"];
m19_7 [cluster="Nancy.Routing.Constraints.MaxRouteSegmentConstraint.TryMatch(string, string[], out int)", file="MaxRouteSegmentConstraint.cs", label="matchedValue = default(int)", span="23-23"];
m19_8 [cluster="Nancy.Routing.Constraints.MaxRouteSegmentConstraint.TryMatch(string, string[], out int)", file="MaxRouteSegmentConstraint.cs", label="return false;", span="24-24"];
m19_10 [cluster="Nancy.Routing.Constraints.MaxRouteSegmentConstraint.TryMatch(string, string[], out int)", file="MaxRouteSegmentConstraint.cs", label="return true;", span="28-28"];
m19_11 [cluster="Nancy.Routing.Constraints.MaxRouteSegmentConstraint.TryMatch(string, string[], out int)", file="MaxRouteSegmentConstraint.cs", label="Exit Nancy.Routing.Constraints.MaxRouteSegmentConstraint.TryMatch(string, string[], out int)", span="9-9"];
m19_12 [cluster="Nancy.Routing.Constraints.ParameterizedRouteSegmentConstraintBase<T>.TryParseInt(string, out int)", file="MaxRouteSegmentConstraint.cs", label="Entry Nancy.Routing.Constraints.ParameterizedRouteSegmentConstraintBase<T>.TryParseInt(string, out int)", span="19-19"];
m19_13 [file="MaxRouteSegmentConstraint.cs", label="Nancy.Routing.Constraints.MaxRouteSegmentConstraint", span=""];
m20_6 [cluster="Nancy.ViewEngines.DefaultViewLocationCache.GetLocatedViews()", file="MinLengthRouteSegmentConstraint.cs", label="Entry Nancy.ViewEngines.DefaultViewLocationCache.GetLocatedViews()", span="21-21"];
m20_7 [cluster="Nancy.ViewEngines.DefaultViewLocationCache.GetLocatedViews()", file="MinLengthRouteSegmentConstraint.cs", label="var supportedViewExtensions =\r\n                GetSupportedViewExtensions()", span="23-24"];
m20_8 [cluster="Nancy.ViewEngines.DefaultViewLocationCache.GetLocatedViews()", file="MinLengthRouteSegmentConstraint.cs", label="var viewsLocatedByProviders = \r\n                this.viewLocationProvider.GetLocatedViews(supportedViewExtensions)", span="26-27"];
m20_9 [cluster="Nancy.ViewEngines.DefaultViewLocationCache.GetLocatedViews()", file="MinLengthRouteSegmentConstraint.cs", label="return viewsLocatedByProviders;", span="29-29"];
m20_10 [cluster="Nancy.ViewEngines.DefaultViewLocationCache.GetLocatedViews()", file="MinLengthRouteSegmentConstraint.cs", label="Exit Nancy.ViewEngines.DefaultViewLocationCache.GetLocatedViews()", span="21-21"];
m20_29 [cluster="Nancy.ViewEngines.DefaultViewLocationCache.DefaultViewLocationCacheDiagnostics.DefaultViewLocationCacheDiagnostics(Nancy.ViewEngines.DefaultViewLocationCache)", file="MinLengthRouteSegmentConstraint.cs", label="Entry Nancy.ViewEngines.DefaultViewLocationCache.DefaultViewLocationCacheDiagnostics.DefaultViewLocationCacheDiagnostics(Nancy.ViewEngines.DefaultViewLocationCache)", span="71-71"];
m20_30 [cluster="Nancy.ViewEngines.DefaultViewLocationCache.DefaultViewLocationCacheDiagnostics.DefaultViewLocationCacheDiagnostics(Nancy.ViewEngines.DefaultViewLocationCache)", file="MinLengthRouteSegmentConstraint.cs", label="this.cache = cache", span="73-73"];
m20_31 [cluster="Nancy.ViewEngines.DefaultViewLocationCache.DefaultViewLocationCacheDiagnostics.DefaultViewLocationCacheDiagnostics(Nancy.ViewEngines.DefaultViewLocationCache)", file="MinLengthRouteSegmentConstraint.cs", label="Exit Nancy.ViewEngines.DefaultViewLocationCache.DefaultViewLocationCacheDiagnostics.DefaultViewLocationCacheDiagnostics(Nancy.ViewEngines.DefaultViewLocationCache)", span="71-71"];
m20_12 [cluster="Nancy.ViewEngines.IViewLocationProvider.GetLocatedViews(System.Collections.Generic.IEnumerable<string>)", file="MinLengthRouteSegmentConstraint.cs", label="Entry Nancy.ViewEngines.IViewLocationProvider.GetLocatedViews(System.Collections.Generic.IEnumerable<string>)", span="15-15"];
m20_25 [cluster="Unk.GetEnumerator", file="MinLengthRouteSegmentConstraint.cs", label="Entry Unk.GetEnumerator", span=""];
m20_21 [cluster="Nancy.ViewEngines.DefaultViewLocationCache.GetEnumerator()", file="MinLengthRouteSegmentConstraint.cs", label="Entry Nancy.ViewEngines.DefaultViewLocationCache.GetEnumerator()", span="39-39"];
m20_22 [cluster="Nancy.ViewEngines.DefaultViewLocationCache.GetEnumerator()", file="MinLengthRouteSegmentConstraint.cs", label="return StaticConfiguration.DisableCaches ? this.GetLocatedViews().GetEnumerator() : this.locatedViews.GetEnumerator();", span="41-41"];
m20_23 [cluster="Nancy.ViewEngines.DefaultViewLocationCache.GetEnumerator()", file="MinLengthRouteSegmentConstraint.cs", label="Exit Nancy.ViewEngines.DefaultViewLocationCache.GetEnumerator()", span="39-39"];
m20_26 [cluster="Nancy.ViewEngines.DefaultViewLocationCache.System.Collections.IEnumerable.GetEnumerator()", file="MinLengthRouteSegmentConstraint.cs", label="Entry Nancy.ViewEngines.DefaultViewLocationCache.System.Collections.IEnumerable.GetEnumerator()", span="44-44"];
m20_27 [cluster="Nancy.ViewEngines.DefaultViewLocationCache.System.Collections.IEnumerable.GetEnumerator()", file="MinLengthRouteSegmentConstraint.cs", label="return GetEnumerator();", span="46-46"];
m20_28 [cluster="Nancy.ViewEngines.DefaultViewLocationCache.System.Collections.IEnumerable.GetEnumerator()", file="MinLengthRouteSegmentConstraint.cs", label="Exit Nancy.ViewEngines.DefaultViewLocationCache.System.Collections.IEnumerable.GetEnumerator()", span="44-44"];
m20_11 [cluster="Unk.GetSupportedViewExtensions", file="MinLengthRouteSegmentConstraint.cs", label="Entry Unk.GetSupportedViewExtensions", span=""];
m20_16 [cluster="Unk.SelectMany", file="MinLengthRouteSegmentConstraint.cs", label="Entry Unk.SelectMany", span=""];
m20_24 [cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()", file="MinLengthRouteSegmentConstraint.cs", label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0"];
m20_5 [cluster="Unk.GetLocatedViews", file="MinLengthRouteSegmentConstraint.cs", label="Entry Unk.GetLocatedViews", span=""];
m20_0 [cluster="Nancy.ViewEngines.DefaultViewLocationCache.DefaultViewLocationCache(Nancy.ViewEngines.IViewLocationProvider, System.Collections.Generic.IEnumerable<Nancy.ViewEngines.IViewEngine>)", file="MinLengthRouteSegmentConstraint.cs", label="Entry Nancy.ViewEngines.DefaultViewLocationCache.DefaultViewLocationCache(Nancy.ViewEngines.IViewLocationProvider, System.Collections.Generic.IEnumerable<Nancy.ViewEngines.IViewEngine>)", span="14-14"];
m20_1 [cluster="Nancy.ViewEngines.DefaultViewLocationCache.DefaultViewLocationCache(Nancy.ViewEngines.IViewLocationProvider, System.Collections.Generic.IEnumerable<Nancy.ViewEngines.IViewEngine>)", file="MinLengthRouteSegmentConstraint.cs", label="this.viewLocationProvider = viewLocationProvider", span="16-16"];
m20_2 [cluster="Nancy.ViewEngines.DefaultViewLocationCache.DefaultViewLocationCache(Nancy.ViewEngines.IViewLocationProvider, System.Collections.Generic.IEnumerable<Nancy.ViewEngines.IViewEngine>)", file="MinLengthRouteSegmentConstraint.cs", label="this.viewEngines = viewEngines", span="17-17"];
m20_3 [cluster="Nancy.ViewEngines.DefaultViewLocationCache.DefaultViewLocationCache(Nancy.ViewEngines.IViewLocationProvider, System.Collections.Generic.IEnumerable<Nancy.ViewEngines.IViewEngine>)", file="MinLengthRouteSegmentConstraint.cs", label="this.locatedViews = GetLocatedViews()", span="18-18"];
m20_4 [cluster="Nancy.ViewEngines.DefaultViewLocationCache.DefaultViewLocationCache(Nancy.ViewEngines.IViewLocationProvider, System.Collections.Generic.IEnumerable<Nancy.ViewEngines.IViewEngine>)", file="MinLengthRouteSegmentConstraint.cs", label="Exit Nancy.ViewEngines.DefaultViewLocationCache.DefaultViewLocationCache(Nancy.ViewEngines.IViewLocationProvider, System.Collections.Generic.IEnumerable<Nancy.ViewEngines.IViewEngine>)", span="14-14"];
m20_13 [cluster="Nancy.ViewEngines.DefaultViewLocationCache.GetSupportedViewExtensions()", file="MinLengthRouteSegmentConstraint.cs", label="Entry Nancy.ViewEngines.DefaultViewLocationCache.GetSupportedViewExtensions()", span="32-32"];
m20_14 [cluster="Nancy.ViewEngines.DefaultViewLocationCache.GetSupportedViewExtensions()", file="MinLengthRouteSegmentConstraint.cs", label="return this.viewEngines\r\n                .SelectMany(engine => engine.Extensions)\r\n                .Distinct();", span="34-36"];
m20_15 [cluster="Nancy.ViewEngines.DefaultViewLocationCache.GetSupportedViewExtensions()", file="MinLengthRouteSegmentConstraint.cs", label="Exit Nancy.ViewEngines.DefaultViewLocationCache.GetSupportedViewExtensions()", span="32-32"];
m20_38 [cluster="lambda expression", file="MinLengthRouteSegmentConstraint.cs", label="Entry lambda expression", span="78-83"];
m20_18 [cluster="lambda expression", file="MinLengthRouteSegmentConstraint.cs", label="Entry lambda expression", span="35-35"];
m20_19 [cluster="lambda expression", file="MinLengthRouteSegmentConstraint.cs", label="engine.Extensions", span="35-35"];
m20_20 [cluster="lambda expression", file="MinLengthRouteSegmentConstraint.cs", label="Exit lambda expression", span="35-35"];
m20_39 [cluster="lambda expression", file="MinLengthRouteSegmentConstraint.cs", label="new\r\n                                                                {\r\n                                                                    v.Name,\r\n                                                                    v.Location,\r\n                                                                    v.Extension\r\n                                                                }", span="78-83"];
m20_40 [cluster="lambda expression", file="MinLengthRouteSegmentConstraint.cs", label="Exit lambda expression", span="78-83"];
m20_32 [cluster="Nancy.ViewEngines.DefaultViewLocationCache.DefaultViewLocationCacheDiagnostics.GetAllViews()", file="MinLengthRouteSegmentConstraint.cs", label="Entry Nancy.ViewEngines.DefaultViewLocationCache.DefaultViewLocationCacheDiagnostics.GetAllViews()", span="76-76"];
m20_33 [cluster="Nancy.ViewEngines.DefaultViewLocationCache.DefaultViewLocationCacheDiagnostics.GetAllViews()", file="MinLengthRouteSegmentConstraint.cs", label="var x = this.cache.GetLocatedViews().Select(v => new\r\n                                                                {\r\n                                                                    v.Name,\r\n                                                                    v.Location,\r\n                                                                    v.Extension\r\n                                                                }).ToArray()", span="78-83"];
m20_34 [cluster="Nancy.ViewEngines.DefaultViewLocationCache.DefaultViewLocationCacheDiagnostics.GetAllViews()", file="MinLengthRouteSegmentConstraint.cs", label="return x;", span="85-85"];
m20_35 [cluster="Nancy.ViewEngines.DefaultViewLocationCache.DefaultViewLocationCacheDiagnostics.GetAllViews()", file="MinLengthRouteSegmentConstraint.cs", label="Exit Nancy.ViewEngines.DefaultViewLocationCache.DefaultViewLocationCacheDiagnostics.GetAllViews()", span="76-76"];
m20_17 [cluster="Unk.Distinct", file="MinLengthRouteSegmentConstraint.cs", label="Entry Unk.Distinct", span=""];
m20_37 [cluster="Unk.ToArray", file="MinLengthRouteSegmentConstraint.cs", label="Entry Unk.ToArray", span=""];
m20_36 [cluster="Unk.Select", file="MinLengthRouteSegmentConstraint.cs", label="Entry Unk.Select", span=""];
m20_41 [file="MinLengthRouteSegmentConstraint.cs", label="Nancy.ViewEngines.DefaultViewLocationCache", span=""];
m20_42 [file="MinLengthRouteSegmentConstraint.cs", label="Nancy.ViewEngines.DefaultViewLocationCache.DefaultViewLocationCacheDiagnostics", span=""];
m21_0 [cluster="Nancy.Routing.Constraints.MinRouteSegmentConstraint.TryMatch(string, string[], out int)", file="MinRouteSegmentConstraint.cs", label="Entry Nancy.Routing.Constraints.MinRouteSegmentConstraint.TryMatch(string, string[], out int)", span="9-9"];
m21_1 [cluster="Nancy.Routing.Constraints.MinRouteSegmentConstraint.TryMatch(string, string[], out int)", file="MinRouteSegmentConstraint.cs", label="int minValue", span="11-11"];
m21_3 [cluster="Nancy.Routing.Constraints.MinRouteSegmentConstraint.TryMatch(string, string[], out int)", file="MinRouteSegmentConstraint.cs", label="!this.TryParseInt(parameters[0], out minValue) ||\r\n                !this.TryParseInt(segment, out intValue)", span="14-15"];
m21_2 [cluster="Nancy.Routing.Constraints.MinRouteSegmentConstraint.TryMatch(string, string[], out int)", file="MinRouteSegmentConstraint.cs", label="int intValue", span="12-12"];
m21_4 [cluster="Nancy.Routing.Constraints.MinRouteSegmentConstraint.TryMatch(string, string[], out int)", file="MinRouteSegmentConstraint.cs", label="matchedValue = default(int)", span="17-17"];
m21_6 [cluster="Nancy.Routing.Constraints.MinRouteSegmentConstraint.TryMatch(string, string[], out int)", file="MinRouteSegmentConstraint.cs", label="intValue < minValue", span="21-21"];
m21_9 [cluster="Nancy.Routing.Constraints.MinRouteSegmentConstraint.TryMatch(string, string[], out int)", file="MinRouteSegmentConstraint.cs", label="matchedValue = intValue", span="27-27"];
m21_5 [cluster="Nancy.Routing.Constraints.MinRouteSegmentConstraint.TryMatch(string, string[], out int)", file="MinRouteSegmentConstraint.cs", label="return false;", span="18-18"];
m21_7 [cluster="Nancy.Routing.Constraints.MinRouteSegmentConstraint.TryMatch(string, string[], out int)", file="MinRouteSegmentConstraint.cs", label="matchedValue = default(int)", span="23-23"];
m21_8 [cluster="Nancy.Routing.Constraints.MinRouteSegmentConstraint.TryMatch(string, string[], out int)", file="MinRouteSegmentConstraint.cs", label="return false;", span="24-24"];
m21_10 [cluster="Nancy.Routing.Constraints.MinRouteSegmentConstraint.TryMatch(string, string[], out int)", file="MinRouteSegmentConstraint.cs", label="return true;", span="28-28"];
m21_11 [cluster="Nancy.Routing.Constraints.MinRouteSegmentConstraint.TryMatch(string, string[], out int)", file="MinRouteSegmentConstraint.cs", label="Exit Nancy.Routing.Constraints.MinRouteSegmentConstraint.TryMatch(string, string[], out int)", span="9-9"];
m21_12 [cluster="Nancy.Routing.Constraints.ParameterizedRouteSegmentConstraintBase<T>.TryParseInt(string, out int)", file="MinRouteSegmentConstraint.cs", label="Entry Nancy.Routing.Constraints.ParameterizedRouteSegmentConstraintBase<T>.TryParseInt(string, out int)", span="19-19"];
m21_13 [file="MinRouteSegmentConstraint.cs", label="Nancy.Routing.Constraints.MinRouteSegmentConstraint", span=""];
m22_18 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="ModelValidationDescriptor.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m22_17 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IEqualityComparer<TKey>)", file="ModelValidationDescriptor.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0"];
m22_6 [cluster="Nancy.Validation.ModelValidationDescriptor.GetModelValidationRuleDictionary(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationRule>)", file="ModelValidationDescriptor.cs", label="Entry Nancy.Validation.ModelValidationDescriptor.GetModelValidationRuleDictionary(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationRule>)", span="42-42"];
m22_7 [cluster="Nancy.Validation.ModelValidationDescriptor.GetModelValidationRuleDictionary(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationRule>)", file="ModelValidationDescriptor.cs", label="var results =\r\n                new Dictionary<string, IList<ModelValidationRule>>(StringComparer.OrdinalIgnoreCase)", span="44-45"];
m22_8 [cluster="Nancy.Validation.ModelValidationDescriptor.GetModelValidationRuleDictionary(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationRule>)", file="ModelValidationDescriptor.cs", label="rules == null", span="47-47"];
m22_10 [cluster="Nancy.Validation.ModelValidationDescriptor.GetModelValidationRuleDictionary(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationRule>)", file="ModelValidationDescriptor.cs", label=rules, span="52-52"];
m22_9 [cluster="Nancy.Validation.ModelValidationDescriptor.GetModelValidationRuleDictionary(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationRule>)", file="ModelValidationDescriptor.cs", label="return results;", span="49-49"];
m22_12 [cluster="Nancy.Validation.ModelValidationDescriptor.GetModelValidationRuleDictionary(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationRule>)", file="ModelValidationDescriptor.cs", label="!results.ContainsKey(name)", span="56-56"];
m22_13 [cluster="Nancy.Validation.ModelValidationDescriptor.GetModelValidationRuleDictionary(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationRule>)", file="ModelValidationDescriptor.cs", label="results.Add(name, new List<ModelValidationRule>())", span="58-58"];
m22_14 [cluster="Nancy.Validation.ModelValidationDescriptor.GetModelValidationRuleDictionary(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationRule>)", file="ModelValidationDescriptor.cs", label="results[name].Add(rule)", span="61-61"];
m22_15 [cluster="Nancy.Validation.ModelValidationDescriptor.GetModelValidationRuleDictionary(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationRule>)", file="ModelValidationDescriptor.cs", label="return results;", span="65-65"];
m22_11 [cluster="Nancy.Validation.ModelValidationDescriptor.GetModelValidationRuleDictionary(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationRule>)", file="ModelValidationDescriptor.cs", label="rule.MemberNames", span="54-54"];
m22_16 [cluster="Nancy.Validation.ModelValidationDescriptor.GetModelValidationRuleDictionary(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationRule>)", file="ModelValidationDescriptor.cs", label="Exit Nancy.Validation.ModelValidationDescriptor.GetModelValidationRuleDictionary(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationRule>)", span="42-42"];
m22_19 [cluster="System.Collections.Generic.List<T>.List()", file="ModelValidationDescriptor.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m22_20 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="ModelValidationDescriptor.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m22_21 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="ModelValidationDescriptor.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m22_0 [cluster="Nancy.Validation.ModelValidationDescriptor.ModelValidationDescriptor(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationRule>, System.Type)", file="ModelValidationDescriptor.cs", label="Entry Nancy.Validation.ModelValidationDescriptor.ModelValidationDescriptor(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationRule>, System.Type)", span="15-15"];
m22_1 [cluster="Nancy.Validation.ModelValidationDescriptor.ModelValidationDescriptor(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationRule>, System.Type)", file="ModelValidationDescriptor.cs", label="Exit Nancy.Validation.ModelValidationDescriptor.ModelValidationDescriptor(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationRule>, System.Type)", span="15-15"];
m22_2 [cluster="Nancy.Validation.ModelValidationDescriptor.ModelValidationDescriptor(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IList<Nancy.Validation.ModelValidationRule>>, System.Type)", file="ModelValidationDescriptor.cs", label="Entry Nancy.Validation.ModelValidationDescriptor.ModelValidationDescriptor(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IList<Nancy.Validation.ModelValidationRule>>, System.Type)", span="25-25"];
m22_3 [cluster="Nancy.Validation.ModelValidationDescriptor.ModelValidationDescriptor(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IList<Nancy.Validation.ModelValidationRule>>, System.Type)", file="ModelValidationDescriptor.cs", label="this.Rules = rules", span="27-27"];
m22_4 [cluster="Nancy.Validation.ModelValidationDescriptor.ModelValidationDescriptor(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IList<Nancy.Validation.ModelValidationRule>>, System.Type)", file="ModelValidationDescriptor.cs", label="this.ModelType = modelType", span="28-28"];
m22_5 [cluster="Nancy.Validation.ModelValidationDescriptor.ModelValidationDescriptor(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IList<Nancy.Validation.ModelValidationRule>>, System.Type)", file="ModelValidationDescriptor.cs", label="Exit Nancy.Validation.ModelValidationDescriptor.ModelValidationDescriptor(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IList<Nancy.Validation.ModelValidationRule>>, System.Type)", span="25-25"];
m22_22 [file="ModelValidationDescriptor.cs", label="Nancy.Validation.ModelValidationDescriptor", span=""];
m23_0 [cluster="Nancy.Tests.Fakes.FakeViewEngine.FakeViewEngine()", file="ModelValidationError.cs", label="Entry Nancy.Tests.Fakes.FakeViewEngine.FakeViewEngine()", span="8-8"];
m23_2 [cluster="Nancy.Validation.ModelValidationError.ModelValidationError(System.Collections.Generic.IEnumerable<string>, System.Func<string, string>)", file="ModelValidationError.cs", label="Entry Nancy.Validation.ModelValidationError.ModelValidationError(System.Collections.Generic.IEnumerable<string>, System.Func<string, string>)", span="33-33"];
m23_9 [cluster="Nancy.Responses.HtmlResponse.HtmlResponse(Nancy.HttpStatusCode, System.Action<System.IO.Stream>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IEnumerable<Nancy.Cookies.INancyCookie>)", file="ModelValidationError.cs", label="Entry Nancy.Responses.HtmlResponse.HtmlResponse(Nancy.HttpStatusCode, System.Action<System.IO.Stream>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IEnumerable<Nancy.Cookies.INancyCookie>)", span="19-19"];
m23_3 [cluster="Nancy.Validation.ModelValidationError.ModelValidationError(System.Collections.Generic.IEnumerable<string>, System.Func<string, string>)", color=green, community=0, file="ModelValidationError.cs", label="this.MemberNames = memberNames", prediction=14, span="35-35"];
m23_4 [cluster="Nancy.Validation.ModelValidationError.ModelValidationError(System.Collections.Generic.IEnumerable<string>, System.Func<string, string>)", color=green, community=0, file="ModelValidationError.cs", label="this.errorMessageFormatter = errorMessageFormatter", prediction=15, span="36-36"];
m23_8 [cluster="Nancy.Tests.Fakes.FakeViewEngine.RenderView(Nancy.ViewEngines.ViewLocationResult, dynamic, Nancy.ViewEngines.IRenderContext)", file="ModelValidationError.cs", label="Exit Nancy.Tests.Fakes.FakeViewEngine.RenderView(Nancy.ViewEngines.ViewLocationResult, dynamic, Nancy.ViewEngines.IRenderContext)", span="21-21"];
m23_5 [cluster="Nancy.Validation.ModelValidationError.ModelValidationError(System.Collections.Generic.IEnumerable<string>, System.Func<string, string>)", file="ModelValidationError.cs", label="Exit Nancy.Validation.ModelValidationError.ModelValidationError(System.Collections.Generic.IEnumerable<string>, System.Func<string, string>)", span="33-33"];
m23_10 [file="ModelValidationError.cs", label="Nancy.Validation.ModelValidationError", span=""];
m25_3 [cluster="System.Collections.Generic.List<T>.List()", file="ModelValidationResult.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m25_12 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="ModelValidationResult.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m25_0 [cluster="Nancy.Validation.ModelValidationResult.ModelValidationResult(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationError>)", file="ModelValidationResult.cs", label="Entry Nancy.Validation.ModelValidationResult.ModelValidationResult(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationError>)", span="20-20"];
m25_1 [cluster="Nancy.Validation.ModelValidationResult.ModelValidationResult(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationError>)", color=green, community=0, file="ModelValidationResult.cs", label="this.Errors = errors == null\r\n                ? new List<ModelValidationError>().AsReadOnly()\r\n                : errors.ToList().AsReadOnly()", prediction=16, span="22-24"];
m25_2 [cluster="Nancy.Validation.ModelValidationResult.ModelValidationResult(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationError>)", file="ModelValidationResult.cs", label="Exit Nancy.Validation.ModelValidationResult.ModelValidationResult(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationError>)", span="20-20"];
m25_4 [cluster="System.Collections.Generic.List<T>.AsReadOnly()", file="ModelValidationResult.cs", label="Entry System.Collections.Generic.List<T>.AsReadOnly()", span="0-0"];
m25_5 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="ModelValidationResult.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m25_19 [cluster="Nancy.Validation.ModelValidationError.ModelValidationError(System.Collections.Generic.IEnumerable<string>, System.Func<string, string>)", file="ModelValidationResult.cs", label="Entry Nancy.Validation.ModelValidationError.ModelValidationError(System.Collections.Generic.IEnumerable<string>, System.Func<string, string>)", span="33-33"];
m25_8 [cluster="Nancy.Validation.ModelValidationResult.AddError(string, string)", file="ModelValidationResult.cs", label="Entry Nancy.Validation.ModelValidationResult.AddError(string, string)", span="53-53"];
m25_9 [cluster="Nancy.Validation.ModelValidationResult.AddError(string, string)", color=green, community=0, file="ModelValidationResult.cs", label="return new ModelValidationResult(this.Errors.Concat(new[] { new ModelValidationError(memberName, s => errorMessage) }));", prediction=17, span="55-55"];
m25_10 [cluster="Nancy.Validation.ModelValidationResult.AddError(string, string)", file="ModelValidationResult.cs", label="Exit Nancy.Validation.ModelValidationResult.AddError(string, string)", span="53-53"];
m25_11 [cluster="Nancy.Validation.ModelValidationError.ModelValidationError(string, System.Func<string, string>)", file="ModelValidationResult.cs", label="Entry Nancy.Validation.ModelValidationError.ModelValidationError(string, System.Func<string, string>)", span="23-23"];
m25_20 [cluster="lambda expression", file="ModelValidationResult.cs", label="Entry lambda expression", span="66-66"];
m25_14 [cluster="lambda expression", color=green, community=0, file="ModelValidationResult.cs", label=errorMessage, prediction=18, span="55-55"];
m25_13 [cluster="lambda expression", file="ModelValidationResult.cs", label="Entry lambda expression", span="55-55"];
m25_15 [cluster="lambda expression", file="ModelValidationResult.cs", label="Exit lambda expression", span="55-55"];
m25_21 [cluster="lambda expression", color=green, community=0, file="ModelValidationResult.cs", label=errorMessage, prediction=19, span="66-66"];
m25_22 [cluster="lambda expression", file="ModelValidationResult.cs", label="Exit lambda expression", span="66-66"];
m25_16 [cluster="Nancy.Validation.ModelValidationResult.AddError(System.Collections.Generic.IEnumerable<string>, string)", file="ModelValidationResult.cs", label="Entry Nancy.Validation.ModelValidationResult.AddError(System.Collections.Generic.IEnumerable<string>, string)", span="64-64"];
m25_17 [cluster="Nancy.Validation.ModelValidationResult.AddError(System.Collections.Generic.IEnumerable<string>, string)", color=green, community=0, file="ModelValidationResult.cs", label="return new ModelValidationResult(Errors.Concat(new[] { new ModelValidationError(memberNames, s => errorMessage) }));", prediction=17, span="66-66"];
m25_18 [cluster="Nancy.Validation.ModelValidationResult.AddError(System.Collections.Generic.IEnumerable<string>, string)", file="ModelValidationResult.cs", label="Exit Nancy.Validation.ModelValidationResult.AddError(System.Collections.Generic.IEnumerable<string>, string)", span="64-64"];
m25_23 [file="ModelValidationResult.cs", label="Nancy.Validation.ModelValidationResult", span=""];
m25_24 [file="ModelValidationResult.cs", label=string, span=""];
m25_25 [file="ModelValidationResult.cs", label=string, span=""];
m26_8 [cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_be_valid_when_no_validator_exists_for_type()", file="ModuleExtensionsFixture.cs", label="Entry Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_be_valid_when_no_validator_exists_for_type()", span="26-26"];
m26_9 [cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_be_valid_when_no_validator_exists_for_type()", file="ModuleExtensionsFixture.cs", label="var result = subject.Validate<FakeModel>(new FakeModel())", span="29-29"];
m26_10 [cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_be_valid_when_no_validator_exists_for_type()", file="ModuleExtensionsFixture.cs", label="result.IsValid.ShouldBeTrue()", span="32-32"];
m26_11 [cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_be_valid_when_no_validator_exists_for_type()", file="ModuleExtensionsFixture.cs", label="Exit Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_be_valid_when_no_validator_exists_for_type()", span="26-26"];
m26_57 [cluster="Unk.MustHaveHappened", file="ModuleExtensionsFixture.cs", label="Entry Unk.MustHaveHappened", span=""];
m26_0 [cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.ModuleExtensionsFixture()", file="ModuleExtensionsFixture.cs", label="Entry Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.ModuleExtensionsFixture()", span="14-14"];
m26_1 [cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.ModuleExtensionsFixture()", file="ModuleExtensionsFixture.cs", label="this.context = new NancyContext()", span="16-16"];
m26_2 [cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.ModuleExtensionsFixture()", file="ModuleExtensionsFixture.cs", label="this.validatorLocator = A.Fake<IModelValidatorLocator>()", span="17-17"];
m26_3 [cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.ModuleExtensionsFixture()", file="ModuleExtensionsFixture.cs", label="this.subject = new FakeNancyModule\r\n            {\r\n                Context = this.context,\r\n                ValidatorLocator = this.validatorLocator\r\n            }", span="18-22"];
m26_4 [cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.ModuleExtensionsFixture()", file="ModuleExtensionsFixture.cs", label="Exit Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.ModuleExtensionsFixture()", span="14-14"];
m26_51 [cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_pass_context_to_validator()", file="ModuleExtensionsFixture.cs", label="Entry Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_pass_context_to_validator()", span="66-66"];
m26_52 [cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_pass_context_to_validator()", file="ModuleExtensionsFixture.cs", label="var validator = A.Fake<IModelValidator>()", span="69-69"];
m26_53 [cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_pass_context_to_validator()", file="ModuleExtensionsFixture.cs", label="A.CallTo(() => validatorLocator.GetValidatorForType(A<Type>.Ignored)).Returns(validator)", span="70-70"];
m26_55 [cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_pass_context_to_validator()", file="ModuleExtensionsFixture.cs", label="A.CallTo(() => validator.Validate(A<object>._, this.context)).MustHaveHappened()", span="76-76"];
m26_54 [cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_pass_context_to_validator()", file="ModuleExtensionsFixture.cs", label="subject.Validate(new FakeModel())", span="73-73"];
m26_56 [cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_pass_context_to_validator()", file="ModuleExtensionsFixture.cs", label="Exit Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_pass_context_to_validator()", span="66-66"];
m26_27 [cluster="Unk.Validate", file="ModuleExtensionsFixture.cs", label="Entry Unk.Validate", span=""];
m26_6 [cluster="Unk.>", file="ModuleExtensionsFixture.cs", label="Entry Unk.>", span=""];
m26_39 [cluster="Nancy.Validation.ModelValidationResult.ModelValidationResult(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationError>)", file="ModuleExtensionsFixture.cs", label="Entry Nancy.Validation.ModelValidationResult.ModelValidationResult(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationError>)", span="20-20"];
m26_41 [cluster="bool.ShouldBeFalse()", file="ModuleExtensionsFixture.cs", label="Entry bool.ShouldBeFalse()", span="90-90"];
m26_32 [cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_be_invalid_when_a_validator_exists_and_the_instance_is_valid()", file="ModuleExtensionsFixture.cs", label="Entry Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_be_invalid_when_a_validator_exists_and_the_instance_is_valid()", span="51-51"];
m26_33 [cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_be_invalid_when_a_validator_exists_and_the_instance_is_valid()", file="ModuleExtensionsFixture.cs", label="var validator = A.Fake<IModelValidator>()", span="54-54"];
m26_35 [cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_be_invalid_when_a_validator_exists_and_the_instance_is_valid()", file="ModuleExtensionsFixture.cs", label="A.CallTo(() => validatorLocator.GetValidatorForType(A<Type>.Ignored)).Returns(validator)", span="56-56"];
m26_36 [cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_be_invalid_when_a_validator_exists_and_the_instance_is_valid()", file="ModuleExtensionsFixture.cs", label="var result = subject.Validate(new FakeModel())", span="59-59"];
m26_37 [cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_be_invalid_when_a_validator_exists_and_the_instance_is_valid()", file="ModuleExtensionsFixture.cs", label="result.IsValid.ShouldBeFalse()", span="62-62"];
m26_38 [cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_be_invalid_when_a_validator_exists_and_the_instance_is_valid()", file="ModuleExtensionsFixture.cs", label="Exit Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_be_invalid_when_a_validator_exists_and_the_instance_is_valid()", span="51-51"];
m26_13 [cluster="Nancy.INancyModule.Validate<T>(T)", file="ModuleExtensionsFixture.cs", label="Entry Nancy.INancyModule.Validate<T>(T)", span="14-14"];
m26_31 [cluster="Unk.GetValidatorForType", file="ModuleExtensionsFixture.cs", label="Entry Unk.GetValidatorForType", span=""];
m26_12 [cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.FakeModel.FakeModel()", file="ModuleExtensionsFixture.cs", label="Entry Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.FakeModel.FakeModel()", span="94-94"];
m26_7 [cluster="Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModule()", file="ModuleExtensionsFixture.cs", label="Entry Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModule()", span="6-6"];
m26_14 [cluster="bool.ShouldBeTrue()", file="ModuleExtensionsFixture.cs", label="Entry bool.ShouldBeTrue()", span="85-85"];
m26_15 [cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_be_valid_when_a_validator_exists_and_the_instance_is_valid()", file="ModuleExtensionsFixture.cs", label="Entry Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_be_valid_when_a_validator_exists_and_the_instance_is_valid()", span="36-36"];
m26_16 [cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_be_valid_when_a_validator_exists_and_the_instance_is_valid()", file="ModuleExtensionsFixture.cs", label="var validator = A.Fake<IModelValidator>()", span="39-39"];
m26_17 [cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_be_valid_when_a_validator_exists_and_the_instance_is_valid()", file="ModuleExtensionsFixture.cs", label="A.CallTo(() => validator.Validate(A<object>.Ignored, A<NancyContext>._)).Returns(ModelValidationResult.Valid)", span="40-40"];
m26_18 [cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_be_valid_when_a_validator_exists_and_the_instance_is_valid()", file="ModuleExtensionsFixture.cs", label="A.CallTo(() => validatorLocator.GetValidatorForType(A<Type>.Ignored)).Returns(validator)", span="41-41"];
m26_19 [cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_be_valid_when_a_validator_exists_and_the_instance_is_valid()", file="ModuleExtensionsFixture.cs", label="var result = subject.Validate(new FakeModel())", span="44-44"];
m26_20 [cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_be_valid_when_a_validator_exists_and_the_instance_is_valid()", file="ModuleExtensionsFixture.cs", label="result.IsValid.ShouldBeTrue()", span="47-47"];
m26_21 [cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_be_valid_when_a_validator_exists_and_the_instance_is_valid()", file="ModuleExtensionsFixture.cs", label="Exit Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_be_valid_when_a_validator_exists_and_the_instance_is_valid()", span="36-36"];
m26_22 [cluster="Unk.CallTo", file="ModuleExtensionsFixture.cs", label="Entry Unk.CallTo", span=""];
m26_5 [cluster="Nancy.NancyContext.NancyContext()", file="ModuleExtensionsFixture.cs", label="Entry Nancy.NancyContext.NancyContext()", span="25-25"];
m26_74 [cluster="lambda expression", file="ModuleExtensionsFixture.cs", label="Entry lambda expression", span="91-91"];
m26_25 [cluster="lambda expression", file="ModuleExtensionsFixture.cs", label="validator.Validate(A<object>.Ignored, A<NancyContext>._)", span="40-40"];
m26_24 [cluster="lambda expression", file="ModuleExtensionsFixture.cs", label="Entry lambda expression", span="40-40"];
m26_28 [cluster="lambda expression", file="ModuleExtensionsFixture.cs", label="Entry lambda expression", span="41-41"];
m26_26 [cluster="lambda expression", file="ModuleExtensionsFixture.cs", label="Exit lambda expression", span="40-40"];
m26_29 [cluster="lambda expression", file="ModuleExtensionsFixture.cs", label="validatorLocator.GetValidatorForType(A<Type>.Ignored)", span="41-41"];
m26_30 [cluster="lambda expression", file="ModuleExtensionsFixture.cs", label="Exit lambda expression", span="41-41"];
m26_42 [cluster="lambda expression", file="ModuleExtensionsFixture.cs", label="Entry lambda expression", span="55-55"];
m26_48 [cluster="lambda expression", file="ModuleExtensionsFixture.cs", label="Entry lambda expression", span="56-56"];
m26_44 [cluster="lambda expression", file="ModuleExtensionsFixture.cs", label="Exit lambda expression", span="55-55"];
m26_45 [cluster="lambda expression", file="ModuleExtensionsFixture.cs", label="Entry lambda expression", span="55-55"];
m26_47 [cluster="lambda expression", file="ModuleExtensionsFixture.cs", label="Exit lambda expression", span="55-55"];
m26_49 [cluster="lambda expression", file="ModuleExtensionsFixture.cs", label="validatorLocator.GetValidatorForType(A<Type>.Ignored)", span="56-56"];
m26_50 [cluster="lambda expression", file="ModuleExtensionsFixture.cs", label="Exit lambda expression", span="56-56"];
m26_62 [cluster="lambda expression", file="ModuleExtensionsFixture.cs", label="validator.Validate(A<object>._, this.context)", span="76-76"];
m26_58 [cluster="lambda expression", file="ModuleExtensionsFixture.cs", label="Entry lambda expression", span="70-70"];
m26_61 [cluster="lambda expression", file="ModuleExtensionsFixture.cs", label="Entry lambda expression", span="76-76"];
m26_59 [cluster="lambda expression", file="ModuleExtensionsFixture.cs", label="validatorLocator.GetValidatorForType(A<Type>.Ignored)", span="70-70"];
m26_60 [cluster="lambda expression", file="ModuleExtensionsFixture.cs", label="Exit lambda expression", span="70-70"];
m26_63 [cluster="lambda expression", file="ModuleExtensionsFixture.cs", label="Exit lambda expression", span="76-76"];
m26_75 [cluster="lambda expression", file="ModuleExtensionsFixture.cs", label="validator.Validate(model, A<NancyContext>._)", span="91-91"];
m26_71 [cluster="lambda expression", file="ModuleExtensionsFixture.cs", label="Entry lambda expression", span="85-85"];
m26_72 [cluster="lambda expression", file="ModuleExtensionsFixture.cs", label="validatorLocator.GetValidatorForType(A<Type>.Ignored)", span="85-85"];
m26_73 [cluster="lambda expression", file="ModuleExtensionsFixture.cs", label="Exit lambda expression", span="85-85"];
m26_76 [cluster="lambda expression", file="ModuleExtensionsFixture.cs", label="Exit lambda expression", span="91-91"];
m26_64 [cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_pass_model_instance_to_validator()", file="ModuleExtensionsFixture.cs", label="Entry Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_pass_model_instance_to_validator()", span="80-80"];
m26_65 [cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_pass_model_instance_to_validator()", file="ModuleExtensionsFixture.cs", label="var model = new FakeModel()", span="83-83"];
m26_66 [cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_pass_model_instance_to_validator()", file="ModuleExtensionsFixture.cs", label="var validator = A.Fake<IModelValidator>()", span="84-84"];
m26_68 [cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_pass_model_instance_to_validator()", file="ModuleExtensionsFixture.cs", label="subject.Validate(model)", span="88-88"];
m26_69 [cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_pass_model_instance_to_validator()", file="ModuleExtensionsFixture.cs", label="A.CallTo(() => validator.Validate(model, A<NancyContext>._)).MustHaveHappened()", span="91-91"];
m26_67 [cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_pass_model_instance_to_validator()", file="ModuleExtensionsFixture.cs", label="A.CallTo(() => validatorLocator.GetValidatorForType(A<Type>.Ignored)).Returns(validator)", span="85-85"];
m26_70 [cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_pass_model_instance_to_validator()", file="ModuleExtensionsFixture.cs", label="Exit Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_pass_model_instance_to_validator()", span="80-80"];
m26_23 [cluster="Unk.Returns", file="ModuleExtensionsFixture.cs", label="Entry Unk.Returns", span=""];
m26_40 [cluster="Nancy.Validation.ModelValidationError.ModelValidationError(string, System.Func<string, string>)", file="ModuleExtensionsFixture.cs", label="Entry Nancy.Validation.ModelValidationError.ModelValidationError(string, System.Func<string, string>)", span="23-23"];
m26_77 [file="ModuleExtensionsFixture.cs", label="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture", span=""];
m26_78 [file="ModuleExtensionsFixture.cs", label=validator, span=""];
m26_79 [file="ModuleExtensionsFixture.cs", label=validator, span=""];
m26_80 [file="ModuleExtensionsFixture.cs", label=validator, span=""];
m26_81 [file="ModuleExtensionsFixture.cs", label=model, span=""];
m26_82 [file="ModuleExtensionsFixture.cs", label=validator, span=""];
m27_6 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="NancyContext.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m27_9 [cluster="Nancy.NancyContext.Dispose()", file="NancyContext.cs", label="Entry Nancy.NancyContext.Dispose()", span="115-115"];
m27_10 [cluster="Nancy.NancyContext.Dispose()", file="NancyContext.cs", label="this.Items.Values.OfType<IDisposable>()", span="117-117"];
m27_11 [cluster="Nancy.NancyContext.Dispose()", file="NancyContext.cs", label="disposableItem.Dispose()", span="119-119"];
m27_12 [cluster="Nancy.NancyContext.Dispose()", file="NancyContext.cs", label="this.Items.Clear()", span="122-122"];
m27_13 [cluster="Nancy.NancyContext.Dispose()", file="NancyContext.cs", label="this.request != null", span="124-124"];
m27_14 [cluster="Nancy.NancyContext.Dispose()", file="NancyContext.cs", label="((IDisposable) this.request).Dispose()", span="126-126"];
m27_15 [cluster="Nancy.NancyContext.Dispose()", file="NancyContext.cs", label="this.Response != null", span="129-129"];
m27_16 [cluster="Nancy.NancyContext.Dispose()", file="NancyContext.cs", label="this.Response.Dispose()", span="131-131"];
m27_17 [cluster="Nancy.NancyContext.Dispose()", file="NancyContext.cs", label="Exit Nancy.NancyContext.Dispose()", span="115-115"];
m27_7 [cluster="Nancy.Diagnostics.RequestTrace.RequestTrace()", file="NancyContext.cs", label="Entry Nancy.Diagnostics.RequestTrace.RequestTrace()", span="33-33"];
m27_20 [cluster="System.Collections.Generic.ICollection<T>.Clear()", file="NancyContext.cs", label="Entry System.Collections.Generic.ICollection<T>.Clear()", span="0-0"];
m27_0 [cluster="Nancy.NancyContext.NancyContext()", file="NancyContext.cs", label="Entry Nancy.NancyContext.NancyContext()", span="25-25"];
m27_1 [cluster="Nancy.NancyContext.NancyContext()", file="NancyContext.cs", label="this.Items = new Dictionary<string, object>()", span="27-27"];
m27_2 [cluster="Nancy.NancyContext.NancyContext()", file="NancyContext.cs", label="this.Trace = new RequestTrace()", span="28-28"];
m27_3 [cluster="Nancy.NancyContext.NancyContext()", file="NancyContext.cs", label="this.ViewBag = new DynamicDictionary()", span="29-29"];
m27_4 [cluster="Nancy.NancyContext.NancyContext()", file="NancyContext.cs", label="this.ControlPanelEnabled = true", span="32-32"];
m27_5 [cluster="Nancy.NancyContext.NancyContext()", file="NancyContext.cs", label="Exit Nancy.NancyContext.NancyContext()", span="25-25"];
m27_8 [cluster="Nancy.DynamicDictionary.DynamicDictionary()", file="NancyContext.cs", label="Entry Nancy.DynamicDictionary.DynamicDictionary()", span="10-10"];
m27_19 [cluster="System.IDisposable.Dispose()", file="NancyContext.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m27_18 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="NancyContext.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m27_21 [cluster="Nancy.Response.Dispose()", file="NancyContext.cs", label="Entry Nancy.Response.Dispose()", span="192-192"];
m27_22 [file="NancyContext.cs", label="Nancy.NancyContext", span=""];
m28_24 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="NancyRazorErrorView.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m28_34 [cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="NancyRazorErrorView.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0"];
m28_25 [cluster="System.Collections.Generic.List<T>.List()", file="NancyRazorErrorView.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m28_30 [cluster="System.Tuple<T1, T2>.Tuple(T1, T2)", file="NancyRazorErrorView.cs", label="Entry System.Tuple<T1, T2>.Tuple(T1, T2)", span="0-0"];
m28_19 [cluster="Nancy.Routing.RouteCache.AddRoutesToCache(System.Collections.Generic.IEnumerable<Nancy.Routing.RouteDescription>, string)", file="NancyRazorErrorView.cs", label="Entry Nancy.Routing.RouteCache.AddRoutesToCache(System.Collections.Generic.IEnumerable<Nancy.Routing.RouteDescription>, string)", span="29-29"];
m28_20 [cluster="Nancy.Routing.RouteCache.AddRoutesToCache(System.Collections.Generic.IEnumerable<Nancy.Routing.RouteDescription>, string)", file="NancyRazorErrorView.cs", label="!this.ContainsKey(moduleKey)", span="31-31"];
m28_21 [cluster="Nancy.Routing.RouteCache.AddRoutesToCache(System.Collections.Generic.IEnumerable<Nancy.Routing.RouteDescription>, string)", file="NancyRazorErrorView.cs", label="this[moduleKey] = new List<Tuple<int, RouteDescription>>()", span="33-33"];
m28_22 [cluster="Nancy.Routing.RouteCache.AddRoutesToCache(System.Collections.Generic.IEnumerable<Nancy.Routing.RouteDescription>, string)", file="NancyRazorErrorView.cs", label="this[moduleKey].AddRange(routes.Select((r, i) => new Tuple<int, RouteDescription>(i, r)))", span="36-36"];
m28_23 [cluster="Nancy.Routing.RouteCache.AddRoutesToCache(System.Collections.Generic.IEnumerable<Nancy.Routing.RouteDescription>, string)", file="NancyRazorErrorView.cs", label="Exit Nancy.Routing.RouteCache.AddRoutesToCache(System.Collections.Generic.IEnumerable<Nancy.Routing.RouteDescription>, string)", span="29-29"];
m28_0 [cluster="Nancy.Routing.RouteCache.RouteCache(Nancy.INancyModuleCatalog, Nancy.Bootstrapper.IModuleKeyGenerator, Nancy.INancyContextFactory)", file="NancyRazorErrorView.cs", label="Entry Nancy.Routing.RouteCache.RouteCache(Nancy.INancyModuleCatalog, Nancy.Bootstrapper.IModuleKeyGenerator, Nancy.INancyContextFactory)", span="11-11"];
m28_1 [cluster="Nancy.Routing.RouteCache.RouteCache(Nancy.INancyModuleCatalog, Nancy.Bootstrapper.IModuleKeyGenerator, Nancy.INancyContextFactory)", file="NancyRazorErrorView.cs", label="this.moduleKeyGenerator = moduleKeyGenerator", span="13-13"];
m28_2 [cluster="Nancy.Routing.RouteCache.RouteCache(Nancy.INancyModuleCatalog, Nancy.Bootstrapper.IModuleKeyGenerator, Nancy.INancyContextFactory)", file="NancyRazorErrorView.cs", label="this.BuildCache(moduleCatalog.GetAllModules(contextFactory.Create()))", span="15-15"];
m28_3 [cluster="Nancy.Routing.RouteCache.RouteCache(Nancy.INancyModuleCatalog, Nancy.Bootstrapper.IModuleKeyGenerator, Nancy.INancyContextFactory)", file="NancyRazorErrorView.cs", label="Exit Nancy.Routing.RouteCache.RouteCache(Nancy.INancyModuleCatalog, Nancy.Bootstrapper.IModuleKeyGenerator, Nancy.INancyContextFactory)", span="11-11"];
m28_15 [cluster="Unk.AddRoutesToCache", file="NancyRazorErrorView.cs", label="Entry Unk.AddRoutesToCache", span=""];
m28_6 [cluster="Nancy.Routing.RouteCache.BuildCache(System.Collections.Generic.IEnumerable<Nancy.NancyModule>)", file="NancyRazorErrorView.cs", label="Entry Nancy.Routing.RouteCache.BuildCache(System.Collections.Generic.IEnumerable<Nancy.NancyModule>)", span="18-18"];
m28_7 [cluster="Nancy.Routing.RouteCache.BuildCache(System.Collections.Generic.IEnumerable<Nancy.NancyModule>)", file="NancyRazorErrorView.cs", label=modules, span="20-20"];
m28_8 [cluster="Nancy.Routing.RouteCache.BuildCache(System.Collections.Generic.IEnumerable<Nancy.NancyModule>)", file="NancyRazorErrorView.cs", label="var moduleType = module.GetType()", span="22-22"];
m28_10 [cluster="Nancy.Routing.RouteCache.BuildCache(System.Collections.Generic.IEnumerable<Nancy.NancyModule>)", file="NancyRazorErrorView.cs", label="this.AddRoutesToCache(module.Routes.Select(r => r.Description), moduleKey)", span="25-25"];
m28_9 [cluster="Nancy.Routing.RouteCache.BuildCache(System.Collections.Generic.IEnumerable<Nancy.NancyModule>)", file="NancyRazorErrorView.cs", label="var moduleKey = this.moduleKeyGenerator.GetKeyForModuleType(moduleType)", span="23-23"];
m28_11 [cluster="Nancy.Routing.RouteCache.BuildCache(System.Collections.Generic.IEnumerable<Nancy.NancyModule>)", file="NancyRazorErrorView.cs", label="Exit Nancy.Routing.RouteCache.BuildCache(System.Collections.Generic.IEnumerable<Nancy.NancyModule>)", span="18-18"];
m28_5 [cluster="Nancy.INancyModuleCatalog.GetAllModules(Nancy.NancyContext)", file="NancyRazorErrorView.cs", label="Entry Nancy.INancyModuleCatalog.GetAllModules(Nancy.NancyContext)", span="14-14"];
m28_26 [cluster="Unk.AddRange", file="NancyRazorErrorView.cs", label="Entry Unk.AddRange", span=""];
m28_4 [cluster="Nancy.INancyContextFactory.Create()", file="NancyRazorErrorView.cs", label="Entry Nancy.INancyContextFactory.Create()", span="11-11"];
m28_13 [cluster="Nancy.Bootstrapper.IModuleKeyGenerator.GetKeyForModuleType(System.Type)", file="NancyRazorErrorView.cs", label="Entry Nancy.Bootstrapper.IModuleKeyGenerator.GetKeyForModuleType(System.Type)", span="14-14"];
m28_12 [cluster="object.GetType()", file="NancyRazorErrorView.cs", label="Entry object.GetType()", span="0-0"];
m28_36 [cluster="lambda expression", file="NancyRazorErrorView.cs", label="Entry lambda expression", span="41-41"];
m28_16 [cluster="lambda expression", file="NancyRazorErrorView.cs", label="Entry lambda expression", span="25-25"];
m28_17 [cluster="lambda expression", file="NancyRazorErrorView.cs", label="r.Description", span="25-25"];
m28_18 [cluster="lambda expression", file="NancyRazorErrorView.cs", label="Exit lambda expression", span="25-25"];
m28_27 [cluster="lambda expression", file="NancyRazorErrorView.cs", label="Entry lambda expression", span="36-36"];
m28_28 [cluster="lambda expression", file="NancyRazorErrorView.cs", label="new Tuple<int, RouteDescription>(i, r)", span="36-36"];
m28_29 [cluster="lambda expression", file="NancyRazorErrorView.cs", label="Exit lambda expression", span="36-36"];
m28_37 [cluster="lambda expression", file="NancyRazorErrorView.cs", label=r, span="41-41"];
m28_38 [cluster="lambda expression", file="NancyRazorErrorView.cs", label="Exit lambda expression", span="41-41"];
m28_31 [cluster="Nancy.Routing.RouteCache.IsEmpty()", file="NancyRazorErrorView.cs", label="Entry Nancy.Routing.RouteCache.IsEmpty()", span="39-39"];
m28_32 [cluster="Nancy.Routing.RouteCache.IsEmpty()", file="NancyRazorErrorView.cs", label="return this.Values.SelectMany(r => r).Count() == 0;", span="41-41"];
m28_33 [cluster="Nancy.Routing.RouteCache.IsEmpty()", file="NancyRazorErrorView.cs", label="Exit Nancy.Routing.RouteCache.IsEmpty()", span="39-39"];
m28_35 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="NancyRazorErrorView.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m28_14 [cluster="Unk.Select", file="NancyRazorErrorView.cs", label="Entry Unk.Select", span=""];
m28_39 [file="NancyRazorErrorView.cs", label="Nancy.Routing.RouteCache", span=""];
m29_13 [cluster="string.Split(params char[])", file="ParameterizedRouteSegmentConstraintBase.cs", label="Entry string.Split(params char[])", span="0-0"];
m29_12 [cluster="string.Trim(params char[])", file="ParameterizedRouteSegmentConstraintBase.cs", label="Entry string.Trim(params char[])", span="0-0"];
m29_3 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="ParameterizedRouteSegmentConstraintBase.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0"];
m29_15 [cluster="Nancy.Routing.Constraints.ParameterizedRouteSegmentConstraintBase<T>.TryParseInt(string, out int)", file="ParameterizedRouteSegmentConstraintBase.cs", label="Entry Nancy.Routing.Constraints.ParameterizedRouteSegmentConstraintBase<T>.TryParseInt(string, out int)", span="19-19"];
m29_16 [cluster="Nancy.Routing.Constraints.ParameterizedRouteSegmentConstraintBase<T>.TryParseInt(string, out int)", color=green, community=0, file="ParameterizedRouteSegmentConstraintBase.cs", label="return int.TryParse(@string, NumberStyles.Integer, CultureInfo.InvariantCulture, out result);", prediction=21, span="31-31"];
m29_17 [cluster="Nancy.Routing.Constraints.ParameterizedRouteSegmentConstraintBase<T>.TryParseInt(string, out int)", file="ParameterizedRouteSegmentConstraintBase.cs", label="Exit Nancy.Routing.Constraints.ParameterizedRouteSegmentConstraintBase<T>.TryParseInt(string, out int)", span="19-19"];
m29_18 [cluster="int.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out int)", file="ParameterizedRouteSegmentConstraintBase.cs", label="Entry int.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out int)", span="0-0"];
m29_7 [cluster="Nancy.Routing.Constraints.ParameterizedRouteSegmentConstraintBase<T>.TryMatch(string, string, out T)", file="ParameterizedRouteSegmentConstraintBase.cs", label="Entry Nancy.Routing.Constraints.ParameterizedRouteSegmentConstraintBase<T>.TryMatch(string, string, out T)", span="12-12"];
m29_8 [cluster="Nancy.Routing.Constraints.ParameterizedRouteSegmentConstraintBase<T>.TryMatch(string, string, out T)", file="ParameterizedRouteSegmentConstraintBase.cs", label="var parameters = constraint.Substring(constraint.IndexOf('(')).Trim('(', ')').Split(',')", span="14-14"];
m29_9 [cluster="Nancy.Routing.Constraints.ParameterizedRouteSegmentConstraintBase<T>.TryMatch(string, string, out T)", file="ParameterizedRouteSegmentConstraintBase.cs", label="return TryMatch(segment, parameters, out matchedValue);", span="16-16"];
m29_10 [cluster="Nancy.Routing.Constraints.ParameterizedRouteSegmentConstraintBase<T>.TryMatch(string, string, out T)", file="ParameterizedRouteSegmentConstraintBase.cs", label="Exit Nancy.Routing.Constraints.ParameterizedRouteSegmentConstraintBase<T>.TryMatch(string, string, out T)", span="12-12"];
m29_4 [cluster="string.IndexOf(char)", file="ParameterizedRouteSegmentConstraintBase.cs", label="Entry string.IndexOf(char)", span="0-0"];
m29_0 [cluster="Nancy.Routing.Constraints.ParameterizedRouteSegmentConstraintBase<T>.Matches(string)", file="ParameterizedRouteSegmentConstraintBase.cs", label="Entry Nancy.Routing.Constraints.ParameterizedRouteSegmentConstraintBase<T>.Matches(string)", span="7-7"];
m29_1 [cluster="Nancy.Routing.Constraints.ParameterizedRouteSegmentConstraintBase<T>.Matches(string)", file="ParameterizedRouteSegmentConstraintBase.cs", label="return constraint.Contains('(') && constraint.Contains(')') && base.Matches(constraint.Substring(0, constraint.IndexOf('(')));", span="9-9"];
m29_2 [cluster="Nancy.Routing.Constraints.ParameterizedRouteSegmentConstraintBase<T>.Matches(string)", file="ParameterizedRouteSegmentConstraintBase.cs", label="Exit Nancy.Routing.Constraints.ParameterizedRouteSegmentConstraintBase<T>.Matches(string)", span="7-7"];
m29_6 [cluster="Nancy.Routing.Constraints.RouteSegmentConstraintBase<T>.Matches(string)", file="ParameterizedRouteSegmentConstraintBase.cs", label="Entry Nancy.Routing.Constraints.RouteSegmentConstraintBase<T>.Matches(string)", span="10-10"];
m29_14 [cluster="Nancy.Routing.Constraints.ParameterizedRouteSegmentConstraintBase<T>.TryMatch(string, string[], out T)", file="ParameterizedRouteSegmentConstraintBase.cs", label="Entry Nancy.Routing.Constraints.ParameterizedRouteSegmentConstraintBase<T>.TryMatch(string, string[], out T)", span="24-24"];
m29_19 [cluster="Nancy.Routing.Constraints.ParameterizedRouteSegmentConstraintBase<T>.TryMatch(string, string[], out T)", file="ParameterizedRouteSegmentConstraintBase.cs", label="Exit Nancy.Routing.Constraints.ParameterizedRouteSegmentConstraintBase<T>.TryMatch(string, string[], out T)", span="24-24"];
m29_5 [cluster="string.Substring(int, int)", file="ParameterizedRouteSegmentConstraintBase.cs", label="Entry string.Substring(int, int)", span="0-0"];
m29_11 [cluster="string.Substring(int)", file="ParameterizedRouteSegmentConstraintBase.cs", label="Entry string.Substring(int)", span="0-0"];
m29_20 [file="ParameterizedRouteSegmentConstraintBase.cs", label="Nancy.Routing.Constraints.ParameterizedRouteSegmentConstraintBase<T>", span=""];
m30_444 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_options_request_when_route_is_defined()", file="PropertyValidatorFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_options_request_when_route_is_defined()", span="454-454"];
m30_445 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_options_request_when_route_is_defined()", file="PropertyValidatorFixture.cs", label="var request = new FakeRequest(''OPTIONS'', ''/foo/bar'')", span="457-457"];
m30_446 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_options_request_when_route_is_defined()", file="PropertyValidatorFixture.cs", label="var context = new NancyContext {Request = request}", span="458-458"];
m30_447 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_options_request_when_route_is_defined()", file="PropertyValidatorFixture.cs", label="var resolver = CreateResolver(x => x.AddGetRoute(''/foo/bar''))", span="459-459"];
m30_448 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_options_request_when_route_is_defined()", file="PropertyValidatorFixture.cs", label="var resolvedRoute = resolver.Resolve(context)", span="462-462"];
m30_449 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_options_request_when_route_is_defined()", file="PropertyValidatorFixture.cs", label="resolvedRoute.ShouldNotBeNull()", span="465-465"];
m30_450 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_options_request_when_route_is_defined()", file="PropertyValidatorFixture.cs", label="resolvedRoute.Item1.ShouldBeOfType<OptionsRoute>()", span="466-466"];
m30_451 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_options_request_when_route_is_defined()", file="PropertyValidatorFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_options_request_when_route_is_defined()", span="454-454"];
m30_478 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_optionsroute_with_allow_header_set_to_allowed_methods_matching_request_route_for_options()", file="PropertyValidatorFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_optionsroute_with_allow_header_set_to_allowed_methods_matching_request_route_for_options()", span="503-503"];
m30_479 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_optionsroute_with_allow_header_set_to_allowed_methods_matching_request_route_for_options()", file="PropertyValidatorFixture.cs", label="var request = new FakeRequest(''OPTIONS'', ''/foo/bar'')", span="506-506"];
m30_480 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_optionsroute_with_allow_header_set_to_allowed_methods_matching_request_route_for_options()", file="PropertyValidatorFixture.cs", label="var context = new NancyContext {Request = request}", span="507-507"];
m30_481 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_optionsroute_with_allow_header_set_to_allowed_methods_matching_request_route_for_options()", file="PropertyValidatorFixture.cs", label="var resolver = CreateResolver(x =>\r\n            {\r\n                x.AddGetRoute(''/foo/bar'');\r\n                x.AddPutRoute(''/foo/bar'');\r\n            })", span="508-512"];
m30_482 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_optionsroute_with_allow_header_set_to_allowed_methods_matching_request_route_for_options()", file="PropertyValidatorFixture.cs", label="var route = resolver.Resolve(context).Item1", span="515-515"];
m30_483 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_optionsroute_with_allow_header_set_to_allowed_methods_matching_request_route_for_options()", file="PropertyValidatorFixture.cs", label="route.ShouldNotBeNull()", span="518-518"];
m30_484 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_optionsroute_with_allow_header_set_to_allowed_methods_matching_request_route_for_options()", file="PropertyValidatorFixture.cs", label="route.ShouldBeOfType<OptionsRoute>()", span="519-519"];
m30_485 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_optionsroute_with_allow_header_set_to_allowed_methods_matching_request_route_for_options()", file="PropertyValidatorFixture.cs", label="route.Invoke(new DynamicDictionary()).Headers[''Allow''].ShouldEqual(''GET, PUT'')", span="520-520"];
m30_486 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_optionsroute_with_allow_header_set_to_allowed_methods_matching_request_route_for_options()", file="PropertyValidatorFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_optionsroute_with_allow_header_set_to_allowed_methods_matching_request_route_for_options()", span="503-503"];
m30_270 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_request_uri()", file="PropertyValidatorFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_request_uri()", span="245-245"];
m30_271 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_request_uri()", file="PropertyValidatorFixture.cs", label="var request = new FakeRequest(''get'', ''/foo/bar'')", span="248-248"];
m30_272 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_request_uri()", file="PropertyValidatorFixture.cs", label="var context = new NancyContext {Request = request}", span="249-249"];
m30_275 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_request_uri()", file="PropertyValidatorFixture.cs", label="A.CallTo(() => this.matcher.Match(request.Path, A<string>.Ignored, A<NancyContext>.Ignored)).MustHaveHappened()", span="256-256"];
m30_273 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_request_uri()", file="PropertyValidatorFixture.cs", label="var resolver = CreateResolver(x => x.AddGetRoute(''/foo/bar''))", span="250-250"];
m30_274 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_request_uri()", file="PropertyValidatorFixture.cs", label="resolver.Resolve(context)", span="253-253"];
m30_276 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_request_uri()", file="PropertyValidatorFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_request_uri()", span="245-245"];
m30_75 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_parameters_on_resolved_route_to_parameteres_that_was_matched()", file="PropertyValidatorFixture.cs", label="var request = new FakeRequest(''get'', ''/foo/bar'')", span="64-64"];
m30_77 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_parameters_on_resolved_route_to_parameteres_that_was_matched()", file="PropertyValidatorFixture.cs", label="var resolver = \r\n                CreateResolver(x => x.AddGetRoute(''/foo/bar'', ''module-key''))", span="67-68"];
m30_78 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_parameters_on_resolved_route_to_parameteres_that_was_matched()", file="PropertyValidatorFixture.cs", label="var resolvedRoute = resolver.Resolve(context)", span="71-71"];
m30_79 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_parameters_on_resolved_route_to_parameteres_that_was_matched()", file="PropertyValidatorFixture.cs", label="resolvedRoute.ShouldNotBeOfType<NotFoundRoute>()", span="74-74"];
m30_76 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_parameters_on_resolved_route_to_parameteres_that_was_matched()", file="PropertyValidatorFixture.cs", label="var context = new NancyContext {Request = request}", span="65-65"];
m30_80 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_parameters_on_resolved_route_to_parameteres_that_was_matched()", file="PropertyValidatorFixture.cs", label="resolvedRoute.ShouldNotBeOfType<MethodNotAllowedRoute>()", span="75-75"];
m30_61 [cluster="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture.Should_pass_attribute_to_validator_when_validate_is_invoked()", file="PropertyValidatorFixture.cs", label="A.CallTo(() => this.adapter1.Validate(A<object>._, this.mappings.Keys.First(), A<PropertyDescriptor>._)).MustHaveHappened()", span="98-98"];
m30_54 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="36-40"];
m30_161 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", file="PropertyValidatorFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", span="150-150"];
m30_162 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", file="PropertyValidatorFixture.cs", label="var request = new FakeRequest(''get'', ''/foo/bar'')", span="153-153"];
m30_163 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", file="PropertyValidatorFixture.cs", label="var context = new NancyContext { Request = request }", span="154-154"];
m30_165 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", file="PropertyValidatorFixture.cs", label="A.CallTo(() => this.matcher.Match(request.Path, ''/foo/bar'', null)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(true)))", span="166-167"];
m30_166 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", file="PropertyValidatorFixture.cs", label="A.CallTo(() => this.matcher.Match(request.Path, ''/foo/{bar}'', null)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(true).AddParameter(''bar'', ''fake value'')))", span="169-170"];
m30_167 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", file="PropertyValidatorFixture.cs", label="A.CallTo(() => this.matcher.Match(request.Path, ''/foo/{bar}'', null)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(true)\r\n                    .AddParameter(''foo'', ''fake value'')\r\n                    .AddParameter(''bar'', ''fake value'')))", span="172-175"];
m30_164 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", file="PropertyValidatorFixture.cs", label="var resolver = CreateResolver(x =>\r\n            {\r\n                x.AddGetRoute(''/foo/{bar}'', ''module-key-parameters'');\r\n                x.AddGetRoute(''/{foo}/{bar}'', ''module-key-two-parameters'');\r\n                x.AddGetRoute(''/foo/bar'', ''module-key-no-parameters'');\r\n                x.AddGetRoute(''/foo/bar'', ''module-key-no-parameters-second'');\r\n                x.AddGetRoute(''/foo/{bar}'', ''module-key-parameters'');\r\n                x.AddGetRoute(''/{foo}/{bar}'', ''module-key-two-parameters'');\r\n            })", span="156-164"];
m30_168 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", file="PropertyValidatorFixture.cs", label="resolver.Resolve(context)", span="177-177"];
m30_169 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", file="PropertyValidatorFixture.cs", label="A.CallTo(() => this.catalog.GetModuleByKey(''module-key-no-parameters'', context)).MustHaveHappened()", span="180-180"];
m30_170 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", file="PropertyValidatorFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", span="150-150"];
m30_29 [cluster="Unk.GetModuleByKey", file="PropertyValidatorFixture.cs", label="Entry Unk.GetModuleByKey", span=""];
m30_49 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="35-40"];
m30_51 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="36-40"];
m30_52 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="c.IsMatch(((string)x.Arguments[0]).Equals(((string)x.Arguments[1])))", span="38-38"];
m30_50 [cluster="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResult(System.Action<Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator>)", file="PropertyValidatorFixture.cs", label="Entry Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResult(System.Action<Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator>)", span="13-13"];
m30_53 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="c.AddParameter(''foo'', ''bar'')", span="39-39"];
m30_346 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_allow_header_set_to_allowed_methods_matching_request_route()", file="PropertyValidatorFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_allow_header_set_to_allowed_methods_matching_request_route()", span="331-331"];
m30_347 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_allow_header_set_to_allowed_methods_matching_request_route()", file="PropertyValidatorFixture.cs", label="var request = new FakeRequest(''POST'', ''/foo/bar'')", span="334-334"];
m30_348 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_allow_header_set_to_allowed_methods_matching_request_route()", file="PropertyValidatorFixture.cs", label="var context = new NancyContext { Request = request }", span="335-335"];
m30_349 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_allow_header_set_to_allowed_methods_matching_request_route()", file="PropertyValidatorFixture.cs", label="var resolver = CreateResolver(x => {\r\n                x.AddGetRoute(''/foo/bar'');\r\n                x.AddPutRoute(''/foo/bar'');\r\n            })", span="337-340"];
m30_350 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_allow_header_set_to_allowed_methods_matching_request_route()", file="PropertyValidatorFixture.cs", label="var route = resolver.Resolve(context).Item1", span="343-343"];
m30_351 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_allow_header_set_to_allowed_methods_matching_request_route()", file="PropertyValidatorFixture.cs", label="route.ShouldNotBeNull()", span="346-346"];
m30_352 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_allow_header_set_to_allowed_methods_matching_request_route()", file="PropertyValidatorFixture.cs", label="route.ShouldBeOfType<MethodNotAllowedRoute>()", span="347-347"];
m30_353 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_allow_header_set_to_allowed_methods_matching_request_route()", file="PropertyValidatorFixture.cs", label="route.Invoke(new DynamicDictionary()).Headers[''Allow''].ShouldEqual(''GET, PUT'')", span="348-348"];
m30_354 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_allow_header_set_to_allowed_methods_matching_request_route()", file="PropertyValidatorFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_allow_header_set_to_allowed_methods_matching_request_route()", span="331-331"];
m30_550 [cluster="DefaultRouteResolver.cstr", file="PropertyValidatorFixture.cs", label="Entry DefaultRouteResolver.cstr", span=""];
m30_105 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_first_route_with_when_multiple_matches_are_available_and_contains_same_number_of_parameter_captures()", file="PropertyValidatorFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_first_route_with_when_multiple_matches_are_available_and_contains_same_number_of_parameter_captures()", span="99-99"];
m30_106 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_first_route_with_when_multiple_matches_are_available_and_contains_same_number_of_parameter_captures()", file="PropertyValidatorFixture.cs", label="var request = new FakeRequest(''get'', ''/foo/bar'')", span="102-102"];
m30_107 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_first_route_with_when_multiple_matches_are_available_and_contains_same_number_of_parameter_captures()", file="PropertyValidatorFixture.cs", label="var context = new NancyContext { Request = request }", span="103-103"];
m30_110 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_first_route_with_when_multiple_matches_are_available_and_contains_same_number_of_parameter_captures()", file="PropertyValidatorFixture.cs", label="A.CallTo(() => this.matcher.Match(request.Path, ''/foo/{bar}'', A<NancyContext>.Ignored)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(true).AddParameter(''bar'', ''fake value'')))", span="112-113"];
m30_108 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_first_route_with_when_multiple_matches_are_available_and_contains_same_number_of_parameter_captures()", file="PropertyValidatorFixture.cs", label="var resolver = CreateResolver(x => {\r\n                x.AddGetRoute(''/foo/{bar}'', ''first-module-key-parameters'');\r\n                x.AddGetRoute(''/foo/{bar}'', ''second-module-key-parameters'');\r\n            })", span="105-108"];
m30_111 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_first_route_with_when_multiple_matches_are_available_and_contains_same_number_of_parameter_captures()", file="PropertyValidatorFixture.cs", label="resolver.Resolve(context)", span="116-116"];
m30_112 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_first_route_with_when_multiple_matches_are_available_and_contains_same_number_of_parameter_captures()", file="PropertyValidatorFixture.cs", label="A.CallTo(() => this.catalog.GetModuleByKey(''first-module-key-parameters'', context)).MustHaveHappened()", span="119-119"];
m30_109 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_first_route_with_when_multiple_matches_are_available_and_contains_same_number_of_parameter_captures()", file="PropertyValidatorFixture.cs", label="this.expectedModule = new FakeNancyModule(x => x.AddGetRoute(''/foo/{bar}'', this.expectedAction))", span="110-110"];
m30_113 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_first_route_with_when_multiple_matches_are_available_and_contains_same_number_of_parameter_captures()", file="PropertyValidatorFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_first_route_with_when_multiple_matches_are_available_and_contains_same_number_of_parameter_captures()", span="99-99"];
m30_466 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_options_route_with_path_set_to_request_route_for_options()", file="PropertyValidatorFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_options_route_with_path_set_to_request_route_for_options()", span="486-486"];
m30_467 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_options_route_with_path_set_to_request_route_for_options()", file="PropertyValidatorFixture.cs", label="var request = new FakeRequest(''OPTIONS'', ''/foo/bar'')", span="489-489"];
m30_468 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_options_route_with_path_set_to_request_route_for_options()", file="PropertyValidatorFixture.cs", label="var context = new NancyContext { Request = request }", span="490-490"];
m30_473 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_options_route_with_path_set_to_request_route_for_options()", file="PropertyValidatorFixture.cs", label="resolvedRoute.Item1.Description.Path.ShouldEqual(request.Path)", span="499-499"];
m30_469 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_options_route_with_path_set_to_request_route_for_options()", file="PropertyValidatorFixture.cs", label="var resolver = CreateResolver(x => x.AddGetRoute(''/foo/bar''))", span="491-491"];
m30_470 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_options_route_with_path_set_to_request_route_for_options()", file="PropertyValidatorFixture.cs", label="var resolvedRoute = resolver.Resolve(context)", span="494-494"];
m30_471 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_options_route_with_path_set_to_request_route_for_options()", file="PropertyValidatorFixture.cs", label="resolvedRoute.ShouldNotBeNull()", span="497-497"];
m30_472 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_options_route_with_path_set_to_request_route_for_options()", file="PropertyValidatorFixture.cs", label="resolvedRoute.Item1.ShouldBeOfType<OptionsRoute>()", span="498-498"];
m30_474 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_options_route_with_path_set_to_request_route_for_options()", file="PropertyValidatorFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_options_route_with_path_set_to_request_route_for_options()", span="486-486"];
m30_91 [cluster="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator.AddGetRoute(string, string)", file="PropertyValidatorFixture.cs", label="Entry Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator.AddGetRoute(string, string)", span="62-62"];
m30_200 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", file="PropertyValidatorFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", span="184-184"];
m30_201 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", file="PropertyValidatorFixture.cs", label="var request = new FakeRequest(''get'', ''/foo/bar/me'')", span="189-189"];
m30_202 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", file="PropertyValidatorFixture.cs", label="var context = new NancyContext { Request = request }", span="190-190"];
m30_205 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", file="PropertyValidatorFixture.cs", label="A.CallTo(() => this.matcher.Match(request.Path, ''/foo/bar/{two}'', A<NancyContext>.Ignored)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(true).AddParameter(''two'', ''fake values'')))", span="202-203"];
m30_206 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", file="PropertyValidatorFixture.cs", label="A.CallTo(() => this.matcher.Match(request.Path, ''/foo/{bar}/{two}'', A<NancyContext>.Ignored)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(true)\r\n                    .AddParameter(''bar'', ''fake values'')\r\n                    .AddParameter(''two'', ''fake values'')))", span="205-208"];
m30_207 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", file="PropertyValidatorFixture.cs", label="A.CallTo(() => this.matcher.Match(request.Path, ''/foo/{bar}'', A<NancyContext>.Ignored)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(true).AddParameter(''bar'', ''fake value'')))", span="210-211"];
m30_203 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", file="PropertyValidatorFixture.cs", label="var resolver = CreateResolver(x =>\r\n            {\r\n                x.AddGetRoute(''/foo/{bar}'', ''module-key-first'');\r\n                x.AddGetRoute(''/foo/{bar}/{two}'', ''module-key-third'');\r\n                x.AddGetRoute(''/foo/bar/{two}'', ''module-key-second'');\r\n                x.AddGetRoute(''/foo/{bar}/{two}'', ''module-key-third'');\r\n            })", span="192-198"];
m30_208 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", file="PropertyValidatorFixture.cs", label="resolver.Resolve(context)", span="214-214"];
m30_209 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", file="PropertyValidatorFixture.cs", label="A.CallTo(() => this.catalog.GetModuleByKey(''module-key-second'', context)).MustHaveHappened()", span="217-217"];
m30_204 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", file="PropertyValidatorFixture.cs", label="this.expectedModule = new FakeNancyModule(x => x.AddGetRoute(''/foo/bar/{two}'', this.expectedAction))", span="200-200"];
m30_210 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", file="PropertyValidatorFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", span="184-184"];
m30_58 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="44-44"];
m30_60 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="44-44"];
m30_59 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="moduleKeyGenerator.GetKeyForModuleType(A<Type>._)", span="44-44"];
m30_62 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="44-44"];
m30_526 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_whos_filter_returns_true_when_there_is_also_a_matching_route_with_a_failing_filter()", file="PropertyValidatorFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_whos_filter_returns_true_when_there_is_also_a_matching_route_with_a_failing_filter()", span="578-578"];
m30_527 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_whos_filter_returns_true_when_there_is_also_a_matching_route_with_a_failing_filter()", file="PropertyValidatorFixture.cs", label="var moduleCatalog = new FakeModuleCatalog()", span="581-581"];
m30_528 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_whos_filter_returns_true_when_there_is_also_a_matching_route_with_a_failing_filter()", file="PropertyValidatorFixture.cs", label="var routeCache = new RouteCache(moduleCatalog, new FakeModuleKeyGenerator(), A.Fake<INancyContextFactory>())", span="582-582"];
m30_529 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_whos_filter_returns_true_when_there_is_also_a_matching_route_with_a_failing_filter()", file="PropertyValidatorFixture.cs", label="var specificResolver = new DefaultRouteResolver(moduleCatalog, this.matcher, this.moduleBuilder, routeCache)", span="583-583"];
m30_530 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_whos_filter_returns_true_when_there_is_also_a_matching_route_with_a_failing_filter()", file="PropertyValidatorFixture.cs", label="var request = new FakeRequest(''GET'', ''/filt'')", span="584-584"];
m30_532 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_whos_filter_returns_true_when_there_is_also_a_matching_route_with_a_failing_filter()", file="PropertyValidatorFixture.cs", label="var route = specificResolver.Resolve(context).Item1", span="588-588"];
m30_531 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_whos_filter_returns_true_when_there_is_also_a_matching_route_with_a_failing_filter()", file="PropertyValidatorFixture.cs", label="var context = new NancyContext { Request = request }", span="585-585"];
m30_533 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_whos_filter_returns_true_when_there_is_also_a_matching_route_with_a_failing_filter()", file="PropertyValidatorFixture.cs", label="route.Description.Condition(context).ShouldBeTrue()", span="591-591"];
m30_534 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_whos_filter_returns_true_when_there_is_also_a_matching_route_with_a_failing_filter()", file="PropertyValidatorFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_whos_filter_returns_true_when_there_is_also_a_matching_route_with_a_failing_filter()", span="578-578"];
m30_41 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="this.expectedModule", span="32-32"];
m30_241 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_choose_root_route_over_one_with_capture_if_requesting_root_uri()", file="PropertyValidatorFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_choose_root_route_over_one_with_capture_if_requesting_root_uri()", span="221-221"];
m30_242 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_choose_root_route_over_one_with_capture_if_requesting_root_uri()", file="PropertyValidatorFixture.cs", label="var request = new FakeRequest(''get'', ''/'')", span="223-223"];
m30_243 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_choose_root_route_over_one_with_capture_if_requesting_root_uri()", file="PropertyValidatorFixture.cs", label="var context = new NancyContext { Request = request }", span="224-224"];
m30_245 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_choose_root_route_over_one_with_capture_if_requesting_root_uri()", file="PropertyValidatorFixture.cs", label="A.CallTo(() => this.matcher.Match(request.Path, ''/'', A<NancyContext>.Ignored)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(true)))", span="232-233"];
m30_246 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_choose_root_route_over_one_with_capture_if_requesting_root_uri()", file="PropertyValidatorFixture.cs", label="A.CallTo(() => this.matcher.Match(request.Path, ''/{name}'', A<NancyContext>.Ignored)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(true).AddParameter(''name'', ''fake values'')))", span="234-235"];
m30_244 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_choose_root_route_over_one_with_capture_if_requesting_root_uri()", file="PropertyValidatorFixture.cs", label="var resolver = CreateResolver(x => {\r\n                x.AddGetRoute(''/{name}'', ''module-key-second'');\r\n                x.AddGetRoute(''/'', ''module-key-first'');\r\n                x.AddGetRoute(''/{name}'', ''module-key-second'');\r\n            })", span="226-230"];
m30_247 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_choose_root_route_over_one_with_capture_if_requesting_root_uri()", file="PropertyValidatorFixture.cs", label="resolver.Resolve(context)", span="238-238"];
m30_248 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_choose_root_route_over_one_with_capture_if_requesting_root_uri()", file="PropertyValidatorFixture.cs", label="A.CallTo(() => this.catalog.GetModuleByKey(''module-key-first'', context)).MustHaveHappened()", span="241-241"];
m30_249 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_choose_root_route_over_one_with_capture_if_requesting_root_uri()", file="PropertyValidatorFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_choose_root_route_over_one_with_capture_if_requesting_root_uri()", span="221-221"];
m30_67 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.CreateResolver(System.Action<Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator>)", file="PropertyValidatorFixture.cs", label="return CreateResolver(cache);", span="52-52"];
m30_69 [cluster="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCache(System.Action<Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator>)", file="PropertyValidatorFixture.cs", label="Entry Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCache(System.Action<Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator>)", span="17-17"];
m30_70 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.CreateResolver(Nancy.Routing.IRouteCache)", file="PropertyValidatorFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.CreateResolver(Nancy.Routing.IRouteCache)", span="55-55"];
m30_68 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.CreateResolver(System.Action<Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator>)", file="PropertyValidatorFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.CreateResolver(System.Action<Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator>)", span="47-47"];
m30_71 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.CreateResolver(Nancy.Routing.IRouteCache)", file="PropertyValidatorFixture.cs", label="return new DefaultRouteResolver(this.catalog, this.matcher, this.moduleBuilder, cache);", span="57-57"];
m30_280 [cluster="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator.AddGetRoute(string)", file="PropertyValidatorFixture.cs", label="Entry Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator.AddGetRoute(string)", span="55-55"];
m30_46 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="72-72"];
m30_329 [cluster="object.ShouldNotBeNull()", file="PropertyValidatorFixture.cs", label="Entry object.ShouldNotBeNull()", span="140-140"];
m30_72 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="111-111"];
m30_455 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_have_status_code_200_for_options_when_route_is_defined()", file="PropertyValidatorFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_have_status_code_200_for_options_when_route_is_defined()", span="470-470"];
m30_456 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_have_status_code_200_for_options_when_route_is_defined()", file="PropertyValidatorFixture.cs", label="var request = new FakeRequest(''OPTIONS'', ''/foo/bar'')", span="473-473"];
m30_457 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_have_status_code_200_for_options_when_route_is_defined()", file="PropertyValidatorFixture.cs", label="var context = new NancyContext { Request = request }", span="474-474"];
m30_458 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_have_status_code_200_for_options_when_route_is_defined()", file="PropertyValidatorFixture.cs", label="var resolver = CreateResolver(x => x.AddGetRoute(''/foo/bar''))", span="475-475"];
m30_459 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_have_status_code_200_for_options_when_route_is_defined()", file="PropertyValidatorFixture.cs", label="var resolvedRoute = resolver.Resolve(context)", span="478-478"];
m30_460 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_have_status_code_200_for_options_when_route_is_defined()", file="PropertyValidatorFixture.cs", label="var response = resolvedRoute.Item1.Invoke(null)", span="479-479"];
m30_461 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_have_status_code_200_for_options_when_route_is_defined()", file="PropertyValidatorFixture.cs", label="response.StatusCode.ShouldEqual(HttpStatusCode.OK)", span="482-482"];
m30_462 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_have_status_code_200_for_options_when_route_is_defined()", file="PropertyValidatorFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_have_status_code_200_for_options_when_route_is_defined()", span="470-470"];
m30_81 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_parameters_on_resolved_route_to_parameteres_that_was_matched()", file="PropertyValidatorFixture.cs", label="((string)resolvedRoute.Item2[''foo'']).ShouldEqual(''bar'')", span="76-76"];
m30_85 [cluster="Nancy.Routing.DefaultRouteResolver.Resolve(Nancy.NancyContext)", file="PropertyValidatorFixture.cs", label="Entry Nancy.Routing.DefaultRouteResolver.Resolve(Nancy.NancyContext)", span="40-40"];
m30_18 [cluster="Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModule(System.Action<Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModuleConfigurator>)", file="PropertyValidatorFixture.cs", label="Entry Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModule(System.Action<Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModuleConfigurator>)", span="10-10"];
m30_101 [cluster="object.ShouldBeSameAs(object)", file="PropertyValidatorFixture.cs", label="Entry object.ShouldBeSameAs(object)", span="130-130"];
m30_55 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="85-85"];
m30_535 [cluster="System.Func<T, TResult>.Invoke(T)", file="PropertyValidatorFixture.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m30_537 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="PropertyValidatorFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", span="595-595"];
m30_538 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="PropertyValidatorFixture.cs", label="var moduleCatalog = A.Fake<INancyModuleCatalog>()", span="598-598"];
m30_539 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="PropertyValidatorFixture.cs", label="A.CallTo(() => moduleCatalog.GetAllModules(A<NancyContext>.Ignored)).Returns(new[] { new FakeNancyModuleWithPreAndPostHooks() })", span="599-599"];
m30_540 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="PropertyValidatorFixture.cs", label="A.CallTo(() => moduleCatalog.GetModuleByKey(A<string>.Ignored, A<NancyContext>.Ignored)).Returns(\r\n                new FakeNancyModuleWithPreAndPostHooks())", span="600-601"];
m30_541 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="PropertyValidatorFixture.cs", label="var routeCache = new RouteCache(moduleCatalog, new FakeModuleKeyGenerator(), A.Fake<INancyContextFactory>())", span="603-603"];
m30_542 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="PropertyValidatorFixture.cs", label="var specificResolver = new DefaultRouteResolver(moduleCatalog, this.matcher, this.moduleBuilder, routeCache)", span="604-604"];
m30_543 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="PropertyValidatorFixture.cs", label="var request = new FakeRequest(''GET'', ''/PrePost'')", span="605-605"];
m30_545 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="PropertyValidatorFixture.cs", label="var result = specificResolver.Resolve(context)", span="609-609"];
m30_544 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="PropertyValidatorFixture.cs", label="var context = new NancyContext { Request = request }", span="606-606"];
m30_546 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="PropertyValidatorFixture.cs", label="result.Item3.ShouldNotBeNull()", span="612-612"];
m30_547 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="PropertyValidatorFixture.cs", label="result.Item4.ShouldNotBeNull()", span="613-613"];
m30_548 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="PropertyValidatorFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", span="595-595"];
m30_333 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_path_set_to_request_uri_when_matched_route_was_for_wrong_request_method()", file="PropertyValidatorFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_path_set_to_request_uri_when_matched_route_was_for_wrong_request_method()", span="314-314"];
m30_334 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_path_set_to_request_uri_when_matched_route_was_for_wrong_request_method()", file="PropertyValidatorFixture.cs", label="var request = new FakeRequest(''POST'', ''/foo/bar'')", span="317-317"];
m30_335 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_path_set_to_request_uri_when_matched_route_was_for_wrong_request_method()", file="PropertyValidatorFixture.cs", label="var context = new NancyContext { Request = request }", span="318-318"];
m30_340 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_path_set_to_request_uri_when_matched_route_was_for_wrong_request_method()", file="PropertyValidatorFixture.cs", label="route.Description.Path.ShouldEqual(request.Path)", span="327-327"];
m30_336 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_path_set_to_request_uri_when_matched_route_was_for_wrong_request_method()", file="PropertyValidatorFixture.cs", label="var resolver = CreateResolver(x => x.AddGetRoute(''/foo/bar''))", span="319-319"];
m30_337 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_path_set_to_request_uri_when_matched_route_was_for_wrong_request_method()", file="PropertyValidatorFixture.cs", label="var route = resolver.Resolve(context).Item1", span="322-322"];
m30_338 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_path_set_to_request_uri_when_matched_route_was_for_wrong_request_method()", file="PropertyValidatorFixture.cs", label="route.ShouldNotBeNull()", span="325-325"];
m30_339 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_path_set_to_request_uri_when_matched_route_was_for_wrong_request_method()", file="PropertyValidatorFixture.cs", label="route.ShouldBeOfType<MethodNotAllowedRoute>()", span="326-326"];
m30_341 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_path_set_to_request_uri_when_matched_route_was_for_wrong_request_method()", file="PropertyValidatorFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_path_set_to_request_uri_when_matched_route_was_for_wrong_request_method()", span="314-314"];
m30_0 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", file="PropertyValidatorFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", span="20-20"];
m30_2 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", color=green, community=0, file="PropertyValidatorFixture.cs", label="A.CallTo(() => this.moduleBuilder.BuildModule(A<NancyModule>.Ignored, A<NancyContext>.Ignored)).\r\n                ReturnsLazily(r => r.Arguments[0] as NancyModule)", prediction=22, span="23-24"];
m30_1 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", file="PropertyValidatorFixture.cs", label="this.moduleBuilder = A.Fake<INancyModuleBuilder>()", span="22-22"];
m30_3 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", file="PropertyValidatorFixture.cs", label="this.catalog = A.Fake<INancyModuleCatalog>()", span="26-26"];
m30_5 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", color=green, community=0, file="PropertyValidatorFixture.cs", label="this.expectedAction = x => HttpStatusCode.OK", prediction=23, span="29-29"];
m30_4 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", file="PropertyValidatorFixture.cs", label="A.CallTo(() => this.catalog.GetModuleByKey(A<string>.Ignored, A<NancyContext>.Ignored)).Returns(expectedModule)", span="27-27"];
m30_6 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", file="PropertyValidatorFixture.cs", label="this.expectedModule = new FakeNancyModule(x => x.AddGetRoute(''/foo/bar'', this.expectedAction))", span="30-30"];
m30_7 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", file="PropertyValidatorFixture.cs", label="A.CallTo(() => this.catalog.GetModuleByKey(A<string>.Ignored, A<NancyContext>.Ignored)).ReturnsLazily(() => this.expectedModule)", span="32-32"];
m30_10 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", file="PropertyValidatorFixture.cs", label="this.contextFactory = A.Fake<INancyContextFactory>()", span="42-42"];
m30_8 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", file="PropertyValidatorFixture.cs", label="this.matcher = A.Fake<IRoutePatternMatcher>()", span="34-34"];
m30_11 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", file="PropertyValidatorFixture.cs", label="this.moduleKeyGenerator = A.Fake<IModuleKeyGenerator>()", span="43-43"];
m30_21 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="23-23"];
m30_66 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.CreateResolver(System.Action<Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator>)", file="PropertyValidatorFixture.cs", label="var cache = \r\n                new FakeRouteCache(closure)", span="49-50"];
m30_19 [cluster="AssociatedMetadataTypeTypeDescriptionProvider.cstr", file="PropertyValidatorFixture.cs", label="Entry AssociatedMetadataTypeTypeDescriptionProvider.cstr", span=""];
m30_23 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="24-24"];
m30_26 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="30-30"];
m30_34 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="this.adapter2.Validate(A<object>._, A<ValidationAttribute>._, A<PropertyDescriptor>._)", span="39-39"];
m30_37 [cluster="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture.Should_call_validate_on_each_validator_for_each_attribute_when_validate_is_invoked()", file="PropertyValidatorFixture.cs", label="this.validator.Validate(null)", span="68-68"];
m30_40 [cluster="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture.Should_call_validate_on_each_validator_for_each_attribute_when_validate_is_invoked()", file="PropertyValidatorFixture.cs", label="Exit Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture.Should_call_validate_on_each_validator_for_each_attribute_when_validate_is_invoked()", span="64-64"];
m30_43 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="71-71"];
m30_47 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="this.adapter2.Validate(A<object>._, A<ValidationAttribute>._, A<PropertyDescriptor>._)", span="72-72"];
m30_20 [cluster="Unk.GetTypeDescriptor", file="PropertyValidatorFixture.cs", label="Entry Unk.GetTypeDescriptor", span=""];
m30_24 [cluster="lambda expression", color=green, community=0, file="PropertyValidatorFixture.cs", label="string.Empty", prediction=24, span="28-28"];
m30_25 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="24-24"];
m30_27 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="this.adapter1.Validate(A<object>._, A<ValidationAttribute>._, A<PropertyDescriptor>._)", span="30-30"];
m30_28 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="27-27"];
m30_30 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="29-29"];
m30_31 [cluster="lambda expression", color=green, community=0, file="PropertyValidatorFixture.cs", label="string.Empty", prediction=25, span="37-37"];
m30_32 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="29-29"];
m30_33 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="39-39"];
m30_35 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="39-39"];
m30_38 [cluster="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture.Should_call_validate_on_each_validator_for_each_attribute_when_validate_is_invoked()", file="PropertyValidatorFixture.cs", label="A.CallTo(() => this.adapter1.Validate(A<object>._, A<ValidationAttribute>._, A<PropertyDescriptor>._)).MustHaveHappened()", span="71-71"];
m30_39 [cluster="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture.Should_call_validate_on_each_validator_for_each_attribute_when_validate_is_invoked()", file="PropertyValidatorFixture.cs", label="A.CallTo(() => this.adapter2.Validate(A<object>._, A<ValidationAttribute>._, A<PropertyDescriptor>._)).MustHaveHappened()", span="72-72"];
m30_42 [cluster="Unk.MustHaveHappened", file="PropertyValidatorFixture.cs", label="Entry Unk.MustHaveHappened", span=""];
m30_44 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="this.adapter1.Validate(A<object>._, A<ValidationAttribute>._, A<PropertyDescriptor>._)", span="71-71"];
m30_45 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="71-71"];
m30_63 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="98-98"];
m30_64 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="this.adapter1.Validate(A<object>._, this.mappings.Keys.First(), A<PropertyDescriptor>._)", span="98-98"];
m30_88 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="68-68"];
m30_89 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="x.AddGetRoute(''/foo/bar'', ''module-key'')", span="68-68"];
m30_90 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="68-68"];
m30_102 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="87-87"];
m30_103 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="x.AddGetRoute(''/foo/bar'', ''module-key'')", span="87-87"];
m30_104 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="87-87"];
m30_123 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="this.matcher.Match(request.Path, ''/foo/{bar}'', A<NancyContext>.Ignored)", span="112-112"];
m30_129 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="this.catalog.GetModuleByKey(''first-module-key-parameters'', context)", span="119-119"];
m30_115 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="105-108"];
m30_120 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="x.AddGetRoute(''/foo/{bar}'', this.expectedAction)", span="110-110"];
m30_122 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="112-112"];
m30_126 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="x.IsMatch(true).AddParameter(''bar'', ''fake value'')", span="113-113"];
m30_128 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="119-119"];
m30_116 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="x.AddGetRoute(''/foo/{bar}'', ''first-module-key-parameters'')", span="106-106"];
m30_117 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="x.AddGetRoute(''/foo/{bar}'', ''second-module-key-parameters'')", span="107-107"];
m30_118 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="105-108"];
m30_119 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="110-110"];
m30_121 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="110-110"];
m30_124 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="112-112"];
m30_125 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="113-113"];
m30_127 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="113-113"];
m30_130 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="119-119"];
m30_146 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="this.matcher.Match(request.Path, ''/foo/{bar}'', null)", span="134-134"];
m30_153 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="this.matcher.Match(request.Path, ''/foo/{bar}/{foo}'', A<NancyContext>.Ignored)", span="137-137"];
m30_159 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="this.catalog.GetModuleByKey(''module-key-two-parameters'', context)", span="146-146"];
m30_141 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="129-132"];
m30_145 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="134-134"];
m30_150 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="x.IsMatch(true).AddParameter(''bar'', ''fake value'')", span="135-135"];
m30_152 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="137-137"];
m30_156 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="x.IsMatch(true)\r\n                    .AddParameter(''foo'', ''fake value'')\r\n                    .AddParameter(''bar'', ''fake value 2'')", span="138-140"];
m30_158 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="146-146"];
m30_142 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="x.AddGetRoute(''/foo/{bar}/{foo}'', ''module-key-two-parameters'')", span="130-130"];
m30_143 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="x.AddGetRoute(''/foo/{bar}'', ''module-key-one-parameter'')", span="131-131"];
m30_144 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="129-132"];
m30_147 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="134-134"];
m30_149 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="135-135"];
m30_151 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="135-135"];
m30_154 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="137-137"];
m30_155 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="138-140"];
m30_157 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="138-140"];
m30_160 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="146-146"];
m30_180 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="this.matcher.Match(request.Path, ''/foo/bar'', null)", span="166-166"];
m30_186 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="this.matcher.Match(request.Path, ''/foo/{bar}'', null)", span="169-169"];
m30_192 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="this.matcher.Match(request.Path, ''/foo/{bar}'', null)", span="172-172"];
m30_198 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="this.catalog.GetModuleByKey(''module-key-no-parameters'', context)", span="180-180"];
m30_171 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="156-164"];
m30_179 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="166-166"];
m30_183 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="x.IsMatch(true)", span="167-167"];
m30_185 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="169-169"];
m30_189 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="x.IsMatch(true).AddParameter(''bar'', ''fake value'')", span="170-170"];
m30_191 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="172-172"];
m30_195 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="x.IsMatch(true)\r\n                    .AddParameter(''foo'', ''fake value'')\r\n                    .AddParameter(''bar'', ''fake value'')", span="173-175"];
m30_197 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="180-180"];
m30_172 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="x.AddGetRoute(''/foo/{bar}'', ''module-key-parameters'')", span="158-158"];
m30_173 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="x.AddGetRoute(''/{foo}/{bar}'', ''module-key-two-parameters'')", span="159-159"];
m30_174 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="x.AddGetRoute(''/foo/bar'', ''module-key-no-parameters'')", span="160-160"];
m30_175 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="x.AddGetRoute(''/foo/bar'', ''module-key-no-parameters-second'')", span="161-161"];
m30_176 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="x.AddGetRoute(''/foo/{bar}'', ''module-key-parameters'')", span="162-162"];
m30_177 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="x.AddGetRoute(''/{foo}/{bar}'', ''module-key-two-parameters'')", span="163-163"];
m30_178 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="156-164"];
m30_181 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="166-166"];
m30_182 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="167-167"];
m30_184 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="167-167"];
m30_187 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="169-169"];
m30_188 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="170-170"];
m30_190 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="170-170"];
m30_193 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="172-172"];
m30_194 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="173-175"];
m30_196 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="173-175"];
m30_199 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="180-180"];
m30_221 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="this.matcher.Match(request.Path, ''/foo/bar/{two}'', A<NancyContext>.Ignored)", span="202-202"];
m30_227 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="this.matcher.Match(request.Path, ''/foo/{bar}/{two}'', A<NancyContext>.Ignored)", span="205-205"];
m30_233 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="this.matcher.Match(request.Path, ''/foo/{bar}'', A<NancyContext>.Ignored)", span="210-210"];
m30_239 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="this.catalog.GetModuleByKey(''module-key-second'', context)", span="217-217"];
m30_211 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="192-198"];
m30_218 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="x.AddGetRoute(''/foo/bar/{two}'', this.expectedAction)", span="200-200"];
m30_220 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="202-202"];
m30_224 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="x.IsMatch(true).AddParameter(''two'', ''fake values'')", span="203-203"];
m30_226 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="205-205"];
m30_230 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="x.IsMatch(true)\r\n                    .AddParameter(''bar'', ''fake values'')\r\n                    .AddParameter(''two'', ''fake values'')", span="206-208"];
m30_232 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="210-210"];
m30_236 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="x.IsMatch(true).AddParameter(''bar'', ''fake value'')", span="211-211"];
m30_238 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="217-217"];
m30_212 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="x.AddGetRoute(''/foo/{bar}'', ''module-key-first'')", span="194-194"];
m30_213 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="x.AddGetRoute(''/foo/{bar}/{two}'', ''module-key-third'')", span="195-195"];
m30_214 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="x.AddGetRoute(''/foo/bar/{two}'', ''module-key-second'')", span="196-196"];
m30_215 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="x.AddGetRoute(''/foo/{bar}/{two}'', ''module-key-third'')", span="197-197"];
m30_216 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="192-198"];
m30_217 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="200-200"];
m30_219 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="200-200"];
m30_222 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="202-202"];
m30_223 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="203-203"];
m30_225 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="203-203"];
m30_228 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="205-205"];
m30_229 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="206-208"];
m30_231 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="206-208"];
m30_234 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="210-210"];
m30_235 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="211-211"];
m30_237 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="211-211"];
m30_240 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="217-217"];
m30_256 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="this.matcher.Match(request.Path, ''/'', A<NancyContext>.Ignored)", span="232-232"];
m30_262 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="this.matcher.Match(request.Path, ''/{name}'', A<NancyContext>.Ignored)", span="234-234"];
m30_268 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="this.catalog.GetModuleByKey(''module-key-first'', context)", span="241-241"];
m30_250 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="226-230"];
m30_255 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="232-232"];
m30_259 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="x.IsMatch(true)", span="233-233"];
m30_261 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="234-234"];
m30_265 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="x.IsMatch(true).AddParameter(''name'', ''fake values'')", span="235-235"];
m30_267 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="241-241"];
m30_251 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="x.AddGetRoute(''/{name}'', ''module-key-second'')", span="227-227"];
m30_252 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="x.AddGetRoute(''/'', ''module-key-first'')", span="228-228"];
m30_253 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="x.AddGetRoute(''/{name}'', ''module-key-second'')", span="229-229"];
m30_254 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="226-230"];
m30_257 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="232-232"];
m30_258 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="233-233"];
m30_260 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="233-233"];
m30_263 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="234-234"];
m30_264 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="235-235"];
m30_266 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="235-235"];
m30_269 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="241-241"];
m30_282 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="this.matcher.Match(request.Path, A<string>.Ignored, A<NancyContext>.Ignored)", span="256-256"];
m30_277 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="250-250"];
m30_281 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="256-256"];
m30_278 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="x.AddGetRoute(''/foo/bar'')", span="250-250"];
m30_279 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="250-250"];
m30_283 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="256-256"];
m30_295 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="this.matcher.Match(A<string>.Ignored, A<string>.Ignored, context)", span="271-271"];
m30_291 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="265-265"];
m30_294 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="271-271"];
m30_292 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="x.AddGetRoute(''/foo/bar'')", span="265-265"];
m30_293 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="265-265"];
m30_296 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="271-271"];
m30_306 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="281-285"];
m30_311 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="291-291"];
m30_314 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="292-292"];
m30_317 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="293-293"];
m30_307 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="x.AddGetRoute(''/foo/bar'')", span="282-282"];
m30_308 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="x.AddGetRoute(''/bar/foo'')", span="283-283"];
m30_309 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="x.AddGetRoute(''/foobar'')", span="284-284"];
m30_310 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="281-285"];
m30_312 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="this.matcher.Match(A<string>.Ignored, ''/foo/bar'', A<NancyContext>.Ignored)", span="291-291"];
m30_313 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="291-291"];
m30_315 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="this.matcher.Match(A<string>.Ignored, ''/bar/foo'', A<NancyContext>.Ignored)", span="292-292"];
m30_316 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="292-292"];
m30_318 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="this.matcher.Match(A<string>.Ignored, ''/foobar'', A<NancyContext>.Ignored)", span="293-293"];
m30_319 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="293-293"];
m30_330 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="302-302"];
m30_331 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="x.AddGetRoute(''/foo/bar'')", span="302-302"];
m30_332 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="302-302"];
m30_343 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="319-319"];
m30_344 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="x.AddGetRoute(''/foo/bar'')", span="319-319"];
m30_345 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="319-319"];
m30_357 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="337-340"];
m30_358 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="x.AddGetRoute(''/foo/bar'')", span="338-338"];
m30_359 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="x.AddPutRoute(''/foo/bar'')", span="339-339"];
m30_360 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="337-340"];
m30_373 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="this.moduleBuilder.BuildModule(this.expectedModule, context)", span="363-363"];
m30_369 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="357-357"];
m30_372 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="363-363"];
m30_370 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="x.AddGetRoute(''/foo/bar'')", span="357-357"];
m30_371 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="357-357"];
m30_374 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="363-363"];
m30_385 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="372-372"];
m30_389 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="x.AddGetRoute(''/bar/foo'')", span="374-374"];
m30_392 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="375-375"];
m30_386 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="x.AddGetRoute(''/foo/bar'')", span="372-372"];
m30_387 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="372-372"];
m30_388 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="374-374"];
m30_390 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="374-374"];
m30_393 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="this.moduleBuilder.BuildModule(A<NancyModule>.Ignored, A<NancyContext>.Ignored)", span="375-375"];
m30_394 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="375-375"];
m30_403 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="391-391"];
m30_404 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="x.AddGetRoute(''/foo/bar'')", span="391-391"];
m30_405 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="391-391"];
m30_423 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="423-423"];
m30_426 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="425-425"];
m30_430 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="x.IsMatch(false)", span="426-426"];
m30_424 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="x.AddGetRoute(''/bar/foo'')", span="423-423"];
m30_425 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="423-423"];
m30_427 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="this.matcher.Match(''/foo/bar'', ''/bar/foo'', null)", span="425-425"];
m30_428 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="425-425"];
m30_429 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="426-426"];
m30_431 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="426-426"];
m30_441 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="442-442"];
m30_442 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="x.AddGetRoute(''/bar/foo'')", span="442-442"];
m30_443 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="442-442"];
m30_452 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="459-459"];
m30_453 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="x.AddGetRoute(''/foo/bar'')", span="459-459"];
m30_454 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="459-459"];
m30_463 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="475-475"];
m30_464 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="x.AddGetRoute(''/foo/bar'')", span="475-475"];
m30_465 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="475-475"];
m30_475 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="491-491"];
m30_476 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="x.AddGetRoute(''/foo/bar'')", span="491-491"];
m30_477 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="491-491"];
m30_487 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="508-512"];
m30_488 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="x.AddGetRoute(''/foo/bar'')", span="510-510"];
m30_489 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="x.AddPutRoute(''/foo/bar'')", span="511-511"];
m30_490 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="508-512"];
m30_499 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="529-533"];
m30_500 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="x.AddGetRoute(''/foo/bar'')", span="531-531"];
m30_501 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="x.AddOptionsRoute(''/foo/bar'')", span="532-532"];
m30_502 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="529-533"];
m30_552 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="moduleCatalog.GetAllModules(A<NancyContext>.Ignored)", span="599-599"];
m30_556 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="moduleCatalog.GetModuleByKey(A<string>.Ignored, A<NancyContext>.Ignored)", span="600-600"];
m30_551 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="599-599"];
m30_555 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Entry lambda expression", span="600-600"];
m30_553 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="599-599"];
m30_557 [cluster="lambda expression", file="PropertyValidatorFixture.cs", label="Exit lambda expression", span="600-600"];
m30_56 [cluster="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator.IsMatch(bool)", file="PropertyValidatorFixture.cs", label="Entry Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator.IsMatch(bool)", span="49-49"];
m30_73 [cluster="Nancy.Routing.DefaultRouteResolver.DefaultRouteResolver(Nancy.INancyModuleCatalog, Nancy.Routing.IRoutePatternMatcher, Nancy.Routing.INancyModuleBuilder, Nancy.Routing.IRouteCache)", file="PropertyValidatorFixture.cs", label="Entry Nancy.Routing.DefaultRouteResolver.DefaultRouteResolver(Nancy.INancyModuleCatalog, Nancy.Routing.IRoutePatternMatcher, Nancy.Routing.INancyModuleBuilder, Nancy.Routing.IRouteCache)", span="26-26"];
m30_57 [cluster="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator.AddParameter(string, object)", file="PropertyValidatorFixture.cs", label="Entry Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator.AddParameter(string, object)", span="55-55"];
m30_65 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.CreateResolver(System.Action<Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator>)", file="PropertyValidatorFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.CreateResolver(System.Action<Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator>)", span="47-47"];
m30_74 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_parameters_on_resolved_route_to_parameteres_that_was_matched()", file="PropertyValidatorFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_parameters_on_resolved_route_to_parameteres_that_was_matched()", span="61-61"];
m30_356 [cluster="Nancy.Routing.Route.Invoke(Nancy.DynamicDictionary)", file="PropertyValidatorFixture.cs", label="Entry Nancy.Routing.Route.Invoke(Nancy.DynamicDictionary)", span="54-54"];
m30_12 [cluster="Unk.>", file="PropertyValidatorFixture.cs", label="Entry Unk.>", span=""];
m30_13 [cluster="Nancy.Validation.ModelValidationError.ModelValidationError(string, System.Func<string, string>)", file="PropertyValidatorFixture.cs", label="Entry Nancy.Validation.ModelValidationError.ModelValidationError(string, System.Func<string, string>)", span="23-23"];
m30_15 [cluster="Unk.CallTo", file="PropertyValidatorFixture.cs", label="Entry Unk.CallTo", span=""];
m30_17 [cluster="RangeAttribute.cstr", file="PropertyValidatorFixture.cs", label="Entry RangeAttribute.cstr", span=""];
m30_16 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="PropertyValidatorFixture.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m30_36 [cluster="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture.Should_call_validate_on_each_validator_for_each_attribute_when_validate_is_invoked()", file="PropertyValidatorFixture.cs", label="Entry Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture.Should_call_validate_on_each_validator_for_each_attribute_when_validate_is_invoked()", span="64-64"];
m30_22 [cluster="Nancy.Validation.DataAnnotations.PropertyValidator.PropertyValidator()", file="PropertyValidatorFixture.cs", label="Entry Nancy.Validation.DataAnnotations.PropertyValidator.PropertyValidator()", span="10-10"];
m30_114 [cluster="Unk.MustHaveHappened", file="PropertyValidatorFixture.cs", label="Entry Unk.MustHaveHappened", span=""];
m30_504 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_a_route_if_matching_and_the_filter_returns_false()", file="PropertyValidatorFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_a_route_if_matching_and_the_filter_returns_false()", span="544-544"];
m30_505 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_a_route_if_matching_and_the_filter_returns_false()", file="PropertyValidatorFixture.cs", label="var moduleCatalog = new FakeModuleCatalog()", span="547-547"];
m30_506 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_a_route_if_matching_and_the_filter_returns_false()", file="PropertyValidatorFixture.cs", label="var routeCache = new RouteCache(moduleCatalog, new FakeModuleKeyGenerator(), A.Fake<INancyContextFactory>())", span="548-548"];
m30_507 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_a_route_if_matching_and_the_filter_returns_false()", file="PropertyValidatorFixture.cs", label="var specificResolver = new DefaultRouteResolver(moduleCatalog, this.matcher, this.moduleBuilder, routeCache)", span="549-549"];
m30_508 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_a_route_if_matching_and_the_filter_returns_false()", file="PropertyValidatorFixture.cs", label="var request = new FakeRequest(''GET'', ''/filtered'')", span="550-550"];
m30_510 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_a_route_if_matching_and_the_filter_returns_false()", file="PropertyValidatorFixture.cs", label="var route = specificResolver.Resolve(context).Item1", span="554-554"];
m30_509 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_a_route_if_matching_and_the_filter_returns_false()", file="PropertyValidatorFixture.cs", label="var context = new NancyContext { Request = request }", span="551-551"];
m30_511 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_a_route_if_matching_and_the_filter_returns_false()", file="PropertyValidatorFixture.cs", label="route.ShouldBeOfType(typeof(NotFoundRoute))", span="557-557"];
m30_512 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_a_route_if_matching_and_the_filter_returns_false()", file="PropertyValidatorFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_a_route_if_matching_and_the_filter_returns_false()", span="544-544"];
m30_87 [cluster="object.ShouldEqual(object)", file="PropertyValidatorFixture.cs", label="Entry object.ShouldEqual(object)", span="95-95"];
m30_375 [cluster="Nancy.Routing.INancyModuleBuilder.BuildModule(Nancy.NancyModule, Nancy.NancyContext)", file="PropertyValidatorFixture.cs", label="Entry Nancy.Routing.INancyModuleBuilder.BuildModule(Nancy.NancyModule, Nancy.NancyContext)", span="13-13"];
m30_503 [cluster="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator.AddOptionsRoute(string)", file="PropertyValidatorFixture.cs", label="Entry Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator.AddOptionsRoute(string)", span="90-90"];
m30_284 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_context()", file="PropertyValidatorFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_context()", span="260-260"];
m30_285 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_context()", file="PropertyValidatorFixture.cs", label="var request = new FakeRequest(''get'', ''/foo/bar'')", span="263-263"];
m30_286 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_context()", file="PropertyValidatorFixture.cs", label="var context = new NancyContext { Request = request }", span="264-264"];
m30_287 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_context()", file="PropertyValidatorFixture.cs", label="var resolver = CreateResolver(x => x.AddGetRoute(''/foo/bar''))", span="265-265"];
m30_288 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_context()", file="PropertyValidatorFixture.cs", label="resolver.Resolve(context)", span="268-268"];
m30_289 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_context()", file="PropertyValidatorFixture.cs", label="A.CallTo(() => this.matcher.Match(A<string>.Ignored, A<string>.Ignored, context)).MustHaveHappened()", span="271-271"];
m30_290 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_context()", file="PropertyValidatorFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_context()", span="260-260"];
m30_514 [cluster="RouteCache.cstr", file="PropertyValidatorFixture.cs", label="Entry RouteCache.cstr", span=""];
m30_297 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_for_all_entries_in_route_cache()", file="PropertyValidatorFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_for_all_entries_in_route_cache()", span="275-275"];
m30_298 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_for_all_entries_in_route_cache()", file="PropertyValidatorFixture.cs", label="var request = new FakeRequest(''get'', ''/foo/bar'')", span="278-278"];
m30_299 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_for_all_entries_in_route_cache()", file="PropertyValidatorFixture.cs", label="var context = new NancyContext { Request = request }", span="279-279"];
m30_300 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_for_all_entries_in_route_cache()", file="PropertyValidatorFixture.cs", label="var resolver = CreateResolver(x => {\r\n                x.AddGetRoute(''/foo/bar'');\r\n                x.AddGetRoute(''/bar/foo'');\r\n                x.AddGetRoute(''/foobar'');\r\n            })", span="281-285"];
m30_301 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_for_all_entries_in_route_cache()", file="PropertyValidatorFixture.cs", label="resolver.Resolve(context)", span="288-288"];
m30_302 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_for_all_entries_in_route_cache()", file="PropertyValidatorFixture.cs", label="A.CallTo(() => this.matcher.Match(A<string>.Ignored, ''/foo/bar'', A<NancyContext>.Ignored)).MustHaveHappened()", span="291-291"];
m30_303 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_for_all_entries_in_route_cache()", file="PropertyValidatorFixture.cs", label="A.CallTo(() => this.matcher.Match(A<string>.Ignored, ''/bar/foo'', A<NancyContext>.Ignored)).MustHaveHappened()", span="292-292"];
m30_304 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_for_all_entries_in_route_cache()", file="PropertyValidatorFixture.cs", label="A.CallTo(() => this.matcher.Match(A<string>.Ignored, ''/foobar'', A<NancyContext>.Ignored)).MustHaveHappened()", span="293-293"];
m30_305 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_for_all_entries_in_route_cache()", file="PropertyValidatorFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_for_all_entries_in_route_cache()", span="275-275"];
m30_92 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_action_on_resolved_route()", file="PropertyValidatorFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_action_on_resolved_route()", span="80-80"];
m30_93 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_action_on_resolved_route()", file="PropertyValidatorFixture.cs", label="var request = new FakeRequest(''get'', ''/foo/bar'')", span="83-83"];
m30_94 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_action_on_resolved_route()", file="PropertyValidatorFixture.cs", label="var context = new NancyContext { Request = request }", span="84-84"];
m30_95 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_action_on_resolved_route()", file="PropertyValidatorFixture.cs", label="var resolver =\r\n                CreateResolver(x => x.AddGetRoute(''/foo/bar'', ''module-key''))", span="86-87"];
m30_96 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_action_on_resolved_route()", file="PropertyValidatorFixture.cs", label="var resolvedRoute = resolver.Resolve(context).Item1", span="90-90"];
m30_97 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_action_on_resolved_route()", file="PropertyValidatorFixture.cs", label="resolvedRoute.ShouldNotBeOfType<NotFoundRoute>()", span="93-93"];
m30_98 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_action_on_resolved_route()", file="PropertyValidatorFixture.cs", label="resolvedRoute.ShouldNotBeOfType<MethodNotAllowedRoute>()", span="94-94"];
m30_99 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_action_on_resolved_route()", file="PropertyValidatorFixture.cs", label="resolvedRoute.Action.ShouldBeSameAs(this.expectedAction)", span="95-95"];
m30_100 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_action_on_resolved_route()", file="PropertyValidatorFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_action_on_resolved_route()", span="80-80"];
m30_362 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_module_builder_with_context_and_resolved_module()", file="PropertyValidatorFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_module_builder_with_context_and_resolved_module()", span="352-352"];
m30_363 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_module_builder_with_context_and_resolved_module()", file="PropertyValidatorFixture.cs", label="var request = new FakeRequest(''GET'', ''/foo/bar'')", span="355-355"];
m30_364 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_module_builder_with_context_and_resolved_module()", file="PropertyValidatorFixture.cs", label="var context = new NancyContext { Request = request }", span="356-356"];
m30_365 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_module_builder_with_context_and_resolved_module()", file="PropertyValidatorFixture.cs", label="var resolver = CreateResolver(x => x.AddGetRoute(''/foo/bar''))", span="357-357"];
m30_366 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_module_builder_with_context_and_resolved_module()", file="PropertyValidatorFixture.cs", label="resolver.Resolve(context)", span="360-360"];
m30_367 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_module_builder_with_context_and_resolved_module()", file="PropertyValidatorFixture.cs", label="A.CallTo(() => this.moduleBuilder.BuildModule(this.expectedModule, context)).MustHaveHappened()", span="363-363"];
m30_368 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_module_builder_with_context_and_resolved_module()", file="PropertyValidatorFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_module_builder_with_context_and_resolved_module()", span="352-352"];
m30_86 [cluster="object.ShouldNotBeOfType<T>()", file="PropertyValidatorFixture.cs", label="Entry object.ShouldNotBeOfType<T>()", span="160-160"];
m30_14 [cluster="Unk.>", file="PropertyValidatorFixture.cs", label="Entry Unk.>", span=""];
m30_391 [cluster="Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModuleConfigurator.AddGetRoute(string)", file="PropertyValidatorFixture.cs", label="Entry Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModuleConfigurator.AddGetRoute(string)", span="36-36"];
m30_395 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_path_set_to_request_uri_when_single_route_could_be_resolved()", file="PropertyValidatorFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_path_set_to_request_uri_when_single_route_could_be_resolved()", span="386-386"];
m30_396 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_path_set_to_request_uri_when_single_route_could_be_resolved()", file="PropertyValidatorFixture.cs", label="var request = new FakeRequest(''GET'', ''/foo/bar'')", span="389-389"];
m30_397 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_path_set_to_request_uri_when_single_route_could_be_resolved()", file="PropertyValidatorFixture.cs", label="var context = new NancyContext { Request = request }", span="390-390"];
m30_401 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_path_set_to_request_uri_when_single_route_could_be_resolved()", file="PropertyValidatorFixture.cs", label="resolvedRoute.Item1.Description.Path.ShouldEqual(request.Path)", span="398-398"];
m30_398 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_path_set_to_request_uri_when_single_route_could_be_resolved()", file="PropertyValidatorFixture.cs", label="var resolver = CreateResolver(x => x.AddGetRoute(''/foo/bar''))", span="391-391"];
m30_399 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_path_set_to_request_uri_when_single_route_could_be_resolved()", file="PropertyValidatorFixture.cs", label="var resolvedRoute = resolver.Resolve(context)", span="394-394"];
m30_400 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_path_set_to_request_uri_when_single_route_could_be_resolved()", file="PropertyValidatorFixture.cs", label="resolvedRoute.ShouldNotBeOfType<NotFoundRoute>()", span="397-397"];
m30_402 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_path_set_to_request_uri_when_single_route_could_be_resolved()", file="PropertyValidatorFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_path_set_to_request_uri_when_single_route_could_be_resolved()", span="386-386"];
m30_406 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.should_return_notfoundroute_with_path_set_to_request_uri_when_route_cache_is_empty()", file="PropertyValidatorFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.should_return_notfoundroute_with_path_set_to_request_uri_when_route_cache_is_empty()", span="402-402"];
m30_407 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.should_return_notfoundroute_with_path_set_to_request_uri_when_route_cache_is_empty()", file="PropertyValidatorFixture.cs", label="var request = new FakeRequest(''GET'', ''/foo/bar'')", span="405-405"];
m30_408 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.should_return_notfoundroute_with_path_set_to_request_uri_when_route_cache_is_empty()", file="PropertyValidatorFixture.cs", label="var context = new NancyContext { Request = request }", span="406-406"];
m30_412 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.should_return_notfoundroute_with_path_set_to_request_uri_when_route_cache_is_empty()", file="PropertyValidatorFixture.cs", label="resolvedRoute.Description.Path.ShouldEqual(request.Path)", span="414-414"];
m30_409 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.should_return_notfoundroute_with_path_set_to_request_uri_when_route_cache_is_empty()", file="PropertyValidatorFixture.cs", label="var resolver = CreateResolver(FakeRouteCache.Empty)", span="407-407"];
m30_410 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.should_return_notfoundroute_with_path_set_to_request_uri_when_route_cache_is_empty()", file="PropertyValidatorFixture.cs", label="var resolvedRoute = resolver.Resolve(context).Item1", span="410-410"];
m30_411 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.should_return_notfoundroute_with_path_set_to_request_uri_when_route_cache_is_empty()", file="PropertyValidatorFixture.cs", label="resolvedRoute.ShouldBeOfType<NotFoundRoute>()", span="413-413"];
m30_413 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.should_return_notfoundroute_with_path_set_to_request_uri_when_route_cache_is_empty()", file="PropertyValidatorFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.should_return_notfoundroute_with_path_set_to_request_uri_when_route_cache_is_empty()", span="402-402"];
m30_549 [cluster="Nancy.Tests.Fakes.FakeNancyModuleWithPreAndPostHooks.FakeNancyModuleWithPreAndPostHooks()", file="PropertyValidatorFixture.cs", label="Entry Nancy.Tests.Fakes.FakeNancyModuleWithPreAndPostHooks.FakeNancyModuleWithPreAndPostHooks()", span="4-4"];
m30_82 [cluster="bool.ShouldBeTrue()", file="PropertyValidatorFixture.cs", label="Entry bool.ShouldBeTrue()", span="85-85"];
m30_132 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_most_parameter_captures_when_multiple_matches_with_parameters_are_available()", file="PropertyValidatorFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_most_parameter_captures_when_multiple_matches_with_parameters_are_available()", span="123-123"];
m30_133 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_most_parameter_captures_when_multiple_matches_with_parameters_are_available()", file="PropertyValidatorFixture.cs", label="var request = new FakeRequest(''get'', ''/foo/bar/foo'')", span="126-126"];
m30_134 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_most_parameter_captures_when_multiple_matches_with_parameters_are_available()", file="PropertyValidatorFixture.cs", label="var context = new NancyContext { Request = request }", span="127-127"];
m30_136 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_most_parameter_captures_when_multiple_matches_with_parameters_are_available()", file="PropertyValidatorFixture.cs", label="A.CallTo(() => this.matcher.Match(request.Path, ''/foo/{bar}'', null)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(true).AddParameter(''bar'', ''fake value'')))", span="134-135"];
m30_137 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_most_parameter_captures_when_multiple_matches_with_parameters_are_available()", file="PropertyValidatorFixture.cs", label="A.CallTo(() => this.matcher.Match(request.Path, ''/foo/{bar}/{foo}'', A<NancyContext>.Ignored)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(true)\r\n                    .AddParameter(''foo'', ''fake value'')\r\n                    .AddParameter(''bar'', ''fake value 2'')))", span="137-140"];
m30_135 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_most_parameter_captures_when_multiple_matches_with_parameters_are_available()", file="PropertyValidatorFixture.cs", label="var resolver = CreateResolver(x => {\r\n                x.AddGetRoute(''/foo/{bar}/{foo}'', ''module-key-two-parameters'');\r\n                x.AddGetRoute(''/foo/{bar}'', ''module-key-one-parameter'');\r\n            })", span="129-132"];
m30_138 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_most_parameter_captures_when_multiple_matches_with_parameters_are_available()", file="PropertyValidatorFixture.cs", label="resolver.Resolve(context)", span="143-143"];
m30_139 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_most_parameter_captures_when_multiple_matches_with_parameters_are_available()", file="PropertyValidatorFixture.cs", label="A.CallTo(() => this.catalog.GetModuleByKey(''module-key-two-parameters'', context)).MustHaveHappened()", span="146-146"];
m30_140 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_most_parameter_captures_when_multiple_matches_with_parameters_are_available()", file="PropertyValidatorFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_most_parameter_captures_when_multiple_matches_with_parameters_are_available()", span="123-123"];
m30_320 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_ignore_method_casing_when_resolving_routes()", file="PropertyValidatorFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_ignore_method_casing_when_resolving_routes()", span="297-297"];
m30_321 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_ignore_method_casing_when_resolving_routes()", file="PropertyValidatorFixture.cs", label="var request = new FakeRequest(''GeT'', ''/foo/bar'')", span="300-300"];
m30_322 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_ignore_method_casing_when_resolving_routes()", file="PropertyValidatorFixture.cs", label="var context = new NancyContext { Request = request }", span="301-301"];
m30_323 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_ignore_method_casing_when_resolving_routes()", file="PropertyValidatorFixture.cs", label="var resolver = CreateResolver(x => x.AddGetRoute(''/foo/bar''))", span="302-302"];
m30_324 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_ignore_method_casing_when_resolving_routes()", file="PropertyValidatorFixture.cs", label="var resolvedRoute = resolver.Resolve(context)", span="305-305"];
m30_325 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_ignore_method_casing_when_resolving_routes()", file="PropertyValidatorFixture.cs", label="resolvedRoute.ShouldNotBeNull()", span="308-308"];
m30_326 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_ignore_method_casing_when_resolving_routes()", file="PropertyValidatorFixture.cs", label="resolvedRoute.ShouldNotBeOfType<NotFoundRoute>()", span="309-309"];
m30_327 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_ignore_method_casing_when_resolving_routes()", file="PropertyValidatorFixture.cs", label="resolvedRoute.ShouldNotBeOfType<MethodNotAllowedRoute>()", span="310-310"];
m30_328 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_ignore_method_casing_when_resolving_routes()", file="PropertyValidatorFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_ignore_method_casing_when_resolving_routes()", span="297-297"];
m30_491 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_user_defined_route_for_route_with_custom_options_defined()", file="PropertyValidatorFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_user_defined_route_for_route_with_custom_options_defined()", span="524-524"];
m30_492 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_user_defined_route_for_route_with_custom_options_defined()", file="PropertyValidatorFixture.cs", label="var request = new FakeRequest(''OPTIONS'', ''/foo/bar'')", span="527-527"];
m30_493 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_user_defined_route_for_route_with_custom_options_defined()", file="PropertyValidatorFixture.cs", label="var context = new NancyContext {Request = request}", span="528-528"];
m30_494 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_user_defined_route_for_route_with_custom_options_defined()", file="PropertyValidatorFixture.cs", label="var resolver = CreateResolver(x =>\r\n            {\r\n                x.AddGetRoute(''/foo/bar'');\r\n                x.AddOptionsRoute(''/foo/bar'');\r\n            })", span="529-533"];
m30_495 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_user_defined_route_for_route_with_custom_options_defined()", file="PropertyValidatorFixture.cs", label="var route = resolver.Resolve(context).Item1", span="536-536"];
m30_496 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_user_defined_route_for_route_with_custom_options_defined()", file="PropertyValidatorFixture.cs", label="route.ShouldNotBeNull()", span="539-539"];
m30_497 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_user_defined_route_for_route_with_custom_options_defined()", file="PropertyValidatorFixture.cs", label="route.ShouldNotBeOfType<OptionsRoute>()", span="540-540"];
m30_498 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_user_defined_route_for_route_with_custom_options_defined()", file="PropertyValidatorFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_user_defined_route_for_route_with_custom_options_defined()", span="524-524"];
m30_513 [cluster="Nancy.Tests.Fakes.FakeModuleCatalog.FakeModuleCatalog()", file="PropertyValidatorFixture.cs", label="Entry Nancy.Tests.Fakes.FakeModuleCatalog.FakeModuleCatalog()", span="13-13"];
m30_517 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_a_route_if_matching_and_the_filter_returns_true()", file="PropertyValidatorFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_a_route_if_matching_and_the_filter_returns_true()", span="561-561"];
m30_518 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_a_route_if_matching_and_the_filter_returns_true()", file="PropertyValidatorFixture.cs", label="var moduleCatalog = new FakeModuleCatalog()", span="564-564"];
m30_519 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_a_route_if_matching_and_the_filter_returns_true()", file="PropertyValidatorFixture.cs", label="var routeCache = new RouteCache(moduleCatalog, new FakeModuleKeyGenerator(), A.Fake<INancyContextFactory>())", span="565-565"];
m30_520 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_a_route_if_matching_and_the_filter_returns_true()", file="PropertyValidatorFixture.cs", label="var specificResolver = new DefaultRouteResolver(moduleCatalog, this.matcher, this.moduleBuilder, routeCache)", span="566-566"];
m30_521 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_a_route_if_matching_and_the_filter_returns_true()", file="PropertyValidatorFixture.cs", label="var request = new FakeRequest(''GET'', ''/notfiltered'')", span="567-567"];
m30_523 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_a_route_if_matching_and_the_filter_returns_true()", file="PropertyValidatorFixture.cs", label="var route = specificResolver.Resolve(context).Item1", span="571-571"];
m30_522 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_a_route_if_matching_and_the_filter_returns_true()", file="PropertyValidatorFixture.cs", label="var context = new NancyContext { Request = request }", span="568-568"];
m30_524 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_a_route_if_matching_and_the_filter_returns_true()", file="PropertyValidatorFixture.cs", label="route.ShouldBeOfType(typeof(Route))", span="574-574"];
m30_525 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_a_route_if_matching_and_the_filter_returns_true()", file="PropertyValidatorFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_a_route_if_matching_and_the_filter_returns_true()", span="561-561"];
m30_554 [cluster="Unk.GetAllModules", file="PropertyValidatorFixture.cs", label="Entry Unk.GetAllModules", span=""];
m30_148 [cluster="Nancy.Routing.IRoutePatternMatcher.Match(string, string, Nancy.NancyContext)", file="PropertyValidatorFixture.cs", label="Entry Nancy.Routing.IRoutePatternMatcher.Match(string, string, Nancy.NancyContext)", span="15-15"];
m30_515 [cluster="Nancy.Tests.Fakes.FakeModuleKeyGenerator.FakeModuleKeyGenerator()", file="PropertyValidatorFixture.cs", label="Entry Nancy.Tests.Fakes.FakeModuleKeyGenerator.FakeModuleKeyGenerator()", span="4-4"];
m30_83 [cluster="Nancy.Tests.Fakes.FakeRequest.FakeRequest(string, string)", file="PropertyValidatorFixture.cs", label="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture", span=""];
m30_131 [cluster="Nancy.INancyModuleCatalog.GetModuleByKey(string, Nancy.NancyContext)", file="PropertyValidatorFixture.cs", label="Entry Nancy.INancyModuleCatalog.GetModuleByKey(string, Nancy.NancyContext)", span="22-22"];
m30_342 [cluster="object.ShouldBeOfType<T>()", file="PropertyValidatorFixture.cs", label="Entry object.ShouldBeOfType<T>()", span="150-150"];
m30_536 [cluster="bool.ShouldBeTrue()", file="PropertyValidatorFixture.cs", label="Entry bool.ShouldBeTrue()", span="85-85"];
m30_414 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_notfoundroute_with_path_set_to_request_uri_when_route_could_not_be_resolved()", file="PropertyValidatorFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_notfoundroute_with_path_set_to_request_uri_when_route_could_not_be_resolved()", span="418-418"];
m30_415 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_notfoundroute_with_path_set_to_request_uri_when_route_could_not_be_resolved()", file="PropertyValidatorFixture.cs", label="var request = new FakeRequest(''GET'', ''/foo/bar'')", span="421-421"];
m30_416 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_notfoundroute_with_path_set_to_request_uri_when_route_could_not_be_resolved()", file="PropertyValidatorFixture.cs", label="var context = new NancyContext { Request = request }", span="422-422"];
m30_421 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_notfoundroute_with_path_set_to_request_uri_when_route_could_not_be_resolved()", file="PropertyValidatorFixture.cs", label="resolvedRoute.Description.Path.ShouldEqual(request.Path)", span="433-433"];
m30_417 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_notfoundroute_with_path_set_to_request_uri_when_route_could_not_be_resolved()", file="PropertyValidatorFixture.cs", label="var resolver = CreateResolver(x => x.AddGetRoute(''/bar/foo''))", span="423-423"];
m30_419 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_notfoundroute_with_path_set_to_request_uri_when_route_could_not_be_resolved()", file="PropertyValidatorFixture.cs", label="var resolvedRoute = resolver.Resolve(context).Item1", span="429-429"];
m30_418 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_notfoundroute_with_path_set_to_request_uri_when_route_could_not_be_resolved()", file="PropertyValidatorFixture.cs", label="A.CallTo(() => this.matcher.Match(''/foo/bar'', ''/bar/foo'', null)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(false)))", span="425-426"];
m30_420 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_notfoundroute_with_path_set_to_request_uri_when_route_could_not_be_resolved()", file="PropertyValidatorFixture.cs", label="resolvedRoute.ShouldBeOfType<NotFoundRoute>()", span="432-432"];
m30_422 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_notfoundroute_with_path_set_to_request_uri_when_route_could_not_be_resolved()", file="PropertyValidatorFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_notfoundroute_with_path_set_to_request_uri_when_route_could_not_be_resolved()", span="418-418"];
m30_84 [cluster="Nancy.NancyContext.NancyContext()", file="PropertyValidatorFixture.cs", label=instance, span=""];
m30_432 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_head_request_when_route_is_defined_for_get()", file="PropertyValidatorFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_head_request_when_route_is_defined_for_get()", span="437-437"];
m30_433 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_head_request_when_route_is_defined_for_get()", file="PropertyValidatorFixture.cs", label="var request = new FakeRequest(''HEAD'', ''/foo/bar'')", span="440-440"];
m30_434 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_head_request_when_route_is_defined_for_get()", file="PropertyValidatorFixture.cs", label="var context = new NancyContext { Request = request }", span="441-441"];
m30_435 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_head_request_when_route_is_defined_for_get()", file="PropertyValidatorFixture.cs", label="var resolver = CreateResolver(x => x.AddGetRoute(''/bar/foo''))", span="442-442"];
m30_436 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_head_request_when_route_is_defined_for_get()", file="PropertyValidatorFixture.cs", label="var resolvedRoute = resolver.Resolve(context)", span="445-445"];
m30_437 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_head_request_when_route_is_defined_for_get()", file="PropertyValidatorFixture.cs", label="resolvedRoute.ShouldNotBeNull()", span="448-448"];
m30_438 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_head_request_when_route_is_defined_for_get()", file="PropertyValidatorFixture.cs", label="resolvedRoute.ShouldNotBeOfType<NotFoundRoute>()", span="449-449"];
m30_439 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_head_request_when_route_is_defined_for_get()", file="PropertyValidatorFixture.cs", label="resolvedRoute.ShouldNotBeOfType<MethodNotAllowedRoute>()", span="450-450"];
m30_440 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_head_request_when_route_is_defined_for_get()", file="PropertyValidatorFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_head_request_when_route_is_defined_for_get()", span="437-437"];
m30_376 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_module_returned_by_module_builder()", file="PropertyValidatorFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_module_returned_by_module_builder()", span="367-367"];
m30_377 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_module_returned_by_module_builder()", file="PropertyValidatorFixture.cs", label="var request = new FakeRequest(''GET'', ''/foo/bar'')", span="370-370"];
m30_378 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_module_returned_by_module_builder()", file="PropertyValidatorFixture.cs", label="var context = new NancyContext { Request = request }", span="371-371"];
m30_379 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_module_returned_by_module_builder()", file="PropertyValidatorFixture.cs", label="var resolver = CreateResolver(x => x.AddGetRoute(''/foo/bar''))", span="372-372"];
m30_382 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_module_returned_by_module_builder()", file="PropertyValidatorFixture.cs", label="var route = resolver.Resolve(context)", span="379-379"];
m30_380 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_module_returned_by_module_builder()", file="PropertyValidatorFixture.cs", label="var moduleReturnedByBuilder = new FakeNancyModule(x => x.AddGetRoute(''/bar/foo''))", span="374-374"];
m30_381 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_module_returned_by_module_builder()", file="PropertyValidatorFixture.cs", label="A.CallTo(() => this.moduleBuilder.BuildModule(A<NancyModule>.Ignored, A<NancyContext>.Ignored)).Returns(\r\n                moduleReturnedByBuilder)", span="375-376"];
m30_383 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_module_returned_by_module_builder()", file="PropertyValidatorFixture.cs", label="route.Item1.Description.Path.ShouldEqual(''/bar/foo'')", span="382-382"];
m30_384 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_module_returned_by_module_builder()", file="PropertyValidatorFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_module_returned_by_module_builder()", span="367-367"];
m30_516 [cluster="object.ShouldBeOfType(System.Type)", file="PropertyValidatorFixture.cs", label="Entry object.ShouldBeOfType(System.Type)", span="155-155"];
m30_355 [cluster="Nancy.DynamicDictionary.DynamicDictionary()", file="PropertyValidatorFixture.cs", label="Entry Nancy.DynamicDictionary.DynamicDictionary()", span="10-10"];
m30_361 [cluster="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator.AddPutRoute(string)", file="PropertyValidatorFixture.cs", label="Entry Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator.AddPutRoute(string)", span="83-83"];
m30_558 [file="PropertyValidatorFixture.cs", label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", span=""];
m30_559 [file="PropertyValidatorFixture.cs", label="?", span=""];
m30_560 [file="PropertyValidatorFixture.cs", label=request, span=""];
m30_561 [file="PropertyValidatorFixture.cs", label=context, span=""];
m30_562 [file="PropertyValidatorFixture.cs", label=request, span=""];
m30_563 [file="PropertyValidatorFixture.cs", label=context, span=""];
m30_564 [file="PropertyValidatorFixture.cs", label=request, span=""];
m30_565 [file="PropertyValidatorFixture.cs", label=context, span=""];
m30_566 [file="PropertyValidatorFixture.cs", label=request, span=""];
m30_567 [file="PropertyValidatorFixture.cs", label=context, span=""];
m30_568 [file="PropertyValidatorFixture.cs", label=request, span=""];
m30_569 [file="PropertyValidatorFixture.cs", label=context, span=""];
m30_570 [file="PropertyValidatorFixture.cs", label=request, span=""];
m30_571 [file="PropertyValidatorFixture.cs", label=context, span=""];
m30_572 [file="PropertyValidatorFixture.cs", label=context, span=""];
m30_573 [file="PropertyValidatorFixture.cs", label=moduleCatalog, span=""];
m32_10 [cluster="Nancy.Routing.Constraints.RouteSegmentConstraintBase<T>.TryMatch(string, string, out T)", file="RouteSegmentConstraintBase.cs", label="Entry Nancy.Routing.Constraints.RouteSegmentConstraintBase<T>.TryMatch(string, string, out T)", span="26-26"];
m32_12 [cluster="Nancy.Routing.Constraints.RouteSegmentConstraintBase<T>.TryMatch(string, string, out T)", file="RouteSegmentConstraintBase.cs", label="Exit Nancy.Routing.Constraints.RouteSegmentConstraintBase<T>.TryMatch(string, string, out T)", span="26-26"];
m32_4 [cluster="Nancy.Routing.Constraints.RouteSegmentConstraintBase<T>.GetMatch(string, string, string)", file="RouteSegmentConstraintBase.cs", label="Entry Nancy.Routing.Constraints.RouteSegmentConstraintBase<T>.GetMatch(string, string, string)", span="15-15"];
m32_5 [cluster="Nancy.Routing.Constraints.RouteSegmentConstraintBase<T>.GetMatch(string, string, string)", file="RouteSegmentConstraintBase.cs", label="T value", span="17-17"];
m32_6 [cluster="Nancy.Routing.Constraints.RouteSegmentConstraintBase<T>.GetMatch(string, string, string)", file="RouteSegmentConstraintBase.cs", label="this.TryMatch(constraint, segment, out value)", span="18-18"];
m32_7 [cluster="Nancy.Routing.Constraints.RouteSegmentConstraintBase<T>.GetMatch(string, string, string)", file="RouteSegmentConstraintBase.cs", label="return CreateMatch(parameterName, value);", span="20-20"];
m32_8 [cluster="Nancy.Routing.Constraints.RouteSegmentConstraintBase<T>.GetMatch(string, string, string)", file="RouteSegmentConstraintBase.cs", label="return SegmentMatch.NoMatch;", span="23-23"];
m32_9 [cluster="Nancy.Routing.Constraints.RouteSegmentConstraintBase<T>.GetMatch(string, string, string)", file="RouteSegmentConstraintBase.cs", label="Exit Nancy.Routing.Constraints.RouteSegmentConstraintBase<T>.GetMatch(string, string, string)", span="15-15"];
m32_0 [cluster="Nancy.Routing.Constraints.RouteSegmentConstraintBase<T>.Matches(string)", file="RouteSegmentConstraintBase.cs", label="Entry Nancy.Routing.Constraints.RouteSegmentConstraintBase<T>.Matches(string)", span="10-10"];
m32_1 [cluster="Nancy.Routing.Constraints.RouteSegmentConstraintBase<T>.Matches(string)", file="RouteSegmentConstraintBase.cs", label="return constraint.Equals(Name, StringComparison.OrdinalIgnoreCase);", span="12-12"];
m32_2 [cluster="Nancy.Routing.Constraints.RouteSegmentConstraintBase<T>.Matches(string)", file="RouteSegmentConstraintBase.cs", label="Exit Nancy.Routing.Constraints.RouteSegmentConstraintBase<T>.Matches(string)", span="10-10"];
m32_18 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="RouteSegmentConstraintBase.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m32_17 [cluster="Nancy.Routing.Trie.SegmentMatch.SegmentMatch(bool)", file="RouteSegmentConstraintBase.cs", label="Entry Nancy.Routing.Trie.SegmentMatch.SegmentMatch(bool)", span="26-26"];
m32_3 [cluster="string.Equals(string, System.StringComparison)", file="RouteSegmentConstraintBase.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m32_11 [cluster="Nancy.Routing.Constraints.RouteSegmentConstraintBase<T>.CreateMatch(string, object)", file="RouteSegmentConstraintBase.cs", label="Entry Nancy.Routing.Constraints.RouteSegmentConstraintBase<T>.CreateMatch(string, object)", span="28-28"];
m32_13 [cluster="Nancy.Routing.Constraints.RouteSegmentConstraintBase<T>.CreateMatch(string, object)", file="RouteSegmentConstraintBase.cs", label="var match = new SegmentMatch(true)", span="30-30"];
m32_14 [cluster="Nancy.Routing.Constraints.RouteSegmentConstraintBase<T>.CreateMatch(string, object)", file="RouteSegmentConstraintBase.cs", label="match.CapturedParameters.Add(parameterName, matchedValue)", span="31-31"];
m32_15 [cluster="Nancy.Routing.Constraints.RouteSegmentConstraintBase<T>.CreateMatch(string, object)", file="RouteSegmentConstraintBase.cs", label="return match;", span="32-32"];
m32_16 [cluster="Nancy.Routing.Constraints.RouteSegmentConstraintBase<T>.CreateMatch(string, object)", file="RouteSegmentConstraintBase.cs", label="Exit Nancy.Routing.Constraints.RouteSegmentConstraintBase<T>.CreateMatch(string, object)", span="28-28"];
m32_19 [file="RouteSegmentConstraintBase.cs", label="Nancy.Routing.Constraints.RouteSegmentConstraintBase<T>", span=""];
m33_0 [cluster="Nancy.NancyModule.NancyModule()", file="ViewNotFoundException.cs", label="Entry Nancy.NancyModule.NancyModule()", span="24-24"];
m33_5 [cluster="Nancy.NancyModule.NancyModule(string)", color=green, community=0, file="ViewNotFoundException.cs", label="this.ModulePath = modulePath", prediction=26, span="37-37"];
m33_4 [cluster="Nancy.NancyModule.NancyModule(string)", file="ViewNotFoundException.cs", label="this.Before = new BeforePipeline()", span="36-36"];
m33_1 [cluster="Nancy.NancyModule.NancyModule()", file="ViewNotFoundException.cs", label="Exit Nancy.NancyModule.NancyModule()", span="24-24"];
m33_2 [cluster="Nancy.NancyModule.NancyModule(string)", file="ViewNotFoundException.cs", label="Entry Nancy.NancyModule.NancyModule(string)", span="33-33"];
m33_3 [cluster="Nancy.NancyModule.NancyModule(string)", file="ViewNotFoundException.cs", label="this.After = new AfterPipeline()", span="35-35"];
m33_6 [cluster="Nancy.NancyModule.NancyModule(string)", file="ViewNotFoundException.cs", label="this.routes = new List<Route>()", span="38-38"];
m33_10 [cluster="Nancy.ViewEngines.ViewNotFoundException.ViewNotFoundException(string)", file="ViewNotFoundException.cs", label="Entry Nancy.ViewEngines.ViewNotFoundException.ViewNotFoundException(string)", span="45-45"];
m33_9 [cluster="string.Format(string, params object[])", file="ViewNotFoundException.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m33_29 [cluster="Nancy.NancyModule.GetModuleName()", file="ViewNotFoundException.cs", label="Entry Nancy.NancyModule.GetModuleName()", span="24-24"];
m33_11 [cluster="Nancy.ViewEngines.ViewNotFoundException.ViewNotFoundException(string)", file="ViewNotFoundException.cs", label="this.message = msg", span="47-47"];
m33_12 [cluster="Nancy.ViewEngines.ViewNotFoundException.ViewNotFoundException(string)", file="ViewNotFoundException.cs", label="Exit Nancy.ViewEngines.ViewNotFoundException.ViewNotFoundException(string)", span="45-45"];
m33_13 [cluster="Nancy.NancyModule.RouteBuilder.RouteBuilder(string, Nancy.NancyModule)", file="ViewNotFoundException.cs", label="Nancy.ViewEngines.ViewNotFoundException", span=""];
m33_14 [cluster="Nancy.NancyModule.RouteBuilder.RouteBuilder(string, Nancy.NancyModule)", file="ViewNotFoundException.cs", label="Exit Nancy.NancyModule.RouteBuilder.RouteBuilder(string, Nancy.NancyModule)", span="219-219"];
m33_21 [cluster="System.Collections.Generic.List<T>.Add(T)", file="ViewNotFoundException.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m33_8 [cluster="Nancy.AfterPipeline.AfterPipeline()", file="ViewNotFoundException.cs", label="Entry Nancy.AfterPipeline.AfterPipeline()", span="17-17"];
m33_7 [cluster="Nancy.NancyModule.NancyModule(string)", file="ViewNotFoundException.cs", label="Exit Nancy.NancyModule.NancyModule(string)", span="33-33"];
m33_19 [cluster="string.Concat(string, string)", file="ViewNotFoundException.cs", label="Entry string.Concat(string, string)", span="0-0"];
m33_15 [cluster="Nancy.NancyModule.RouteBuilder.AddRoute(string, System.Func<Nancy.NancyContext, bool>, System.Func<object, Nancy.Response>)", file="ViewNotFoundException.cs", label="Entry Nancy.NancyModule.RouteBuilder.AddRoute(string, System.Func<Nancy.NancyContext, bool>, System.Func<object, Nancy.Response>)", span="243-243"];
m33_16 [cluster="Nancy.NancyModule.RouteBuilder.AddRoute(string, System.Func<Nancy.NancyContext, bool>, System.Func<object, Nancy.Response>)", file="ViewNotFoundException.cs", label="var fullPath = string.Concat(this.parentModule.ModulePath, path)", span="245-245"];
m33_17 [cluster="Nancy.NancyModule.RouteBuilder.AddRoute(string, System.Func<Nancy.NancyContext, bool>, System.Func<object, Nancy.Response>)", file="ViewNotFoundException.cs", label="this.parentModule.routes.Add(new Route(this.method, fullPath, condition, value))", span="247-247"];
m33_18 [cluster="Nancy.NancyModule.RouteBuilder.AddRoute(string, System.Func<Nancy.NancyContext, bool>, System.Func<object, Nancy.Response>)", file="ViewNotFoundException.cs", label="Exit Nancy.NancyModule.RouteBuilder.AddRoute(string, System.Func<Nancy.NancyContext, bool>, System.Func<object, Nancy.Response>)", span="243-243"];
m33_28 [cluster="Nancy.ViewEngines.ViewLocationContext.ViewLocationContext()", file="ViewNotFoundException.cs", label="Entry Nancy.ViewEngines.ViewLocationContext.ViewLocationContext()", span="5-5"];
m33_22 [cluster="Nancy.NancyModule.ViewRenderer.ViewRenderer(Nancy.NancyModule)", file="ViewNotFoundException.cs", label="Entry Nancy.NancyModule.ViewRenderer.ViewRenderer(Nancy.NancyModule)", span="262-262"];
m33_23 [cluster="Nancy.NancyModule.ViewRenderer.ViewRenderer(Nancy.NancyModule)", file="ViewNotFoundException.cs", label="this.module = module", span="264-264"];
m33_24 [cluster="Nancy.NancyModule.ViewRenderer.ViewRenderer(Nancy.NancyModule)", file="ViewNotFoundException.cs", label="Exit Nancy.NancyModule.ViewRenderer.ViewRenderer(Nancy.NancyModule)", span="262-262"];
m33_20 [cluster="Nancy.Routing.Route.Route(string, string, System.Func<Nancy.NancyContext, bool>, System.Func<dynamic, Nancy.Response>)", file="ViewNotFoundException.cs", label="Entry Nancy.Routing.Route.Route(string, string, System.Func<Nancy.NancyContext, bool>, System.Func<dynamic, Nancy.Response>)", span="32-32"];
m33_25 [cluster="Nancy.NancyModule.ViewRenderer.GetViewLocationContext()", file="ViewNotFoundException.cs", label="Entry Nancy.NancyModule.ViewRenderer.GetViewLocationContext()", span="301-301"];
m33_26 [cluster="Nancy.NancyModule.ViewRenderer.GetViewLocationContext()", file="ViewNotFoundException.cs", label="return new ViewLocationContext\r\n                       {\r\n                           ModulePath = module.ModulePath,\r\n                           ModuleName = module.GetModuleName(),\r\n                           Context = module.Context\r\n                       };", span="303-308"];
m33_27 [cluster="Nancy.NancyModule.ViewRenderer.GetViewLocationContext()", file="ViewNotFoundException.cs", label="Exit Nancy.NancyModule.ViewRenderer.GetViewLocationContext()", span="301-301"];
m33_30 [file="ViewNotFoundException.cs", label="Nancy.NancyModule", span=""];
m33_31 [file="ViewNotFoundException.cs", label="Nancy.NancyModule.RouteBuilder", span=""];
m33_32 [file="ViewNotFoundException.cs", label="Nancy.NancyModule.ViewRenderer", span=""];
n4 -> n6  [color=darkseagreen4, key=1, label="out string", style=dashed];
m1_0 -> m1_4  [color=darkseagreen4, key=1, label="Nancy.Validation.IModelValidatorLocator", style=dashed];
m1_4 -> m1_7  [color=green, key=1, label="Nancy.Response", style=dashed];
m1_6 -> m1_9  [color=green, key=1, label=contentsStream, style=dashed];
m1_6 -> m1_10  [color=darkseagreen4, key=1, label="Nancy.NancyModule", style=dashed];
m1_6 -> m1_11  [color=darkseagreen4, key=1, label="Nancy.NancyModule", style=dashed];
m1_6 -> m1_12  [color=darkseagreen4, key=1, label="Nancy.NancyModule", style=dashed];
m1_15 -> m1_4  [color=darkseagreen4, key=1, label="Nancy.Routing.DefaultNancyModuleBuilder", style=dashed];
m1_15 -> m1_9  [color=darkseagreen4, key=1, label="Nancy.Routing.DefaultNancyModuleBuilder", style=dashed];
m1_15 -> m1_10  [color=darkseagreen4, key=1, label="Nancy.Routing.DefaultNancyModuleBuilder", style=dashed];
m1_15 -> m1_11  [color=darkseagreen4, key=1, label="Nancy.Routing.DefaultNancyModuleBuilder", style=dashed];
m1_20 -> m1_14  [color=darkseagreen4, key=1, label="Nancy.Testing.BrowserResponseBodyWrapper", style=dashed];
m1_20 -> m1_18  [color=darkseagreen4, key=1, label="Nancy.Testing.BrowserResponseBodyWrapper", style=dashed];
m2_447 -> m2_452  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_448 -> m2_450  [color=darkseagreen4, key=1, label=resolvedRoute, style=dashed];
m2_481 -> m2_487  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_482 -> m2_484  [color=darkseagreen4, key=1, label=route, style=dashed];
m2_482 -> m2_485  [color=darkseagreen4, key=1, label=route, style=dashed];
m2_271 -> m2_275  [color=darkseagreen4, key=1, label=request, style=dashed];
m2_271 -> m2_282  [color=darkseagreen4, key=1, label=request, style=dashed];
m2_272 -> m2_274  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_275 -> m2_281  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_273 -> m2_277  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_162 -> m2_165  [color=darkseagreen4, key=1, label=request, style=dashed];
m2_162 -> m2_180  [color=darkseagreen4, key=1, label=request, style=dashed];
m2_162 -> m2_166  [color=darkseagreen4, key=1, label=request, style=dashed];
m2_162 -> m2_186  [color=darkseagreen4, key=1, label=request, style=dashed];
m2_162 -> m2_167  [color=darkseagreen4, key=1, label=request, style=dashed];
m2_162 -> m2_192  [color=darkseagreen4, key=1, label=request, style=dashed];
m2_163 -> m2_168  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_163 -> m2_169  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_163 -> m2_198  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_165 -> m2_179  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_165 -> m2_183  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator", style=dashed];
m2_166 -> m2_185  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_166 -> m2_189  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator", style=dashed];
m2_167 -> m2_191  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_167 -> m2_195  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator", style=dashed];
m2_164 -> m2_171  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_164 -> m2_168  [color=darkseagreen4, key=1, label=resolver, style=dashed];
m2_169 -> m2_197  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_349 -> m2_357  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_350 -> m2_352  [color=darkseagreen4, key=1, label=route, style=dashed];
m2_350 -> m2_353  [color=darkseagreen4, key=1, label=route, style=dashed];
m2_106 -> m2_110  [color=darkseagreen4, key=1, label=request, style=dashed];
m2_106 -> m2_123  [color=darkseagreen4, key=1, label=request, style=dashed];
m2_107 -> m2_111  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_107 -> m2_112  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_107 -> m2_129  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_110 -> m2_122  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_110 -> m2_126  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator", style=dashed];
m2_108 -> m2_115  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_108 -> m2_111  [color=darkseagreen4, key=1, label=resolver, style=dashed];
m2_112 -> m2_128  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_109 -> m2_120  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModuleConfigurator", style=dashed];
m2_467 -> m2_473  [color=darkseagreen4, key=1, label=request, style=dashed];
m2_469 -> m2_475  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_470 -> m2_472  [color=darkseagreen4, key=1, label=resolvedRoute, style=dashed];
m2_470 -> m2_473  [color=darkseagreen4, key=1, label=resolvedRoute, style=dashed];
m2_201 -> m2_205  [color=darkseagreen4, key=1, label=request, style=dashed];
m2_201 -> m2_221  [color=darkseagreen4, key=1, label=request, style=dashed];
m2_201 -> m2_206  [color=darkseagreen4, key=1, label=request, style=dashed];
m2_201 -> m2_227  [color=darkseagreen4, key=1, label=request, style=dashed];
m2_201 -> m2_207  [color=darkseagreen4, key=1, label=request, style=dashed];
m2_201 -> m2_233  [color=darkseagreen4, key=1, label=request, style=dashed];
m2_202 -> m2_208  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_202 -> m2_209  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_202 -> m2_239  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_205 -> m2_220  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_205 -> m2_224  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator", style=dashed];
m2_206 -> m2_226  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_206 -> m2_230  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator", style=dashed];
m2_207 -> m2_232  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_207 -> m2_236  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator", style=dashed];
m2_203 -> m2_211  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_203 -> m2_208  [color=darkseagreen4, key=1, label=resolver, style=dashed];
m2_209 -> m2_238  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_204 -> m2_218  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModuleConfigurator", style=dashed];
m2_17 -> m2_19  [color=darkseagreen4, key=1, label="Nancy.Testing.BrowserResponseBodyWrapper", style=dashed];
m2_531 -> m2_533  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_242 -> m2_245  [color=darkseagreen4, key=1, label=request, style=dashed];
m2_242 -> m2_256  [color=darkseagreen4, key=1, label=request, style=dashed];
m2_242 -> m2_246  [color=darkseagreen4, key=1, label=request, style=dashed];
m2_242 -> m2_262  [color=darkseagreen4, key=1, label=request, style=dashed];
m2_243 -> m2_247  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_243 -> m2_248  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_243 -> m2_268  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_245 -> m2_255  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_245 -> m2_259  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator", style=dashed];
m2_246 -> m2_261  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_246 -> m2_265  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator", style=dashed];
m2_244 -> m2_250  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_244 -> m2_247  [color=darkseagreen4, key=1, label=resolver, style=dashed];
m2_248 -> m2_267  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_458 -> m2_463  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_538 -> m2_552  [color=darkseagreen4, key=1, label=moduleCatalog, style=dashed];
m2_538 -> m2_540  [color=darkseagreen4, key=1, label=moduleCatalog, style=dashed];
m2_538 -> m2_556  [color=darkseagreen4, key=1, label=moduleCatalog, style=dashed];
m2_539 -> m2_551  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_540 -> m2_555  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_545 -> m2_547  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_334 -> m2_340  [color=darkseagreen4, key=1, label=request, style=dashed];
m2_336 -> m2_343  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_337 -> m2_339  [color=darkseagreen4, key=1, label=route, style=dashed];
m2_337 -> m2_340  [color=darkseagreen4, key=1, label=route, style=dashed];
m2_47 -> m2_52  [color=darkseagreen4, key=1, label="?", style=dashed];
m2_48 -> m2_52  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator", style=dashed];
m2_48 -> m2_53  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator", style=dashed];
m2_51 -> m2_53  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator", style=dashed];
m2_115 -> m2_117  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator", style=dashed];
m2_141 -> m2_143  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator", style=dashed];
m2_171 -> m2_173  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator", style=dashed];
m2_171 -> m2_174  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator", style=dashed];
m2_171 -> m2_175  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator", style=dashed];
m2_171 -> m2_176  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator", style=dashed];
m2_171 -> m2_177  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator", style=dashed];
m2_211 -> m2_213  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator", style=dashed];
m2_211 -> m2_214  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator", style=dashed];
m2_211 -> m2_215  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator", style=dashed];
m2_250 -> m2_252  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator", style=dashed];
m2_250 -> m2_253  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator", style=dashed];
m2_306 -> m2_308  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator", style=dashed];
m2_306 -> m2_309  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator", style=dashed];
m2_357 -> m2_359  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator", style=dashed];
m2_487 -> m2_489  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator", style=dashed];
m2_499 -> m2_501  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator", style=dashed];
m2_2 -> m2_19  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_2 -> m2_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_4 -> m2_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_6 -> m2_34  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModuleConfigurator", style=dashed];
m2_7 -> m2_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_7 -> m2_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_9 -> m2_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_9 -> m2_47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_10 -> m2_12  [color=green, key=1, label=document, style=dashed];
m2_12 -> m2_58  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_12 -> m2_62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_286 -> m2_288  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_286 -> m2_289  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_286 -> m2_295  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_287 -> m2_291  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_289 -> m2_294  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_299 -> m2_301  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_300 -> m2_306  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_302 -> m2_311  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_303 -> m2_314  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_304 -> m2_317  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_96 -> m2_98  [color=darkseagreen4, key=1, label=resolvedRoute, style=dashed];
m2_96 -> m2_99  [color=darkseagreen4, key=1, label=resolvedRoute, style=dashed];
m2_364 -> m2_366  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_364 -> m2_367  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_364 -> m2_373  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_365 -> m2_369  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_367 -> m2_372  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_396 -> m2_401  [color=darkseagreen4, key=1, label=request, style=dashed];
m2_398 -> m2_403  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_399 -> m2_401  [color=darkseagreen4, key=1, label=resolvedRoute, style=dashed];
m2_407 -> m2_412  [color=darkseagreen4, key=1, label=request, style=dashed];
m2_410 -> m2_412  [color=darkseagreen4, key=1, label=resolvedRoute, style=dashed];
m2_78 -> m2_80  [color=darkseagreen4, key=1, label=resolvedRoute, style=dashed];
m2_133 -> m2_136  [color=darkseagreen4, key=1, label=request, style=dashed];
m2_133 -> m2_146  [color=darkseagreen4, key=1, label=request, style=dashed];
m2_133 -> m2_137  [color=darkseagreen4, key=1, label=request, style=dashed];
m2_133 -> m2_153  [color=darkseagreen4, key=1, label=request, style=dashed];
m2_134 -> m2_138  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_134 -> m2_139  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_134 -> m2_159  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_136 -> m2_145  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_136 -> m2_150  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator", style=dashed];
m2_137 -> m2_152  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_137 -> m2_156  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator", style=dashed];
m2_135 -> m2_141  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_135 -> m2_138  [color=darkseagreen4, key=1, label=resolver, style=dashed];
m2_139 -> m2_158  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_323 -> m2_330  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_324 -> m2_326  [color=darkseagreen4, key=1, label=resolvedRoute, style=dashed];
m2_324 -> m2_327  [color=darkseagreen4, key=1, label=resolvedRoute, style=dashed];
m2_494 -> m2_499  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_495 -> m2_497  [color=darkseagreen4, key=1, label=route, style=dashed];
m2_415 -> m2_421  [color=darkseagreen4, key=1, label=request, style=dashed];
m2_417 -> m2_423  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_419 -> m2_421  [color=darkseagreen4, key=1, label=resolvedRoute, style=dashed];
m2_418 -> m2_426  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_418 -> m2_430  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator", style=dashed];
m2_435 -> m2_441  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_436 -> m2_438  [color=darkseagreen4, key=1, label=resolvedRoute, style=dashed];
m2_436 -> m2_439  [color=darkseagreen4, key=1, label=resolvedRoute, style=dashed];
m2_379 -> m2_385  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_380 -> m2_389  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModuleConfigurator", style=dashed];
m2_381 -> m2_392  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_558 -> m2_2  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_20  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_4  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_27  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_34  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_7  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_38  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_41  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_9  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_44  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_12  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_59  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_67  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_99  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_120  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_110  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_123  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_112  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_129  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_136  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_146  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_137  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_153  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_139  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_159  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_165  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_180  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_166  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_186  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_167  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_192  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_169  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_198  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_218  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_205  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_221  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_206  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_227  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_207  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_233  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_209  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_239  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_245  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_256  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_246  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_262  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_248  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_268  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_275  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_282  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_289  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_295  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_302  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_312  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_303  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_315  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_304  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_318  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_367  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_373  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_381  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_393  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_418  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_558 -> m2_427  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m2_559 -> m2_52  [color=darkseagreen4, key=1, label="?", style=dashed];
m2_560 -> m2_123  [color=darkseagreen4, key=1, label=request, style=dashed];
m2_561 -> m2_129  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_562 -> m2_146  [color=darkseagreen4, key=1, label=request, style=dashed];
m2_562 -> m2_153  [color=darkseagreen4, key=1, label=request, style=dashed];
m2_563 -> m2_159  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_564 -> m2_180  [color=darkseagreen4, key=1, label=request, style=dashed];
m2_564 -> m2_186  [color=darkseagreen4, key=1, label=request, style=dashed];
m2_564 -> m2_192  [color=darkseagreen4, key=1, label=request, style=dashed];
m2_565 -> m2_198  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_566 -> m2_221  [color=darkseagreen4, key=1, label=request, style=dashed];
m2_566 -> m2_227  [color=darkseagreen4, key=1, label=request, style=dashed];
m2_566 -> m2_233  [color=darkseagreen4, key=1, label=request, style=dashed];
m2_567 -> m2_239  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_568 -> m2_256  [color=darkseagreen4, key=1, label=request, style=dashed];
m2_568 -> m2_262  [color=darkseagreen4, key=1, label=request, style=dashed];
m2_569 -> m2_268  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_570 -> m2_282  [color=darkseagreen4, key=1, label=request, style=dashed];
m2_571 -> m2_295  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_572 -> m2_373  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_573 -> m2_552  [color=darkseagreen4, key=1, label=moduleCatalog, style=dashed];
m2_573 -> m2_556  [color=darkseagreen4, key=1, label=moduleCatalog, style=dashed];
m3_38 -> m3_38  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IList<Nancy.Validation.ModelValidationRule>>", style=dashed];
m3_41 -> m3_41  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IList<Nancy.Validation.ModelValidationRule>>", style=dashed];
m3_7 -> m3_29  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m3_28 -> m3_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_28 -> m3_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_28 -> m3_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_8 -> m3_19  [color=darkseagreen4, key=1, label=object, style=dashed];
m3_44 -> m3_19  [color=darkseagreen4, key=1, label=object, style=dashed];
m3_45 -> m3_19  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m4_304 -> m4_309  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m4_304 -> m4_310  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m4_305 -> m4_319  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_224 -> m4_455  [color=darkseagreen4, key=1, label="System.Action<Nancy.Responses.Negotiation.Negotiator>", style=dashed];
m4_224 -> m4_456  [color=darkseagreen4, key=1, label="System.Action<Nancy.Responses.Negotiation.Negotiator>", style=dashed];
m4_161 -> m4_168  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m4_162 -> m4_182  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_162 -> m4_164  [color=darkseagreen4, key=1, label=response, style=dashed];
m4_190 -> m4_196  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m4_191 -> m4_207  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_191 -> m4_193  [color=darkseagreen4, key=1, label=response, style=dashed];
m4_290 -> m4_297  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m4_290 -> m4_298  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m4_291 -> m4_293  [color=darkseagreen4, key=1, label=response, style=dashed];
m4_291 -> m4_294  [color=darkseagreen4, key=1, label=response, style=dashed];
m4_232 -> m4_237  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m4_232 -> m4_238  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m4_233 -> m4_248  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_392 -> m4_400  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m4_392 -> m4_401  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m4_393 -> m4_409  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_440 -> m4_445  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m4_441 -> m4_447  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_252 -> m4_257  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m4_252 -> m4_258  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m4_253 -> m4_269  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_144 -> m4_149  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m4_365 -> m4_375  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m4_365 -> m4_376  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m4_366 -> m4_385  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_366 -> m4_368  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_428 -> m4_433  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m4_428 -> m4_437  [color=darkseagreen4, key=1, label=browser, style=dashed];
m4_429 -> m4_436  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1 -> m4_11  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator", style=dashed];
m4_1 -> m4_18  [color=darkseagreen4, key=1, label=module, style=dashed];
m4_2 -> m4_18  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m4_323 -> m4_328  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m4_323 -> m4_329  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m4_324 -> m4_338  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_53 -> m4_74  [color=darkseagreen4, key=1, label=module, style=dashed];
m4_54 -> m4_74  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m4_213 -> m4_218  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m4_213 -> m4_219  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m4_214 -> m4_228  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_38 -> m4_44  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator", style=dashed];
m4_38 -> m4_50  [color=darkseagreen4, key=1, label=module, style=dashed];
m4_39 -> m4_50  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m4_11 -> m4_14  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_29 -> m4_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_44 -> m4_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_59 -> m4_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_86 -> m4_88  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_90 -> m4_92  [color=darkseagreen4, key=1, label=negotiator, style=dashed];
m4_98 -> m4_100  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m4_110 -> m4_112  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_114 -> m4_116  [color=darkseagreen4, key=1, label=negotiator, style=dashed];
m4_119 -> m4_121  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m4_130 -> m4_132  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_134 -> m4_136  [color=darkseagreen4, key=1, label=negotiator, style=dashed];
m4_139 -> m4_141  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m4_153 -> m4_155  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_182 -> m4_184  [color=darkseagreen4, key=1, label="Nancy.Testing.BrowserContext", style=dashed];
m4_182 -> m4_185  [color=darkseagreen4, key=1, label="Nancy.Testing.BrowserContext", style=dashed];
m4_172 -> m4_174  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_176 -> m4_178  [color=darkseagreen4, key=1, label=negotiator, style=dashed];
m4_176 -> m4_179  [color=darkseagreen4, key=1, label=negotiator, style=dashed];
m4_207 -> m4_209  [color=darkseagreen4, key=1, label="Nancy.Testing.BrowserContext", style=dashed];
m4_207 -> m4_210  [color=darkseagreen4, key=1, label="Nancy.Testing.BrowserContext", style=dashed];
m4_200 -> m4_202  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_219 -> m4_222  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator", style=dashed];
m4_217 -> m4_219  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m4_222 -> m4_225  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_238 -> m4_241  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator", style=dashed];
m4_236 -> m4_238  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m4_241 -> m4_243  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_243 -> m4_245  [color=darkseagreen4, key=1, label="Nancy.Responses.Negotiation.Negotiator", style=dashed];
m4_258 -> m4_261  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator", style=dashed];
m4_256 -> m4_258  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m4_261 -> m4_263  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_263 -> m4_265  [color=darkseagreen4, key=1, label="Nancy.Responses.Negotiation.Negotiator", style=dashed];
m4_263 -> m4_266  [color=darkseagreen4, key=1, label="Nancy.Responses.Negotiation.Negotiator", style=dashed];
m4_280 -> m4_284  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator", style=dashed];
m4_278 -> m4_280  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m4_298 -> m4_301  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator", style=dashed];
m4_296 -> m4_298  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m4_310 -> m4_313  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator", style=dashed];
m4_308 -> m4_310  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m4_313 -> m4_315  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_329 -> m4_332  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator", style=dashed];
m4_327 -> m4_329  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m4_332 -> m4_334  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_352 -> m4_355  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator", style=dashed];
m4_355 -> m4_357  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_350 -> m4_352  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m4_376 -> m4_379  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator", style=dashed];
m4_386 -> m4_388  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_374 -> m4_376  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m4_379 -> m4_381  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_401 -> m4_404  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator", style=dashed];
m4_399 -> m4_401  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m4_404 -> m4_406  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_419 -> m4_422  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator", style=dashed];
m4_417 -> m4_419  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m4_454 -> m4_456  [color=darkseagreen4, key=1, label=negotiator, style=dashed];
m4_454 -> m4_457  [color=darkseagreen4, key=1, label=negotiator, style=dashed];
m4_22 -> m4_29  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator", style=dashed];
m4_22 -> m4_35  [color=darkseagreen4, key=1, label=module, style=dashed];
m4_23 -> m4_35  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m4_412 -> m4_425  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_413 -> m4_418  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m4_413 -> m4_419  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m4_414 -> m4_424  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_273 -> m4_279  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m4_273 -> m4_280  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m4_274 -> m4_286  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_274 -> m4_276  [color=darkseagreen4, key=1, label=response, style=dashed];
m4_342 -> m4_352  [color=darkseagreen4, key=1, label=negotiatedCookie, style=dashed];
m4_342 -> m4_355  [color=darkseagreen4, key=1, label=negotiatedCookie, style=dashed];
m4_342 -> m4_358  [color=darkseagreen4, key=1, label=negotiatedCookie, style=dashed];
m4_342 -> m4_345  [color=darkseagreen4, key=1, label=negotiatedCookie, style=dashed];
m4_343 -> m4_351  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m4_343 -> m4_352  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m4_344 -> m4_361  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_124 -> m4_141  [color=darkseagreen4, key=1, label=module, style=dashed];
m4_125 -> m4_140  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m4_125 -> m4_141  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m4_104 -> m4_121  [color=darkseagreen4, key=1, label=module, style=dashed];
m4_105 -> m4_120  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m4_105 -> m4_121  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m4_77 -> m4_100  [color=darkseagreen4, key=1, label=module, style=dashed];
m4_78 -> m4_99  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m4_78 -> m4_100  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m4_79 -> m4_81  [color=darkseagreen4, key=1, label=response, style=dashed];
m4_497 -> m4_18  [color=darkseagreen4, key=1, label=module, style=dashed];
m4_498 -> m4_35  [color=darkseagreen4, key=1, label=module, style=dashed];
m4_499 -> m4_50  [color=darkseagreen4, key=1, label=module, style=dashed];
m4_500 -> m4_74  [color=darkseagreen4, key=1, label=module, style=dashed];
m4_501 -> m4_100  [color=darkseagreen4, key=1, label=module, style=dashed];
m4_502 -> m4_121  [color=darkseagreen4, key=1, label=module, style=dashed];
m4_503 -> m4_141  [color=darkseagreen4, key=1, label=module, style=dashed];
m4_504 -> m4_352  [color=darkseagreen4, key=1, label=negotiatedCookie, style=dashed];
m4_504 -> m4_355  [color=darkseagreen4, key=1, label=negotiatedCookie, style=dashed];
m4_504 -> m4_358  [color=darkseagreen4, key=1, label=negotiatedCookie, style=dashed];
m4_506 -> m4_425  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_507 -> m4_437  [color=darkseagreen4, key=1, label=browser, style=dashed];
m4_508 -> m4_455  [color=darkseagreen4, key=1, label="System.Action<Nancy.Responses.Negotiation.Negotiator>", style=dashed];
m4_508 -> m4_456  [color=darkseagreen4, key=1, label="System.Action<Nancy.Responses.Negotiation.Negotiator>", style=dashed];
m4_509 -> m4_486  [color=darkseagreen4, key=1, label="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.NegotiationModule", style=dashed];
m6_9 -> m6_11  [color=darkseagreen4, key=1, label="System.ComponentModel.PropertyDescriptor", style=dashed];
m6_21 -> m6_6  [color=darkseagreen4, key=1, label="Nancy.Validation.DataAnnotations.DataAnnotationsValidatorAdapter", style=dashed];
m10_0 -> m10_2  [color=darkseagreen4, key=1, label=object, style=dashed];
m10_3 -> m10_8  [color=green, key=1, label="lambda expression", style=dashed];
m10_8 -> m10_13  [color=green, key=1, label="?", style=dashed];
m10_15 -> m10_13  [color=green, key=1, label="?", style=dashed];
m11_35 -> m11_38  [color=darkseagreen4, key=1, label=object, style=dashed];
m11_35 -> m11_40  [color=darkseagreen4, key=1, label=object, style=dashed];
m11_28 -> m11_31  [color=darkseagreen4, key=1, label="Nancy.DynamicDictionary", style=dashed];
m11_12 -> m11_15  [color=darkseagreen4, key=1, label="out object", style=dashed];
m11_13 -> m11_15  [color=darkseagreen4, key=1, label="out object", style=dashed];
m11_0 -> m11_2  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, object>", style=dashed];
m11_1 -> m11_4  [color=darkseagreen4, key=1, label=instance, style=dashed];
m11_86 -> m11_86  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, dynamic>", style=dashed];
m11_94 -> m11_12  [color=darkseagreen4, key=1, label="Nancy.DynamicDictionary", style=dashed];
m11_94 -> m11_19  [color=darkseagreen4, key=1, label="Nancy.DynamicDictionary", style=dashed];
m11_94 -> m11_22  [color=darkseagreen4, key=1, label="Nancy.DynamicDictionary", style=dashed];
m11_94 -> m11_26  [color=darkseagreen4, key=1, label="Nancy.DynamicDictionary", style=dashed];
m11_94 -> m11_31  [color=darkseagreen4, key=1, label="Nancy.DynamicDictionary", style=dashed];
m11_94 -> m11_38  [color=darkseagreen4, key=1, label="Nancy.DynamicDictionary", style=dashed];
m11_94 -> m11_40  [color=darkseagreen4, key=1, label="Nancy.DynamicDictionary", style=dashed];
m11_94 -> m11_44  [color=darkseagreen4, key=1, label="Nancy.DynamicDictionary", style=dashed];
m11_94 -> m11_47  [color=darkseagreen4, key=1, label="Nancy.DynamicDictionary", style=dashed];
m11_94 -> m11_57  [color=darkseagreen4, key=1, label="Nancy.DynamicDictionary", style=dashed];
m11_94 -> m11_61  [color=darkseagreen4, key=1, label="Nancy.DynamicDictionary", style=dashed];
m11_94 -> m11_64  [color=darkseagreen4, key=1, label="Nancy.DynamicDictionary", style=dashed];
m11_94 -> m11_69  [color=darkseagreen4, key=1, label="Nancy.DynamicDictionary", style=dashed];
m11_94 -> m11_74  [color=darkseagreen4, key=1, label="Nancy.DynamicDictionary", style=dashed];
m11_94 -> m11_78  [color=darkseagreen4, key=1, label="Nancy.DynamicDictionary", style=dashed];
m11_94 -> m11_83  [color=darkseagreen4, key=1, label="Nancy.DynamicDictionary", style=dashed];
m13_15 -> m13_21  [color=darkseagreen4, key=1, label=rules, style=dashed];
m13_15 -> m13_22  [color=darkseagreen4, key=1, label=rules, style=dashed];
m13_19 -> m13_21  [color=darkseagreen4, key=1, label=rule, style=dashed];
m13_33 -> m13_37  [color=green, key=1, label="lambda expression", style=dashed];
m13_37 -> m13_42  [color=green, key=1, label="?", style=dashed];
m13_49 -> m13_6  [color=darkseagreen4, key=1, label="Nancy.Validation.FluentValidation.FluentValidationValidator", style=dashed];
m13_49 -> m13_7  [color=darkseagreen4, key=1, label="Nancy.Validation.FluentValidation.FluentValidationValidator", style=dashed];
m13_49 -> m13_14  [color=darkseagreen4, key=1, label="Nancy.Validation.FluentValidation.FluentValidationValidator", style=dashed];
m13_49 -> m13_21  [color=darkseagreen4, key=1, label="Nancy.Validation.FluentValidation.FluentValidationValidator", style=dashed];
m13_49 -> m13_22  [color=darkseagreen4, key=1, label="Nancy.Validation.FluentValidation.FluentValidationValidator", style=dashed];
m13_49 -> m13_45  [color=darkseagreen4, key=1, label="Nancy.Validation.FluentValidation.FluentValidationValidator", style=dashed];
m13_50 -> m13_42  [color=green, key=1, label="?", style=dashed];
m17_0 -> m17_3  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m17_0 -> m17_4  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m17_0 -> m17_7  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m17_0 -> m17_9  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m17_0 -> m17_14  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_1 -> m17_14  [color=darkseagreen4, key=1, label=minLength, style=dashed];
m17_17 -> m17_19  [color=darkseagreen4, key=1, label="out string", style=dashed];
m17_2 -> m17_14  [color=darkseagreen4, key=1, label=maxLength, style=dashed];
m17_8 -> m17_14  [color=darkseagreen4, key=1, label=minLength, style=dashed];
m17_21 -> m17_4  [color=darkseagreen4, key=1, label="Nancy.Routing.Constraints.LengthRouteSegmentConstraint", style=dashed];
m17_21 -> m17_9  [color=darkseagreen4, key=1, label="Nancy.Routing.Constraints.LengthRouteSegmentConstraint", style=dashed];
m18_154 -> m18_156  [color=darkseagreen4, key=1, label=item1, style=dashed];
m18_155 -> m18_157  [color=darkseagreen4, key=1, label=item2, style=dashed];
m18_158 -> m18_161  [color=darkseagreen4, key=1, label=item3, style=dashed];
m18_158 -> m18_165  [color=darkseagreen4, key=1, label=item3, style=dashed];
m18_159 -> m18_162  [color=darkseagreen4, key=1, label=item4, style=dashed];
m18_159 -> m18_166  [color=darkseagreen4, key=1, label=item4, style=dashed];
m18_160 -> m18_162  [color=darkseagreen4, key=1, label=pipeline2, style=dashed];
m18_182 -> m18_187  [color=darkseagreen4, key=1, label=item1, style=dashed];
m18_184 -> m18_188  [color=darkseagreen4, key=1, label=item2, style=dashed];
m18_186 -> m18_189  [color=darkseagreen4, key=1, label=item3, style=dashed];
m18_14 -> m18_19  [color=darkseagreen4, key=1, label=item1, style=dashed];
m18_16 -> m18_20  [color=darkseagreen4, key=1, label=item2, style=dashed];
m18_18 -> m18_21  [color=darkseagreen4, key=1, label=item3, style=dashed];
m18_210 -> m18_213  [color=darkseagreen4, key=1, label=item1, style=dashed];
m18_211 -> m18_213  [color=darkseagreen4, key=1, label=castPipeline, style=dashed];
m18_44 -> m18_59  [color=darkseagreen4, key=1, label=response, style=dashed];
m18_44 -> m18_52  [color=darkseagreen4, key=1, label=response, style=dashed];
m18_45 -> m18_48  [color=darkseagreen4, key=1, label=item1, style=dashed];
m18_46 -> m18_49  [color=darkseagreen4, key=1, label=item2, style=dashed];
m18_47 -> m18_50  [color=darkseagreen4, key=1, label=item3, style=dashed];
m18_102 -> m18_105  [color=darkseagreen4, key=1, label=item1, style=dashed];
m18_102 -> m18_107  [color=darkseagreen4, key=1, label=item1, style=dashed];
m18_32 -> m18_23  [color=darkseagreen4, key=1, label=item1Called, style=dashed];
m18_32 -> m18_34  [color=darkseagreen4, key=1, label=item1Called, style=dashed];
m18_36 -> m18_24  [color=darkseagreen4, key=1, label=item2Called, style=dashed];
m18_36 -> m18_38  [color=darkseagreen4, key=1, label=item2Called, style=dashed];
m18_40 -> m18_25  [color=darkseagreen4, key=1, label=item3Called, style=dashed];
m18_40 -> m18_42  [color=darkseagreen4, key=1, label=item3Called, style=dashed];
m18_198 -> m18_192  [color=darkseagreen4, key=1, label=item1Called, style=dashed];
m18_198 -> m18_200  [color=darkseagreen4, key=1, label=item1Called, style=dashed];
m18_202 -> m18_193  [color=darkseagreen4, key=1, label=item2Called, style=dashed];
m18_202 -> m18_204  [color=darkseagreen4, key=1, label=item2Called, style=dashed];
m18_206 -> m18_194  [color=darkseagreen4, key=1, label=item3Called, style=dashed];
m18_206 -> m18_208  [color=darkseagreen4, key=1, label=item3Called, style=dashed];
m18_240 -> m18_234  [color=darkseagreen4, key=1, label=item1Called, style=dashed];
m18_240 -> m18_242  [color=darkseagreen4, key=1, label=item1Called, style=dashed];
m18_244 -> m18_235  [color=darkseagreen4, key=1, label=item2Called, style=dashed];
m18_244 -> m18_246  [color=darkseagreen4, key=1, label=item2Called, style=dashed];
m18_248 -> m18_236  [color=darkseagreen4, key=1, label=item3Called, style=dashed];
m18_248 -> m18_250  [color=darkseagreen4, key=1, label=item3Called, style=dashed];
m18_252 -> m18_237  [color=darkseagreen4, key=1, label=item4Called, style=dashed];
m18_252 -> m18_254  [color=darkseagreen4, key=1, label=item4Called, style=dashed];
m18_85 -> m18_88  [color=darkseagreen4, key=1, label=item1, style=dashed];
m18_85 -> m18_90  [color=darkseagreen4, key=1, label=item1, style=dashed];
m18_140 -> m18_145  [color=darkseagreen4, key=1, label=item1, style=dashed];
m18_118 -> m18_121  [color=darkseagreen4, key=1, label=item1, style=dashed];
m18_118 -> m18_124  [color=darkseagreen4, key=1, label=item1, style=dashed];
m18_119 -> m18_123  [color=darkseagreen4, key=1, label=item2, style=dashed];
m18_119 -> m18_125  [color=darkseagreen4, key=1, label=item2, style=dashed];
m18_120 -> m18_122  [color=darkseagreen4, key=1, label=item3, style=dashed];
m18_120 -> m18_126  [color=darkseagreen4, key=1, label=item3, style=dashed];
m18_65 -> m18_68  [color=darkseagreen4, key=1, label=item1, style=dashed];
m18_66 -> m18_69  [color=darkseagreen4, key=1, label=item2, style=dashed];
m18_67 -> m18_70  [color=darkseagreen4, key=1, label=item3, style=dashed];
m18_255 -> m18_19  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture", style=dashed];
m18_255 -> m18_20  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture", style=dashed];
m18_255 -> m18_21  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture", style=dashed];
m18_255 -> m18_22  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture", style=dashed];
m18_255 -> m18_48  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture", style=dashed];
m18_255 -> m18_49  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture", style=dashed];
m18_255 -> m18_50  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture", style=dashed];
m18_255 -> m18_68  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture", style=dashed];
m18_255 -> m18_69  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture", style=dashed];
m18_255 -> m18_70  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture", style=dashed];
m18_255 -> m18_87  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture", style=dashed];
m18_255 -> m18_88  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture", style=dashed];
m18_255 -> m18_89  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture", style=dashed];
m18_255 -> m18_90  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture", style=dashed];
m18_255 -> m18_104  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture", style=dashed];
m18_255 -> m18_105  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture", style=dashed];
m18_255 -> m18_106  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture", style=dashed];
m18_255 -> m18_107  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture", style=dashed];
m18_255 -> m18_121  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture", style=dashed];
m18_255 -> m18_122  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture", style=dashed];
m18_255 -> m18_123  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture", style=dashed];
m18_255 -> m18_124  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture", style=dashed];
m18_255 -> m18_125  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture", style=dashed];
m18_255 -> m18_126  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture", style=dashed];
m18_255 -> m18_142  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture", style=dashed];
m18_255 -> m18_144  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture", style=dashed];
m18_255 -> m18_145  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture", style=dashed];
m18_255 -> m18_156  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture", style=dashed];
m18_255 -> m18_157  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture", style=dashed];
m18_255 -> m18_164  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture", style=dashed];
m18_255 -> m18_165  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture", style=dashed];
m18_255 -> m18_166  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture", style=dashed];
m18_255 -> m18_187  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture", style=dashed];
m18_255 -> m18_188  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture", style=dashed];
m18_255 -> m18_189  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture", style=dashed];
m18_255 -> m18_232  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture", style=dashed];
m18_255 -> m18_233  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture", style=dashed];
m18_256 -> m18_59  [color=darkseagreen4, key=1, label=response, style=dashed];
m19_0 -> m19_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_9 -> m19_11  [color=darkseagreen4, key=1, label="out int", style=dashed];
m19_13 -> m19_3  [color=darkseagreen4, key=1, label="Nancy.Routing.Constraints.MaxRouteSegmentConstraint", style=dashed];
m20_14 -> m20_18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_33 -> m20_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_41 -> m20_7  [color=darkseagreen4, key=1, label="Nancy.ViewEngines.DefaultViewLocationCache", style=dashed];
m20_41 -> m20_22  [color=darkseagreen4, key=1, label="Nancy.ViewEngines.DefaultViewLocationCache", style=dashed];
m20_41 -> m20_27  [color=darkseagreen4, key=1, label="Nancy.ViewEngines.DefaultViewLocationCache", style=dashed];
m21_0 -> m21_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_9 -> m21_11  [color=darkseagreen4, key=1, label="out int", style=dashed];
m21_13 -> m21_3  [color=darkseagreen4, key=1, label="Nancy.Routing.Constraints.MinRouteSegmentConstraint", style=dashed];
m22_6 -> m22_8  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationRule>", style=dashed];
m22_6 -> m22_10  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationRule>", style=dashed];
m22_7 -> m22_9  [color=darkseagreen4, key=1, label=results, style=dashed];
m22_7 -> m22_12  [color=darkseagreen4, key=1, label=results, style=dashed];
m22_7 -> m22_13  [color=darkseagreen4, key=1, label=results, style=dashed];
m22_7 -> m22_14  [color=darkseagreen4, key=1, label=results, style=dashed];
m22_7 -> m22_15  [color=darkseagreen4, key=1, label=results, style=dashed];
m22_10 -> m22_14  [color=darkseagreen4, key=1, label=rule, style=dashed];
m22_11 -> m22_13  [color=darkseagreen4, key=1, label=name, style=dashed];
m22_11 -> m22_14  [color=darkseagreen4, key=1, label=name, style=dashed];
m25_8 -> m25_14  [color=green, key=1, label=string, style=dashed];
m25_16 -> m25_21  [color=green, key=1, label=string, style=dashed];
m25_23 -> m25_9  [color=green, key=1, label="Nancy.Validation.ModelValidationResult", style=dashed];
m25_23 -> m25_17  [color=green, key=1, label="Nancy.Validation.ModelValidationResult", style=dashed];
m25_24 -> m25_14  [color=green, key=1, label=string, style=dashed];
m25_25 -> m25_21  [color=green, key=1, label=string, style=dashed];
m26_52 -> m26_55  [color=darkseagreen4, key=1, label=validator, style=dashed];
m26_52 -> m26_62  [color=darkseagreen4, key=1, label=validator, style=dashed];
m26_53 -> m26_58  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_55 -> m26_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_33 -> m26_35  [color=darkseagreen4, key=1, label=validator, style=dashed];
m26_35 -> m26_48  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_16 -> m26_25  [color=darkseagreen4, key=1, label=validator, style=dashed];
m26_16 -> m26_18  [color=darkseagreen4, key=1, label=validator, style=dashed];
m26_17 -> m26_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_18 -> m26_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_65 -> m26_68  [color=darkseagreen4, key=1, label=model, style=dashed];
m26_65 -> m26_69  [color=darkseagreen4, key=1, label=model, style=dashed];
m26_65 -> m26_75  [color=darkseagreen4, key=1, label=model, style=dashed];
m26_66 -> m26_69  [color=darkseagreen4, key=1, label=validator, style=dashed];
m26_66 -> m26_75  [color=darkseagreen4, key=1, label=validator, style=dashed];
m26_69 -> m26_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_67 -> m26_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_77 -> m26_18  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture", style=dashed];
m26_77 -> m26_29  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture", style=dashed];
m26_77 -> m26_35  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture", style=dashed];
m26_77 -> m26_49  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture", style=dashed];
m26_77 -> m26_53  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture", style=dashed];
m26_77 -> m26_59  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture", style=dashed];
m26_77 -> m26_54  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture", style=dashed];
m26_77 -> m26_55  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture", style=dashed];
m26_77 -> m26_62  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture", style=dashed];
m26_77 -> m26_67  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture", style=dashed];
m26_77 -> m26_72  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture", style=dashed];
m26_77 -> m26_68  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture", style=dashed];
m26_78 -> m26_25  [color=darkseagreen4, key=1, label=validator, style=dashed];
m26_80 -> m26_62  [color=darkseagreen4, key=1, label=validator, style=dashed];
m26_81 -> m26_75  [color=darkseagreen4, key=1, label=model, style=dashed];
m26_82 -> m26_75  [color=darkseagreen4, key=1, label=validator, style=dashed];
m27_22 -> m27_10  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m27_22 -> m27_12  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m27_22 -> m27_13  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m27_22 -> m27_14  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m27_22 -> m27_15  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m27_22 -> m27_16  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m28_19 -> m28_22  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Nancy.Routing.RouteDescription>", style=dashed];
m28_22 -> m28_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_0 -> m28_2  [color=darkseagreen4, key=1, label="Nancy.INancyModuleCatalog", style=dashed];
m28_7 -> m28_10  [color=darkseagreen4, key=1, label=module, style=dashed];
m28_10 -> m28_16  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_32 -> m28_36  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_39 -> m28_2  [color=darkseagreen4, key=1, label="Nancy.Routing.RouteCache", style=dashed];
m28_39 -> m28_10  [color=darkseagreen4, key=1, label="Nancy.Routing.RouteCache", style=dashed];
m28_39 -> m28_20  [color=darkseagreen4, key=1, label="Nancy.Routing.RouteCache", style=dashed];
m28_39 -> m28_22  [color=darkseagreen4, key=1, label="Nancy.Routing.RouteCache", style=dashed];
m28_39 -> m28_32  [color=darkseagreen4, key=1, label="Nancy.Routing.RouteCache", style=dashed];
m29_7 -> m29_9  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_20 -> m29_1  [color=darkseagreen4, key=1, label="Nancy.Routing.Constraints.ParameterizedRouteSegmentConstraintBase<T>", style=dashed];
m29_20 -> m29_9  [color=darkseagreen4, key=1, label="Nancy.Routing.Constraints.ParameterizedRouteSegmentConstraintBase<T>", style=dashed];
m30_447 -> m30_452  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_448 -> m30_450  [color=darkseagreen4, key=1, label=resolvedRoute, style=dashed];
m30_481 -> m30_487  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_482 -> m30_484  [color=darkseagreen4, key=1, label=route, style=dashed];
m30_482 -> m30_485  [color=darkseagreen4, key=1, label=route, style=dashed];
m30_271 -> m30_275  [color=darkseagreen4, key=1, label=request, style=dashed];
m30_271 -> m30_282  [color=darkseagreen4, key=1, label=request, style=dashed];
m30_272 -> m30_274  [color=darkseagreen4, key=1, label=context, style=dashed];
m30_275 -> m30_281  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_273 -> m30_277  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_77 -> m30_79  [color=darkseagreen4, key=1, label=results, style=dashed];
m30_77 -> m30_88  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_78 -> m30_80  [color=darkseagreen4, key=1, label=resolvedRoute, style=dashed];
m30_61 -> m30_63  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_162 -> m30_165  [color=darkseagreen4, key=1, label=request, style=dashed];
m30_162 -> m30_180  [color=darkseagreen4, key=1, label=request, style=dashed];
m30_162 -> m30_166  [color=darkseagreen4, key=1, label=request, style=dashed];
m30_162 -> m30_186  [color=darkseagreen4, key=1, label=request, style=dashed];
m30_162 -> m30_167  [color=darkseagreen4, key=1, label=request, style=dashed];
m30_162 -> m30_192  [color=darkseagreen4, key=1, label=request, style=dashed];
m30_163 -> m30_168  [color=darkseagreen4, key=1, label=context, style=dashed];
m30_163 -> m30_169  [color=darkseagreen4, key=1, label=context, style=dashed];
m30_163 -> m30_198  [color=darkseagreen4, key=1, label=context, style=dashed];
m30_165 -> m30_179  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_165 -> m30_183  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator", style=dashed];
m30_166 -> m30_185  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_166 -> m30_189  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator", style=dashed];
m30_167 -> m30_191  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_167 -> m30_195  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator", style=dashed];
m30_164 -> m30_171  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_164 -> m30_168  [color=darkseagreen4, key=1, label=resolver, style=dashed];
m30_169 -> m30_197  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_51 -> m30_53  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator", style=dashed];
m30_52 -> m30_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_50 -> m30_52  [color=darkseagreen4, key=1, label=instance, style=dashed];
m30_50 -> m30_56  [color=darkseagreen4, key=1, label=instance, style=dashed];
m30_349 -> m30_357  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_350 -> m30_352  [color=darkseagreen4, key=1, label=route, style=dashed];
m30_350 -> m30_353  [color=darkseagreen4, key=1, label=route, style=dashed];
m30_106 -> m30_110  [color=darkseagreen4, key=1, label=request, style=dashed];
m30_106 -> m30_123  [color=darkseagreen4, key=1, label=request, style=dashed];
m30_107 -> m30_111  [color=darkseagreen4, key=1, label=context, style=dashed];
m30_107 -> m30_112  [color=darkseagreen4, key=1, label=context, style=dashed];
m30_107 -> m30_129  [color=darkseagreen4, key=1, label=context, style=dashed];
m30_110 -> m30_122  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_110 -> m30_126  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator", style=dashed];
m30_108 -> m30_115  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_108 -> m30_111  [color=darkseagreen4, key=1, label=resolver, style=dashed];
m30_112 -> m30_128  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_109 -> m30_120  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModuleConfigurator", style=dashed];
m30_467 -> m30_473  [color=darkseagreen4, key=1, label=request, style=dashed];
m30_469 -> m30_475  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_470 -> m30_472  [color=darkseagreen4, key=1, label=resolvedRoute, style=dashed];
m30_470 -> m30_473  [color=darkseagreen4, key=1, label=resolvedRoute, style=dashed];
m30_201 -> m30_205  [color=darkseagreen4, key=1, label=request, style=dashed];
m30_201 -> m30_221  [color=darkseagreen4, key=1, label=request, style=dashed];
m30_201 -> m30_206  [color=darkseagreen4, key=1, label=request, style=dashed];
m30_201 -> m30_227  [color=darkseagreen4, key=1, label=request, style=dashed];
m30_201 -> m30_207  [color=darkseagreen4, key=1, label=request, style=dashed];
m30_201 -> m30_233  [color=darkseagreen4, key=1, label=request, style=dashed];
m30_202 -> m30_208  [color=darkseagreen4, key=1, label=context, style=dashed];
m30_202 -> m30_209  [color=darkseagreen4, key=1, label=context, style=dashed];
m30_202 -> m30_239  [color=darkseagreen4, key=1, label=context, style=dashed];
m30_205 -> m30_220  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_205 -> m30_224  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator", style=dashed];
m30_206 -> m30_226  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_206 -> m30_230  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator", style=dashed];
m30_207 -> m30_232  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_207 -> m30_236  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator", style=dashed];
m30_203 -> m30_211  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_203 -> m30_208  [color=darkseagreen4, key=1, label=resolver, style=dashed];
m30_209 -> m30_238  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_204 -> m30_218  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModuleConfigurator", style=dashed];
m30_531 -> m30_533  [color=darkseagreen4, key=1, label=context, style=dashed];
m30_242 -> m30_245  [color=darkseagreen4, key=1, label=request, style=dashed];
m30_242 -> m30_256  [color=darkseagreen4, key=1, label=request, style=dashed];
m30_242 -> m30_246  [color=darkseagreen4, key=1, label=request, style=dashed];
m30_242 -> m30_262  [color=darkseagreen4, key=1, label=request, style=dashed];
m30_243 -> m30_247  [color=darkseagreen4, key=1, label=context, style=dashed];
m30_243 -> m30_248  [color=darkseagreen4, key=1, label=context, style=dashed];
m30_243 -> m30_268  [color=darkseagreen4, key=1, label=context, style=dashed];
m30_245 -> m30_255  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_245 -> m30_259  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator", style=dashed];
m30_246 -> m30_261  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_246 -> m30_265  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator", style=dashed];
m30_244 -> m30_250  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_244 -> m30_247  [color=darkseagreen4, key=1, label=resolver, style=dashed];
m30_248 -> m30_267  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_70 -> m30_72  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_458 -> m30_463  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_538 -> m30_552  [color=darkseagreen4, key=1, label=moduleCatalog, style=dashed];
m30_538 -> m30_540  [color=darkseagreen4, key=1, label=moduleCatalog, style=dashed];
m30_538 -> m30_556  [color=darkseagreen4, key=1, label=moduleCatalog, style=dashed];
m30_539 -> m30_551  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_540 -> m30_555  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_545 -> m30_547  [color=darkseagreen4, key=1, label=result, style=dashed];
m30_334 -> m30_340  [color=darkseagreen4, key=1, label=request, style=dashed];
m30_336 -> m30_343  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_337 -> m30_339  [color=darkseagreen4, key=1, label=route, style=dashed];
m30_337 -> m30_340  [color=darkseagreen4, key=1, label=route, style=dashed];
m30_2 -> m30_19  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_2 -> m30_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_3 -> m30_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_4 -> m30_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_6 -> m30_33  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_6 -> m30_34  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModuleConfigurator", style=dashed];
m30_7 -> m30_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_7 -> m30_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_47 -> m30_52  [color=darkseagreen4, key=1, label="?", style=dashed];
m30_38 -> m30_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_39 -> m30_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_115 -> m30_117  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator", style=dashed];
m30_141 -> m30_143  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator", style=dashed];
m30_171 -> m30_173  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator", style=dashed];
m30_171 -> m30_174  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator", style=dashed];
m30_171 -> m30_175  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator", style=dashed];
m30_171 -> m30_176  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator", style=dashed];
m30_171 -> m30_177  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator", style=dashed];
m30_211 -> m30_213  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator", style=dashed];
m30_211 -> m30_214  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator", style=dashed];
m30_211 -> m30_215  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator", style=dashed];
m30_250 -> m30_252  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator", style=dashed];
m30_250 -> m30_253  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator", style=dashed];
m30_306 -> m30_308  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator", style=dashed];
m30_306 -> m30_309  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator", style=dashed];
m30_357 -> m30_359  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator", style=dashed];
m30_487 -> m30_489  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator", style=dashed];
m30_499 -> m30_501  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator", style=dashed];
m30_12 -> m30_58  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_12 -> m30_62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_286 -> m30_288  [color=darkseagreen4, key=1, label=context, style=dashed];
m30_286 -> m30_289  [color=darkseagreen4, key=1, label=context, style=dashed];
m30_286 -> m30_295  [color=darkseagreen4, key=1, label=context, style=dashed];
m30_287 -> m30_291  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_289 -> m30_294  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_299 -> m30_301  [color=darkseagreen4, key=1, label=context, style=dashed];
m30_300 -> m30_306  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_302 -> m30_311  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_303 -> m30_314  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_304 -> m30_317  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_95 -> m30_102  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_96 -> m30_98  [color=darkseagreen4, key=1, label=resolvedRoute, style=dashed];
m30_96 -> m30_99  [color=darkseagreen4, key=1, label=resolvedRoute, style=dashed];
m30_364 -> m30_366  [color=darkseagreen4, key=1, label=context, style=dashed];
m30_364 -> m30_367  [color=darkseagreen4, key=1, label=context, style=dashed];
m30_364 -> m30_373  [color=darkseagreen4, key=1, label=context, style=dashed];
m30_365 -> m30_369  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_367 -> m30_372  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_396 -> m30_401  [color=darkseagreen4, key=1, label=request, style=dashed];
m30_398 -> m30_403  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_399 -> m30_401  [color=darkseagreen4, key=1, label=resolvedRoute, style=dashed];
m30_407 -> m30_412  [color=darkseagreen4, key=1, label=request, style=dashed];
m30_410 -> m30_412  [color=darkseagreen4, key=1, label=resolvedRoute, style=dashed];
m30_133 -> m30_136  [color=darkseagreen4, key=1, label=request, style=dashed];
m30_133 -> m30_146  [color=darkseagreen4, key=1, label=request, style=dashed];
m30_133 -> m30_137  [color=darkseagreen4, key=1, label=request, style=dashed];
m30_133 -> m30_153  [color=darkseagreen4, key=1, label=request, style=dashed];
m30_134 -> m30_138  [color=darkseagreen4, key=1, label=context, style=dashed];
m30_134 -> m30_139  [color=darkseagreen4, key=1, label=context, style=dashed];
m30_134 -> m30_159  [color=darkseagreen4, key=1, label=context, style=dashed];
m30_136 -> m30_145  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_136 -> m30_150  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator", style=dashed];
m30_137 -> m30_152  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_137 -> m30_156  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator", style=dashed];
m30_135 -> m30_141  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_135 -> m30_138  [color=darkseagreen4, key=1, label=resolver, style=dashed];
m30_139 -> m30_158  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_323 -> m30_330  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_324 -> m30_326  [color=darkseagreen4, key=1, label=resolvedRoute, style=dashed];
m30_324 -> m30_327  [color=darkseagreen4, key=1, label=resolvedRoute, style=dashed];
m30_494 -> m30_499  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_495 -> m30_497  [color=darkseagreen4, key=1, label=route, style=dashed];
m30_83 -> m30_2  [color=green, key=1, label="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture", style=dashed];
m30_83 -> m30_27  [color=darkseagreen4, key=1, label="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture", style=dashed];
m30_83 -> m30_4  [color=darkseagreen4, key=1, label="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture", style=dashed];
m30_83 -> m30_34  [color=darkseagreen4, key=1, label="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture", style=dashed];
m30_83 -> m30_7  [color=darkseagreen4, key=1, label="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture", style=dashed];
m30_83 -> m30_37  [color=darkseagreen4, key=1, label="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture", style=dashed];
m30_83 -> m30_38  [color=darkseagreen4, key=1, label="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture", style=dashed];
m30_83 -> m30_44  [color=darkseagreen4, key=1, label="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture", style=dashed];
m30_83 -> m30_39  [color=darkseagreen4, key=1, label="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture", style=dashed];
m30_83 -> m30_47  [color=darkseagreen4, key=1, label="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture", style=dashed];
m30_83 -> m30_51  [color=darkseagreen4, key=1, label="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture", style=dashed];
m30_83 -> m30_52  [color=darkseagreen4, key=1, label="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture", style=dashed];
m30_83 -> m30_56  [color=darkseagreen4, key=1, label="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture", style=dashed];
m30_83 -> m30_60  [color=darkseagreen4, key=1, label="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture", style=dashed];
m30_83 -> m30_61  [color=darkseagreen4, key=1, label="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture", style=dashed];
m30_83 -> m30_64  [color=darkseagreen4, key=1, label="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture", style=dashed];
m30_83 -> m30_69  [color=darkseagreen4, key=1, label="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture", style=dashed];
m30_83 -> m30_70  [color=darkseagreen4, key=1, label="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture", style=dashed];
m30_83 -> m30_73  [color=darkseagreen4, key=1, label="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture", style=dashed];
m30_83 -> m30_79  [color=darkseagreen4, key=1, label="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture", style=dashed];
m30_415 -> m30_421  [color=darkseagreen4, key=1, label=request, style=dashed];
m30_417 -> m30_423  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_419 -> m30_421  [color=darkseagreen4, key=1, label=resolvedRoute, style=dashed];
m30_418 -> m30_426  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_418 -> m30_430  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator", style=dashed];
m30_84 -> m30_56  [color=darkseagreen4, key=1, label=instance, style=dashed];
m30_435 -> m30_441  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_436 -> m30_438  [color=darkseagreen4, key=1, label=resolvedRoute, style=dashed];
m30_436 -> m30_439  [color=darkseagreen4, key=1, label=resolvedRoute, style=dashed];
m30_379 -> m30_385  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_380 -> m30_389  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModuleConfigurator", style=dashed];
m30_381 -> m30_392  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_558 -> m30_2  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_20  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_4  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_27  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_34  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_7  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_38  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_41  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_44  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_12  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_59  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_67  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_71  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_95  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_99  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_120  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_110  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_123  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_112  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_129  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_136  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_146  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_137  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_153  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_139  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_159  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_165  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_180  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_166  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_186  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_167  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_192  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_169  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_198  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_218  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_205  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_221  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_206  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_227  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_207  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_233  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_209  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_239  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_245  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_256  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_246  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_262  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_248  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_268  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_275  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_282  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_289  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_295  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_302  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_312  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_303  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_315  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_304  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_318  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_367  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_373  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_381  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_393  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_418  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_558 -> m30_427  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m30_559 -> m30_52  [color=darkseagreen4, key=1, label="?", style=dashed];
m30_560 -> m30_123  [color=darkseagreen4, key=1, label=request, style=dashed];
m30_561 -> m30_129  [color=darkseagreen4, key=1, label=context, style=dashed];
m30_562 -> m30_146  [color=darkseagreen4, key=1, label=request, style=dashed];
m30_562 -> m30_153  [color=darkseagreen4, key=1, label=request, style=dashed];
m30_563 -> m30_159  [color=darkseagreen4, key=1, label=context, style=dashed];
m30_564 -> m30_180  [color=darkseagreen4, key=1, label=request, style=dashed];
m30_564 -> m30_186  [color=darkseagreen4, key=1, label=request, style=dashed];
m30_564 -> m30_192  [color=darkseagreen4, key=1, label=request, style=dashed];
m30_565 -> m30_198  [color=darkseagreen4, key=1, label=context, style=dashed];
m30_566 -> m30_221  [color=darkseagreen4, key=1, label=request, style=dashed];
m30_566 -> m30_227  [color=darkseagreen4, key=1, label=request, style=dashed];
m30_566 -> m30_233  [color=darkseagreen4, key=1, label=request, style=dashed];
m30_567 -> m30_239  [color=darkseagreen4, key=1, label=context, style=dashed];
m30_568 -> m30_256  [color=darkseagreen4, key=1, label=request, style=dashed];
m30_568 -> m30_262  [color=darkseagreen4, key=1, label=request, style=dashed];
m30_569 -> m30_268  [color=darkseagreen4, key=1, label=context, style=dashed];
m30_570 -> m30_282  [color=darkseagreen4, key=1, label=request, style=dashed];
m30_571 -> m30_295  [color=darkseagreen4, key=1, label=context, style=dashed];
m30_572 -> m30_373  [color=darkseagreen4, key=1, label=context, style=dashed];
m30_573 -> m30_552  [color=darkseagreen4, key=1, label=moduleCatalog, style=dashed];
m30_573 -> m30_556  [color=darkseagreen4, key=1, label=moduleCatalog, style=dashed];
m32_4 -> m32_6  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_4 -> m32_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_11 -> m32_14  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_13 -> m32_15  [color=darkseagreen4, key=1, label=match, style=dashed];
m32_19 -> m32_1  [color=darkseagreen4, key=1, label="Nancy.Routing.Constraints.RouteSegmentConstraintBase<T>", style=dashed];
m32_19 -> m32_6  [color=darkseagreen4, key=1, label="Nancy.Routing.Constraints.RouteSegmentConstraintBase<T>", style=dashed];
m33_0 -> m33_2  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_11 -> m33_13  [color=darkseagreen4, key=1, label="Nancy.NancyModule", style=dashed];
m33_13 -> m33_1  [color=darkseagreen4, key=1, label="Nancy.ViewEngines.ViewNotFoundException", style=dashed];
m33_13 -> m33_2  [color=darkseagreen4, key=1, label="Nancy.ViewEngines.ViewNotFoundException", style=dashed];
m33_15 -> m33_17  [color=darkseagreen4, key=1, label="System.Func<Nancy.NancyContext, bool>", style=dashed];
m33_31 -> m33_12  [color=darkseagreen4, key=1, label="Nancy.NancyModule.RouteBuilder", style=dashed];
m33_31 -> m33_13  [color=darkseagreen4, key=1, label="Nancy.NancyModule.RouteBuilder", style=dashed];
m33_31 -> m33_17  [color=darkseagreen4, key=1, label="Nancy.NancyModule.RouteBuilder", style=dashed];
}
