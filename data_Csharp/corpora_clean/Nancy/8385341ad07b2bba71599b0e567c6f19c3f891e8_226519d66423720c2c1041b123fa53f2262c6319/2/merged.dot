digraph  {
n0 [label="Entry Nancy.Routing.Constraints.AlphaRouteSegmentConstraint.TryMatch(string, string, out string)", span="11-11", cluster="Nancy.Routing.Constraints.AlphaRouteSegmentConstraint.TryMatch(string, string, out string)"];
n1 [label="!segment.All(char.IsLetter)", span="13-13", cluster="Nancy.Routing.Constraints.AlphaRouteSegmentConstraint.TryMatch(string, string, out string)"];
n4 [label="matchedValue = segment", span="19-19", cluster="Nancy.Routing.Constraints.AlphaRouteSegmentConstraint.TryMatch(string, string, out string)"];
n2 [label="matchedValue = null", span="15-15", cluster="Nancy.Routing.Constraints.AlphaRouteSegmentConstraint.TryMatch(string, string, out string)"];
n7 [label="Entry Unk.All", span="", cluster="Unk.All"];
n3 [label="return false;", span="16-16", cluster="Nancy.Routing.Constraints.AlphaRouteSegmentConstraint.TryMatch(string, string, out string)"];
n5 [label="return true;", span="20-20", cluster="Nancy.Routing.Constraints.AlphaRouteSegmentConstraint.TryMatch(string, string, out string)"];
n6 [label="Exit Nancy.Routing.Constraints.AlphaRouteSegmentConstraint.TryMatch(string, string, out string)", span="11-11", cluster="Nancy.Routing.Constraints.AlphaRouteSegmentConstraint.TryMatch(string, string, out string)"];
m0_3 [label="Entry bool.TryParse(string, out bool)", span="0-0", cluster="bool.TryParse(string, out bool)", file="BoolRouteSegmentConstraint.cs"];
m0_0 [label="Entry Nancy.Routing.Constraints.BoolRouteSegmentConstraint.TryMatch(string, string, out bool)", span="9-9", cluster="Nancy.Routing.Constraints.BoolRouteSegmentConstraint.TryMatch(string, string, out bool)", file="BoolRouteSegmentConstraint.cs"];
m0_1 [label="return bool.TryParse(segment, out matchedValue);", span="11-11", cluster="Nancy.Routing.Constraints.BoolRouteSegmentConstraint.TryMatch(string, string, out bool)", file="BoolRouteSegmentConstraint.cs"];
m0_2 [label="Exit Nancy.Routing.Constraints.BoolRouteSegmentConstraint.TryMatch(string, string, out bool)", span="9-9", cluster="Nancy.Routing.Constraints.BoolRouteSegmentConstraint.TryMatch(string, string, out bool)", file="BoolRouteSegmentConstraint.cs"];
m1_14 [label="return this.responseBytes.GetEnumerator();", span="54-54", cluster="Nancy.Testing.BrowserResponseBodyWrapper.GetEnumerator()", file="BrowserResponseBodyWrapper.cs"];
m1_0 [label="Entry Nancy.Routing.DefaultNancyModuleBuilder.DefaultNancyModuleBuilder(Nancy.ViewEngines.IViewFactory, Nancy.IResponseFormatterFactory, Nancy.ModelBinding.IModelBinderLocator, Nancy.Validation.IModelValidatorLocator)", span="23-23", cluster="Nancy.Routing.DefaultNancyModuleBuilder.DefaultNancyModuleBuilder(Nancy.ViewEngines.IViewFactory, Nancy.IResponseFormatterFactory, Nancy.ModelBinding.IModelBinderLocator, Nancy.Validation.IModelValidatorLocator)", file="BrowserResponseBodyWrapper.cs"];
m1_1 [label="this.viewFactory = viewFactory", span="25-25", cluster="Nancy.Routing.DefaultNancyModuleBuilder.DefaultNancyModuleBuilder(Nancy.ViewEngines.IViewFactory, Nancy.IResponseFormatterFactory, Nancy.ModelBinding.IModelBinderLocator, Nancy.Validation.IModelValidatorLocator)", color=green, community=0, file="BrowserResponseBodyWrapper.cs"];
m1_2 [label="this.responseFormatterFactory = responseFormatterFactory", span="26-26", cluster="Nancy.Routing.DefaultNancyModuleBuilder.DefaultNancyModuleBuilder(Nancy.ViewEngines.IViewFactory, Nancy.IResponseFormatterFactory, Nancy.ModelBinding.IModelBinderLocator, Nancy.Validation.IModelValidatorLocator)", file="BrowserResponseBodyWrapper.cs"];
m1_3 [label="this.modelBinderLocator = modelBinderLocator", span="27-27", cluster="Nancy.Routing.DefaultNancyModuleBuilder.DefaultNancyModuleBuilder(Nancy.ViewEngines.IViewFactory, Nancy.IResponseFormatterFactory, Nancy.ModelBinding.IModelBinderLocator, Nancy.Validation.IModelValidatorLocator)", file="BrowserResponseBodyWrapper.cs"];
m1_4 [label="Entry Nancy.Testing.BrowserResponseBodyWrapper.GetContentStream(Nancy.Response)", span="22-22", cluster="Nancy.Testing.BrowserResponseBodyWrapper.GetContentStream(Nancy.Response)", file="BrowserResponseBodyWrapper.cs"];
m1_5 [label="Entry System.IO.MemoryStream.ToArray()", span="0-0", cluster="System.IO.MemoryStream.ToArray()", file="BrowserResponseBodyWrapper.cs"];
m1_17 [label="Entry Nancy.Testing.BrowserResponseBodyWrapper.System.Collections.IEnumerable.GetEnumerator()", span="61-61", cluster="Nancy.Testing.BrowserResponseBodyWrapper.System.Collections.IEnumerable.GetEnumerator()", file="BrowserResponseBodyWrapper.cs"];
m1_18 [label="return this.GetEnumerator();", span="63-63", cluster="Nancy.Testing.BrowserResponseBodyWrapper.System.Collections.IEnumerable.GetEnumerator()", file="BrowserResponseBodyWrapper.cs"];
m1_19 [label="Exit Nancy.Testing.BrowserResponseBodyWrapper.System.Collections.IEnumerable.GetEnumerator()", span="61-61", cluster="Nancy.Testing.BrowserResponseBodyWrapper.System.Collections.IEnumerable.GetEnumerator()", file="BrowserResponseBodyWrapper.cs"];
m1_6 [label="var contentsStream = new MemoryStream()", span="24-24", cluster="Nancy.Testing.BrowserResponseBodyWrapper.GetContentStream(Nancy.Response)", file="BrowserResponseBodyWrapper.cs", color=green, community=0];
m1_7 [label="response.Contents.Invoke(contentsStream)", span="25-25", cluster="Nancy.Testing.BrowserResponseBodyWrapper.GetContentStream(Nancy.Response)", file="BrowserResponseBodyWrapper.cs", color=green, community=0];
m1_8 [label="contentsStream.Position = 0", span="26-26", cluster="Nancy.Testing.BrowserResponseBodyWrapper.GetContentStream(Nancy.Response)", file="BrowserResponseBodyWrapper.cs"];
m1_9 [label="return contentsStream;", span="27-27", cluster="Nancy.Testing.BrowserResponseBodyWrapper.GetContentStream(Nancy.Response)", file="BrowserResponseBodyWrapper.cs"];
m1_10 [label="Exit Nancy.Testing.BrowserResponseBodyWrapper.GetContentStream(Nancy.Response)", span="22-22", cluster="Nancy.Testing.BrowserResponseBodyWrapper.GetContentStream(Nancy.Response)", file="BrowserResponseBodyWrapper.cs"];
m1_11 [label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0", cluster="System.IO.MemoryStream.MemoryStream()", file="BrowserResponseBodyWrapper.cs"];
m1_12 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="BrowserResponseBodyWrapper.cs"];
m1_13 [label="Entry Nancy.Testing.BrowserResponseBodyWrapper.GetEnumerator()", span="52-52", cluster="Nancy.Testing.BrowserResponseBodyWrapper.GetEnumerator()", file="BrowserResponseBodyWrapper.cs"];
m1_16 [label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0", cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()", file="BrowserResponseBodyWrapper.cs"];
m1_15 [label="Nancy.Routing.DefaultNancyModuleBuilder", span="", cluster="Nancy.Testing.BrowserResponseBodyWrapper.GetEnumerator()", file="BrowserResponseBodyWrapper.cs"];
m1_20 [label="Nancy.Testing.BrowserResponseBodyWrapper", span="", file="BrowserResponseBodyWrapper.cs"];
m2_444 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_options_request_when_route_is_defined()", span="454-454", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_options_request_when_route_is_defined()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_445 [label="var request = new FakeRequest(''OPTIONS'', ''/foo/bar'')", span="457-457", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_options_request_when_route_is_defined()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_446 [label="var context = new NancyContext {Request = request}", span="458-458", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_options_request_when_route_is_defined()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_447 [label="var resolver = CreateResolver(x => x.AddGetRoute(''/foo/bar''))", span="459-459", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_options_request_when_route_is_defined()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_448 [label="var resolvedRoute = resolver.Resolve(context)", span="462-462", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_options_request_when_route_is_defined()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_449 [label="resolvedRoute.ShouldNotBeNull()", span="465-465", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_options_request_when_route_is_defined()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_450 [label="resolvedRoute.Item1.ShouldBeOfType<OptionsRoute>()", span="466-466", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_options_request_when_route_is_defined()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_451 [label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_options_request_when_route_is_defined()", span="454-454", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_options_request_when_route_is_defined()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_478 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_optionsroute_with_allow_header_set_to_allowed_methods_matching_request_route_for_options()", span="503-503", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_optionsroute_with_allow_header_set_to_allowed_methods_matching_request_route_for_options()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_479 [label="var request = new FakeRequest(''OPTIONS'', ''/foo/bar'')", span="506-506", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_optionsroute_with_allow_header_set_to_allowed_methods_matching_request_route_for_options()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_480 [label="var context = new NancyContext {Request = request}", span="507-507", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_optionsroute_with_allow_header_set_to_allowed_methods_matching_request_route_for_options()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_481 [label="var resolver = CreateResolver(x =>\r\n            {\r\n                x.AddGetRoute(''/foo/bar'');\r\n                x.AddPutRoute(''/foo/bar'');\r\n            })", span="508-512", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_optionsroute_with_allow_header_set_to_allowed_methods_matching_request_route_for_options()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_482 [label="var route = resolver.Resolve(context).Item1", span="515-515", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_optionsroute_with_allow_header_set_to_allowed_methods_matching_request_route_for_options()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_483 [label="route.ShouldNotBeNull()", span="518-518", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_optionsroute_with_allow_header_set_to_allowed_methods_matching_request_route_for_options()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_484 [label="route.ShouldBeOfType<OptionsRoute>()", span="519-519", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_optionsroute_with_allow_header_set_to_allowed_methods_matching_request_route_for_options()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_485 [label="route.Invoke(new DynamicDictionary()).Headers[''Allow''].ShouldEqual(''GET, PUT'')", span="520-520", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_optionsroute_with_allow_header_set_to_allowed_methods_matching_request_route_for_options()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_486 [label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_optionsroute_with_allow_header_set_to_allowed_methods_matching_request_route_for_options()", span="503-503", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_optionsroute_with_allow_header_set_to_allowed_methods_matching_request_route_for_options()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_270 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_request_uri()", span="245-245", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_request_uri()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_271 [label="var request = new FakeRequest(''get'', ''/foo/bar'')", span="248-248", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_request_uri()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_272 [label="var context = new NancyContext {Request = request}", span="249-249", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_request_uri()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_275 [label="A.CallTo(() => this.matcher.Match(request.Path, A<string>.Ignored, A<NancyContext>.Ignored)).MustHaveHappened()", span="256-256", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_request_uri()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_273 [label="var resolver = CreateResolver(x => x.AddGetRoute(''/foo/bar''))", span="250-250", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_request_uri()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_274 [label="resolver.Resolve(context)", span="253-253", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_request_uri()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_276 [label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_request_uri()", span="245-245", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_request_uri()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_61 [label="Entry Unk.GetKeyForModuleType", span="", cluster="Unk.GetKeyForModuleType", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_161 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", span="150-150", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_162 [label="var request = new FakeRequest(''get'', ''/foo/bar'')", span="153-153", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_163 [label="var context = new NancyContext { Request = request }", span="154-154", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_165 [label="A.CallTo(() => this.matcher.Match(request.Path, ''/foo/bar'', null)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(true)))", span="166-167", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_166 [label="A.CallTo(() => this.matcher.Match(request.Path, ''/foo/{bar}'', null)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(true).AddParameter(''bar'', ''fake value'')))", span="169-170", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_167 [label="A.CallTo(() => this.matcher.Match(request.Path, ''/foo/{bar}'', null)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(true)\r\n                    .AddParameter(''foo'', ''fake value'')\r\n                    .AddParameter(''bar'', ''fake value'')))", span="172-175", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_164 [label="var resolver = CreateResolver(x =>\r\n            {\r\n                x.AddGetRoute(''/foo/{bar}'', ''module-key-parameters'');\r\n                x.AddGetRoute(''/{foo}/{bar}'', ''module-key-two-parameters'');\r\n                x.AddGetRoute(''/foo/bar'', ''module-key-no-parameters'');\r\n                x.AddGetRoute(''/foo/bar'', ''module-key-no-parameters-second'');\r\n                x.AddGetRoute(''/foo/{bar}'', ''module-key-parameters'');\r\n                x.AddGetRoute(''/{foo}/{bar}'', ''module-key-two-parameters'');\r\n            })", span="156-164", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_168 [label="resolver.Resolve(context)", span="177-177", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_169 [label="A.CallTo(() => this.catalog.GetModuleByKey(''module-key-no-parameters'', context)).MustHaveHappened()", span="180-180", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_170 [label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", span="150-150", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_346 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_allow_header_set_to_allowed_methods_matching_request_route()", span="331-331", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_allow_header_set_to_allowed_methods_matching_request_route()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_347 [label="var request = new FakeRequest(''POST'', ''/foo/bar'')", span="334-334", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_allow_header_set_to_allowed_methods_matching_request_route()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_348 [label="var context = new NancyContext { Request = request }", span="335-335", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_allow_header_set_to_allowed_methods_matching_request_route()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_349 [label="var resolver = CreateResolver(x => {\r\n                x.AddGetRoute(''/foo/bar'');\r\n                x.AddPutRoute(''/foo/bar'');\r\n            })", span="337-340", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_allow_header_set_to_allowed_methods_matching_request_route()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_350 [label="var route = resolver.Resolve(context).Item1", span="343-343", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_allow_header_set_to_allowed_methods_matching_request_route()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_351 [label="route.ShouldNotBeNull()", span="346-346", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_allow_header_set_to_allowed_methods_matching_request_route()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_352 [label="route.ShouldBeOfType<MethodNotAllowedRoute>()", span="347-347", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_allow_header_set_to_allowed_methods_matching_request_route()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_353 [label="route.Invoke(new DynamicDictionary()).Headers[''Allow''].ShouldEqual(''GET, PUT'')", span="348-348", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_allow_header_set_to_allowed_methods_matching_request_route()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_354 [label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_allow_header_set_to_allowed_methods_matching_request_route()", span="331-331", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_allow_header_set_to_allowed_methods_matching_request_route()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_26 [label="Entry lambda expression", span="27-27", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_550 [label="Entry DefaultRouteResolver.cstr", span="", cluster="DefaultRouteResolver.cstr", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_105 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_first_route_with_when_multiple_matches_are_available_and_contains_same_number_of_parameter_captures()", span="99-99", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_first_route_with_when_multiple_matches_are_available_and_contains_same_number_of_parameter_captures()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_106 [label="var request = new FakeRequest(''get'', ''/foo/bar'')", span="102-102", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_first_route_with_when_multiple_matches_are_available_and_contains_same_number_of_parameter_captures()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_107 [label="var context = new NancyContext { Request = request }", span="103-103", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_first_route_with_when_multiple_matches_are_available_and_contains_same_number_of_parameter_captures()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_110 [label="A.CallTo(() => this.matcher.Match(request.Path, ''/foo/{bar}'', A<NancyContext>.Ignored)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(true).AddParameter(''bar'', ''fake value'')))", span="112-113", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_first_route_with_when_multiple_matches_are_available_and_contains_same_number_of_parameter_captures()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_108 [label="var resolver = CreateResolver(x => {\r\n                x.AddGetRoute(''/foo/{bar}'', ''first-module-key-parameters'');\r\n                x.AddGetRoute(''/foo/{bar}'', ''second-module-key-parameters'');\r\n            })", span="105-108", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_first_route_with_when_multiple_matches_are_available_and_contains_same_number_of_parameter_captures()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_111 [label="resolver.Resolve(context)", span="116-116", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_first_route_with_when_multiple_matches_are_available_and_contains_same_number_of_parameter_captures()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_112 [label="A.CallTo(() => this.catalog.GetModuleByKey(''first-module-key-parameters'', context)).MustHaveHappened()", span="119-119", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_first_route_with_when_multiple_matches_are_available_and_contains_same_number_of_parameter_captures()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_109 [label="this.expectedModule = new FakeNancyModule(x => x.AddGetRoute(''/foo/{bar}'', this.expectedAction))", span="110-110", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_first_route_with_when_multiple_matches_are_available_and_contains_same_number_of_parameter_captures()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_113 [label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_first_route_with_when_multiple_matches_are_available_and_contains_same_number_of_parameter_captures()", span="99-99", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_first_route_with_when_multiple_matches_are_available_and_contains_same_number_of_parameter_captures()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_466 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_options_route_with_path_set_to_request_route_for_options()", span="486-486", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_options_route_with_path_set_to_request_route_for_options()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_467 [label="var request = new FakeRequest(''OPTIONS'', ''/foo/bar'')", span="489-489", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_options_route_with_path_set_to_request_route_for_options()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_468 [label="var context = new NancyContext { Request = request }", span="490-490", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_options_route_with_path_set_to_request_route_for_options()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_473 [label="resolvedRoute.Item1.Description.Path.ShouldEqual(request.Path)", span="499-499", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_options_route_with_path_set_to_request_route_for_options()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_469 [label="var resolver = CreateResolver(x => x.AddGetRoute(''/foo/bar''))", span="491-491", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_options_route_with_path_set_to_request_route_for_options()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_470 [label="var resolvedRoute = resolver.Resolve(context)", span="494-494", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_options_route_with_path_set_to_request_route_for_options()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_471 [label="resolvedRoute.ShouldNotBeNull()", span="497-497", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_options_route_with_path_set_to_request_route_for_options()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_472 [label="resolvedRoute.Item1.ShouldBeOfType<OptionsRoute>()", span="498-498", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_options_route_with_path_set_to_request_route_for_options()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_474 [label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_options_route_with_path_set_to_request_route_for_options()", span="486-486", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_options_route_with_path_set_to_request_route_for_options()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_91 [label="Entry Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator.AddGetRoute(string, string)", span="62-62", cluster="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator.AddGetRoute(string, string)", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_200 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", span="184-184", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_201 [label="var request = new FakeRequest(''get'', ''/foo/bar/me'')", span="189-189", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_202 [label="var context = new NancyContext { Request = request }", span="190-190", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_205 [label="A.CallTo(() => this.matcher.Match(request.Path, ''/foo/bar/{two}'', A<NancyContext>.Ignored)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(true).AddParameter(''two'', ''fake values'')))", span="202-203", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_206 [label="A.CallTo(() => this.matcher.Match(request.Path, ''/foo/{bar}/{two}'', A<NancyContext>.Ignored)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(true)\r\n                    .AddParameter(''bar'', ''fake values'')\r\n                    .AddParameter(''two'', ''fake values'')))", span="205-208", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_207 [label="A.CallTo(() => this.matcher.Match(request.Path, ''/foo/{bar}'', A<NancyContext>.Ignored)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(true).AddParameter(''bar'', ''fake value'')))", span="210-211", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_203 [label="var resolver = CreateResolver(x =>\r\n            {\r\n                x.AddGetRoute(''/foo/{bar}'', ''module-key-first'');\r\n                x.AddGetRoute(''/foo/{bar}/{two}'', ''module-key-third'');\r\n                x.AddGetRoute(''/foo/bar/{two}'', ''module-key-second'');\r\n                x.AddGetRoute(''/foo/{bar}/{two}'', ''module-key-third'');\r\n            })", span="192-198", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_208 [label="resolver.Resolve(context)", span="214-214", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_209 [label="A.CallTo(() => this.catalog.GetModuleByKey(''module-key-second'', context)).MustHaveHappened()", span="217-217", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_204 [label="this.expectedModule = new FakeNancyModule(x => x.AddGetRoute(''/foo/bar/{two}'', this.expectedAction))", span="200-200", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_210 [label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", span="184-184", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_17 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_18 [label="Entry Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModule(System.Action<Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModuleConfigurator>)", span="10-10", cluster="Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModule(System.Action<Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModuleConfigurator>)", color=green, community=0, file="BrowserResponseBodyWrapperExtensions.cs"];
m2_19 [label="Entry lambda expression", span="23-23", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_20 [label="this.moduleBuilder.BuildModule(A<NancyModule>.Ignored, A<NancyContext>.Ignored)", span="23-23", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_526 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_whos_filter_returns_true_when_there_is_also_a_matching_route_with_a_failing_filter()", span="578-578", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_whos_filter_returns_true_when_there_is_also_a_matching_route_with_a_failing_filter()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_527 [label="var moduleCatalog = new FakeModuleCatalog()", span="581-581", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_whos_filter_returns_true_when_there_is_also_a_matching_route_with_a_failing_filter()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_528 [label="var routeCache = new RouteCache(moduleCatalog, new FakeModuleKeyGenerator(), A.Fake<INancyContextFactory>())", span="582-582", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_whos_filter_returns_true_when_there_is_also_a_matching_route_with_a_failing_filter()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_529 [label="var specificResolver = new DefaultRouteResolver(moduleCatalog, this.matcher, this.moduleBuilder, routeCache)", span="583-583", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_whos_filter_returns_true_when_there_is_also_a_matching_route_with_a_failing_filter()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_530 [label="var request = new FakeRequest(''GET'', ''/filt'')", span="584-584", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_whos_filter_returns_true_when_there_is_also_a_matching_route_with_a_failing_filter()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_532 [label="var route = specificResolver.Resolve(context).Item1", span="588-588", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_whos_filter_returns_true_when_there_is_also_a_matching_route_with_a_failing_filter()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_531 [label="var context = new NancyContext { Request = request }", span="585-585", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_whos_filter_returns_true_when_there_is_also_a_matching_route_with_a_failing_filter()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_533 [label="route.Description.Condition(context).ShouldBeTrue()", span="591-591", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_whos_filter_returns_true_when_there_is_also_a_matching_route_with_a_failing_filter()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_534 [label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_whos_filter_returns_true_when_there_is_also_a_matching_route_with_a_failing_filter()", span="578-578", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_whos_filter_returns_true_when_there_is_also_a_matching_route_with_a_failing_filter()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_241 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_choose_root_route_over_one_with_capture_if_requesting_root_uri()", span="221-221", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_choose_root_route_over_one_with_capture_if_requesting_root_uri()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_242 [label="var request = new FakeRequest(''get'', ''/'')", span="223-223", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_choose_root_route_over_one_with_capture_if_requesting_root_uri()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_243 [label="var context = new NancyContext { Request = request }", span="224-224", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_choose_root_route_over_one_with_capture_if_requesting_root_uri()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_245 [label="A.CallTo(() => this.matcher.Match(request.Path, ''/'', A<NancyContext>.Ignored)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(true)))", span="232-233", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_choose_root_route_over_one_with_capture_if_requesting_root_uri()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_246 [label="A.CallTo(() => this.matcher.Match(request.Path, ''/{name}'', A<NancyContext>.Ignored)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(true).AddParameter(''name'', ''fake values'')))", span="234-235", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_choose_root_route_over_one_with_capture_if_requesting_root_uri()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_244 [label="var resolver = CreateResolver(x => {\r\n                x.AddGetRoute(''/{name}'', ''module-key-second'');\r\n                x.AddGetRoute(''/'', ''module-key-first'');\r\n                x.AddGetRoute(''/{name}'', ''module-key-second'');\r\n            })", span="226-230", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_choose_root_route_over_one_with_capture_if_requesting_root_uri()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_247 [label="resolver.Resolve(context)", span="238-238", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_choose_root_route_over_one_with_capture_if_requesting_root_uri()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_248 [label="A.CallTo(() => this.catalog.GetModuleByKey(''module-key-first'', context)).MustHaveHappened()", span="241-241", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_choose_root_route_over_one_with_capture_if_requesting_root_uri()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_249 [label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_choose_root_route_over_one_with_capture_if_requesting_root_uri()", span="221-221", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_choose_root_route_over_one_with_capture_if_requesting_root_uri()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_280 [label="Entry Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator.AddGetRoute(string)", span="55-55", cluster="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator.AddGetRoute(string)", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_31 [label="HttpStatusCode.OK", span="29-29", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_46 [label="Entry Unk.Match", span="", cluster="Unk.Match", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_329 [label="Entry object.ShouldNotBeNull()", span="140-140", cluster="object.ShouldNotBeNull()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_70 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.CreateResolver(Nancy.Routing.IRouteCache)", span="55-55", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.CreateResolver(Nancy.Routing.IRouteCache)", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_71 [label="return new DefaultRouteResolver(this.catalog, this.matcher, this.moduleBuilder, cache);", span="57-57", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.CreateResolver(Nancy.Routing.IRouteCache)", color=red, community=0, file="BrowserResponseBodyWrapperExtensions.cs"];
m2_72 [label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.CreateResolver(Nancy.Routing.IRouteCache)", span="55-55", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.CreateResolver(Nancy.Routing.IRouteCache)", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_455 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_have_status_code_200_for_options_when_route_is_defined()", span="470-470", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_have_status_code_200_for_options_when_route_is_defined()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_456 [label="var request = new FakeRequest(''OPTIONS'', ''/foo/bar'')", span="473-473", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_have_status_code_200_for_options_when_route_is_defined()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_457 [label="var context = new NancyContext { Request = request }", span="474-474", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_have_status_code_200_for_options_when_route_is_defined()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_458 [label="var resolver = CreateResolver(x => x.AddGetRoute(''/foo/bar''))", span="475-475", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_have_status_code_200_for_options_when_route_is_defined()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_459 [label="var resolvedRoute = resolver.Resolve(context)", span="478-478", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_have_status_code_200_for_options_when_route_is_defined()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_460 [label="var response = resolvedRoute.Item1.Invoke(null)", span="479-479", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_have_status_code_200_for_options_when_route_is_defined()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_461 [label="response.StatusCode.ShouldEqual(HttpStatusCode.OK)", span="482-482", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_have_status_code_200_for_options_when_route_is_defined()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_462 [label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_have_status_code_200_for_options_when_route_is_defined()", span="470-470", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_have_status_code_200_for_options_when_route_is_defined()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_85 [label="Entry Nancy.Routing.DefaultRouteResolver.Resolve(Nancy.NancyContext)", span="40-40", cluster="Nancy.Routing.DefaultRouteResolver.Resolve(Nancy.NancyContext)", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_101 [label="Entry object.ShouldBeSameAs(object)", span="130-130", cluster="object.ShouldBeSameAs(object)", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_29 [label="return (TModel)serializer.Deserialize(bodyWrapper.AsStream());", span="86-86", cluster="Nancy.Testing.BrowserResponseBodyWrapperExtensions.DeserializeXml<TModel>(Nancy.Testing.BrowserResponseBodyWrapper)", file="BrowserResponseBodyWrapperExtensions.cs", color=green, community=0];
m2_55 [label="Entry string.Equals(string)", span="0-0", cluster="string.Equals(string)", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_535 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_537 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", span="595-595", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_538 [label="var moduleCatalog = A.Fake<INancyModuleCatalog>()", span="598-598", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_539 [label="A.CallTo(() => moduleCatalog.GetAllModules(A<NancyContext>.Ignored)).Returns(new[] { new FakeNancyModuleWithPreAndPostHooks() })", span="599-599", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_540 [label="A.CallTo(() => moduleCatalog.GetModuleByKey(A<string>.Ignored, A<NancyContext>.Ignored)).Returns(\r\n                new FakeNancyModuleWithPreAndPostHooks())", span="600-601", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_541 [label="var routeCache = new RouteCache(moduleCatalog, new FakeModuleKeyGenerator(), A.Fake<INancyContextFactory>())", span="603-603", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_542 [label="var specificResolver = new DefaultRouteResolver(moduleCatalog, this.matcher, this.moduleBuilder, routeCache)", span="604-604", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_543 [label="var request = new FakeRequest(''GET'', ''/PrePost'')", span="605-605", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_545 [label="var result = specificResolver.Resolve(context)", span="609-609", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_544 [label="var context = new NancyContext { Request = request }", span="606-606", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_546 [label="result.Item3.ShouldNotBeNull()", span="612-612", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_547 [label="result.Item4.ShouldNotBeNull()", span="613-613", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_548 [label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", span="595-595", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_333 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_path_set_to_request_uri_when_matched_route_was_for_wrong_request_method()", span="314-314", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_path_set_to_request_uri_when_matched_route_was_for_wrong_request_method()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_334 [label="var request = new FakeRequest(''POST'', ''/foo/bar'')", span="317-317", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_path_set_to_request_uri_when_matched_route_was_for_wrong_request_method()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_335 [label="var context = new NancyContext { Request = request }", span="318-318", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_path_set_to_request_uri_when_matched_route_was_for_wrong_request_method()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_340 [label="route.Description.Path.ShouldEqual(request.Path)", span="327-327", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_path_set_to_request_uri_when_matched_route_was_for_wrong_request_method()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_336 [label="var resolver = CreateResolver(x => x.AddGetRoute(''/foo/bar''))", span="319-319", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_path_set_to_request_uri_when_matched_route_was_for_wrong_request_method()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_337 [label="var route = resolver.Resolve(context).Item1", span="322-322", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_path_set_to_request_uri_when_matched_route_was_for_wrong_request_method()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_338 [label="route.ShouldNotBeNull()", span="325-325", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_path_set_to_request_uri_when_matched_route_was_for_wrong_request_method()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_339 [label="route.ShouldBeOfType<MethodNotAllowedRoute>()", span="326-326", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_path_set_to_request_uri_when_matched_route_was_for_wrong_request_method()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_341 [label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_path_set_to_request_uri_when_matched_route_was_for_wrong_request_method()", span="314-314", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_path_set_to_request_uri_when_matched_route_was_for_wrong_request_method()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_15 [label="Entry Unk.CallTo", span="", cluster="Unk.CallTo", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_555 [label="Entry lambda expression", span="600-600", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_23 [label="Entry Nancy.Testing.BrowserResponseBodyWrapperExtensions.DeserializeJson<TModel>(Nancy.Testing.BrowserResponseBodyWrapper, Nancy.Json.JavaScriptSerializer)", span="70-70", cluster="Nancy.Testing.BrowserResponseBodyWrapperExtensions.DeserializeJson<TModel>(Nancy.Testing.BrowserResponseBodyWrapper, Nancy.Json.JavaScriptSerializer)", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_34 [label="x.AddGetRoute(''/foo/bar'', this.expectedAction)", span="30-30", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_37 [label="Entry lambda expression", span="32-32", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_40 [label="Entry lambda expression", span="32-32", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_43 [label="Entry lambda expression", span="35-35", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_47 [label="Entry lambda expression", span="35-40", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_58 [label="Entry lambda expression", span="44-44", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_62 [label="Entry lambda expression", span="44-44", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_21 [label="Entry Nancy.Json.JavaScriptSerializer.JavaScriptSerializer()", span="64-64", cluster="Nancy.Json.JavaScriptSerializer.JavaScriptSerializer()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_24 [label="return serializer.Deserialize<TModel>(bodyWrapper.AsString());", span="72-72", cluster="Nancy.Testing.BrowserResponseBodyWrapperExtensions.DeserializeJson<TModel>(Nancy.Testing.BrowserResponseBodyWrapper, Nancy.Json.JavaScriptSerializer)", file="BrowserResponseBodyWrapperExtensions.cs", color=green, community=0];
m2_25 [label="Exit Nancy.Testing.BrowserResponseBodyWrapperExtensions.DeserializeJson<TModel>(Nancy.Testing.BrowserResponseBodyWrapper, Nancy.Json.JavaScriptSerializer)", span="70-70", cluster="Nancy.Testing.BrowserResponseBodyWrapperExtensions.DeserializeJson<TModel>(Nancy.Testing.BrowserResponseBodyWrapper, Nancy.Json.JavaScriptSerializer)", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_27 [label="Entry Nancy.Testing.BrowserResponseBodyWrapperExtensions.DeserializeXml<TModel>(Nancy.Testing.BrowserResponseBodyWrapper)", span="81-81", cluster="Nancy.Testing.BrowserResponseBodyWrapperExtensions.DeserializeXml<TModel>(Nancy.Testing.BrowserResponseBodyWrapper)", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_28 [label="var serializer =\r\n                new XmlSerializer(typeof(TModel))", span="83-84", cluster="Nancy.Testing.BrowserResponseBodyWrapperExtensions.DeserializeXml<TModel>(Nancy.Testing.BrowserResponseBodyWrapper)", file="BrowserResponseBodyWrapperExtensions.cs", color=green, community=0];
m2_30 [label="Exit Nancy.Testing.BrowserResponseBodyWrapperExtensions.DeserializeXml<TModel>(Nancy.Testing.BrowserResponseBodyWrapper)", span="81-81", cluster="Nancy.Testing.BrowserResponseBodyWrapperExtensions.DeserializeXml<TModel>(Nancy.Testing.BrowserResponseBodyWrapper)", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_32 [label="Entry Nancy.Testing.BrowserResponseBodyWrapper.AsStream()", span="20-20", cluster="Nancy.Testing.BrowserResponseBodyWrapper.AsStream()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_33 [label="Entry Unk.Deserialize", span="", cluster="Unk.Deserialize", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_35 [label="Exit lambda expression", span="30-30", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_38 [label="this.catalog.GetModuleByKey(A<string>.Ignored, A<NancyContext>.Ignored)", span="32-32", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_39 [label="Exit lambda expression", span="32-32", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_41 [label="this.expectedModule", span="32-32", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_42 [label="Exit lambda expression", span="32-32", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_44 [label="this.matcher.Match(A<string>.Ignored, A<string>.Ignored, A<NancyContext>.Ignored)", span="35-35", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_45 [label="Exit lambda expression", span="35-35", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_48 [label="new FakeRoutePatternMatchResult(c =>\r\n                {\r\n                    c.IsMatch(((string)x.Arguments[0]).Equals(((string)x.Arguments[1])));\r\n                    c.AddParameter(''foo'', ''bar'');\r\n                })", span="36-40", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_52 [label="c.IsMatch(((string)x.Arguments[0]).Equals(((string)x.Arguments[1])))", span="38-38", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_49 [label="Exit lambda expression", span="35-40", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_53 [label="c.AddParameter(''foo'', ''bar'')", span="39-39", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_51 [label="Entry lambda expression", span="36-40", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_54 [label="Exit lambda expression", span="36-40", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_59 [label="moduleKeyGenerator.GetKeyForModuleType(A<Type>._)", span="44-44", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_60 [label="Exit lambda expression", span="44-44", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_63 [label="(string) x.Arguments[0]", span="44-44", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_64 [label="Exit lambda expression", span="44-44", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_88 [label="Entry lambda expression", span="68-68", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_89 [label="x.AddGetRoute(''/foo/bar'', ''module-key'')", span="68-68", cluster="lambda expression", color=red, community=0, file="BrowserResponseBodyWrapperExtensions.cs"];
m2_90 [label="Exit lambda expression", span="68-68", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_102 [label="Entry lambda expression", span="87-87", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_103 [label="x.AddGetRoute(''/foo/bar'', ''module-key'')", span="87-87", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_104 [label="Exit lambda expression", span="87-87", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_123 [label="this.matcher.Match(request.Path, ''/foo/{bar}'', A<NancyContext>.Ignored)", span="112-112", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_129 [label="this.catalog.GetModuleByKey(''first-module-key-parameters'', context)", span="119-119", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_115 [label="Entry lambda expression", span="105-108", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_120 [label="x.AddGetRoute(''/foo/{bar}'', this.expectedAction)", span="110-110", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_122 [label="Entry lambda expression", span="112-112", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_126 [label="x.IsMatch(true).AddParameter(''bar'', ''fake value'')", span="113-113", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_128 [label="Entry lambda expression", span="119-119", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_116 [label="x.AddGetRoute(''/foo/{bar}'', ''first-module-key-parameters'')", span="106-106", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_117 [label="x.AddGetRoute(''/foo/{bar}'', ''second-module-key-parameters'')", span="107-107", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_118 [label="Exit lambda expression", span="105-108", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_119 [label="Entry lambda expression", span="110-110", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_121 [label="Exit lambda expression", span="110-110", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_124 [label="Exit lambda expression", span="112-112", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_125 [label="Entry lambda expression", span="113-113", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_127 [label="Exit lambda expression", span="113-113", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_130 [label="Exit lambda expression", span="119-119", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_146 [label="this.matcher.Match(request.Path, ''/foo/{bar}'', null)", span="134-134", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_153 [label="this.matcher.Match(request.Path, ''/foo/{bar}/{foo}'', A<NancyContext>.Ignored)", span="137-137", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_159 [label="this.catalog.GetModuleByKey(''module-key-two-parameters'', context)", span="146-146", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_141 [label="Entry lambda expression", span="129-132", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_145 [label="Entry lambda expression", span="134-134", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_150 [label="x.IsMatch(true).AddParameter(''bar'', ''fake value'')", span="135-135", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_152 [label="Entry lambda expression", span="137-137", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_156 [label="x.IsMatch(true)\r\n                    .AddParameter(''foo'', ''fake value'')\r\n                    .AddParameter(''bar'', ''fake value 2'')", span="138-140", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_158 [label="Entry lambda expression", span="146-146", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_142 [label="x.AddGetRoute(''/foo/{bar}/{foo}'', ''module-key-two-parameters'')", span="130-130", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_143 [label="x.AddGetRoute(''/foo/{bar}'', ''module-key-one-parameter'')", span="131-131", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_144 [label="Exit lambda expression", span="129-132", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_147 [label="Exit lambda expression", span="134-134", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_149 [label="Entry lambda expression", span="135-135", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_151 [label="Exit lambda expression", span="135-135", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_154 [label="Exit lambda expression", span="137-137", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_155 [label="Entry lambda expression", span="138-140", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_157 [label="Exit lambda expression", span="138-140", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_160 [label="Exit lambda expression", span="146-146", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_180 [label="this.matcher.Match(request.Path, ''/foo/bar'', null)", span="166-166", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_186 [label="this.matcher.Match(request.Path, ''/foo/{bar}'', null)", span="169-169", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_192 [label="this.matcher.Match(request.Path, ''/foo/{bar}'', null)", span="172-172", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_198 [label="this.catalog.GetModuleByKey(''module-key-no-parameters'', context)", span="180-180", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_171 [label="Entry lambda expression", span="156-164", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_179 [label="Entry lambda expression", span="166-166", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_183 [label="x.IsMatch(true)", span="167-167", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_185 [label="Entry lambda expression", span="169-169", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_189 [label="x.IsMatch(true).AddParameter(''bar'', ''fake value'')", span="170-170", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_191 [label="Entry lambda expression", span="172-172", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_195 [label="x.IsMatch(true)\r\n                    .AddParameter(''foo'', ''fake value'')\r\n                    .AddParameter(''bar'', ''fake value'')", span="173-175", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_197 [label="Entry lambda expression", span="180-180", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_172 [label="x.AddGetRoute(''/foo/{bar}'', ''module-key-parameters'')", span="158-158", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_173 [label="x.AddGetRoute(''/{foo}/{bar}'', ''module-key-two-parameters'')", span="159-159", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_174 [label="x.AddGetRoute(''/foo/bar'', ''module-key-no-parameters'')", span="160-160", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_175 [label="x.AddGetRoute(''/foo/bar'', ''module-key-no-parameters-second'')", span="161-161", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_176 [label="x.AddGetRoute(''/foo/{bar}'', ''module-key-parameters'')", span="162-162", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_177 [label="x.AddGetRoute(''/{foo}/{bar}'', ''module-key-two-parameters'')", span="163-163", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_178 [label="Exit lambda expression", span="156-164", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_181 [label="Exit lambda expression", span="166-166", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_182 [label="Entry lambda expression", span="167-167", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_184 [label="Exit lambda expression", span="167-167", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_187 [label="Exit lambda expression", span="169-169", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_188 [label="Entry lambda expression", span="170-170", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_190 [label="Exit lambda expression", span="170-170", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_193 [label="Exit lambda expression", span="172-172", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_194 [label="Entry lambda expression", span="173-175", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_196 [label="Exit lambda expression", span="173-175", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_199 [label="Exit lambda expression", span="180-180", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_221 [label="this.matcher.Match(request.Path, ''/foo/bar/{two}'', A<NancyContext>.Ignored)", span="202-202", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_227 [label="this.matcher.Match(request.Path, ''/foo/{bar}/{two}'', A<NancyContext>.Ignored)", span="205-205", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_233 [label="this.matcher.Match(request.Path, ''/foo/{bar}'', A<NancyContext>.Ignored)", span="210-210", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_239 [label="this.catalog.GetModuleByKey(''module-key-second'', context)", span="217-217", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_211 [label="Entry lambda expression", span="192-198", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_218 [label="x.AddGetRoute(''/foo/bar/{two}'', this.expectedAction)", span="200-200", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_220 [label="Entry lambda expression", span="202-202", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_224 [label="x.IsMatch(true).AddParameter(''two'', ''fake values'')", span="203-203", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_226 [label="Entry lambda expression", span="205-205", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_230 [label="x.IsMatch(true)\r\n                    .AddParameter(''bar'', ''fake values'')\r\n                    .AddParameter(''two'', ''fake values'')", span="206-208", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_232 [label="Entry lambda expression", span="210-210", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_236 [label="x.IsMatch(true).AddParameter(''bar'', ''fake value'')", span="211-211", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_238 [label="Entry lambda expression", span="217-217", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_212 [label="x.AddGetRoute(''/foo/{bar}'', ''module-key-first'')", span="194-194", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_213 [label="x.AddGetRoute(''/foo/{bar}/{two}'', ''module-key-third'')", span="195-195", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_214 [label="x.AddGetRoute(''/foo/bar/{two}'', ''module-key-second'')", span="196-196", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_215 [label="x.AddGetRoute(''/foo/{bar}/{two}'', ''module-key-third'')", span="197-197", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_216 [label="Exit lambda expression", span="192-198", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_217 [label="Entry lambda expression", span="200-200", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_219 [label="Exit lambda expression", span="200-200", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_222 [label="Exit lambda expression", span="202-202", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_223 [label="Entry lambda expression", span="203-203", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_225 [label="Exit lambda expression", span="203-203", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_228 [label="Exit lambda expression", span="205-205", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_229 [label="Entry lambda expression", span="206-208", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_231 [label="Exit lambda expression", span="206-208", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_234 [label="Exit lambda expression", span="210-210", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_235 [label="Entry lambda expression", span="211-211", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_237 [label="Exit lambda expression", span="211-211", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_240 [label="Exit lambda expression", span="217-217", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_256 [label="this.matcher.Match(request.Path, ''/'', A<NancyContext>.Ignored)", span="232-232", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_262 [label="this.matcher.Match(request.Path, ''/{name}'', A<NancyContext>.Ignored)", span="234-234", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_268 [label="this.catalog.GetModuleByKey(''module-key-first'', context)", span="241-241", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_250 [label="Entry lambda expression", span="226-230", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_255 [label="Entry lambda expression", span="232-232", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_259 [label="x.IsMatch(true)", span="233-233", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_261 [label="Entry lambda expression", span="234-234", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_265 [label="x.IsMatch(true).AddParameter(''name'', ''fake values'')", span="235-235", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_267 [label="Entry lambda expression", span="241-241", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_251 [label="x.AddGetRoute(''/{name}'', ''module-key-second'')", span="227-227", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_252 [label="x.AddGetRoute(''/'', ''module-key-first'')", span="228-228", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_253 [label="x.AddGetRoute(''/{name}'', ''module-key-second'')", span="229-229", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_254 [label="Exit lambda expression", span="226-230", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_257 [label="Exit lambda expression", span="232-232", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_258 [label="Entry lambda expression", span="233-233", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_260 [label="Exit lambda expression", span="233-233", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_263 [label="Exit lambda expression", span="234-234", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_264 [label="Entry lambda expression", span="235-235", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_266 [label="Exit lambda expression", span="235-235", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_269 [label="Exit lambda expression", span="241-241", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_282 [label="this.matcher.Match(request.Path, A<string>.Ignored, A<NancyContext>.Ignored)", span="256-256", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_277 [label="Entry lambda expression", span="250-250", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_281 [label="Entry lambda expression", span="256-256", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_278 [label="x.AddGetRoute(''/foo/bar'')", span="250-250", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_279 [label="Exit lambda expression", span="250-250", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_283 [label="Exit lambda expression", span="256-256", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_295 [label="this.matcher.Match(A<string>.Ignored, A<string>.Ignored, context)", span="271-271", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_291 [label="Entry lambda expression", span="265-265", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_294 [label="Entry lambda expression", span="271-271", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_292 [label="x.AddGetRoute(''/foo/bar'')", span="265-265", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_293 [label="Exit lambda expression", span="265-265", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_296 [label="Exit lambda expression", span="271-271", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_306 [label="Entry lambda expression", span="281-285", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_311 [label="Entry lambda expression", span="291-291", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_314 [label="Entry lambda expression", span="292-292", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_317 [label="Entry lambda expression", span="293-293", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_307 [label="x.AddGetRoute(''/foo/bar'')", span="282-282", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_308 [label="x.AddGetRoute(''/bar/foo'')", span="283-283", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_309 [label="x.AddGetRoute(''/foobar'')", span="284-284", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_310 [label="Exit lambda expression", span="281-285", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_312 [label="this.matcher.Match(A<string>.Ignored, ''/foo/bar'', A<NancyContext>.Ignored)", span="291-291", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_313 [label="Exit lambda expression", span="291-291", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_315 [label="this.matcher.Match(A<string>.Ignored, ''/bar/foo'', A<NancyContext>.Ignored)", span="292-292", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_316 [label="Exit lambda expression", span="292-292", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_318 [label="this.matcher.Match(A<string>.Ignored, ''/foobar'', A<NancyContext>.Ignored)", span="293-293", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_319 [label="Exit lambda expression", span="293-293", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_330 [label="Entry lambda expression", span="302-302", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_331 [label="x.AddGetRoute(''/foo/bar'')", span="302-302", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_332 [label="Exit lambda expression", span="302-302", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_343 [label="Entry lambda expression", span="319-319", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_344 [label="x.AddGetRoute(''/foo/bar'')", span="319-319", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_345 [label="Exit lambda expression", span="319-319", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_357 [label="Entry lambda expression", span="337-340", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_358 [label="x.AddGetRoute(''/foo/bar'')", span="338-338", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_359 [label="x.AddPutRoute(''/foo/bar'')", span="339-339", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_360 [label="Exit lambda expression", span="337-340", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_373 [label="this.moduleBuilder.BuildModule(this.expectedModule, context)", span="363-363", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_369 [label="Entry lambda expression", span="357-357", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_372 [label="Entry lambda expression", span="363-363", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_370 [label="x.AddGetRoute(''/foo/bar'')", span="357-357", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_371 [label="Exit lambda expression", span="357-357", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_374 [label="Exit lambda expression", span="363-363", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_385 [label="Entry lambda expression", span="372-372", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_389 [label="x.AddGetRoute(''/bar/foo'')", span="374-374", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_392 [label="Entry lambda expression", span="375-375", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_386 [label="x.AddGetRoute(''/foo/bar'')", span="372-372", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_387 [label="Exit lambda expression", span="372-372", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_388 [label="Entry lambda expression", span="374-374", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_390 [label="Exit lambda expression", span="374-374", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_393 [label="this.moduleBuilder.BuildModule(A<NancyModule>.Ignored, A<NancyContext>.Ignored)", span="375-375", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_394 [label="Exit lambda expression", span="375-375", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_403 [label="Entry lambda expression", span="391-391", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_404 [label="x.AddGetRoute(''/foo/bar'')", span="391-391", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_405 [label="Exit lambda expression", span="391-391", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_423 [label="Entry lambda expression", span="423-423", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_426 [label="Entry lambda expression", span="425-425", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_430 [label="x.IsMatch(false)", span="426-426", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_424 [label="x.AddGetRoute(''/bar/foo'')", span="423-423", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_425 [label="Exit lambda expression", span="423-423", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_427 [label="this.matcher.Match(''/foo/bar'', ''/bar/foo'', null)", span="425-425", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_428 [label="Exit lambda expression", span="425-425", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_429 [label="Entry lambda expression", span="426-426", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_431 [label="Exit lambda expression", span="426-426", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_441 [label="Entry lambda expression", span="442-442", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_442 [label="x.AddGetRoute(''/bar/foo'')", span="442-442", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_443 [label="Exit lambda expression", span="442-442", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_452 [label="Entry lambda expression", span="459-459", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_453 [label="x.AddGetRoute(''/foo/bar'')", span="459-459", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_454 [label="Exit lambda expression", span="459-459", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_463 [label="Entry lambda expression", span="475-475", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_464 [label="x.AddGetRoute(''/foo/bar'')", span="475-475", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_465 [label="Exit lambda expression", span="475-475", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_475 [label="Entry lambda expression", span="491-491", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_476 [label="x.AddGetRoute(''/foo/bar'')", span="491-491", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_477 [label="Exit lambda expression", span="491-491", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_487 [label="Entry lambda expression", span="508-512", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_488 [label="x.AddGetRoute(''/foo/bar'')", span="510-510", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_489 [label="x.AddPutRoute(''/foo/bar'')", span="511-511", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_490 [label="Exit lambda expression", span="508-512", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_499 [label="Entry lambda expression", span="529-533", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_500 [label="x.AddGetRoute(''/foo/bar'')", span="531-531", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_501 [label="x.AddOptionsRoute(''/foo/bar'')", span="532-532", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_502 [label="Exit lambda expression", span="529-533", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_552 [label="moduleCatalog.GetAllModules(A<NancyContext>.Ignored)", span="599-599", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_556 [label="moduleCatalog.GetModuleByKey(A<string>.Ignored, A<NancyContext>.Ignored)", span="600-600", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_551 [label="Entry lambda expression", span="599-599", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_553 [label="Exit lambda expression", span="599-599", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_557 [label="Exit lambda expression", span="600-600", cluster="lambda expression", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_356 [label="Entry Nancy.Routing.Route.Invoke(Nancy.DynamicDictionary)", span="54-54", cluster="Nancy.Routing.Route.Invoke(Nancy.DynamicDictionary)", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_0 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", span="20-20", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_1 [label="this.moduleBuilder = A.Fake<INancyModuleBuilder>()", span="22-22", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_2 [label="A.CallTo(() => this.moduleBuilder.BuildModule(A<NancyModule>.Ignored, A<NancyContext>.Ignored)).\r\n                ReturnsLazily(r => r.Arguments[0] as NancyModule)", span="23-24", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_3 [label="this.catalog = A.Fake<INancyModuleCatalog>()", span="26-26", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_4 [label="A.CallTo(() => this.catalog.GetModuleByKey(A<string>.Ignored, A<NancyContext>.Ignored)).Returns(expectedModule)", span="27-27", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_5 [label="this.expectedAction = x => HttpStatusCode.OK", span="29-29", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_6 [label="this.expectedModule = new FakeNancyModule(x => x.AddGetRoute(''/foo/bar'', this.expectedAction))", span="30-30", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_7 [label="A.CallTo(() => this.catalog.GetModuleByKey(A<string>.Ignored, A<NancyContext>.Ignored)).ReturnsLazily(() => this.expectedModule)", span="32-32", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_8 [label="this.matcher = A.Fake<IRoutePatternMatcher>()", span="34-34", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_9 [label="Entry Nancy.Testing.BrowserResponseBodyWrapperExtensions.AsXmlDocument(Nancy.Testing.BrowserResponseBodyWrapper)", span="40-40", cluster="Nancy.Testing.BrowserResponseBodyWrapperExtensions.AsXmlDocument(Nancy.Testing.BrowserResponseBodyWrapper)", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_10 [label="var document =\r\n                new XmlDocument()", span="42-43", cluster="Nancy.Testing.BrowserResponseBodyWrapperExtensions.AsXmlDocument(Nancy.Testing.BrowserResponseBodyWrapper)", color=green, community=1, file="BrowserResponseBodyWrapperExtensions.cs"];
m2_11 [label="document.LoadXml(bodyWrapper.AsString())", span="44-44", cluster="Nancy.Testing.BrowserResponseBodyWrapperExtensions.AsXmlDocument(Nancy.Testing.BrowserResponseBodyWrapper)", color=red, community=0, file="BrowserResponseBodyWrapperExtensions.cs"];
m2_12 [label="return document;", span="46-46", cluster="Nancy.Testing.BrowserResponseBodyWrapperExtensions.AsXmlDocument(Nancy.Testing.BrowserResponseBodyWrapper)", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_13 [label="Exit Nancy.Testing.BrowserResponseBodyWrapperExtensions.AsXmlDocument(Nancy.Testing.BrowserResponseBodyWrapper)", span="40-40", cluster="Nancy.Testing.BrowserResponseBodyWrapperExtensions.AsXmlDocument(Nancy.Testing.BrowserResponseBodyWrapper)", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_14 [label="Entry Unk.>", span="", cluster="Unk.>", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_50 [label="Entry Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResult(System.Action<Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator>)", span="13-13", cluster="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResult(System.Action<Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator>)", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_16 [label="Entry Unk.LoadXml", span="", cluster="Unk.LoadXml", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_36 [label="Entry Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModuleConfigurator.AddGetRoute(string, System.Func<object, Nancy.Response>)", span="41-41", cluster="Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModuleConfigurator.AddGetRoute(string, System.Func<object, Nancy.Response>)", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_22 [label="Entry Nancy.Testing.BrowserResponseBodyWrapper.DeserializeJson<TModel>(Nancy.Json.JavaScriptSerializer)", span="70-70", cluster="Nancy.Testing.BrowserResponseBodyWrapper.DeserializeJson<TModel>(Nancy.Json.JavaScriptSerializer)", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_114 [label="Entry Unk.MustHaveHappened", span="", cluster="Unk.MustHaveHappened", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_504 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_a_route_if_matching_and_the_filter_returns_false()", span="544-544", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_a_route_if_matching_and_the_filter_returns_false()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_505 [label="var moduleCatalog = new FakeModuleCatalog()", span="547-547", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_a_route_if_matching_and_the_filter_returns_false()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_506 [label="var routeCache = new RouteCache(moduleCatalog, new FakeModuleKeyGenerator(), A.Fake<INancyContextFactory>())", span="548-548", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_a_route_if_matching_and_the_filter_returns_false()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_507 [label="var specificResolver = new DefaultRouteResolver(moduleCatalog, this.matcher, this.moduleBuilder, routeCache)", span="549-549", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_a_route_if_matching_and_the_filter_returns_false()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_508 [label="var request = new FakeRequest(''GET'', ''/filtered'')", span="550-550", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_a_route_if_matching_and_the_filter_returns_false()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_510 [label="var route = specificResolver.Resolve(context).Item1", span="554-554", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_a_route_if_matching_and_the_filter_returns_false()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_509 [label="var context = new NancyContext { Request = request }", span="551-551", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_a_route_if_matching_and_the_filter_returns_false()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_511 [label="route.ShouldBeOfType(typeof(NotFoundRoute))", span="557-557", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_a_route_if_matching_and_the_filter_returns_false()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_512 [label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_a_route_if_matching_and_the_filter_returns_false()", span="544-544", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_a_route_if_matching_and_the_filter_returns_false()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_87 [label="Entry object.ShouldEqual(object)", span="95-95", cluster="object.ShouldEqual(object)", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_375 [label="Entry Nancy.Routing.INancyModuleBuilder.BuildModule(Nancy.NancyModule, Nancy.NancyContext)", span="13-13", cluster="Nancy.Routing.INancyModuleBuilder.BuildModule(Nancy.NancyModule, Nancy.NancyContext)", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_503 [label="Entry Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator.AddOptionsRoute(string)", span="90-90", cluster="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator.AddOptionsRoute(string)", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_284 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_context()", span="260-260", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_context()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_285 [label="var request = new FakeRequest(''get'', ''/foo/bar'')", span="263-263", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_context()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_286 [label="var context = new NancyContext { Request = request }", span="264-264", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_context()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_287 [label="var resolver = CreateResolver(x => x.AddGetRoute(''/foo/bar''))", span="265-265", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_context()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_288 [label="resolver.Resolve(context)", span="268-268", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_context()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_289 [label="A.CallTo(() => this.matcher.Match(A<string>.Ignored, A<string>.Ignored, context)).MustHaveHappened()", span="271-271", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_context()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_290 [label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_context()", span="260-260", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_context()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_514 [label="Entry RouteCache.cstr", span="", cluster="RouteCache.cstr", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_297 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_for_all_entries_in_route_cache()", span="275-275", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_for_all_entries_in_route_cache()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_298 [label="var request = new FakeRequest(''get'', ''/foo/bar'')", span="278-278", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_for_all_entries_in_route_cache()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_299 [label="var context = new NancyContext { Request = request }", span="279-279", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_for_all_entries_in_route_cache()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_300 [label="var resolver = CreateResolver(x => {\r\n                x.AddGetRoute(''/foo/bar'');\r\n                x.AddGetRoute(''/bar/foo'');\r\n                x.AddGetRoute(''/foobar'');\r\n            })", span="281-285", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_for_all_entries_in_route_cache()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_301 [label="resolver.Resolve(context)", span="288-288", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_for_all_entries_in_route_cache()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_302 [label="A.CallTo(() => this.matcher.Match(A<string>.Ignored, ''/foo/bar'', A<NancyContext>.Ignored)).MustHaveHappened()", span="291-291", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_for_all_entries_in_route_cache()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_303 [label="A.CallTo(() => this.matcher.Match(A<string>.Ignored, ''/bar/foo'', A<NancyContext>.Ignored)).MustHaveHappened()", span="292-292", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_for_all_entries_in_route_cache()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_304 [label="A.CallTo(() => this.matcher.Match(A<string>.Ignored, ''/foobar'', A<NancyContext>.Ignored)).MustHaveHappened()", span="293-293", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_for_all_entries_in_route_cache()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_305 [label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_for_all_entries_in_route_cache()", span="275-275", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_for_all_entries_in_route_cache()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_92 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_action_on_resolved_route()", span="80-80", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_action_on_resolved_route()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_93 [label="var request = new FakeRequest(''get'', ''/foo/bar'')", span="83-83", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_action_on_resolved_route()", color=red, community=0, file="BrowserResponseBodyWrapperExtensions.cs"];
m2_94 [label="var context = new NancyContext { Request = request }", span="84-84", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_action_on_resolved_route()", color=red, community=0, file="BrowserResponseBodyWrapperExtensions.cs"];
m2_95 [label="var resolver =\r\n                CreateResolver(x => x.AddGetRoute(''/foo/bar'', ''module-key''))", span="86-87", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_action_on_resolved_route()", color=red, community=0, file="BrowserResponseBodyWrapperExtensions.cs"];
m2_96 [label="var resolvedRoute = resolver.Resolve(context).Item1", span="90-90", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_action_on_resolved_route()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_97 [label="resolvedRoute.ShouldNotBeOfType<NotFoundRoute>()", span="93-93", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_action_on_resolved_route()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_98 [label="resolvedRoute.ShouldNotBeOfType<MethodNotAllowedRoute>()", span="94-94", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_action_on_resolved_route()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_99 [label="resolvedRoute.Action.ShouldBeSameAs(this.expectedAction)", span="95-95", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_action_on_resolved_route()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_100 [label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_action_on_resolved_route()", span="80-80", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_action_on_resolved_route()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_362 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_module_builder_with_context_and_resolved_module()", span="352-352", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_module_builder_with_context_and_resolved_module()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_363 [label="var request = new FakeRequest(''GET'', ''/foo/bar'')", span="355-355", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_module_builder_with_context_and_resolved_module()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_364 [label="var context = new NancyContext { Request = request }", span="356-356", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_module_builder_with_context_and_resolved_module()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_365 [label="var resolver = CreateResolver(x => x.AddGetRoute(''/foo/bar''))", span="357-357", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_module_builder_with_context_and_resolved_module()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_366 [label="resolver.Resolve(context)", span="360-360", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_module_builder_with_context_and_resolved_module()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_367 [label="A.CallTo(() => this.moduleBuilder.BuildModule(this.expectedModule, context)).MustHaveHappened()", span="363-363", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_module_builder_with_context_and_resolved_module()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_368 [label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_module_builder_with_context_and_resolved_module()", span="352-352", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_module_builder_with_context_and_resolved_module()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_86 [label="Entry object.ShouldNotBeOfType<T>()", span="160-160", cluster="object.ShouldNotBeOfType<T>()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_69 [label="Entry Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCache(System.Action<Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator>)", span="17-17", cluster="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCache(System.Action<Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator>)", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_391 [label="Entry Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModuleConfigurator.AddGetRoute(string)", span="36-36", cluster="Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModuleConfigurator.AddGetRoute(string)", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_395 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_path_set_to_request_uri_when_single_route_could_be_resolved()", span="386-386", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_path_set_to_request_uri_when_single_route_could_be_resolved()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_396 [label="var request = new FakeRequest(''GET'', ''/foo/bar'')", span="389-389", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_path_set_to_request_uri_when_single_route_could_be_resolved()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_397 [label="var context = new NancyContext { Request = request }", span="390-390", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_path_set_to_request_uri_when_single_route_could_be_resolved()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_401 [label="resolvedRoute.Item1.Description.Path.ShouldEqual(request.Path)", span="398-398", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_path_set_to_request_uri_when_single_route_could_be_resolved()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_398 [label="var resolver = CreateResolver(x => x.AddGetRoute(''/foo/bar''))", span="391-391", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_path_set_to_request_uri_when_single_route_could_be_resolved()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_399 [label="var resolvedRoute = resolver.Resolve(context)", span="394-394", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_path_set_to_request_uri_when_single_route_could_be_resolved()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_400 [label="resolvedRoute.ShouldNotBeOfType<NotFoundRoute>()", span="397-397", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_path_set_to_request_uri_when_single_route_could_be_resolved()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_402 [label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_path_set_to_request_uri_when_single_route_could_be_resolved()", span="386-386", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_path_set_to_request_uri_when_single_route_could_be_resolved()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_65 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.CreateResolver(System.Action<Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator>)", span="47-47", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.CreateResolver(System.Action<Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator>)", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_66 [label="var cache = \r\n                new FakeRouteCache(closure)", span="49-50", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.CreateResolver(System.Action<Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator>)", color=red, community=0, file="BrowserResponseBodyWrapperExtensions.cs"];
m2_67 [label="return CreateResolver(cache);", span="52-52", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.CreateResolver(System.Action<Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator>)", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_68 [label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.CreateResolver(System.Action<Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator>)", span="47-47", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.CreateResolver(System.Action<Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator>)", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_406 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.should_return_notfoundroute_with_path_set_to_request_uri_when_route_cache_is_empty()", span="402-402", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.should_return_notfoundroute_with_path_set_to_request_uri_when_route_cache_is_empty()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_407 [label="var request = new FakeRequest(''GET'', ''/foo/bar'')", span="405-405", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.should_return_notfoundroute_with_path_set_to_request_uri_when_route_cache_is_empty()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_408 [label="var context = new NancyContext { Request = request }", span="406-406", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.should_return_notfoundroute_with_path_set_to_request_uri_when_route_cache_is_empty()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_412 [label="resolvedRoute.Description.Path.ShouldEqual(request.Path)", span="414-414", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.should_return_notfoundroute_with_path_set_to_request_uri_when_route_cache_is_empty()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_409 [label="var resolver = CreateResolver(FakeRouteCache.Empty)", span="407-407", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.should_return_notfoundroute_with_path_set_to_request_uri_when_route_cache_is_empty()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_410 [label="var resolvedRoute = resolver.Resolve(context).Item1", span="410-410", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.should_return_notfoundroute_with_path_set_to_request_uri_when_route_cache_is_empty()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_411 [label="resolvedRoute.ShouldBeOfType<NotFoundRoute>()", span="413-413", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.should_return_notfoundroute_with_path_set_to_request_uri_when_route_cache_is_empty()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_413 [label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.should_return_notfoundroute_with_path_set_to_request_uri_when_route_cache_is_empty()", span="402-402", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.should_return_notfoundroute_with_path_set_to_request_uri_when_route_cache_is_empty()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_549 [label="Entry Nancy.Tests.Fakes.FakeNancyModuleWithPreAndPostHooks.FakeNancyModuleWithPreAndPostHooks()", span="4-4", cluster="Nancy.Tests.Fakes.FakeNancyModuleWithPreAndPostHooks.FakeNancyModuleWithPreAndPostHooks()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_74 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_parameters_on_resolved_route_to_parameteres_that_was_matched()", span="61-61", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_parameters_on_resolved_route_to_parameteres_that_was_matched()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_75 [label="var request = new FakeRequest(''get'', ''/foo/bar'')", span="64-64", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_parameters_on_resolved_route_to_parameteres_that_was_matched()", color=red, community=0, file="BrowserResponseBodyWrapperExtensions.cs"];
m2_76 [label="var context = new NancyContext {Request = request}", span="65-65", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_parameters_on_resolved_route_to_parameteres_that_was_matched()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_77 [label="var resolver = \r\n                CreateResolver(x => x.AddGetRoute(''/foo/bar'', ''module-key''))", span="67-68", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_parameters_on_resolved_route_to_parameteres_that_was_matched()", color=red, community=0, file="BrowserResponseBodyWrapperExtensions.cs"];
m2_78 [label="var resolvedRoute = resolver.Resolve(context)", span="71-71", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_parameters_on_resolved_route_to_parameteres_that_was_matched()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_79 [label="resolvedRoute.ShouldNotBeOfType<NotFoundRoute>()", span="74-74", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_parameters_on_resolved_route_to_parameteres_that_was_matched()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_80 [label="resolvedRoute.ShouldNotBeOfType<MethodNotAllowedRoute>()", span="75-75", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_parameters_on_resolved_route_to_parameteres_that_was_matched()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_81 [label="((string)resolvedRoute.Item2[''foo'']).ShouldEqual(''bar'')", span="76-76", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_parameters_on_resolved_route_to_parameteres_that_was_matched()", color=red, community=0, file="BrowserResponseBodyWrapperExtensions.cs"];
m2_82 [label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_parameters_on_resolved_route_to_parameteres_that_was_matched()", span="61-61", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_parameters_on_resolved_route_to_parameteres_that_was_matched()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_132 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_most_parameter_captures_when_multiple_matches_with_parameters_are_available()", span="123-123", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_most_parameter_captures_when_multiple_matches_with_parameters_are_available()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_133 [label="var request = new FakeRequest(''get'', ''/foo/bar/foo'')", span="126-126", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_most_parameter_captures_when_multiple_matches_with_parameters_are_available()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_134 [label="var context = new NancyContext { Request = request }", span="127-127", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_most_parameter_captures_when_multiple_matches_with_parameters_are_available()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_136 [label="A.CallTo(() => this.matcher.Match(request.Path, ''/foo/{bar}'', null)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(true).AddParameter(''bar'', ''fake value'')))", span="134-135", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_most_parameter_captures_when_multiple_matches_with_parameters_are_available()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_137 [label="A.CallTo(() => this.matcher.Match(request.Path, ''/foo/{bar}/{foo}'', A<NancyContext>.Ignored)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(true)\r\n                    .AddParameter(''foo'', ''fake value'')\r\n                    .AddParameter(''bar'', ''fake value 2'')))", span="137-140", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_most_parameter_captures_when_multiple_matches_with_parameters_are_available()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_135 [label="var resolver = CreateResolver(x => {\r\n                x.AddGetRoute(''/foo/{bar}/{foo}'', ''module-key-two-parameters'');\r\n                x.AddGetRoute(''/foo/{bar}'', ''module-key-one-parameter'');\r\n            })", span="129-132", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_most_parameter_captures_when_multiple_matches_with_parameters_are_available()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_138 [label="resolver.Resolve(context)", span="143-143", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_most_parameter_captures_when_multiple_matches_with_parameters_are_available()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_139 [label="A.CallTo(() => this.catalog.GetModuleByKey(''module-key-two-parameters'', context)).MustHaveHappened()", span="146-146", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_most_parameter_captures_when_multiple_matches_with_parameters_are_available()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_140 [label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_most_parameter_captures_when_multiple_matches_with_parameters_are_available()", span="123-123", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_most_parameter_captures_when_multiple_matches_with_parameters_are_available()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_320 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_ignore_method_casing_when_resolving_routes()", span="297-297", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_ignore_method_casing_when_resolving_routes()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_321 [label="var request = new FakeRequest(''GeT'', ''/foo/bar'')", span="300-300", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_ignore_method_casing_when_resolving_routes()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_322 [label="var context = new NancyContext { Request = request }", span="301-301", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_ignore_method_casing_when_resolving_routes()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_323 [label="var resolver = CreateResolver(x => x.AddGetRoute(''/foo/bar''))", span="302-302", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_ignore_method_casing_when_resolving_routes()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_324 [label="var resolvedRoute = resolver.Resolve(context)", span="305-305", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_ignore_method_casing_when_resolving_routes()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_325 [label="resolvedRoute.ShouldNotBeNull()", span="308-308", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_ignore_method_casing_when_resolving_routes()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_326 [label="resolvedRoute.ShouldNotBeOfType<NotFoundRoute>()", span="309-309", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_ignore_method_casing_when_resolving_routes()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_327 [label="resolvedRoute.ShouldNotBeOfType<MethodNotAllowedRoute>()", span="310-310", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_ignore_method_casing_when_resolving_routes()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_328 [label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_ignore_method_casing_when_resolving_routes()", span="297-297", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_ignore_method_casing_when_resolving_routes()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_491 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_user_defined_route_for_route_with_custom_options_defined()", span="524-524", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_user_defined_route_for_route_with_custom_options_defined()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_492 [label="var request = new FakeRequest(''OPTIONS'', ''/foo/bar'')", span="527-527", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_user_defined_route_for_route_with_custom_options_defined()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_493 [label="var context = new NancyContext {Request = request}", span="528-528", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_user_defined_route_for_route_with_custom_options_defined()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_494 [label="var resolver = CreateResolver(x =>\r\n            {\r\n                x.AddGetRoute(''/foo/bar'');\r\n                x.AddOptionsRoute(''/foo/bar'');\r\n            })", span="529-533", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_user_defined_route_for_route_with_custom_options_defined()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_495 [label="var route = resolver.Resolve(context).Item1", span="536-536", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_user_defined_route_for_route_with_custom_options_defined()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_496 [label="route.ShouldNotBeNull()", span="539-539", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_user_defined_route_for_route_with_custom_options_defined()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_497 [label="route.ShouldNotBeOfType<OptionsRoute>()", span="540-540", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_user_defined_route_for_route_with_custom_options_defined()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_498 [label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_user_defined_route_for_route_with_custom_options_defined()", span="524-524", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_user_defined_route_for_route_with_custom_options_defined()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_73 [label="Entry Nancy.Routing.DefaultRouteResolver.DefaultRouteResolver(Nancy.INancyModuleCatalog, Nancy.Routing.IRoutePatternMatcher, Nancy.Routing.INancyModuleBuilder, Nancy.Routing.IRouteCache)", span="26-26", cluster="Nancy.Routing.DefaultRouteResolver.DefaultRouteResolver(Nancy.INancyModuleCatalog, Nancy.Routing.IRoutePatternMatcher, Nancy.Routing.INancyModuleBuilder, Nancy.Routing.IRouteCache)", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_513 [label="Entry Nancy.Tests.Fakes.FakeModuleCatalog.FakeModuleCatalog()", span="13-13", cluster="Nancy.Tests.Fakes.FakeModuleCatalog.FakeModuleCatalog()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_517 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_a_route_if_matching_and_the_filter_returns_true()", span="561-561", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_a_route_if_matching_and_the_filter_returns_true()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_518 [label="var moduleCatalog = new FakeModuleCatalog()", span="564-564", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_a_route_if_matching_and_the_filter_returns_true()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_519 [label="var routeCache = new RouteCache(moduleCatalog, new FakeModuleKeyGenerator(), A.Fake<INancyContextFactory>())", span="565-565", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_a_route_if_matching_and_the_filter_returns_true()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_520 [label="var specificResolver = new DefaultRouteResolver(moduleCatalog, this.matcher, this.moduleBuilder, routeCache)", span="566-566", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_a_route_if_matching_and_the_filter_returns_true()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_521 [label="var request = new FakeRequest(''GET'', ''/notfiltered'')", span="567-567", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_a_route_if_matching_and_the_filter_returns_true()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_523 [label="var route = specificResolver.Resolve(context).Item1", span="571-571", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_a_route_if_matching_and_the_filter_returns_true()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_522 [label="var context = new NancyContext { Request = request }", span="568-568", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_a_route_if_matching_and_the_filter_returns_true()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_524 [label="route.ShouldBeOfType(typeof(Route))", span="574-574", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_a_route_if_matching_and_the_filter_returns_true()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_525 [label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_a_route_if_matching_and_the_filter_returns_true()", span="561-561", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_a_route_if_matching_and_the_filter_returns_true()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_554 [label="Entry Unk.GetAllModules", span="", cluster="Unk.GetAllModules", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_56 [label="Entry Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator.IsMatch(bool)", span="49-49", cluster="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator.IsMatch(bool)", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_57 [label="Entry Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator.AddParameter(string, object)", span="55-55", cluster="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator.AddParameter(string, object)", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_148 [label="Entry Nancy.Routing.IRoutePatternMatcher.Match(string, string, Nancy.NancyContext)", span="15-15", cluster="Nancy.Routing.IRoutePatternMatcher.Match(string, string, Nancy.NancyContext)", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_515 [label="Entry Nancy.Tests.Fakes.FakeModuleKeyGenerator.FakeModuleKeyGenerator()", span="4-4", cluster="Nancy.Tests.Fakes.FakeModuleKeyGenerator.FakeModuleKeyGenerator()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_83 [label="Entry Nancy.Tests.Fakes.FakeRequest.FakeRequest(string, string)", span="8-8", cluster="Nancy.Tests.Fakes.FakeRequest.FakeRequest(string, string)", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_131 [label="Entry Nancy.INancyModuleCatalog.GetModuleByKey(string, Nancy.NancyContext)", span="22-22", cluster="Nancy.INancyModuleCatalog.GetModuleByKey(string, Nancy.NancyContext)", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_342 [label="Entry object.ShouldBeOfType<T>()", span="150-150", cluster="object.ShouldBeOfType<T>()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_536 [label="Entry bool.ShouldBeTrue()", span="85-85", cluster="bool.ShouldBeTrue()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_414 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_notfoundroute_with_path_set_to_request_uri_when_route_could_not_be_resolved()", span="418-418", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_notfoundroute_with_path_set_to_request_uri_when_route_could_not_be_resolved()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_415 [label="var request = new FakeRequest(''GET'', ''/foo/bar'')", span="421-421", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_notfoundroute_with_path_set_to_request_uri_when_route_could_not_be_resolved()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_416 [label="var context = new NancyContext { Request = request }", span="422-422", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_notfoundroute_with_path_set_to_request_uri_when_route_could_not_be_resolved()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_421 [label="resolvedRoute.Description.Path.ShouldEqual(request.Path)", span="433-433", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_notfoundroute_with_path_set_to_request_uri_when_route_could_not_be_resolved()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_417 [label="var resolver = CreateResolver(x => x.AddGetRoute(''/bar/foo''))", span="423-423", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_notfoundroute_with_path_set_to_request_uri_when_route_could_not_be_resolved()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_419 [label="var resolvedRoute = resolver.Resolve(context).Item1", span="429-429", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_notfoundroute_with_path_set_to_request_uri_when_route_could_not_be_resolved()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_418 [label="A.CallTo(() => this.matcher.Match(''/foo/bar'', ''/bar/foo'', null)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(false)))", span="425-426", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_notfoundroute_with_path_set_to_request_uri_when_route_could_not_be_resolved()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_420 [label="resolvedRoute.ShouldBeOfType<NotFoundRoute>()", span="432-432", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_notfoundroute_with_path_set_to_request_uri_when_route_could_not_be_resolved()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_422 [label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_notfoundroute_with_path_set_to_request_uri_when_route_could_not_be_resolved()", span="418-418", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_notfoundroute_with_path_set_to_request_uri_when_route_could_not_be_resolved()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_84 [label="Entry Nancy.NancyContext.NancyContext()", span="19-19", cluster="Nancy.NancyContext.NancyContext()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_432 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_head_request_when_route_is_defined_for_get()", span="437-437", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_head_request_when_route_is_defined_for_get()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_433 [label="var request = new FakeRequest(''HEAD'', ''/foo/bar'')", span="440-440", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_head_request_when_route_is_defined_for_get()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_434 [label="var context = new NancyContext { Request = request }", span="441-441", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_head_request_when_route_is_defined_for_get()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_435 [label="var resolver = CreateResolver(x => x.AddGetRoute(''/bar/foo''))", span="442-442", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_head_request_when_route_is_defined_for_get()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_436 [label="var resolvedRoute = resolver.Resolve(context)", span="445-445", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_head_request_when_route_is_defined_for_get()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_437 [label="resolvedRoute.ShouldNotBeNull()", span="448-448", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_head_request_when_route_is_defined_for_get()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_438 [label="resolvedRoute.ShouldNotBeOfType<NotFoundRoute>()", span="449-449", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_head_request_when_route_is_defined_for_get()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_439 [label="resolvedRoute.ShouldNotBeOfType<MethodNotAllowedRoute>()", span="450-450", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_head_request_when_route_is_defined_for_get()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_440 [label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_head_request_when_route_is_defined_for_get()", span="437-437", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_head_request_when_route_is_defined_for_get()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_376 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_module_returned_by_module_builder()", span="367-367", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_module_returned_by_module_builder()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_377 [label="var request = new FakeRequest(''GET'', ''/foo/bar'')", span="370-370", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_module_returned_by_module_builder()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_378 [label="var context = new NancyContext { Request = request }", span="371-371", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_module_returned_by_module_builder()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_379 [label="var resolver = CreateResolver(x => x.AddGetRoute(''/foo/bar''))", span="372-372", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_module_returned_by_module_builder()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_382 [label="var route = resolver.Resolve(context)", span="379-379", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_module_returned_by_module_builder()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_380 [label="var moduleReturnedByBuilder = new FakeNancyModule(x => x.AddGetRoute(''/bar/foo''))", span="374-374", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_module_returned_by_module_builder()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_381 [label="A.CallTo(() => this.moduleBuilder.BuildModule(A<NancyModule>.Ignored, A<NancyContext>.Ignored)).Returns(\r\n                moduleReturnedByBuilder)", span="375-376", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_module_returned_by_module_builder()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_383 [label="route.Item1.Description.Path.ShouldEqual(''/bar/foo'')", span="382-382", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_module_returned_by_module_builder()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_384 [label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_module_returned_by_module_builder()", span="367-367", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_module_returned_by_module_builder()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_516 [label="Entry object.ShouldBeOfType(System.Type)", span="155-155", cluster="object.ShouldBeOfType(System.Type)", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_355 [label="Entry Nancy.DynamicDictionary.DynamicDictionary()", span="10-10", cluster="Nancy.DynamicDictionary.DynamicDictionary()", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_361 [label="Entry Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator.AddPutRoute(string)", span="83-83", cluster="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator.AddPutRoute(string)", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_558 [label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", span="", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_559 [label="?", span="", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_560 [label=request, span="", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_561 [label=context, span="", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_562 [label=request, span="", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_563 [label=context, span="", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_564 [label=request, span="", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_565 [label=context, span="", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_566 [label=request, span="", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_567 [label=context, span="", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_568 [label=request, span="", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_569 [label=context, span="", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_570 [label=request, span="", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_571 [label=context, span="", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_572 [label=context, span="", file="BrowserResponseBodyWrapperExtensions.cs"];
m2_573 [label=moduleCatalog, span="", file="BrowserResponseBodyWrapperExtensions.cs"];
m3_21 [label="Entry Nancy.Validation.IModelValidator.Validate(object, Nancy.NancyContext)", span="25-25", cluster="Nancy.Validation.IModelValidator.Validate(object, Nancy.NancyContext)", file="CompositeValidator.cs"];
m3_31 [label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="CompositeValidator.cs"];
m3_17 [label="Entry ModelValidationResult.cstr", span="", cluster="ModelValidationResult.cstr", file="CompositeValidator.cs"];
m3_13 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="CompositeValidator.cs"];
m3_16 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="CompositeValidator.cs"];
m3_33 [label="Entry ModelValidationDescriptor.cstr", span="", cluster="ModelValidationDescriptor.cstr", file="CompositeValidator.cs"];
m3_14 [label="Entry Unk.SelectMany", span="", cluster="Unk.SelectMany", file="CompositeValidator.cs"];
m3_32 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="CompositeValidator.cs"];
m3_0 [label="Entry Nancy.Validation.CompositeValidator.CompositeValidator(System.Collections.Generic.IEnumerable<Nancy.Validation.IModelValidator>, System.Type)", span="18-18", cluster="Nancy.Validation.CompositeValidator.CompositeValidator(System.Collections.Generic.IEnumerable<Nancy.Validation.IModelValidator>, System.Type)", file="CompositeValidator.cs"];
m3_1 [label="var modelValidators = \r\n                validators.ToArray()", span="20-21", cluster="Nancy.Validation.CompositeValidator.CompositeValidator(System.Collections.Generic.IEnumerable<Nancy.Validation.IModelValidator>, System.Type)", file="CompositeValidator.cs"];
m3_2 [label="this.ModelType = modelType", span="23-23", cluster="Nancy.Validation.CompositeValidator.CompositeValidator(System.Collections.Generic.IEnumerable<Nancy.Validation.IModelValidator>, System.Type)", file="CompositeValidator.cs"];
m3_3 [label="this.Description = CreateCompositeDescription(modelValidators, modelType)", span="24-24", cluster="Nancy.Validation.CompositeValidator.CompositeValidator(System.Collections.Generic.IEnumerable<Nancy.Validation.IModelValidator>, System.Type)", file="CompositeValidator.cs"];
m3_4 [label="this.validators = modelValidators", span="25-25", cluster="Nancy.Validation.CompositeValidator.CompositeValidator(System.Collections.Generic.IEnumerable<Nancy.Validation.IModelValidator>, System.Type)", file="CompositeValidator.cs"];
m3_5 [label="Exit Nancy.Validation.CompositeValidator.CompositeValidator(System.Collections.Generic.IEnumerable<Nancy.Validation.IModelValidator>, System.Type)", span="18-18", cluster="Nancy.Validation.CompositeValidator.CompositeValidator(System.Collections.Generic.IEnumerable<Nancy.Validation.IModelValidator>, System.Type)", file="CompositeValidator.cs"];
m3_6 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="CompositeValidator.cs"];
m3_15 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="CompositeValidator.cs"];
m3_40 [label="Entry lambda expression", span="61-61", cluster="lambda expression", file="CompositeValidator.cs"];
m3_19 [label="v.Validate(instance, context)", span="47-47", cluster="lambda expression", file="CompositeValidator.cs"];
m3_18 [label="Entry lambda expression", span="47-47", cluster="lambda expression", file="CompositeValidator.cs"];
m3_22 [label="Entry lambda expression", span="48-48", cluster="lambda expression", file="CompositeValidator.cs"];
m3_25 [label="Entry lambda expression", span="49-49", cluster="lambda expression", file="CompositeValidator.cs"];
m3_20 [label="Exit lambda expression", span="47-47", cluster="lambda expression", file="CompositeValidator.cs"];
m3_23 [label="r != null", span="48-48", cluster="lambda expression", file="CompositeValidator.cs"];
m3_24 [label="Exit lambda expression", span="48-48", cluster="lambda expression", file="CompositeValidator.cs"];
m3_26 [label="r.Errors", span="49-49", cluster="lambda expression", file="CompositeValidator.cs"];
m3_27 [label="Exit lambda expression", span="49-49", cluster="lambda expression", file="CompositeValidator.cs"];
m3_34 [label="Entry lambda expression", span="60-60", cluster="lambda expression", file="CompositeValidator.cs"];
m3_37 [label="Entry lambda expression", span="61-61", cluster="lambda expression", file="CompositeValidator.cs"];
m3_35 [label="v.Description.Rules", span="60-60", cluster="lambda expression", file="CompositeValidator.cs"];
m3_36 [label="Exit lambda expression", span="60-60", cluster="lambda expression", file="CompositeValidator.cs"];
m3_38 [label="x.Key", span="61-61", cluster="lambda expression", file="CompositeValidator.cs"];
m3_39 [label="Exit lambda expression", span="61-61", cluster="lambda expression", file="CompositeValidator.cs"];
m3_41 [label="x.Value", span="61-61", cluster="lambda expression", file="CompositeValidator.cs"];
m3_42 [label="Exit lambda expression", span="61-61", cluster="lambda expression", file="CompositeValidator.cs"];
m3_12 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="CompositeValidator.cs"];
m3_7 [label="Entry Nancy.Validation.CompositeValidator.CreateCompositeDescription(System.Collections.Generic.IEnumerable<Nancy.Validation.IModelValidator>, System.Type)", span="57-57", cluster="Nancy.Validation.CompositeValidator.CreateCompositeDescription(System.Collections.Generic.IEnumerable<Nancy.Validation.IModelValidator>, System.Type)", file="CompositeValidator.cs"];
m3_28 [label="var rules = validators\r\n                .SelectMany(v => v.Description.Rules)\r\n                .ToDictionary(x => x.Key, x => x.Value)", span="59-61", cluster="Nancy.Validation.CompositeValidator.CreateCompositeDescription(System.Collections.Generic.IEnumerable<Nancy.Validation.IModelValidator>, System.Type)", file="CompositeValidator.cs"];
m3_29 [label="return new ModelValidationDescriptor(rules, modelType);", span="63-63", cluster="Nancy.Validation.CompositeValidator.CreateCompositeDescription(System.Collections.Generic.IEnumerable<Nancy.Validation.IModelValidator>, System.Type)", file="CompositeValidator.cs"];
m3_30 [label="Exit Nancy.Validation.CompositeValidator.CreateCompositeDescription(System.Collections.Generic.IEnumerable<Nancy.Validation.IModelValidator>, System.Type)", span="57-57", cluster="Nancy.Validation.CompositeValidator.CreateCompositeDescription(System.Collections.Generic.IEnumerable<Nancy.Validation.IModelValidator>, System.Type)", file="CompositeValidator.cs"];
m3_8 [label="Entry Nancy.Validation.CompositeValidator.Validate(object, Nancy.NancyContext)", span="44-44", cluster="Nancy.Validation.CompositeValidator.Validate(object, Nancy.NancyContext)", file="CompositeValidator.cs"];
m3_9 [label="var errors = validators\r\n                .Select(v => v.Validate(instance, context))\r\n                .Where(r => r != null)\r\n                .SelectMany(r => r.Errors)\r\n                .ToArray()", span="46-50", cluster="Nancy.Validation.CompositeValidator.Validate(object, Nancy.NancyContext)", color=red, community=0, file="CompositeValidator.cs"];
m3_10 [label="return (!errors.Any()) ?\r\n                ModelValidationResult.Valid :\r\n                new ModelValidationResult(errors);", span="52-54", cluster="Nancy.Validation.CompositeValidator.Validate(object, Nancy.NancyContext)", file="CompositeValidator.cs"];
m3_11 [label="Exit Nancy.Validation.CompositeValidator.Validate(object, Nancy.NancyContext)", span="44-44", cluster="Nancy.Validation.CompositeValidator.Validate(object, Nancy.NancyContext)", file="CompositeValidator.cs"];
m3_43 [label="Nancy.Validation.CompositeValidator", span="", file="CompositeValidator.cs"];
m3_44 [label=object, span="", file="CompositeValidator.cs"];
m3_45 [label="Nancy.NancyContext", span="", file="CompositeValidator.cs"];
m4_469 [label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.NullProcessor.CanProcess(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", span="697-697", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.NullProcessor.CanProcess(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", file="ContentNegotiationFixture.cs"];
m4_470 [label="return new ProcessorMatch\r\n                {\r\n                    RequestedContentTypeResult = MatchResult.ExactMatch,\r\n                    ModelResult = MatchResult.ExactMatch\r\n                };", span="699-703", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.NullProcessor.CanProcess(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", file="ContentNegotiationFixture.cs"];
m4_471 [label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.NullProcessor.CanProcess(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", span="697-697", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.NullProcessor.CanProcess(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", file="ContentNegotiationFixture.cs"];
m4_303 [label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_status_code_to_response_when_set_as_integer()", span="449-449", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_status_code_to_response_when_set_as_integer()", file="ContentNegotiationFixture.cs"];
m4_304 [label="var browser = new Browser(with =>\r\n            {\r\n                with.ResponseProcessor<TestProcessor>();\r\n\r\n                with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithStatusCode(507);\r\n                    }));\r\n                }));\r\n            })", span="452-463", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_status_code_to_response_when_set_as_integer()", file="ContentNegotiationFixture.cs"];
m4_305 [label="var response = browser.Get(''/'', with =>\r\n            {\r\n                with.Accept(''test/test'', 0.9m);\r\n            })", span="466-469", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_status_code_to_response_when_set_as_integer()", file="ContentNegotiationFixture.cs"];
m4_306 [label="Assert.Equal(HttpStatusCode.InsufficientStorage, response.StatusCode)", span="472-472", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_status_code_to_response_when_set_as_integer()", file="ContentNegotiationFixture.cs"];
m4_307 [label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_status_code_to_response_when_set_as_integer()", span="449-449", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_status_code_to_response_when_set_as_integer()", file="ContentNegotiationFixture.cs"];
m4_166 [label="Entry string.Contains(string)", span="0-0", cluster="string.Contains(string)", file="ContentNegotiationFixture.cs"];
m4_349 [label="Entry Unk.Same", span="", cluster="Unk.Same", file="ContentNegotiationFixture.cs"];
m4_8 [label="Entry Nancy.Testing.Browser.Get(string, System.Action<Nancy.Testing.BrowserContext>)", span="70-70", cluster="Nancy.Testing.Browser.Get(string, System.Action<Nancy.Testing.BrowserContext>)", file="ContentNegotiationFixture.cs"];
m4_397 [label="Entry string.StartsWith(string)", span="0-0", cluster="string.StartsWith(string)", file="ContentNegotiationFixture.cs"];
m4_488 [label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.NegotiationModule.GetModel()", span="754-754", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.NegotiationModule.GetModel()", file="ContentNegotiationFixture.cs"];
m4_494 [label="yield return new Foo();", span="756-756", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.NegotiationModule.GetModel()", file="ContentNegotiationFixture.cs"];
m4_495 [label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.NegotiationModule.GetModel()", span="754-754", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.NegotiationModule.GetModel()", file="ContentNegotiationFixture.cs"];
m4_9 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="ContentNegotiationFixture.cs"];
m4_95 [label="Entry Nancy.Responses.Negotiation.NegotiationContext.NegotiationContext()", span="15-15", cluster="Nancy.Responses.Negotiation.NegotiationContext.NegotiationContext()", file="ContentNegotiationFixture.cs"];
m4_97 [label="Entry Nancy.Responses.Negotiation.Negotiator.WithHeader(string, string)", span="45-45", cluster="Nancy.Responses.Negotiation.Negotiator.WithHeader(string, string)", file="ContentNegotiationFixture.cs"];
m4_282 [label="Entry Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.ResponseProcessors(params System.Type[])", span="1226-1226", cluster="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.ResponseProcessors(params System.Type[])", file="ContentNegotiationFixture.cs"];
m4_224 [label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.CreateNegotiatedResponse(System.Action<Nancy.Responses.Negotiation.Negotiator>)", span="639-639", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.CreateNegotiatedResponse(System.Action<Nancy.Responses.Negotiation.Negotiator>)", file="ContentNegotiationFixture.cs"];
m4_451 [label="return (parameters, module) =>\r\n                {\r\n                    var negotiator = new Negotiator(module.Context);\r\n\r\n                    if (action != null)\r\n                    {\r\n                        action.Invoke(negotiator);\r\n                    }\r\n\r\n                    return negotiator;\r\n                };", span="641-651", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.CreateNegotiatedResponse(System.Action<Nancy.Responses.Negotiation.Negotiator>)", file="ContentNegotiationFixture.cs"];
m4_452 [label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.CreateNegotiatedResponse(System.Action<Nancy.Responses.Negotiation.Negotiator>)", span="639-639", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.CreateNegotiatedResponse(System.Action<Nancy.Responses.Negotiation.Negotiator>)", file="ContentNegotiationFixture.cs"];
m4_460 [label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.TestProcessor.CanProcess(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", span="672-672", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.TestProcessor.CanProcess(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", file="ContentNegotiationFixture.cs"];
m4_461 [label="return new ProcessorMatch\r\n                {\r\n                    RequestedContentTypeResult = MatchResult.DontCare,\r\n                    ModelResult = MatchResult.DontCare\r\n                };", span="674-678", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.TestProcessor.CanProcess(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", file="ContentNegotiationFixture.cs"];
m4_462 [label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.TestProcessor.CanProcess(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", span="672-672", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.TestProcessor.CanProcess(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", file="ContentNegotiationFixture.cs"];
m4_160 [label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_boost_html_priority_if_set_to_the_same_priority_as_others()", span="245-245", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_boost_html_priority_if_set_to_the_same_priority_as_others()", file="ContentNegotiationFixture.cs"];
m4_161 [label="var browser = new Browser(with =>\r\n            {\r\n                with.ResponseProcessor<TestProcessor>();\r\n\r\n                with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', (parameters, module) =>\r\n                    {\r\n                        var context =\r\n                            new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n                        var negotiator =\r\n                            new Negotiator(context);\r\n\r\n                        negotiator.WithAllowedMediaRange(''application/xml'');\r\n                        negotiator.WithAllowedMediaRange(''text/html'');\r\n\r\n                        return negotiator;\r\n                    });\r\n                }));\r\n            })", span="248-268", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_boost_html_priority_if_set_to_the_same_priority_as_others()", file="ContentNegotiationFixture.cs"];
m4_162 [label="var response = browser.Get(''/'', with =>\r\n            {\r\n                with.Header(''User-Agent'', ''Mozilla/5.0 (Windows; U; Windows NT 5.1; ru-RU) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4'');\r\n                with.Accept(''application/xml'', 0.9m);\r\n                with.Accept(''text/html'', 0.9m);\r\n            })", span="271-276", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_boost_html_priority_if_set_to_the_same_priority_as_others()", file="ContentNegotiationFixture.cs"];
m4_163 [label="Assert.Equal(HttpStatusCode.OK, response.StatusCode)", span="279-279", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_boost_html_priority_if_set_to_the_same_priority_as_others()", file="ContentNegotiationFixture.cs"];
m4_164 [label="Assert.True(response.Body.AsString().Contains(''text/html''), ''Media type mismatch'')", span="280-280", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_boost_html_priority_if_set_to_the_same_priority_as_others()", file="ContentNegotiationFixture.cs"];
m4_165 [label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_boost_html_priority_if_set_to_the_same_priority_as_others()", span="245-245", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_boost_html_priority_if_set_to_the_same_priority_as_others()", file="ContentNegotiationFixture.cs"];
m4_189 [label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_override_with_extension()", span="284-284", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_override_with_extension()", file="ContentNegotiationFixture.cs"];
m4_190 [label="var browser = new Browser(with =>\r\n            {\r\n                with.ResponseProcessor<TestProcessor>();\r\n\r\n                with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/test'', (parameters, module) =>\r\n                    {\r\n                        var context =\r\n                            new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n                        var negotiator =\r\n                            new Negotiator(context);\r\n\r\n                        return negotiator;\r\n                    });\r\n                }));\r\n            })", span="287-304", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_override_with_extension()", file="ContentNegotiationFixture.cs"];
m4_191 [label="var response = browser.Get(''/test.foo'', with =>\r\n            {\r\n                with.Header(''User-Agent'', ''Mozilla/5.0 (Windows; U; Windows NT 5.1; ru-RU) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4'');\r\n                with.Accept(''application/xml'', 0.9m);\r\n                with.Accept(''text/html'', 0.9m);\r\n            })", span="307-312", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_override_with_extension()", file="ContentNegotiationFixture.cs"];
m4_192 [label="Assert.Equal(HttpStatusCode.OK, response.StatusCode)", span="315-315", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_override_with_extension()", file="ContentNegotiationFixture.cs"];
m4_193 [label="Assert.True(response.Body.AsString().Contains(''foo/bar''), ''Media type mismatch'')", span="316-316", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_override_with_extension()", file="ContentNegotiationFixture.cs"];
m4_194 [label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_override_with_extension()", span="284-284", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_override_with_extension()", file="ContentNegotiationFixture.cs"];
m4_289 [label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_link_header_for_matching_response_processors()", span="426-426", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_link_header_for_matching_response_processors()", file="ContentNegotiationFixture.cs"];
m4_290 [label="var browser = new Browser(with =>\r\n            {\r\n                with.ResponseProcessors(typeof(XmlProcessor), typeof(JsonProcessor), typeof(TestProcessor));\r\n\r\n                with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse());\r\n                }));\r\n            })", span="429-437", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_link_header_for_matching_response_processors()", file="ContentNegotiationFixture.cs"];
m4_291 [label="var response = browser.Get(''/'')", span="440-440", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_link_header_for_matching_response_processors()", file="ContentNegotiationFixture.cs"];
m4_292 [label="Assert.True(response.Headers[''Link''].Contains(@''</.foo>; rel=''''foo/bar''''''))", span="443-443", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_link_header_for_matching_response_processors()", file="ContentNegotiationFixture.cs"];
m4_293 [label="Assert.True(response.Headers[''Link''].Contains(@''</.json>; rel=''''application/json''''''))", span="444-444", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_link_header_for_matching_response_processors()", file="ContentNegotiationFixture.cs"];
m4_294 [label="Assert.True(response.Headers[''Link''].Contains(@''</.xml>; rel=''''application/xml''''''))", span="445-445", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_link_header_for_matching_response_processors()", file="ContentNegotiationFixture.cs"];
m4_295 [label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_link_header_for_matching_response_processors()", span="426-426", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_link_header_for_matching_response_processors()", file="ContentNegotiationFixture.cs"];
m4_231 [label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_that_contains_default_model_when_no_media_range_specific_model_was_declared()", span="347-347", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_that_contains_default_model_when_no_media_range_specific_model_was_declared()", file="ContentNegotiationFixture.cs"];
m4_232 [label="var browser = new Browser(with =>\r\n            {\r\n                with.ResponseProcessor<ModelProcessor>();\r\n\r\n                with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithModel(''the model'');\r\n                        config.WithAllowedMediaRange(''test/test'');\r\n                    }));\r\n                }));\r\n            })", span="350-362", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_that_contains_default_model_when_no_media_range_specific_model_was_declared()", file="ContentNegotiationFixture.cs"];
m4_233 [label="var response = browser.Get(''/'', with =>\r\n            {\r\n                with.Accept(''test/test'', 0.9m);\r\n            })", span="365-368", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_that_contains_default_model_when_no_media_range_specific_model_was_declared()", file="ContentNegotiationFixture.cs"];
m4_234 [label="Assert.Equal(''the model'', response.Body.AsString())", span="371-371", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_that_contains_default_model_when_no_media_range_specific_model_was_declared()", file="ContentNegotiationFixture.cs"];
m4_235 [label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_that_contains_default_model_when_no_media_range_specific_model_was_declared()", span="347-347", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_that_contains_default_model_when_no_media_range_specific_model_was_declared()", file="ContentNegotiationFixture.cs"];
m4_384 [label="Entry Nancy.Responses.Negotiation.Negotiator.WithView(string)", span="148-148", cluster="Nancy.Responses.Negotiation.Negotiator.WithView(string)", file="ContentNegotiationFixture.cs"];
m4_391 [label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_use_next_processor_if_processor_returns_null()", span="557-557", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_use_next_processor_if_processor_returns_null()", file="ContentNegotiationFixture.cs"];
m4_392 [label="var browser = new Browser(with =>\r\n                {\r\n                with.ResponseProcessors(typeof(NullProcessor), typeof(TestProcessor));\r\n\r\n                with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/test'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithAllowedMediaRange(''application/xml'');\r\n                    }));\r\n                }));\r\n            })", span="560-571", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_use_next_processor_if_processor_returns_null()", file="ContentNegotiationFixture.cs"];
m4_393 [label="var response = browser.Get(''/test'', with =>\r\n            {\r\n                with.Accept(''application/xml'', 0.9m);\r\n            })", span="574-577", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_use_next_processor_if_processor_returns_null()", file="ContentNegotiationFixture.cs"];
m4_394 [label="var bodyResult = response.Body.AsString()", span="580-580", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_use_next_processor_if_processor_returns_null()", file="ContentNegotiationFixture.cs"];
m4_395 [label="Assert.True(bodyResult.StartsWith(''application/xml''), string.Format(''Body should have started with 'application/xml' but was actually '{0}''', bodyResult))", span="581-581", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_use_next_processor_if_processor_returns_null()", file="ContentNegotiationFixture.cs"];
m4_396 [label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_use_next_processor_if_processor_returns_null()", span="557-557", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_use_next_processor_if_processor_returns_null()", file="ContentNegotiationFixture.cs"];
m4_398 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="ContentNegotiationFixture.cs"];
m4_472 [label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.NullProcessor.Process(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", span="706-706", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.NullProcessor.Process(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", file="ContentNegotiationFixture.cs"];
m4_473 [label="return null;", span="708-708", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.NullProcessor.Process(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", file="ContentNegotiationFixture.cs"];
m4_474 [label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.NullProcessor.Process(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", span="706-706", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.NullProcessor.Process(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", file="ContentNegotiationFixture.cs"];
m4_481 [label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.NegotiationModule.NegotiationModule()", span="739-739", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.NegotiationModule.NegotiationModule()", file="ContentNegotiationFixture.cs"];
m4_482 [label="Get[''/invalid-view-name''] = _ =>\r\n                {\r\n                    return this.GetModel();\r\n                }", span="741-744", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.NegotiationModule.NegotiationModule()", file="ContentNegotiationFixture.cs"];
m4_483 [label="Get[''/negotiate''] = parameters =>\r\n                {\r\n                    return Negotiate\r\n                        .WithMediaRangeResponse(''text/html'', Response.AsRedirect(''/''))\r\n                        .WithMediaRangeModel(''application/json'', new { Name = ''Nancy'' });\r\n                }", span="746-751", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.NegotiationModule.NegotiationModule()", file="ContentNegotiationFixture.cs"];
m4_484 [label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.NegotiationModule.NegotiationModule()", span="739-739", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.NegotiationModule.NegotiationModule()", file="ContentNegotiationFixture.cs"];
m4_20 [label="Entry Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.Module(Nancy.INancyModule)", span="818-818", cluster="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.Module(Nancy.INancyModule)", file="ContentNegotiationFixture.cs"];
m4_435 [label="Entry Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.Module<T>()", span="808-808", cluster="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.Module<T>()", file="ContentNegotiationFixture.cs"];
m4_337 [label="Entry Nancy.Responses.Negotiation.Negotiator.WithStatusCode(Nancy.HttpStatusCode)", span="240-240", cluster="Nancy.Responses.Negotiation.Negotiator.WithStatusCode(Nancy.HttpStatusCode)", file="ContentNegotiationFixture.cs"];
m4_439 [label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_response_negotiated_based_on_media_range()", span="624-624", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_response_negotiated_based_on_media_range()", file="ContentNegotiationFixture.cs"];
m4_440 [label="var browser = new Browser(with => with.Module<NegotiationModule>())", span="627-627", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_response_negotiated_based_on_media_range()", file="ContentNegotiationFixture.cs"];
m4_441 [label="var result = browser.Get(''/negotiate'', with =>\r\n            {\r\n                with.Accept(''text/html'');\r\n            })", span="630-633", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_response_negotiated_based_on_media_range()", file="ContentNegotiationFixture.cs"];
m4_442 [label="Assert.Equal(HttpStatusCode.SeeOther, result.StatusCode)", span="636-636", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_response_negotiated_based_on_media_range()", file="ContentNegotiationFixture.cs"];
m4_443 [label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_response_negotiated_based_on_media_range()", span="624-624", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_response_negotiated_based_on_media_range()", file="ContentNegotiationFixture.cs"];
m4_6 [label="Entry Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModule(System.Action<Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator>)", span="20-20", cluster="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModule(System.Action<Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator>)", file="ContentNegotiationFixture.cs"];
m4_188 [label="Entry Nancy.Testing.BrowserContext.Accept(Nancy.Responses.Negotiation.MediaRange, decimal)", span="177-177", cluster="Nancy.Testing.BrowserContext.Accept(Nancy.Responses.Negotiation.MediaRange, decimal)", file="ContentNegotiationFixture.cs"];
m4_251 [label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_media_range_specific_model_when_declared()", span="375-375", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_media_range_specific_model_when_declared()", file="ContentNegotiationFixture.cs"];
m4_252 [label="var browser = new Browser(with =>\r\n            {\r\n                with.ResponseProcessor<ModelProcessor>();\r\n\r\n                with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithModel(''the model'');\r\n                        config.WithAllowedMediaRange(''test/test'');\r\n                        config.WithMediaRangeModel(''test/test'', ''media model'');\r\n                    }));\r\n                }));\r\n            })", span="378-391", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_media_range_specific_model_when_declared()", file="ContentNegotiationFixture.cs"];
m4_253 [label="var response = browser.Get(''/'', with =>\r\n            {\r\n                with.Accept(''test/test'', 0.9m);\r\n            })", span="394-397", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_media_range_specific_model_when_declared()", file="ContentNegotiationFixture.cs"];
m4_254 [label="Assert.Equal(''media model'', response.Body.AsString())", span="400-400", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_media_range_specific_model_when_declared()", file="ContentNegotiationFixture.cs"];
m4_255 [label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_media_range_specific_model_when_declared()", span="375-375", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_media_range_specific_model_when_declared()", file="ContentNegotiationFixture.cs"];
m4_27 [label="Entry Nancy.Testing.BrowserResponseBodyWrapper.AsString()", span="30-30", cluster="Nancy.Testing.BrowserResponseBodyWrapper.AsString()", file="ContentNegotiationFixture.cs"];
m4_143 [label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_apply_default_accept_when_no_accept_header_sent()", span="215-215", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_apply_default_accept_when_no_accept_header_sent()", file="ContentNegotiationFixture.cs"];
m4_144 [label="var browser = new Browser(with =>\r\n            {\r\n                with.ResponseProcessor<TestProcessor>();\r\n\r\n                with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', (parameters, module) =>\r\n                    {\r\n                        var context =\r\n                            new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n                        var negotiator =\r\n                            new Negotiator(context);\r\n\r\n                        return negotiator;\r\n                    });\r\n                }));\r\n            })", span="218-235", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_apply_default_accept_when_no_accept_header_sent()", file="ContentNegotiationFixture.cs"];
m4_145 [label="var response = browser.Get(''/'')", span="238-238", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_apply_default_accept_when_no_accept_header_sent()", file="ContentNegotiationFixture.cs"];
m4_146 [label="Assert.Equal(HttpStatusCode.OK, response.StatusCode)", span="241-241", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_apply_default_accept_when_no_accept_header_sent()", file="ContentNegotiationFixture.cs"];
m4_147 [label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_apply_default_accept_when_no_accept_header_sent()", span="215-215", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_apply_default_accept_when_no_accept_header_sent()", file="ContentNegotiationFixture.cs"];
m4_118 [label="Entry Nancy.Responses.Negotiation.Negotiator.WithReasonPhrase(string)", span="228-228", cluster="Nancy.Responses.Negotiation.Negotiator.WithReasonPhrase(string)", file="ContentNegotiationFixture.cs"];
m4_318 [label="Entry Nancy.Responses.Negotiation.Negotiator.WithStatusCode(int)", span="216-216", cluster="Nancy.Responses.Negotiation.Negotiator.WithStatusCode(int)", file="ContentNegotiationFixture.cs"];
m4_364 [label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_throw_exception_if_view_location_fails()", span="533-533", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_throw_exception_if_view_location_fails()", file="ContentNegotiationFixture.cs"];
m4_365 [label="var browser = new Browser(with =>\r\n            {\r\n                with.ResponseProcessor<ViewProcessor>();\r\n\r\n                with.Module(new ConfigurableNancyModule(x => x.Get(''/FakeModuleInvalidViewName'', CreateNegotiatedResponse(neg => neg.WithView(''blahblahblah'')))));\r\n            })", span="535-540", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_throw_exception_if_view_location_fails()", file="ContentNegotiationFixture.cs"];
m4_366 [label="var result = Record.Exception(() =>\r\n                {\r\n                    var response = browser.Get(\r\n                        ''/FakeModuleInvalidViewName'',\r\n                        with =>\r\n                            { with.Accept(''text/html'', 1.0m); });\r\n                })", span="543-549", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_throw_exception_if_view_location_fails()", file="ContentNegotiationFixture.cs"];
m4_367 [label="Assert.NotNull(result)", span="552-552", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_throw_exception_if_view_location_fails()", file="ContentNegotiationFixture.cs"];
m4_368 [label="Assert.Contains(''Unable to locate view'', result.ToString())", span="553-553", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_throw_exception_if_view_location_fails()", file="ContentNegotiationFixture.cs"];
m4_369 [label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_throw_exception_if_view_location_fails()", span="533-533", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_throw_exception_if_view_location_fails()", file="ContentNegotiationFixture.cs"];
m4_427 [label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_not_try_and_serve_view_with_invalid_name()", span="611-611", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_not_try_and_serve_view_with_invalid_name()", file="ContentNegotiationFixture.cs"];
m4_428 [label="var browser = new Browser(with => with.Module<NegotiationModule>())", span="614-614", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_not_try_and_serve_view_with_invalid_name()", file="ContentNegotiationFixture.cs"];
m4_429 [label="var result = Record.Exception(() => browser.Get(''/invalid-view-name''))", span="617-617", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_not_try_and_serve_view_with_invalid_name()", file="ContentNegotiationFixture.cs"];
m4_430 [label="Assert.True(result.ToString().Contains(''Unable to locate view''))", span="620-620", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_not_try_and_serve_view_with_invalid_name()", file="ContentNegotiationFixture.cs"];
m4_431 [label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_not_try_and_serve_view_with_invalid_name()", span="611-611", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_not_try_and_serve_view_with_invalid_name()", file="ContentNegotiationFixture.cs"];
m4_0 [label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_int_value_from_get_route_as_response_with_status_code_set_to_value()", span="17-17", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_int_value_from_get_route_as_response_with_status_code_set_to_value()", file="ContentNegotiationFixture.cs"];
m4_1 [label="var module = new ConfigurableNancyModule(with =>\r\n            {\r\n                with.Get(''/int'', (x,m) => 200);\r\n            })", span="20-23", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_int_value_from_get_route_as_response_with_status_code_set_to_value()", file="ContentNegotiationFixture.cs"];
m4_2 [label="var browser = new Browser(with =>\r\n            {\r\n                with.Module(module);\r\n            })", span="25-28", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_int_value_from_get_route_as_response_with_status_code_set_to_value()", file="ContentNegotiationFixture.cs"];
m4_3 [label="var response = browser.Get(''/int'')", span="31-31", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_int_value_from_get_route_as_response_with_status_code_set_to_value()", file="ContentNegotiationFixture.cs"];
m4_4 [label="Assert.Equal((HttpStatusCode)200, response.StatusCode)", span="34-34", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_int_value_from_get_route_as_response_with_status_code_set_to_value()", file="ContentNegotiationFixture.cs"];
m4_5 [label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_int_value_from_get_route_as_response_with_status_code_set_to_value()", span="17-17", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_int_value_from_get_route_as_response_with_status_code_set_to_value()", file="ContentNegotiationFixture.cs"];
m4_459 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="ContentNegotiationFixture.cs"];
m4_322 [label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_status_code_to_response_when_set_as_httpstatuscode()", span="476-476", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_status_code_to_response_when_set_as_httpstatuscode()", file="ContentNegotiationFixture.cs"];
m4_323 [label="var browser = new Browser(with =>\r\n            {\r\n                with.ResponseProcessor<TestProcessor>();\r\n\r\n                with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithStatusCode(HttpStatusCode.InsufficientStorage);\r\n                    }));\r\n                }));\r\n            })", span="479-490", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_status_code_to_response_when_set_as_httpstatuscode()", file="ContentNegotiationFixture.cs"];
m4_324 [label="var response = browser.Get(''/'', with =>\r\n            {\r\n                with.Accept(''test/test'', 0.9m);\r\n            })", span="493-496", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_status_code_to_response_when_set_as_httpstatuscode()", file="ContentNegotiationFixture.cs"];
m4_325 [label="Assert.Equal(HttpStatusCode.InsufficientStorage, response.StatusCode)", span="499-499", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_status_code_to_response_when_set_as_httpstatuscode()", file="ContentNegotiationFixture.cs"];
m4_326 [label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_status_code_to_response_when_set_as_httpstatuscode()", span="476-476", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_status_code_to_response_when_set_as_httpstatuscode()", file="ContentNegotiationFixture.cs"];
m4_372 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="ContentNegotiationFixture.cs"];
m4_492 [label="Entry Nancy.IResponseFormatter.AsRedirect(string, Nancy.Responses.RedirectResponse.RedirectType)", span="50-50", cluster="Nancy.IResponseFormatter.AsRedirect(string, Nancy.Responses.RedirectResponse.RedirectType)", file="ContentNegotiationFixture.cs"];
m4_71 [label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0", cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", file="ContentNegotiationFixture.cs"];
m4_371 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="ContentNegotiationFixture.cs"];
m4_7 [label="Entry Nancy.Testing.Browser.Browser(System.Action<Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator>)", span="26-26", cluster="Nancy.Testing.Browser.Browser(System.Action<Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator>)", file="ContentNegotiationFixture.cs"];
m4_493 [label="Entry Nancy.Responses.Negotiation.Negotiator.WithMediaRangeResponse(Nancy.Responses.Negotiation.MediaRange, Nancy.Response)", span="192-192", cluster="Nancy.Responses.Negotiation.Negotiator.WithMediaRangeResponse(Nancy.Responses.Negotiation.MediaRange, Nancy.Response)", file="ContentNegotiationFixture.cs"];
m4_138 [label="Entry Nancy.Responses.Negotiation.Negotiator.WithContentType(string)", span="56-56", cluster="Nancy.Responses.Negotiation.Negotiator.WithContentType(string)", file="ContentNegotiationFixture.cs"];
m4_496 [label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.NegotiationModule.Foo.Foo()", span="759-759", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.NegotiationModule.Foo.Foo()", file="ContentNegotiationFixture.cs"];
m4_52 [label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_action_value_as_response_with_content_set_as_value()", span="80-80", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_action_value_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs"];
m4_53 [label="var module = new ConfigurableNancyModule(with =>\r\n            {\r\n                with.Get(''/action'', (x, m) =>\r\n                {\r\n                    Action<Stream> result = stream =>\r\n                    {\r\n                        var wrapper = new UnclosableStreamWrapper(stream);\r\n                        using (var writer = new StreamWriter(wrapper))\r\n                        {\r\n                            writer.Write(''Hiya Nancy!'');\r\n                        }\r\n                    };\r\n\r\n                    return result;\r\n                });\r\n            })", span="83-98", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_action_value_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs"];
m4_54 [label="var browser = new Browser(with =>\r\n            {\r\n                with.Module(module);\r\n            })", span="100-103", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_action_value_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs"];
m4_55 [label="var response = browser.Get(''/action'')", span="106-106", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_action_value_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs"];
m4_56 [label="Assert.Equal(''Hiya Nancy!'', response.Body.AsString())", span="109-109", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_action_value_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs"];
m4_57 [label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_action_value_as_response_with_content_set_as_value()", span="80-80", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_action_value_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs"];
m4_181 [label="Entry Nancy.Responses.Negotiation.Negotiator.WithAllowedMediaRange(Nancy.Responses.Negotiation.MediaRange)", span="113-113", cluster="Nancy.Responses.Negotiation.Negotiator.WithAllowedMediaRange(Nancy.Responses.Negotiation.MediaRange)", file="ContentNegotiationFixture.cs"];
m4_212 [label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_response_with_notacceptable_when_route_does_not_allow_any_of_the_accepted_formats()", span="320-320", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_response_with_notacceptable_when_route_does_not_allow_any_of_the_accepted_formats()", file="ContentNegotiationFixture.cs"];
m4_213 [label="var browser = new Browser(with =>\r\n            {\r\n                with.ResponseProcessor<TestProcessor>();\r\n\r\n                with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/test'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithAllowedMediaRange(''application/xml'');\r\n                    }));\r\n                }));\r\n            })", span="323-334", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_response_with_notacceptable_when_route_does_not_allow_any_of_the_accepted_formats()", file="ContentNegotiationFixture.cs"];
m4_214 [label="var response = browser.Get(''/test'', with =>\r\n            {\r\n                with.Accept(''foo/bar'', 0.9m);\r\n            })", span="337-340", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_response_with_notacceptable_when_route_does_not_allow_any_of_the_accepted_formats()", file="ContentNegotiationFixture.cs"];
m4_215 [label="Assert.Equal(HttpStatusCode.NotAcceptable, response.StatusCode)", span="343-343", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_response_with_notacceptable_when_route_does_not_allow_any_of_the_accepted_formats()", file="ContentNegotiationFixture.cs"];
m4_216 [label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_response_with_notacceptable_when_route_does_not_allow_any_of_the_accepted_formats()", span="320-320", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_response_with_notacceptable_when_route_does_not_allow_any_of_the_accepted_formats()", file="ContentNegotiationFixture.cs"];
m4_37 [label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_httpstatuscode_value_from_get_route_as_response_with_content_set_as_value()", span="59-59", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_httpstatuscode_value_from_get_route_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs"];
m4_38 [label="var module = new ConfigurableNancyModule(with =>\r\n            {\r\n                with.Get(''/httpstatuscode'', (x, m) => HttpStatusCode.Accepted);\r\n            })", span="62-65", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_httpstatuscode_value_from_get_route_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs"];
m4_39 [label="var browser = new Browser(with =>\r\n            {\r\n                with.Module(module);\r\n            })", span="67-70", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_httpstatuscode_value_from_get_route_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs"];
m4_40 [label="var response = browser.Get(''/httpstatuscode'')", span="73-73", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_httpstatuscode_value_from_get_route_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs"];
m4_41 [label="Assert.Equal(HttpStatusCode.Accepted, response.StatusCode)", span="76-76", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_httpstatuscode_value_from_get_route_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs"];
m4_42 [label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_httpstatuscode_value_from_get_route_as_response_with_content_set_as_value()", span="59-59", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_httpstatuscode_value_from_get_route_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs"];
m4_83 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="ContentNegotiationFixture.cs"];
m4_94 [label="Entry Nancy.NancyContext.NancyContext()", span="25-25", cluster="Nancy.NancyContext.NancyContext()", file="ContentNegotiationFixture.cs"];
m4_348 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="ContentNegotiationFixture.cs"];
m4_489 [label="Entry lambda expression", span="746-751", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_11 [label="with.Get(''/int'', (x,m) => 200)", span="22-22", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_18 [label="with.Module(module)", span="27-27", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_10 [label="Entry lambda expression", span="20-23", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_12 [label="Exit lambda expression", span="20-23", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_14 [label="Entry lambda expression", span="22-22", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_15 [label=200, span="22-22", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_16 [label="Exit lambda expression", span="22-22", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_17 [label="Entry lambda expression", span="25-28", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_19 [label="Exit lambda expression", span="25-28", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_29 [label="with.Get(''/string'', (x, m) => ''hello'')", span="43-43", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_35 [label="with.Module(module)", span="48-48", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_28 [label="Entry lambda expression", span="41-44", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_30 [label="Exit lambda expression", span="41-44", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_31 [label="Entry lambda expression", span="43-43", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_32 [label="''hello''", span="43-43", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_33 [label="Exit lambda expression", span="43-43", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_34 [label="Entry lambda expression", span="46-49", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_36 [label="Exit lambda expression", span="46-49", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_44 [label="with.Get(''/httpstatuscode'', (x, m) => HttpStatusCode.Accepted)", span="64-64", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_50 [label="with.Module(module)", span="69-69", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_43 [label="Entry lambda expression", span="62-65", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_45 [label="Exit lambda expression", span="62-65", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_46 [label="Entry lambda expression", span="64-64", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_47 [label="HttpStatusCode.Accepted", span="64-64", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_48 [label="Exit lambda expression", span="64-64", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_49 [label="Entry lambda expression", span="67-70", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_51 [label="Exit lambda expression", span="67-70", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_59 [label="with.Get(''/action'', (x, m) =>\r\n                {\r\n                    Action<Stream> result = stream =>\r\n                    {\r\n                        var wrapper = new UnclosableStreamWrapper(stream);\r\n                        using (var writer = new StreamWriter(wrapper))\r\n                        {\r\n                            writer.Write(''Hiya Nancy!'');\r\n                        }\r\n                    };\r\n\r\n                    return result;\r\n                })", span="85-97", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_74 [label="with.Module(module)", span="102-102", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_58 [label="Entry lambda expression", span="83-98", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_60 [label="Exit lambda expression", span="83-98", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_61 [label="Entry lambda expression", span="85-97", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_62 [label="Action<Stream> result = stream =>\r\n                    {\r\n                        var wrapper = new UnclosableStreamWrapper(stream);\r\n                        using (var writer = new StreamWriter(wrapper))\r\n                        {\r\n                            writer.Write(''Hiya Nancy!'');\r\n                        }\r\n                    }", span="87-94", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_63 [label="return result;", span="96-96", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_66 [label="var wrapper = new UnclosableStreamWrapper(stream)", span="89-89", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_64 [label="Exit lambda expression", span="85-97", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_65 [label="Entry lambda expression", span="87-94", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_67 [label="var writer = new StreamWriter(wrapper)", span="90-90", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_68 [label="writer.Write(''Hiya Nancy!'')", span="92-92", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_69 [label="Exit lambda expression", span="87-94", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_73 [label="Entry lambda expression", span="100-103", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_75 [label="Exit lambda expression", span="100-103", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_86 [label="with.Get(''/headers'', (x, m) =>\r\n                {\r\n                    var context =\r\n                        new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n                    var negotiator =\r\n                        new Negotiator(context);\r\n                    negotiator.WithHeader(''foo'', ''bar'');\r\n\r\n                    return negotiator;\r\n                })", span="119-129", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_100 [label="with.Module(module)", span="136-136", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_99 [label="with.ResponseProcessor<TestProcessor>()", span="134-134", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_85 [label="Entry lambda expression", span="117-130", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_87 [label="Exit lambda expression", span="117-130", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_88 [label="Entry lambda expression", span="119-129", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_89 [label="var context =\r\n                        new NancyContext { NegotiationContext = new NegotiationContext() }", span="121-122", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_90 [label="var negotiator =\r\n                        new Negotiator(context)", span="124-125", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_91 [label="negotiator.WithHeader(''foo'', ''bar'')", span="126-126", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_92 [label="return negotiator;", span="128-128", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_93 [label="Exit lambda expression", span="119-129", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_98 [label="Entry lambda expression", span="132-137", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_101 [label="Exit lambda expression", span="132-137", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_110 [label="with.Get(''/customPhrase'', (x, m) =>\r\n                {\r\n                    var context =\r\n                        new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n                    var negotiator =\r\n                        new Negotiator(context);\r\n                    negotiator.WithReasonPhrase(''The test is passing!'');\r\n\r\n                    return negotiator;\r\n                })", span="153-163", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_121 [label="with.Module(module)", span="170-170", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_120 [label="with.ResponseProcessor<TestProcessor>()", span="168-168", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_109 [label="Entry lambda expression", span="151-164", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_111 [label="Exit lambda expression", span="151-164", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_112 [label="Entry lambda expression", span="153-163", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_113 [label="var context =\r\n                        new NancyContext { NegotiationContext = new NegotiationContext() }", span="155-156", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_114 [label="var negotiator =\r\n                        new Negotiator(context)", span="158-159", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_115 [label="negotiator.WithReasonPhrase(''The test is passing!'')", span="160-160", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_116 [label="return negotiator;", span="162-162", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_117 [label="Exit lambda expression", span="153-163", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_119 [label="Entry lambda expression", span="166-171", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_122 [label="Exit lambda expression", span="166-171", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_130 [label="with.Get(''/headers'', (x, m) =>\r\n            {\r\n              var context =\r\n                  new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n              var negotiator =\r\n                  new Negotiator(context);\r\n              negotiator.WithContentType(''text/xml'');\r\n\r\n              return negotiator;\r\n            })", span="187-197", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_141 [label="with.Module(module)", span="204-204", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_140 [label="with.ResponseProcessor<TestProcessor>()", span="202-202", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_129 [label="Entry lambda expression", span="185-198", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_131 [label="Exit lambda expression", span="185-198", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_132 [label="Entry lambda expression", span="187-197", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_133 [label="var context =\r\n                  new NancyContext { NegotiationContext = new NegotiationContext() }", span="189-190", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_134 [label="var negotiator =\r\n                  new Negotiator(context)", span="192-193", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_135 [label="negotiator.WithContentType(''text/xml'')", span="194-194", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_136 [label="return negotiator;", span="196-196", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_137 [label="Exit lambda expression", span="187-197", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_139 [label="Entry lambda expression", span="200-205", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_142 [label="Exit lambda expression", span="200-205", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_149 [label="with.ResponseProcessor<TestProcessor>()", span="220-220", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_150 [label="with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', (parameters, module) =>\r\n                    {\r\n                        var context =\r\n                            new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n                        var negotiator =\r\n                            new Negotiator(context);\r\n\r\n                        return negotiator;\r\n                    });\r\n                }))", span="222-234", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_148 [label="Entry lambda expression", span="218-235", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_151 [label="Exit lambda expression", span="218-235", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_153 [label="x.Get(''/'', (parameters, module) =>\r\n                    {\r\n                        var context =\r\n                            new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n                        var negotiator =\r\n                            new Negotiator(context);\r\n\r\n                        return negotiator;\r\n                    })", span="224-233", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_152 [label="Entry lambda expression", span="222-234", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_154 [label="Exit lambda expression", span="222-234", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_155 [label="Entry lambda expression", span="224-233", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_156 [label="var context =\r\n                            new NancyContext { NegotiationContext = new NegotiationContext() }", span="226-227", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_157 [label="var negotiator =\r\n                            new Negotiator(context)", span="229-230", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_158 [label="return negotiator;", span="232-232", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_159 [label="Exit lambda expression", span="224-233", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_168 [label="with.ResponseProcessor<TestProcessor>()", span="250-250", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_169 [label="with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', (parameters, module) =>\r\n                    {\r\n                        var context =\r\n                            new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n                        var negotiator =\r\n                            new Negotiator(context);\r\n\r\n                        negotiator.WithAllowedMediaRange(''application/xml'');\r\n                        negotiator.WithAllowedMediaRange(''text/html'');\r\n\r\n                        return negotiator;\r\n                    });\r\n                }))", span="252-267", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_182 [label="Entry lambda expression", span="271-276", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_167 [label="Entry lambda expression", span="248-268", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_170 [label="Exit lambda expression", span="248-268", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_172 [label="x.Get(''/'', (parameters, module) =>\r\n                    {\r\n                        var context =\r\n                            new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n                        var negotiator =\r\n                            new Negotiator(context);\r\n\r\n                        negotiator.WithAllowedMediaRange(''application/xml'');\r\n                        negotiator.WithAllowedMediaRange(''text/html'');\r\n\r\n                        return negotiator;\r\n                    })", span="254-266", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_171 [label="Entry lambda expression", span="252-267", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_173 [label="Exit lambda expression", span="252-267", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_174 [label="Entry lambda expression", span="254-266", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_175 [label="var context =\r\n                            new NancyContext { NegotiationContext = new NegotiationContext() }", span="256-257", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_176 [label="var negotiator =\r\n                            new Negotiator(context)", span="259-260", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_177 [label="negotiator.WithAllowedMediaRange(''application/xml'')", span="262-262", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_178 [label="negotiator.WithAllowedMediaRange(''text/html'')", span="263-263", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_179 [label="return negotiator;", span="265-265", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_180 [label="Exit lambda expression", span="254-266", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_183 [label="with.Header(''User-Agent'', ''Mozilla/5.0 (Windows; U; Windows NT 5.1; ru-RU) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4'')", span="273-273", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_184 [label="with.Accept(''application/xml'', 0.9m)", span="274-274", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_185 [label="with.Accept(''text/html'', 0.9m)", span="275-275", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_186 [label="Exit lambda expression", span="271-276", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_196 [label="with.ResponseProcessor<TestProcessor>()", span="289-289", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_197 [label="with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/test'', (parameters, module) =>\r\n                    {\r\n                        var context =\r\n                            new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n                        var negotiator =\r\n                            new Negotiator(context);\r\n\r\n                        return negotiator;\r\n                    });\r\n                }))", span="291-303", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_207 [label="Entry lambda expression", span="307-312", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_195 [label="Entry lambda expression", span="287-304", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_198 [label="Exit lambda expression", span="287-304", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_200 [label="x.Get(''/test'', (parameters, module) =>\r\n                    {\r\n                        var context =\r\n                            new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n                        var negotiator =\r\n                            new Negotiator(context);\r\n\r\n                        return negotiator;\r\n                    })", span="293-302", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_199 [label="Entry lambda expression", span="291-303", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_201 [label="Exit lambda expression", span="291-303", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_202 [label="Entry lambda expression", span="293-302", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_203 [label="var context =\r\n                            new NancyContext { NegotiationContext = new NegotiationContext() }", span="295-296", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_204 [label="var negotiator =\r\n                            new Negotiator(context)", span="298-299", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_205 [label="return negotiator;", span="301-301", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_206 [label="Exit lambda expression", span="293-302", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_208 [label="with.Header(''User-Agent'', ''Mozilla/5.0 (Windows; U; Windows NT 5.1; ru-RU) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4'')", span="309-309", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_209 [label="with.Accept(''application/xml'', 0.9m)", span="310-310", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_210 [label="with.Accept(''text/html'', 0.9m)", span="311-311", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_211 [label="Exit lambda expression", span="307-312", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_218 [label="with.ResponseProcessor<TestProcessor>()", span="325-325", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_219 [label="with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/test'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithAllowedMediaRange(''application/xml'');\r\n                    }));\r\n                }))", span="327-333", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_228 [label="Entry lambda expression", span="337-340", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_217 [label="Entry lambda expression", span="323-334", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_220 [label="Exit lambda expression", span="323-334", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_222 [label="x.Get(''/test'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithAllowedMediaRange(''application/xml'');\r\n                    }))", span="329-332", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_221 [label="Entry lambda expression", span="327-333", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_223 [label="Exit lambda expression", span="327-333", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_225 [label="Entry lambda expression", span="329-332", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_226 [label="config.WithAllowedMediaRange(''application/xml'')", span="331-331", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_227 [label="Exit lambda expression", span="329-332", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_229 [label="with.Accept(''foo/bar'', 0.9m)", span="339-339", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_230 [label="Exit lambda expression", span="337-340", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_237 [label="with.ResponseProcessor<ModelProcessor>()", span="352-352", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_238 [label="with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithModel(''the model'');\r\n                        config.WithAllowedMediaRange(''test/test'');\r\n                    }));\r\n                }))", span="354-361", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_248 [label="Entry lambda expression", span="365-368", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_236 [label="Entry lambda expression", span="350-362", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_239 [label="Exit lambda expression", span="350-362", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_241 [label="x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithModel(''the model'');\r\n                        config.WithAllowedMediaRange(''test/test'');\r\n                    }))", span="356-360", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_240 [label="Entry lambda expression", span="354-361", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_242 [label="Exit lambda expression", span="354-361", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_243 [label="Entry lambda expression", span="356-360", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_244 [label="config.WithModel(''the model'')", span="358-358", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_245 [label="config.WithAllowedMediaRange(''test/test'')", span="359-359", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_246 [label="Exit lambda expression", span="356-360", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_249 [label="with.Accept(''test/test'', 0.9m)", span="367-367", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_250 [label="Exit lambda expression", span="365-368", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_257 [label="with.ResponseProcessor<ModelProcessor>()", span="380-380", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_258 [label="with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithModel(''the model'');\r\n                        config.WithAllowedMediaRange(''test/test'');\r\n                        config.WithMediaRangeModel(''test/test'', ''media model'');\r\n                    }));\r\n                }))", span="382-390", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_269 [label="Entry lambda expression", span="394-397", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_256 [label="Entry lambda expression", span="378-391", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_259 [label="Exit lambda expression", span="378-391", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_261 [label="x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithModel(''the model'');\r\n                        config.WithAllowedMediaRange(''test/test'');\r\n                        config.WithMediaRangeModel(''test/test'', ''media model'');\r\n                    }))", span="384-389", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_260 [label="Entry lambda expression", span="382-390", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_262 [label="Exit lambda expression", span="382-390", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_263 [label="Entry lambda expression", span="384-389", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_264 [label="config.WithModel(''the model'')", span="386-386", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_265 [label="config.WithAllowedMediaRange(''test/test'')", span="387-387", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_266 [label="config.WithMediaRangeModel(''test/test'', ''media model'')", span="388-388", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_267 [label="Exit lambda expression", span="384-389", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_270 [label="with.Accept(''test/test'', 0.9m)", span="396-396", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_271 [label="Exit lambda expression", span="394-397", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_279 [label="with.ResponseProcessors(typeof(XmlProcessor), typeof(JsonProcessor), typeof(TestProcessor))", span="409-409", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_280 [label="with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse());\r\n                }))", span="411-414", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_286 [label="Entry lambda expression", span="418-418", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_278 [label="Entry lambda expression", span="407-415", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_281 [label="Exit lambda expression", span="407-415", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_284 [label="x.Get(''/'', CreateNegotiatedResponse())", span="413-413", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_283 [label="Entry lambda expression", span="411-414", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_285 [label="Exit lambda expression", span="411-414", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_287 [label="with.Header(''Accept'', ''application/json'')", span="418-418", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_288 [label="Exit lambda expression", span="418-418", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_297 [label="with.ResponseProcessors(typeof(XmlProcessor), typeof(JsonProcessor), typeof(TestProcessor))", span="431-431", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_298 [label="with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse());\r\n                }))", span="433-436", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_296 [label="Entry lambda expression", span="429-437", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_299 [label="Exit lambda expression", span="429-437", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_301 [label="x.Get(''/'', CreateNegotiatedResponse())", span="435-435", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_300 [label="Entry lambda expression", span="433-436", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_302 [label="Exit lambda expression", span="433-436", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_309 [label="with.ResponseProcessor<TestProcessor>()", span="454-454", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_310 [label="with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithStatusCode(507);\r\n                    }));\r\n                }))", span="456-462", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_319 [label="Entry lambda expression", span="466-469", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_308 [label="Entry lambda expression", span="452-463", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_311 [label="Exit lambda expression", span="452-463", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_313 [label="x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithStatusCode(507);\r\n                    }))", span="458-461", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_312 [label="Entry lambda expression", span="456-462", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_314 [label="Exit lambda expression", span="456-462", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_315 [label="Entry lambda expression", span="458-461", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_316 [label="config.WithStatusCode(507)", span="460-460", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_317 [label="Exit lambda expression", span="458-461", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_320 [label="with.Accept(''test/test'', 0.9m)", span="468-468", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_321 [label="Exit lambda expression", span="466-469", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_328 [label="with.ResponseProcessor<TestProcessor>()", span="481-481", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_329 [label="with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithStatusCode(HttpStatusCode.InsufficientStorage);\r\n                    }));\r\n                }))", span="483-489", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_338 [label="Entry lambda expression", span="493-496", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_327 [label="Entry lambda expression", span="479-490", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_330 [label="Exit lambda expression", span="479-490", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_332 [label="x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithStatusCode(HttpStatusCode.InsufficientStorage);\r\n                    }))", span="485-488", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_331 [label="Entry lambda expression", span="483-489", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_333 [label="Exit lambda expression", span="483-489", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_334 [label="Entry lambda expression", span="485-488", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_335 [label="config.WithStatusCode(HttpStatusCode.InsufficientStorage)", span="487-487", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_336 [label="Exit lambda expression", span="485-488", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_339 [label="with.Accept(''test/test'', 0.9m)", span="495-495", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_340 [label="Exit lambda expression", span="493-496", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_352 [label="with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithCookie(negotiatedCookie);\r\n                    }));\r\n                }))", span="513-519", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_355 [label="x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithCookie(negotiatedCookie);\r\n                    }))", span="515-518", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_358 [label="config.WithCookie(negotiatedCookie)", span="517-517", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_351 [label="with.ResponseProcessor<TestProcessor>()", span="511-511", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_361 [label="Entry lambda expression", span="523-526", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_350 [label="Entry lambda expression", span="509-520", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_353 [label="Exit lambda expression", span="509-520", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_354 [label="Entry lambda expression", span="513-519", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_356 [label="Exit lambda expression", span="513-519", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_357 [label="Entry lambda expression", span="515-518", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_359 [label="Exit lambda expression", span="515-518", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_362 [label="with.Accept(''test/test'', 0.9m)", span="525-525", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_363 [label="Exit lambda expression", span="523-526", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_375 [label="with.ResponseProcessor<ViewProcessor>()", span="537-537", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_376 [label="with.Module(new ConfigurableNancyModule(x => x.Get(''/FakeModuleInvalidViewName'', CreateNegotiatedResponse(neg => neg.WithView(''blahblahblah'')))))", span="539-539", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_386 [label="var response = browser.Get(\r\n                        ''/FakeModuleInvalidViewName'',\r\n                        with =>\r\n                            { with.Accept(''text/html'', 1.0m); })", span="545-548", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_385 [label="Entry lambda expression", span="543-549", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_374 [label="Entry lambda expression", span="535-540", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_377 [label="Exit lambda expression", span="535-540", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_379 [label="x.Get(''/FakeModuleInvalidViewName'', CreateNegotiatedResponse(neg => neg.WithView(''blahblahblah'')))", span="539-539", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_378 [label="Entry lambda expression", span="539-539", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_380 [label="Exit lambda expression", span="539-539", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_381 [label="Entry lambda expression", span="539-539", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_382 [label="neg.WithView(''blahblahblah'')", span="539-539", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_383 [label="Exit lambda expression", span="539-539", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_387 [label="Exit lambda expression", span="543-549", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_388 [label="Entry lambda expression", span="547-548", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_389 [label="with.Accept(''text/html'', 1.0m)", span="548-548", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_390 [label="Exit lambda expression", span="547-548", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_400 [label="with.ResponseProcessors(typeof(NullProcessor), typeof(TestProcessor))", span="562-562", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_401 [label="with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/test'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithAllowedMediaRange(''application/xml'');\r\n                    }));\r\n                }))", span="564-570", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_409 [label="Entry lambda expression", span="574-577", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_399 [label="Entry lambda expression", span="560-571", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_402 [label="Exit lambda expression", span="560-571", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_404 [label="x.Get(''/test'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithAllowedMediaRange(''application/xml'');\r\n                    }))", span="566-569", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_403 [label="Entry lambda expression", span="564-570", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_405 [label="Exit lambda expression", span="564-570", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_406 [label="Entry lambda expression", span="566-569", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_407 [label="config.WithAllowedMediaRange(''application/xml'')", span="568-568", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_408 [label="Exit lambda expression", span="566-569", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_410 [label="with.Accept(''application/xml'', 0.9m)", span="576-576", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_411 [label="Exit lambda expression", span="574-577", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_425 [label="with.Header(''Accept'', header)", span="603-603", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_418 [label="with.ResponseProcessors(typeof(XmlProcessor), typeof(JsonProcessor), typeof(TestProcessor))", span="592-592", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_419 [label="with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse());\r\n                }))", span="594-597", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_424 [label="Entry lambda expression", span="601-604", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_417 [label="Entry lambda expression", span="590-598", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_420 [label="Exit lambda expression", span="590-598", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_422 [label="x.Get(''/'', CreateNegotiatedResponse())", span="596-596", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_421 [label="Entry lambda expression", span="594-597", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_423 [label="Exit lambda expression", span="594-597", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_426 [label="Exit lambda expression", span="601-604", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_433 [label="with.Module<NegotiationModule>()", span="614-614", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_437 [label="browser.Get(''/invalid-view-name'')", span="617-617", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_436 [label="Entry lambda expression", span="617-617", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_432 [label="Entry lambda expression", span="614-614", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_434 [label="Exit lambda expression", span="614-614", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_438 [label="Exit lambda expression", span="617-617", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_445 [label="with.Module<NegotiationModule>()", span="627-627", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_447 [label="Entry lambda expression", span="630-633", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_444 [label="Entry lambda expression", span="627-627", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_446 [label="Exit lambda expression", span="627-627", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_448 [label="with.Accept(''text/html'')", span="632-632", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_449 [label="Exit lambda expression", span="630-633", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_455 [label="action != null", span="645-645", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_456 [label="action.Invoke(negotiator)", span="647-647", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_454 [label="var negotiator = new Negotiator(module.Context)", span="643-643", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_453 [label="Entry lambda expression", span="641-651", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_457 [label="return negotiator;", span="650-650", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_458 [label="Exit lambda expression", span="641-651", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_485 [label="Entry lambda expression", span="741-744", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_486 [label="return this.GetModel();", span="743-743", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_487 [label="Exit lambda expression", span="741-744", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_490 [label="return Negotiate\r\n                        .WithMediaRangeResponse(''text/html'', Response.AsRedirect(''/''))\r\n                        .WithMediaRangeModel(''application/json'', new { Name = ''Nancy'' });", span="748-750", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_491 [label="Exit lambda expression", span="746-751", cluster="lambda expression", file="ContentNegotiationFixture.cs"];
m4_21 [label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_string_value_from_get_route_as_response_with_content_set_as_value()", span="38-38", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_string_value_from_get_route_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs"];
m4_22 [label="var module = new ConfigurableNancyModule(with =>\r\n            {\r\n                with.Get(''/string'', (x, m) => ''hello'');\r\n            })", span="41-44", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_string_value_from_get_route_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs"];
m4_23 [label="var browser = new Browser(with =>\r\n            {\r\n                with.Module(module);\r\n            })", span="46-49", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_string_value_from_get_route_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs"];
m4_24 [label="var response = browser.Get(''/string'')", span="52-52", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_string_value_from_get_route_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs"];
m4_25 [label="Assert.Equal(''hello'', response.Body.AsString())", span="55-55", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_string_value_from_get_route_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs"];
m4_26 [label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_string_value_from_get_route_as_response_with_content_set_as_value()", span="38-38", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_string_value_from_get_route_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs"];
m4_268 [label="Entry Nancy.Responses.Negotiation.Negotiator.WithMediaRangeModel(Nancy.Responses.Negotiation.MediaRange, object)", span="163-163", cluster="Nancy.Responses.Negotiation.Negotiator.WithMediaRangeModel(Nancy.Responses.Negotiation.MediaRange, object)", file="ContentNegotiationFixture.cs"];
m4_373 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="ContentNegotiationFixture.cs"];
m4_96 [label="Entry Nancy.Responses.Negotiation.Negotiator.Negotiator(Nancy.NancyContext)", span="13-13", cluster="Nancy.Responses.Negotiation.Negotiator.Negotiator(Nancy.NancyContext)", file="ContentNegotiationFixture.cs"];
m4_478 [label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.ModelProcessor.Process(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", span="731-731", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.ModelProcessor.Process(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", file="ContentNegotiationFixture.cs"];
m4_479 [label="return (string) model;", span="733-733", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.ModelProcessor.Process(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", file="ContentNegotiationFixture.cs"];
m4_480 [label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.ModelProcessor.Process(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", span="731-731", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.ModelProcessor.Process(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", file="ContentNegotiationFixture.cs"];
m4_70 [label="Entry Nancy.IO.UnclosableStreamWrapper.UnclosableStreamWrapper(System.IO.Stream)", span="22-22", cluster="Nancy.IO.UnclosableStreamWrapper.UnclosableStreamWrapper(System.IO.Stream)", file="ContentNegotiationFixture.cs"];
m4_72 [label="Entry System.IO.StreamWriter.Write(string)", span="0-0", cluster="System.IO.StreamWriter.Write(string)", file="ContentNegotiationFixture.cs"];
m4_370 [label="Entry Unk.Exception", span="", cluster="Unk.Exception", file="ContentNegotiationFixture.cs"];
m4_347 [label="Entry Nancy.Cookies.NancyCookie.NancyCookie(string, string)", span="10-10", cluster="Nancy.Cookies.NancyCookie.NancyCookie(string, string)", file="ContentNegotiationFixture.cs"];
m4_450 [label="Entry Nancy.Testing.BrowserContext.Accept(Nancy.Responses.Negotiation.MediaRange)", span="172-172", cluster="Nancy.Testing.BrowserContext.Accept(Nancy.Responses.Negotiation.MediaRange)", file="ContentNegotiationFixture.cs"];
m4_412 [label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_not_throw_exception_because_of_uncommon_accept_header(string)", span="587-587", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_not_throw_exception_because_of_uncommon_accept_header(string)", file="ContentNegotiationFixture.cs"];
m4_413 [label="var browser = new Browser(with =>\r\n            {\r\n                with.ResponseProcessors(typeof(XmlProcessor), typeof(JsonProcessor), typeof(TestProcessor));\r\n\r\n                with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse());\r\n                }));\r\n            })", span="590-598", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_not_throw_exception_because_of_uncommon_accept_header(string)", file="ContentNegotiationFixture.cs"];
m4_414 [label="var response = browser.Get(''/'', with =>\r\n            {\r\n                with.Header(''Accept'', header);\r\n            })", span="601-604", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_not_throw_exception_because_of_uncommon_accept_header(string)", file="ContentNegotiationFixture.cs"];
m4_415 [label="Assert.Equal((HttpStatusCode)200, response.StatusCode)", span="607-607", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_not_throw_exception_because_of_uncommon_accept_header(string)", file="ContentNegotiationFixture.cs"];
m4_416 [label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_not_throw_exception_because_of_uncommon_accept_header(string)", span="587-587", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_not_throw_exception_because_of_uncommon_accept_header(string)", file="ContentNegotiationFixture.cs"];
m4_467 [label="Entry Unk.GetType", span="", cluster="Unk.GetType", file="ContentNegotiationFixture.cs"];
m4_187 [label="Entry Nancy.Testing.BrowserContext.Header(string, string)", span="115-115", cluster="Nancy.Testing.BrowserContext.Header(string, string)", file="ContentNegotiationFixture.cs"];
m4_84 [label="Entry Unk.True", span="", cluster="Unk.True", file="ContentNegotiationFixture.cs"];
m4_475 [label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.ModelProcessor.CanProcess(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", span="722-722", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.ModelProcessor.CanProcess(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", file="ContentNegotiationFixture.cs"];
m4_476 [label="return new ProcessorMatch\r\n                {\r\n                    RequestedContentTypeResult = MatchResult.DontCare,\r\n                    ModelResult = MatchResult.DontCare\r\n                };", span="724-728", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.ModelProcessor.CanProcess(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", file="ContentNegotiationFixture.cs"];
m4_477 [label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.ModelProcessor.CanProcess(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", span="722-722", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.ModelProcessor.CanProcess(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", file="ContentNegotiationFixture.cs"];
m4_468 [label="Entry Unk.Format", span="", cluster="Unk.Format", file="ContentNegotiationFixture.cs"];
m4_102 [label="Entry Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.ResponseProcessor<T>()", span="1213-1213", cluster="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.ResponseProcessor<T>()", file="ContentNegotiationFixture.cs"];
m4_272 [label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_vary_accept_header()", span="404-404", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_vary_accept_header()", file="ContentNegotiationFixture.cs"];
m4_273 [label="var browser = new Browser(with =>\r\n            {\r\n                with.ResponseProcessors(typeof(XmlProcessor), typeof(JsonProcessor), typeof(TestProcessor));\r\n\r\n                with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse());\r\n                }));\r\n            })", span="407-415", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_vary_accept_header()", file="ContentNegotiationFixture.cs"];
m4_274 [label="var response = browser.Get(''/'', with => with.Header(''Accept'', ''application/json''))", span="418-418", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_vary_accept_header()", file="ContentNegotiationFixture.cs"];
m4_275 [label="Assert.True(response.Headers.ContainsKey(''Vary''))", span="421-421", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_vary_accept_header()", file="ContentNegotiationFixture.cs"];
m4_276 [label="Assert.True(response.Headers[''Vary''].Contains(''Accept''))", span="422-422", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_vary_accept_header()", file="ContentNegotiationFixture.cs"];
m4_277 [label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_vary_accept_header()", span="404-404", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_vary_accept_header()", file="ContentNegotiationFixture.cs"];
m4_341 [label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_cookies_to_response()", span="503-503", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_cookies_to_response()", file="ContentNegotiationFixture.cs"];
m4_342 [label="var negotiatedCookie = \r\n                new NancyCookie(''test'', ''test'')", span="506-507", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_cookies_to_response()", file="ContentNegotiationFixture.cs"];
m4_343 [label="var browser = new Browser(with =>\r\n            {\r\n                with.ResponseProcessor<TestProcessor>();\r\n\r\n                with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithCookie(negotiatedCookie);\r\n                    }));\r\n                }));\r\n            })", span="509-520", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_cookies_to_response()", file="ContentNegotiationFixture.cs"];
m4_345 [label="Assert.Same(negotiatedCookie, response.Cookies.First())", span="529-529", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_cookies_to_response()", file="ContentNegotiationFixture.cs"];
m4_344 [label="var response = browser.Get(''/'', with =>\r\n            {\r\n                with.Accept(''test/test'', 0.9m);\r\n            })", span="523-526", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_cookies_to_response()", file="ContentNegotiationFixture.cs"];
m4_346 [label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_cookies_to_response()", span="503-503", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_cookies_to_response()", file="ContentNegotiationFixture.cs"];
m4_13 [label="Entry Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator.Get(string, System.Func<dynamic, Nancy.NancyModule, dynamic>)", span="133-133", cluster="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator.Get(string, System.Func<dynamic, Nancy.NancyModule, dynamic>)", file="ContentNegotiationFixture.cs"];
m4_123 [label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_content_headers_to_response()", span="181-181", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_content_headers_to_response()", file="ContentNegotiationFixture.cs"];
m4_124 [label="var module = new ConfigurableNancyModule(with =>\r\n          {\r\n            with.Get(''/headers'', (x, m) =>\r\n            {\r\n              var context =\r\n                  new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n              var negotiator =\r\n                  new Negotiator(context);\r\n              negotiator.WithContentType(''text/xml'');\r\n\r\n              return negotiator;\r\n            });\r\n          })", span="185-198", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_content_headers_to_response()", file="ContentNegotiationFixture.cs"];
m4_125 [label="var brower = new Browser(with =>\r\n          {\r\n            with.ResponseProcessor<TestProcessor>();\r\n\r\n            with.Module(module);\r\n          })", span="200-205", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_content_headers_to_response()", file="ContentNegotiationFixture.cs"];
m4_126 [label="var response = brower.Get(''/headers'')", span="208-208", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_content_headers_to_response()", file="ContentNegotiationFixture.cs"];
m4_127 [label="Assert.Equal(''text/xml'', response.Context.Response.ContentType)", span="211-211", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_content_headers_to_response()", file="ContentNegotiationFixture.cs"];
m4_128 [label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_content_headers_to_response()", span="181-181", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_content_headers_to_response()", file="ContentNegotiationFixture.cs"];
m4_103 [label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_reason_phrase_on_response()", span="148-148", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_reason_phrase_on_response()", file="ContentNegotiationFixture.cs"];
m4_104 [label="var module = new ConfigurableNancyModule(with =>\r\n            {\r\n                with.Get(''/customPhrase'', (x, m) =>\r\n                {\r\n                    var context =\r\n                        new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n                    var negotiator =\r\n                        new Negotiator(context);\r\n                    negotiator.WithReasonPhrase(''The test is passing!'');\r\n\r\n                    return negotiator;\r\n                });\r\n            })", span="151-164", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_reason_phrase_on_response()", file="ContentNegotiationFixture.cs"];
m4_105 [label="var brower = new Browser(with =>\r\n            {\r\n                with.ResponseProcessor<TestProcessor>();\r\n\r\n                with.Module(module);\r\n            })", span="166-171", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_reason_phrase_on_response()", file="ContentNegotiationFixture.cs"];
m4_106 [label="var response = brower.Get(''/customPhrase'')", span="174-174", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_reason_phrase_on_response()", file="ContentNegotiationFixture.cs"];
m4_107 [label="Assert.Equal(''The test is passing!'', response.ReasonPhrase)", span="177-177", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_reason_phrase_on_response()", file="ContentNegotiationFixture.cs"];
m4_108 [label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_reason_phrase_on_response()", span="148-148", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_reason_phrase_on_response()", file="ContentNegotiationFixture.cs"];
m4_463 [label="Entry Nancy.Responses.Negotiation.ProcessorMatch.ProcessorMatch()", span="5-5", cluster="Nancy.Responses.Negotiation.ProcessorMatch.ProcessorMatch()", file="ContentNegotiationFixture.cs"];
m4_247 [label="Entry Nancy.Responses.Negotiation.Negotiator.WithModel(dynamic)", span="135-135", cluster="Nancy.Responses.Negotiation.Negotiator.WithModel(dynamic)", file="ContentNegotiationFixture.cs"];
m4_464 [label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.TestProcessor.Process(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", span="681-681", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.TestProcessor.Process(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", file="ContentNegotiationFixture.cs"];
m4_465 [label="return string.Format(ResponseTemplate, requestedMediaRange, model == null ? ''None'' : model.GetType());", span="683-683", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.TestProcessor.Process(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", file="ContentNegotiationFixture.cs"];
m4_466 [label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.TestProcessor.Process(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", span="681-681", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.TestProcessor.Process(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", file="ContentNegotiationFixture.cs"];
m4_76 [label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_headers_to_response()", span="113-113", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_headers_to_response()", file="ContentNegotiationFixture.cs"];
m4_77 [label="var module = new ConfigurableNancyModule(with =>\r\n            {\r\n                with.Get(''/headers'', (x, m) =>\r\n                {\r\n                    var context =\r\n                        new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n                    var negotiator =\r\n                        new Negotiator(context);\r\n                    negotiator.WithHeader(''foo'', ''bar'');\r\n\r\n                    return negotiator;\r\n                });\r\n            })", span="117-130", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_headers_to_response()", file="ContentNegotiationFixture.cs"];
m4_78 [label="var brower = new Browser(with =>\r\n            {\r\n                with.ResponseProcessor<TestProcessor>();\r\n\r\n                with.Module(module);\r\n            })", span="132-137", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_headers_to_response()", file="ContentNegotiationFixture.cs"];
m4_79 [label="var response = brower.Get(''/headers'')", span="140-140", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_headers_to_response()", file="ContentNegotiationFixture.cs"];
m4_80 [label="Assert.True(response.Headers.ContainsKey(''foo''))", span="143-143", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_headers_to_response()", file="ContentNegotiationFixture.cs"];
m4_81 [label="Assert.Equal(''bar'', response.Headers[''foo''])", span="144-144", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_headers_to_response()", file="ContentNegotiationFixture.cs"];
m4_82 [label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_headers_to_response()", span="113-113", cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_headers_to_response()", file="ContentNegotiationFixture.cs"];
m4_360 [label="Entry Nancy.Responses.Negotiation.Negotiator.WithCookie(Nancy.Cookies.INancyCookie)", span="16-16", cluster="Nancy.Responses.Negotiation.Negotiator.WithCookie(Nancy.Cookies.INancyCookie)", file="ContentNegotiationFixture.cs"];
m4_497 [label=module, span="", file="ContentNegotiationFixture.cs"];
m4_498 [label=module, span="", file="ContentNegotiationFixture.cs"];
m4_499 [label=module, span="", file="ContentNegotiationFixture.cs"];
m4_500 [label=module, span="", file="ContentNegotiationFixture.cs"];
m4_501 [label=module, span="", file="ContentNegotiationFixture.cs"];
m4_502 [label=module, span="", file="ContentNegotiationFixture.cs"];
m4_503 [label=module, span="", file="ContentNegotiationFixture.cs"];
m4_504 [label=negotiatedCookie, span="", file="ContentNegotiationFixture.cs"];
m4_505 [label=browser, span="", file="ContentNegotiationFixture.cs"];
m4_506 [label=string, span="", file="ContentNegotiationFixture.cs"];
m4_507 [label=browser, span="", file="ContentNegotiationFixture.cs"];
m4_508 [label="System.Action<Nancy.Responses.Negotiation.Negotiator>", span="", file="ContentNegotiationFixture.cs"];
m4_509 [label="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.NegotiationModule", span="", file="ContentNegotiationFixture.cs"];
m5_3 [label="Entry System.DateTime.TryParseExact(string, string, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTime)", span="0-0", cluster="System.DateTime.TryParseExact(string, string, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTime)", file="CustomDateTimeRouteSegmenConstraint.cs"];
m5_0 [label="Entry Nancy.Routing.Constraints.CustomDateTimeRouteSegmenConstraint.TryMatch(string, string[], out System.DateTime)", span="12-12", cluster="Nancy.Routing.Constraints.CustomDateTimeRouteSegmenConstraint.TryMatch(string, string[], out System.DateTime)", file="CustomDateTimeRouteSegmenConstraint.cs"];
m5_1 [label="return DateTime.TryParseExact(segment,\r\n                parameters[0],\r\n                CultureInfo.InvariantCulture,\r\n                DateTimeStyles.None,\r\n                out matchedValue);", span="14-18", cluster="Nancy.Routing.Constraints.CustomDateTimeRouteSegmenConstraint.TryMatch(string, string[], out System.DateTime)", file="CustomDateTimeRouteSegmenConstraint.cs"];
m5_2 [label="Exit Nancy.Routing.Constraints.CustomDateTimeRouteSegmenConstraint.TryMatch(string, string[], out System.DateTime)", span="12-12", cluster="Nancy.Routing.Constraints.CustomDateTimeRouteSegmenConstraint.TryMatch(string, string[], out System.DateTime)", file="CustomDateTimeRouteSegmenConstraint.cs"];
m6_0 [label="Entry Nancy.Validation.DataAnnotations.DataAnnotationsValidatorAdapter.DataAnnotationsValidatorAdapter(string)", span="17-17", cluster="Nancy.Validation.DataAnnotations.DataAnnotationsValidatorAdapter.DataAnnotationsValidatorAdapter(string)", file="DataAnnotationsValidatorAdapter.cs"];
m6_1 [label="this.ruleType = ruleType", span="19-19", cluster="Nancy.Validation.DataAnnotations.DataAnnotationsValidatorAdapter.DataAnnotationsValidatorAdapter(string)", file="DataAnnotationsValidatorAdapter.cs"];
m6_2 [label="Exit Nancy.Validation.DataAnnotations.DataAnnotationsValidatorAdapter.DataAnnotationsValidatorAdapter(string)", span="17-17", cluster="Nancy.Validation.DataAnnotations.DataAnnotationsValidatorAdapter.DataAnnotationsValidatorAdapter(string)", file="DataAnnotationsValidatorAdapter.cs"];
m6_19 [label="Entry Unk.GetValidationResult", span="", cluster="Unk.GetValidationResult", file="DataAnnotationsValidatorAdapter.cs"];
m6_3 [label="Entry Nancy.Validation.DataAnnotations.DataAnnotationsValidatorAdapter.CanHandle(ValidationAttribute)", span="28-28", cluster="Nancy.Validation.DataAnnotations.DataAnnotationsValidatorAdapter.CanHandle(ValidationAttribute)", file="DataAnnotationsValidatorAdapter.cs"];
m6_4 [label="Exit Nancy.Validation.DataAnnotations.DataAnnotationsValidatorAdapter.CanHandle(ValidationAttribute)", span="28-28", cluster="Nancy.Validation.DataAnnotations.DataAnnotationsValidatorAdapter.CanHandle(ValidationAttribute)", file="DataAnnotationsValidatorAdapter.cs"];
m6_17 [label="Entry ValidationContext.cstr", span="", cluster="ValidationContext.cstr", file="DataAnnotationsValidatorAdapter.cs"];
m6_18 [label="Entry System.ComponentModel.PropertyDescriptor.GetValue(object)", span="0-0", cluster="System.ComponentModel.PropertyDescriptor.GetValue(object)", file="DataAnnotationsValidatorAdapter.cs"];
m6_5 [label="Entry Nancy.Validation.DataAnnotations.DataAnnotationsValidatorAdapter.GetRules(ValidationAttribute, System.ComponentModel.PropertyDescriptor)", span="36-36", cluster="Nancy.Validation.DataAnnotations.DataAnnotationsValidatorAdapter.GetRules(ValidationAttribute, System.ComponentModel.PropertyDescriptor)", file="DataAnnotationsValidatorAdapter.cs"];
m6_6 [label="yield return new ModelValidationRule(ruleType, attribute.FormatErrorMessage, descriptor == null ? null : new[] { descriptor.Name });", span="38-38", cluster="Nancy.Validation.DataAnnotations.DataAnnotationsValidatorAdapter.GetRules(ValidationAttribute, System.ComponentModel.PropertyDescriptor)", file="DataAnnotationsValidatorAdapter.cs"];
m6_7 [label="Exit Nancy.Validation.DataAnnotations.DataAnnotationsValidatorAdapter.GetRules(ValidationAttribute, System.ComponentModel.PropertyDescriptor)", span="36-36", cluster="Nancy.Validation.DataAnnotations.DataAnnotationsValidatorAdapter.GetRules(ValidationAttribute, System.ComponentModel.PropertyDescriptor)", file="DataAnnotationsValidatorAdapter.cs"];
m6_20 [label="Entry ModelValidationError.cstr", span="", cluster="ModelValidationError.cstr", file="DataAnnotationsValidatorAdapter.cs"];
m6_8 [label="Entry ModelValidationRule.cstr", span="", cluster="ModelValidationRule.cstr", file="DataAnnotationsValidatorAdapter.cs"];
m6_9 [label="Entry Nancy.Validation.DataAnnotations.DataAnnotationsValidatorAdapter.Validate(object, ValidationAttribute, System.ComponentModel.PropertyDescriptor)", span="48-48", cluster="Nancy.Validation.DataAnnotations.DataAnnotationsValidatorAdapter.Validate(object, ValidationAttribute, System.ComponentModel.PropertyDescriptor)", file="DataAnnotationsValidatorAdapter.cs"];
m6_10 [label="var context = \r\n                new ValidationContext(instance, null, null)\r\n                {\r\n                    MemberName = descriptor == null ? null : descriptor.Name\r\n                }", span="50-54", cluster="Nancy.Validation.DataAnnotations.DataAnnotationsValidatorAdapter.Validate(object, ValidationAttribute, System.ComponentModel.PropertyDescriptor)", file="DataAnnotationsValidatorAdapter.cs"];
m6_15 [label="yield return new ModelValidationError(result.MemberNames, attribute.FormatErrorMessage);", span="66-66", cluster="Nancy.Validation.DataAnnotations.DataAnnotationsValidatorAdapter.Validate(object, ValidationAttribute, System.ComponentModel.PropertyDescriptor)", color=red, community=0, file="DataAnnotationsValidatorAdapter.cs"];
m6_11 [label="descriptor != null", span="56-56", cluster="Nancy.Validation.DataAnnotations.DataAnnotationsValidatorAdapter.Validate(object, ValidationAttribute, System.ComponentModel.PropertyDescriptor)", file="DataAnnotationsValidatorAdapter.cs"];
m6_12 [label="instance = descriptor.GetValue(instance)", span="58-58", cluster="Nancy.Validation.DataAnnotations.DataAnnotationsValidatorAdapter.Validate(object, ValidationAttribute, System.ComponentModel.PropertyDescriptor)", file="DataAnnotationsValidatorAdapter.cs"];
m6_13 [label="var result = \r\n                attribute.GetValidationResult(instance, context)", span="61-62", cluster="Nancy.Validation.DataAnnotations.DataAnnotationsValidatorAdapter.Validate(object, ValidationAttribute, System.ComponentModel.PropertyDescriptor)", file="DataAnnotationsValidatorAdapter.cs"];
m6_14 [label="result != null", span="64-64", cluster="Nancy.Validation.DataAnnotations.DataAnnotationsValidatorAdapter.Validate(object, ValidationAttribute, System.ComponentModel.PropertyDescriptor)", file="DataAnnotationsValidatorAdapter.cs"];
m6_16 [label="Exit Nancy.Validation.DataAnnotations.DataAnnotationsValidatorAdapter.Validate(object, ValidationAttribute, System.ComponentModel.PropertyDescriptor)", span="48-48", cluster="Nancy.Validation.DataAnnotations.DataAnnotationsValidatorAdapter.Validate(object, ValidationAttribute, System.ComponentModel.PropertyDescriptor)", file="DataAnnotationsValidatorAdapter.cs"];
m6_21 [label="Nancy.Validation.DataAnnotations.DataAnnotationsValidatorAdapter", span="", file="DataAnnotationsValidatorAdapter.cs"];
m8_0 [label="Entry Nancy.Routing.Constraints.DateTimeRouteSegmentConstraint.TryMatch(string, string, out System.DateTime)", span="11-11", cluster="Nancy.Routing.Constraints.DateTimeRouteSegmentConstraint.TryMatch(string, string, out System.DateTime)", file="DateTimeRouteSegmentConstraint.cs"];
m8_1 [label="return DateTime.TryParse(segment, out matchedValue);", span="13-13", cluster="Nancy.Routing.Constraints.DateTimeRouteSegmentConstraint.TryMatch(string, string, out System.DateTime)", file="DateTimeRouteSegmentConstraint.cs"];
m8_2 [label="Exit Nancy.Routing.Constraints.DateTimeRouteSegmentConstraint.TryMatch(string, string, out System.DateTime)", span="11-11", cluster="Nancy.Routing.Constraints.DateTimeRouteSegmentConstraint.TryMatch(string, string, out System.DateTime)", file="DateTimeRouteSegmentConstraint.cs"];
m8_3 [label="Entry System.DateTime.TryParse(string, out System.DateTime)", span="0-0", cluster="System.DateTime.TryParse(string, out System.DateTime)", file="DateTimeRouteSegmentConstraint.cs"];
m9_0 [label="Entry Nancy.Routing.Constraints.DecimalRouteSegmentConstraint.TryMatch(string, string, out decimal)", span="11-11", cluster="Nancy.Routing.Constraints.DecimalRouteSegmentConstraint.TryMatch(string, string, out decimal)", file="DecimalRouteSegmentConstraint.cs"];
m9_1 [label="return decimal.TryParse(segment, NumberStyles.Number, CultureInfo.InvariantCulture, out matchedValue);", span="13-13", cluster="Nancy.Routing.Constraints.DecimalRouteSegmentConstraint.TryMatch(string, string, out decimal)", file="DecimalRouteSegmentConstraint.cs"];
m9_2 [label="Exit Nancy.Routing.Constraints.DecimalRouteSegmentConstraint.TryMatch(string, string, out decimal)", span="11-11", cluster="Nancy.Routing.Constraints.DecimalRouteSegmentConstraint.TryMatch(string, string, out decimal)", file="DecimalRouteSegmentConstraint.cs"];
m9_3 [label="Entry decimal.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out decimal)", span="0-0", cluster="decimal.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out decimal)", file="DecimalRouteSegmentConstraint.cs"];
m10_6 [label="Entry Unk.Validate", span="", cluster="Unk.Validate", file="DefaultValidatableObjectAdapter.cs"];
m10_0 [label="Entry Nancy.Validation.DataAnnotations.DefaultValidatableObjectAdapter.Validate(object)", span="16-16", cluster="Nancy.Validation.DataAnnotations.DefaultValidatableObjectAdapter.Validate(object)", file="DefaultValidatableObjectAdapter.cs"];
m10_1 [label="var context =\r\n                new ValidationContext(instance, null, null)", span="18-19", cluster="Nancy.Validation.DataAnnotations.DefaultValidatableObjectAdapter.Validate(object)", file="DefaultValidatableObjectAdapter.cs"];
m10_2 [label="var result =\r\n                ((IValidatableObject)instance).Validate(context)", span="21-22", cluster="Nancy.Validation.DataAnnotations.DefaultValidatableObjectAdapter.Validate(object)", file="DefaultValidatableObjectAdapter.cs"];
m10_3 [label="return result.Select(r => new ModelValidationError(r.MemberNames, s => r.ErrorMessage));", span="24-24", cluster="Nancy.Validation.DataAnnotations.DefaultValidatableObjectAdapter.Validate(object)", color=green, community=0, file="DefaultValidatableObjectAdapter.cs"];
m10_4 [label="Exit Nancy.Validation.DataAnnotations.DefaultValidatableObjectAdapter.Validate(object)", span="16-16", cluster="Nancy.Validation.DataAnnotations.DefaultValidatableObjectAdapter.Validate(object)", file="DefaultValidatableObjectAdapter.cs"];
m10_5 [label="Entry ValidationContext.cstr", span="", cluster="ValidationContext.cstr", file="DefaultValidatableObjectAdapter.cs"];
m10_11 [label="Entry ModelValidationError.cstr", span="", cluster="ModelValidationError.cstr", file="DefaultValidatableObjectAdapter.cs"];
m10_12 [label="Entry lambda expression", span="24-24", cluster="lambda expression", file="DefaultValidatableObjectAdapter.cs"];
m10_8 [label="Entry lambda expression", span="24-24", cluster="lambda expression", file="DefaultValidatableObjectAdapter.cs"];
m10_9 [label="new ModelValidationError(r.MemberNames, s => r.ErrorMessage)", span="24-24", cluster="lambda expression", color=green, community=0, file="DefaultValidatableObjectAdapter.cs"];
m10_13 [label="r.ErrorMessage", span="24-24", cluster="lambda expression", color=green, community=0, file="DefaultValidatableObjectAdapter.cs"];
m10_10 [label="Exit lambda expression", span="24-24", cluster="lambda expression", file="DefaultValidatableObjectAdapter.cs"];
m10_14 [label="Exit lambda expression", span="24-24", cluster="lambda expression", file="DefaultValidatableObjectAdapter.cs"];
m10_7 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="DefaultValidatableObjectAdapter.cs"];
m10_15 [label="?", span="", file="DefaultValidatableObjectAdapter.cs"];
m11_35 [label="Entry Nancy.DynamicDictionary.Equals(object)", span="143-143", cluster="Nancy.DynamicDictionary.Equals(object)", file="DynamicDictionary.cs"];
m11_36 [label="ReferenceEquals(null, obj)", span="145-145", cluster="Nancy.DynamicDictionary.Equals(object)", file="DynamicDictionary.cs"];
m11_38 [label="ReferenceEquals(this, obj)", span="150-150", cluster="Nancy.DynamicDictionary.Equals(object)", file="DynamicDictionary.cs"];
m11_40 [label="return obj.GetType() == typeof (DynamicDictionary) && this.Equals((DynamicDictionary) obj);", span="155-155", cluster="Nancy.DynamicDictionary.Equals(object)", file="DynamicDictionary.cs"];
m11_37 [label="return false;", span="147-147", cluster="Nancy.DynamicDictionary.Equals(object)", file="DynamicDictionary.cs"];
m11_39 [label="return true;", span="152-152", cluster="Nancy.DynamicDictionary.Equals(object)", file="DynamicDictionary.cs"];
m11_41 [label="Exit Nancy.DynamicDictionary.Equals(object)", span="143-143", cluster="Nancy.DynamicDictionary.Equals(object)", file="DynamicDictionary.cs"];
m11_56 [label="Entry Nancy.DynamicDictionary.ContainsKey(string)", span="201-201", cluster="Nancy.DynamicDictionary.ContainsKey(string)", file="DynamicDictionary.cs"];
m11_57 [label="return this.dictionary.ContainsKey(key);", span="203-203", cluster="Nancy.DynamicDictionary.ContainsKey(string)", file="DynamicDictionary.cs"];
m11_58 [label="Exit Nancy.DynamicDictionary.ContainsKey(string)", span="201-201", cluster="Nancy.DynamicDictionary.ContainsKey(string)", file="DynamicDictionary.cs"];
m11_28 [label="Entry Nancy.DynamicDictionary.Equals(Nancy.DynamicDictionary)", span="128-128", cluster="Nancy.DynamicDictionary.Equals(Nancy.DynamicDictionary)", file="DynamicDictionary.cs"];
m11_29 [label="ReferenceEquals(null, other)", span="130-130", cluster="Nancy.DynamicDictionary.Equals(Nancy.DynamicDictionary)", file="DynamicDictionary.cs"];
m11_31 [label="return ReferenceEquals(this, other) || Equals(other.dictionary, this.dictionary);", span="135-135", cluster="Nancy.DynamicDictionary.Equals(Nancy.DynamicDictionary)", file="DynamicDictionary.cs"];
m11_30 [label="return false;", span="132-132", cluster="Nancy.DynamicDictionary.Equals(Nancy.DynamicDictionary)", file="DynamicDictionary.cs"];
m11_32 [label="Exit Nancy.DynamicDictionary.Equals(Nancy.DynamicDictionary)", span="128-128", cluster="Nancy.DynamicDictionary.Equals(Nancy.DynamicDictionary)", file="DynamicDictionary.cs"];
m11_7 [label="Entry Nancy.DynamicDictionary.TrySetMember(System.Dynamic.SetMemberBinder, object)", span="49-49", cluster="Nancy.DynamicDictionary.TrySetMember(System.Dynamic.SetMemberBinder, object)", file="DynamicDictionary.cs"];
m11_8 [label="this[binder.Name] = value", span="51-51", cluster="Nancy.DynamicDictionary.TrySetMember(System.Dynamic.SetMemberBinder, object)", file="DynamicDictionary.cs"];
m11_9 [label="return true;", span="52-52", cluster="Nancy.DynamicDictionary.TrySetMember(System.Dynamic.SetMemberBinder, object)", file="DynamicDictionary.cs"];
m11_10 [label="Exit Nancy.DynamicDictionary.TrySetMember(System.Dynamic.SetMemberBinder, object)", span="49-49", cluster="Nancy.DynamicDictionary.TrySetMember(System.Dynamic.SetMemberBinder, object)", file="DynamicDictionary.cs"];
m11_81 [label="Entry Nancy.DynamicDictionary.Remove(System.Collections.Generic.KeyValuePair<string, dynamic>)", span="291-291", cluster="Nancy.DynamicDictionary.Remove(System.Collections.Generic.KeyValuePair<string, dynamic>)", file="DynamicDictionary.cs"];
m11_82 [label="var dynamicValueKeyValuePair = \r\n                GetDynamicKeyValuePair(item)", span="293-294", cluster="Nancy.DynamicDictionary.Remove(System.Collections.Generic.KeyValuePair<string, dynamic>)", file="DynamicDictionary.cs"];
m11_83 [label="return this.dictionary.Remove(dynamicValueKeyValuePair);", span="296-296", cluster="Nancy.DynamicDictionary.Remove(System.Collections.Generic.KeyValuePair<string, dynamic>)", file="DynamicDictionary.cs"];
m11_84 [label="Exit Nancy.DynamicDictionary.Remove(System.Collections.Generic.KeyValuePair<string, dynamic>)", span="291-291", cluster="Nancy.DynamicDictionary.Remove(System.Collections.Generic.KeyValuePair<string, dynamic>)", file="DynamicDictionary.cs"];
m11_49 [label="Entry object.GetHashCode()", span="0-0", cluster="object.GetHashCode()", file="DynamicDictionary.cs"];
m11_42 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="DynamicDictionary.cs"];
m11_53 [label="Entry Nancy.DynamicDictionary.Add(System.Collections.Generic.KeyValuePair<string, dynamic>)", span="190-190", cluster="Nancy.DynamicDictionary.Add(System.Collections.Generic.KeyValuePair<string, dynamic>)", file="DynamicDictionary.cs"];
m11_54 [label="this[item.Key] = item.Value", span="192-192", cluster="Nancy.DynamicDictionary.Add(System.Collections.Generic.KeyValuePair<string, dynamic>)", file="DynamicDictionary.cs"];
m11_55 [label="Exit Nancy.DynamicDictionary.Add(System.Collections.Generic.KeyValuePair<string, dynamic>)", span="190-190", cluster="Nancy.DynamicDictionary.Add(System.Collections.Generic.KeyValuePair<string, dynamic>)", file="DynamicDictionary.cs"];
m11_76 [label="Entry System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", file="DynamicDictionary.cs"];
m11_89 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="DynamicDictionary.cs"];
m11_67 [label="Entry Nancy.DynamicDictionary.Contains(System.Collections.Generic.KeyValuePair<string, dynamic>)", span="249-249", cluster="Nancy.DynamicDictionary.Contains(System.Collections.Generic.KeyValuePair<string, dynamic>)", file="DynamicDictionary.cs"];
m11_68 [label="var dynamicValueKeyValuePair =\r\n                GetDynamicKeyValuePair(item)", span="251-252", cluster="Nancy.DynamicDictionary.Contains(System.Collections.Generic.KeyValuePair<string, dynamic>)", file="DynamicDictionary.cs"];
m11_69 [label="return this.dictionary.Contains(dynamicValueKeyValuePair);", span="254-254", cluster="Nancy.DynamicDictionary.Contains(System.Collections.Generic.KeyValuePair<string, dynamic>)", file="DynamicDictionary.cs"];
m11_70 [label="Exit Nancy.DynamicDictionary.Contains(System.Collections.Generic.KeyValuePair<string, dynamic>)", span="249-249", cluster="Nancy.DynamicDictionary.Contains(System.Collections.Generic.KeyValuePair<string, dynamic>)", file="DynamicDictionary.cs"];
m11_93 [label="Entry string.Replace(string, string)", span="0-0", cluster="string.Replace(string, string)", file="DynamicDictionary.cs"];
m11_11 [label="Entry Nancy.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder, out object)", span="60-60", cluster="Nancy.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder, out object)", file="DynamicDictionary.cs"];
m11_12 [label="!dictionary.TryGetValue(binder.Name, out result)", span="62-62", cluster="Nancy.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder, out object)", file="DynamicDictionary.cs"];
m11_13 [label="result = new DynamicDictionaryValue(null)", span="64-64", cluster="Nancy.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder, out object)", file="DynamicDictionary.cs"];
m11_14 [label="return true;", span="67-67", cluster="Nancy.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder, out object)", file="DynamicDictionary.cs"];
m11_15 [label="Exit Nancy.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder, out object)", span="60-60", cluster="Nancy.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder, out object)", file="DynamicDictionary.cs"];
m11_90 [label="Entry Nancy.DynamicDictionary.GetNeutralKey(string)", span="315-315", cluster="Nancy.DynamicDictionary.GetNeutralKey(string)", file="DynamicDictionary.cs"];
m11_91 [label="return key.Replace(''-'', string.Empty);", span="317-317", cluster="Nancy.DynamicDictionary.GetNeutralKey(string)", file="DynamicDictionary.cs"];
m11_92 [label="Exit Nancy.DynamicDictionary.GetNeutralKey(string)", span="315-315", cluster="Nancy.DynamicDictionary.GetNeutralKey(string)", file="DynamicDictionary.cs"];
m11_18 [label="Entry Nancy.DynamicDictionary.GetDynamicMemberNames()", span="74-74", cluster="Nancy.DynamicDictionary.GetDynamicMemberNames()", file="DynamicDictionary.cs"];
m11_19 [label="return dictionary.Keys;", span="76-76", cluster="Nancy.DynamicDictionary.GetDynamicMemberNames()", file="DynamicDictionary.cs"];
m11_20 [label="Exit Nancy.DynamicDictionary.GetDynamicMemberNames()", span="74-74", cluster="Nancy.DynamicDictionary.GetDynamicMemberNames()", file="DynamicDictionary.cs"];
m11_43 [label="Entry Nancy.DynamicDictionary.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, object>>.GetEnumerator()", span="162-162", cluster="Nancy.DynamicDictionary.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, object>>.GetEnumerator()", file="DynamicDictionary.cs"];
m11_44 [label="return this.dictionary.GetEnumerator();", span="164-164", cluster="Nancy.DynamicDictionary.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, object>>.GetEnumerator()", file="DynamicDictionary.cs"];
m11_45 [label="Exit Nancy.DynamicDictionary.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, object>>.GetEnumerator()", span="162-162", cluster="Nancy.DynamicDictionary.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, object>>.GetEnumerator()", file="DynamicDictionary.cs"];
m11_80 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Remove(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Remove(TKey)", file="DynamicDictionary.cs"];
m11_66 [label="Entry System.Collections.Generic.ICollection<T>.Clear()", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Clear()", file="DynamicDictionary.cs"];
m11_46 [label="Entry Nancy.DynamicDictionary.GetHashCode()", span="171-171", cluster="Nancy.DynamicDictionary.GetHashCode()", file="DynamicDictionary.cs"];
m11_47 [label="return (dictionary != null ? dictionary.GetHashCode() : 0);", span="173-173", cluster="Nancy.DynamicDictionary.GetHashCode()", file="DynamicDictionary.cs"];
m11_48 [label="Exit Nancy.DynamicDictionary.GetHashCode()", span="171-171", cluster="Nancy.DynamicDictionary.GetHashCode()", file="DynamicDictionary.cs"];
m11_63 [label="Entry Nancy.DynamicDictionary.Clear()", span="229-229", cluster="Nancy.DynamicDictionary.Clear()", file="DynamicDictionary.cs"];
m11_64 [label="this.dictionary.Clear()", span="231-231", cluster="Nancy.DynamicDictionary.Clear()", file="DynamicDictionary.cs"];
m11_65 [label="Exit Nancy.DynamicDictionary.Clear()", span="229-229", cluster="Nancy.DynamicDictionary.Clear()", file="DynamicDictionary.cs"];
m11_17 [label="Entry Nancy.DynamicDictionaryValue.DynamicDictionaryValue(object)", span="17-17", cluster="Nancy.DynamicDictionaryValue.DynamicDictionaryValue(object)", file="DynamicDictionary.cs"];
m11_73 [label="Entry Nancy.DynamicDictionary.CopyTo(System.Collections.Generic.KeyValuePair<string, dynamic>[], int)", span="262-262", cluster="Nancy.DynamicDictionary.CopyTo(System.Collections.Generic.KeyValuePair<string, dynamic>[], int)", file="DynamicDictionary.cs"];
m11_74 [label="this.dictionary.CopyTo(array, arrayIndex)", span="264-264", cluster="Nancy.DynamicDictionary.CopyTo(System.Collections.Generic.KeyValuePair<string, dynamic>[], int)", file="DynamicDictionary.cs"];
m11_75 [label="Exit Nancy.DynamicDictionary.CopyTo(System.Collections.Generic.KeyValuePair<string, dynamic>[], int)", span="262-262", cluster="Nancy.DynamicDictionary.CopyTo(System.Collections.Generic.KeyValuePair<string, dynamic>[], int)", file="DynamicDictionary.cs"];
m11_0 [label="Entry Nancy.DynamicDictionary.Create(System.Collections.Generic.IDictionary<string, object>)", span="32-32", cluster="Nancy.DynamicDictionary.Create(System.Collections.Generic.IDictionary<string, object>)", file="DynamicDictionary.cs"];
m11_1 [label="var instance = new DynamicDictionary()", span="34-34", cluster="Nancy.DynamicDictionary.Create(System.Collections.Generic.IDictionary<string, object>)", file="DynamicDictionary.cs"];
m11_2 [label="values.Keys", span="36-36", cluster="Nancy.DynamicDictionary.Create(System.Collections.Generic.IDictionary<string, object>)", file="DynamicDictionary.cs"];
m11_3 [label="instance[key] = values[key]", span="38-38", cluster="Nancy.DynamicDictionary.Create(System.Collections.Generic.IDictionary<string, object>)", file="DynamicDictionary.cs"];
m11_4 [label="return instance;", span="41-41", cluster="Nancy.DynamicDictionary.Create(System.Collections.Generic.IDictionary<string, object>)", file="DynamicDictionary.cs"];
m11_5 [label="Exit Nancy.DynamicDictionary.Create(System.Collections.Generic.IDictionary<string, object>)", span="32-32", cluster="Nancy.DynamicDictionary.Create(System.Collections.Generic.IDictionary<string, object>)", file="DynamicDictionary.cs"];
m11_50 [label="Entry Nancy.DynamicDictionary.Add(string, dynamic)", span="181-181", cluster="Nancy.DynamicDictionary.Add(string, dynamic)", file="DynamicDictionary.cs"];
m11_51 [label="this[key] = value", span="183-183", cluster="Nancy.DynamicDictionary.Add(string, dynamic)", file="DynamicDictionary.cs"];
m11_52 [label="Exit Nancy.DynamicDictionary.Add(string, dynamic)", span="181-181", cluster="Nancy.DynamicDictionary.Add(string, dynamic)", file="DynamicDictionary.cs"];
m11_59 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="DynamicDictionary.cs"];
m11_60 [label="Entry Nancy.DynamicDictionary.TryGetValue(string, out dynamic)", span="221-221", cluster="Nancy.DynamicDictionary.TryGetValue(string, out dynamic)", file="DynamicDictionary.cs"];
m11_61 [label="return this.dictionary.TryGetValue(key, out value);", span="223-223", cluster="Nancy.DynamicDictionary.TryGetValue(string, out dynamic)", file="DynamicDictionary.cs"];
m11_62 [label="Exit Nancy.DynamicDictionary.TryGetValue(string, out dynamic)", span="221-221", cluster="Nancy.DynamicDictionary.TryGetValue(string, out dynamic)", file="DynamicDictionary.cs"];
m11_72 [label="Entry System.Collections.Generic.ICollection<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Contains(T)", file="DynamicDictionary.cs"];
m11_33 [label="Entry object.ReferenceEquals(object, object)", span="0-0", cluster="object.ReferenceEquals(object, object)", file="DynamicDictionary.cs"];
m11_77 [label="Entry Nancy.DynamicDictionary.Remove(string)", span="281-281", cluster="Nancy.DynamicDictionary.Remove(string)", file="DynamicDictionary.cs"];
m11_78 [label="return this.dictionary.Remove(key);", span="283-283", cluster="Nancy.DynamicDictionary.Remove(string)", file="DynamicDictionary.cs"];
m11_79 [label="Exit Nancy.DynamicDictionary.Remove(string)", span="281-281", cluster="Nancy.DynamicDictionary.Remove(string)", file="DynamicDictionary.cs"];
m11_16 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="DynamicDictionary.cs"];
m11_85 [label="Entry System.Collections.Generic.ICollection<T>.Remove(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Remove(T)", file="DynamicDictionary.cs"];
m11_34 [label="Entry object.Equals(object, object)", span="0-0", cluster="object.Equals(object, object)", file="DynamicDictionary.cs"];
m11_71 [label="Entry Nancy.DynamicDictionary.GetDynamicKeyValuePair(System.Collections.Generic.KeyValuePair<string, dynamic>)", span="308-308", cluster="Nancy.DynamicDictionary.GetDynamicKeyValuePair(System.Collections.Generic.KeyValuePair<string, dynamic>)", file="DynamicDictionary.cs"];
m11_86 [label="var dynamicValueKeyValuePair =\r\n                new KeyValuePair<string, dynamic>(item.Key, new DynamicDictionaryValue(item.Value))", span="310-311", cluster="Nancy.DynamicDictionary.GetDynamicKeyValuePair(System.Collections.Generic.KeyValuePair<string, dynamic>)", file="DynamicDictionary.cs"];
m11_87 [label="return dynamicValueKeyValuePair;", span="312-312", cluster="Nancy.DynamicDictionary.GetDynamicKeyValuePair(System.Collections.Generic.KeyValuePair<string, dynamic>)", file="DynamicDictionary.cs"];
m11_88 [label="Exit Nancy.DynamicDictionary.GetDynamicKeyValuePair(System.Collections.Generic.KeyValuePair<string, dynamic>)", span="308-308", cluster="Nancy.DynamicDictionary.GetDynamicKeyValuePair(System.Collections.Generic.KeyValuePair<string, dynamic>)", file="DynamicDictionary.cs"];
m11_24 [label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0", cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()", file="DynamicDictionary.cs"];
m11_6 [label="Entry Nancy.DynamicDictionary.DynamicDictionary()", span="10-10", cluster="Nancy.DynamicDictionary.DynamicDictionary()", file="DynamicDictionary.cs"];
m11_21 [label="Entry Nancy.DynamicDictionary.GetEnumerator()", span="83-83", cluster="Nancy.DynamicDictionary.GetEnumerator()", file="DynamicDictionary.cs"];
m11_22 [label="return dictionary.Keys.GetEnumerator();", span="85-85", cluster="Nancy.DynamicDictionary.GetEnumerator()", file="DynamicDictionary.cs"];
m11_23 [label="Exit Nancy.DynamicDictionary.GetEnumerator()", span="83-83", cluster="Nancy.DynamicDictionary.GetEnumerator()", file="DynamicDictionary.cs"];
m11_25 [label="Entry Nancy.DynamicDictionary.System.Collections.IEnumerable.GetEnumerator()", span="92-92", cluster="Nancy.DynamicDictionary.System.Collections.IEnumerable.GetEnumerator()", file="DynamicDictionary.cs"];
m11_26 [label="return dictionary.Keys.GetEnumerator();", span="94-94", cluster="Nancy.DynamicDictionary.System.Collections.IEnumerable.GetEnumerator()", file="DynamicDictionary.cs"];
m11_27 [label="Exit Nancy.DynamicDictionary.System.Collections.IEnumerable.GetEnumerator()", span="92-92", cluster="Nancy.DynamicDictionary.System.Collections.IEnumerable.GetEnumerator()", file="DynamicDictionary.cs"];
m11_94 [label="Nancy.DynamicDictionary", span="", file="DynamicDictionary.cs"];
m13_27 [label="Entry Unk.GetRulesForMember", span="", cluster="Unk.GetRulesForMember", file="FluentValidationValidator.cs"];
m13_25 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="FluentValidationValidator.cs"];
m13_44 [label="Entry Nancy.Validation.FluentValidation.FluentValidationValidator.GetValidationRule(PropertyRule, IPropertyValidator)", span="98-98", cluster="Nancy.Validation.FluentValidation.FluentValidationValidator.GetValidationRule(PropertyRule, IPropertyValidator)", file="FluentValidationValidator.cs"];
m13_45 [label="return this.factory.Create(propertyValidator).GetRules(rule, propertyValidator);", span="100-100", cluster="Nancy.Validation.FluentValidation.FluentValidationValidator.GetValidationRule(PropertyRule, IPropertyValidator)", file="FluentValidationValidator.cs"];
m13_46 [label="Exit Nancy.Validation.FluentValidation.FluentValidationValidator.GetValidationRule(PropertyRule, IPropertyValidator)", span="98-98", cluster="Nancy.Validation.FluentValidation.FluentValidationValidator.GetValidationRule(PropertyRule, IPropertyValidator)", file="FluentValidationValidator.cs"];
m13_40 [label="Entry ModelValidationError.cstr", span="", cluster="ModelValidationError.cstr", file="FluentValidationValidator.cs"];
m13_24 [label="Entry Unk.CreateDescriptor", span="", cluster="Unk.CreateDescriptor", file="FluentValidationValidator.cs"];
m13_48 [label="Entry Nancy.Validation.FluentValidation.IFluentAdapter.GetRules(PropertyRule, IPropertyValidator)", span="22-22", cluster="Nancy.Validation.FluentValidation.IFluentAdapter.GetRules(PropertyRule, IPropertyValidator)", file="FluentValidationValidator.cs"];
m13_10 [label="Entry Unk.Validate", span="", cluster="Unk.Validate", file="FluentValidationValidator.cs"];
m13_28 [label="Entry Unk.>", span="", cluster="Unk.>", file="FluentValidationValidator.cs"];
m13_12 [label="Entry Nancy.Validation.ModelValidationResult.ModelValidationResult(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationError>)", span="20-20", cluster="Nancy.Validation.ModelValidationResult.ModelValidationResult(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationError>)", file="FluentValidationValidator.cs"];
m13_31 [label="Entry Nancy.Validation.ModelValidationDescriptor.ModelValidationDescriptor(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationRule>, System.Type)", span="15-15", cluster="Nancy.Validation.ModelValidationDescriptor.ModelValidationDescriptor(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationRule>, System.Type)", file="FluentValidationValidator.cs"];
m13_0 [label="Entry Nancy.Validation.FluentValidation.FluentValidationValidator.FluentValidationValidator(IValidator, Nancy.Validation.FluentValidation.IFluentAdapterFactory, System.Type)", span="25-25", cluster="Nancy.Validation.FluentValidation.FluentValidationValidator.FluentValidationValidator(IValidator, Nancy.Validation.FluentValidation.IFluentAdapterFactory, System.Type)", file="FluentValidationValidator.cs"];
m13_1 [label="this.ModelType = modelType", span="27-27", cluster="Nancy.Validation.FluentValidation.FluentValidationValidator.FluentValidationValidator(IValidator, Nancy.Validation.FluentValidation.IFluentAdapterFactory, System.Type)", file="FluentValidationValidator.cs"];
m13_2 [label="this.validator = validator", span="28-28", cluster="Nancy.Validation.FluentValidation.FluentValidationValidator.FluentValidationValidator(IValidator, Nancy.Validation.FluentValidation.IFluentAdapterFactory, System.Type)", file="FluentValidationValidator.cs"];
m13_3 [label="this.factory = factory", span="29-29", cluster="Nancy.Validation.FluentValidation.FluentValidationValidator.FluentValidationValidator(IValidator, Nancy.Validation.FluentValidation.IFluentAdapterFactory, System.Type)", file="FluentValidationValidator.cs"];
m13_4 [label="Exit Nancy.Validation.FluentValidation.FluentValidationValidator.FluentValidationValidator(IValidator, Nancy.Validation.FluentValidation.IFluentAdapterFactory, System.Type)", span="25-25", cluster="Nancy.Validation.FluentValidation.FluentValidationValidator.FluentValidationValidator(IValidator, Nancy.Validation.FluentValidation.IFluentAdapterFactory, System.Type)", file="FluentValidationValidator.cs"];
m13_13 [label="Entry Nancy.Validation.FluentValidation.FluentValidationValidator.CreateDescriptor()", span="63-63", cluster="Nancy.Validation.FluentValidation.FluentValidationValidator.CreateDescriptor()", file="FluentValidationValidator.cs"];
m13_14 [label="var fluentDescriptor =\r\n                this.validator.CreateDescriptor()", span="65-66", cluster="Nancy.Validation.FluentValidation.FluentValidationValidator.CreateDescriptor()", file="FluentValidationValidator.cs"];
m13_15 [label="var rules = new List<ModelValidationRule>()", span="68-68", cluster="Nancy.Validation.FluentValidation.FluentValidationValidator.CreateDescriptor()", file="FluentValidationValidator.cs"];
m13_16 [label="var membersWithValidators = \r\n                fluentDescriptor.GetMembersWithValidators()", span="70-71", cluster="Nancy.Validation.FluentValidation.FluentValidationValidator.CreateDescriptor()", file="FluentValidationValidator.cs"];
m13_18 [label="var fluentRules = fluentDescriptor\r\n                    .GetRulesForMember(memberWithValidators.Key)\r\n                    .OfType<PropertyRule>()", span="75-77", cluster="Nancy.Validation.FluentValidation.FluentValidationValidator.CreateDescriptor()", file="FluentValidationValidator.cs"];
m13_21 [label="rules.AddRange(GetValidationRule(rule, v))", span="83-83", cluster="Nancy.Validation.FluentValidation.FluentValidationValidator.CreateDescriptor()", file="FluentValidationValidator.cs"];
m13_22 [label="return new ModelValidationDescriptor(rules, this.ModelType);", span="88-88", cluster="Nancy.Validation.FluentValidation.FluentValidationValidator.CreateDescriptor()", file="FluentValidationValidator.cs"];
m13_17 [label=membersWithValidators, span="73-73", cluster="Nancy.Validation.FluentValidation.FluentValidationValidator.CreateDescriptor()", file="FluentValidationValidator.cs"];
m13_19 [label=fluentRules, span="79-79", cluster="Nancy.Validation.FluentValidation.FluentValidationValidator.CreateDescriptor()", file="FluentValidationValidator.cs"];
m13_20 [label="rule.Validators", span="81-81", cluster="Nancy.Validation.FluentValidation.FluentValidationValidator.CreateDescriptor()", file="FluentValidationValidator.cs"];
m13_23 [label="Exit Nancy.Validation.FluentValidation.FluentValidationValidator.CreateDescriptor()", span="63-63", cluster="Nancy.Validation.FluentValidation.FluentValidationValidator.CreateDescriptor()", file="FluentValidationValidator.cs"];
m13_32 [label="Entry Nancy.Validation.FluentValidation.FluentValidationValidator.GetErrors(ValidationResult)", span="91-91", cluster="Nancy.Validation.FluentValidation.FluentValidationValidator.GetErrors(ValidationResult)", file="FluentValidationValidator.cs"];
m13_33 [label="return results.IsValid ? \r\n                Enumerable.Empty<ModelValidationError>() :\r\n                results.Errors.Select(error => new ModelValidationError(new[] { error.PropertyName }, s => error.ErrorMessage));", span="93-95", cluster="Nancy.Validation.FluentValidation.FluentValidationValidator.GetErrors(ValidationResult)", color=green, community=0, file="FluentValidationValidator.cs"];
m13_34 [label="Exit Nancy.Validation.FluentValidation.FluentValidationValidator.GetErrors(ValidationResult)", span="91-91", cluster="Nancy.Validation.FluentValidation.FluentValidationValidator.GetErrors(ValidationResult)", file="FluentValidationValidator.cs"];
m13_11 [label="Entry Unk.GetErrors", span="", cluster="Unk.GetErrors", file="FluentValidationValidator.cs"];
m13_26 [label="Entry Unk.GetMembersWithValidators", span="", cluster="Unk.GetMembersWithValidators", file="FluentValidationValidator.cs"];
m13_5 [label="Entry Nancy.Validation.FluentValidation.FluentValidationValidator.Validate(object, Nancy.NancyContext)", span="52-52", cluster="Nancy.Validation.FluentValidation.FluentValidationValidator.Validate(object, Nancy.NancyContext)", file="FluentValidationValidator.cs"];
m13_6 [label="var result =\r\n                this.validator.Validate(instance)", span="54-55", cluster="Nancy.Validation.FluentValidation.FluentValidationValidator.Validate(object, Nancy.NancyContext)", file="FluentValidationValidator.cs"];
m13_7 [label="var errors =\r\n                GetErrors(result)", span="57-58", cluster="Nancy.Validation.FluentValidation.FluentValidationValidator.Validate(object, Nancy.NancyContext)", file="FluentValidationValidator.cs"];
m13_8 [label="return new ModelValidationResult(errors);", span="60-60", cluster="Nancy.Validation.FluentValidation.FluentValidationValidator.Validate(object, Nancy.NancyContext)", file="FluentValidationValidator.cs"];
m13_9 [label="Exit Nancy.Validation.FluentValidation.FluentValidationValidator.Validate(object, Nancy.NancyContext)", span="52-52", cluster="Nancy.Validation.FluentValidation.FluentValidationValidator.Validate(object, Nancy.NancyContext)", file="FluentValidationValidator.cs"];
m13_41 [label="Entry lambda expression", span="95-95", cluster="lambda expression", file="FluentValidationValidator.cs"];
m13_37 [label="Entry lambda expression", span="95-95", cluster="lambda expression", file="FluentValidationValidator.cs"];
m13_38 [label="new ModelValidationError(new[] { error.PropertyName }, s => error.ErrorMessage)", span="95-95", cluster="lambda expression", color=green, community=0, file="FluentValidationValidator.cs"];
m13_42 [label="error.ErrorMessage", span="95-95", cluster="lambda expression", color=green, community=0, file="FluentValidationValidator.cs"];
m13_39 [label="Exit lambda expression", span="95-95", cluster="lambda expression", file="FluentValidationValidator.cs"];
m13_43 [label="Exit lambda expression", span="95-95", cluster="lambda expression", file="FluentValidationValidator.cs"];
m13_36 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="FluentValidationValidator.cs"];
m13_30 [label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="FluentValidationValidator.cs"];
m13_47 [label="Entry Nancy.Validation.FluentValidation.IFluentAdapterFactory.Create(IPropertyValidator)", span="14-14", cluster="Nancy.Validation.FluentValidation.IFluentAdapterFactory.Create(IPropertyValidator)", file="FluentValidationValidator.cs"];
m13_29 [label="Entry Unk.GetValidationRule", span="", cluster="Unk.GetValidationRule", file="FluentValidationValidator.cs"];
m13_35 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="FluentValidationValidator.cs"];
m13_49 [label="Nancy.Validation.FluentValidation.FluentValidationValidator", span="", file="FluentValidationValidator.cs"];
m13_50 [label="?", span="", file="FluentValidationValidator.cs"];
m14_3 [label="Entry System.Guid.TryParse(string, out System.Guid)", span="0-0", cluster="System.Guid.TryParse(string, out System.Guid)", file="GuidRouteSegmentConstraint.cs"];
m14_0 [label="Entry Nancy.Routing.Constraints.GuidRouteSegmentConstraint.TryMatch(string, string, out System.Guid)", span="11-11", cluster="Nancy.Routing.Constraints.GuidRouteSegmentConstraint.TryMatch(string, string, out System.Guid)", file="GuidRouteSegmentConstraint.cs"];
m14_1 [label="return Guid.TryParse(segment, out matchedValue);", span="13-13", cluster="Nancy.Routing.Constraints.GuidRouteSegmentConstraint.TryMatch(string, string, out System.Guid)", file="GuidRouteSegmentConstraint.cs"];
m14_2 [label="Exit Nancy.Routing.Constraints.GuidRouteSegmentConstraint.TryMatch(string, string, out System.Guid)", span="11-11", cluster="Nancy.Routing.Constraints.GuidRouteSegmentConstraint.TryMatch(string, string, out System.Guid)", file="GuidRouteSegmentConstraint.cs"];
m15_0 [label="Entry Nancy.Routing.Constraints.IntRouteSegmentConstraint.TryMatch(string, string, out long)", span="11-11", cluster="Nancy.Routing.Constraints.IntRouteSegmentConstraint.TryMatch(string, string, out long)", file="IntRouteSegmentConstraint.cs"];
m15_1 [label="return long.TryParse(segment, NumberStyles.Integer, CultureInfo.InvariantCulture, out matchedValue);", span="13-13", cluster="Nancy.Routing.Constraints.IntRouteSegmentConstraint.TryMatch(string, string, out long)", file="IntRouteSegmentConstraint.cs"];
m15_2 [label="Exit Nancy.Routing.Constraints.IntRouteSegmentConstraint.TryMatch(string, string, out long)", span="11-11", cluster="Nancy.Routing.Constraints.IntRouteSegmentConstraint.TryMatch(string, string, out long)", file="IntRouteSegmentConstraint.cs"];
m15_3 [label="Entry long.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out long)", span="0-0", cluster="long.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out long)", file="IntRouteSegmentConstraint.cs"];
m16_2 [label="Entry Nancy.Routing.Constraints.IRouteSegmentConstraint.GetMatch(string, string, string)", span="8-8", cluster="Nancy.Routing.Constraints.IRouteSegmentConstraint.GetMatch(string, string, string)", file="IRouteSegmentConstraint.cs"];
m16_3 [label="Exit Nancy.Routing.Constraints.IRouteSegmentConstraint.GetMatch(string, string, string)", span="8-8", cluster="Nancy.Routing.Constraints.IRouteSegmentConstraint.GetMatch(string, string, string)", file="IRouteSegmentConstraint.cs"];
m16_0 [label="Entry Nancy.Routing.Constraints.IRouteSegmentConstraint.Matches(string)", span="6-6", cluster="Nancy.Routing.Constraints.IRouteSegmentConstraint.Matches(string)", file="IRouteSegmentConstraint.cs"];
m16_1 [label="Exit Nancy.Routing.Constraints.IRouteSegmentConstraint.Matches(string)", span="6-6", cluster="Nancy.Routing.Constraints.IRouteSegmentConstraint.Matches(string)", file="IRouteSegmentConstraint.cs"];
m17_0 [label="Entry Nancy.Routing.Constraints.LengthRouteSegmentConstraint.TryMatch(string, string[], out string)", span="9-9", cluster="Nancy.Routing.Constraints.LengthRouteSegmentConstraint.TryMatch(string, string[], out string)", file="LengthRouteSegmentConstraint.cs"];
m17_1 [label="int minLength", span="11-11", cluster="Nancy.Routing.Constraints.LengthRouteSegmentConstraint.TryMatch(string, string[], out string)", file="LengthRouteSegmentConstraint.cs"];
m17_3 [label="parameters.Length == 2", span="14-14", cluster="Nancy.Routing.Constraints.LengthRouteSegmentConstraint.TryMatch(string, string[], out string)", file="LengthRouteSegmentConstraint.cs"];
m17_4 [label="!this.TryParseInt(parameters[0], out minLength) ||\r\n                    !this.TryParseInt(parameters[1], out maxLength)", span="16-17", cluster="Nancy.Routing.Constraints.LengthRouteSegmentConstraint.TryMatch(string, string[], out string)", file="LengthRouteSegmentConstraint.cs"];
m17_7 [label="parameters.Length == 1", span="23-23", cluster="Nancy.Routing.Constraints.LengthRouteSegmentConstraint.TryMatch(string, string[], out string)", file="LengthRouteSegmentConstraint.cs"];
m17_9 [label="!this.TryParseInt(parameters[0], out maxLength)", span="27-27", cluster="Nancy.Routing.Constraints.LengthRouteSegmentConstraint.TryMatch(string, string[], out string)", file="LengthRouteSegmentConstraint.cs"];
m17_14 [label="segment.Length < minLength || segment.Length > maxLength", span="39-39", cluster="Nancy.Routing.Constraints.LengthRouteSegmentConstraint.TryMatch(string, string[], out string)", file="LengthRouteSegmentConstraint.cs"];
m17_17 [label="matchedValue = segment", span="45-45", cluster="Nancy.Routing.Constraints.LengthRouteSegmentConstraint.TryMatch(string, string[], out string)", file="LengthRouteSegmentConstraint.cs"];
m17_2 [label="int maxLength", span="12-12", cluster="Nancy.Routing.Constraints.LengthRouteSegmentConstraint.TryMatch(string, string[], out string)", file="LengthRouteSegmentConstraint.cs"];
m17_5 [label="matchedValue = null", span="19-19", cluster="Nancy.Routing.Constraints.LengthRouteSegmentConstraint.TryMatch(string, string[], out string)", file="LengthRouteSegmentConstraint.cs"];
m17_6 [label="return false;", span="20-20", cluster="Nancy.Routing.Constraints.LengthRouteSegmentConstraint.TryMatch(string, string[], out string)", file="LengthRouteSegmentConstraint.cs"];
m17_8 [label="minLength = 0", span="25-25", cluster="Nancy.Routing.Constraints.LengthRouteSegmentConstraint.TryMatch(string, string[], out string)", file="LengthRouteSegmentConstraint.cs"];
m17_12 [label="matchedValue = null", span="35-35", cluster="Nancy.Routing.Constraints.LengthRouteSegmentConstraint.TryMatch(string, string[], out string)", file="LengthRouteSegmentConstraint.cs"];
m17_10 [label="matchedValue = null", span="29-29", cluster="Nancy.Routing.Constraints.LengthRouteSegmentConstraint.TryMatch(string, string[], out string)", file="LengthRouteSegmentConstraint.cs"];
m17_11 [label="return false;", span="30-30", cluster="Nancy.Routing.Constraints.LengthRouteSegmentConstraint.TryMatch(string, string[], out string)", file="LengthRouteSegmentConstraint.cs"];
m17_13 [label="return false;", span="36-36", cluster="Nancy.Routing.Constraints.LengthRouteSegmentConstraint.TryMatch(string, string[], out string)", file="LengthRouteSegmentConstraint.cs"];
m17_15 [label="matchedValue = null", span="41-41", cluster="Nancy.Routing.Constraints.LengthRouteSegmentConstraint.TryMatch(string, string[], out string)", file="LengthRouteSegmentConstraint.cs"];
m17_16 [label="return false;", span="42-42", cluster="Nancy.Routing.Constraints.LengthRouteSegmentConstraint.TryMatch(string, string[], out string)", file="LengthRouteSegmentConstraint.cs"];
m17_18 [label="return true;", span="46-46", cluster="Nancy.Routing.Constraints.LengthRouteSegmentConstraint.TryMatch(string, string[], out string)", file="LengthRouteSegmentConstraint.cs"];
m17_19 [label="Exit Nancy.Routing.Constraints.LengthRouteSegmentConstraint.TryMatch(string, string[], out string)", span="9-9", cluster="Nancy.Routing.Constraints.LengthRouteSegmentConstraint.TryMatch(string, string[], out string)", file="LengthRouteSegmentConstraint.cs"];
m17_20 [label="Entry Nancy.Routing.Constraints.ParameterizedRouteSegmentConstraintBase<T>.TryParseInt(string, out int)", span="19-19", cluster="Nancy.Routing.Constraints.ParameterizedRouteSegmentConstraintBase<T>.TryParseInt(string, out int)", file="LengthRouteSegmentConstraint.cs"];
m17_21 [label="Nancy.Routing.Constraints.LengthRouteSegmentConstraint", span="", file="LengthRouteSegmentConstraint.cs"];
m18_54 [label="Entry Unk.Same", span="", cluster="Unk.Same", file="MaxLengthRouteSegmentConstraint.cs"];
m18_153 [label="Entry Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PlusEquals_with_another_pipeline_adds_those_pipeline_items_to_end_of_pipeline()", span="132-132", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PlusEquals_with_another_pipeline_adds_those_pipeline_items_to_end_of_pipeline()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_154 [label="Func<NancyContext, Response> item1 = (r) => { return null; }", span="134-134", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PlusEquals_with_another_pipeline_adds_those_pipeline_items_to_end_of_pipeline()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_155 [label="Func<NancyContext, Response> item2 = (r) => { return CreateResponse(); }", span="135-135", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PlusEquals_with_another_pipeline_adds_those_pipeline_items_to_end_of_pipeline()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_156 [label="pipeline.AddItemToEndOfPipeline(item1)", span="136-136", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PlusEquals_with_another_pipeline_adds_those_pipeline_items_to_end_of_pipeline()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_157 [label="pipeline.AddItemToEndOfPipeline(item2)", span="137-137", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PlusEquals_with_another_pipeline_adds_those_pipeline_items_to_end_of_pipeline()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_158 [label="Func<NancyContext, Response> item3 = (r) => { return null; }", span="138-138", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PlusEquals_with_another_pipeline_adds_those_pipeline_items_to_end_of_pipeline()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_159 [label="Func<NancyContext, Response> item4 = (r) => { return CreateResponse(); }", span="139-139", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PlusEquals_with_another_pipeline_adds_those_pipeline_items_to_end_of_pipeline()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_161 [label="pipeline2.AddItemToEndOfPipeline(item3)", span="141-141", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PlusEquals_with_another_pipeline_adds_those_pipeline_items_to_end_of_pipeline()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_165 [label="Assert.Same(item3, pipeline.PipelineItems.ElementAt(2))", span="147-147", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PlusEquals_with_another_pipeline_adds_those_pipeline_items_to_end_of_pipeline()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_160 [label="var pipeline2 = new BeforePipeline()", span="140-140", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PlusEquals_with_another_pipeline_adds_those_pipeline_items_to_end_of_pipeline()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_162 [label="pipeline2.AddItemToEndOfPipeline(item4)", span="142-142", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PlusEquals_with_another_pipeline_adds_those_pipeline_items_to_end_of_pipeline()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_166 [label="Assert.Same(item4, pipeline.PipelineItems.Last())", span="148-148", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PlusEquals_with_another_pipeline_adds_those_pipeline_items_to_end_of_pipeline()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_163 [label="pipeline += pipeline2", span="144-144", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PlusEquals_with_another_pipeline_adds_those_pipeline_items_to_end_of_pipeline()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_164 [label="Assert.Equal(4, pipeline.PipelineItems.Count())", span="146-146", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PlusEquals_with_another_pipeline_adds_those_pipeline_items_to_end_of_pipeline()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_167 [label="Exit Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PlusEquals_with_another_pipeline_adds_those_pipeline_items_to_end_of_pipeline()", span="132-132", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PlusEquals_with_another_pipeline_adds_those_pipeline_items_to_end_of_pipeline()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_8 [label="Entry Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PreRequestHooksPipelineFixture()", span="20-20", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PreRequestHooksPipelineFixture()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_9 [label="this.pipeline = new BeforePipeline()", span="22-22", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PreRequestHooksPipelineFixture()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_10 [label="Exit Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PreRequestHooksPipelineFixture()", span="20-20", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PreRequestHooksPipelineFixture()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_93 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="MaxLengthRouteSegmentConstraint.cs"];
m18_180 [label="Entry Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_cast_to_func_and_invoked_members_are_invoked()", span="152-152", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_cast_to_func_and_invoked_members_are_invoked()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_181 [label="var item1Called = false", span="154-154", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_cast_to_func_and_invoked_members_are_invoked()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_182 [label="Func<NancyContext, Response> item1 = (r) => { item1Called = true; return null; }", span="155-155", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_cast_to_func_and_invoked_members_are_invoked()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_183 [label="var item2Called = false", span="156-156", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_cast_to_func_and_invoked_members_are_invoked()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_187 [label="pipeline.AddItemToEndOfPipeline(item1)", span="160-160", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_cast_to_func_and_invoked_members_are_invoked()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_184 [label="Func<NancyContext, Response> item2 = (r) => { item2Called = true; return null; }", span="157-157", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_cast_to_func_and_invoked_members_are_invoked()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_185 [label="var item3Called = false", span="158-158", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_cast_to_func_and_invoked_members_are_invoked()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_188 [label="pipeline.AddItemToEndOfPipeline(item2)", span="161-161", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_cast_to_func_and_invoked_members_are_invoked()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_186 [label="Func<NancyContext, Response> item3 = (r) => { item3Called = true; return null; }", span="159-159", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_cast_to_func_and_invoked_members_are_invoked()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_189 [label="pipeline.AddItemToEndOfPipeline(item3)", span="162-162", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_cast_to_func_and_invoked_members_are_invoked()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_190 [label="Func<NancyContext, Response> func = pipeline", span="164-164", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_cast_to_func_and_invoked_members_are_invoked()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_191 [label="func.Invoke(CreateContext())", span="165-165", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_cast_to_func_and_invoked_members_are_invoked()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_192 [label="Assert.True(item1Called)", span="167-167", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_cast_to_func_and_invoked_members_are_invoked()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_193 [label="Assert.True(item2Called)", span="168-168", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_cast_to_func_and_invoked_members_are_invoked()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_194 [label="Assert.True(item3Called)", span="169-169", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_cast_to_func_and_invoked_members_are_invoked()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_195 [label="Exit Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_cast_to_func_and_invoked_members_are_invoked()", span="152-152", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_cast_to_func_and_invoked_members_are_invoked()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_12 [label="Entry Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_stops_pipeline_execution()", span="26-26", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_stops_pipeline_execution()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_13 [label="var item1Called = false", span="28-28", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_stops_pipeline_execution()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_14 [label="Func<NancyContext, Response> item1 = (r) => { item1Called = true; return null; }", span="29-29", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_stops_pipeline_execution()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_15 [label="var item2Called = false", span="30-30", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_stops_pipeline_execution()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_19 [label="pipeline.AddItemToEndOfPipeline(item1)", span="34-34", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_stops_pipeline_execution()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_16 [label="Func<NancyContext, Response> item2 = (r) => { item2Called = true; return CreateResponse(); }", span="31-31", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_stops_pipeline_execution()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_17 [label="var item3Called = false", span="32-32", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_stops_pipeline_execution()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_20 [label="pipeline.AddItemToEndOfPipeline(item2)", span="35-35", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_stops_pipeline_execution()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_18 [label="Func<NancyContext, Response> item3 = (r) => { item3Called = true; return null; }", span="33-33", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_stops_pipeline_execution()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_21 [label="pipeline.AddItemToEndOfPipeline(item3)", span="36-36", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_stops_pipeline_execution()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_22 [label="pipeline.Invoke(CreateContext())", span="38-38", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_stops_pipeline_execution()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_23 [label="Assert.True(item1Called)", span="40-40", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_stops_pipeline_execution()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_24 [label="Assert.True(item2Called)", span="41-41", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_stops_pipeline_execution()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_25 [label="Assert.False(item3Called)", span="42-42", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_stops_pipeline_execution()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_26 [label="Exit Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_stops_pipeline_execution()", span="26-26", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_stops_pipeline_execution()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_209 [label="Entry Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_cast_from_func_creates_a_pipeline_with_one_item()", span="173-173", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_cast_from_func_creates_a_pipeline_with_one_item()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_210 [label="Func<NancyContext, Response> item1 = (r) => null", span="175-175", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_cast_from_func_creates_a_pipeline_with_one_item()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_211 [label="BeforePipeline castPipeline = item1", span="177-177", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_cast_from_func_creates_a_pipeline_with_one_item()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_213 [label="Assert.Same(item1, castPipeline.PipelineItems.First())", span="180-180", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_cast_from_func_creates_a_pipeline_with_one_item()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_212 [label="Assert.Equal(1, castPipeline.PipelineItems.Count())", span="179-179", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_cast_from_func_creates_a_pipeline_with_one_item()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_214 [label="Exit Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_cast_from_func_creates_a_pipeline_with_one_item()", span="173-173", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_cast_from_func_creates_a_pipeline_with_one_item()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_218 [label="Entry Nancy.Tests.Unit.PreRequestHooksPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", span="184-184", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_219 [label="var item1Called = false", span="186-186", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_220 [label="Func<NancyContext, Response> item1 = (r) => { item1Called = true; return null; }", span="187-187", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_221 [label="var item2Called = false", span="188-188", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_227 [label="pipeline += item1", span="194-194", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_222 [label="Func<NancyContext, Response> item2 = (r) => { item2Called = true; return null; }", span="189-189", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_223 [label="var item3Called = false", span="190-190", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_228 [label="pipeline += item2", span="195-195", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_224 [label="Func<NancyContext, Response> item3 = (r) => { item3Called = true; return null; }", span="191-191", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_225 [label="var item4Called = false", span="192-192", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_230 [label="subPipeline += item3", span="197-197", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_226 [label="Func<NancyContext, Response> item4 = (r) => { item4Called = true; return null; }", span="193-193", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_231 [label="subPipeline += item4", span="198-198", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_229 [label="var subPipeline = new BeforePipeline()", span="196-196", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_232 [label="pipeline.AddItemToEndOfPipeline(subPipeline)", span="200-200", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_233 [label="pipeline.Invoke(CreateContext())", span="201-201", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_234 [label="Assert.True(item1Called)", span="203-203", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_235 [label="Assert.True(item2Called)", span="204-204", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_236 [label="Assert.True(item3Called)", span="205-205", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_237 [label="Assert.True(item4Called)", span="206-206", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_238 [label="Exit Nancy.Tests.Unit.PreRequestHooksPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", span="184-184", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_11 [label="Entry Nancy.BeforePipeline.BeforePipeline()", span="27-27", cluster="Nancy.BeforePipeline.BeforePipeline()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_196 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="MaxLengthRouteSegmentConstraint.cs"];
m18_30 [label="Entry Unk.False", span="", cluster="Unk.False", file="MaxLengthRouteSegmentConstraint.cs"];
m18_109 [label="Entry Nancy.BeforePipeline.AddItemToStartOfPipeline(System.Func<Nancy.NancyContext, Nancy.Response>)", span="96-96", cluster="Nancy.BeforePipeline.AddItemToStartOfPipeline(System.Func<Nancy.NancyContext, Nancy.Response>)", file="MaxLengthRouteSegmentConstraint.cs"];
m18_43 [label="Entry Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_returns_that_response()", span="46-46", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_returns_that_response()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_44 [label="var response = CreateResponse()", span="48-48", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_returns_that_response()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_45 [label="Func<NancyContext, Response> item1 = (r) => null", span="49-49", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_returns_that_response()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_46 [label="Func<NancyContext, Response> item2 = (r) => response", span="50-50", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_returns_that_response()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_52 [label="Assert.Same(response, result)", span="58-58", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_returns_that_response()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_48 [label="pipeline.AddItemToEndOfPipeline(item1)", span="52-52", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_returns_that_response()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_47 [label="Func<NancyContext, Response> item3 = (r) => null", span="51-51", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_returns_that_response()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_49 [label="pipeline.AddItemToEndOfPipeline(item2)", span="53-53", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_returns_that_response()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_50 [label="pipeline.AddItemToEndOfPipeline(item3)", span="54-54", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_returns_that_response()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_51 [label="var result = pipeline.Invoke(CreateContext())", span="56-56", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_returns_that_response()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_53 [label="Exit Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_returns_that_response()", span="46-46", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_member_returning_a_response_returns_that_response()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_27 [label="Entry Nancy.BeforePipeline.AddItemToEndOfPipeline(System.Func<Nancy.NancyContext, Nancy.Response>)", span="105-105", cluster="Nancy.BeforePipeline.AddItemToEndOfPipeline(System.Func<Nancy.NancyContext, Nancy.Response>)", file="MaxLengthRouteSegmentConstraint.cs"];
m18_101 [label="Entry Nancy.Tests.Unit.PreRequestHooksPipelineFixture.AddItemToStartOfPipeline_adds_to_the_end_of_the_pipeline()", span="90-90", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.AddItemToStartOfPipeline_adds_to_the_end_of_the_pipeline()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_102 [label="Func<NancyContext, Response> item1 = (r) => { return null; }", span="92-92", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.AddItemToStartOfPipeline_adds_to_the_end_of_the_pipeline()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_103 [label="Func<NancyContext, Response> item2 = (r) => { return new Response(); }", span="93-93", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.AddItemToStartOfPipeline_adds_to_the_end_of_the_pipeline()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_105 [label="pipeline.AddItemToStartOfPipeline(item1)", span="96-96", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.AddItemToStartOfPipeline_adds_to_the_end_of_the_pipeline()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_107 [label="Assert.Same(item1, pipeline.PipelineItems.First())", span="99-99", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.AddItemToStartOfPipeline_adds_to_the_end_of_the_pipeline()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_104 [label="pipeline.AddItemToEndOfPipeline(item2)", span="94-94", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.AddItemToStartOfPipeline_adds_to_the_end_of_the_pipeline()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_106 [label="Assert.Equal(2, pipeline.PipelineItems.Count())", span="98-98", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.AddItemToStartOfPipeline_adds_to_the_end_of_the_pipeline()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_108 [label="Exit Nancy.Tests.Unit.PreRequestHooksPipelineFixture.AddItemToStartOfPipeline_adds_to_the_end_of_the_pipeline()", span="90-90", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.AddItemToStartOfPipeline_adds_to_the_end_of_the_pipeline()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_94 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_4 [label="Entry Nancy.Tests.Unit.PreRequestHooksPipelineFixture.CreateContext()", span="15-15", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.CreateContext()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_5 [label="return new NancyContext();", span="17-17", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.CreateContext()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_6 [label="Exit Nancy.Tests.Unit.PreRequestHooksPipelineFixture.CreateContext()", span="15-15", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.CreateContext()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_74 [label="Entry Unk.Null", span="", cluster="Unk.Null", file="MaxLengthRouteSegmentConstraint.cs"];
m18_7 [label="Entry Nancy.NancyContext.NancyContext()", span="14-14", cluster="Nancy.NancyContext.NancyContext()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_110 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_251 [label="Entry lambda expression", span="193-193", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_31 [label="Entry lambda expression", span="29-29", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_32 [label="item1Called = true", span="29-29", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_33 [label="return null;", span="29-29", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_34 [label="Exit lambda expression", span="29-29", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_35 [label="Entry lambda expression", span="31-31", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_36 [label="item2Called = true", span="31-31", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_37 [label="return CreateResponse();", span="31-31", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_38 [label="Exit lambda expression", span="31-31", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_39 [label="Entry lambda expression", span="33-33", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_40 [label="item3Called = true", span="33-33", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_41 [label="return null;", span="33-33", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_42 [label="Exit lambda expression", span="33-33", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_59 [label=response, span="50-50", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_55 [label="Entry lambda expression", span="49-49", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_56 [label=null, span="49-49", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_57 [label="Exit lambda expression", span="49-49", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_58 [label="Entry lambda expression", span="50-50", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_60 [label="Exit lambda expression", span="50-50", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_61 [label="Entry lambda expression", span="51-51", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_62 [label=null, span="51-51", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_63 [label="Exit lambda expression", span="51-51", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_75 [label="Entry lambda expression", span="64-64", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_76 [label=null, span="64-64", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_77 [label="Exit lambda expression", span="64-64", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_78 [label="Entry lambda expression", span="65-65", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_79 [label=null, span="65-65", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_80 [label="Exit lambda expression", span="65-65", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_81 [label="Entry lambda expression", span="66-66", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_82 [label=null, span="66-66", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_83 [label="Exit lambda expression", span="66-66", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_95 [label="Entry lambda expression", span="79-79", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_96 [label="return null;", span="79-79", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_97 [label="Exit lambda expression", span="79-79", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_98 [label="Entry lambda expression", span="80-80", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_99 [label="return CreateResponse();", span="80-80", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_100 [label="Exit lambda expression", span="80-80", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_111 [label="Entry lambda expression", span="92-92", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_112 [label="return null;", span="92-92", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_113 [label="Exit lambda expression", span="92-92", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_114 [label="Entry lambda expression", span="93-93", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_115 [label="return new Response();", span="93-93", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_116 [label="Exit lambda expression", span="93-93", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_130 [label="Entry lambda expression", span="105-105", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_131 [label=null, span="105-105", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_132 [label="Exit lambda expression", span="105-105", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_133 [label="Entry lambda expression", span="106-106", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_134 [label=null, span="106-106", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_135 [label="Exit lambda expression", span="106-106", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_136 [label="Entry lambda expression", span="107-107", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_137 [label=null, span="107-107", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_138 [label="Exit lambda expression", span="107-107", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_147 [label="Entry lambda expression", span="121-121", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_148 [label="return null;", span="121-121", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_149 [label="Exit lambda expression", span="121-121", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_150 [label="Entry lambda expression", span="122-122", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_151 [label="return CreateResponse();", span="122-122", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_152 [label="Exit lambda expression", span="122-122", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_168 [label="Entry lambda expression", span="134-134", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_169 [label="return null;", span="134-134", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_170 [label="Exit lambda expression", span="134-134", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_171 [label="Entry lambda expression", span="135-135", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_172 [label="return CreateResponse();", span="135-135", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_173 [label="Exit lambda expression", span="135-135", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_174 [label="Entry lambda expression", span="138-138", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_175 [label="return null;", span="138-138", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_176 [label="Exit lambda expression", span="138-138", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_177 [label="Entry lambda expression", span="139-139", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_178 [label="return CreateResponse();", span="139-139", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_179 [label="Exit lambda expression", span="139-139", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_197 [label="Entry lambda expression", span="155-155", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_198 [label="item1Called = true", span="155-155", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_199 [label="return null;", span="155-155", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_200 [label="Exit lambda expression", span="155-155", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_201 [label="Entry lambda expression", span="157-157", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_202 [label="item2Called = true", span="157-157", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_203 [label="return null;", span="157-157", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_204 [label="Exit lambda expression", span="157-157", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_205 [label="Entry lambda expression", span="159-159", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_206 [label="item3Called = true", span="159-159", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_207 [label="return null;", span="159-159", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_208 [label="Exit lambda expression", span="159-159", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_215 [label="Entry lambda expression", span="175-175", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_216 [label=null, span="175-175", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_217 [label="Exit lambda expression", span="175-175", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_239 [label="Entry lambda expression", span="187-187", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_240 [label="item1Called = true", span="187-187", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_241 [label="return null;", span="187-187", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_242 [label="Exit lambda expression", span="187-187", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_243 [label="Entry lambda expression", span="189-189", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_244 [label="item2Called = true", span="189-189", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_245 [label="return null;", span="189-189", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_246 [label="Exit lambda expression", span="189-189", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_247 [label="Entry lambda expression", span="191-191", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_248 [label="item3Called = true", span="191-191", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_249 [label="return null;", span="191-191", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_250 [label="Exit lambda expression", span="191-191", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_252 [label="item4Called = true", span="193-193", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_253 [label="return null;", span="193-193", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_254 [label="Exit lambda expression", span="193-193", cluster="lambda expression", file="MaxLengthRouteSegmentConstraint.cs"];
m18_92 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_28 [label="Entry Nancy.BeforePipeline.Invoke(Nancy.NancyContext)", span="77-77", cluster="Nancy.BeforePipeline.Invoke(Nancy.NancyContext)", file="MaxLengthRouteSegmentConstraint.cs"];
m18_0 [label="Entry Nancy.Tests.Unit.PreRequestHooksPipelineFixture.CreateResponse()", span="10-10", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.CreateResponse()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_1 [label="return new Response();", span="12-12", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.CreateResponse()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_2 [label="Exit Nancy.Tests.Unit.PreRequestHooksPipelineFixture.CreateResponse()", span="10-10", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.CreateResponse()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_29 [label="Entry Unk.True", span="", cluster="Unk.True", file="MaxLengthRouteSegmentConstraint.cs"];
m18_84 [label="Entry Nancy.Tests.Unit.PreRequestHooksPipelineFixture.AddItemToEndOfPipeline_adds_to_the_end_of_the_pipeline()", span="77-77", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.AddItemToEndOfPipeline_adds_to_the_end_of_the_pipeline()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_85 [label="Func<NancyContext, Response> item1 = (r) => { return null; }", span="79-79", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.AddItemToEndOfPipeline_adds_to_the_end_of_the_pipeline()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_86 [label="Func<NancyContext, Response> item2 = (r) => { return CreateResponse(); }", span="80-80", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.AddItemToEndOfPipeline_adds_to_the_end_of_the_pipeline()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_88 [label="pipeline.AddItemToEndOfPipeline(item1)", span="83-83", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.AddItemToEndOfPipeline_adds_to_the_end_of_the_pipeline()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_90 [label="Assert.Same(item1, pipeline.PipelineItems.Last())", span="86-86", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.AddItemToEndOfPipeline_adds_to_the_end_of_the_pipeline()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_87 [label="pipeline.AddItemToEndOfPipeline(item2)", span="81-81", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.AddItemToEndOfPipeline_adds_to_the_end_of_the_pipeline()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_89 [label="Assert.Equal(2, pipeline.PipelineItems.Count())", span="85-85", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.AddItemToEndOfPipeline_adds_to_the_end_of_the_pipeline()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_91 [label="Exit Nancy.Tests.Unit.PreRequestHooksPipelineFixture.AddItemToEndOfPipeline_adds_to_the_end_of_the_pipeline()", span="77-77", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.AddItemToEndOfPipeline_adds_to_the_end_of_the_pipeline()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_129 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="MaxLengthRouteSegmentConstraint.cs"];
m18_139 [label="Entry Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PlusEquals_with_func_add_item_to_end_of_pipeline()", span="119-119", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PlusEquals_with_func_add_item_to_end_of_pipeline()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_140 [label="Func<NancyContext, Response> item1 = (r) => { return null; }", span="121-121", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PlusEquals_with_func_add_item_to_end_of_pipeline()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_141 [label="Func<NancyContext, Response> item2 = (r) => { return CreateResponse(); }", span="122-122", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PlusEquals_with_func_add_item_to_end_of_pipeline()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_143 [label="pipeline += item1", span="125-125", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PlusEquals_with_func_add_item_to_end_of_pipeline()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_145 [label="Assert.Same(item1, pipeline.PipelineItems.Last())", span="128-128", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PlusEquals_with_func_add_item_to_end_of_pipeline()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_142 [label="pipeline.AddItemToEndOfPipeline(item2)", span="123-123", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PlusEquals_with_func_add_item_to_end_of_pipeline()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_144 [label="Assert.Equal(2, pipeline.PipelineItems.Count())", span="127-127", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PlusEquals_with_func_add_item_to_end_of_pipeline()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_146 [label="Exit Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PlusEquals_with_func_add_item_to_end_of_pipeline()", span="119-119", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.PlusEquals_with_func_add_item_to_end_of_pipeline()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_117 [label="Entry Nancy.Tests.Unit.PreRequestHooksPipelineFixture.InsertItemAtPipelineIndex_adds_at_correct_index()", span="103-103", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.InsertItemAtPipelineIndex_adds_at_correct_index()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_118 [label="Func<NancyContext, Response> item1 = (r) => null", span="105-105", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.InsertItemAtPipelineIndex_adds_at_correct_index()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_119 [label="Func<NancyContext, Response> item2 = (r) => null", span="106-106", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.InsertItemAtPipelineIndex_adds_at_correct_index()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_121 [label="pipeline.AddItemToEndOfPipeline(item1)", span="108-108", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.InsertItemAtPipelineIndex_adds_at_correct_index()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_124 [label="Assert.Same(item1, pipeline.PipelineItems.ElementAt(0))", span="113-113", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.InsertItemAtPipelineIndex_adds_at_correct_index()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_120 [label="Func<NancyContext, Response> item3 = (r) => null", span="107-107", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.InsertItemAtPipelineIndex_adds_at_correct_index()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_123 [label="pipeline.InsertItemAtPipelineIndex(1, item2)", span="111-111", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.InsertItemAtPipelineIndex_adds_at_correct_index()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_125 [label="Assert.Same(item2, pipeline.PipelineItems.ElementAt(1))", span="114-114", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.InsertItemAtPipelineIndex_adds_at_correct_index()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_122 [label="pipeline.AddItemToEndOfPipeline(item3)", span="109-109", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.InsertItemAtPipelineIndex_adds_at_correct_index()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_126 [label="Assert.Same(item3, pipeline.PipelineItems.ElementAt(2))", span="115-115", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.InsertItemAtPipelineIndex_adds_at_correct_index()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_127 [label="Exit Nancy.Tests.Unit.PreRequestHooksPipelineFixture.InsertItemAtPipelineIndex_adds_at_correct_index()", span="103-103", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.InsertItemAtPipelineIndex_adds_at_correct_index()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_64 [label="Entry Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_members_all_return_null_returns_null()", span="62-62", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_members_all_return_null_returns_null()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_65 [label="Func<NancyContext, Response> item1 = (r) => null", span="64-64", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_members_all_return_null_returns_null()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_66 [label="Func<NancyContext, Response> item2 = (r) => null", span="65-65", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_members_all_return_null_returns_null()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_68 [label="pipeline.AddItemToEndOfPipeline(item1)", span="67-67", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_members_all_return_null_returns_null()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_67 [label="Func<NancyContext, Response> item3 = (r) => null", span="66-66", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_members_all_return_null_returns_null()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_69 [label="pipeline.AddItemToEndOfPipeline(item2)", span="68-68", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_members_all_return_null_returns_null()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_70 [label="pipeline.AddItemToEndOfPipeline(item3)", span="69-69", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_members_all_return_null_returns_null()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_71 [label="var result = pipeline.Invoke(CreateContext())", span="71-71", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_members_all_return_null_returns_null()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_72 [label="Assert.Null(result)", span="73-73", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_members_all_return_null_returns_null()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_73 [label="Exit Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_members_all_return_null_returns_null()", span="62-62", cluster="Nancy.Tests.Unit.PreRequestHooksPipelineFixture.When_invoked_pipeline_members_all_return_null_returns_null()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_128 [label="Entry Nancy.BeforePipeline.InsertItemAtPipelineIndex(int, System.Func<Nancy.NancyContext, Nancy.Response>)", span="115-115", cluster="Nancy.BeforePipeline.InsertItemAtPipelineIndex(int, System.Func<Nancy.NancyContext, Nancy.Response>)", file="MaxLengthRouteSegmentConstraint.cs"];
m18_3 [label="Entry Nancy.Response.Response()", span="15-15", cluster="Nancy.Response.Response()", file="MaxLengthRouteSegmentConstraint.cs"];
m18_255 [label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture", span="", file="MaxLengthRouteSegmentConstraint.cs"];
m18_256 [label=response, span="", file="MaxLengthRouteSegmentConstraint.cs"];
m19_0 [label="Entry Nancy.Routing.Constraints.MaxRouteSegmentConstraint.TryMatch(string, string[], out int)", span="9-9", cluster="Nancy.Routing.Constraints.MaxRouteSegmentConstraint.TryMatch(string, string[], out int)", file="MaxRouteSegmentConstraint.cs"];
m19_1 [label="int minValue", span="11-11", cluster="Nancy.Routing.Constraints.MaxRouteSegmentConstraint.TryMatch(string, string[], out int)", file="MaxRouteSegmentConstraint.cs"];
m19_3 [label="!this.TryParseInt(parameters[0], out minValue) ||\r\n                !this.TryParseInt(segment, out intValue)", span="14-15", cluster="Nancy.Routing.Constraints.MaxRouteSegmentConstraint.TryMatch(string, string[], out int)", file="MaxRouteSegmentConstraint.cs"];
m19_2 [label="int intValue", span="12-12", cluster="Nancy.Routing.Constraints.MaxRouteSegmentConstraint.TryMatch(string, string[], out int)", file="MaxRouteSegmentConstraint.cs"];
m19_4 [label="matchedValue = default(int)", span="17-17", cluster="Nancy.Routing.Constraints.MaxRouteSegmentConstraint.TryMatch(string, string[], out int)", file="MaxRouteSegmentConstraint.cs"];
m19_6 [label="intValue > minValue", span="21-21", cluster="Nancy.Routing.Constraints.MaxRouteSegmentConstraint.TryMatch(string, string[], out int)", file="MaxRouteSegmentConstraint.cs"];
m19_9 [label="matchedValue = intValue", span="27-27", cluster="Nancy.Routing.Constraints.MaxRouteSegmentConstraint.TryMatch(string, string[], out int)", file="MaxRouteSegmentConstraint.cs"];
m19_5 [label="return false;", span="18-18", cluster="Nancy.Routing.Constraints.MaxRouteSegmentConstraint.TryMatch(string, string[], out int)", file="MaxRouteSegmentConstraint.cs"];
m19_7 [label="matchedValue = default(int)", span="23-23", cluster="Nancy.Routing.Constraints.MaxRouteSegmentConstraint.TryMatch(string, string[], out int)", file="MaxRouteSegmentConstraint.cs"];
m19_8 [label="return false;", span="24-24", cluster="Nancy.Routing.Constraints.MaxRouteSegmentConstraint.TryMatch(string, string[], out int)", file="MaxRouteSegmentConstraint.cs"];
m19_10 [label="return true;", span="28-28", cluster="Nancy.Routing.Constraints.MaxRouteSegmentConstraint.TryMatch(string, string[], out int)", file="MaxRouteSegmentConstraint.cs"];
m19_11 [label="Exit Nancy.Routing.Constraints.MaxRouteSegmentConstraint.TryMatch(string, string[], out int)", span="9-9", cluster="Nancy.Routing.Constraints.MaxRouteSegmentConstraint.TryMatch(string, string[], out int)", file="MaxRouteSegmentConstraint.cs"];
m19_12 [label="Entry Nancy.Routing.Constraints.ParameterizedRouteSegmentConstraintBase<T>.TryParseInt(string, out int)", span="19-19", cluster="Nancy.Routing.Constraints.ParameterizedRouteSegmentConstraintBase<T>.TryParseInt(string, out int)", file="MaxRouteSegmentConstraint.cs"];
m19_13 [label="Nancy.Routing.Constraints.MaxRouteSegmentConstraint", span="", file="MaxRouteSegmentConstraint.cs"];
m20_6 [label="Entry Nancy.ViewEngines.DefaultViewLocationCache.GetLocatedViews()", span="21-21", cluster="Nancy.ViewEngines.DefaultViewLocationCache.GetLocatedViews()", file="MinLengthRouteSegmentConstraint.cs"];
m20_7 [label="var supportedViewExtensions =\r\n                GetSupportedViewExtensions()", span="23-24", cluster="Nancy.ViewEngines.DefaultViewLocationCache.GetLocatedViews()", file="MinLengthRouteSegmentConstraint.cs"];
m20_8 [label="var viewsLocatedByProviders = \r\n                this.viewLocationProvider.GetLocatedViews(supportedViewExtensions)", span="26-27", cluster="Nancy.ViewEngines.DefaultViewLocationCache.GetLocatedViews()", file="MinLengthRouteSegmentConstraint.cs"];
m20_9 [label="return viewsLocatedByProviders;", span="29-29", cluster="Nancy.ViewEngines.DefaultViewLocationCache.GetLocatedViews()", file="MinLengthRouteSegmentConstraint.cs"];
m20_10 [label="Exit Nancy.ViewEngines.DefaultViewLocationCache.GetLocatedViews()", span="21-21", cluster="Nancy.ViewEngines.DefaultViewLocationCache.GetLocatedViews()", file="MinLengthRouteSegmentConstraint.cs"];
m20_29 [label="Entry Nancy.ViewEngines.DefaultViewLocationCache.DefaultViewLocationCacheDiagnostics.DefaultViewLocationCacheDiagnostics(Nancy.ViewEngines.DefaultViewLocationCache)", span="71-71", cluster="Nancy.ViewEngines.DefaultViewLocationCache.DefaultViewLocationCacheDiagnostics.DefaultViewLocationCacheDiagnostics(Nancy.ViewEngines.DefaultViewLocationCache)", file="MinLengthRouteSegmentConstraint.cs"];
m20_30 [label="this.cache = cache", span="73-73", cluster="Nancy.ViewEngines.DefaultViewLocationCache.DefaultViewLocationCacheDiagnostics.DefaultViewLocationCacheDiagnostics(Nancy.ViewEngines.DefaultViewLocationCache)", file="MinLengthRouteSegmentConstraint.cs"];
m20_31 [label="Exit Nancy.ViewEngines.DefaultViewLocationCache.DefaultViewLocationCacheDiagnostics.DefaultViewLocationCacheDiagnostics(Nancy.ViewEngines.DefaultViewLocationCache)", span="71-71", cluster="Nancy.ViewEngines.DefaultViewLocationCache.DefaultViewLocationCacheDiagnostics.DefaultViewLocationCacheDiagnostics(Nancy.ViewEngines.DefaultViewLocationCache)", file="MinLengthRouteSegmentConstraint.cs"];
m20_12 [label="Entry Nancy.ViewEngines.IViewLocationProvider.GetLocatedViews(System.Collections.Generic.IEnumerable<string>)", span="15-15", cluster="Nancy.ViewEngines.IViewLocationProvider.GetLocatedViews(System.Collections.Generic.IEnumerable<string>)", file="MinLengthRouteSegmentConstraint.cs"];
m20_25 [label="Entry Unk.GetEnumerator", span="", cluster="Unk.GetEnumerator", file="MinLengthRouteSegmentConstraint.cs"];
m20_21 [label="Entry Nancy.ViewEngines.DefaultViewLocationCache.GetEnumerator()", span="39-39", cluster="Nancy.ViewEngines.DefaultViewLocationCache.GetEnumerator()", file="MinLengthRouteSegmentConstraint.cs"];
m20_22 [label="return StaticConfiguration.DisableCaches ? this.GetLocatedViews().GetEnumerator() : this.locatedViews.GetEnumerator();", span="41-41", cluster="Nancy.ViewEngines.DefaultViewLocationCache.GetEnumerator()", file="MinLengthRouteSegmentConstraint.cs"];
m20_23 [label="Exit Nancy.ViewEngines.DefaultViewLocationCache.GetEnumerator()", span="39-39", cluster="Nancy.ViewEngines.DefaultViewLocationCache.GetEnumerator()", file="MinLengthRouteSegmentConstraint.cs"];
m20_26 [label="Entry Nancy.ViewEngines.DefaultViewLocationCache.System.Collections.IEnumerable.GetEnumerator()", span="44-44", cluster="Nancy.ViewEngines.DefaultViewLocationCache.System.Collections.IEnumerable.GetEnumerator()", file="MinLengthRouteSegmentConstraint.cs"];
m20_27 [label="return GetEnumerator();", span="46-46", cluster="Nancy.ViewEngines.DefaultViewLocationCache.System.Collections.IEnumerable.GetEnumerator()", file="MinLengthRouteSegmentConstraint.cs"];
m20_28 [label="Exit Nancy.ViewEngines.DefaultViewLocationCache.System.Collections.IEnumerable.GetEnumerator()", span="44-44", cluster="Nancy.ViewEngines.DefaultViewLocationCache.System.Collections.IEnumerable.GetEnumerator()", file="MinLengthRouteSegmentConstraint.cs"];
m20_11 [label="Entry Unk.GetSupportedViewExtensions", span="", cluster="Unk.GetSupportedViewExtensions", file="MinLengthRouteSegmentConstraint.cs"];
m20_16 [label="Entry Unk.SelectMany", span="", cluster="Unk.SelectMany", file="MinLengthRouteSegmentConstraint.cs"];
m20_24 [label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0", cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()", file="MinLengthRouteSegmentConstraint.cs"];
m20_5 [label="Entry Unk.GetLocatedViews", span="", cluster="Unk.GetLocatedViews", file="MinLengthRouteSegmentConstraint.cs"];
m20_0 [label="Entry Nancy.ViewEngines.DefaultViewLocationCache.DefaultViewLocationCache(Nancy.ViewEngines.IViewLocationProvider, System.Collections.Generic.IEnumerable<Nancy.ViewEngines.IViewEngine>)", span="14-14", cluster="Nancy.ViewEngines.DefaultViewLocationCache.DefaultViewLocationCache(Nancy.ViewEngines.IViewLocationProvider, System.Collections.Generic.IEnumerable<Nancy.ViewEngines.IViewEngine>)", file="MinLengthRouteSegmentConstraint.cs"];
m20_1 [label="this.viewLocationProvider = viewLocationProvider", span="16-16", cluster="Nancy.ViewEngines.DefaultViewLocationCache.DefaultViewLocationCache(Nancy.ViewEngines.IViewLocationProvider, System.Collections.Generic.IEnumerable<Nancy.ViewEngines.IViewEngine>)", file="MinLengthRouteSegmentConstraint.cs"];
m20_2 [label="this.viewEngines = viewEngines", span="17-17", cluster="Nancy.ViewEngines.DefaultViewLocationCache.DefaultViewLocationCache(Nancy.ViewEngines.IViewLocationProvider, System.Collections.Generic.IEnumerable<Nancy.ViewEngines.IViewEngine>)", file="MinLengthRouteSegmentConstraint.cs"];
m20_3 [label="this.locatedViews = GetLocatedViews()", span="18-18", cluster="Nancy.ViewEngines.DefaultViewLocationCache.DefaultViewLocationCache(Nancy.ViewEngines.IViewLocationProvider, System.Collections.Generic.IEnumerable<Nancy.ViewEngines.IViewEngine>)", file="MinLengthRouteSegmentConstraint.cs"];
m20_4 [label="Exit Nancy.ViewEngines.DefaultViewLocationCache.DefaultViewLocationCache(Nancy.ViewEngines.IViewLocationProvider, System.Collections.Generic.IEnumerable<Nancy.ViewEngines.IViewEngine>)", span="14-14", cluster="Nancy.ViewEngines.DefaultViewLocationCache.DefaultViewLocationCache(Nancy.ViewEngines.IViewLocationProvider, System.Collections.Generic.IEnumerable<Nancy.ViewEngines.IViewEngine>)", file="MinLengthRouteSegmentConstraint.cs"];
m20_13 [label="Entry Nancy.ViewEngines.DefaultViewLocationCache.GetSupportedViewExtensions()", span="32-32", cluster="Nancy.ViewEngines.DefaultViewLocationCache.GetSupportedViewExtensions()", file="MinLengthRouteSegmentConstraint.cs"];
m20_14 [label="return this.viewEngines\r\n                .SelectMany(engine => engine.Extensions)\r\n                .Distinct();", span="34-36", cluster="Nancy.ViewEngines.DefaultViewLocationCache.GetSupportedViewExtensions()", file="MinLengthRouteSegmentConstraint.cs"];
m20_15 [label="Exit Nancy.ViewEngines.DefaultViewLocationCache.GetSupportedViewExtensions()", span="32-32", cluster="Nancy.ViewEngines.DefaultViewLocationCache.GetSupportedViewExtensions()", file="MinLengthRouteSegmentConstraint.cs"];
m20_38 [label="Entry lambda expression", span="78-83", cluster="lambda expression", file="MinLengthRouteSegmentConstraint.cs"];
m20_18 [label="Entry lambda expression", span="35-35", cluster="lambda expression", file="MinLengthRouteSegmentConstraint.cs"];
m20_19 [label="engine.Extensions", span="35-35", cluster="lambda expression", file="MinLengthRouteSegmentConstraint.cs"];
m20_20 [label="Exit lambda expression", span="35-35", cluster="lambda expression", file="MinLengthRouteSegmentConstraint.cs"];
m20_39 [label="new\r\n                                                                {\r\n                                                                    v.Name,\r\n                                                                    v.Location,\r\n                                                                    v.Extension\r\n                                                                }", span="78-83", cluster="lambda expression", file="MinLengthRouteSegmentConstraint.cs"];
m20_40 [label="Exit lambda expression", span="78-83", cluster="lambda expression", file="MinLengthRouteSegmentConstraint.cs"];
m20_32 [label="Entry Nancy.ViewEngines.DefaultViewLocationCache.DefaultViewLocationCacheDiagnostics.GetAllViews()", span="76-76", cluster="Nancy.ViewEngines.DefaultViewLocationCache.DefaultViewLocationCacheDiagnostics.GetAllViews()", file="MinLengthRouteSegmentConstraint.cs"];
m20_33 [label="var x = this.cache.GetLocatedViews().Select(v => new\r\n                                                                {\r\n                                                                    v.Name,\r\n                                                                    v.Location,\r\n                                                                    v.Extension\r\n                                                                }).ToArray()", span="78-83", cluster="Nancy.ViewEngines.DefaultViewLocationCache.DefaultViewLocationCacheDiagnostics.GetAllViews()", file="MinLengthRouteSegmentConstraint.cs"];
m20_34 [label="return x;", span="85-85", cluster="Nancy.ViewEngines.DefaultViewLocationCache.DefaultViewLocationCacheDiagnostics.GetAllViews()", file="MinLengthRouteSegmentConstraint.cs"];
m20_35 [label="Exit Nancy.ViewEngines.DefaultViewLocationCache.DefaultViewLocationCacheDiagnostics.GetAllViews()", span="76-76", cluster="Nancy.ViewEngines.DefaultViewLocationCache.DefaultViewLocationCacheDiagnostics.GetAllViews()", file="MinLengthRouteSegmentConstraint.cs"];
m20_17 [label="Entry Unk.Distinct", span="", cluster="Unk.Distinct", file="MinLengthRouteSegmentConstraint.cs"];
m20_37 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="MinLengthRouteSegmentConstraint.cs"];
m20_36 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="MinLengthRouteSegmentConstraint.cs"];
m20_41 [label="Nancy.ViewEngines.DefaultViewLocationCache", span="", file="MinLengthRouteSegmentConstraint.cs"];
m20_42 [label="Nancy.ViewEngines.DefaultViewLocationCache.DefaultViewLocationCacheDiagnostics", span="", file="MinLengthRouteSegmentConstraint.cs"];
m21_0 [label="Entry Nancy.Routing.Constraints.MinRouteSegmentConstraint.TryMatch(string, string[], out int)", span="9-9", cluster="Nancy.Routing.Constraints.MinRouteSegmentConstraint.TryMatch(string, string[], out int)", file="MinRouteSegmentConstraint.cs"];
m21_1 [label="int minValue", span="11-11", cluster="Nancy.Routing.Constraints.MinRouteSegmentConstraint.TryMatch(string, string[], out int)", file="MinRouteSegmentConstraint.cs"];
m21_3 [label="!this.TryParseInt(parameters[0], out minValue) ||\r\n                !this.TryParseInt(segment, out intValue)", span="14-15", cluster="Nancy.Routing.Constraints.MinRouteSegmentConstraint.TryMatch(string, string[], out int)", file="MinRouteSegmentConstraint.cs"];
m21_2 [label="int intValue", span="12-12", cluster="Nancy.Routing.Constraints.MinRouteSegmentConstraint.TryMatch(string, string[], out int)", file="MinRouteSegmentConstraint.cs"];
m21_4 [label="matchedValue = default(int)", span="17-17", cluster="Nancy.Routing.Constraints.MinRouteSegmentConstraint.TryMatch(string, string[], out int)", file="MinRouteSegmentConstraint.cs"];
m21_6 [label="intValue < minValue", span="21-21", cluster="Nancy.Routing.Constraints.MinRouteSegmentConstraint.TryMatch(string, string[], out int)", file="MinRouteSegmentConstraint.cs"];
m21_9 [label="matchedValue = intValue", span="27-27", cluster="Nancy.Routing.Constraints.MinRouteSegmentConstraint.TryMatch(string, string[], out int)", file="MinRouteSegmentConstraint.cs"];
m21_5 [label="return false;", span="18-18", cluster="Nancy.Routing.Constraints.MinRouteSegmentConstraint.TryMatch(string, string[], out int)", file="MinRouteSegmentConstraint.cs"];
m21_7 [label="matchedValue = default(int)", span="23-23", cluster="Nancy.Routing.Constraints.MinRouteSegmentConstraint.TryMatch(string, string[], out int)", file="MinRouteSegmentConstraint.cs"];
m21_8 [label="return false;", span="24-24", cluster="Nancy.Routing.Constraints.MinRouteSegmentConstraint.TryMatch(string, string[], out int)", file="MinRouteSegmentConstraint.cs"];
m21_10 [label="return true;", span="28-28", cluster="Nancy.Routing.Constraints.MinRouteSegmentConstraint.TryMatch(string, string[], out int)", file="MinRouteSegmentConstraint.cs"];
m21_11 [label="Exit Nancy.Routing.Constraints.MinRouteSegmentConstraint.TryMatch(string, string[], out int)", span="9-9", cluster="Nancy.Routing.Constraints.MinRouteSegmentConstraint.TryMatch(string, string[], out int)", file="MinRouteSegmentConstraint.cs"];
m21_12 [label="Entry Nancy.Routing.Constraints.ParameterizedRouteSegmentConstraintBase<T>.TryParseInt(string, out int)", span="19-19", cluster="Nancy.Routing.Constraints.ParameterizedRouteSegmentConstraintBase<T>.TryParseInt(string, out int)", file="MinRouteSegmentConstraint.cs"];
m21_13 [label="Nancy.Routing.Constraints.MinRouteSegmentConstraint", span="", file="MinRouteSegmentConstraint.cs"];
m22_18 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="ModelValidationDescriptor.cs"];
m22_17 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IEqualityComparer<TKey>)", file="ModelValidationDescriptor.cs"];
m22_6 [label="Entry Nancy.Validation.ModelValidationDescriptor.GetModelValidationRuleDictionary(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationRule>)", span="42-42", cluster="Nancy.Validation.ModelValidationDescriptor.GetModelValidationRuleDictionary(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationRule>)", file="ModelValidationDescriptor.cs"];
m22_7 [label="var results =\r\n                new Dictionary<string, IList<ModelValidationRule>>(StringComparer.OrdinalIgnoreCase)", span="44-45", cluster="Nancy.Validation.ModelValidationDescriptor.GetModelValidationRuleDictionary(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationRule>)", file="ModelValidationDescriptor.cs"];
m22_8 [label="rules == null", span="47-47", cluster="Nancy.Validation.ModelValidationDescriptor.GetModelValidationRuleDictionary(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationRule>)", file="ModelValidationDescriptor.cs"];
m22_10 [label=rules, span="52-52", cluster="Nancy.Validation.ModelValidationDescriptor.GetModelValidationRuleDictionary(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationRule>)", file="ModelValidationDescriptor.cs"];
m22_9 [label="return results;", span="49-49", cluster="Nancy.Validation.ModelValidationDescriptor.GetModelValidationRuleDictionary(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationRule>)", file="ModelValidationDescriptor.cs"];
m22_12 [label="!results.ContainsKey(name)", span="56-56", cluster="Nancy.Validation.ModelValidationDescriptor.GetModelValidationRuleDictionary(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationRule>)", file="ModelValidationDescriptor.cs"];
m22_13 [label="results.Add(name, new List<ModelValidationRule>())", span="58-58", cluster="Nancy.Validation.ModelValidationDescriptor.GetModelValidationRuleDictionary(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationRule>)", file="ModelValidationDescriptor.cs"];
m22_14 [label="results[name].Add(rule)", span="61-61", cluster="Nancy.Validation.ModelValidationDescriptor.GetModelValidationRuleDictionary(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationRule>)", file="ModelValidationDescriptor.cs"];
m22_15 [label="return results;", span="65-65", cluster="Nancy.Validation.ModelValidationDescriptor.GetModelValidationRuleDictionary(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationRule>)", file="ModelValidationDescriptor.cs"];
m22_11 [label="rule.MemberNames", span="54-54", cluster="Nancy.Validation.ModelValidationDescriptor.GetModelValidationRuleDictionary(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationRule>)", file="ModelValidationDescriptor.cs"];
m22_16 [label="Exit Nancy.Validation.ModelValidationDescriptor.GetModelValidationRuleDictionary(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationRule>)", span="42-42", cluster="Nancy.Validation.ModelValidationDescriptor.GetModelValidationRuleDictionary(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationRule>)", file="ModelValidationDescriptor.cs"];
m22_19 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="ModelValidationDescriptor.cs"];
m22_20 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="ModelValidationDescriptor.cs"];
m22_21 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="ModelValidationDescriptor.cs"];
m22_0 [label="Entry Nancy.Validation.ModelValidationDescriptor.ModelValidationDescriptor(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationRule>, System.Type)", span="15-15", cluster="Nancy.Validation.ModelValidationDescriptor.ModelValidationDescriptor(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationRule>, System.Type)", file="ModelValidationDescriptor.cs"];
m22_1 [label="Exit Nancy.Validation.ModelValidationDescriptor.ModelValidationDescriptor(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationRule>, System.Type)", span="15-15", cluster="Nancy.Validation.ModelValidationDescriptor.ModelValidationDescriptor(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationRule>, System.Type)", file="ModelValidationDescriptor.cs"];
m22_2 [label="Entry Nancy.Validation.ModelValidationDescriptor.ModelValidationDescriptor(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IList<Nancy.Validation.ModelValidationRule>>, System.Type)", span="25-25", cluster="Nancy.Validation.ModelValidationDescriptor.ModelValidationDescriptor(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IList<Nancy.Validation.ModelValidationRule>>, System.Type)", file="ModelValidationDescriptor.cs"];
m22_3 [label="this.Rules = rules", span="27-27", cluster="Nancy.Validation.ModelValidationDescriptor.ModelValidationDescriptor(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IList<Nancy.Validation.ModelValidationRule>>, System.Type)", file="ModelValidationDescriptor.cs"];
m22_4 [label="this.ModelType = modelType", span="28-28", cluster="Nancy.Validation.ModelValidationDescriptor.ModelValidationDescriptor(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IList<Nancy.Validation.ModelValidationRule>>, System.Type)", file="ModelValidationDescriptor.cs"];
m22_5 [label="Exit Nancy.Validation.ModelValidationDescriptor.ModelValidationDescriptor(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IList<Nancy.Validation.ModelValidationRule>>, System.Type)", span="25-25", cluster="Nancy.Validation.ModelValidationDescriptor.ModelValidationDescriptor(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IList<Nancy.Validation.ModelValidationRule>>, System.Type)", file="ModelValidationDescriptor.cs"];
m22_22 [label="Nancy.Validation.ModelValidationDescriptor", span="", file="ModelValidationDescriptor.cs"];
m23_0 [label="Entry Nancy.Tests.Fakes.FakeViewEngine.FakeViewEngine()", span="8-8", cluster="Nancy.Tests.Fakes.FakeViewEngine.FakeViewEngine()", file="ModelValidationError.cs"];
m23_1 [label="this.Extensions = new[] { ''html '' }", span="10-10", cluster="Nancy.Tests.Fakes.FakeViewEngine.FakeViewEngine()", color=red, community=0, file="ModelValidationError.cs"];
m23_2 [label="Entry Nancy.Validation.ModelValidationError.ModelValidationError(System.Collections.Generic.IEnumerable<string>, System.Func<string, string>)", span="33-33", cluster="Nancy.Validation.ModelValidationError.ModelValidationError(System.Collections.Generic.IEnumerable<string>, System.Func<string, string>)", file="ModelValidationError.cs"];
m23_9 [label="Entry Nancy.Responses.HtmlResponse.HtmlResponse(Nancy.HttpStatusCode, System.Action<System.IO.Stream>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IEnumerable<Nancy.Cookies.INancyCookie>)", span="19-19", cluster="Nancy.Responses.HtmlResponse.HtmlResponse(Nancy.HttpStatusCode, System.Action<System.IO.Stream>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IEnumerable<Nancy.Cookies.INancyCookie>)", file="ModelValidationError.cs"];
m23_3 [label="this.MemberNames = memberNames", span="35-35", cluster="Nancy.Validation.ModelValidationError.ModelValidationError(System.Collections.Generic.IEnumerable<string>, System.Func<string, string>)", file="ModelValidationError.cs", color=green, community=0];
m23_4 [label="this.errorMessageFormatter = errorMessageFormatter", span="36-36", cluster="Nancy.Validation.ModelValidationError.ModelValidationError(System.Collections.Generic.IEnumerable<string>, System.Func<string, string>)", file="ModelValidationError.cs", color=green, community=0];
m23_6 [label="this.Model = model", span="23-23", cluster="Nancy.Tests.Fakes.FakeViewEngine.RenderView(Nancy.ViewEngines.ViewLocationResult, dynamic, Nancy.ViewEngines.IRenderContext)", file="ModelValidationError.cs", color=red, community=0];
m23_7 [label="return new HtmlResponse();", span="24-24", cluster="Nancy.Tests.Fakes.FakeViewEngine.RenderView(Nancy.ViewEngines.ViewLocationResult, dynamic, Nancy.ViewEngines.IRenderContext)", color=red, community=0, file="ModelValidationError.cs"];
m23_8 [label="Exit Nancy.Tests.Fakes.FakeViewEngine.RenderView(Nancy.ViewEngines.ViewLocationResult, dynamic, Nancy.ViewEngines.IRenderContext)", span="21-21", cluster="Nancy.Tests.Fakes.FakeViewEngine.RenderView(Nancy.ViewEngines.ViewLocationResult, dynamic, Nancy.ViewEngines.IRenderContext)", file="ModelValidationError.cs"];
m23_5 [label="Exit Nancy.Validation.ModelValidationError.ModelValidationError(System.Collections.Generic.IEnumerable<string>, System.Func<string, string>)", span="33-33", cluster="Nancy.Validation.ModelValidationError.ModelValidationError(System.Collections.Generic.IEnumerable<string>, System.Func<string, string>)", file="ModelValidationError.cs"];
m23_10 [label="Nancy.Validation.ModelValidationError", span="", file="ModelValidationError.cs"];
m25_3 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="ModelValidationResult.cs"];
m25_12 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="ModelValidationResult.cs"];
m25_0 [label="Entry Nancy.Validation.ModelValidationResult.ModelValidationResult(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationError>)", span="20-20", cluster="Nancy.Validation.ModelValidationResult.ModelValidationResult(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationError>)", file="ModelValidationResult.cs"];
m25_1 [label="this.Errors = errors == null\r\n                ? new List<ModelValidationError>().AsReadOnly()\r\n                : errors.ToList().AsReadOnly()", span="22-24", cluster="Nancy.Validation.ModelValidationResult.ModelValidationResult(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationError>)", color=green, community=0, file="ModelValidationResult.cs"];
m25_2 [label="Exit Nancy.Validation.ModelValidationResult.ModelValidationResult(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationError>)", span="20-20", cluster="Nancy.Validation.ModelValidationResult.ModelValidationResult(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationError>)", file="ModelValidationResult.cs"];
m25_4 [label="Entry System.Collections.Generic.List<T>.AsReadOnly()", span="0-0", cluster="System.Collections.Generic.List<T>.AsReadOnly()", file="ModelValidationResult.cs"];
m25_5 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="ModelValidationResult.cs"];
m25_19 [label="Entry Nancy.Validation.ModelValidationError.ModelValidationError(System.Collections.Generic.IEnumerable<string>, System.Func<string, string>)", span="33-33", cluster="Nancy.Validation.ModelValidationError.ModelValidationError(System.Collections.Generic.IEnumerable<string>, System.Func<string, string>)", file="ModelValidationResult.cs"];
m25_8 [label="Entry Nancy.Validation.ModelValidationResult.AddError(string, string)", span="53-53", cluster="Nancy.Validation.ModelValidationResult.AddError(string, string)", file="ModelValidationResult.cs"];
m25_9 [label="return new ModelValidationResult(this.Errors.Concat(new[] { new ModelValidationError(memberName, s => errorMessage) }));", span="55-55", cluster="Nancy.Validation.ModelValidationResult.AddError(string, string)", color=green, community=0, file="ModelValidationResult.cs"];
m25_10 [label="Exit Nancy.Validation.ModelValidationResult.AddError(string, string)", span="53-53", cluster="Nancy.Validation.ModelValidationResult.AddError(string, string)", file="ModelValidationResult.cs"];
m25_11 [label="Entry Nancy.Validation.ModelValidationError.ModelValidationError(string, System.Func<string, string>)", span="23-23", cluster="Nancy.Validation.ModelValidationError.ModelValidationError(string, System.Func<string, string>)", file="ModelValidationResult.cs"];
m25_20 [label="Entry lambda expression", span="66-66", cluster="lambda expression", file="ModelValidationResult.cs"];
m25_14 [label=errorMessage, span="55-55", cluster="lambda expression", color=green, community=0, file="ModelValidationResult.cs"];
m25_13 [label="Entry lambda expression", span="55-55", cluster="lambda expression", file="ModelValidationResult.cs"];
m25_15 [label="Exit lambda expression", span="55-55", cluster="lambda expression", file="ModelValidationResult.cs"];
m25_21 [label=errorMessage, span="66-66", cluster="lambda expression", color=green, community=0, file="ModelValidationResult.cs"];
m25_22 [label="Exit lambda expression", span="66-66", cluster="lambda expression", file="ModelValidationResult.cs"];
m25_16 [label="Entry Nancy.Validation.ModelValidationResult.AddError(System.Collections.Generic.IEnumerable<string>, string)", span="64-64", cluster="Nancy.Validation.ModelValidationResult.AddError(System.Collections.Generic.IEnumerable<string>, string)", file="ModelValidationResult.cs"];
m25_17 [label="return new ModelValidationResult(Errors.Concat(new[] { new ModelValidationError(memberNames, s => errorMessage) }));", span="66-66", cluster="Nancy.Validation.ModelValidationResult.AddError(System.Collections.Generic.IEnumerable<string>, string)", color=green, community=0, file="ModelValidationResult.cs"];
m25_18 [label="Exit Nancy.Validation.ModelValidationResult.AddError(System.Collections.Generic.IEnumerable<string>, string)", span="64-64", cluster="Nancy.Validation.ModelValidationResult.AddError(System.Collections.Generic.IEnumerable<string>, string)", file="ModelValidationResult.cs"];
m25_23 [label="Nancy.Validation.ModelValidationResult", span="", file="ModelValidationResult.cs"];
m25_24 [label=string, span="", file="ModelValidationResult.cs"];
m25_25 [label=string, span="", file="ModelValidationResult.cs"];
m26_8 [label="Entry Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_be_valid_when_no_validator_exists_for_type()", span="26-26", cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_be_valid_when_no_validator_exists_for_type()", file="ModuleExtensionsFixture.cs"];
m26_9 [label="var result = subject.Validate<FakeModel>(new FakeModel())", span="29-29", cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_be_valid_when_no_validator_exists_for_type()", file="ModuleExtensionsFixture.cs"];
m26_10 [label="result.IsValid.ShouldBeTrue()", span="32-32", cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_be_valid_when_no_validator_exists_for_type()", file="ModuleExtensionsFixture.cs"];
m26_11 [label="Exit Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_be_valid_when_no_validator_exists_for_type()", span="26-26", cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_be_valid_when_no_validator_exists_for_type()", file="ModuleExtensionsFixture.cs"];
m26_57 [label="Entry Unk.MustHaveHappened", span="", cluster="Unk.MustHaveHappened", file="ModuleExtensionsFixture.cs"];
m26_0 [label="Entry Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.ModuleExtensionsFixture()", span="14-14", cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.ModuleExtensionsFixture()", file="ModuleExtensionsFixture.cs"];
m26_1 [label="this.context = new NancyContext()", span="16-16", cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.ModuleExtensionsFixture()", file="ModuleExtensionsFixture.cs"];
m26_2 [label="this.validatorLocator = A.Fake<IModelValidatorLocator>()", span="17-17", cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.ModuleExtensionsFixture()", file="ModuleExtensionsFixture.cs"];
m26_3 [label="this.subject = new FakeNancyModule\r\n            {\r\n                Context = this.context,\r\n                ValidatorLocator = this.validatorLocator\r\n            }", span="18-22", cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.ModuleExtensionsFixture()", file="ModuleExtensionsFixture.cs"];
m26_4 [label="Exit Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.ModuleExtensionsFixture()", span="14-14", cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.ModuleExtensionsFixture()", file="ModuleExtensionsFixture.cs"];
m26_51 [label="Entry Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_pass_context_to_validator()", span="66-66", cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_pass_context_to_validator()", file="ModuleExtensionsFixture.cs"];
m26_52 [label="var validator = A.Fake<IModelValidator>()", span="69-69", cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_pass_context_to_validator()", file="ModuleExtensionsFixture.cs"];
m26_53 [label="A.CallTo(() => validatorLocator.GetValidatorForType(A<Type>.Ignored)).Returns(validator)", span="70-70", cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_pass_context_to_validator()", file="ModuleExtensionsFixture.cs"];
m26_55 [label="A.CallTo(() => validator.Validate(A<object>._, this.context)).MustHaveHappened()", span="76-76", cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_pass_context_to_validator()", file="ModuleExtensionsFixture.cs"];
m26_54 [label="subject.Validate(new FakeModel())", span="73-73", cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_pass_context_to_validator()", file="ModuleExtensionsFixture.cs"];
m26_56 [label="Exit Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_pass_context_to_validator()", span="66-66", cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_pass_context_to_validator()", file="ModuleExtensionsFixture.cs"];
m26_27 [label="Entry Unk.Validate", span="", cluster="Unk.Validate", file="ModuleExtensionsFixture.cs"];
m26_6 [label="Entry Unk.>", span="", cluster="Unk.>", file="ModuleExtensionsFixture.cs"];
m26_39 [label="Entry Nancy.Validation.ModelValidationResult.ModelValidationResult(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationError>)", span="20-20", cluster="Nancy.Validation.ModelValidationResult.ModelValidationResult(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationError>)", file="ModuleExtensionsFixture.cs"];
m26_41 [label="Entry bool.ShouldBeFalse()", span="90-90", cluster="bool.ShouldBeFalse()", file="ModuleExtensionsFixture.cs"];
m26_32 [label="Entry Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_be_invalid_when_a_validator_exists_and_the_instance_is_valid()", span="51-51", cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_be_invalid_when_a_validator_exists_and_the_instance_is_valid()", file="ModuleExtensionsFixture.cs"];
m26_33 [label="var validator = A.Fake<IModelValidator>()", span="54-54", cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_be_invalid_when_a_validator_exists_and_the_instance_is_valid()", file="ModuleExtensionsFixture.cs"];
m26_34 [label="A.CallTo(() => validator.Validate(A<object>.Ignored, A<NancyContext>._)).Returns(new ModelValidationResult(new[] { new ModelValidationError(''blah'', s => ''blah'') }))", span="55-55", cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_be_invalid_when_a_validator_exists_and_the_instance_is_valid()", color=red, community=0, file="ModuleExtensionsFixture.cs"];
m26_35 [label="A.CallTo(() => validatorLocator.GetValidatorForType(A<Type>.Ignored)).Returns(validator)", span="56-56", cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_be_invalid_when_a_validator_exists_and_the_instance_is_valid()", file="ModuleExtensionsFixture.cs"];
m26_36 [label="var result = subject.Validate(new FakeModel())", span="59-59", cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_be_invalid_when_a_validator_exists_and_the_instance_is_valid()", file="ModuleExtensionsFixture.cs"];
m26_37 [label="result.IsValid.ShouldBeFalse()", span="62-62", cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_be_invalid_when_a_validator_exists_and_the_instance_is_valid()", file="ModuleExtensionsFixture.cs"];
m26_38 [label="Exit Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_be_invalid_when_a_validator_exists_and_the_instance_is_valid()", span="51-51", cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_be_invalid_when_a_validator_exists_and_the_instance_is_valid()", file="ModuleExtensionsFixture.cs"];
m26_13 [label="Entry Nancy.INancyModule.Validate<T>(T)", span="14-14", cluster="Nancy.INancyModule.Validate<T>(T)", file="ModuleExtensionsFixture.cs"];
m26_31 [label="Entry Unk.GetValidatorForType", span="", cluster="Unk.GetValidatorForType", file="ModuleExtensionsFixture.cs"];
m26_12 [label="Entry Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.FakeModel.FakeModel()", span="94-94", cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.FakeModel.FakeModel()", file="ModuleExtensionsFixture.cs"];
m26_7 [label="Entry Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModule()", span="6-6", cluster="Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModule()", file="ModuleExtensionsFixture.cs"];
m26_14 [label="Entry bool.ShouldBeTrue()", span="85-85", cluster="bool.ShouldBeTrue()", file="ModuleExtensionsFixture.cs"];
m26_15 [label="Entry Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_be_valid_when_a_validator_exists_and_the_instance_is_valid()", span="36-36", cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_be_valid_when_a_validator_exists_and_the_instance_is_valid()", file="ModuleExtensionsFixture.cs"];
m26_16 [label="var validator = A.Fake<IModelValidator>()", span="39-39", cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_be_valid_when_a_validator_exists_and_the_instance_is_valid()", file="ModuleExtensionsFixture.cs"];
m26_17 [label="A.CallTo(() => validator.Validate(A<object>.Ignored, A<NancyContext>._)).Returns(ModelValidationResult.Valid)", span="40-40", cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_be_valid_when_a_validator_exists_and_the_instance_is_valid()", file="ModuleExtensionsFixture.cs"];
m26_18 [label="A.CallTo(() => validatorLocator.GetValidatorForType(A<Type>.Ignored)).Returns(validator)", span="41-41", cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_be_valid_when_a_validator_exists_and_the_instance_is_valid()", file="ModuleExtensionsFixture.cs"];
m26_19 [label="var result = subject.Validate(new FakeModel())", span="44-44", cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_be_valid_when_a_validator_exists_and_the_instance_is_valid()", file="ModuleExtensionsFixture.cs"];
m26_20 [label="result.IsValid.ShouldBeTrue()", span="47-47", cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_be_valid_when_a_validator_exists_and_the_instance_is_valid()", file="ModuleExtensionsFixture.cs"];
m26_21 [label="Exit Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_be_valid_when_a_validator_exists_and_the_instance_is_valid()", span="36-36", cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_be_valid_when_a_validator_exists_and_the_instance_is_valid()", file="ModuleExtensionsFixture.cs"];
m26_22 [label="Entry Unk.CallTo", span="", cluster="Unk.CallTo", file="ModuleExtensionsFixture.cs"];
m26_5 [label="Entry Nancy.NancyContext.NancyContext()", span="25-25", cluster="Nancy.NancyContext.NancyContext()", file="ModuleExtensionsFixture.cs"];
m26_74 [label="Entry lambda expression", span="91-91", cluster="lambda expression", file="ModuleExtensionsFixture.cs"];
m26_25 [label="validator.Validate(A<object>.Ignored, A<NancyContext>._)", span="40-40", cluster="lambda expression", file="ModuleExtensionsFixture.cs"];
m26_24 [label="Entry lambda expression", span="40-40", cluster="lambda expression", file="ModuleExtensionsFixture.cs"];
m26_28 [label="Entry lambda expression", span="41-41", cluster="lambda expression", file="ModuleExtensionsFixture.cs"];
m26_26 [label="Exit lambda expression", span="40-40", cluster="lambda expression", file="ModuleExtensionsFixture.cs"];
m26_29 [label="validatorLocator.GetValidatorForType(A<Type>.Ignored)", span="41-41", cluster="lambda expression", file="ModuleExtensionsFixture.cs"];
m26_30 [label="Exit lambda expression", span="41-41", cluster="lambda expression", file="ModuleExtensionsFixture.cs"];
m26_43 [label="validator.Validate(A<object>.Ignored, A<NancyContext>._)", span="55-55", cluster="lambda expression", color=red, community=0, file="ModuleExtensionsFixture.cs"];
m26_42 [label="Entry lambda expression", span="55-55", cluster="lambda expression", file="ModuleExtensionsFixture.cs"];
m26_48 [label="Entry lambda expression", span="56-56", cluster="lambda expression", file="ModuleExtensionsFixture.cs"];
m26_44 [label="Exit lambda expression", span="55-55", cluster="lambda expression", file="ModuleExtensionsFixture.cs"];
m26_45 [label="Entry lambda expression", span="55-55", cluster="lambda expression", file="ModuleExtensionsFixture.cs"];
m26_46 [label="''blah''", span="55-55", cluster="lambda expression", color=red, community=0, file="ModuleExtensionsFixture.cs"];
m26_47 [label="Exit lambda expression", span="55-55", cluster="lambda expression", file="ModuleExtensionsFixture.cs"];
m26_49 [label="validatorLocator.GetValidatorForType(A<Type>.Ignored)", span="56-56", cluster="lambda expression", file="ModuleExtensionsFixture.cs"];
m26_50 [label="Exit lambda expression", span="56-56", cluster="lambda expression", file="ModuleExtensionsFixture.cs"];
m26_62 [label="validator.Validate(A<object>._, this.context)", span="76-76", cluster="lambda expression", file="ModuleExtensionsFixture.cs"];
m26_58 [label="Entry lambda expression", span="70-70", cluster="lambda expression", file="ModuleExtensionsFixture.cs"];
m26_61 [label="Entry lambda expression", span="76-76", cluster="lambda expression", file="ModuleExtensionsFixture.cs"];
m26_59 [label="validatorLocator.GetValidatorForType(A<Type>.Ignored)", span="70-70", cluster="lambda expression", file="ModuleExtensionsFixture.cs"];
m26_60 [label="Exit lambda expression", span="70-70", cluster="lambda expression", file="ModuleExtensionsFixture.cs"];
m26_63 [label="Exit lambda expression", span="76-76", cluster="lambda expression", file="ModuleExtensionsFixture.cs"];
m26_75 [label="validator.Validate(model, A<NancyContext>._)", span="91-91", cluster="lambda expression", file="ModuleExtensionsFixture.cs"];
m26_71 [label="Entry lambda expression", span="85-85", cluster="lambda expression", file="ModuleExtensionsFixture.cs"];
m26_72 [label="validatorLocator.GetValidatorForType(A<Type>.Ignored)", span="85-85", cluster="lambda expression", file="ModuleExtensionsFixture.cs"];
m26_73 [label="Exit lambda expression", span="85-85", cluster="lambda expression", file="ModuleExtensionsFixture.cs"];
m26_76 [label="Exit lambda expression", span="91-91", cluster="lambda expression", file="ModuleExtensionsFixture.cs"];
m26_64 [label="Entry Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_pass_model_instance_to_validator()", span="80-80", cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_pass_model_instance_to_validator()", file="ModuleExtensionsFixture.cs"];
m26_65 [label="var model = new FakeModel()", span="83-83", cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_pass_model_instance_to_validator()", file="ModuleExtensionsFixture.cs"];
m26_66 [label="var validator = A.Fake<IModelValidator>()", span="84-84", cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_pass_model_instance_to_validator()", file="ModuleExtensionsFixture.cs"];
m26_68 [label="subject.Validate(model)", span="88-88", cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_pass_model_instance_to_validator()", file="ModuleExtensionsFixture.cs"];
m26_69 [label="A.CallTo(() => validator.Validate(model, A<NancyContext>._)).MustHaveHappened()", span="91-91", cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_pass_model_instance_to_validator()", file="ModuleExtensionsFixture.cs"];
m26_67 [label="A.CallTo(() => validatorLocator.GetValidatorForType(A<Type>.Ignored)).Returns(validator)", span="85-85", cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_pass_model_instance_to_validator()", file="ModuleExtensionsFixture.cs"];
m26_70 [label="Exit Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_pass_model_instance_to_validator()", span="80-80", cluster="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture.Should_pass_model_instance_to_validator()", file="ModuleExtensionsFixture.cs"];
m26_23 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="ModuleExtensionsFixture.cs"];
m26_40 [label="Entry Nancy.Validation.ModelValidationError.ModelValidationError(string, System.Func<string, string>)", span="23-23", cluster="Nancy.Validation.ModelValidationError.ModelValidationError(string, System.Func<string, string>)", file="ModuleExtensionsFixture.cs"];
m26_77 [label="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture", span="", file="ModuleExtensionsFixture.cs"];
m26_78 [label=validator, span="", file="ModuleExtensionsFixture.cs"];
m26_79 [label=validator, span="", file="ModuleExtensionsFixture.cs"];
m26_80 [label=validator, span="", file="ModuleExtensionsFixture.cs"];
m26_81 [label=model, span="", file="ModuleExtensionsFixture.cs"];
m26_82 [label=validator, span="", file="ModuleExtensionsFixture.cs"];
m27_6 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="NancyContext.cs"];
m27_9 [label="Entry Nancy.NancyContext.Dispose()", span="115-115", cluster="Nancy.NancyContext.Dispose()", file="NancyContext.cs"];
m27_10 [label="this.Items.Values.OfType<IDisposable>()", span="117-117", cluster="Nancy.NancyContext.Dispose()", file="NancyContext.cs"];
m27_11 [label="disposableItem.Dispose()", span="119-119", cluster="Nancy.NancyContext.Dispose()", file="NancyContext.cs"];
m27_12 [label="this.Items.Clear()", span="122-122", cluster="Nancy.NancyContext.Dispose()", file="NancyContext.cs"];
m27_13 [label="this.request != null", span="124-124", cluster="Nancy.NancyContext.Dispose()", file="NancyContext.cs"];
m27_14 [label="((IDisposable) this.request).Dispose()", span="126-126", cluster="Nancy.NancyContext.Dispose()", file="NancyContext.cs"];
m27_15 [label="this.Response != null", span="129-129", cluster="Nancy.NancyContext.Dispose()", file="NancyContext.cs"];
m27_16 [label="this.Response.Dispose()", span="131-131", cluster="Nancy.NancyContext.Dispose()", file="NancyContext.cs"];
m27_17 [label="Exit Nancy.NancyContext.Dispose()", span="115-115", cluster="Nancy.NancyContext.Dispose()", file="NancyContext.cs"];
m27_7 [label="Entry Nancy.Diagnostics.RequestTrace.RequestTrace()", span="33-33", cluster="Nancy.Diagnostics.RequestTrace.RequestTrace()", file="NancyContext.cs"];
m27_20 [label="Entry System.Collections.Generic.ICollection<T>.Clear()", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Clear()", file="NancyContext.cs"];
m27_0 [label="Entry Nancy.NancyContext.NancyContext()", span="25-25", cluster="Nancy.NancyContext.NancyContext()", file="NancyContext.cs"];
m27_1 [label="this.Items = new Dictionary<string, object>()", span="27-27", cluster="Nancy.NancyContext.NancyContext()", file="NancyContext.cs"];
m27_2 [label="this.Trace = new RequestTrace()", span="28-28", cluster="Nancy.NancyContext.NancyContext()", file="NancyContext.cs"];
m27_3 [label="this.ViewBag = new DynamicDictionary()", span="29-29", cluster="Nancy.NancyContext.NancyContext()", file="NancyContext.cs"];
m27_4 [label="this.ControlPanelEnabled = true", span="32-32", cluster="Nancy.NancyContext.NancyContext()", file="NancyContext.cs"];
m27_5 [label="Exit Nancy.NancyContext.NancyContext()", span="25-25", cluster="Nancy.NancyContext.NancyContext()", file="NancyContext.cs"];
m27_8 [label="Entry Nancy.DynamicDictionary.DynamicDictionary()", span="10-10", cluster="Nancy.DynamicDictionary.DynamicDictionary()", file="NancyContext.cs"];
m27_19 [label="Entry System.IDisposable.Dispose()", span="0-0", cluster="System.IDisposable.Dispose()", file="NancyContext.cs"];
m27_18 [label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.OfType<TResult>()", file="NancyContext.cs"];
m27_21 [label="Entry Nancy.Response.Dispose()", span="192-192", cluster="Nancy.Response.Dispose()", file="NancyContext.cs"];
m27_22 [label="Nancy.NancyContext", span="", file="NancyContext.cs"];
m28_24 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="NancyRazorErrorView.cs"];
m28_34 [label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="NancyRazorErrorView.cs"];
m28_25 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="NancyRazorErrorView.cs"];
m28_30 [label="Entry System.Tuple<T1, T2>.Tuple(T1, T2)", span="0-0", cluster="System.Tuple<T1, T2>.Tuple(T1, T2)", file="NancyRazorErrorView.cs"];
m28_19 [label="Entry Nancy.Routing.RouteCache.AddRoutesToCache(System.Collections.Generic.IEnumerable<Nancy.Routing.RouteDescription>, string)", span="29-29", cluster="Nancy.Routing.RouteCache.AddRoutesToCache(System.Collections.Generic.IEnumerable<Nancy.Routing.RouteDescription>, string)", file="NancyRazorErrorView.cs"];
m28_20 [label="!this.ContainsKey(moduleKey)", span="31-31", cluster="Nancy.Routing.RouteCache.AddRoutesToCache(System.Collections.Generic.IEnumerable<Nancy.Routing.RouteDescription>, string)", file="NancyRazorErrorView.cs"];
m28_21 [label="this[moduleKey] = new List<Tuple<int, RouteDescription>>()", span="33-33", cluster="Nancy.Routing.RouteCache.AddRoutesToCache(System.Collections.Generic.IEnumerable<Nancy.Routing.RouteDescription>, string)", file="NancyRazorErrorView.cs"];
m28_22 [label="this[moduleKey].AddRange(routes.Select((r, i) => new Tuple<int, RouteDescription>(i, r)))", span="36-36", cluster="Nancy.Routing.RouteCache.AddRoutesToCache(System.Collections.Generic.IEnumerable<Nancy.Routing.RouteDescription>, string)", file="NancyRazorErrorView.cs"];
m28_23 [label="Exit Nancy.Routing.RouteCache.AddRoutesToCache(System.Collections.Generic.IEnumerable<Nancy.Routing.RouteDescription>, string)", span="29-29", cluster="Nancy.Routing.RouteCache.AddRoutesToCache(System.Collections.Generic.IEnumerable<Nancy.Routing.RouteDescription>, string)", file="NancyRazorErrorView.cs"];
m28_0 [label="Entry Nancy.Routing.RouteCache.RouteCache(Nancy.INancyModuleCatalog, Nancy.Bootstrapper.IModuleKeyGenerator, Nancy.INancyContextFactory)", span="11-11", cluster="Nancy.Routing.RouteCache.RouteCache(Nancy.INancyModuleCatalog, Nancy.Bootstrapper.IModuleKeyGenerator, Nancy.INancyContextFactory)", file="NancyRazorErrorView.cs"];
m28_1 [label="this.moduleKeyGenerator = moduleKeyGenerator", span="13-13", cluster="Nancy.Routing.RouteCache.RouteCache(Nancy.INancyModuleCatalog, Nancy.Bootstrapper.IModuleKeyGenerator, Nancy.INancyContextFactory)", file="NancyRazorErrorView.cs"];
m28_2 [label="this.BuildCache(moduleCatalog.GetAllModules(contextFactory.Create()))", span="15-15", cluster="Nancy.Routing.RouteCache.RouteCache(Nancy.INancyModuleCatalog, Nancy.Bootstrapper.IModuleKeyGenerator, Nancy.INancyContextFactory)", file="NancyRazorErrorView.cs"];
m28_3 [label="Exit Nancy.Routing.RouteCache.RouteCache(Nancy.INancyModuleCatalog, Nancy.Bootstrapper.IModuleKeyGenerator, Nancy.INancyContextFactory)", span="11-11", cluster="Nancy.Routing.RouteCache.RouteCache(Nancy.INancyModuleCatalog, Nancy.Bootstrapper.IModuleKeyGenerator, Nancy.INancyContextFactory)", file="NancyRazorErrorView.cs"];
m28_15 [label="Entry Unk.AddRoutesToCache", span="", cluster="Unk.AddRoutesToCache", file="NancyRazorErrorView.cs"];
m28_6 [label="Entry Nancy.Routing.RouteCache.BuildCache(System.Collections.Generic.IEnumerable<Nancy.NancyModule>)", span="18-18", cluster="Nancy.Routing.RouteCache.BuildCache(System.Collections.Generic.IEnumerable<Nancy.NancyModule>)", file="NancyRazorErrorView.cs"];
m28_7 [label=modules, span="20-20", cluster="Nancy.Routing.RouteCache.BuildCache(System.Collections.Generic.IEnumerable<Nancy.NancyModule>)", file="NancyRazorErrorView.cs"];
m28_8 [label="var moduleType = module.GetType()", span="22-22", cluster="Nancy.Routing.RouteCache.BuildCache(System.Collections.Generic.IEnumerable<Nancy.NancyModule>)", file="NancyRazorErrorView.cs"];
m28_10 [label="this.AddRoutesToCache(module.Routes.Select(r => r.Description), moduleKey)", span="25-25", cluster="Nancy.Routing.RouteCache.BuildCache(System.Collections.Generic.IEnumerable<Nancy.NancyModule>)", file="NancyRazorErrorView.cs"];
m28_9 [label="var moduleKey = this.moduleKeyGenerator.GetKeyForModuleType(moduleType)", span="23-23", cluster="Nancy.Routing.RouteCache.BuildCache(System.Collections.Generic.IEnumerable<Nancy.NancyModule>)", file="NancyRazorErrorView.cs"];
m28_11 [label="Exit Nancy.Routing.RouteCache.BuildCache(System.Collections.Generic.IEnumerable<Nancy.NancyModule>)", span="18-18", cluster="Nancy.Routing.RouteCache.BuildCache(System.Collections.Generic.IEnumerable<Nancy.NancyModule>)", file="NancyRazorErrorView.cs"];
m28_5 [label="Entry Nancy.INancyModuleCatalog.GetAllModules(Nancy.NancyContext)", span="14-14", cluster="Nancy.INancyModuleCatalog.GetAllModules(Nancy.NancyContext)", file="NancyRazorErrorView.cs"];
m28_26 [label="Entry Unk.AddRange", span="", cluster="Unk.AddRange", file="NancyRazorErrorView.cs"];
m28_4 [label="Entry Nancy.INancyContextFactory.Create()", span="11-11", cluster="Nancy.INancyContextFactory.Create()", file="NancyRazorErrorView.cs"];
m28_13 [label="Entry Nancy.Bootstrapper.IModuleKeyGenerator.GetKeyForModuleType(System.Type)", span="14-14", cluster="Nancy.Bootstrapper.IModuleKeyGenerator.GetKeyForModuleType(System.Type)", file="NancyRazorErrorView.cs"];
m28_12 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="NancyRazorErrorView.cs"];
m28_36 [label="Entry lambda expression", span="41-41", cluster="lambda expression", file="NancyRazorErrorView.cs"];
m28_16 [label="Entry lambda expression", span="25-25", cluster="lambda expression", file="NancyRazorErrorView.cs"];
m28_17 [label="r.Description", span="25-25", cluster="lambda expression", file="NancyRazorErrorView.cs"];
m28_18 [label="Exit lambda expression", span="25-25", cluster="lambda expression", file="NancyRazorErrorView.cs"];
m28_27 [label="Entry lambda expression", span="36-36", cluster="lambda expression", file="NancyRazorErrorView.cs"];
m28_28 [label="new Tuple<int, RouteDescription>(i, r)", span="36-36", cluster="lambda expression", file="NancyRazorErrorView.cs"];
m28_29 [label="Exit lambda expression", span="36-36", cluster="lambda expression", file="NancyRazorErrorView.cs"];
m28_37 [label=r, span="41-41", cluster="lambda expression", file="NancyRazorErrorView.cs"];
m28_38 [label="Exit lambda expression", span="41-41", cluster="lambda expression", file="NancyRazorErrorView.cs"];
m28_31 [label="Entry Nancy.Routing.RouteCache.IsEmpty()", span="39-39", cluster="Nancy.Routing.RouteCache.IsEmpty()", file="NancyRazorErrorView.cs"];
m28_32 [label="return this.Values.SelectMany(r => r).Count() == 0;", span="41-41", cluster="Nancy.Routing.RouteCache.IsEmpty()", file="NancyRazorErrorView.cs"];
m28_33 [label="Exit Nancy.Routing.RouteCache.IsEmpty()", span="39-39", cluster="Nancy.Routing.RouteCache.IsEmpty()", file="NancyRazorErrorView.cs"];
m28_35 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="NancyRazorErrorView.cs"];
m28_14 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="NancyRazorErrorView.cs"];
m28_39 [label="Nancy.Routing.RouteCache", span="", file="NancyRazorErrorView.cs"];
m29_13 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])", file="ParameterizedRouteSegmentConstraintBase.cs"];
m29_12 [label="Entry string.Trim(params char[])", span="0-0", cluster="string.Trim(params char[])", file="ParameterizedRouteSegmentConstraintBase.cs"];
m29_3 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="ParameterizedRouteSegmentConstraintBase.cs"];
m29_15 [label="Entry Nancy.Routing.Constraints.ParameterizedRouteSegmentConstraintBase<T>.TryParseInt(string, out int)", span="19-19", cluster="Nancy.Routing.Constraints.ParameterizedRouteSegmentConstraintBase<T>.TryParseInt(string, out int)", file="ParameterizedRouteSegmentConstraintBase.cs"];
m29_16 [label="return int.TryParse(@string, NumberStyles.Integer, CultureInfo.InvariantCulture, out result);", span="31-31", cluster="Nancy.Routing.Constraints.ParameterizedRouteSegmentConstraintBase<T>.TryParseInt(string, out int)", color=green, community=0, file="ParameterizedRouteSegmentConstraintBase.cs"];
m29_17 [label="Exit Nancy.Routing.Constraints.ParameterizedRouteSegmentConstraintBase<T>.TryParseInt(string, out int)", span="19-19", cluster="Nancy.Routing.Constraints.ParameterizedRouteSegmentConstraintBase<T>.TryParseInt(string, out int)", file="ParameterizedRouteSegmentConstraintBase.cs"];
m29_18 [label="Entry int.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out int)", span="0-0", cluster="int.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out int)", file="ParameterizedRouteSegmentConstraintBase.cs"];
m29_7 [label="Entry Nancy.Routing.Constraints.ParameterizedRouteSegmentConstraintBase<T>.TryMatch(string, string, out T)", span="12-12", cluster="Nancy.Routing.Constraints.ParameterizedRouteSegmentConstraintBase<T>.TryMatch(string, string, out T)", file="ParameterizedRouteSegmentConstraintBase.cs"];
m29_8 [label="var parameters = constraint.Substring(constraint.IndexOf('(')).Trim('(', ')').Split(',')", span="14-14", cluster="Nancy.Routing.Constraints.ParameterizedRouteSegmentConstraintBase<T>.TryMatch(string, string, out T)", file="ParameterizedRouteSegmentConstraintBase.cs"];
m29_9 [label="return TryMatch(segment, parameters, out matchedValue);", span="16-16", cluster="Nancy.Routing.Constraints.ParameterizedRouteSegmentConstraintBase<T>.TryMatch(string, string, out T)", file="ParameterizedRouteSegmentConstraintBase.cs"];
m29_10 [label="Exit Nancy.Routing.Constraints.ParameterizedRouteSegmentConstraintBase<T>.TryMatch(string, string, out T)", span="12-12", cluster="Nancy.Routing.Constraints.ParameterizedRouteSegmentConstraintBase<T>.TryMatch(string, string, out T)", file="ParameterizedRouteSegmentConstraintBase.cs"];
m29_4 [label="Entry string.IndexOf(char)", span="0-0", cluster="string.IndexOf(char)", file="ParameterizedRouteSegmentConstraintBase.cs"];
m29_0 [label="Entry Nancy.Routing.Constraints.ParameterizedRouteSegmentConstraintBase<T>.Matches(string)", span="7-7", cluster="Nancy.Routing.Constraints.ParameterizedRouteSegmentConstraintBase<T>.Matches(string)", file="ParameterizedRouteSegmentConstraintBase.cs"];
m29_1 [label="return constraint.Contains('(') && constraint.Contains(')') && base.Matches(constraint.Substring(0, constraint.IndexOf('(')));", span="9-9", cluster="Nancy.Routing.Constraints.ParameterizedRouteSegmentConstraintBase<T>.Matches(string)", file="ParameterizedRouteSegmentConstraintBase.cs"];
m29_2 [label="Exit Nancy.Routing.Constraints.ParameterizedRouteSegmentConstraintBase<T>.Matches(string)", span="7-7", cluster="Nancy.Routing.Constraints.ParameterizedRouteSegmentConstraintBase<T>.Matches(string)", file="ParameterizedRouteSegmentConstraintBase.cs"];
m29_6 [label="Entry Nancy.Routing.Constraints.RouteSegmentConstraintBase<T>.Matches(string)", span="10-10", cluster="Nancy.Routing.Constraints.RouteSegmentConstraintBase<T>.Matches(string)", file="ParameterizedRouteSegmentConstraintBase.cs"];
m29_14 [label="Entry Nancy.Routing.Constraints.ParameterizedRouteSegmentConstraintBase<T>.TryMatch(string, string[], out T)", span="24-24", cluster="Nancy.Routing.Constraints.ParameterizedRouteSegmentConstraintBase<T>.TryMatch(string, string[], out T)", file="ParameterizedRouteSegmentConstraintBase.cs"];
m29_19 [label="Exit Nancy.Routing.Constraints.ParameterizedRouteSegmentConstraintBase<T>.TryMatch(string, string[], out T)", span="24-24", cluster="Nancy.Routing.Constraints.ParameterizedRouteSegmentConstraintBase<T>.TryMatch(string, string[], out T)", file="ParameterizedRouteSegmentConstraintBase.cs"];
m29_5 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)", file="ParameterizedRouteSegmentConstraintBase.cs"];
m29_11 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)", file="ParameterizedRouteSegmentConstraintBase.cs"];
m29_20 [label="Nancy.Routing.Constraints.ParameterizedRouteSegmentConstraintBase<T>", span="", file="ParameterizedRouteSegmentConstraintBase.cs"];
m30_444 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_options_request_when_route_is_defined()", span="454-454", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_options_request_when_route_is_defined()", file="PropertyValidatorFixture.cs"];
m30_445 [label="var request = new FakeRequest(''OPTIONS'', ''/foo/bar'')", span="457-457", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_options_request_when_route_is_defined()", file="PropertyValidatorFixture.cs"];
m30_446 [label="var context = new NancyContext {Request = request}", span="458-458", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_options_request_when_route_is_defined()", file="PropertyValidatorFixture.cs"];
m30_447 [label="var resolver = CreateResolver(x => x.AddGetRoute(''/foo/bar''))", span="459-459", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_options_request_when_route_is_defined()", file="PropertyValidatorFixture.cs"];
m30_448 [label="var resolvedRoute = resolver.Resolve(context)", span="462-462", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_options_request_when_route_is_defined()", file="PropertyValidatorFixture.cs"];
m30_449 [label="resolvedRoute.ShouldNotBeNull()", span="465-465", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_options_request_when_route_is_defined()", file="PropertyValidatorFixture.cs"];
m30_450 [label="resolvedRoute.Item1.ShouldBeOfType<OptionsRoute>()", span="466-466", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_options_request_when_route_is_defined()", file="PropertyValidatorFixture.cs"];
m30_451 [label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_options_request_when_route_is_defined()", span="454-454", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_options_request_when_route_is_defined()", file="PropertyValidatorFixture.cs"];
m30_478 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_optionsroute_with_allow_header_set_to_allowed_methods_matching_request_route_for_options()", span="503-503", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_optionsroute_with_allow_header_set_to_allowed_methods_matching_request_route_for_options()", file="PropertyValidatorFixture.cs"];
m30_479 [label="var request = new FakeRequest(''OPTIONS'', ''/foo/bar'')", span="506-506", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_optionsroute_with_allow_header_set_to_allowed_methods_matching_request_route_for_options()", file="PropertyValidatorFixture.cs"];
m30_480 [label="var context = new NancyContext {Request = request}", span="507-507", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_optionsroute_with_allow_header_set_to_allowed_methods_matching_request_route_for_options()", file="PropertyValidatorFixture.cs"];
m30_481 [label="var resolver = CreateResolver(x =>\r\n            {\r\n                x.AddGetRoute(''/foo/bar'');\r\n                x.AddPutRoute(''/foo/bar'');\r\n            })", span="508-512", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_optionsroute_with_allow_header_set_to_allowed_methods_matching_request_route_for_options()", file="PropertyValidatorFixture.cs"];
m30_482 [label="var route = resolver.Resolve(context).Item1", span="515-515", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_optionsroute_with_allow_header_set_to_allowed_methods_matching_request_route_for_options()", file="PropertyValidatorFixture.cs"];
m30_483 [label="route.ShouldNotBeNull()", span="518-518", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_optionsroute_with_allow_header_set_to_allowed_methods_matching_request_route_for_options()", file="PropertyValidatorFixture.cs"];
m30_484 [label="route.ShouldBeOfType<OptionsRoute>()", span="519-519", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_optionsroute_with_allow_header_set_to_allowed_methods_matching_request_route_for_options()", file="PropertyValidatorFixture.cs"];
m30_485 [label="route.Invoke(new DynamicDictionary()).Headers[''Allow''].ShouldEqual(''GET, PUT'')", span="520-520", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_optionsroute_with_allow_header_set_to_allowed_methods_matching_request_route_for_options()", file="PropertyValidatorFixture.cs"];
m30_486 [label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_optionsroute_with_allow_header_set_to_allowed_methods_matching_request_route_for_options()", span="503-503", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_optionsroute_with_allow_header_set_to_allowed_methods_matching_request_route_for_options()", file="PropertyValidatorFixture.cs"];
m30_270 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_request_uri()", span="245-245", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_request_uri()", file="PropertyValidatorFixture.cs"];
m30_271 [label="var request = new FakeRequest(''get'', ''/foo/bar'')", span="248-248", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_request_uri()", file="PropertyValidatorFixture.cs"];
m30_272 [label="var context = new NancyContext {Request = request}", span="249-249", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_request_uri()", file="PropertyValidatorFixture.cs"];
m30_275 [label="A.CallTo(() => this.matcher.Match(request.Path, A<string>.Ignored, A<NancyContext>.Ignored)).MustHaveHappened()", span="256-256", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_request_uri()", file="PropertyValidatorFixture.cs"];
m30_273 [label="var resolver = CreateResolver(x => x.AddGetRoute(''/foo/bar''))", span="250-250", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_request_uri()", file="PropertyValidatorFixture.cs"];
m30_274 [label="resolver.Resolve(context)", span="253-253", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_request_uri()", file="PropertyValidatorFixture.cs"];
m30_276 [label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_request_uri()", span="245-245", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_request_uri()", file="PropertyValidatorFixture.cs"];
m30_75 [label="var request = new FakeRequest(''get'', ''/foo/bar'')", span="64-64", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_parameters_on_resolved_route_to_parameteres_that_was_matched()", file="PropertyValidatorFixture.cs"];
m30_77 [label="var resolver = \r\n                CreateResolver(x => x.AddGetRoute(''/foo/bar'', ''module-key''))", span="67-68", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_parameters_on_resolved_route_to_parameteres_that_was_matched()", file="PropertyValidatorFixture.cs"];
m30_78 [label="var resolvedRoute = resolver.Resolve(context)", span="71-71", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_parameters_on_resolved_route_to_parameteres_that_was_matched()", file="PropertyValidatorFixture.cs"];
m30_79 [label="resolvedRoute.ShouldNotBeOfType<NotFoundRoute>()", span="74-74", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_parameters_on_resolved_route_to_parameteres_that_was_matched()", file="PropertyValidatorFixture.cs"];
m30_76 [label="var context = new NancyContext {Request = request}", span="65-65", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_parameters_on_resolved_route_to_parameteres_that_was_matched()", file="PropertyValidatorFixture.cs"];
m30_80 [label="resolvedRoute.ShouldNotBeOfType<MethodNotAllowedRoute>()", span="75-75", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_parameters_on_resolved_route_to_parameteres_that_was_matched()", file="PropertyValidatorFixture.cs"];
m30_61 [label="A.CallTo(() => this.adapter1.Validate(A<object>._, this.mappings.Keys.First(), A<PropertyDescriptor>._)).MustHaveHappened()", span="98-98", cluster="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture.Should_pass_attribute_to_validator_when_validate_is_invoked()", file="PropertyValidatorFixture.cs"];
m30_54 [label="Exit lambda expression", span="36-40", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_161 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", span="150-150", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", file="PropertyValidatorFixture.cs"];
m30_162 [label="var request = new FakeRequest(''get'', ''/foo/bar'')", span="153-153", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", file="PropertyValidatorFixture.cs"];
m30_163 [label="var context = new NancyContext { Request = request }", span="154-154", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", file="PropertyValidatorFixture.cs"];
m30_165 [label="A.CallTo(() => this.matcher.Match(request.Path, ''/foo/bar'', null)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(true)))", span="166-167", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", file="PropertyValidatorFixture.cs"];
m30_166 [label="A.CallTo(() => this.matcher.Match(request.Path, ''/foo/{bar}'', null)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(true).AddParameter(''bar'', ''fake value'')))", span="169-170", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", file="PropertyValidatorFixture.cs"];
m30_167 [label="A.CallTo(() => this.matcher.Match(request.Path, ''/foo/{bar}'', null)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(true)\r\n                    .AddParameter(''foo'', ''fake value'')\r\n                    .AddParameter(''bar'', ''fake value'')))", span="172-175", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", file="PropertyValidatorFixture.cs"];
m30_164 [label="var resolver = CreateResolver(x =>\r\n            {\r\n                x.AddGetRoute(''/foo/{bar}'', ''module-key-parameters'');\r\n                x.AddGetRoute(''/{foo}/{bar}'', ''module-key-two-parameters'');\r\n                x.AddGetRoute(''/foo/bar'', ''module-key-no-parameters'');\r\n                x.AddGetRoute(''/foo/bar'', ''module-key-no-parameters-second'');\r\n                x.AddGetRoute(''/foo/{bar}'', ''module-key-parameters'');\r\n                x.AddGetRoute(''/{foo}/{bar}'', ''module-key-two-parameters'');\r\n            })", span="156-164", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", file="PropertyValidatorFixture.cs"];
m30_168 [label="resolver.Resolve(context)", span="177-177", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", file="PropertyValidatorFixture.cs"];
m30_169 [label="A.CallTo(() => this.catalog.GetModuleByKey(''module-key-no-parameters'', context)).MustHaveHappened()", span="180-180", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", file="PropertyValidatorFixture.cs"];
m30_170 [label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", span="150-150", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", file="PropertyValidatorFixture.cs"];
m30_29 [label="Entry Unk.GetModuleByKey", span="", cluster="Unk.GetModuleByKey", file="PropertyValidatorFixture.cs"];
m30_49 [label="Exit lambda expression", span="35-40", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_51 [label="Entry lambda expression", span="36-40", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_52 [label="c.IsMatch(((string)x.Arguments[0]).Equals(((string)x.Arguments[1])))", span="38-38", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_50 [label="Entry Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResult(System.Action<Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator>)", span="13-13", cluster="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResult(System.Action<Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator>)", file="PropertyValidatorFixture.cs"];
m30_53 [label="c.AddParameter(''foo'', ''bar'')", span="39-39", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_346 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_allow_header_set_to_allowed_methods_matching_request_route()", span="331-331", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_allow_header_set_to_allowed_methods_matching_request_route()", file="PropertyValidatorFixture.cs"];
m30_347 [label="var request = new FakeRequest(''POST'', ''/foo/bar'')", span="334-334", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_allow_header_set_to_allowed_methods_matching_request_route()", file="PropertyValidatorFixture.cs"];
m30_348 [label="var context = new NancyContext { Request = request }", span="335-335", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_allow_header_set_to_allowed_methods_matching_request_route()", file="PropertyValidatorFixture.cs"];
m30_349 [label="var resolver = CreateResolver(x => {\r\n                x.AddGetRoute(''/foo/bar'');\r\n                x.AddPutRoute(''/foo/bar'');\r\n            })", span="337-340", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_allow_header_set_to_allowed_methods_matching_request_route()", file="PropertyValidatorFixture.cs"];
m30_350 [label="var route = resolver.Resolve(context).Item1", span="343-343", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_allow_header_set_to_allowed_methods_matching_request_route()", file="PropertyValidatorFixture.cs"];
m30_351 [label="route.ShouldNotBeNull()", span="346-346", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_allow_header_set_to_allowed_methods_matching_request_route()", file="PropertyValidatorFixture.cs"];
m30_352 [label="route.ShouldBeOfType<MethodNotAllowedRoute>()", span="347-347", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_allow_header_set_to_allowed_methods_matching_request_route()", file="PropertyValidatorFixture.cs"];
m30_353 [label="route.Invoke(new DynamicDictionary()).Headers[''Allow''].ShouldEqual(''GET, PUT'')", span="348-348", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_allow_header_set_to_allowed_methods_matching_request_route()", file="PropertyValidatorFixture.cs"];
m30_354 [label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_allow_header_set_to_allowed_methods_matching_request_route()", span="331-331", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_allow_header_set_to_allowed_methods_matching_request_route()", file="PropertyValidatorFixture.cs"];
m30_550 [label="Entry DefaultRouteResolver.cstr", span="", cluster="DefaultRouteResolver.cstr", file="PropertyValidatorFixture.cs"];
m30_105 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_first_route_with_when_multiple_matches_are_available_and_contains_same_number_of_parameter_captures()", span="99-99", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_first_route_with_when_multiple_matches_are_available_and_contains_same_number_of_parameter_captures()", file="PropertyValidatorFixture.cs"];
m30_106 [label="var request = new FakeRequest(''get'', ''/foo/bar'')", span="102-102", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_first_route_with_when_multiple_matches_are_available_and_contains_same_number_of_parameter_captures()", file="PropertyValidatorFixture.cs"];
m30_107 [label="var context = new NancyContext { Request = request }", span="103-103", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_first_route_with_when_multiple_matches_are_available_and_contains_same_number_of_parameter_captures()", file="PropertyValidatorFixture.cs"];
m30_110 [label="A.CallTo(() => this.matcher.Match(request.Path, ''/foo/{bar}'', A<NancyContext>.Ignored)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(true).AddParameter(''bar'', ''fake value'')))", span="112-113", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_first_route_with_when_multiple_matches_are_available_and_contains_same_number_of_parameter_captures()", file="PropertyValidatorFixture.cs"];
m30_108 [label="var resolver = CreateResolver(x => {\r\n                x.AddGetRoute(''/foo/{bar}'', ''first-module-key-parameters'');\r\n                x.AddGetRoute(''/foo/{bar}'', ''second-module-key-parameters'');\r\n            })", span="105-108", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_first_route_with_when_multiple_matches_are_available_and_contains_same_number_of_parameter_captures()", file="PropertyValidatorFixture.cs"];
m30_111 [label="resolver.Resolve(context)", span="116-116", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_first_route_with_when_multiple_matches_are_available_and_contains_same_number_of_parameter_captures()", file="PropertyValidatorFixture.cs"];
m30_112 [label="A.CallTo(() => this.catalog.GetModuleByKey(''first-module-key-parameters'', context)).MustHaveHappened()", span="119-119", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_first_route_with_when_multiple_matches_are_available_and_contains_same_number_of_parameter_captures()", file="PropertyValidatorFixture.cs"];
m30_109 [label="this.expectedModule = new FakeNancyModule(x => x.AddGetRoute(''/foo/{bar}'', this.expectedAction))", span="110-110", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_first_route_with_when_multiple_matches_are_available_and_contains_same_number_of_parameter_captures()", file="PropertyValidatorFixture.cs"];
m30_113 [label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_first_route_with_when_multiple_matches_are_available_and_contains_same_number_of_parameter_captures()", span="99-99", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_first_route_with_when_multiple_matches_are_available_and_contains_same_number_of_parameter_captures()", file="PropertyValidatorFixture.cs"];
m30_466 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_options_route_with_path_set_to_request_route_for_options()", span="486-486", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_options_route_with_path_set_to_request_route_for_options()", file="PropertyValidatorFixture.cs"];
m30_467 [label="var request = new FakeRequest(''OPTIONS'', ''/foo/bar'')", span="489-489", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_options_route_with_path_set_to_request_route_for_options()", file="PropertyValidatorFixture.cs"];
m30_468 [label="var context = new NancyContext { Request = request }", span="490-490", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_options_route_with_path_set_to_request_route_for_options()", file="PropertyValidatorFixture.cs"];
m30_473 [label="resolvedRoute.Item1.Description.Path.ShouldEqual(request.Path)", span="499-499", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_options_route_with_path_set_to_request_route_for_options()", file="PropertyValidatorFixture.cs"];
m30_469 [label="var resolver = CreateResolver(x => x.AddGetRoute(''/foo/bar''))", span="491-491", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_options_route_with_path_set_to_request_route_for_options()", file="PropertyValidatorFixture.cs"];
m30_470 [label="var resolvedRoute = resolver.Resolve(context)", span="494-494", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_options_route_with_path_set_to_request_route_for_options()", file="PropertyValidatorFixture.cs"];
m30_471 [label="resolvedRoute.ShouldNotBeNull()", span="497-497", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_options_route_with_path_set_to_request_route_for_options()", file="PropertyValidatorFixture.cs"];
m30_472 [label="resolvedRoute.Item1.ShouldBeOfType<OptionsRoute>()", span="498-498", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_options_route_with_path_set_to_request_route_for_options()", file="PropertyValidatorFixture.cs"];
m30_474 [label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_options_route_with_path_set_to_request_route_for_options()", span="486-486", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_options_route_with_path_set_to_request_route_for_options()", file="PropertyValidatorFixture.cs"];
m30_91 [label="Entry Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator.AddGetRoute(string, string)", span="62-62", cluster="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator.AddGetRoute(string, string)", file="PropertyValidatorFixture.cs"];
m30_200 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", span="184-184", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", file="PropertyValidatorFixture.cs"];
m30_201 [label="var request = new FakeRequest(''get'', ''/foo/bar/me'')", span="189-189", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", file="PropertyValidatorFixture.cs"];
m30_202 [label="var context = new NancyContext { Request = request }", span="190-190", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", file="PropertyValidatorFixture.cs"];
m30_205 [label="A.CallTo(() => this.matcher.Match(request.Path, ''/foo/bar/{two}'', A<NancyContext>.Ignored)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(true).AddParameter(''two'', ''fake values'')))", span="202-203", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", file="PropertyValidatorFixture.cs"];
m30_206 [label="A.CallTo(() => this.matcher.Match(request.Path, ''/foo/{bar}/{two}'', A<NancyContext>.Ignored)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(true)\r\n                    .AddParameter(''bar'', ''fake values'')\r\n                    .AddParameter(''two'', ''fake values'')))", span="205-208", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", file="PropertyValidatorFixture.cs"];
m30_207 [label="A.CallTo(() => this.matcher.Match(request.Path, ''/foo/{bar}'', A<NancyContext>.Ignored)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(true).AddParameter(''bar'', ''fake value'')))", span="210-211", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", file="PropertyValidatorFixture.cs"];
m30_203 [label="var resolver = CreateResolver(x =>\r\n            {\r\n                x.AddGetRoute(''/foo/{bar}'', ''module-key-first'');\r\n                x.AddGetRoute(''/foo/{bar}/{two}'', ''module-key-third'');\r\n                x.AddGetRoute(''/foo/bar/{two}'', ''module-key-second'');\r\n                x.AddGetRoute(''/foo/{bar}/{two}'', ''module-key-third'');\r\n            })", span="192-198", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", file="PropertyValidatorFixture.cs"];
m30_208 [label="resolver.Resolve(context)", span="214-214", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", file="PropertyValidatorFixture.cs"];
m30_209 [label="A.CallTo(() => this.catalog.GetModuleByKey(''module-key-second'', context)).MustHaveHappened()", span="217-217", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", file="PropertyValidatorFixture.cs"];
m30_204 [label="this.expectedModule = new FakeNancyModule(x => x.AddGetRoute(''/foo/bar/{two}'', this.expectedAction))", span="200-200", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", file="PropertyValidatorFixture.cs"];
m30_210 [label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", span="184-184", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", file="PropertyValidatorFixture.cs"];
m30_58 [label="Entry lambda expression", span="44-44", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_60 [label="Exit lambda expression", span="44-44", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_59 [label="moduleKeyGenerator.GetKeyForModuleType(A<Type>._)", span="44-44", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_62 [label="Entry lambda expression", span="44-44", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_526 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_whos_filter_returns_true_when_there_is_also_a_matching_route_with_a_failing_filter()", span="578-578", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_whos_filter_returns_true_when_there_is_also_a_matching_route_with_a_failing_filter()", file="PropertyValidatorFixture.cs"];
m30_527 [label="var moduleCatalog = new FakeModuleCatalog()", span="581-581", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_whos_filter_returns_true_when_there_is_also_a_matching_route_with_a_failing_filter()", file="PropertyValidatorFixture.cs"];
m30_528 [label="var routeCache = new RouteCache(moduleCatalog, new FakeModuleKeyGenerator(), A.Fake<INancyContextFactory>())", span="582-582", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_whos_filter_returns_true_when_there_is_also_a_matching_route_with_a_failing_filter()", file="PropertyValidatorFixture.cs"];
m30_529 [label="var specificResolver = new DefaultRouteResolver(moduleCatalog, this.matcher, this.moduleBuilder, routeCache)", span="583-583", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_whos_filter_returns_true_when_there_is_also_a_matching_route_with_a_failing_filter()", file="PropertyValidatorFixture.cs"];
m30_530 [label="var request = new FakeRequest(''GET'', ''/filt'')", span="584-584", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_whos_filter_returns_true_when_there_is_also_a_matching_route_with_a_failing_filter()", file="PropertyValidatorFixture.cs"];
m30_532 [label="var route = specificResolver.Resolve(context).Item1", span="588-588", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_whos_filter_returns_true_when_there_is_also_a_matching_route_with_a_failing_filter()", file="PropertyValidatorFixture.cs"];
m30_531 [label="var context = new NancyContext { Request = request }", span="585-585", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_whos_filter_returns_true_when_there_is_also_a_matching_route_with_a_failing_filter()", file="PropertyValidatorFixture.cs"];
m30_533 [label="route.Description.Condition(context).ShouldBeTrue()", span="591-591", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_whos_filter_returns_true_when_there_is_also_a_matching_route_with_a_failing_filter()", file="PropertyValidatorFixture.cs"];
m30_534 [label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_whos_filter_returns_true_when_there_is_also_a_matching_route_with_a_failing_filter()", span="578-578", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_whos_filter_returns_true_when_there_is_also_a_matching_route_with_a_failing_filter()", file="PropertyValidatorFixture.cs"];
m30_41 [label="this.expectedModule", span="32-32", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_241 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_choose_root_route_over_one_with_capture_if_requesting_root_uri()", span="221-221", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_choose_root_route_over_one_with_capture_if_requesting_root_uri()", file="PropertyValidatorFixture.cs"];
m30_242 [label="var request = new FakeRequest(''get'', ''/'')", span="223-223", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_choose_root_route_over_one_with_capture_if_requesting_root_uri()", file="PropertyValidatorFixture.cs"];
m30_243 [label="var context = new NancyContext { Request = request }", span="224-224", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_choose_root_route_over_one_with_capture_if_requesting_root_uri()", file="PropertyValidatorFixture.cs"];
m30_245 [label="A.CallTo(() => this.matcher.Match(request.Path, ''/'', A<NancyContext>.Ignored)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(true)))", span="232-233", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_choose_root_route_over_one_with_capture_if_requesting_root_uri()", file="PropertyValidatorFixture.cs"];
m30_246 [label="A.CallTo(() => this.matcher.Match(request.Path, ''/{name}'', A<NancyContext>.Ignored)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(true).AddParameter(''name'', ''fake values'')))", span="234-235", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_choose_root_route_over_one_with_capture_if_requesting_root_uri()", file="PropertyValidatorFixture.cs"];
m30_244 [label="var resolver = CreateResolver(x => {\r\n                x.AddGetRoute(''/{name}'', ''module-key-second'');\r\n                x.AddGetRoute(''/'', ''module-key-first'');\r\n                x.AddGetRoute(''/{name}'', ''module-key-second'');\r\n            })", span="226-230", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_choose_root_route_over_one_with_capture_if_requesting_root_uri()", file="PropertyValidatorFixture.cs"];
m30_247 [label="resolver.Resolve(context)", span="238-238", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_choose_root_route_over_one_with_capture_if_requesting_root_uri()", file="PropertyValidatorFixture.cs"];
m30_248 [label="A.CallTo(() => this.catalog.GetModuleByKey(''module-key-first'', context)).MustHaveHappened()", span="241-241", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_choose_root_route_over_one_with_capture_if_requesting_root_uri()", file="PropertyValidatorFixture.cs"];
m30_249 [label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_choose_root_route_over_one_with_capture_if_requesting_root_uri()", span="221-221", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_choose_root_route_over_one_with_capture_if_requesting_root_uri()", file="PropertyValidatorFixture.cs"];
m30_67 [label="return CreateResolver(cache);", span="52-52", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.CreateResolver(System.Action<Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator>)", file="PropertyValidatorFixture.cs"];
m30_69 [label="Entry Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCache(System.Action<Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator>)", span="17-17", cluster="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCache(System.Action<Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator>)", file="PropertyValidatorFixture.cs"];
m30_70 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.CreateResolver(Nancy.Routing.IRouteCache)", span="55-55", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.CreateResolver(Nancy.Routing.IRouteCache)", file="PropertyValidatorFixture.cs"];
m30_68 [label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.CreateResolver(System.Action<Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator>)", span="47-47", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.CreateResolver(System.Action<Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator>)", file="PropertyValidatorFixture.cs"];
m30_71 [label="return new DefaultRouteResolver(this.catalog, this.matcher, this.moduleBuilder, cache);", span="57-57", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.CreateResolver(Nancy.Routing.IRouteCache)", file="PropertyValidatorFixture.cs"];
m30_280 [label="Entry Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator.AddGetRoute(string)", span="55-55", cluster="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator.AddGetRoute(string)", file="PropertyValidatorFixture.cs"];
m30_46 [label="Entry lambda expression", span="72-72", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_329 [label="Entry object.ShouldNotBeNull()", span="140-140", cluster="object.ShouldNotBeNull()", file="PropertyValidatorFixture.cs"];
m30_72 [label="Entry lambda expression", span="111-111", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_455 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_have_status_code_200_for_options_when_route_is_defined()", span="470-470", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_have_status_code_200_for_options_when_route_is_defined()", file="PropertyValidatorFixture.cs"];
m30_456 [label="var request = new FakeRequest(''OPTIONS'', ''/foo/bar'')", span="473-473", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_have_status_code_200_for_options_when_route_is_defined()", file="PropertyValidatorFixture.cs"];
m30_457 [label="var context = new NancyContext { Request = request }", span="474-474", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_have_status_code_200_for_options_when_route_is_defined()", file="PropertyValidatorFixture.cs"];
m30_458 [label="var resolver = CreateResolver(x => x.AddGetRoute(''/foo/bar''))", span="475-475", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_have_status_code_200_for_options_when_route_is_defined()", file="PropertyValidatorFixture.cs"];
m30_459 [label="var resolvedRoute = resolver.Resolve(context)", span="478-478", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_have_status_code_200_for_options_when_route_is_defined()", file="PropertyValidatorFixture.cs"];
m30_460 [label="var response = resolvedRoute.Item1.Invoke(null)", span="479-479", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_have_status_code_200_for_options_when_route_is_defined()", file="PropertyValidatorFixture.cs"];
m30_461 [label="response.StatusCode.ShouldEqual(HttpStatusCode.OK)", span="482-482", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_have_status_code_200_for_options_when_route_is_defined()", file="PropertyValidatorFixture.cs"];
m30_462 [label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_have_status_code_200_for_options_when_route_is_defined()", span="470-470", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_have_status_code_200_for_options_when_route_is_defined()", file="PropertyValidatorFixture.cs"];
m30_81 [label="((string)resolvedRoute.Item2[''foo'']).ShouldEqual(''bar'')", span="76-76", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_parameters_on_resolved_route_to_parameteres_that_was_matched()", file="PropertyValidatorFixture.cs"];
m30_85 [label="Entry Nancy.Routing.DefaultRouteResolver.Resolve(Nancy.NancyContext)", span="40-40", cluster="Nancy.Routing.DefaultRouteResolver.Resolve(Nancy.NancyContext)", file="PropertyValidatorFixture.cs"];
m30_18 [label="Entry Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModule(System.Action<Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModuleConfigurator>)", span="10-10", cluster="Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModule(System.Action<Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModuleConfigurator>)", file="PropertyValidatorFixture.cs"];
m30_101 [label="Entry object.ShouldBeSameAs(object)", span="130-130", cluster="object.ShouldBeSameAs(object)", file="PropertyValidatorFixture.cs"];
m30_55 [label="Entry lambda expression", span="85-85", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_535 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="PropertyValidatorFixture.cs"];
m30_537 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", span="595-595", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="PropertyValidatorFixture.cs"];
m30_538 [label="var moduleCatalog = A.Fake<INancyModuleCatalog>()", span="598-598", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="PropertyValidatorFixture.cs"];
m30_539 [label="A.CallTo(() => moduleCatalog.GetAllModules(A<NancyContext>.Ignored)).Returns(new[] { new FakeNancyModuleWithPreAndPostHooks() })", span="599-599", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="PropertyValidatorFixture.cs"];
m30_540 [label="A.CallTo(() => moduleCatalog.GetModuleByKey(A<string>.Ignored, A<NancyContext>.Ignored)).Returns(\r\n                new FakeNancyModuleWithPreAndPostHooks())", span="600-601", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="PropertyValidatorFixture.cs"];
m30_541 [label="var routeCache = new RouteCache(moduleCatalog, new FakeModuleKeyGenerator(), A.Fake<INancyContextFactory>())", span="603-603", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="PropertyValidatorFixture.cs"];
m30_542 [label="var specificResolver = new DefaultRouteResolver(moduleCatalog, this.matcher, this.moduleBuilder, routeCache)", span="604-604", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="PropertyValidatorFixture.cs"];
m30_543 [label="var request = new FakeRequest(''GET'', ''/PrePost'')", span="605-605", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="PropertyValidatorFixture.cs"];
m30_545 [label="var result = specificResolver.Resolve(context)", span="609-609", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="PropertyValidatorFixture.cs"];
m30_544 [label="var context = new NancyContext { Request = request }", span="606-606", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="PropertyValidatorFixture.cs"];
m30_546 [label="result.Item3.ShouldNotBeNull()", span="612-612", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="PropertyValidatorFixture.cs"];
m30_547 [label="result.Item4.ShouldNotBeNull()", span="613-613", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="PropertyValidatorFixture.cs"];
m30_548 [label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", span="595-595", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="PropertyValidatorFixture.cs"];
m30_333 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_path_set_to_request_uri_when_matched_route_was_for_wrong_request_method()", span="314-314", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_path_set_to_request_uri_when_matched_route_was_for_wrong_request_method()", file="PropertyValidatorFixture.cs"];
m30_334 [label="var request = new FakeRequest(''POST'', ''/foo/bar'')", span="317-317", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_path_set_to_request_uri_when_matched_route_was_for_wrong_request_method()", file="PropertyValidatorFixture.cs"];
m30_335 [label="var context = new NancyContext { Request = request }", span="318-318", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_path_set_to_request_uri_when_matched_route_was_for_wrong_request_method()", file="PropertyValidatorFixture.cs"];
m30_340 [label="route.Description.Path.ShouldEqual(request.Path)", span="327-327", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_path_set_to_request_uri_when_matched_route_was_for_wrong_request_method()", file="PropertyValidatorFixture.cs"];
m30_336 [label="var resolver = CreateResolver(x => x.AddGetRoute(''/foo/bar''))", span="319-319", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_path_set_to_request_uri_when_matched_route_was_for_wrong_request_method()", file="PropertyValidatorFixture.cs"];
m30_337 [label="var route = resolver.Resolve(context).Item1", span="322-322", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_path_set_to_request_uri_when_matched_route_was_for_wrong_request_method()", file="PropertyValidatorFixture.cs"];
m30_338 [label="route.ShouldNotBeNull()", span="325-325", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_path_set_to_request_uri_when_matched_route_was_for_wrong_request_method()", file="PropertyValidatorFixture.cs"];
m30_339 [label="route.ShouldBeOfType<MethodNotAllowedRoute>()", span="326-326", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_path_set_to_request_uri_when_matched_route_was_for_wrong_request_method()", file="PropertyValidatorFixture.cs"];
m30_341 [label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_path_set_to_request_uri_when_matched_route_was_for_wrong_request_method()", span="314-314", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_path_set_to_request_uri_when_matched_route_was_for_wrong_request_method()", file="PropertyValidatorFixture.cs"];
m30_0 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", span="20-20", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", file="PropertyValidatorFixture.cs"];
m30_2 [label="A.CallTo(() => this.moduleBuilder.BuildModule(A<NancyModule>.Ignored, A<NancyContext>.Ignored)).\r\n                ReturnsLazily(r => r.Arguments[0] as NancyModule)", span="23-24", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", color=green, community=0, file="PropertyValidatorFixture.cs"];
m30_1 [label="this.moduleBuilder = A.Fake<INancyModuleBuilder>()", span="22-22", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", file="PropertyValidatorFixture.cs"];
m30_3 [label="this.catalog = A.Fake<INancyModuleCatalog>()", span="26-26", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", file="PropertyValidatorFixture.cs"];
m30_5 [label="this.expectedAction = x => HttpStatusCode.OK", span="29-29", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", color=green, community=0, file="PropertyValidatorFixture.cs"];
m30_4 [label="A.CallTo(() => this.catalog.GetModuleByKey(A<string>.Ignored, A<NancyContext>.Ignored)).Returns(expectedModule)", span="27-27", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", file="PropertyValidatorFixture.cs"];
m30_6 [label="this.expectedModule = new FakeNancyModule(x => x.AddGetRoute(''/foo/bar'', this.expectedAction))", span="30-30", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", file="PropertyValidatorFixture.cs"];
m30_7 [label="A.CallTo(() => this.catalog.GetModuleByKey(A<string>.Ignored, A<NancyContext>.Ignored)).ReturnsLazily(() => this.expectedModule)", span="32-32", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", file="PropertyValidatorFixture.cs"];
m30_9 [label="A.CallTo(() => this.matcher.Match(A<string>.Ignored, A<string>.Ignored, A<NancyContext>.Ignored)).ReturnsLazily(x =>\r\n                new FakeRoutePatternMatchResult(c =>\r\n                {\r\n                    c.IsMatch(((string)x.Arguments[0]).Equals(((string)x.Arguments[1])));\r\n                    c.AddParameter(''foo'', ''bar'');\r\n                }))", span="35-40", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", file="PropertyValidatorFixture.cs", color=red, community=0];
m30_10 [label="this.contextFactory = A.Fake<INancyContextFactory>()", span="42-42", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", file="PropertyValidatorFixture.cs"];
m30_8 [label="this.matcher = A.Fake<IRoutePatternMatcher>()", span="34-34", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", file="PropertyValidatorFixture.cs"];
m30_11 [label="this.moduleKeyGenerator = A.Fake<IModuleKeyGenerator>()", span="43-43", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", file="PropertyValidatorFixture.cs"];
m30_21 [label="Exit lambda expression", span="23-23", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_66 [label="var cache = \r\n                new FakeRouteCache(closure)", span="49-50", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.CreateResolver(System.Action<Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator>)", file="PropertyValidatorFixture.cs"];
m30_19 [label="Entry AssociatedMetadataTypeTypeDescriptionProvider.cstr", span="", cluster="AssociatedMetadataTypeTypeDescriptionProvider.cstr", file="PropertyValidatorFixture.cs"];
m30_23 [label="Entry lambda expression", span="24-24", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_26 [label="Entry lambda expression", span="30-30", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_34 [label="this.adapter2.Validate(A<object>._, A<ValidationAttribute>._, A<PropertyDescriptor>._)", span="39-39", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_37 [label="this.validator.Validate(null)", span="68-68", cluster="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture.Should_call_validate_on_each_validator_for_each_attribute_when_validate_is_invoked()", file="PropertyValidatorFixture.cs"];
m30_40 [label="Exit Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture.Should_call_validate_on_each_validator_for_each_attribute_when_validate_is_invoked()", span="64-64", cluster="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture.Should_call_validate_on_each_validator_for_each_attribute_when_validate_is_invoked()", file="PropertyValidatorFixture.cs"];
m30_43 [label="Entry lambda expression", span="71-71", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_47 [label="this.adapter2.Validate(A<object>._, A<ValidationAttribute>._, A<PropertyDescriptor>._)", span="72-72", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_20 [label="Entry Unk.GetTypeDescriptor", span="", cluster="Unk.GetTypeDescriptor", file="PropertyValidatorFixture.cs"];
m30_24 [label="string.Empty", span="28-28", cluster="lambda expression", file="PropertyValidatorFixture.cs", color=green, community=0];
m30_25 [label="Exit lambda expression", span="24-24", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_27 [label="this.adapter1.Validate(A<object>._, A<ValidationAttribute>._, A<PropertyDescriptor>._)", span="30-30", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_28 [label="Exit lambda expression", span="27-27", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_30 [label="Entry lambda expression", span="29-29", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_31 [label="string.Empty", span="37-37", cluster="lambda expression", file="PropertyValidatorFixture.cs", color=green, community=0];
m30_32 [label="Exit lambda expression", span="29-29", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_33 [label="Entry lambda expression", span="39-39", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_35 [label="Exit lambda expression", span="39-39", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_38 [label="A.CallTo(() => this.adapter1.Validate(A<object>._, A<ValidationAttribute>._, A<PropertyDescriptor>._)).MustHaveHappened()", span="71-71", cluster="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture.Should_call_validate_on_each_validator_for_each_attribute_when_validate_is_invoked()", file="PropertyValidatorFixture.cs"];
m30_39 [label="A.CallTo(() => this.adapter2.Validate(A<object>._, A<ValidationAttribute>._, A<PropertyDescriptor>._)).MustHaveHappened()", span="72-72", cluster="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture.Should_call_validate_on_each_validator_for_each_attribute_when_validate_is_invoked()", file="PropertyValidatorFixture.cs"];
m30_42 [label="Entry Unk.MustHaveHappened", span="", cluster="Unk.MustHaveHappened", file="PropertyValidatorFixture.cs"];
m30_44 [label="this.adapter1.Validate(A<object>._, A<ValidationAttribute>._, A<PropertyDescriptor>._)", span="71-71", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_45 [label="Exit lambda expression", span="71-71", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_48 [label="Exit lambda expression", span="72-72", cluster="lambda expression", color=red, community=0, file="PropertyValidatorFixture.cs"];
m30_63 [label="Entry lambda expression", span="98-98", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_64 [label="this.adapter1.Validate(A<object>._, this.mappings.Keys.First(), A<PropertyDescriptor>._)", span="98-98", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_88 [label="Entry lambda expression", span="68-68", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_89 [label="x.AddGetRoute(''/foo/bar'', ''module-key'')", span="68-68", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_90 [label="Exit lambda expression", span="68-68", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_102 [label="Entry lambda expression", span="87-87", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_103 [label="x.AddGetRoute(''/foo/bar'', ''module-key'')", span="87-87", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_104 [label="Exit lambda expression", span="87-87", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_123 [label="this.matcher.Match(request.Path, ''/foo/{bar}'', A<NancyContext>.Ignored)", span="112-112", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_129 [label="this.catalog.GetModuleByKey(''first-module-key-parameters'', context)", span="119-119", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_115 [label="Entry lambda expression", span="105-108", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_120 [label="x.AddGetRoute(''/foo/{bar}'', this.expectedAction)", span="110-110", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_122 [label="Entry lambda expression", span="112-112", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_126 [label="x.IsMatch(true).AddParameter(''bar'', ''fake value'')", span="113-113", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_128 [label="Entry lambda expression", span="119-119", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_116 [label="x.AddGetRoute(''/foo/{bar}'', ''first-module-key-parameters'')", span="106-106", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_117 [label="x.AddGetRoute(''/foo/{bar}'', ''second-module-key-parameters'')", span="107-107", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_118 [label="Exit lambda expression", span="105-108", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_119 [label="Entry lambda expression", span="110-110", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_121 [label="Exit lambda expression", span="110-110", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_124 [label="Exit lambda expression", span="112-112", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_125 [label="Entry lambda expression", span="113-113", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_127 [label="Exit lambda expression", span="113-113", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_130 [label="Exit lambda expression", span="119-119", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_146 [label="this.matcher.Match(request.Path, ''/foo/{bar}'', null)", span="134-134", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_153 [label="this.matcher.Match(request.Path, ''/foo/{bar}/{foo}'', A<NancyContext>.Ignored)", span="137-137", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_159 [label="this.catalog.GetModuleByKey(''module-key-two-parameters'', context)", span="146-146", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_141 [label="Entry lambda expression", span="129-132", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_145 [label="Entry lambda expression", span="134-134", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_150 [label="x.IsMatch(true).AddParameter(''bar'', ''fake value'')", span="135-135", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_152 [label="Entry lambda expression", span="137-137", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_156 [label="x.IsMatch(true)\r\n                    .AddParameter(''foo'', ''fake value'')\r\n                    .AddParameter(''bar'', ''fake value 2'')", span="138-140", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_158 [label="Entry lambda expression", span="146-146", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_142 [label="x.AddGetRoute(''/foo/{bar}/{foo}'', ''module-key-two-parameters'')", span="130-130", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_143 [label="x.AddGetRoute(''/foo/{bar}'', ''module-key-one-parameter'')", span="131-131", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_144 [label="Exit lambda expression", span="129-132", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_147 [label="Exit lambda expression", span="134-134", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_149 [label="Entry lambda expression", span="135-135", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_151 [label="Exit lambda expression", span="135-135", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_154 [label="Exit lambda expression", span="137-137", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_155 [label="Entry lambda expression", span="138-140", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_157 [label="Exit lambda expression", span="138-140", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_160 [label="Exit lambda expression", span="146-146", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_180 [label="this.matcher.Match(request.Path, ''/foo/bar'', null)", span="166-166", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_186 [label="this.matcher.Match(request.Path, ''/foo/{bar}'', null)", span="169-169", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_192 [label="this.matcher.Match(request.Path, ''/foo/{bar}'', null)", span="172-172", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_198 [label="this.catalog.GetModuleByKey(''module-key-no-parameters'', context)", span="180-180", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_171 [label="Entry lambda expression", span="156-164", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_179 [label="Entry lambda expression", span="166-166", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_183 [label="x.IsMatch(true)", span="167-167", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_185 [label="Entry lambda expression", span="169-169", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_189 [label="x.IsMatch(true).AddParameter(''bar'', ''fake value'')", span="170-170", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_191 [label="Entry lambda expression", span="172-172", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_195 [label="x.IsMatch(true)\r\n                    .AddParameter(''foo'', ''fake value'')\r\n                    .AddParameter(''bar'', ''fake value'')", span="173-175", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_197 [label="Entry lambda expression", span="180-180", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_172 [label="x.AddGetRoute(''/foo/{bar}'', ''module-key-parameters'')", span="158-158", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_173 [label="x.AddGetRoute(''/{foo}/{bar}'', ''module-key-two-parameters'')", span="159-159", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_174 [label="x.AddGetRoute(''/foo/bar'', ''module-key-no-parameters'')", span="160-160", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_175 [label="x.AddGetRoute(''/foo/bar'', ''module-key-no-parameters-second'')", span="161-161", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_176 [label="x.AddGetRoute(''/foo/{bar}'', ''module-key-parameters'')", span="162-162", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_177 [label="x.AddGetRoute(''/{foo}/{bar}'', ''module-key-two-parameters'')", span="163-163", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_178 [label="Exit lambda expression", span="156-164", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_181 [label="Exit lambda expression", span="166-166", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_182 [label="Entry lambda expression", span="167-167", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_184 [label="Exit lambda expression", span="167-167", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_187 [label="Exit lambda expression", span="169-169", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_188 [label="Entry lambda expression", span="170-170", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_190 [label="Exit lambda expression", span="170-170", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_193 [label="Exit lambda expression", span="172-172", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_194 [label="Entry lambda expression", span="173-175", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_196 [label="Exit lambda expression", span="173-175", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_199 [label="Exit lambda expression", span="180-180", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_221 [label="this.matcher.Match(request.Path, ''/foo/bar/{two}'', A<NancyContext>.Ignored)", span="202-202", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_227 [label="this.matcher.Match(request.Path, ''/foo/{bar}/{two}'', A<NancyContext>.Ignored)", span="205-205", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_233 [label="this.matcher.Match(request.Path, ''/foo/{bar}'', A<NancyContext>.Ignored)", span="210-210", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_239 [label="this.catalog.GetModuleByKey(''module-key-second'', context)", span="217-217", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_211 [label="Entry lambda expression", span="192-198", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_218 [label="x.AddGetRoute(''/foo/bar/{two}'', this.expectedAction)", span="200-200", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_220 [label="Entry lambda expression", span="202-202", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_224 [label="x.IsMatch(true).AddParameter(''two'', ''fake values'')", span="203-203", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_226 [label="Entry lambda expression", span="205-205", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_230 [label="x.IsMatch(true)\r\n                    .AddParameter(''bar'', ''fake values'')\r\n                    .AddParameter(''two'', ''fake values'')", span="206-208", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_232 [label="Entry lambda expression", span="210-210", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_236 [label="x.IsMatch(true).AddParameter(''bar'', ''fake value'')", span="211-211", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_238 [label="Entry lambda expression", span="217-217", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_212 [label="x.AddGetRoute(''/foo/{bar}'', ''module-key-first'')", span="194-194", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_213 [label="x.AddGetRoute(''/foo/{bar}/{two}'', ''module-key-third'')", span="195-195", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_214 [label="x.AddGetRoute(''/foo/bar/{two}'', ''module-key-second'')", span="196-196", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_215 [label="x.AddGetRoute(''/foo/{bar}/{two}'', ''module-key-third'')", span="197-197", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_216 [label="Exit lambda expression", span="192-198", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_217 [label="Entry lambda expression", span="200-200", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_219 [label="Exit lambda expression", span="200-200", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_222 [label="Exit lambda expression", span="202-202", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_223 [label="Entry lambda expression", span="203-203", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_225 [label="Exit lambda expression", span="203-203", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_228 [label="Exit lambda expression", span="205-205", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_229 [label="Entry lambda expression", span="206-208", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_231 [label="Exit lambda expression", span="206-208", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_234 [label="Exit lambda expression", span="210-210", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_235 [label="Entry lambda expression", span="211-211", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_237 [label="Exit lambda expression", span="211-211", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_240 [label="Exit lambda expression", span="217-217", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_256 [label="this.matcher.Match(request.Path, ''/'', A<NancyContext>.Ignored)", span="232-232", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_262 [label="this.matcher.Match(request.Path, ''/{name}'', A<NancyContext>.Ignored)", span="234-234", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_268 [label="this.catalog.GetModuleByKey(''module-key-first'', context)", span="241-241", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_250 [label="Entry lambda expression", span="226-230", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_255 [label="Entry lambda expression", span="232-232", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_259 [label="x.IsMatch(true)", span="233-233", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_261 [label="Entry lambda expression", span="234-234", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_265 [label="x.IsMatch(true).AddParameter(''name'', ''fake values'')", span="235-235", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_267 [label="Entry lambda expression", span="241-241", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_251 [label="x.AddGetRoute(''/{name}'', ''module-key-second'')", span="227-227", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_252 [label="x.AddGetRoute(''/'', ''module-key-first'')", span="228-228", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_253 [label="x.AddGetRoute(''/{name}'', ''module-key-second'')", span="229-229", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_254 [label="Exit lambda expression", span="226-230", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_257 [label="Exit lambda expression", span="232-232", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_258 [label="Entry lambda expression", span="233-233", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_260 [label="Exit lambda expression", span="233-233", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_263 [label="Exit lambda expression", span="234-234", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_264 [label="Entry lambda expression", span="235-235", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_266 [label="Exit lambda expression", span="235-235", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_269 [label="Exit lambda expression", span="241-241", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_282 [label="this.matcher.Match(request.Path, A<string>.Ignored, A<NancyContext>.Ignored)", span="256-256", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_277 [label="Entry lambda expression", span="250-250", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_281 [label="Entry lambda expression", span="256-256", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_278 [label="x.AddGetRoute(''/foo/bar'')", span="250-250", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_279 [label="Exit lambda expression", span="250-250", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_283 [label="Exit lambda expression", span="256-256", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_295 [label="this.matcher.Match(A<string>.Ignored, A<string>.Ignored, context)", span="271-271", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_291 [label="Entry lambda expression", span="265-265", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_294 [label="Entry lambda expression", span="271-271", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_292 [label="x.AddGetRoute(''/foo/bar'')", span="265-265", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_293 [label="Exit lambda expression", span="265-265", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_296 [label="Exit lambda expression", span="271-271", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_306 [label="Entry lambda expression", span="281-285", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_311 [label="Entry lambda expression", span="291-291", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_314 [label="Entry lambda expression", span="292-292", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_317 [label="Entry lambda expression", span="293-293", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_307 [label="x.AddGetRoute(''/foo/bar'')", span="282-282", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_308 [label="x.AddGetRoute(''/bar/foo'')", span="283-283", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_309 [label="x.AddGetRoute(''/foobar'')", span="284-284", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_310 [label="Exit lambda expression", span="281-285", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_312 [label="this.matcher.Match(A<string>.Ignored, ''/foo/bar'', A<NancyContext>.Ignored)", span="291-291", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_313 [label="Exit lambda expression", span="291-291", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_315 [label="this.matcher.Match(A<string>.Ignored, ''/bar/foo'', A<NancyContext>.Ignored)", span="292-292", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_316 [label="Exit lambda expression", span="292-292", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_318 [label="this.matcher.Match(A<string>.Ignored, ''/foobar'', A<NancyContext>.Ignored)", span="293-293", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_319 [label="Exit lambda expression", span="293-293", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_330 [label="Entry lambda expression", span="302-302", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_331 [label="x.AddGetRoute(''/foo/bar'')", span="302-302", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_332 [label="Exit lambda expression", span="302-302", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_343 [label="Entry lambda expression", span="319-319", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_344 [label="x.AddGetRoute(''/foo/bar'')", span="319-319", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_345 [label="Exit lambda expression", span="319-319", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_357 [label="Entry lambda expression", span="337-340", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_358 [label="x.AddGetRoute(''/foo/bar'')", span="338-338", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_359 [label="x.AddPutRoute(''/foo/bar'')", span="339-339", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_360 [label="Exit lambda expression", span="337-340", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_373 [label="this.moduleBuilder.BuildModule(this.expectedModule, context)", span="363-363", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_369 [label="Entry lambda expression", span="357-357", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_372 [label="Entry lambda expression", span="363-363", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_370 [label="x.AddGetRoute(''/foo/bar'')", span="357-357", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_371 [label="Exit lambda expression", span="357-357", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_374 [label="Exit lambda expression", span="363-363", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_385 [label="Entry lambda expression", span="372-372", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_389 [label="x.AddGetRoute(''/bar/foo'')", span="374-374", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_392 [label="Entry lambda expression", span="375-375", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_386 [label="x.AddGetRoute(''/foo/bar'')", span="372-372", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_387 [label="Exit lambda expression", span="372-372", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_388 [label="Entry lambda expression", span="374-374", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_390 [label="Exit lambda expression", span="374-374", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_393 [label="this.moduleBuilder.BuildModule(A<NancyModule>.Ignored, A<NancyContext>.Ignored)", span="375-375", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_394 [label="Exit lambda expression", span="375-375", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_403 [label="Entry lambda expression", span="391-391", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_404 [label="x.AddGetRoute(''/foo/bar'')", span="391-391", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_405 [label="Exit lambda expression", span="391-391", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_423 [label="Entry lambda expression", span="423-423", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_426 [label="Entry lambda expression", span="425-425", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_430 [label="x.IsMatch(false)", span="426-426", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_424 [label="x.AddGetRoute(''/bar/foo'')", span="423-423", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_425 [label="Exit lambda expression", span="423-423", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_427 [label="this.matcher.Match(''/foo/bar'', ''/bar/foo'', null)", span="425-425", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_428 [label="Exit lambda expression", span="425-425", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_429 [label="Entry lambda expression", span="426-426", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_431 [label="Exit lambda expression", span="426-426", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_441 [label="Entry lambda expression", span="442-442", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_442 [label="x.AddGetRoute(''/bar/foo'')", span="442-442", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_443 [label="Exit lambda expression", span="442-442", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_452 [label="Entry lambda expression", span="459-459", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_453 [label="x.AddGetRoute(''/foo/bar'')", span="459-459", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_454 [label="Exit lambda expression", span="459-459", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_463 [label="Entry lambda expression", span="475-475", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_464 [label="x.AddGetRoute(''/foo/bar'')", span="475-475", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_465 [label="Exit lambda expression", span="475-475", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_475 [label="Entry lambda expression", span="491-491", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_476 [label="x.AddGetRoute(''/foo/bar'')", span="491-491", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_477 [label="Exit lambda expression", span="491-491", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_487 [label="Entry lambda expression", span="508-512", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_488 [label="x.AddGetRoute(''/foo/bar'')", span="510-510", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_489 [label="x.AddPutRoute(''/foo/bar'')", span="511-511", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_490 [label="Exit lambda expression", span="508-512", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_499 [label="Entry lambda expression", span="529-533", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_500 [label="x.AddGetRoute(''/foo/bar'')", span="531-531", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_501 [label="x.AddOptionsRoute(''/foo/bar'')", span="532-532", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_502 [label="Exit lambda expression", span="529-533", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_552 [label="moduleCatalog.GetAllModules(A<NancyContext>.Ignored)", span="599-599", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_556 [label="moduleCatalog.GetModuleByKey(A<string>.Ignored, A<NancyContext>.Ignored)", span="600-600", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_551 [label="Entry lambda expression", span="599-599", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_555 [label="Entry lambda expression", span="600-600", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_553 [label="Exit lambda expression", span="599-599", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_557 [label="Exit lambda expression", span="600-600", cluster="lambda expression", file="PropertyValidatorFixture.cs"];
m30_56 [label="Entry Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator.IsMatch(bool)", span="49-49", cluster="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator.IsMatch(bool)", file="PropertyValidatorFixture.cs"];
m30_73 [label="Entry Nancy.Routing.DefaultRouteResolver.DefaultRouteResolver(Nancy.INancyModuleCatalog, Nancy.Routing.IRoutePatternMatcher, Nancy.Routing.INancyModuleBuilder, Nancy.Routing.IRouteCache)", span="26-26", cluster="Nancy.Routing.DefaultRouteResolver.DefaultRouteResolver(Nancy.INancyModuleCatalog, Nancy.Routing.IRoutePatternMatcher, Nancy.Routing.INancyModuleBuilder, Nancy.Routing.IRouteCache)", file="PropertyValidatorFixture.cs"];
m30_57 [label="Entry Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator.AddParameter(string, object)", span="55-55", cluster="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator.AddParameter(string, object)", file="PropertyValidatorFixture.cs"];
m30_65 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.CreateResolver(System.Action<Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator>)", span="47-47", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.CreateResolver(System.Action<Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator>)", file="PropertyValidatorFixture.cs"];
m30_74 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_parameters_on_resolved_route_to_parameteres_that_was_matched()", span="61-61", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_parameters_on_resolved_route_to_parameteres_that_was_matched()", file="PropertyValidatorFixture.cs"];
m30_356 [label="Entry Nancy.Routing.Route.Invoke(Nancy.DynamicDictionary)", span="54-54", cluster="Nancy.Routing.Route.Invoke(Nancy.DynamicDictionary)", file="PropertyValidatorFixture.cs"];
m30_12 [label="Entry Unk.>", span="", cluster="Unk.>", file="PropertyValidatorFixture.cs"];
m30_13 [label="Entry Nancy.Validation.ModelValidationError.ModelValidationError(string, System.Func<string, string>)", span="23-23", cluster="Nancy.Validation.ModelValidationError.ModelValidationError(string, System.Func<string, string>)", file="PropertyValidatorFixture.cs"];
m30_15 [label="Entry Unk.CallTo", span="", cluster="Unk.CallTo", file="PropertyValidatorFixture.cs"];
m30_17 [label="Entry RangeAttribute.cstr", span="", cluster="RangeAttribute.cstr", file="PropertyValidatorFixture.cs"];
m30_16 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="PropertyValidatorFixture.cs"];
m30_36 [label="Entry Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture.Should_call_validate_on_each_validator_for_each_attribute_when_validate_is_invoked()", span="64-64", cluster="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture.Should_call_validate_on_each_validator_for_each_attribute_when_validate_is_invoked()", file="PropertyValidatorFixture.cs"];
m30_22 [label="Entry Nancy.Validation.DataAnnotations.PropertyValidator.PropertyValidator()", span="10-10", cluster="Nancy.Validation.DataAnnotations.PropertyValidator.PropertyValidator()", file="PropertyValidatorFixture.cs"];
m30_114 [label="Entry Unk.MustHaveHappened", span="", cluster="Unk.MustHaveHappened", file="PropertyValidatorFixture.cs"];
m30_504 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_a_route_if_matching_and_the_filter_returns_false()", span="544-544", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_a_route_if_matching_and_the_filter_returns_false()", file="PropertyValidatorFixture.cs"];
m30_505 [label="var moduleCatalog = new FakeModuleCatalog()", span="547-547", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_a_route_if_matching_and_the_filter_returns_false()", file="PropertyValidatorFixture.cs"];
m30_506 [label="var routeCache = new RouteCache(moduleCatalog, new FakeModuleKeyGenerator(), A.Fake<INancyContextFactory>())", span="548-548", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_a_route_if_matching_and_the_filter_returns_false()", file="PropertyValidatorFixture.cs"];
m30_507 [label="var specificResolver = new DefaultRouteResolver(moduleCatalog, this.matcher, this.moduleBuilder, routeCache)", span="549-549", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_a_route_if_matching_and_the_filter_returns_false()", file="PropertyValidatorFixture.cs"];
m30_508 [label="var request = new FakeRequest(''GET'', ''/filtered'')", span="550-550", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_a_route_if_matching_and_the_filter_returns_false()", file="PropertyValidatorFixture.cs"];
m30_510 [label="var route = specificResolver.Resolve(context).Item1", span="554-554", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_a_route_if_matching_and_the_filter_returns_false()", file="PropertyValidatorFixture.cs"];
m30_509 [label="var context = new NancyContext { Request = request }", span="551-551", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_a_route_if_matching_and_the_filter_returns_false()", file="PropertyValidatorFixture.cs"];
m30_511 [label="route.ShouldBeOfType(typeof(NotFoundRoute))", span="557-557", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_a_route_if_matching_and_the_filter_returns_false()", file="PropertyValidatorFixture.cs"];
m30_512 [label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_a_route_if_matching_and_the_filter_returns_false()", span="544-544", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_a_route_if_matching_and_the_filter_returns_false()", file="PropertyValidatorFixture.cs"];
m30_87 [label="Entry object.ShouldEqual(object)", span="95-95", cluster="object.ShouldEqual(object)", file="PropertyValidatorFixture.cs"];
m30_375 [label="Entry Nancy.Routing.INancyModuleBuilder.BuildModule(Nancy.NancyModule, Nancy.NancyContext)", span="13-13", cluster="Nancy.Routing.INancyModuleBuilder.BuildModule(Nancy.NancyModule, Nancy.NancyContext)", file="PropertyValidatorFixture.cs"];
m30_503 [label="Entry Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator.AddOptionsRoute(string)", span="90-90", cluster="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator.AddOptionsRoute(string)", file="PropertyValidatorFixture.cs"];
m30_284 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_context()", span="260-260", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_context()", file="PropertyValidatorFixture.cs"];
m30_285 [label="var request = new FakeRequest(''get'', ''/foo/bar'')", span="263-263", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_context()", file="PropertyValidatorFixture.cs"];
m30_286 [label="var context = new NancyContext { Request = request }", span="264-264", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_context()", file="PropertyValidatorFixture.cs"];
m30_287 [label="var resolver = CreateResolver(x => x.AddGetRoute(''/foo/bar''))", span="265-265", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_context()", file="PropertyValidatorFixture.cs"];
m30_288 [label="resolver.Resolve(context)", span="268-268", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_context()", file="PropertyValidatorFixture.cs"];
m30_289 [label="A.CallTo(() => this.matcher.Match(A<string>.Ignored, A<string>.Ignored, context)).MustHaveHappened()", span="271-271", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_context()", file="PropertyValidatorFixture.cs"];
m30_290 [label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_context()", span="260-260", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_context()", file="PropertyValidatorFixture.cs"];
m30_514 [label="Entry RouteCache.cstr", span="", cluster="RouteCache.cstr", file="PropertyValidatorFixture.cs"];
m30_297 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_for_all_entries_in_route_cache()", span="275-275", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_for_all_entries_in_route_cache()", file="PropertyValidatorFixture.cs"];
m30_298 [label="var request = new FakeRequest(''get'', ''/foo/bar'')", span="278-278", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_for_all_entries_in_route_cache()", file="PropertyValidatorFixture.cs"];
m30_299 [label="var context = new NancyContext { Request = request }", span="279-279", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_for_all_entries_in_route_cache()", file="PropertyValidatorFixture.cs"];
m30_300 [label="var resolver = CreateResolver(x => {\r\n                x.AddGetRoute(''/foo/bar'');\r\n                x.AddGetRoute(''/bar/foo'');\r\n                x.AddGetRoute(''/foobar'');\r\n            })", span="281-285", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_for_all_entries_in_route_cache()", file="PropertyValidatorFixture.cs"];
m30_301 [label="resolver.Resolve(context)", span="288-288", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_for_all_entries_in_route_cache()", file="PropertyValidatorFixture.cs"];
m30_302 [label="A.CallTo(() => this.matcher.Match(A<string>.Ignored, ''/foo/bar'', A<NancyContext>.Ignored)).MustHaveHappened()", span="291-291", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_for_all_entries_in_route_cache()", file="PropertyValidatorFixture.cs"];
m30_303 [label="A.CallTo(() => this.matcher.Match(A<string>.Ignored, ''/bar/foo'', A<NancyContext>.Ignored)).MustHaveHappened()", span="292-292", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_for_all_entries_in_route_cache()", file="PropertyValidatorFixture.cs"];
m30_304 [label="A.CallTo(() => this.matcher.Match(A<string>.Ignored, ''/foobar'', A<NancyContext>.Ignored)).MustHaveHappened()", span="293-293", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_for_all_entries_in_route_cache()", file="PropertyValidatorFixture.cs"];
m30_305 [label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_for_all_entries_in_route_cache()", span="275-275", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_for_all_entries_in_route_cache()", file="PropertyValidatorFixture.cs"];
m30_92 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_action_on_resolved_route()", span="80-80", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_action_on_resolved_route()", file="PropertyValidatorFixture.cs"];
m30_93 [label="var request = new FakeRequest(''get'', ''/foo/bar'')", span="83-83", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_action_on_resolved_route()", file="PropertyValidatorFixture.cs"];
m30_94 [label="var context = new NancyContext { Request = request }", span="84-84", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_action_on_resolved_route()", file="PropertyValidatorFixture.cs"];
m30_95 [label="var resolver =\r\n                CreateResolver(x => x.AddGetRoute(''/foo/bar'', ''module-key''))", span="86-87", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_action_on_resolved_route()", file="PropertyValidatorFixture.cs"];
m30_96 [label="var resolvedRoute = resolver.Resolve(context).Item1", span="90-90", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_action_on_resolved_route()", file="PropertyValidatorFixture.cs"];
m30_97 [label="resolvedRoute.ShouldNotBeOfType<NotFoundRoute>()", span="93-93", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_action_on_resolved_route()", file="PropertyValidatorFixture.cs"];
m30_98 [label="resolvedRoute.ShouldNotBeOfType<MethodNotAllowedRoute>()", span="94-94", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_action_on_resolved_route()", file="PropertyValidatorFixture.cs"];
m30_99 [label="resolvedRoute.Action.ShouldBeSameAs(this.expectedAction)", span="95-95", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_action_on_resolved_route()", file="PropertyValidatorFixture.cs"];
m30_100 [label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_action_on_resolved_route()", span="80-80", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_action_on_resolved_route()", file="PropertyValidatorFixture.cs"];
m30_362 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_module_builder_with_context_and_resolved_module()", span="352-352", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_module_builder_with_context_and_resolved_module()", file="PropertyValidatorFixture.cs"];
m30_363 [label="var request = new FakeRequest(''GET'', ''/foo/bar'')", span="355-355", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_module_builder_with_context_and_resolved_module()", file="PropertyValidatorFixture.cs"];
m30_364 [label="var context = new NancyContext { Request = request }", span="356-356", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_module_builder_with_context_and_resolved_module()", file="PropertyValidatorFixture.cs"];
m30_365 [label="var resolver = CreateResolver(x => x.AddGetRoute(''/foo/bar''))", span="357-357", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_module_builder_with_context_and_resolved_module()", file="PropertyValidatorFixture.cs"];
m30_366 [label="resolver.Resolve(context)", span="360-360", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_module_builder_with_context_and_resolved_module()", file="PropertyValidatorFixture.cs"];
m30_367 [label="A.CallTo(() => this.moduleBuilder.BuildModule(this.expectedModule, context)).MustHaveHappened()", span="363-363", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_module_builder_with_context_and_resolved_module()", file="PropertyValidatorFixture.cs"];
m30_368 [label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_module_builder_with_context_and_resolved_module()", span="352-352", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_module_builder_with_context_and_resolved_module()", file="PropertyValidatorFixture.cs"];
m30_86 [label="Entry object.ShouldNotBeOfType<T>()", span="160-160", cluster="object.ShouldNotBeOfType<T>()", file="PropertyValidatorFixture.cs"];
m30_14 [label="Entry Unk.>", span="", cluster="Unk.>", file="PropertyValidatorFixture.cs"];
m30_391 [label="Entry Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModuleConfigurator.AddGetRoute(string)", span="36-36", cluster="Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModuleConfigurator.AddGetRoute(string)", file="PropertyValidatorFixture.cs"];
m30_395 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_path_set_to_request_uri_when_single_route_could_be_resolved()", span="386-386", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_path_set_to_request_uri_when_single_route_could_be_resolved()", file="PropertyValidatorFixture.cs"];
m30_396 [label="var request = new FakeRequest(''GET'', ''/foo/bar'')", span="389-389", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_path_set_to_request_uri_when_single_route_could_be_resolved()", file="PropertyValidatorFixture.cs"];
m30_397 [label="var context = new NancyContext { Request = request }", span="390-390", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_path_set_to_request_uri_when_single_route_could_be_resolved()", file="PropertyValidatorFixture.cs"];
m30_401 [label="resolvedRoute.Item1.Description.Path.ShouldEqual(request.Path)", span="398-398", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_path_set_to_request_uri_when_single_route_could_be_resolved()", file="PropertyValidatorFixture.cs"];
m30_398 [label="var resolver = CreateResolver(x => x.AddGetRoute(''/foo/bar''))", span="391-391", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_path_set_to_request_uri_when_single_route_could_be_resolved()", file="PropertyValidatorFixture.cs"];
m30_399 [label="var resolvedRoute = resolver.Resolve(context)", span="394-394", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_path_set_to_request_uri_when_single_route_could_be_resolved()", file="PropertyValidatorFixture.cs"];
m30_400 [label="resolvedRoute.ShouldNotBeOfType<NotFoundRoute>()", span="397-397", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_path_set_to_request_uri_when_single_route_could_be_resolved()", file="PropertyValidatorFixture.cs"];
m30_402 [label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_path_set_to_request_uri_when_single_route_could_be_resolved()", span="386-386", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_path_set_to_request_uri_when_single_route_could_be_resolved()", file="PropertyValidatorFixture.cs"];
m30_406 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.should_return_notfoundroute_with_path_set_to_request_uri_when_route_cache_is_empty()", span="402-402", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.should_return_notfoundroute_with_path_set_to_request_uri_when_route_cache_is_empty()", file="PropertyValidatorFixture.cs"];
m30_407 [label="var request = new FakeRequest(''GET'', ''/foo/bar'')", span="405-405", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.should_return_notfoundroute_with_path_set_to_request_uri_when_route_cache_is_empty()", file="PropertyValidatorFixture.cs"];
m30_408 [label="var context = new NancyContext { Request = request }", span="406-406", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.should_return_notfoundroute_with_path_set_to_request_uri_when_route_cache_is_empty()", file="PropertyValidatorFixture.cs"];
m30_412 [label="resolvedRoute.Description.Path.ShouldEqual(request.Path)", span="414-414", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.should_return_notfoundroute_with_path_set_to_request_uri_when_route_cache_is_empty()", file="PropertyValidatorFixture.cs"];
m30_409 [label="var resolver = CreateResolver(FakeRouteCache.Empty)", span="407-407", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.should_return_notfoundroute_with_path_set_to_request_uri_when_route_cache_is_empty()", file="PropertyValidatorFixture.cs"];
m30_410 [label="var resolvedRoute = resolver.Resolve(context).Item1", span="410-410", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.should_return_notfoundroute_with_path_set_to_request_uri_when_route_cache_is_empty()", file="PropertyValidatorFixture.cs"];
m30_411 [label="resolvedRoute.ShouldBeOfType<NotFoundRoute>()", span="413-413", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.should_return_notfoundroute_with_path_set_to_request_uri_when_route_cache_is_empty()", file="PropertyValidatorFixture.cs"];
m30_413 [label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.should_return_notfoundroute_with_path_set_to_request_uri_when_route_cache_is_empty()", span="402-402", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.should_return_notfoundroute_with_path_set_to_request_uri_when_route_cache_is_empty()", file="PropertyValidatorFixture.cs"];
m30_549 [label="Entry Nancy.Tests.Fakes.FakeNancyModuleWithPreAndPostHooks.FakeNancyModuleWithPreAndPostHooks()", span="4-4", cluster="Nancy.Tests.Fakes.FakeNancyModuleWithPreAndPostHooks.FakeNancyModuleWithPreAndPostHooks()", file="PropertyValidatorFixture.cs"];
m30_82 [label="Entry bool.ShouldBeTrue()", span="85-85", cluster="bool.ShouldBeTrue()", file="PropertyValidatorFixture.cs"];
m30_132 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_most_parameter_captures_when_multiple_matches_with_parameters_are_available()", span="123-123", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_most_parameter_captures_when_multiple_matches_with_parameters_are_available()", file="PropertyValidatorFixture.cs"];
m30_133 [label="var request = new FakeRequest(''get'', ''/foo/bar/foo'')", span="126-126", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_most_parameter_captures_when_multiple_matches_with_parameters_are_available()", file="PropertyValidatorFixture.cs"];
m30_134 [label="var context = new NancyContext { Request = request }", span="127-127", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_most_parameter_captures_when_multiple_matches_with_parameters_are_available()", file="PropertyValidatorFixture.cs"];
m30_136 [label="A.CallTo(() => this.matcher.Match(request.Path, ''/foo/{bar}'', null)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(true).AddParameter(''bar'', ''fake value'')))", span="134-135", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_most_parameter_captures_when_multiple_matches_with_parameters_are_available()", file="PropertyValidatorFixture.cs"];
m30_137 [label="A.CallTo(() => this.matcher.Match(request.Path, ''/foo/{bar}/{foo}'', A<NancyContext>.Ignored)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(true)\r\n                    .AddParameter(''foo'', ''fake value'')\r\n                    .AddParameter(''bar'', ''fake value 2'')))", span="137-140", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_most_parameter_captures_when_multiple_matches_with_parameters_are_available()", file="PropertyValidatorFixture.cs"];
m30_135 [label="var resolver = CreateResolver(x => {\r\n                x.AddGetRoute(''/foo/{bar}/{foo}'', ''module-key-two-parameters'');\r\n                x.AddGetRoute(''/foo/{bar}'', ''module-key-one-parameter'');\r\n            })", span="129-132", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_most_parameter_captures_when_multiple_matches_with_parameters_are_available()", file="PropertyValidatorFixture.cs"];
m30_138 [label="resolver.Resolve(context)", span="143-143", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_most_parameter_captures_when_multiple_matches_with_parameters_are_available()", file="PropertyValidatorFixture.cs"];
m30_139 [label="A.CallTo(() => this.catalog.GetModuleByKey(''module-key-two-parameters'', context)).MustHaveHappened()", span="146-146", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_most_parameter_captures_when_multiple_matches_with_parameters_are_available()", file="PropertyValidatorFixture.cs"];
m30_140 [label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_most_parameter_captures_when_multiple_matches_with_parameters_are_available()", span="123-123", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_most_parameter_captures_when_multiple_matches_with_parameters_are_available()", file="PropertyValidatorFixture.cs"];
m30_320 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_ignore_method_casing_when_resolving_routes()", span="297-297", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_ignore_method_casing_when_resolving_routes()", file="PropertyValidatorFixture.cs"];
m30_321 [label="var request = new FakeRequest(''GeT'', ''/foo/bar'')", span="300-300", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_ignore_method_casing_when_resolving_routes()", file="PropertyValidatorFixture.cs"];
m30_322 [label="var context = new NancyContext { Request = request }", span="301-301", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_ignore_method_casing_when_resolving_routes()", file="PropertyValidatorFixture.cs"];
m30_323 [label="var resolver = CreateResolver(x => x.AddGetRoute(''/foo/bar''))", span="302-302", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_ignore_method_casing_when_resolving_routes()", file="PropertyValidatorFixture.cs"];
m30_324 [label="var resolvedRoute = resolver.Resolve(context)", span="305-305", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_ignore_method_casing_when_resolving_routes()", file="PropertyValidatorFixture.cs"];
m30_325 [label="resolvedRoute.ShouldNotBeNull()", span="308-308", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_ignore_method_casing_when_resolving_routes()", file="PropertyValidatorFixture.cs"];
m30_326 [label="resolvedRoute.ShouldNotBeOfType<NotFoundRoute>()", span="309-309", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_ignore_method_casing_when_resolving_routes()", file="PropertyValidatorFixture.cs"];
m30_327 [label="resolvedRoute.ShouldNotBeOfType<MethodNotAllowedRoute>()", span="310-310", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_ignore_method_casing_when_resolving_routes()", file="PropertyValidatorFixture.cs"];
m30_328 [label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_ignore_method_casing_when_resolving_routes()", span="297-297", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_ignore_method_casing_when_resolving_routes()", file="PropertyValidatorFixture.cs"];
m30_491 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_user_defined_route_for_route_with_custom_options_defined()", span="524-524", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_user_defined_route_for_route_with_custom_options_defined()", file="PropertyValidatorFixture.cs"];
m30_492 [label="var request = new FakeRequest(''OPTIONS'', ''/foo/bar'')", span="527-527", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_user_defined_route_for_route_with_custom_options_defined()", file="PropertyValidatorFixture.cs"];
m30_493 [label="var context = new NancyContext {Request = request}", span="528-528", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_user_defined_route_for_route_with_custom_options_defined()", file="PropertyValidatorFixture.cs"];
m30_494 [label="var resolver = CreateResolver(x =>\r\n            {\r\n                x.AddGetRoute(''/foo/bar'');\r\n                x.AddOptionsRoute(''/foo/bar'');\r\n            })", span="529-533", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_user_defined_route_for_route_with_custom_options_defined()", file="PropertyValidatorFixture.cs"];
m30_495 [label="var route = resolver.Resolve(context).Item1", span="536-536", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_user_defined_route_for_route_with_custom_options_defined()", file="PropertyValidatorFixture.cs"];
m30_496 [label="route.ShouldNotBeNull()", span="539-539", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_user_defined_route_for_route_with_custom_options_defined()", file="PropertyValidatorFixture.cs"];
m30_497 [label="route.ShouldNotBeOfType<OptionsRoute>()", span="540-540", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_user_defined_route_for_route_with_custom_options_defined()", file="PropertyValidatorFixture.cs"];
m30_498 [label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_user_defined_route_for_route_with_custom_options_defined()", span="524-524", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_user_defined_route_for_route_with_custom_options_defined()", file="PropertyValidatorFixture.cs"];
m30_513 [label="Entry Nancy.Tests.Fakes.FakeModuleCatalog.FakeModuleCatalog()", span="13-13", cluster="Nancy.Tests.Fakes.FakeModuleCatalog.FakeModuleCatalog()", file="PropertyValidatorFixture.cs"];
m30_517 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_a_route_if_matching_and_the_filter_returns_true()", span="561-561", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_a_route_if_matching_and_the_filter_returns_true()", file="PropertyValidatorFixture.cs"];
m30_518 [label="var moduleCatalog = new FakeModuleCatalog()", span="564-564", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_a_route_if_matching_and_the_filter_returns_true()", file="PropertyValidatorFixture.cs"];
m30_519 [label="var routeCache = new RouteCache(moduleCatalog, new FakeModuleKeyGenerator(), A.Fake<INancyContextFactory>())", span="565-565", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_a_route_if_matching_and_the_filter_returns_true()", file="PropertyValidatorFixture.cs"];
m30_520 [label="var specificResolver = new DefaultRouteResolver(moduleCatalog, this.matcher, this.moduleBuilder, routeCache)", span="566-566", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_a_route_if_matching_and_the_filter_returns_true()", file="PropertyValidatorFixture.cs"];
m30_521 [label="var request = new FakeRequest(''GET'', ''/notfiltered'')", span="567-567", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_a_route_if_matching_and_the_filter_returns_true()", file="PropertyValidatorFixture.cs"];
m30_523 [label="var route = specificResolver.Resolve(context).Item1", span="571-571", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_a_route_if_matching_and_the_filter_returns_true()", file="PropertyValidatorFixture.cs"];
m30_522 [label="var context = new NancyContext { Request = request }", span="568-568", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_a_route_if_matching_and_the_filter_returns_true()", file="PropertyValidatorFixture.cs"];
m30_524 [label="route.ShouldBeOfType(typeof(Route))", span="574-574", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_a_route_if_matching_and_the_filter_returns_true()", file="PropertyValidatorFixture.cs"];
m30_525 [label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_a_route_if_matching_and_the_filter_returns_true()", span="561-561", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_a_route_if_matching_and_the_filter_returns_true()", file="PropertyValidatorFixture.cs"];
m30_554 [label="Entry Unk.GetAllModules", span="", cluster="Unk.GetAllModules", file="PropertyValidatorFixture.cs"];
m30_148 [label="Entry Nancy.Routing.IRoutePatternMatcher.Match(string, string, Nancy.NancyContext)", span="15-15", cluster="Nancy.Routing.IRoutePatternMatcher.Match(string, string, Nancy.NancyContext)", file="PropertyValidatorFixture.cs"];
m30_515 [label="Entry Nancy.Tests.Fakes.FakeModuleKeyGenerator.FakeModuleKeyGenerator()", span="4-4", cluster="Nancy.Tests.Fakes.FakeModuleKeyGenerator.FakeModuleKeyGenerator()", file="PropertyValidatorFixture.cs"];
m30_83 [label="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture", span="", cluster="Nancy.Tests.Fakes.FakeRequest.FakeRequest(string, string)", file="PropertyValidatorFixture.cs"];
m30_131 [label="Entry Nancy.INancyModuleCatalog.GetModuleByKey(string, Nancy.NancyContext)", span="22-22", cluster="Nancy.INancyModuleCatalog.GetModuleByKey(string, Nancy.NancyContext)", file="PropertyValidatorFixture.cs"];
m30_342 [label="Entry object.ShouldBeOfType<T>()", span="150-150", cluster="object.ShouldBeOfType<T>()", file="PropertyValidatorFixture.cs"];
m30_536 [label="Entry bool.ShouldBeTrue()", span="85-85", cluster="bool.ShouldBeTrue()", file="PropertyValidatorFixture.cs"];
m30_414 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_notfoundroute_with_path_set_to_request_uri_when_route_could_not_be_resolved()", span="418-418", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_notfoundroute_with_path_set_to_request_uri_when_route_could_not_be_resolved()", file="PropertyValidatorFixture.cs"];
m30_415 [label="var request = new FakeRequest(''GET'', ''/foo/bar'')", span="421-421", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_notfoundroute_with_path_set_to_request_uri_when_route_could_not_be_resolved()", file="PropertyValidatorFixture.cs"];
m30_416 [label="var context = new NancyContext { Request = request }", span="422-422", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_notfoundroute_with_path_set_to_request_uri_when_route_could_not_be_resolved()", file="PropertyValidatorFixture.cs"];
m30_421 [label="resolvedRoute.Description.Path.ShouldEqual(request.Path)", span="433-433", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_notfoundroute_with_path_set_to_request_uri_when_route_could_not_be_resolved()", file="PropertyValidatorFixture.cs"];
m30_417 [label="var resolver = CreateResolver(x => x.AddGetRoute(''/bar/foo''))", span="423-423", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_notfoundroute_with_path_set_to_request_uri_when_route_could_not_be_resolved()", file="PropertyValidatorFixture.cs"];
m30_419 [label="var resolvedRoute = resolver.Resolve(context).Item1", span="429-429", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_notfoundroute_with_path_set_to_request_uri_when_route_could_not_be_resolved()", file="PropertyValidatorFixture.cs"];
m30_418 [label="A.CallTo(() => this.matcher.Match(''/foo/bar'', ''/bar/foo'', null)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(false)))", span="425-426", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_notfoundroute_with_path_set_to_request_uri_when_route_could_not_be_resolved()", file="PropertyValidatorFixture.cs"];
m30_420 [label="resolvedRoute.ShouldBeOfType<NotFoundRoute>()", span="432-432", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_notfoundroute_with_path_set_to_request_uri_when_route_could_not_be_resolved()", file="PropertyValidatorFixture.cs"];
m30_422 [label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_notfoundroute_with_path_set_to_request_uri_when_route_could_not_be_resolved()", span="418-418", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_notfoundroute_with_path_set_to_request_uri_when_route_could_not_be_resolved()", file="PropertyValidatorFixture.cs"];
m30_84 [label=instance, span="", cluster="Nancy.NancyContext.NancyContext()", file="PropertyValidatorFixture.cs"];
m30_432 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_head_request_when_route_is_defined_for_get()", span="437-437", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_head_request_when_route_is_defined_for_get()", file="PropertyValidatorFixture.cs"];
m30_433 [label="var request = new FakeRequest(''HEAD'', ''/foo/bar'')", span="440-440", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_head_request_when_route_is_defined_for_get()", file="PropertyValidatorFixture.cs"];
m30_434 [label="var context = new NancyContext { Request = request }", span="441-441", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_head_request_when_route_is_defined_for_get()", file="PropertyValidatorFixture.cs"];
m30_435 [label="var resolver = CreateResolver(x => x.AddGetRoute(''/bar/foo''))", span="442-442", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_head_request_when_route_is_defined_for_get()", file="PropertyValidatorFixture.cs"];
m30_436 [label="var resolvedRoute = resolver.Resolve(context)", span="445-445", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_head_request_when_route_is_defined_for_get()", file="PropertyValidatorFixture.cs"];
m30_437 [label="resolvedRoute.ShouldNotBeNull()", span="448-448", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_head_request_when_route_is_defined_for_get()", file="PropertyValidatorFixture.cs"];
m30_438 [label="resolvedRoute.ShouldNotBeOfType<NotFoundRoute>()", span="449-449", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_head_request_when_route_is_defined_for_get()", file="PropertyValidatorFixture.cs"];
m30_439 [label="resolvedRoute.ShouldNotBeOfType<MethodNotAllowedRoute>()", span="450-450", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_head_request_when_route_is_defined_for_get()", file="PropertyValidatorFixture.cs"];
m30_440 [label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_head_request_when_route_is_defined_for_get()", span="437-437", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_head_request_when_route_is_defined_for_get()", file="PropertyValidatorFixture.cs"];
m30_376 [label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_module_returned_by_module_builder()", span="367-367", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_module_returned_by_module_builder()", file="PropertyValidatorFixture.cs"];
m30_377 [label="var request = new FakeRequest(''GET'', ''/foo/bar'')", span="370-370", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_module_returned_by_module_builder()", file="PropertyValidatorFixture.cs"];
m30_378 [label="var context = new NancyContext { Request = request }", span="371-371", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_module_returned_by_module_builder()", file="PropertyValidatorFixture.cs"];
m30_379 [label="var resolver = CreateResolver(x => x.AddGetRoute(''/foo/bar''))", span="372-372", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_module_returned_by_module_builder()", file="PropertyValidatorFixture.cs"];
m30_382 [label="var route = resolver.Resolve(context)", span="379-379", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_module_returned_by_module_builder()", file="PropertyValidatorFixture.cs"];
m30_380 [label="var moduleReturnedByBuilder = new FakeNancyModule(x => x.AddGetRoute(''/bar/foo''))", span="374-374", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_module_returned_by_module_builder()", file="PropertyValidatorFixture.cs"];
m30_381 [label="A.CallTo(() => this.moduleBuilder.BuildModule(A<NancyModule>.Ignored, A<NancyContext>.Ignored)).Returns(\r\n                moduleReturnedByBuilder)", span="375-376", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_module_returned_by_module_builder()", file="PropertyValidatorFixture.cs"];
m30_383 [label="route.Item1.Description.Path.ShouldEqual(''/bar/foo'')", span="382-382", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_module_returned_by_module_builder()", file="PropertyValidatorFixture.cs"];
m30_384 [label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_module_returned_by_module_builder()", span="367-367", cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_module_returned_by_module_builder()", file="PropertyValidatorFixture.cs"];
m30_516 [label="Entry object.ShouldBeOfType(System.Type)", span="155-155", cluster="object.ShouldBeOfType(System.Type)", file="PropertyValidatorFixture.cs"];
m30_355 [label="Entry Nancy.DynamicDictionary.DynamicDictionary()", span="10-10", cluster="Nancy.DynamicDictionary.DynamicDictionary()", file="PropertyValidatorFixture.cs"];
m30_361 [label="Entry Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator.AddPutRoute(string)", span="83-83", cluster="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator.AddPutRoute(string)", file="PropertyValidatorFixture.cs"];
m30_558 [label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", span="", file="PropertyValidatorFixture.cs"];
m30_559 [label="?", span="", file="PropertyValidatorFixture.cs"];
m30_560 [label=request, span="", file="PropertyValidatorFixture.cs"];
m30_561 [label=context, span="", file="PropertyValidatorFixture.cs"];
m30_562 [label=request, span="", file="PropertyValidatorFixture.cs"];
m30_563 [label=context, span="", file="PropertyValidatorFixture.cs"];
m30_564 [label=request, span="", file="PropertyValidatorFixture.cs"];
m30_565 [label=context, span="", file="PropertyValidatorFixture.cs"];
m30_566 [label=request, span="", file="PropertyValidatorFixture.cs"];
m30_567 [label=context, span="", file="PropertyValidatorFixture.cs"];
m30_568 [label=request, span="", file="PropertyValidatorFixture.cs"];
m30_569 [label=context, span="", file="PropertyValidatorFixture.cs"];
m30_570 [label=request, span="", file="PropertyValidatorFixture.cs"];
m30_571 [label=context, span="", file="PropertyValidatorFixture.cs"];
m30_572 [label=context, span="", file="PropertyValidatorFixture.cs"];
m30_573 [label=moduleCatalog, span="", file="PropertyValidatorFixture.cs"];
m32_10 [label="Entry Nancy.Routing.Constraints.RouteSegmentConstraintBase<T>.TryMatch(string, string, out T)", span="26-26", cluster="Nancy.Routing.Constraints.RouteSegmentConstraintBase<T>.TryMatch(string, string, out T)", file="RouteSegmentConstraintBase.cs"];
m32_12 [label="Exit Nancy.Routing.Constraints.RouteSegmentConstraintBase<T>.TryMatch(string, string, out T)", span="26-26", cluster="Nancy.Routing.Constraints.RouteSegmentConstraintBase<T>.TryMatch(string, string, out T)", file="RouteSegmentConstraintBase.cs"];
m32_4 [label="Entry Nancy.Routing.Constraints.RouteSegmentConstraintBase<T>.GetMatch(string, string, string)", span="15-15", cluster="Nancy.Routing.Constraints.RouteSegmentConstraintBase<T>.GetMatch(string, string, string)", file="RouteSegmentConstraintBase.cs"];
m32_5 [label="T value", span="17-17", cluster="Nancy.Routing.Constraints.RouteSegmentConstraintBase<T>.GetMatch(string, string, string)", file="RouteSegmentConstraintBase.cs"];
m32_6 [label="this.TryMatch(constraint, segment, out value)", span="18-18", cluster="Nancy.Routing.Constraints.RouteSegmentConstraintBase<T>.GetMatch(string, string, string)", file="RouteSegmentConstraintBase.cs"];
m32_7 [label="return CreateMatch(parameterName, value);", span="20-20", cluster="Nancy.Routing.Constraints.RouteSegmentConstraintBase<T>.GetMatch(string, string, string)", file="RouteSegmentConstraintBase.cs"];
m32_8 [label="return SegmentMatch.NoMatch;", span="23-23", cluster="Nancy.Routing.Constraints.RouteSegmentConstraintBase<T>.GetMatch(string, string, string)", file="RouteSegmentConstraintBase.cs"];
m32_9 [label="Exit Nancy.Routing.Constraints.RouteSegmentConstraintBase<T>.GetMatch(string, string, string)", span="15-15", cluster="Nancy.Routing.Constraints.RouteSegmentConstraintBase<T>.GetMatch(string, string, string)", file="RouteSegmentConstraintBase.cs"];
m32_0 [label="Entry Nancy.Routing.Constraints.RouteSegmentConstraintBase<T>.Matches(string)", span="10-10", cluster="Nancy.Routing.Constraints.RouteSegmentConstraintBase<T>.Matches(string)", file="RouteSegmentConstraintBase.cs"];
m32_1 [label="return constraint.Equals(Name, StringComparison.OrdinalIgnoreCase);", span="12-12", cluster="Nancy.Routing.Constraints.RouteSegmentConstraintBase<T>.Matches(string)", file="RouteSegmentConstraintBase.cs"];
m32_2 [label="Exit Nancy.Routing.Constraints.RouteSegmentConstraintBase<T>.Matches(string)", span="10-10", cluster="Nancy.Routing.Constraints.RouteSegmentConstraintBase<T>.Matches(string)", file="RouteSegmentConstraintBase.cs"];
m32_18 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="RouteSegmentConstraintBase.cs"];
m32_17 [label="Entry Nancy.Routing.Trie.SegmentMatch.SegmentMatch(bool)", span="26-26", cluster="Nancy.Routing.Trie.SegmentMatch.SegmentMatch(bool)", file="RouteSegmentConstraintBase.cs"];
m32_3 [label="Entry string.Equals(string, System.StringComparison)", span="0-0", cluster="string.Equals(string, System.StringComparison)", file="RouteSegmentConstraintBase.cs"];
m32_11 [label="Entry Nancy.Routing.Constraints.RouteSegmentConstraintBase<T>.CreateMatch(string, object)", span="28-28", cluster="Nancy.Routing.Constraints.RouteSegmentConstraintBase<T>.CreateMatch(string, object)", file="RouteSegmentConstraintBase.cs"];
m32_13 [label="var match = new SegmentMatch(true)", span="30-30", cluster="Nancy.Routing.Constraints.RouteSegmentConstraintBase<T>.CreateMatch(string, object)", file="RouteSegmentConstraintBase.cs"];
m32_14 [label="match.CapturedParameters.Add(parameterName, matchedValue)", span="31-31", cluster="Nancy.Routing.Constraints.RouteSegmentConstraintBase<T>.CreateMatch(string, object)", file="RouteSegmentConstraintBase.cs"];
m32_15 [label="return match;", span="32-32", cluster="Nancy.Routing.Constraints.RouteSegmentConstraintBase<T>.CreateMatch(string, object)", file="RouteSegmentConstraintBase.cs"];
m32_16 [label="Exit Nancy.Routing.Constraints.RouteSegmentConstraintBase<T>.CreateMatch(string, object)", span="28-28", cluster="Nancy.Routing.Constraints.RouteSegmentConstraintBase<T>.CreateMatch(string, object)", file="RouteSegmentConstraintBase.cs"];
m32_19 [label="Nancy.Routing.Constraints.RouteSegmentConstraintBase<T>", span="", file="RouteSegmentConstraintBase.cs"];
m33_0 [label="Entry Nancy.NancyModule.NancyModule()", span="24-24", cluster="Nancy.NancyModule.NancyModule()", file="ViewNotFoundException.cs"];
m33_5 [label="this.ModulePath = modulePath", span="37-37", cluster="Nancy.NancyModule.NancyModule(string)", color=green, community=0, file="ViewNotFoundException.cs"];
m33_4 [label="this.Before = new BeforePipeline()", span="36-36", cluster="Nancy.NancyModule.NancyModule(string)", file="ViewNotFoundException.cs"];
m33_1 [label="Exit Nancy.NancyModule.NancyModule()", span="24-24", cluster="Nancy.NancyModule.NancyModule()", file="ViewNotFoundException.cs"];
m33_2 [label="Entry Nancy.NancyModule.NancyModule(string)", span="33-33", cluster="Nancy.NancyModule.NancyModule(string)", file="ViewNotFoundException.cs"];
m33_3 [label="this.After = new AfterPipeline()", span="35-35", cluster="Nancy.NancyModule.NancyModule(string)", file="ViewNotFoundException.cs"];
m33_6 [label="this.routes = new List<Route>()", span="38-38", cluster="Nancy.NancyModule.NancyModule(string)", file="ViewNotFoundException.cs"];
m33_10 [label="Entry Nancy.ViewEngines.ViewNotFoundException.ViewNotFoundException(string)", span="45-45", cluster="Nancy.ViewEngines.ViewNotFoundException.ViewNotFoundException(string)", file="ViewNotFoundException.cs"];
m33_9 [label="Entry string.Format(string, params object[])", span="0-0", cluster="string.Format(string, params object[])", file="ViewNotFoundException.cs"];
m33_29 [label="Entry Nancy.NancyModule.GetModuleName()", span="24-24", cluster="Nancy.NancyModule.GetModuleName()", file="ViewNotFoundException.cs"];
m33_11 [label="this.message = msg", span="47-47", cluster="Nancy.ViewEngines.ViewNotFoundException.ViewNotFoundException(string)", file="ViewNotFoundException.cs"];
m33_12 [label="Exit Nancy.ViewEngines.ViewNotFoundException.ViewNotFoundException(string)", span="45-45", cluster="Nancy.ViewEngines.ViewNotFoundException.ViewNotFoundException(string)", file="ViewNotFoundException.cs"];
m33_13 [label="Nancy.ViewEngines.ViewNotFoundException", span="", cluster="Nancy.NancyModule.RouteBuilder.RouteBuilder(string, Nancy.NancyModule)", file="ViewNotFoundException.cs"];
m33_14 [label="Exit Nancy.NancyModule.RouteBuilder.RouteBuilder(string, Nancy.NancyModule)", span="219-219", cluster="Nancy.NancyModule.RouteBuilder.RouteBuilder(string, Nancy.NancyModule)", file="ViewNotFoundException.cs"];
m33_21 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="ViewNotFoundException.cs"];
m33_8 [label="Entry Nancy.AfterPipeline.AfterPipeline()", span="17-17", cluster="Nancy.AfterPipeline.AfterPipeline()", file="ViewNotFoundException.cs"];
m33_7 [label="Exit Nancy.NancyModule.NancyModule(string)", span="33-33", cluster="Nancy.NancyModule.NancyModule(string)", file="ViewNotFoundException.cs"];
m33_19 [label="Entry string.Concat(string, string)", span="0-0", cluster="string.Concat(string, string)", file="ViewNotFoundException.cs"];
m33_15 [label="Entry Nancy.NancyModule.RouteBuilder.AddRoute(string, System.Func<Nancy.NancyContext, bool>, System.Func<object, Nancy.Response>)", span="243-243", cluster="Nancy.NancyModule.RouteBuilder.AddRoute(string, System.Func<Nancy.NancyContext, bool>, System.Func<object, Nancy.Response>)", file="ViewNotFoundException.cs"];
m33_16 [label="var fullPath = string.Concat(this.parentModule.ModulePath, path)", span="245-245", cluster="Nancy.NancyModule.RouteBuilder.AddRoute(string, System.Func<Nancy.NancyContext, bool>, System.Func<object, Nancy.Response>)", file="ViewNotFoundException.cs"];
m33_17 [label="this.parentModule.routes.Add(new Route(this.method, fullPath, condition, value))", span="247-247", cluster="Nancy.NancyModule.RouteBuilder.AddRoute(string, System.Func<Nancy.NancyContext, bool>, System.Func<object, Nancy.Response>)", file="ViewNotFoundException.cs"];
m33_18 [label="Exit Nancy.NancyModule.RouteBuilder.AddRoute(string, System.Func<Nancy.NancyContext, bool>, System.Func<object, Nancy.Response>)", span="243-243", cluster="Nancy.NancyModule.RouteBuilder.AddRoute(string, System.Func<Nancy.NancyContext, bool>, System.Func<object, Nancy.Response>)", file="ViewNotFoundException.cs"];
m33_28 [label="Entry Nancy.ViewEngines.ViewLocationContext.ViewLocationContext()", span="5-5", cluster="Nancy.ViewEngines.ViewLocationContext.ViewLocationContext()", file="ViewNotFoundException.cs"];
m33_22 [label="Entry Nancy.NancyModule.ViewRenderer.ViewRenderer(Nancy.NancyModule)", span="262-262", cluster="Nancy.NancyModule.ViewRenderer.ViewRenderer(Nancy.NancyModule)", file="ViewNotFoundException.cs"];
m33_23 [label="this.module = module", span="264-264", cluster="Nancy.NancyModule.ViewRenderer.ViewRenderer(Nancy.NancyModule)", file="ViewNotFoundException.cs"];
m33_24 [label="Exit Nancy.NancyModule.ViewRenderer.ViewRenderer(Nancy.NancyModule)", span="262-262", cluster="Nancy.NancyModule.ViewRenderer.ViewRenderer(Nancy.NancyModule)", file="ViewNotFoundException.cs"];
m33_20 [label="Entry Nancy.Routing.Route.Route(string, string, System.Func<Nancy.NancyContext, bool>, System.Func<dynamic, Nancy.Response>)", span="32-32", cluster="Nancy.Routing.Route.Route(string, string, System.Func<Nancy.NancyContext, bool>, System.Func<dynamic, Nancy.Response>)", file="ViewNotFoundException.cs"];
m33_25 [label="Entry Nancy.NancyModule.ViewRenderer.GetViewLocationContext()", span="301-301", cluster="Nancy.NancyModule.ViewRenderer.GetViewLocationContext()", file="ViewNotFoundException.cs"];
m33_26 [label="return new ViewLocationContext\r\n                       {\r\n                           ModulePath = module.ModulePath,\r\n                           ModuleName = module.GetModuleName(),\r\n                           Context = module.Context\r\n                       };", span="303-308", cluster="Nancy.NancyModule.ViewRenderer.GetViewLocationContext()", file="ViewNotFoundException.cs"];
m33_27 [label="Exit Nancy.NancyModule.ViewRenderer.GetViewLocationContext()", span="301-301", cluster="Nancy.NancyModule.ViewRenderer.GetViewLocationContext()", file="ViewNotFoundException.cs"];
m33_30 [label="Nancy.NancyModule", span="", file="ViewNotFoundException.cs"];
m33_31 [label="Nancy.NancyModule.RouteBuilder", span="", file="ViewNotFoundException.cs"];
m33_32 [label="Nancy.NancyModule.ViewRenderer", span="", file="ViewNotFoundException.cs"];
n0 -> n1  [key=0, style=solid];
n0 -> n4  [key=1, style=dashed, color=darkseagreen4, label=string];
n0 -> n0  [key=3, color=darkorchid, style=bold, label="Parameter variable string matchedValue"];
n0 -> n3  [key=3, color=darkorchid, style=bold, label="method methodReturn bool TryMatch"];
n0 -> n5  [key=3, color=darkorchid, style=bold, label="method methodReturn bool TryMatch"];
n1 -> n2  [key=0, style=solid];
n1 -> n4  [key=0, style=solid];
n1 -> n7  [key=2, style=dotted];
n4 -> n5  [key=0, style=solid];
n4 -> n6  [key=1, style=dashed, color=darkseagreen4, label="out string"];
n2 -> n3  [key=0, style=solid];
n3 -> n6  [key=0, style=solid];
n5 -> n6  [key=0, style=solid];
n6 -> n0  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_3  [key=2, style=dotted];
m0_2 -> m0_0  [key=0, style=bold, color=blue];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_16  [key=2, style=dotted];
m1_0 -> m1_1  [key=0, style=solid, color=green];
m1_0 -> m1_2  [key=1, style=dashed, color=darkseagreen4, label="Nancy.IResponseFormatterFactory"];
m1_0 -> m1_3  [key=1, style=dashed, color=darkseagreen4, label="Nancy.ModelBinding.IModelBinderLocator"];
m1_0 -> m1_4  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Validation.IModelValidatorLocator"];
m1_1 -> m1_2  [key=0, style=solid, color=green];
m1_1 -> m1_4  [key=2, style=dotted, color=green];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_5  [key=2, style=dotted];
m1_3 -> m1_0  [key=0, style=bold, color=blue];
m1_3 -> m1_4  [key=0, style=solid];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_6  [key=0, style=solid, color=green];
m1_4 -> m1_7  [key=1, style=dashed, color=green, label="Nancy.Response"];
m1_4 -> m1_0  [key=3, color=darkorchid, style=bold, label="Parameter variable Nancy.Response response"];
m1_5 -> m1_0  [key=0, style=bold, color=blue];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_13  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator"];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_13  [key=2, style=dotted];
m1_19 -> m1_17  [key=0, style=bold, color=blue];
m1_6 -> m1_7  [key=0, style=solid, color=green];
m1_6 -> m1_8  [key=1, style=dashed, color=green, label=contentsStream];
m1_6 -> m1_9  [key=1, style=dashed, color=green, label=contentsStream];
m1_6 -> m1_10  [key=1, style=dashed, color=darkseagreen4, label="Nancy.NancyModule"];
m1_6 -> m1_11  [key=1, style=dashed, color=darkseagreen4, label="Nancy.NancyModule"];
m1_6 -> m1_12  [key=1, style=dashed, color=darkseagreen4, label="Nancy.NancyModule"];
m1_7 -> m1_8  [key=0, style=solid, color=green];
m1_7 -> m1_12  [key=2, style=dotted, color=green];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_14  [key=2, style=dotted];
m1_9 -> m1_10  [key=0, style=solid];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_4  [key=0, style=bold, color=blue];
m1_11 -> m1_12  [key=0, style=solid];
m1_12 -> m1_13  [key=0, style=solid];
m1_13 -> m1_6  [key=0, style=bold, color=blue];
m1_13 -> m1_14  [key=0, style=solid];
m1_15 -> m1_13  [key=0, style=bold, color=blue];
m1_15 -> m1_1  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Routing.DefaultNancyModuleBuilder"];
m1_15 -> m1_2  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Routing.DefaultNancyModuleBuilder"];
m1_15 -> m1_3  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Routing.DefaultNancyModuleBuilder"];
m1_15 -> m1_4  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Routing.DefaultNancyModuleBuilder"];
m1_15 -> m1_8  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Routing.DefaultNancyModuleBuilder"];
m1_15 -> m1_9  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Routing.DefaultNancyModuleBuilder"];
m1_15 -> m1_10  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Routing.DefaultNancyModuleBuilder"];
m1_15 -> m1_11  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Routing.DefaultNancyModuleBuilder"];
m1_20 -> m1_2  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.BrowserResponseBodyWrapper"];
m1_20 -> m1_14  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.BrowserResponseBodyWrapper"];
m1_20 -> m1_18  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.BrowserResponseBodyWrapper"];
m2_444 -> m2_445  [key=0, style=solid];
m2_445 -> m2_446  [key=0, style=solid];
m2_445 -> m2_83  [key=2, style=dotted];
m2_446 -> m2_447  [key=0, style=solid];
m2_446 -> m2_84  [key=2, style=dotted];
m2_446 -> m2_448  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_447 -> m2_448  [key=0, style=solid];
m2_447 -> m2_65  [key=2, style=dotted];
m2_447 -> m2_452  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_448 -> m2_449  [key=0, style=solid];
m2_448 -> m2_85  [key=2, style=dotted];
m2_448 -> m2_450  [key=1, style=dashed, color=darkseagreen4, label=resolvedRoute];
m2_449 -> m2_450  [key=0, style=solid];
m2_449 -> m2_329  [key=2, style=dotted];
m2_450 -> m2_451  [key=0, style=solid];
m2_450 -> m2_342  [key=2, style=dotted];
m2_451 -> m2_444  [key=0, style=bold, color=blue];
m2_478 -> m2_479  [key=0, style=solid];
m2_479 -> m2_480  [key=0, style=solid];
m2_479 -> m2_83  [key=2, style=dotted];
m2_480 -> m2_481  [key=0, style=solid];
m2_480 -> m2_84  [key=2, style=dotted];
m2_480 -> m2_482  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_481 -> m2_482  [key=0, style=solid];
m2_481 -> m2_65  [key=2, style=dotted];
m2_481 -> m2_487  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_482 -> m2_483  [key=0, style=solid];
m2_482 -> m2_85  [key=2, style=dotted];
m2_482 -> m2_484  [key=1, style=dashed, color=darkseagreen4, label=route];
m2_482 -> m2_485  [key=1, style=dashed, color=darkseagreen4, label=route];
m2_483 -> m2_484  [key=0, style=solid];
m2_483 -> m2_329  [key=2, style=dotted];
m2_484 -> m2_485  [key=0, style=solid];
m2_484 -> m2_342  [key=2, style=dotted];
m2_485 -> m2_486  [key=0, style=solid];
m2_485 -> m2_355  [key=2, style=dotted];
m2_485 -> m2_356  [key=2, style=dotted];
m2_485 -> m2_87  [key=2, style=dotted];
m2_486 -> m2_478  [key=0, style=bold, color=blue];
m2_270 -> m2_271  [key=0, style=solid];
m2_271 -> m2_272  [key=0, style=solid];
m2_271 -> m2_83  [key=2, style=dotted];
m2_271 -> m2_275  [key=1, style=dashed, color=darkseagreen4, label=request];
m2_271 -> m2_282  [key=1, style=dashed, color=darkseagreen4, label=request];
m2_272 -> m2_273  [key=0, style=solid];
m2_272 -> m2_84  [key=2, style=dotted];
m2_272 -> m2_274  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_275 -> m2_276  [key=0, style=solid];
m2_275 -> m2_15  [key=2, style=dotted];
m2_275 -> m2_114  [key=2, style=dotted];
m2_275 -> m2_281  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_273 -> m2_274  [key=0, style=solid];
m2_273 -> m2_65  [key=2, style=dotted];
m2_273 -> m2_277  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_274 -> m2_275  [key=0, style=solid];
m2_274 -> m2_85  [key=2, style=dotted];
m2_276 -> m2_270  [key=0, style=bold, color=blue];
m2_161 -> m2_162  [key=0, style=solid];
m2_162 -> m2_163  [key=0, style=solid];
m2_162 -> m2_83  [key=2, style=dotted];
m2_162 -> m2_165  [key=1, style=dashed, color=darkseagreen4, label=request];
m2_162 -> m2_180  [key=1, style=dashed, color=darkseagreen4, label=request];
m2_162 -> m2_166  [key=1, style=dashed, color=darkseagreen4, label=request];
m2_162 -> m2_186  [key=1, style=dashed, color=darkseagreen4, label=request];
m2_162 -> m2_167  [key=1, style=dashed, color=darkseagreen4, label=request];
m2_162 -> m2_192  [key=1, style=dashed, color=darkseagreen4, label=request];
m2_163 -> m2_164  [key=0, style=solid];
m2_163 -> m2_84  [key=2, style=dotted];
m2_163 -> m2_168  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_163 -> m2_169  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_163 -> m2_198  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_165 -> m2_166  [key=0, style=solid];
m2_165 -> m2_15  [key=2, style=dotted];
m2_165 -> m2_50  [key=2, style=dotted];
m2_165 -> m2_17  [key=2, style=dotted];
m2_165 -> m2_179  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_165 -> m2_183  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator"];
m2_166 -> m2_167  [key=0, style=solid];
m2_166 -> m2_15  [key=2, style=dotted];
m2_166 -> m2_50  [key=2, style=dotted];
m2_166 -> m2_17  [key=2, style=dotted];
m2_166 -> m2_185  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_166 -> m2_189  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator"];
m2_167 -> m2_168  [key=0, style=solid];
m2_167 -> m2_15  [key=2, style=dotted];
m2_167 -> m2_50  [key=2, style=dotted];
m2_167 -> m2_17  [key=2, style=dotted];
m2_167 -> m2_191  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_167 -> m2_195  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator"];
m2_164 -> m2_165  [key=0, style=solid];
m2_164 -> m2_65  [key=2, style=dotted];
m2_164 -> m2_171  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_164 -> m2_168  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m2_168 -> m2_169  [key=0, style=solid];
m2_168 -> m2_85  [key=2, style=dotted];
m2_169 -> m2_170  [key=0, style=solid];
m2_169 -> m2_15  [key=2, style=dotted];
m2_169 -> m2_114  [key=2, style=dotted];
m2_169 -> m2_197  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_170 -> m2_161  [key=0, style=bold, color=blue];
m2_346 -> m2_347  [key=0, style=solid];
m2_347 -> m2_348  [key=0, style=solid];
m2_347 -> m2_83  [key=2, style=dotted];
m2_348 -> m2_349  [key=0, style=solid];
m2_348 -> m2_84  [key=2, style=dotted];
m2_348 -> m2_350  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_349 -> m2_350  [key=0, style=solid];
m2_349 -> m2_65  [key=2, style=dotted];
m2_349 -> m2_357  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_350 -> m2_351  [key=0, style=solid];
m2_350 -> m2_85  [key=2, style=dotted];
m2_350 -> m2_352  [key=1, style=dashed, color=darkseagreen4, label=route];
m2_350 -> m2_353  [key=1, style=dashed, color=darkseagreen4, label=route];
m2_351 -> m2_352  [key=0, style=solid];
m2_351 -> m2_329  [key=2, style=dotted];
m2_352 -> m2_353  [key=0, style=solid];
m2_352 -> m2_342  [key=2, style=dotted];
m2_353 -> m2_354  [key=0, style=solid];
m2_353 -> m2_355  [key=2, style=dotted];
m2_353 -> m2_356  [key=2, style=dotted];
m2_353 -> m2_87  [key=2, style=dotted];
m2_354 -> m2_346  [key=0, style=bold, color=blue];
m2_26 -> m2_27  [key=0, style=solid];
m2_105 -> m2_106  [key=0, style=solid];
m2_106 -> m2_107  [key=0, style=solid];
m2_106 -> m2_83  [key=2, style=dotted];
m2_106 -> m2_110  [key=1, style=dashed, color=darkseagreen4, label=request];
m2_106 -> m2_123  [key=1, style=dashed, color=darkseagreen4, label=request];
m2_107 -> m2_108  [key=0, style=solid];
m2_107 -> m2_84  [key=2, style=dotted];
m2_107 -> m2_111  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_107 -> m2_112  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_107 -> m2_129  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_110 -> m2_111  [key=0, style=solid];
m2_110 -> m2_15  [key=2, style=dotted];
m2_110 -> m2_50  [key=2, style=dotted];
m2_110 -> m2_17  [key=2, style=dotted];
m2_110 -> m2_122  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_110 -> m2_126  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator"];
m2_108 -> m2_109  [key=0, style=solid];
m2_108 -> m2_65  [key=2, style=dotted];
m2_108 -> m2_115  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_108 -> m2_111  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m2_111 -> m2_112  [key=0, style=solid];
m2_111 -> m2_85  [key=2, style=dotted];
m2_112 -> m2_113  [key=0, style=solid];
m2_112 -> m2_15  [key=2, style=dotted];
m2_112 -> m2_114  [key=2, style=dotted];
m2_112 -> m2_128  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_109 -> m2_110  [key=0, style=solid];
m2_109 -> m2_18  [key=2, style=dotted];
m2_109 -> m2_120  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModuleConfigurator"];
m2_113 -> m2_105  [key=0, style=bold, color=blue];
m2_466 -> m2_467  [key=0, style=solid];
m2_467 -> m2_468  [key=0, style=solid];
m2_467 -> m2_83  [key=2, style=dotted];
m2_467 -> m2_473  [key=1, style=dashed, color=darkseagreen4, label=request];
m2_468 -> m2_469  [key=0, style=solid];
m2_468 -> m2_84  [key=2, style=dotted];
m2_468 -> m2_470  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_473 -> m2_474  [key=0, style=solid];
m2_473 -> m2_87  [key=2, style=dotted];
m2_469 -> m2_470  [key=0, style=solid];
m2_469 -> m2_65  [key=2, style=dotted];
m2_469 -> m2_475  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_470 -> m2_471  [key=0, style=solid];
m2_470 -> m2_85  [key=2, style=dotted];
m2_470 -> m2_472  [key=1, style=dashed, color=darkseagreen4, label=resolvedRoute];
m2_470 -> m2_473  [key=1, style=dashed, color=darkseagreen4, label=resolvedRoute];
m2_471 -> m2_472  [key=0, style=solid];
m2_471 -> m2_329  [key=2, style=dotted];
m2_472 -> m2_473  [key=0, style=solid];
m2_472 -> m2_342  [key=2, style=dotted];
m2_474 -> m2_466  [key=0, style=bold, color=blue];
m2_200 -> m2_201  [key=0, style=solid];
m2_201 -> m2_202  [key=0, style=solid];
m2_201 -> m2_83  [key=2, style=dotted];
m2_201 -> m2_205  [key=1, style=dashed, color=darkseagreen4, label=request];
m2_201 -> m2_221  [key=1, style=dashed, color=darkseagreen4, label=request];
m2_201 -> m2_206  [key=1, style=dashed, color=darkseagreen4, label=request];
m2_201 -> m2_227  [key=1, style=dashed, color=darkseagreen4, label=request];
m2_201 -> m2_207  [key=1, style=dashed, color=darkseagreen4, label=request];
m2_201 -> m2_233  [key=1, style=dashed, color=darkseagreen4, label=request];
m2_202 -> m2_203  [key=0, style=solid];
m2_202 -> m2_84  [key=2, style=dotted];
m2_202 -> m2_208  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_202 -> m2_209  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_202 -> m2_239  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_205 -> m2_206  [key=0, style=solid];
m2_205 -> m2_15  [key=2, style=dotted];
m2_205 -> m2_50  [key=2, style=dotted];
m2_205 -> m2_17  [key=2, style=dotted];
m2_205 -> m2_220  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_205 -> m2_224  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator"];
m2_206 -> m2_207  [key=0, style=solid];
m2_206 -> m2_15  [key=2, style=dotted];
m2_206 -> m2_50  [key=2, style=dotted];
m2_206 -> m2_17  [key=2, style=dotted];
m2_206 -> m2_226  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_206 -> m2_230  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator"];
m2_207 -> m2_208  [key=0, style=solid];
m2_207 -> m2_15  [key=2, style=dotted];
m2_207 -> m2_50  [key=2, style=dotted];
m2_207 -> m2_17  [key=2, style=dotted];
m2_207 -> m2_232  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_207 -> m2_236  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator"];
m2_203 -> m2_204  [key=0, style=solid];
m2_203 -> m2_65  [key=2, style=dotted];
m2_203 -> m2_211  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_203 -> m2_208  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m2_208 -> m2_209  [key=0, style=solid];
m2_208 -> m2_85  [key=2, style=dotted];
m2_209 -> m2_210  [key=0, style=solid];
m2_209 -> m2_15  [key=2, style=dotted];
m2_209 -> m2_114  [key=2, style=dotted];
m2_209 -> m2_238  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_204 -> m2_205  [key=0, style=solid];
m2_204 -> m2_18  [key=2, style=dotted];
m2_204 -> m2_218  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModuleConfigurator"];
m2_210 -> m2_200  [key=0, style=bold, color=blue];
m2_17 -> m2_18  [key=0, style=solid, color=green];
m2_17 -> m2_19  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.BrowserResponseBodyWrapper"];
m2_17 -> m2_22  [key=3, color=darkorchid, style=bold, label="method methodReturn TModel DeserializeJson"];
m2_18 -> m2_19  [key=0, style=solid, color=green];
m2_18 -> m2_21  [key=2, style=dotted, color=green];
m2_19 -> m2_22  [key=2, style=dotted];
m2_19 -> m2_20  [key=0, style=solid];
m2_20 -> m2_17  [key=0, style=bold, color=blue];
m2_20 -> m2_21  [key=0, style=solid];
m2_20 -> m2_22  [key=2, style=dotted];
m2_526 -> m2_527  [key=0, style=solid];
m2_527 -> m2_528  [key=0, style=solid];
m2_527 -> m2_513  [key=2, style=dotted];
m2_527 -> m2_529  [key=1, style=dashed, color=darkseagreen4, label=moduleCatalog];
m2_528 -> m2_529  [key=0, style=solid];
m2_528 -> m2_514  [key=2, style=dotted];
m2_528 -> m2_515  [key=2, style=dotted];
m2_528 -> m2_14  [key=2, style=dotted];
m2_529 -> m2_530  [key=0, style=solid];
m2_529 -> m2_73  [key=2, style=dotted];
m2_529 -> m2_532  [key=1, style=dashed, color=darkseagreen4, label=specificResolver];
m2_530 -> m2_531  [key=0, style=solid];
m2_530 -> m2_83  [key=2, style=dotted];
m2_532 -> m2_533  [key=0, style=solid];
m2_532 -> m2_85  [key=2, style=dotted];
m2_531 -> m2_532  [key=0, style=solid];
m2_531 -> m2_84  [key=2, style=dotted];
m2_531 -> m2_533  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_533 -> m2_534  [key=0, style=solid];
m2_533 -> m2_535  [key=2, style=dotted];
m2_533 -> m2_536  [key=2, style=dotted];
m2_534 -> m2_526  [key=0, style=bold, color=blue];
m2_241 -> m2_242  [key=0, style=solid];
m2_242 -> m2_243  [key=0, style=solid];
m2_242 -> m2_83  [key=2, style=dotted];
m2_242 -> m2_245  [key=1, style=dashed, color=darkseagreen4, label=request];
m2_242 -> m2_256  [key=1, style=dashed, color=darkseagreen4, label=request];
m2_242 -> m2_246  [key=1, style=dashed, color=darkseagreen4, label=request];
m2_242 -> m2_262  [key=1, style=dashed, color=darkseagreen4, label=request];
m2_243 -> m2_244  [key=0, style=solid];
m2_243 -> m2_84  [key=2, style=dotted];
m2_243 -> m2_247  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_243 -> m2_248  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_243 -> m2_268  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_245 -> m2_246  [key=0, style=solid];
m2_245 -> m2_15  [key=2, style=dotted];
m2_245 -> m2_50  [key=2, style=dotted];
m2_245 -> m2_17  [key=2, style=dotted];
m2_245 -> m2_255  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_245 -> m2_259  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator"];
m2_246 -> m2_247  [key=0, style=solid];
m2_246 -> m2_15  [key=2, style=dotted];
m2_246 -> m2_50  [key=2, style=dotted];
m2_246 -> m2_17  [key=2, style=dotted];
m2_246 -> m2_261  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_246 -> m2_265  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator"];
m2_244 -> m2_245  [key=0, style=solid];
m2_244 -> m2_65  [key=2, style=dotted];
m2_244 -> m2_250  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_244 -> m2_247  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m2_247 -> m2_248  [key=0, style=solid];
m2_247 -> m2_85  [key=2, style=dotted];
m2_248 -> m2_249  [key=0, style=solid];
m2_248 -> m2_15  [key=2, style=dotted];
m2_248 -> m2_114  [key=2, style=dotted];
m2_248 -> m2_267  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_249 -> m2_241  [key=0, style=bold, color=blue];
m2_31 -> m2_32  [key=0, style=solid];
m2_70 -> m2_71  [key=0, style=solid, color=red];
m2_71 -> m2_72  [key=0, style=solid, color=red];
m2_71 -> m2_73  [key=2, style=dotted, color=red];
m2_72 -> m2_70  [key=0, style=bold, color=blue];
m2_455 -> m2_456  [key=0, style=solid];
m2_456 -> m2_457  [key=0, style=solid];
m2_456 -> m2_83  [key=2, style=dotted];
m2_457 -> m2_458  [key=0, style=solid];
m2_457 -> m2_84  [key=2, style=dotted];
m2_457 -> m2_459  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_458 -> m2_459  [key=0, style=solid];
m2_458 -> m2_65  [key=2, style=dotted];
m2_458 -> m2_463  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_459 -> m2_460  [key=0, style=solid];
m2_459 -> m2_85  [key=2, style=dotted];
m2_460 -> m2_461  [key=0, style=solid];
m2_460 -> m2_356  [key=2, style=dotted];
m2_461 -> m2_462  [key=0, style=solid];
m2_461 -> m2_87  [key=2, style=dotted];
m2_462 -> m2_455  [key=0, style=bold, color=blue];
m2_29 -> m2_30  [key=0, style=solid, color=green];
m2_29 -> m2_32  [key=2, style=dotted, color=green];
m2_29 -> m2_33  [key=2, style=dotted, color=green];
m2_537 -> m2_538  [key=0, style=solid];
m2_538 -> m2_539  [key=0, style=solid];
m2_538 -> m2_14  [key=2, style=dotted];
m2_538 -> m2_552  [key=1, style=dashed, color=darkseagreen4, label=moduleCatalog];
m2_538 -> m2_540  [key=1, style=dashed, color=darkseagreen4, label=moduleCatalog];
m2_538 -> m2_556  [key=1, style=dashed, color=darkseagreen4, label=moduleCatalog];
m2_538 -> m2_541  [key=1, style=dashed, color=darkseagreen4, label=moduleCatalog];
m2_538 -> m2_542  [key=1, style=dashed, color=darkseagreen4, label=moduleCatalog];
m2_539 -> m2_540  [key=0, style=solid];
m2_539 -> m2_15  [key=2, style=dotted];
m2_539 -> m2_549  [key=2, style=dotted];
m2_539 -> m2_17  [key=2, style=dotted];
m2_539 -> m2_551  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_540 -> m2_541  [key=0, style=solid];
m2_540 -> m2_15  [key=2, style=dotted];
m2_540 -> m2_549  [key=2, style=dotted];
m2_540 -> m2_17  [key=2, style=dotted];
m2_540 -> m2_555  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_541 -> m2_542  [key=0, style=solid];
m2_541 -> m2_514  [key=2, style=dotted];
m2_541 -> m2_515  [key=2, style=dotted];
m2_541 -> m2_14  [key=2, style=dotted];
m2_542 -> m2_543  [key=0, style=solid];
m2_542 -> m2_550  [key=2, style=dotted];
m2_542 -> m2_545  [key=1, style=dashed, color=darkseagreen4, label=specificResolver];
m2_543 -> m2_544  [key=0, style=solid];
m2_543 -> m2_83  [key=2, style=dotted];
m2_545 -> m2_546  [key=0, style=solid];
m2_545 -> m2_85  [key=2, style=dotted];
m2_545 -> m2_547  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_544 -> m2_545  [key=0, style=solid];
m2_544 -> m2_84  [key=2, style=dotted];
m2_546 -> m2_547  [key=0, style=solid];
m2_546 -> m2_329  [key=2, style=dotted];
m2_547 -> m2_548  [key=0, style=solid];
m2_547 -> m2_329  [key=2, style=dotted];
m2_548 -> m2_537  [key=0, style=bold, color=blue];
m2_333 -> m2_334  [key=0, style=solid];
m2_334 -> m2_335  [key=0, style=solid];
m2_334 -> m2_83  [key=2, style=dotted];
m2_334 -> m2_340  [key=1, style=dashed, color=darkseagreen4, label=request];
m2_335 -> m2_336  [key=0, style=solid];
m2_335 -> m2_84  [key=2, style=dotted];
m2_335 -> m2_337  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_340 -> m2_341  [key=0, style=solid];
m2_340 -> m2_87  [key=2, style=dotted];
m2_336 -> m2_337  [key=0, style=solid];
m2_336 -> m2_65  [key=2, style=dotted];
m2_336 -> m2_343  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_337 -> m2_338  [key=0, style=solid];
m2_337 -> m2_85  [key=2, style=dotted];
m2_337 -> m2_339  [key=1, style=dashed, color=darkseagreen4, label=route];
m2_337 -> m2_340  [key=1, style=dashed, color=darkseagreen4, label=route];
m2_338 -> m2_339  [key=0, style=solid];
m2_338 -> m2_329  [key=2, style=dotted];
m2_339 -> m2_340  [key=0, style=solid];
m2_339 -> m2_342  [key=2, style=dotted];
m2_341 -> m2_333  [key=0, style=bold, color=blue];
m2_555 -> m2_556  [key=0, style=solid];
m2_23 -> m2_24  [key=0, style=solid, color=green];
m2_34 -> m2_35  [key=0, style=solid];
m2_34 -> m2_36  [key=2, style=dotted];
m2_37 -> m2_38  [key=0, style=solid];
m2_40 -> m2_41  [key=0, style=solid];
m2_43 -> m2_44  [key=0, style=solid];
m2_47 -> m2_48  [key=0, style=solid];
m2_47 -> m2_52  [key=1, style=dashed, color=darkseagreen4, label="?"];
m2_58 -> m2_59  [key=0, style=solid];
m2_62 -> m2_63  [key=0, style=solid];
m2_21 -> m2_19  [key=0, style=bold, color=blue];
m2_24 -> m2_25  [key=0, style=solid, color=green];
m2_24 -> m2_15  [key=2, style=dotted, color=green];
m2_24 -> m2_26  [key=2, style=dotted, color=green];
m2_25 -> m2_23  [key=0, style=bold, color=blue];
m2_27 -> m2_28  [key=0, style=solid, color=green];
m2_27 -> m2_29  [key=2, style=dotted];
m2_28 -> m2_26  [key=0, style=bold, color=blue];
m2_28 -> m2_29  [key=0, style=solid, color=green];
m2_28 -> m2_31  [key=2, style=dotted, color=green];
m2_30 -> m2_31  [key=0, style=solid];
m2_30 -> m2_27  [key=0, style=bold, color=blue];
m2_32 -> m2_30  [key=0, style=bold, color=blue];
m2_33 -> m2_34  [key=0, style=solid];
m2_35 -> m2_33  [key=0, style=bold, color=blue];
m2_38 -> m2_39  [key=0, style=solid];
m2_38 -> m2_29  [key=2, style=dotted];
m2_39 -> m2_37  [key=0, style=bold, color=blue];
m2_41 -> m2_42  [key=0, style=solid];
m2_42 -> m2_40  [key=0, style=bold, color=blue];
m2_44 -> m2_45  [key=0, style=solid];
m2_44 -> m2_46  [key=2, style=dotted];
m2_45 -> m2_43  [key=0, style=bold, color=blue];
m2_48 -> m2_49  [key=0, style=solid];
m2_48 -> m2_50  [key=2, style=dotted];
m2_48 -> m2_52  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator"];
m2_48 -> m2_53  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator"];
m2_52 -> m2_53  [key=0, style=solid];
m2_52 -> m2_55  [key=2, style=dotted];
m2_52 -> m2_56  [key=2, style=dotted];
m2_49 -> m2_47  [key=0, style=bold, color=blue];
m2_53 -> m2_54  [key=0, style=solid];
m2_53 -> m2_57  [key=2, style=dotted];
m2_51 -> m2_52  [key=0, style=solid];
m2_51 -> m2_53  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator"];
m2_54 -> m2_51  [key=0, style=bold, color=blue];
m2_59 -> m2_60  [key=0, style=solid];
m2_59 -> m2_61  [key=2, style=dotted];
m2_60 -> m2_58  [key=0, style=bold, color=blue];
m2_63 -> m2_64  [key=0, style=solid];
m2_64 -> m2_62  [key=0, style=bold, color=blue];
m2_88 -> m2_89  [key=0, style=solid, color=red];
m2_89 -> m2_90  [key=0, style=solid, color=red];
m2_89 -> m2_91  [key=2, style=dotted, color=red];
m2_90 -> m2_88  [key=0, style=bold, color=blue];
m2_102 -> m2_103  [key=0, style=solid];
m2_103 -> m2_104  [key=0, style=solid];
m2_103 -> m2_91  [key=2, style=dotted];
m2_104 -> m2_102  [key=0, style=bold, color=blue];
m2_123 -> m2_124  [key=0, style=solid];
m2_123 -> m2_46  [key=2, style=dotted];
m2_129 -> m2_130  [key=0, style=solid];
m2_129 -> m2_131  [key=2, style=dotted];
m2_115 -> m2_116  [key=0, style=solid];
m2_115 -> m2_117  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator"];
m2_120 -> m2_121  [key=0, style=solid];
m2_120 -> m2_36  [key=2, style=dotted];
m2_122 -> m2_123  [key=0, style=solid];
m2_126 -> m2_127  [key=0, style=solid];
m2_126 -> m2_56  [key=2, style=dotted];
m2_126 -> m2_57  [key=2, style=dotted];
m2_128 -> m2_129  [key=0, style=solid];
m2_116 -> m2_117  [key=0, style=solid];
m2_116 -> m2_91  [key=2, style=dotted];
m2_117 -> m2_118  [key=0, style=solid];
m2_117 -> m2_91  [key=2, style=dotted];
m2_118 -> m2_115  [key=0, style=bold, color=blue];
m2_119 -> m2_120  [key=0, style=solid];
m2_121 -> m2_119  [key=0, style=bold, color=blue];
m2_124 -> m2_122  [key=0, style=bold, color=blue];
m2_125 -> m2_126  [key=0, style=solid];
m2_127 -> m2_125  [key=0, style=bold, color=blue];
m2_130 -> m2_128  [key=0, style=bold, color=blue];
m2_146 -> m2_147  [key=0, style=solid];
m2_146 -> m2_148  [key=2, style=dotted];
m2_153 -> m2_154  [key=0, style=solid];
m2_153 -> m2_46  [key=2, style=dotted];
m2_159 -> m2_160  [key=0, style=solid];
m2_159 -> m2_131  [key=2, style=dotted];
m2_141 -> m2_142  [key=0, style=solid];
m2_141 -> m2_143  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator"];
m2_145 -> m2_146  [key=0, style=solid];
m2_150 -> m2_151  [key=0, style=solid];
m2_150 -> m2_56  [key=2, style=dotted];
m2_150 -> m2_57  [key=2, style=dotted];
m2_152 -> m2_153  [key=0, style=solid];
m2_156 -> m2_157  [key=0, style=solid];
m2_156 -> m2_56  [key=2, style=dotted];
m2_156 -> m2_57  [key=2, style=dotted];
m2_158 -> m2_159  [key=0, style=solid];
m2_142 -> m2_143  [key=0, style=solid];
m2_142 -> m2_91  [key=2, style=dotted];
m2_143 -> m2_144  [key=0, style=solid];
m2_143 -> m2_91  [key=2, style=dotted];
m2_144 -> m2_141  [key=0, style=bold, color=blue];
m2_147 -> m2_145  [key=0, style=bold, color=blue];
m2_149 -> m2_150  [key=0, style=solid];
m2_151 -> m2_149  [key=0, style=bold, color=blue];
m2_154 -> m2_152  [key=0, style=bold, color=blue];
m2_155 -> m2_156  [key=0, style=solid];
m2_157 -> m2_155  [key=0, style=bold, color=blue];
m2_160 -> m2_158  [key=0, style=bold, color=blue];
m2_180 -> m2_181  [key=0, style=solid];
m2_180 -> m2_148  [key=2, style=dotted];
m2_186 -> m2_187  [key=0, style=solid];
m2_186 -> m2_148  [key=2, style=dotted];
m2_192 -> m2_193  [key=0, style=solid];
m2_192 -> m2_148  [key=2, style=dotted];
m2_198 -> m2_199  [key=0, style=solid];
m2_198 -> m2_131  [key=2, style=dotted];
m2_171 -> m2_172  [key=0, style=solid];
m2_171 -> m2_173  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator"];
m2_171 -> m2_174  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator"];
m2_171 -> m2_175  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator"];
m2_171 -> m2_176  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator"];
m2_171 -> m2_177  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator"];
m2_179 -> m2_180  [key=0, style=solid];
m2_183 -> m2_184  [key=0, style=solid];
m2_183 -> m2_56  [key=2, style=dotted];
m2_185 -> m2_186  [key=0, style=solid];
m2_189 -> m2_190  [key=0, style=solid];
m2_189 -> m2_56  [key=2, style=dotted];
m2_189 -> m2_57  [key=2, style=dotted];
m2_191 -> m2_192  [key=0, style=solid];
m2_195 -> m2_196  [key=0, style=solid];
m2_195 -> m2_56  [key=2, style=dotted];
m2_195 -> m2_57  [key=2, style=dotted];
m2_197 -> m2_198  [key=0, style=solid];
m2_172 -> m2_173  [key=0, style=solid];
m2_172 -> m2_91  [key=2, style=dotted];
m2_173 -> m2_174  [key=0, style=solid];
m2_173 -> m2_91  [key=2, style=dotted];
m2_174 -> m2_175  [key=0, style=solid];
m2_174 -> m2_91  [key=2, style=dotted];
m2_175 -> m2_176  [key=0, style=solid];
m2_175 -> m2_91  [key=2, style=dotted];
m2_176 -> m2_177  [key=0, style=solid];
m2_176 -> m2_91  [key=2, style=dotted];
m2_177 -> m2_178  [key=0, style=solid];
m2_177 -> m2_91  [key=2, style=dotted];
m2_178 -> m2_171  [key=0, style=bold, color=blue];
m2_181 -> m2_179  [key=0, style=bold, color=blue];
m2_182 -> m2_183  [key=0, style=solid];
m2_184 -> m2_182  [key=0, style=bold, color=blue];
m2_187 -> m2_185  [key=0, style=bold, color=blue];
m2_188 -> m2_189  [key=0, style=solid];
m2_190 -> m2_188  [key=0, style=bold, color=blue];
m2_193 -> m2_191  [key=0, style=bold, color=blue];
m2_194 -> m2_195  [key=0, style=solid];
m2_196 -> m2_194  [key=0, style=bold, color=blue];
m2_199 -> m2_197  [key=0, style=bold, color=blue];
m2_221 -> m2_222  [key=0, style=solid];
m2_221 -> m2_46  [key=2, style=dotted];
m2_227 -> m2_228  [key=0, style=solid];
m2_227 -> m2_46  [key=2, style=dotted];
m2_233 -> m2_234  [key=0, style=solid];
m2_233 -> m2_46  [key=2, style=dotted];
m2_239 -> m2_240  [key=0, style=solid];
m2_239 -> m2_131  [key=2, style=dotted];
m2_211 -> m2_212  [key=0, style=solid];
m2_211 -> m2_213  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator"];
m2_211 -> m2_214  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator"];
m2_211 -> m2_215  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator"];
m2_218 -> m2_219  [key=0, style=solid];
m2_218 -> m2_36  [key=2, style=dotted];
m2_220 -> m2_221  [key=0, style=solid];
m2_224 -> m2_225  [key=0, style=solid];
m2_224 -> m2_56  [key=2, style=dotted];
m2_224 -> m2_57  [key=2, style=dotted];
m2_226 -> m2_227  [key=0, style=solid];
m2_230 -> m2_231  [key=0, style=solid];
m2_230 -> m2_56  [key=2, style=dotted];
m2_230 -> m2_57  [key=2, style=dotted];
m2_232 -> m2_233  [key=0, style=solid];
m2_236 -> m2_237  [key=0, style=solid];
m2_236 -> m2_56  [key=2, style=dotted];
m2_236 -> m2_57  [key=2, style=dotted];
m2_238 -> m2_239  [key=0, style=solid];
m2_212 -> m2_213  [key=0, style=solid];
m2_212 -> m2_91  [key=2, style=dotted];
m2_213 -> m2_214  [key=0, style=solid];
m2_213 -> m2_91  [key=2, style=dotted];
m2_214 -> m2_215  [key=0, style=solid];
m2_214 -> m2_91  [key=2, style=dotted];
m2_215 -> m2_216  [key=0, style=solid];
m2_215 -> m2_91  [key=2, style=dotted];
m2_216 -> m2_211  [key=0, style=bold, color=blue];
m2_217 -> m2_218  [key=0, style=solid];
m2_219 -> m2_217  [key=0, style=bold, color=blue];
m2_222 -> m2_220  [key=0, style=bold, color=blue];
m2_223 -> m2_224  [key=0, style=solid];
m2_225 -> m2_223  [key=0, style=bold, color=blue];
m2_228 -> m2_226  [key=0, style=bold, color=blue];
m2_229 -> m2_230  [key=0, style=solid];
m2_231 -> m2_229  [key=0, style=bold, color=blue];
m2_234 -> m2_232  [key=0, style=bold, color=blue];
m2_235 -> m2_236  [key=0, style=solid];
m2_237 -> m2_235  [key=0, style=bold, color=blue];
m2_240 -> m2_238  [key=0, style=bold, color=blue];
m2_256 -> m2_257  [key=0, style=solid];
m2_256 -> m2_46  [key=2, style=dotted];
m2_262 -> m2_263  [key=0, style=solid];
m2_262 -> m2_46  [key=2, style=dotted];
m2_268 -> m2_269  [key=0, style=solid];
m2_268 -> m2_131  [key=2, style=dotted];
m2_250 -> m2_251  [key=0, style=solid];
m2_250 -> m2_252  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator"];
m2_250 -> m2_253  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator"];
m2_255 -> m2_256  [key=0, style=solid];
m2_259 -> m2_260  [key=0, style=solid];
m2_259 -> m2_56  [key=2, style=dotted];
m2_261 -> m2_262  [key=0, style=solid];
m2_265 -> m2_266  [key=0, style=solid];
m2_265 -> m2_56  [key=2, style=dotted];
m2_265 -> m2_57  [key=2, style=dotted];
m2_267 -> m2_268  [key=0, style=solid];
m2_251 -> m2_252  [key=0, style=solid];
m2_251 -> m2_91  [key=2, style=dotted];
m2_252 -> m2_253  [key=0, style=solid];
m2_252 -> m2_91  [key=2, style=dotted];
m2_253 -> m2_254  [key=0, style=solid];
m2_253 -> m2_91  [key=2, style=dotted];
m2_254 -> m2_250  [key=0, style=bold, color=blue];
m2_257 -> m2_255  [key=0, style=bold, color=blue];
m2_258 -> m2_259  [key=0, style=solid];
m2_260 -> m2_258  [key=0, style=bold, color=blue];
m2_263 -> m2_261  [key=0, style=bold, color=blue];
m2_264 -> m2_265  [key=0, style=solid];
m2_266 -> m2_264  [key=0, style=bold, color=blue];
m2_269 -> m2_267  [key=0, style=bold, color=blue];
m2_282 -> m2_283  [key=0, style=solid];
m2_282 -> m2_46  [key=2, style=dotted];
m2_277 -> m2_278  [key=0, style=solid];
m2_281 -> m2_282  [key=0, style=solid];
m2_278 -> m2_279  [key=0, style=solid];
m2_278 -> m2_280  [key=2, style=dotted];
m2_279 -> m2_277  [key=0, style=bold, color=blue];
m2_283 -> m2_281  [key=0, style=bold, color=blue];
m2_295 -> m2_296  [key=0, style=solid];
m2_295 -> m2_46  [key=2, style=dotted];
m2_291 -> m2_292  [key=0, style=solid];
m2_294 -> m2_295  [key=0, style=solid];
m2_292 -> m2_293  [key=0, style=solid];
m2_292 -> m2_280  [key=2, style=dotted];
m2_293 -> m2_291  [key=0, style=bold, color=blue];
m2_296 -> m2_294  [key=0, style=bold, color=blue];
m2_306 -> m2_307  [key=0, style=solid];
m2_306 -> m2_308  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator"];
m2_306 -> m2_309  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator"];
m2_311 -> m2_312  [key=0, style=solid];
m2_314 -> m2_315  [key=0, style=solid];
m2_317 -> m2_318  [key=0, style=solid];
m2_307 -> m2_308  [key=0, style=solid];
m2_307 -> m2_280  [key=2, style=dotted];
m2_308 -> m2_309  [key=0, style=solid];
m2_308 -> m2_280  [key=2, style=dotted];
m2_309 -> m2_310  [key=0, style=solid];
m2_309 -> m2_280  [key=2, style=dotted];
m2_310 -> m2_306  [key=0, style=bold, color=blue];
m2_312 -> m2_313  [key=0, style=solid];
m2_312 -> m2_46  [key=2, style=dotted];
m2_313 -> m2_311  [key=0, style=bold, color=blue];
m2_315 -> m2_316  [key=0, style=solid];
m2_315 -> m2_46  [key=2, style=dotted];
m2_316 -> m2_314  [key=0, style=bold, color=blue];
m2_318 -> m2_319  [key=0, style=solid];
m2_318 -> m2_46  [key=2, style=dotted];
m2_319 -> m2_317  [key=0, style=bold, color=blue];
m2_330 -> m2_331  [key=0, style=solid];
m2_331 -> m2_332  [key=0, style=solid];
m2_331 -> m2_280  [key=2, style=dotted];
m2_332 -> m2_330  [key=0, style=bold, color=blue];
m2_343 -> m2_344  [key=0, style=solid];
m2_344 -> m2_345  [key=0, style=solid];
m2_344 -> m2_280  [key=2, style=dotted];
m2_345 -> m2_343  [key=0, style=bold, color=blue];
m2_357 -> m2_358  [key=0, style=solid];
m2_357 -> m2_359  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator"];
m2_358 -> m2_359  [key=0, style=solid];
m2_358 -> m2_280  [key=2, style=dotted];
m2_359 -> m2_360  [key=0, style=solid];
m2_359 -> m2_361  [key=2, style=dotted];
m2_360 -> m2_357  [key=0, style=bold, color=blue];
m2_373 -> m2_374  [key=0, style=solid];
m2_373 -> m2_375  [key=2, style=dotted];
m2_369 -> m2_370  [key=0, style=solid];
m2_372 -> m2_373  [key=0, style=solid];
m2_370 -> m2_371  [key=0, style=solid];
m2_370 -> m2_280  [key=2, style=dotted];
m2_371 -> m2_369  [key=0, style=bold, color=blue];
m2_374 -> m2_372  [key=0, style=bold, color=blue];
m2_385 -> m2_386  [key=0, style=solid];
m2_389 -> m2_390  [key=0, style=solid];
m2_389 -> m2_391  [key=2, style=dotted];
m2_392 -> m2_393  [key=0, style=solid];
m2_386 -> m2_387  [key=0, style=solid];
m2_386 -> m2_280  [key=2, style=dotted];
m2_387 -> m2_385  [key=0, style=bold, color=blue];
m2_388 -> m2_389  [key=0, style=solid];
m2_390 -> m2_388  [key=0, style=bold, color=blue];
m2_393 -> m2_394  [key=0, style=solid];
m2_393 -> m2_22  [key=2, style=dotted];
m2_394 -> m2_392  [key=0, style=bold, color=blue];
m2_403 -> m2_404  [key=0, style=solid];
m2_404 -> m2_405  [key=0, style=solid];
m2_404 -> m2_280  [key=2, style=dotted];
m2_405 -> m2_403  [key=0, style=bold, color=blue];
m2_423 -> m2_424  [key=0, style=solid];
m2_426 -> m2_427  [key=0, style=solid];
m2_430 -> m2_431  [key=0, style=solid];
m2_430 -> m2_56  [key=2, style=dotted];
m2_424 -> m2_425  [key=0, style=solid];
m2_424 -> m2_280  [key=2, style=dotted];
m2_425 -> m2_423  [key=0, style=bold, color=blue];
m2_427 -> m2_428  [key=0, style=solid];
m2_427 -> m2_148  [key=2, style=dotted];
m2_428 -> m2_426  [key=0, style=bold, color=blue];
m2_429 -> m2_430  [key=0, style=solid];
m2_431 -> m2_429  [key=0, style=bold, color=blue];
m2_441 -> m2_442  [key=0, style=solid];
m2_442 -> m2_443  [key=0, style=solid];
m2_442 -> m2_280  [key=2, style=dotted];
m2_443 -> m2_441  [key=0, style=bold, color=blue];
m2_452 -> m2_453  [key=0, style=solid];
m2_453 -> m2_454  [key=0, style=solid];
m2_453 -> m2_280  [key=2, style=dotted];
m2_454 -> m2_452  [key=0, style=bold, color=blue];
m2_463 -> m2_464  [key=0, style=solid];
m2_464 -> m2_465  [key=0, style=solid];
m2_464 -> m2_280  [key=2, style=dotted];
m2_465 -> m2_463  [key=0, style=bold, color=blue];
m2_475 -> m2_476  [key=0, style=solid];
m2_476 -> m2_477  [key=0, style=solid];
m2_476 -> m2_280  [key=2, style=dotted];
m2_477 -> m2_475  [key=0, style=bold, color=blue];
m2_487 -> m2_488  [key=0, style=solid];
m2_487 -> m2_489  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator"];
m2_488 -> m2_489  [key=0, style=solid];
m2_488 -> m2_280  [key=2, style=dotted];
m2_489 -> m2_490  [key=0, style=solid];
m2_489 -> m2_361  [key=2, style=dotted];
m2_490 -> m2_487  [key=0, style=bold, color=blue];
m2_499 -> m2_500  [key=0, style=solid];
m2_499 -> m2_501  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator"];
m2_500 -> m2_501  [key=0, style=solid];
m2_500 -> m2_280  [key=2, style=dotted];
m2_501 -> m2_502  [key=0, style=solid];
m2_501 -> m2_503  [key=2, style=dotted];
m2_502 -> m2_499  [key=0, style=bold, color=blue];
m2_552 -> m2_553  [key=0, style=solid];
m2_552 -> m2_554  [key=2, style=dotted];
m2_556 -> m2_557  [key=0, style=solid];
m2_556 -> m2_29  [key=2, style=dotted];
m2_551 -> m2_552  [key=0, style=solid];
m2_553 -> m2_551  [key=0, style=bold, color=blue];
m2_557 -> m2_555  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_14  [key=2, style=dotted];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_15  [key=2, style=dotted];
m2_2 -> m2_16  [key=2, style=dotted];
m2_2 -> m2_19  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_2 -> m2_23  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_14  [key=2, style=dotted];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_15  [key=2, style=dotted];
m2_4 -> m2_17  [key=2, style=dotted];
m2_4 -> m2_26  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_5 -> m2_6  [key=0, style=solid];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_18  [key=2, style=dotted];
m2_6 -> m2_34  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModuleConfigurator"];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> m2_15  [key=2, style=dotted];
m2_7 -> m2_16  [key=2, style=dotted];
m2_7 -> m2_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_7 -> m2_40  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_14  [key=2, style=dotted];
m2_9 -> m2_10  [key=0, style=solid, color=green];
m2_9 -> m2_15  [key=2, style=dotted];
m2_9 -> m2_16  [key=2, style=dotted];
m2_9 -> m2_43  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_9 -> m2_47  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_9 -> m2_11  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.BrowserResponseBodyWrapper"];
m2_10 -> m2_11  [key=0, style=solid, color=green];
m2_10 -> m2_14  [key=2, style=dotted, color=green];
m2_10 -> m2_12  [key=1, style=dashed, color=green, label=document];
m2_11 -> m2_12  [key=0, style=solid, color=red];
m2_11 -> m2_14  [key=2, style=dotted, color=red];
m2_11 -> m2_15  [key=2, style=dotted];
m2_11 -> m2_16  [key=2, style=dotted];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_15  [key=2, style=dotted];
m2_12 -> m2_16  [key=2, style=dotted];
m2_12 -> m2_58  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_12 -> m2_62  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_13 -> m2_0  [key=0, style=bold, color=blue];
m2_13 -> m2_9  [key=0, style=bold, color=blue];
m2_22 -> m2_18  [key=3, color=green, style=bold, label="Parameter variable Nancy.Json.JavaScriptSerializer serializer"];
m2_504 -> m2_505  [key=0, style=solid];
m2_505 -> m2_506  [key=0, style=solid];
m2_505 -> m2_513  [key=2, style=dotted];
m2_505 -> m2_507  [key=1, style=dashed, color=darkseagreen4, label=moduleCatalog];
m2_506 -> m2_507  [key=0, style=solid];
m2_506 -> m2_514  [key=2, style=dotted];
m2_506 -> m2_515  [key=2, style=dotted];
m2_506 -> m2_14  [key=2, style=dotted];
m2_507 -> m2_508  [key=0, style=solid];
m2_507 -> m2_73  [key=2, style=dotted];
m2_507 -> m2_510  [key=1, style=dashed, color=darkseagreen4, label=specificResolver];
m2_508 -> m2_509  [key=0, style=solid];
m2_508 -> m2_83  [key=2, style=dotted];
m2_510 -> m2_511  [key=0, style=solid];
m2_510 -> m2_85  [key=2, style=dotted];
m2_509 -> m2_510  [key=0, style=solid];
m2_509 -> m2_84  [key=2, style=dotted];
m2_511 -> m2_512  [key=0, style=solid];
m2_511 -> m2_516  [key=2, style=dotted];
m2_512 -> m2_504  [key=0, style=bold, color=blue];
m2_284 -> m2_285  [key=0, style=solid];
m2_285 -> m2_286  [key=0, style=solid];
m2_285 -> m2_83  [key=2, style=dotted];
m2_286 -> m2_287  [key=0, style=solid];
m2_286 -> m2_84  [key=2, style=dotted];
m2_286 -> m2_288  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_286 -> m2_289  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_286 -> m2_295  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_287 -> m2_288  [key=0, style=solid];
m2_287 -> m2_65  [key=2, style=dotted];
m2_287 -> m2_291  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_288 -> m2_289  [key=0, style=solid];
m2_288 -> m2_85  [key=2, style=dotted];
m2_289 -> m2_290  [key=0, style=solid];
m2_289 -> m2_15  [key=2, style=dotted];
m2_289 -> m2_114  [key=2, style=dotted];
m2_289 -> m2_294  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_290 -> m2_284  [key=0, style=bold, color=blue];
m2_297 -> m2_298  [key=0, style=solid];
m2_298 -> m2_299  [key=0, style=solid];
m2_298 -> m2_83  [key=2, style=dotted];
m2_299 -> m2_300  [key=0, style=solid];
m2_299 -> m2_84  [key=2, style=dotted];
m2_299 -> m2_301  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_300 -> m2_301  [key=0, style=solid];
m2_300 -> m2_65  [key=2, style=dotted];
m2_300 -> m2_306  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_301 -> m2_302  [key=0, style=solid];
m2_301 -> m2_85  [key=2, style=dotted];
m2_302 -> m2_303  [key=0, style=solid];
m2_302 -> m2_15  [key=2, style=dotted];
m2_302 -> m2_114  [key=2, style=dotted];
m2_302 -> m2_311  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_303 -> m2_304  [key=0, style=solid];
m2_303 -> m2_15  [key=2, style=dotted];
m2_303 -> m2_114  [key=2, style=dotted];
m2_303 -> m2_314  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_304 -> m2_305  [key=0, style=solid];
m2_304 -> m2_15  [key=2, style=dotted];
m2_304 -> m2_114  [key=2, style=dotted];
m2_304 -> m2_317  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_305 -> m2_297  [key=0, style=bold, color=blue];
m2_92 -> m2_93  [key=0, style=solid, color=red];
m2_93 -> m2_94  [key=0, style=solid, color=red];
m2_93 -> m2_83  [key=2, style=dotted, color=red];
m2_94 -> m2_95  [key=0, style=solid, color=red];
m2_94 -> m2_84  [key=2, style=dotted, color=red];
m2_94 -> m2_96  [key=1, style=dashed, color=red, label=context];
m2_95 -> m2_96  [key=0, style=solid, color=red];
m2_95 -> m2_65  [key=2, style=dotted, color=red];
m2_95 -> m2_102  [key=1, style=dashed, color=red, label="lambda expression"];
m2_96 -> m2_97  [key=0, style=solid];
m2_96 -> m2_85  [key=2, style=dotted];
m2_96 -> m2_98  [key=1, style=dashed, color=darkseagreen4, label=resolvedRoute];
m2_96 -> m2_99  [key=1, style=dashed, color=darkseagreen4, label=resolvedRoute];
m2_97 -> m2_98  [key=0, style=solid];
m2_97 -> m2_86  [key=2, style=dotted];
m2_98 -> m2_99  [key=0, style=solid];
m2_98 -> m2_86  [key=2, style=dotted];
m2_99 -> m2_100  [key=0, style=solid];
m2_99 -> m2_101  [key=2, style=dotted];
m2_100 -> m2_92  [key=0, style=bold, color=blue];
m2_362 -> m2_363  [key=0, style=solid];
m2_363 -> m2_364  [key=0, style=solid];
m2_363 -> m2_83  [key=2, style=dotted];
m2_364 -> m2_365  [key=0, style=solid];
m2_364 -> m2_84  [key=2, style=dotted];
m2_364 -> m2_366  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_364 -> m2_367  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_364 -> m2_373  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_365 -> m2_366  [key=0, style=solid];
m2_365 -> m2_65  [key=2, style=dotted];
m2_365 -> m2_369  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_366 -> m2_367  [key=0, style=solid];
m2_366 -> m2_85  [key=2, style=dotted];
m2_367 -> m2_368  [key=0, style=solid];
m2_367 -> m2_15  [key=2, style=dotted];
m2_367 -> m2_114  [key=2, style=dotted];
m2_367 -> m2_372  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_368 -> m2_362  [key=0, style=bold, color=blue];
m2_395 -> m2_396  [key=0, style=solid];
m2_396 -> m2_397  [key=0, style=solid];
m2_396 -> m2_83  [key=2, style=dotted];
m2_396 -> m2_401  [key=1, style=dashed, color=darkseagreen4, label=request];
m2_397 -> m2_398  [key=0, style=solid];
m2_397 -> m2_84  [key=2, style=dotted];
m2_397 -> m2_399  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_401 -> m2_402  [key=0, style=solid];
m2_401 -> m2_87  [key=2, style=dotted];
m2_398 -> m2_399  [key=0, style=solid];
m2_398 -> m2_65  [key=2, style=dotted];
m2_398 -> m2_403  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_399 -> m2_400  [key=0, style=solid];
m2_399 -> m2_85  [key=2, style=dotted];
m2_399 -> m2_401  [key=1, style=dashed, color=darkseagreen4, label=resolvedRoute];
m2_400 -> m2_401  [key=0, style=solid];
m2_400 -> m2_86  [key=2, style=dotted];
m2_402 -> m2_395  [key=0, style=bold, color=blue];
m2_65 -> m2_66  [key=0, style=solid, color=red];
m2_66 -> m2_67  [key=0, style=solid, color=red];
m2_66 -> m2_69  [key=2, style=dotted, color=red];
m2_67 -> m2_68  [key=0, style=solid];
m2_67 -> m2_70  [key=2, style=dotted];
m2_68 -> m2_65  [key=0, style=bold, color=blue];
m2_406 -> m2_407  [key=0, style=solid];
m2_407 -> m2_408  [key=0, style=solid];
m2_407 -> m2_83  [key=2, style=dotted];
m2_407 -> m2_412  [key=1, style=dashed, color=darkseagreen4, label=request];
m2_408 -> m2_409  [key=0, style=solid];
m2_408 -> m2_84  [key=2, style=dotted];
m2_408 -> m2_410  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_412 -> m2_413  [key=0, style=solid];
m2_412 -> m2_87  [key=2, style=dotted];
m2_409 -> m2_410  [key=0, style=solid];
m2_409 -> m2_70  [key=2, style=dotted];
m2_410 -> m2_411  [key=0, style=solid];
m2_410 -> m2_85  [key=2, style=dotted];
m2_410 -> m2_412  [key=1, style=dashed, color=darkseagreen4, label=resolvedRoute];
m2_411 -> m2_412  [key=0, style=solid];
m2_411 -> m2_342  [key=2, style=dotted];
m2_413 -> m2_406  [key=0, style=bold, color=blue];
m2_74 -> m2_75  [key=0, style=solid, color=red];
m2_75 -> m2_76  [key=0, style=solid, color=red];
m2_75 -> m2_83  [key=2, style=dotted, color=red];
m2_76 -> m2_77  [key=0, style=solid, color=red];
m2_76 -> m2_84  [key=2, style=dotted];
m2_76 -> m2_78  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_77 -> m2_78  [key=0, style=solid, color=red];
m2_77 -> m2_65  [key=2, style=dotted, color=red];
m2_77 -> m2_88  [key=1, style=dashed, color=red, label="lambda expression"];
m2_78 -> m2_79  [key=0, style=solid];
m2_78 -> m2_85  [key=2, style=dotted];
m2_78 -> m2_80  [key=1, style=dashed, color=darkseagreen4, label=resolvedRoute];
m2_78 -> m2_81  [key=1, style=dashed, color=red, label=resolvedRoute];
m2_79 -> m2_80  [key=0, style=solid];
m2_79 -> m2_86  [key=2, style=dotted];
m2_80 -> m2_81  [key=0, style=solid, color=red];
m2_80 -> m2_86  [key=2, style=dotted];
m2_81 -> m2_82  [key=0, style=solid, color=red];
m2_81 -> m2_87  [key=2, style=dotted, color=red];
m2_82 -> m2_74  [key=0, style=bold, color=blue];
m2_132 -> m2_133  [key=0, style=solid];
m2_133 -> m2_134  [key=0, style=solid];
m2_133 -> m2_83  [key=2, style=dotted];
m2_133 -> m2_136  [key=1, style=dashed, color=darkseagreen4, label=request];
m2_133 -> m2_146  [key=1, style=dashed, color=darkseagreen4, label=request];
m2_133 -> m2_137  [key=1, style=dashed, color=darkseagreen4, label=request];
m2_133 -> m2_153  [key=1, style=dashed, color=darkseagreen4, label=request];
m2_134 -> m2_135  [key=0, style=solid];
m2_134 -> m2_84  [key=2, style=dotted];
m2_134 -> m2_138  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_134 -> m2_139  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_134 -> m2_159  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_136 -> m2_137  [key=0, style=solid];
m2_136 -> m2_15  [key=2, style=dotted];
m2_136 -> m2_50  [key=2, style=dotted];
m2_136 -> m2_17  [key=2, style=dotted];
m2_136 -> m2_145  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_136 -> m2_150  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator"];
m2_137 -> m2_138  [key=0, style=solid];
m2_137 -> m2_15  [key=2, style=dotted];
m2_137 -> m2_50  [key=2, style=dotted];
m2_137 -> m2_17  [key=2, style=dotted];
m2_137 -> m2_152  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_137 -> m2_156  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator"];
m2_135 -> m2_136  [key=0, style=solid];
m2_135 -> m2_65  [key=2, style=dotted];
m2_135 -> m2_141  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_135 -> m2_138  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m2_138 -> m2_139  [key=0, style=solid];
m2_138 -> m2_85  [key=2, style=dotted];
m2_139 -> m2_140  [key=0, style=solid];
m2_139 -> m2_15  [key=2, style=dotted];
m2_139 -> m2_114  [key=2, style=dotted];
m2_139 -> m2_158  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_140 -> m2_132  [key=0, style=bold, color=blue];
m2_320 -> m2_321  [key=0, style=solid];
m2_321 -> m2_322  [key=0, style=solid];
m2_321 -> m2_83  [key=2, style=dotted];
m2_322 -> m2_323  [key=0, style=solid];
m2_322 -> m2_84  [key=2, style=dotted];
m2_322 -> m2_324  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_323 -> m2_324  [key=0, style=solid];
m2_323 -> m2_65  [key=2, style=dotted];
m2_323 -> m2_330  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_324 -> m2_325  [key=0, style=solid];
m2_324 -> m2_85  [key=2, style=dotted];
m2_324 -> m2_326  [key=1, style=dashed, color=darkseagreen4, label=resolvedRoute];
m2_324 -> m2_327  [key=1, style=dashed, color=darkseagreen4, label=resolvedRoute];
m2_325 -> m2_326  [key=0, style=solid];
m2_325 -> m2_329  [key=2, style=dotted];
m2_326 -> m2_327  [key=0, style=solid];
m2_326 -> m2_86  [key=2, style=dotted];
m2_327 -> m2_328  [key=0, style=solid];
m2_327 -> m2_86  [key=2, style=dotted];
m2_328 -> m2_320  [key=0, style=bold, color=blue];
m2_491 -> m2_492  [key=0, style=solid];
m2_492 -> m2_493  [key=0, style=solid];
m2_492 -> m2_83  [key=2, style=dotted];
m2_493 -> m2_494  [key=0, style=solid];
m2_493 -> m2_84  [key=2, style=dotted];
m2_493 -> m2_495  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_494 -> m2_495  [key=0, style=solid];
m2_494 -> m2_65  [key=2, style=dotted];
m2_494 -> m2_499  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_495 -> m2_496  [key=0, style=solid];
m2_495 -> m2_85  [key=2, style=dotted];
m2_495 -> m2_497  [key=1, style=dashed, color=darkseagreen4, label=route];
m2_496 -> m2_497  [key=0, style=solid];
m2_496 -> m2_329  [key=2, style=dotted];
m2_497 -> m2_498  [key=0, style=solid];
m2_497 -> m2_86  [key=2, style=dotted];
m2_498 -> m2_491  [key=0, style=bold, color=blue];
m2_517 -> m2_518  [key=0, style=solid];
m2_518 -> m2_519  [key=0, style=solid];
m2_518 -> m2_513  [key=2, style=dotted];
m2_518 -> m2_520  [key=1, style=dashed, color=darkseagreen4, label=moduleCatalog];
m2_519 -> m2_520  [key=0, style=solid];
m2_519 -> m2_514  [key=2, style=dotted];
m2_519 -> m2_515  [key=2, style=dotted];
m2_519 -> m2_14  [key=2, style=dotted];
m2_520 -> m2_521  [key=0, style=solid];
m2_520 -> m2_73  [key=2, style=dotted];
m2_520 -> m2_523  [key=1, style=dashed, color=darkseagreen4, label=specificResolver];
m2_521 -> m2_522  [key=0, style=solid];
m2_521 -> m2_83  [key=2, style=dotted];
m2_523 -> m2_524  [key=0, style=solid];
m2_523 -> m2_85  [key=2, style=dotted];
m2_522 -> m2_523  [key=0, style=solid];
m2_522 -> m2_84  [key=2, style=dotted];
m2_524 -> m2_525  [key=0, style=solid];
m2_524 -> m2_516  [key=2, style=dotted];
m2_525 -> m2_517  [key=0, style=bold, color=blue];
m2_414 -> m2_415  [key=0, style=solid];
m2_415 -> m2_416  [key=0, style=solid];
m2_415 -> m2_83  [key=2, style=dotted];
m2_415 -> m2_421  [key=1, style=dashed, color=darkseagreen4, label=request];
m2_416 -> m2_417  [key=0, style=solid];
m2_416 -> m2_84  [key=2, style=dotted];
m2_416 -> m2_419  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_421 -> m2_422  [key=0, style=solid];
m2_421 -> m2_87  [key=2, style=dotted];
m2_417 -> m2_418  [key=0, style=solid];
m2_417 -> m2_65  [key=2, style=dotted];
m2_417 -> m2_423  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_417 -> m2_419  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m2_419 -> m2_420  [key=0, style=solid];
m2_419 -> m2_85  [key=2, style=dotted];
m2_419 -> m2_421  [key=1, style=dashed, color=darkseagreen4, label=resolvedRoute];
m2_418 -> m2_419  [key=0, style=solid];
m2_418 -> m2_15  [key=2, style=dotted];
m2_418 -> m2_50  [key=2, style=dotted];
m2_418 -> m2_17  [key=2, style=dotted];
m2_418 -> m2_426  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_418 -> m2_430  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator"];
m2_420 -> m2_421  [key=0, style=solid];
m2_420 -> m2_342  [key=2, style=dotted];
m2_422 -> m2_414  [key=0, style=bold, color=blue];
m2_432 -> m2_433  [key=0, style=solid];
m2_433 -> m2_434  [key=0, style=solid];
m2_433 -> m2_83  [key=2, style=dotted];
m2_434 -> m2_435  [key=0, style=solid];
m2_434 -> m2_84  [key=2, style=dotted];
m2_434 -> m2_436  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_435 -> m2_436  [key=0, style=solid];
m2_435 -> m2_65  [key=2, style=dotted];
m2_435 -> m2_441  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_436 -> m2_437  [key=0, style=solid];
m2_436 -> m2_85  [key=2, style=dotted];
m2_436 -> m2_438  [key=1, style=dashed, color=darkseagreen4, label=resolvedRoute];
m2_436 -> m2_439  [key=1, style=dashed, color=darkseagreen4, label=resolvedRoute];
m2_437 -> m2_438  [key=0, style=solid];
m2_437 -> m2_329  [key=2, style=dotted];
m2_438 -> m2_439  [key=0, style=solid];
m2_438 -> m2_86  [key=2, style=dotted];
m2_439 -> m2_440  [key=0, style=solid];
m2_439 -> m2_86  [key=2, style=dotted];
m2_440 -> m2_432  [key=0, style=bold, color=blue];
m2_376 -> m2_377  [key=0, style=solid];
m2_377 -> m2_378  [key=0, style=solid];
m2_377 -> m2_83  [key=2, style=dotted];
m2_378 -> m2_379  [key=0, style=solid];
m2_378 -> m2_84  [key=2, style=dotted];
m2_378 -> m2_382  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_379 -> m2_380  [key=0, style=solid];
m2_379 -> m2_65  [key=2, style=dotted];
m2_379 -> m2_385  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_379 -> m2_382  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m2_382 -> m2_383  [key=0, style=solid];
m2_382 -> m2_85  [key=2, style=dotted];
m2_380 -> m2_381  [key=0, style=solid];
m2_380 -> m2_18  [key=2, style=dotted];
m2_380 -> m2_389  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModuleConfigurator"];
m2_381 -> m2_382  [key=0, style=solid];
m2_381 -> m2_15  [key=2, style=dotted];
m2_381 -> m2_17  [key=2, style=dotted];
m2_381 -> m2_392  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_383 -> m2_384  [key=0, style=solid];
m2_383 -> m2_87  [key=2, style=dotted];
m2_384 -> m2_376  [key=0, style=bold, color=blue];
m2_558 -> m2_1  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_2  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_20  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_3  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_4  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_27  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_6  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_34  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_7  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_38  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_41  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_8  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_9  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_44  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_10  [key=1, style=dashed, color=red, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_11  [key=1, style=dashed, color=red, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_12  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_59  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_67  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_71  [key=1, style=dashed, color=red, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_77  [key=1, style=dashed, color=red, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_95  [key=1, style=dashed, color=red, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_99  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_108  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_109  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_120  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_110  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_123  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_112  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_129  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_135  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_136  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_146  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_137  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_153  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_139  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_159  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_164  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_165  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_180  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_166  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_186  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_167  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_192  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_169  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_198  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_203  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_204  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_218  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_205  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_221  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_206  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_227  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_207  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_233  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_209  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_239  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_244  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_245  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_256  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_246  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_262  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_248  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_268  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_273  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_275  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_282  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_287  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_289  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_295  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_300  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_302  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_312  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_303  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_315  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_304  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_318  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_323  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_336  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_349  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_365  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_367  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_373  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_379  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_381  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_393  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_398  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_409  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_417  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_418  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_427  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_435  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_447  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_458  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_469  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_481  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_494  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_507  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_520  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_529  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_558 -> m2_542  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m2_559 -> m2_52  [key=1, style=dashed, color=darkseagreen4, label="?"];
m2_560 -> m2_123  [key=1, style=dashed, color=darkseagreen4, label=request];
m2_561 -> m2_129  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_562 -> m2_146  [key=1, style=dashed, color=darkseagreen4, label=request];
m2_562 -> m2_153  [key=1, style=dashed, color=darkseagreen4, label=request];
m2_563 -> m2_159  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_564 -> m2_180  [key=1, style=dashed, color=darkseagreen4, label=request];
m2_564 -> m2_186  [key=1, style=dashed, color=darkseagreen4, label=request];
m2_564 -> m2_192  [key=1, style=dashed, color=darkseagreen4, label=request];
m2_565 -> m2_198  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_566 -> m2_221  [key=1, style=dashed, color=darkseagreen4, label=request];
m2_566 -> m2_227  [key=1, style=dashed, color=darkseagreen4, label=request];
m2_566 -> m2_233  [key=1, style=dashed, color=darkseagreen4, label=request];
m2_567 -> m2_239  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_568 -> m2_256  [key=1, style=dashed, color=darkseagreen4, label=request];
m2_568 -> m2_262  [key=1, style=dashed, color=darkseagreen4, label=request];
m2_569 -> m2_268  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_570 -> m2_282  [key=1, style=dashed, color=darkseagreen4, label=request];
m2_571 -> m2_295  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_572 -> m2_373  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_573 -> m2_552  [key=1, style=dashed, color=darkseagreen4, label=moduleCatalog];
m2_573 -> m2_556  [key=1, style=dashed, color=darkseagreen4, label=moduleCatalog];
m3_0 -> m3_1  [key=0, style=solid];
m3_0 -> m3_2  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m3_0 -> m3_3  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_6  [key=2, style=dotted];
m3_1 -> m3_3  [key=1, style=dashed, color=darkseagreen4, label=modelValidators];
m3_1 -> m3_4  [key=1, style=dashed, color=darkseagreen4, label=modelValidators];
m3_2 -> m3_3  [key=0, style=solid];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_7  [key=2, style=dotted];
m3_4 -> m3_5  [key=0, style=solid];
m3_5 -> m3_0  [key=0, style=bold, color=blue];
m3_40 -> m3_41  [key=0, style=solid];
m3_19 -> m3_20  [key=0, style=solid];
m3_19 -> m3_21  [key=2, style=dotted];
m3_18 -> m3_19  [key=0, style=solid];
m3_22 -> m3_23  [key=0, style=solid];
m3_25 -> m3_26  [key=0, style=solid];
m3_20 -> m3_18  [key=0, style=bold, color=blue];
m3_23 -> m3_24  [key=0, style=solid];
m3_24 -> m3_22  [key=0, style=bold, color=blue];
m3_26 -> m3_27  [key=0, style=solid];
m3_27 -> m3_25  [key=0, style=bold, color=blue];
m3_34 -> m3_35  [key=0, style=solid];
m3_37 -> m3_38  [key=0, style=solid];
m3_35 -> m3_36  [key=0, style=solid];
m3_36 -> m3_34  [key=0, style=bold, color=blue];
m3_38 -> m3_39  [key=0, style=solid];
m3_38 -> m3_38  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IList<Nancy.Validation.ModelValidationRule>>"];
m3_39 -> m3_37  [key=0, style=bold, color=blue];
m3_41 -> m3_42  [key=0, style=solid];
m3_41 -> m3_41  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IList<Nancy.Validation.ModelValidationRule>>"];
m3_42 -> m3_40  [key=0, style=bold, color=blue];
m3_7 -> m3_28  [key=0, style=solid];
m3_7 -> m3_29  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m3_7 -> m3_1  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<Nancy.Validation.IModelValidator> validators"];
m3_7 -> m3_0  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type modelType"];
m3_28 -> m3_29  [key=0, style=solid];
m3_28 -> m3_31  [key=2, style=dotted];
m3_28 -> m3_32  [key=2, style=dotted];
m3_28 -> m3_34  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_28 -> m3_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_28 -> m3_40  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_29 -> m3_30  [key=0, style=solid];
m3_29 -> m3_33  [key=2, style=dotted];
m3_30 -> m3_7  [key=0, style=bold, color=blue];
m3_8 -> m3_9  [key=0, style=solid, color=red];
m3_8 -> m3_19  [key=1, style=dashed, color=darkseagreen4, label=object];
m3_9 -> m3_10  [key=0, style=solid, color=red];
m3_9 -> m3_12  [key=2, style=dotted, color=red];
m3_9 -> m3_13  [key=2, style=dotted, color=red];
m3_9 -> m3_14  [key=2, style=dotted, color=red];
m3_9 -> m3_15  [key=2, style=dotted, color=red];
m3_9 -> m3_18  [key=1, style=dashed, color=red, label="lambda expression"];
m3_9 -> m3_22  [key=1, style=dashed, color=red, label="lambda expression"];
m3_9 -> m3_25  [key=1, style=dashed, color=red, label="lambda expression"];
m3_10 -> m3_11  [key=0, style=solid];
m3_10 -> m3_16  [key=2, style=dotted];
m3_10 -> m3_17  [key=2, style=dotted];
m3_11 -> m3_8  [key=0, style=bold, color=blue];
m3_43 -> m3_2  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Validation.CompositeValidator"];
m3_43 -> m3_3  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Validation.CompositeValidator"];
m3_43 -> m3_4  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Validation.CompositeValidator"];
m3_43 -> m3_9  [key=1, style=dashed, color=red, label="Nancy.Validation.CompositeValidator"];
m3_44 -> m3_19  [key=1, style=dashed, color=darkseagreen4, label=object];
m3_45 -> m3_19  [key=1, style=dashed, color=darkseagreen4, label="Nancy.NancyContext"];
m4_469 -> m4_470  [key=0, style=solid];
m4_470 -> m4_471  [key=0, style=solid];
m4_470 -> m4_463  [key=2, style=dotted];
m4_471 -> m4_469  [key=0, style=bold, color=blue];
m4_303 -> m4_304  [key=0, style=solid];
m4_304 -> m4_305  [key=0, style=solid];
m4_304 -> m4_7  [key=2, style=dotted];
m4_304 -> m4_309  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m4_304 -> m4_310  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m4_305 -> m4_306  [key=0, style=solid];
m4_305 -> m4_8  [key=2, style=dotted];
m4_305 -> m4_319  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_306 -> m4_307  [key=0, style=solid];
m4_306 -> m4_9  [key=2, style=dotted];
m4_307 -> m4_303  [key=0, style=bold, color=blue];
m4_488 -> m4_494  [key=0, style=solid];
m4_494 -> m4_495  [key=0, style=solid];
m4_494 -> m4_496  [key=2, style=dotted];
m4_495 -> m4_488  [key=0, style=bold, color=blue];
m4_224 -> m4_451  [key=0, style=solid];
m4_224 -> m4_455  [key=1, style=dashed, color=darkseagreen4, label="System.Action<Nancy.Responses.Negotiation.Negotiator>"];
m4_224 -> m4_456  [key=1, style=dashed, color=darkseagreen4, label="System.Action<Nancy.Responses.Negotiation.Negotiator>"];
m4_224 -> m4_213  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<Nancy.Responses.Negotiation.Negotiator> action"];
m4_224 -> m4_232  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<Nancy.Responses.Negotiation.Negotiator> action"];
m4_224 -> m4_252  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<Nancy.Responses.Negotiation.Negotiator> action"];
m4_224 -> m4_304  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<Nancy.Responses.Negotiation.Negotiator> action"];
m4_224 -> m4_323  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<Nancy.Responses.Negotiation.Negotiator> action"];
m4_224 -> m4_343  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<Nancy.Responses.Negotiation.Negotiator> action"];
m4_224 -> m4_365  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<Nancy.Responses.Negotiation.Negotiator> action"];
m4_224 -> m4_392  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<Nancy.Responses.Negotiation.Negotiator> action"];
m4_451 -> m4_452  [key=0, style=solid];
m4_451 -> m4_454  [key=1, style=dashed, color=darkseagreen4, label="Nancy.NancyModule"];
m4_451 -> m4_451  [key=3, color=darkorchid, style=bold, label="method methodReturn dynamic "];
m4_452 -> m4_224  [key=0, style=bold, color=blue];
m4_460 -> m4_461  [key=0, style=solid];
m4_461 -> m4_462  [key=0, style=solid];
m4_461 -> m4_463  [key=2, style=dotted];
m4_462 -> m4_460  [key=0, style=bold, color=blue];
m4_160 -> m4_161  [key=0, style=solid];
m4_161 -> m4_162  [key=0, style=solid];
m4_161 -> m4_7  [key=2, style=dotted];
m4_161 -> m4_168  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m4_161 -> m4_169  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m4_161 -> m4_161  [key=3, color=darkorchid, style=bold, label="method methodReturn dynamic "];
m4_162 -> m4_163  [key=0, style=solid];
m4_162 -> m4_8  [key=2, style=dotted];
m4_162 -> m4_182  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_162 -> m4_164  [key=1, style=dashed, color=darkseagreen4, label=response];
m4_163 -> m4_164  [key=0, style=solid];
m4_163 -> m4_9  [key=2, style=dotted];
m4_164 -> m4_165  [key=0, style=solid];
m4_164 -> m4_27  [key=2, style=dotted];
m4_164 -> m4_166  [key=2, style=dotted];
m4_164 -> m4_84  [key=2, style=dotted];
m4_165 -> m4_160  [key=0, style=bold, color=blue];
m4_189 -> m4_190  [key=0, style=solid];
m4_190 -> m4_191  [key=0, style=solid];
m4_190 -> m4_7  [key=2, style=dotted];
m4_190 -> m4_196  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m4_190 -> m4_197  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m4_190 -> m4_190  [key=3, color=darkorchid, style=bold, label="method methodReturn dynamic "];
m4_191 -> m4_192  [key=0, style=solid];
m4_191 -> m4_8  [key=2, style=dotted];
m4_191 -> m4_207  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_191 -> m4_193  [key=1, style=dashed, color=darkseagreen4, label=response];
m4_192 -> m4_193  [key=0, style=solid];
m4_192 -> m4_9  [key=2, style=dotted];
m4_193 -> m4_194  [key=0, style=solid];
m4_193 -> m4_27  [key=2, style=dotted];
m4_193 -> m4_166  [key=2, style=dotted];
m4_193 -> m4_84  [key=2, style=dotted];
m4_194 -> m4_189  [key=0, style=bold, color=blue];
m4_289 -> m4_290  [key=0, style=solid];
m4_290 -> m4_291  [key=0, style=solid];
m4_290 -> m4_7  [key=2, style=dotted];
m4_290 -> m4_297  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m4_290 -> m4_298  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m4_291 -> m4_292  [key=0, style=solid];
m4_291 -> m4_8  [key=2, style=dotted];
m4_291 -> m4_293  [key=1, style=dashed, color=darkseagreen4, label=response];
m4_291 -> m4_294  [key=1, style=dashed, color=darkseagreen4, label=response];
m4_292 -> m4_293  [key=0, style=solid];
m4_292 -> m4_166  [key=2, style=dotted];
m4_292 -> m4_84  [key=2, style=dotted];
m4_293 -> m4_294  [key=0, style=solid];
m4_293 -> m4_166  [key=2, style=dotted];
m4_293 -> m4_84  [key=2, style=dotted];
m4_294 -> m4_295  [key=0, style=solid];
m4_294 -> m4_166  [key=2, style=dotted];
m4_294 -> m4_84  [key=2, style=dotted];
m4_295 -> m4_289  [key=0, style=bold, color=blue];
m4_231 -> m4_232  [key=0, style=solid];
m4_232 -> m4_233  [key=0, style=solid];
m4_232 -> m4_7  [key=2, style=dotted];
m4_232 -> m4_237  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m4_232 -> m4_238  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m4_233 -> m4_234  [key=0, style=solid];
m4_233 -> m4_8  [key=2, style=dotted];
m4_233 -> m4_248  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_234 -> m4_235  [key=0, style=solid];
m4_234 -> m4_27  [key=2, style=dotted];
m4_234 -> m4_9  [key=2, style=dotted];
m4_235 -> m4_231  [key=0, style=bold, color=blue];
m4_391 -> m4_392  [key=0, style=solid];
m4_392 -> m4_393  [key=0, style=solid];
m4_392 -> m4_7  [key=2, style=dotted];
m4_392 -> m4_400  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m4_392 -> m4_401  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m4_393 -> m4_394  [key=0, style=solid];
m4_393 -> m4_8  [key=2, style=dotted];
m4_393 -> m4_409  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_394 -> m4_395  [key=0, style=solid];
m4_394 -> m4_27  [key=2, style=dotted];
m4_395 -> m4_396  [key=0, style=solid];
m4_395 -> m4_397  [key=2, style=dotted];
m4_395 -> m4_398  [key=2, style=dotted];
m4_395 -> m4_84  [key=2, style=dotted];
m4_396 -> m4_391  [key=0, style=bold, color=blue];
m4_472 -> m4_473  [key=0, style=solid];
m4_473 -> m4_474  [key=0, style=solid];
m4_474 -> m4_472  [key=0, style=bold, color=blue];
m4_481 -> m4_482  [key=0, style=solid];
m4_482 -> m4_483  [key=0, style=solid];
m4_482 -> m4_488  [key=3, color=darkorchid, style=bold, label="method methodReturn dynamic "];
m4_483 -> m4_484  [key=0, style=solid];
m4_484 -> m4_481  [key=0, style=bold, color=blue];
m4_439 -> m4_440  [key=0, style=solid];
m4_440 -> m4_441  [key=0, style=solid];
m4_440 -> m4_7  [key=2, style=dotted];
m4_440 -> m4_445  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m4_441 -> m4_442  [key=0, style=solid];
m4_441 -> m4_8  [key=2, style=dotted];
m4_441 -> m4_447  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_442 -> m4_443  [key=0, style=solid];
m4_442 -> m4_9  [key=2, style=dotted];
m4_443 -> m4_439  [key=0, style=bold, color=blue];
m4_251 -> m4_252  [key=0, style=solid];
m4_252 -> m4_253  [key=0, style=solid];
m4_252 -> m4_7  [key=2, style=dotted];
m4_252 -> m4_257  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m4_252 -> m4_258  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m4_253 -> m4_254  [key=0, style=solid];
m4_253 -> m4_8  [key=2, style=dotted];
m4_253 -> m4_269  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_254 -> m4_255  [key=0, style=solid];
m4_254 -> m4_27  [key=2, style=dotted];
m4_254 -> m4_9  [key=2, style=dotted];
m4_255 -> m4_251  [key=0, style=bold, color=blue];
m4_143 -> m4_144  [key=0, style=solid];
m4_144 -> m4_145  [key=0, style=solid];
m4_144 -> m4_7  [key=2, style=dotted];
m4_144 -> m4_149  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m4_144 -> m4_150  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m4_144 -> m4_144  [key=3, color=darkorchid, style=bold, label="method methodReturn dynamic "];
m4_145 -> m4_146  [key=0, style=solid];
m4_145 -> m4_8  [key=2, style=dotted];
m4_146 -> m4_147  [key=0, style=solid];
m4_146 -> m4_9  [key=2, style=dotted];
m4_147 -> m4_143  [key=0, style=bold, color=blue];
m4_364 -> m4_365  [key=0, style=solid];
m4_365 -> m4_366  [key=0, style=solid];
m4_365 -> m4_7  [key=2, style=dotted];
m4_365 -> m4_375  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m4_365 -> m4_376  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m4_365 -> m4_386  [key=1, style=dashed, color=darkseagreen4, label=browser];
m4_366 -> m4_367  [key=0, style=solid];
m4_366 -> m4_370  [key=2, style=dotted];
m4_366 -> m4_385  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_366 -> m4_368  [key=1, style=dashed, color=darkseagreen4, label=result];
m4_367 -> m4_368  [key=0, style=solid];
m4_367 -> m4_371  [key=2, style=dotted];
m4_368 -> m4_369  [key=0, style=solid];
m4_368 -> m4_372  [key=2, style=dotted];
m4_368 -> m4_373  [key=2, style=dotted];
m4_369 -> m4_364  [key=0, style=bold, color=blue];
m4_427 -> m4_428  [key=0, style=solid];
m4_428 -> m4_429  [key=0, style=solid];
m4_428 -> m4_7  [key=2, style=dotted];
m4_428 -> m4_433  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m4_428 -> m4_437  [key=1, style=dashed, color=darkseagreen4, label=browser];
m4_429 -> m4_430  [key=0, style=solid];
m4_429 -> m4_370  [key=2, style=dotted];
m4_429 -> m4_436  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_430 -> m4_431  [key=0, style=solid];
m4_430 -> m4_372  [key=2, style=dotted];
m4_430 -> m4_373  [key=2, style=dotted];
m4_430 -> m4_84  [key=2, style=dotted];
m4_431 -> m4_427  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_6  [key=2, style=dotted];
m4_1 -> m4_11  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator"];
m4_1 -> m4_18  [key=1, style=dashed, color=darkseagreen4, label=module];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_7  [key=2, style=dotted];
m4_2 -> m4_18  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m4_3 -> m4_4  [key=0, style=solid];
m4_3 -> m4_8  [key=2, style=dotted];
m4_4 -> m4_5  [key=0, style=solid];
m4_4 -> m4_9  [key=2, style=dotted];
m4_5 -> m4_0  [key=0, style=bold, color=blue];
m4_322 -> m4_323  [key=0, style=solid];
m4_323 -> m4_324  [key=0, style=solid];
m4_323 -> m4_7  [key=2, style=dotted];
m4_323 -> m4_328  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m4_323 -> m4_329  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m4_324 -> m4_325  [key=0, style=solid];
m4_324 -> m4_8  [key=2, style=dotted];
m4_324 -> m4_338  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_325 -> m4_326  [key=0, style=solid];
m4_325 -> m4_9  [key=2, style=dotted];
m4_326 -> m4_322  [key=0, style=bold, color=blue];
m4_52 -> m4_53  [key=0, style=solid];
m4_53 -> m4_54  [key=0, style=solid];
m4_53 -> m4_6  [key=2, style=dotted];
m4_53 -> m4_59  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator"];
m4_53 -> m4_74  [key=1, style=dashed, color=darkseagreen4, label=module];
m4_53 -> m4_53  [key=3, color=darkorchid, style=bold, label="method methodReturn dynamic "];
m4_54 -> m4_55  [key=0, style=solid];
m4_54 -> m4_7  [key=2, style=dotted];
m4_54 -> m4_74  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m4_55 -> m4_56  [key=0, style=solid];
m4_55 -> m4_8  [key=2, style=dotted];
m4_56 -> m4_57  [key=0, style=solid];
m4_56 -> m4_27  [key=2, style=dotted];
m4_56 -> m4_9  [key=2, style=dotted];
m4_57 -> m4_52  [key=0, style=bold, color=blue];
m4_212 -> m4_213  [key=0, style=solid];
m4_213 -> m4_214  [key=0, style=solid];
m4_213 -> m4_7  [key=2, style=dotted];
m4_213 -> m4_218  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m4_213 -> m4_219  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m4_214 -> m4_215  [key=0, style=solid];
m4_214 -> m4_8  [key=2, style=dotted];
m4_214 -> m4_228  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_215 -> m4_216  [key=0, style=solid];
m4_215 -> m4_9  [key=2, style=dotted];
m4_216 -> m4_212  [key=0, style=bold, color=blue];
m4_37 -> m4_38  [key=0, style=solid];
m4_38 -> m4_39  [key=0, style=solid];
m4_38 -> m4_6  [key=2, style=dotted];
m4_38 -> m4_44  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator"];
m4_38 -> m4_50  [key=1, style=dashed, color=darkseagreen4, label=module];
m4_39 -> m4_40  [key=0, style=solid];
m4_39 -> m4_7  [key=2, style=dotted];
m4_39 -> m4_50  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m4_40 -> m4_41  [key=0, style=solid];
m4_40 -> m4_8  [key=2, style=dotted];
m4_41 -> m4_42  [key=0, style=solid];
m4_41 -> m4_9  [key=2, style=dotted];
m4_42 -> m4_37  [key=0, style=bold, color=blue];
m4_489 -> m4_490  [key=0, style=solid];
m4_11 -> m4_12  [key=0, style=solid];
m4_11 -> m4_13  [key=2, style=dotted];
m4_11 -> m4_14  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_18 -> m4_19  [key=0, style=solid];
m4_18 -> m4_20  [key=2, style=dotted];
m4_10 -> m4_11  [key=0, style=solid];
m4_12 -> m4_10  [key=0, style=bold, color=blue];
m4_14 -> m4_15  [key=0, style=solid];
m4_15 -> m4_16  [key=0, style=solid];
m4_16 -> m4_14  [key=0, style=bold, color=blue];
m4_17 -> m4_18  [key=0, style=solid];
m4_19 -> m4_17  [key=0, style=bold, color=blue];
m4_29 -> m4_30  [key=0, style=solid];
m4_29 -> m4_13  [key=2, style=dotted];
m4_29 -> m4_31  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_35 -> m4_36  [key=0, style=solid];
m4_35 -> m4_20  [key=2, style=dotted];
m4_28 -> m4_29  [key=0, style=solid];
m4_30 -> m4_28  [key=0, style=bold, color=blue];
m4_31 -> m4_32  [key=0, style=solid];
m4_32 -> m4_33  [key=0, style=solid];
m4_33 -> m4_31  [key=0, style=bold, color=blue];
m4_34 -> m4_35  [key=0, style=solid];
m4_36 -> m4_34  [key=0, style=bold, color=blue];
m4_44 -> m4_45  [key=0, style=solid];
m4_44 -> m4_13  [key=2, style=dotted];
m4_44 -> m4_46  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_50 -> m4_51  [key=0, style=solid];
m4_50 -> m4_20  [key=2, style=dotted];
m4_43 -> m4_44  [key=0, style=solid];
m4_45 -> m4_43  [key=0, style=bold, color=blue];
m4_46 -> m4_47  [key=0, style=solid];
m4_47 -> m4_48  [key=0, style=solid];
m4_48 -> m4_46  [key=0, style=bold, color=blue];
m4_49 -> m4_50  [key=0, style=solid];
m4_51 -> m4_49  [key=0, style=bold, color=blue];
m4_59 -> m4_60  [key=0, style=solid];
m4_59 -> m4_13  [key=2, style=dotted];
m4_59 -> m4_61  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_74 -> m4_75  [key=0, style=solid];
m4_74 -> m4_20  [key=2, style=dotted];
m4_58 -> m4_59  [key=0, style=solid];
m4_60 -> m4_58  [key=0, style=bold, color=blue];
m4_61 -> m4_62  [key=0, style=solid];
m4_62 -> m4_63  [key=0, style=solid];
m4_62 -> m4_66  [key=1, style=dashed, color=darkseagreen4, label="System.IO.Stream"];
m4_63 -> m4_64  [key=0, style=solid];
m4_66 -> m4_67  [key=0, style=solid];
m4_66 -> m4_70  [key=2, style=dotted];
m4_64 -> m4_61  [key=0, style=bold, color=blue];
m4_65 -> m4_66  [key=0, style=solid];
m4_67 -> m4_68  [key=0, style=solid];
m4_67 -> m4_71  [key=2, style=dotted];
m4_68 -> m4_69  [key=0, style=solid];
m4_68 -> m4_72  [key=2, style=dotted];
m4_69 -> m4_65  [key=0, style=bold, color=blue];
m4_73 -> m4_74  [key=0, style=solid];
m4_75 -> m4_73  [key=0, style=bold, color=blue];
m4_86 -> m4_87  [key=0, style=solid];
m4_86 -> m4_13  [key=2, style=dotted];
m4_86 -> m4_88  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_100 -> m4_101  [key=0, style=solid];
m4_100 -> m4_20  [key=2, style=dotted];
m4_99 -> m4_100  [key=0, style=solid];
m4_99 -> m4_102  [key=2, style=dotted];
m4_85 -> m4_86  [key=0, style=solid];
m4_87 -> m4_85  [key=0, style=bold, color=blue];
m4_88 -> m4_89  [key=0, style=solid];
m4_89 -> m4_90  [key=0, style=solid];
m4_89 -> m4_94  [key=2, style=dotted];
m4_89 -> m4_95  [key=2, style=dotted];
m4_90 -> m4_91  [key=0, style=solid];
m4_90 -> m4_96  [key=2, style=dotted];
m4_90 -> m4_92  [key=1, style=dashed, color=darkseagreen4, label=negotiator];
m4_91 -> m4_92  [key=0, style=solid];
m4_91 -> m4_97  [key=2, style=dotted];
m4_92 -> m4_93  [key=0, style=solid];
m4_93 -> m4_88  [key=0, style=bold, color=blue];
m4_98 -> m4_99  [key=0, style=solid];
m4_98 -> m4_100  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m4_101 -> m4_98  [key=0, style=bold, color=blue];
m4_110 -> m4_111  [key=0, style=solid];
m4_110 -> m4_13  [key=2, style=dotted];
m4_110 -> m4_112  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_121 -> m4_122  [key=0, style=solid];
m4_121 -> m4_20  [key=2, style=dotted];
m4_120 -> m4_121  [key=0, style=solid];
m4_120 -> m4_102  [key=2, style=dotted];
m4_109 -> m4_110  [key=0, style=solid];
m4_111 -> m4_109  [key=0, style=bold, color=blue];
m4_112 -> m4_113  [key=0, style=solid];
m4_113 -> m4_114  [key=0, style=solid];
m4_113 -> m4_94  [key=2, style=dotted];
m4_113 -> m4_95  [key=2, style=dotted];
m4_114 -> m4_115  [key=0, style=solid];
m4_114 -> m4_96  [key=2, style=dotted];
m4_114 -> m4_116  [key=1, style=dashed, color=darkseagreen4, label=negotiator];
m4_115 -> m4_116  [key=0, style=solid];
m4_115 -> m4_118  [key=2, style=dotted];
m4_116 -> m4_117  [key=0, style=solid];
m4_117 -> m4_112  [key=0, style=bold, color=blue];
m4_119 -> m4_120  [key=0, style=solid];
m4_119 -> m4_121  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m4_122 -> m4_119  [key=0, style=bold, color=blue];
m4_130 -> m4_131  [key=0, style=solid];
m4_130 -> m4_13  [key=2, style=dotted];
m4_130 -> m4_132  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_141 -> m4_142  [key=0, style=solid];
m4_141 -> m4_20  [key=2, style=dotted];
m4_140 -> m4_141  [key=0, style=solid];
m4_140 -> m4_102  [key=2, style=dotted];
m4_129 -> m4_130  [key=0, style=solid];
m4_131 -> m4_129  [key=0, style=bold, color=blue];
m4_132 -> m4_133  [key=0, style=solid];
m4_133 -> m4_134  [key=0, style=solid];
m4_133 -> m4_94  [key=2, style=dotted];
m4_133 -> m4_95  [key=2, style=dotted];
m4_134 -> m4_135  [key=0, style=solid];
m4_134 -> m4_96  [key=2, style=dotted];
m4_134 -> m4_136  [key=1, style=dashed, color=darkseagreen4, label=negotiator];
m4_135 -> m4_136  [key=0, style=solid];
m4_135 -> m4_138  [key=2, style=dotted];
m4_136 -> m4_137  [key=0, style=solid];
m4_137 -> m4_132  [key=0, style=bold, color=blue];
m4_139 -> m4_140  [key=0, style=solid];
m4_139 -> m4_141  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m4_142 -> m4_139  [key=0, style=bold, color=blue];
m4_149 -> m4_150  [key=0, style=solid];
m4_149 -> m4_102  [key=2, style=dotted];
m4_150 -> m4_151  [key=0, style=solid];
m4_150 -> m4_6  [key=2, style=dotted];
m4_150 -> m4_20  [key=2, style=dotted];
m4_150 -> m4_153  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator"];
m4_148 -> m4_149  [key=0, style=solid];
m4_148 -> m4_150  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m4_151 -> m4_148  [key=0, style=bold, color=blue];
m4_153 -> m4_154  [key=0, style=solid];
m4_153 -> m4_13  [key=2, style=dotted];
m4_153 -> m4_155  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_152 -> m4_153  [key=0, style=solid];
m4_154 -> m4_152  [key=0, style=bold, color=blue];
m4_155 -> m4_156  [key=0, style=solid];
m4_156 -> m4_157  [key=0, style=solid];
m4_156 -> m4_94  [key=2, style=dotted];
m4_156 -> m4_95  [key=2, style=dotted];
m4_157 -> m4_158  [key=0, style=solid];
m4_157 -> m4_96  [key=2, style=dotted];
m4_158 -> m4_159  [key=0, style=solid];
m4_159 -> m4_155  [key=0, style=bold, color=blue];
m4_168 -> m4_169  [key=0, style=solid];
m4_168 -> m4_102  [key=2, style=dotted];
m4_169 -> m4_170  [key=0, style=solid];
m4_169 -> m4_6  [key=2, style=dotted];
m4_169 -> m4_20  [key=2, style=dotted];
m4_169 -> m4_172  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator"];
m4_182 -> m4_183  [key=0, style=solid];
m4_182 -> m4_184  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.BrowserContext"];
m4_182 -> m4_185  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.BrowserContext"];
m4_167 -> m4_168  [key=0, style=solid];
m4_167 -> m4_169  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m4_170 -> m4_167  [key=0, style=bold, color=blue];
m4_172 -> m4_173  [key=0, style=solid];
m4_172 -> m4_13  [key=2, style=dotted];
m4_172 -> m4_174  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_171 -> m4_172  [key=0, style=solid];
m4_173 -> m4_171  [key=0, style=bold, color=blue];
m4_174 -> m4_175  [key=0, style=solid];
m4_175 -> m4_176  [key=0, style=solid];
m4_175 -> m4_94  [key=2, style=dotted];
m4_175 -> m4_95  [key=2, style=dotted];
m4_176 -> m4_177  [key=0, style=solid];
m4_176 -> m4_96  [key=2, style=dotted];
m4_176 -> m4_178  [key=1, style=dashed, color=darkseagreen4, label=negotiator];
m4_176 -> m4_179  [key=1, style=dashed, color=darkseagreen4, label=negotiator];
m4_177 -> m4_178  [key=0, style=solid];
m4_177 -> m4_181  [key=2, style=dotted];
m4_178 -> m4_179  [key=0, style=solid];
m4_178 -> m4_181  [key=2, style=dotted];
m4_179 -> m4_180  [key=0, style=solid];
m4_180 -> m4_174  [key=0, style=bold, color=blue];
m4_183 -> m4_184  [key=0, style=solid];
m4_183 -> m4_187  [key=2, style=dotted];
m4_184 -> m4_185  [key=0, style=solid];
m4_184 -> m4_188  [key=2, style=dotted];
m4_185 -> m4_186  [key=0, style=solid];
m4_185 -> m4_188  [key=2, style=dotted];
m4_186 -> m4_182  [key=0, style=bold, color=blue];
m4_196 -> m4_197  [key=0, style=solid];
m4_196 -> m4_102  [key=2, style=dotted];
m4_197 -> m4_198  [key=0, style=solid];
m4_197 -> m4_6  [key=2, style=dotted];
m4_197 -> m4_20  [key=2, style=dotted];
m4_197 -> m4_200  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator"];
m4_207 -> m4_208  [key=0, style=solid];
m4_207 -> m4_209  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.BrowserContext"];
m4_207 -> m4_210  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.BrowserContext"];
m4_195 -> m4_196  [key=0, style=solid];
m4_195 -> m4_197  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m4_198 -> m4_195  [key=0, style=bold, color=blue];
m4_200 -> m4_201  [key=0, style=solid];
m4_200 -> m4_13  [key=2, style=dotted];
m4_200 -> m4_202  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_199 -> m4_200  [key=0, style=solid];
m4_201 -> m4_199  [key=0, style=bold, color=blue];
m4_202 -> m4_203  [key=0, style=solid];
m4_203 -> m4_204  [key=0, style=solid];
m4_203 -> m4_94  [key=2, style=dotted];
m4_203 -> m4_95  [key=2, style=dotted];
m4_204 -> m4_205  [key=0, style=solid];
m4_204 -> m4_96  [key=2, style=dotted];
m4_205 -> m4_206  [key=0, style=solid];
m4_206 -> m4_202  [key=0, style=bold, color=blue];
m4_208 -> m4_209  [key=0, style=solid];
m4_208 -> m4_187  [key=2, style=dotted];
m4_209 -> m4_210  [key=0, style=solid];
m4_209 -> m4_188  [key=2, style=dotted];
m4_210 -> m4_211  [key=0, style=solid];
m4_210 -> m4_188  [key=2, style=dotted];
m4_211 -> m4_207  [key=0, style=bold, color=blue];
m4_218 -> m4_219  [key=0, style=solid];
m4_218 -> m4_102  [key=2, style=dotted];
m4_219 -> m4_220  [key=0, style=solid];
m4_219 -> m4_6  [key=2, style=dotted];
m4_219 -> m4_20  [key=2, style=dotted];
m4_219 -> m4_222  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator"];
m4_228 -> m4_229  [key=0, style=solid];
m4_217 -> m4_218  [key=0, style=solid];
m4_217 -> m4_219  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m4_220 -> m4_217  [key=0, style=bold, color=blue];
m4_222 -> m4_223  [key=0, style=solid];
m4_222 -> m4_224  [key=2, style=dotted];
m4_222 -> m4_13  [key=2, style=dotted];
m4_222 -> m4_225  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_221 -> m4_222  [key=0, style=solid];
m4_223 -> m4_221  [key=0, style=bold, color=blue];
m4_225 -> m4_226  [key=0, style=solid];
m4_226 -> m4_227  [key=0, style=solid];
m4_226 -> m4_181  [key=2, style=dotted];
m4_227 -> m4_225  [key=0, style=bold, color=blue];
m4_229 -> m4_230  [key=0, style=solid];
m4_229 -> m4_188  [key=2, style=dotted];
m4_230 -> m4_228  [key=0, style=bold, color=blue];
m4_237 -> m4_238  [key=0, style=solid];
m4_237 -> m4_102  [key=2, style=dotted];
m4_238 -> m4_239  [key=0, style=solid];
m4_238 -> m4_6  [key=2, style=dotted];
m4_238 -> m4_20  [key=2, style=dotted];
m4_238 -> m4_241  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator"];
m4_248 -> m4_249  [key=0, style=solid];
m4_236 -> m4_237  [key=0, style=solid];
m4_236 -> m4_238  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m4_239 -> m4_236  [key=0, style=bold, color=blue];
m4_241 -> m4_242  [key=0, style=solid];
m4_241 -> m4_224  [key=2, style=dotted];
m4_241 -> m4_13  [key=2, style=dotted];
m4_241 -> m4_243  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_240 -> m4_241  [key=0, style=solid];
m4_242 -> m4_240  [key=0, style=bold, color=blue];
m4_243 -> m4_244  [key=0, style=solid];
m4_243 -> m4_245  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Responses.Negotiation.Negotiator"];
m4_244 -> m4_245  [key=0, style=solid];
m4_244 -> m4_247  [key=2, style=dotted];
m4_245 -> m4_246  [key=0, style=solid];
m4_245 -> m4_181  [key=2, style=dotted];
m4_246 -> m4_243  [key=0, style=bold, color=blue];
m4_249 -> m4_250  [key=0, style=solid];
m4_249 -> m4_188  [key=2, style=dotted];
m4_250 -> m4_248  [key=0, style=bold, color=blue];
m4_257 -> m4_258  [key=0, style=solid];
m4_257 -> m4_102  [key=2, style=dotted];
m4_258 -> m4_259  [key=0, style=solid];
m4_258 -> m4_6  [key=2, style=dotted];
m4_258 -> m4_20  [key=2, style=dotted];
m4_258 -> m4_261  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator"];
m4_269 -> m4_270  [key=0, style=solid];
m4_256 -> m4_257  [key=0, style=solid];
m4_256 -> m4_258  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m4_259 -> m4_256  [key=0, style=bold, color=blue];
m4_261 -> m4_262  [key=0, style=solid];
m4_261 -> m4_224  [key=2, style=dotted];
m4_261 -> m4_13  [key=2, style=dotted];
m4_261 -> m4_263  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_260 -> m4_261  [key=0, style=solid];
m4_262 -> m4_260  [key=0, style=bold, color=blue];
m4_263 -> m4_264  [key=0, style=solid];
m4_263 -> m4_265  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Responses.Negotiation.Negotiator"];
m4_263 -> m4_266  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Responses.Negotiation.Negotiator"];
m4_264 -> m4_265  [key=0, style=solid];
m4_264 -> m4_247  [key=2, style=dotted];
m4_265 -> m4_266  [key=0, style=solid];
m4_265 -> m4_181  [key=2, style=dotted];
m4_266 -> m4_267  [key=0, style=solid];
m4_266 -> m4_268  [key=2, style=dotted];
m4_267 -> m4_263  [key=0, style=bold, color=blue];
m4_270 -> m4_271  [key=0, style=solid];
m4_270 -> m4_188  [key=2, style=dotted];
m4_271 -> m4_269  [key=0, style=bold, color=blue];
m4_279 -> m4_280  [key=0, style=solid];
m4_279 -> m4_282  [key=2, style=dotted];
m4_280 -> m4_281  [key=0, style=solid];
m4_280 -> m4_6  [key=2, style=dotted];
m4_280 -> m4_20  [key=2, style=dotted];
m4_280 -> m4_284  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator"];
m4_286 -> m4_287  [key=0, style=solid];
m4_278 -> m4_279  [key=0, style=solid];
m4_278 -> m4_280  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m4_281 -> m4_278  [key=0, style=bold, color=blue];
m4_284 -> m4_285  [key=0, style=solid];
m4_284 -> m4_224  [key=2, style=dotted];
m4_284 -> m4_13  [key=2, style=dotted];
m4_283 -> m4_284  [key=0, style=solid];
m4_285 -> m4_283  [key=0, style=bold, color=blue];
m4_287 -> m4_288  [key=0, style=solid];
m4_287 -> m4_187  [key=2, style=dotted];
m4_288 -> m4_286  [key=0, style=bold, color=blue];
m4_297 -> m4_298  [key=0, style=solid];
m4_297 -> m4_282  [key=2, style=dotted];
m4_298 -> m4_299  [key=0, style=solid];
m4_298 -> m4_6  [key=2, style=dotted];
m4_298 -> m4_20  [key=2, style=dotted];
m4_298 -> m4_301  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator"];
m4_296 -> m4_297  [key=0, style=solid];
m4_296 -> m4_298  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m4_299 -> m4_296  [key=0, style=bold, color=blue];
m4_301 -> m4_302  [key=0, style=solid];
m4_301 -> m4_224  [key=2, style=dotted];
m4_301 -> m4_13  [key=2, style=dotted];
m4_300 -> m4_301  [key=0, style=solid];
m4_302 -> m4_300  [key=0, style=bold, color=blue];
m4_309 -> m4_310  [key=0, style=solid];
m4_309 -> m4_102  [key=2, style=dotted];
m4_310 -> m4_311  [key=0, style=solid];
m4_310 -> m4_6  [key=2, style=dotted];
m4_310 -> m4_20  [key=2, style=dotted];
m4_310 -> m4_313  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator"];
m4_319 -> m4_320  [key=0, style=solid];
m4_308 -> m4_309  [key=0, style=solid];
m4_308 -> m4_310  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m4_311 -> m4_308  [key=0, style=bold, color=blue];
m4_313 -> m4_314  [key=0, style=solid];
m4_313 -> m4_224  [key=2, style=dotted];
m4_313 -> m4_13  [key=2, style=dotted];
m4_313 -> m4_315  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_312 -> m4_313  [key=0, style=solid];
m4_314 -> m4_312  [key=0, style=bold, color=blue];
m4_315 -> m4_316  [key=0, style=solid];
m4_316 -> m4_317  [key=0, style=solid];
m4_316 -> m4_318  [key=2, style=dotted];
m4_317 -> m4_315  [key=0, style=bold, color=blue];
m4_320 -> m4_321  [key=0, style=solid];
m4_320 -> m4_188  [key=2, style=dotted];
m4_321 -> m4_319  [key=0, style=bold, color=blue];
m4_328 -> m4_329  [key=0, style=solid];
m4_328 -> m4_102  [key=2, style=dotted];
m4_329 -> m4_330  [key=0, style=solid];
m4_329 -> m4_6  [key=2, style=dotted];
m4_329 -> m4_20  [key=2, style=dotted];
m4_329 -> m4_332  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator"];
m4_338 -> m4_339  [key=0, style=solid];
m4_327 -> m4_328  [key=0, style=solid];
m4_327 -> m4_329  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m4_330 -> m4_327  [key=0, style=bold, color=blue];
m4_332 -> m4_333  [key=0, style=solid];
m4_332 -> m4_224  [key=2, style=dotted];
m4_332 -> m4_13  [key=2, style=dotted];
m4_332 -> m4_334  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_331 -> m4_332  [key=0, style=solid];
m4_333 -> m4_331  [key=0, style=bold, color=blue];
m4_334 -> m4_335  [key=0, style=solid];
m4_335 -> m4_336  [key=0, style=solid];
m4_335 -> m4_337  [key=2, style=dotted];
m4_336 -> m4_334  [key=0, style=bold, color=blue];
m4_339 -> m4_340  [key=0, style=solid];
m4_339 -> m4_188  [key=2, style=dotted];
m4_340 -> m4_338  [key=0, style=bold, color=blue];
m4_352 -> m4_353  [key=0, style=solid];
m4_352 -> m4_6  [key=2, style=dotted];
m4_352 -> m4_20  [key=2, style=dotted];
m4_352 -> m4_355  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator"];
m4_355 -> m4_356  [key=0, style=solid];
m4_355 -> m4_224  [key=2, style=dotted];
m4_355 -> m4_13  [key=2, style=dotted];
m4_355 -> m4_357  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_358 -> m4_359  [key=0, style=solid];
m4_358 -> m4_360  [key=2, style=dotted];
m4_351 -> m4_352  [key=0, style=solid];
m4_351 -> m4_102  [key=2, style=dotted];
m4_361 -> m4_362  [key=0, style=solid];
m4_350 -> m4_351  [key=0, style=solid];
m4_350 -> m4_352  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m4_353 -> m4_350  [key=0, style=bold, color=blue];
m4_354 -> m4_355  [key=0, style=solid];
m4_356 -> m4_354  [key=0, style=bold, color=blue];
m4_357 -> m4_358  [key=0, style=solid];
m4_359 -> m4_357  [key=0, style=bold, color=blue];
m4_362 -> m4_363  [key=0, style=solid];
m4_362 -> m4_188  [key=2, style=dotted];
m4_363 -> m4_361  [key=0, style=bold, color=blue];
m4_375 -> m4_376  [key=0, style=solid];
m4_375 -> m4_102  [key=2, style=dotted];
m4_376 -> m4_377  [key=0, style=solid];
m4_376 -> m4_6  [key=2, style=dotted];
m4_376 -> m4_20  [key=2, style=dotted];
m4_376 -> m4_379  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator"];
m4_386 -> m4_387  [key=0, style=solid];
m4_386 -> m4_8  [key=2, style=dotted];
m4_386 -> m4_388  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_385 -> m4_386  [key=0, style=solid];
m4_374 -> m4_375  [key=0, style=solid];
m4_374 -> m4_376  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m4_377 -> m4_374  [key=0, style=bold, color=blue];
m4_379 -> m4_380  [key=0, style=solid];
m4_379 -> m4_224  [key=2, style=dotted];
m4_379 -> m4_13  [key=2, style=dotted];
m4_379 -> m4_381  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_378 -> m4_379  [key=0, style=solid];
m4_380 -> m4_378  [key=0, style=bold, color=blue];
m4_381 -> m4_382  [key=0, style=solid];
m4_382 -> m4_383  [key=0, style=solid];
m4_382 -> m4_384  [key=2, style=dotted];
m4_383 -> m4_381  [key=0, style=bold, color=blue];
m4_387 -> m4_385  [key=0, style=bold, color=blue];
m4_388 -> m4_389  [key=0, style=solid];
m4_389 -> m4_390  [key=0, style=solid];
m4_389 -> m4_188  [key=2, style=dotted];
m4_390 -> m4_388  [key=0, style=bold, color=blue];
m4_400 -> m4_401  [key=0, style=solid];
m4_400 -> m4_282  [key=2, style=dotted];
m4_401 -> m4_402  [key=0, style=solid];
m4_401 -> m4_6  [key=2, style=dotted];
m4_401 -> m4_20  [key=2, style=dotted];
m4_401 -> m4_404  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator"];
m4_409 -> m4_410  [key=0, style=solid];
m4_399 -> m4_400  [key=0, style=solid];
m4_399 -> m4_401  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m4_402 -> m4_399  [key=0, style=bold, color=blue];
m4_404 -> m4_405  [key=0, style=solid];
m4_404 -> m4_224  [key=2, style=dotted];
m4_404 -> m4_13  [key=2, style=dotted];
m4_404 -> m4_406  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_403 -> m4_404  [key=0, style=solid];
m4_405 -> m4_403  [key=0, style=bold, color=blue];
m4_406 -> m4_407  [key=0, style=solid];
m4_407 -> m4_408  [key=0, style=solid];
m4_407 -> m4_181  [key=2, style=dotted];
m4_408 -> m4_406  [key=0, style=bold, color=blue];
m4_410 -> m4_411  [key=0, style=solid];
m4_410 -> m4_188  [key=2, style=dotted];
m4_411 -> m4_409  [key=0, style=bold, color=blue];
m4_425 -> m4_426  [key=0, style=solid];
m4_425 -> m4_187  [key=2, style=dotted];
m4_418 -> m4_419  [key=0, style=solid];
m4_418 -> m4_282  [key=2, style=dotted];
m4_419 -> m4_420  [key=0, style=solid];
m4_419 -> m4_6  [key=2, style=dotted];
m4_419 -> m4_20  [key=2, style=dotted];
m4_419 -> m4_422  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator"];
m4_424 -> m4_425  [key=0, style=solid];
m4_417 -> m4_418  [key=0, style=solid];
m4_417 -> m4_419  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m4_420 -> m4_417  [key=0, style=bold, color=blue];
m4_422 -> m4_423  [key=0, style=solid];
m4_422 -> m4_224  [key=2, style=dotted];
m4_422 -> m4_13  [key=2, style=dotted];
m4_421 -> m4_422  [key=0, style=solid];
m4_423 -> m4_421  [key=0, style=bold, color=blue];
m4_426 -> m4_424  [key=0, style=bold, color=blue];
m4_433 -> m4_434  [key=0, style=solid];
m4_433 -> m4_435  [key=2, style=dotted];
m4_437 -> m4_438  [key=0, style=solid];
m4_437 -> m4_8  [key=2, style=dotted];
m4_436 -> m4_437  [key=0, style=solid];
m4_432 -> m4_433  [key=0, style=solid];
m4_434 -> m4_432  [key=0, style=bold, color=blue];
m4_438 -> m4_436  [key=0, style=bold, color=blue];
m4_445 -> m4_446  [key=0, style=solid];
m4_445 -> m4_435  [key=2, style=dotted];
m4_447 -> m4_448  [key=0, style=solid];
m4_444 -> m4_445  [key=0, style=solid];
m4_446 -> m4_444  [key=0, style=bold, color=blue];
m4_448 -> m4_449  [key=0, style=solid];
m4_448 -> m4_450  [key=2, style=dotted];
m4_449 -> m4_447  [key=0, style=bold, color=blue];
m4_455 -> m4_456  [key=0, style=solid];
m4_455 -> m4_457  [key=0, style=solid];
m4_456 -> m4_457  [key=0, style=solid];
m4_456 -> m4_459  [key=2, style=dotted];
m4_454 -> m4_455  [key=0, style=solid];
m4_454 -> m4_96  [key=2, style=dotted];
m4_454 -> m4_456  [key=1, style=dashed, color=darkseagreen4, label=negotiator];
m4_454 -> m4_457  [key=1, style=dashed, color=darkseagreen4, label=negotiator];
m4_453 -> m4_454  [key=0, style=solid];
m4_457 -> m4_458  [key=0, style=solid];
m4_458 -> m4_453  [key=0, style=bold, color=blue];
m4_485 -> m4_486  [key=0, style=solid];
m4_486 -> m4_487  [key=0, style=solid];
m4_486 -> m4_488  [key=2, style=dotted];
m4_487 -> m4_485  [key=0, style=bold, color=blue];
m4_490 -> m4_491  [key=0, style=solid];
m4_490 -> m4_492  [key=2, style=dotted];
m4_490 -> m4_493  [key=2, style=dotted];
m4_490 -> m4_268  [key=2, style=dotted];
m4_491 -> m4_489  [key=0, style=bold, color=blue];
m4_21 -> m4_22  [key=0, style=solid];
m4_22 -> m4_23  [key=0, style=solid];
m4_22 -> m4_6  [key=2, style=dotted];
m4_22 -> m4_29  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator"];
m4_22 -> m4_35  [key=1, style=dashed, color=darkseagreen4, label=module];
m4_23 -> m4_24  [key=0, style=solid];
m4_23 -> m4_7  [key=2, style=dotted];
m4_23 -> m4_35  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m4_24 -> m4_25  [key=0, style=solid];
m4_24 -> m4_8  [key=2, style=dotted];
m4_25 -> m4_26  [key=0, style=solid];
m4_25 -> m4_27  [key=2, style=dotted];
m4_25 -> m4_9  [key=2, style=dotted];
m4_26 -> m4_21  [key=0, style=bold, color=blue];
m4_478 -> m4_479  [key=0, style=solid];
m4_478 -> m4_478  [key=3, color=darkorchid, style=bold, label="method methodReturn Nancy.Response Process"];
m4_479 -> m4_480  [key=0, style=solid];
m4_480 -> m4_478  [key=0, style=bold, color=blue];
m4_412 -> m4_413  [key=0, style=solid];
m4_412 -> m4_414  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_412 -> m4_425  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_413 -> m4_414  [key=0, style=solid];
m4_413 -> m4_7  [key=2, style=dotted];
m4_413 -> m4_418  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m4_413 -> m4_419  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m4_414 -> m4_415  [key=0, style=solid];
m4_414 -> m4_8  [key=2, style=dotted];
m4_414 -> m4_424  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_415 -> m4_416  [key=0, style=solid];
m4_415 -> m4_9  [key=2, style=dotted];
m4_416 -> m4_412  [key=0, style=bold, color=blue];
m4_475 -> m4_476  [key=0, style=solid];
m4_476 -> m4_477  [key=0, style=solid];
m4_476 -> m4_463  [key=2, style=dotted];
m4_477 -> m4_475  [key=0, style=bold, color=blue];
m4_272 -> m4_273  [key=0, style=solid];
m4_273 -> m4_274  [key=0, style=solid];
m4_273 -> m4_7  [key=2, style=dotted];
m4_273 -> m4_279  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m4_273 -> m4_280  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m4_274 -> m4_275  [key=0, style=solid];
m4_274 -> m4_8  [key=2, style=dotted];
m4_274 -> m4_286  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_274 -> m4_276  [key=1, style=dashed, color=darkseagreen4, label=response];
m4_275 -> m4_276  [key=0, style=solid];
m4_275 -> m4_83  [key=2, style=dotted];
m4_275 -> m4_84  [key=2, style=dotted];
m4_276 -> m4_277  [key=0, style=solid];
m4_276 -> m4_166  [key=2, style=dotted];
m4_276 -> m4_84  [key=2, style=dotted];
m4_277 -> m4_272  [key=0, style=bold, color=blue];
m4_341 -> m4_342  [key=0, style=solid];
m4_342 -> m4_343  [key=0, style=solid];
m4_342 -> m4_347  [key=2, style=dotted];
m4_342 -> m4_352  [key=1, style=dashed, color=darkseagreen4, label=negotiatedCookie];
m4_342 -> m4_355  [key=1, style=dashed, color=darkseagreen4, label=negotiatedCookie];
m4_342 -> m4_358  [key=1, style=dashed, color=darkseagreen4, label=negotiatedCookie];
m4_342 -> m4_345  [key=1, style=dashed, color=darkseagreen4, label=negotiatedCookie];
m4_343 -> m4_344  [key=0, style=solid];
m4_343 -> m4_7  [key=2, style=dotted];
m4_343 -> m4_351  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m4_343 -> m4_352  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m4_345 -> m4_346  [key=0, style=solid];
m4_345 -> m4_348  [key=2, style=dotted];
m4_345 -> m4_349  [key=2, style=dotted];
m4_344 -> m4_345  [key=0, style=solid];
m4_344 -> m4_8  [key=2, style=dotted];
m4_344 -> m4_361  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_346 -> m4_341  [key=0, style=bold, color=blue];
m4_123 -> m4_124  [key=0, style=solid];
m4_124 -> m4_125  [key=0, style=solid];
m4_124 -> m4_6  [key=2, style=dotted];
m4_124 -> m4_130  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator"];
m4_124 -> m4_141  [key=1, style=dashed, color=darkseagreen4, label=module];
m4_124 -> m4_124  [key=3, color=darkorchid, style=bold, label="method methodReturn dynamic "];
m4_125 -> m4_126  [key=0, style=solid];
m4_125 -> m4_7  [key=2, style=dotted];
m4_125 -> m4_140  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m4_125 -> m4_141  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m4_126 -> m4_127  [key=0, style=solid];
m4_126 -> m4_8  [key=2, style=dotted];
m4_127 -> m4_128  [key=0, style=solid];
m4_127 -> m4_9  [key=2, style=dotted];
m4_128 -> m4_123  [key=0, style=bold, color=blue];
m4_103 -> m4_104  [key=0, style=solid];
m4_104 -> m4_105  [key=0, style=solid];
m4_104 -> m4_6  [key=2, style=dotted];
m4_104 -> m4_110  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator"];
m4_104 -> m4_121  [key=1, style=dashed, color=darkseagreen4, label=module];
m4_104 -> m4_104  [key=3, color=darkorchid, style=bold, label="method methodReturn dynamic "];
m4_105 -> m4_106  [key=0, style=solid];
m4_105 -> m4_7  [key=2, style=dotted];
m4_105 -> m4_120  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m4_105 -> m4_121  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m4_106 -> m4_107  [key=0, style=solid];
m4_106 -> m4_8  [key=2, style=dotted];
m4_107 -> m4_108  [key=0, style=solid];
m4_107 -> m4_9  [key=2, style=dotted];
m4_108 -> m4_103  [key=0, style=bold, color=blue];
m4_464 -> m4_465  [key=0, style=solid];
m4_465 -> m4_466  [key=0, style=solid];
m4_465 -> m4_467  [key=2, style=dotted];
m4_465 -> m4_468  [key=2, style=dotted];
m4_466 -> m4_464  [key=0, style=bold, color=blue];
m4_76 -> m4_77  [key=0, style=solid];
m4_77 -> m4_78  [key=0, style=solid];
m4_77 -> m4_6  [key=2, style=dotted];
m4_77 -> m4_86  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator"];
m4_77 -> m4_100  [key=1, style=dashed, color=darkseagreen4, label=module];
m4_77 -> m4_77  [key=3, color=darkorchid, style=bold, label="method methodReturn dynamic "];
m4_78 -> m4_79  [key=0, style=solid];
m4_78 -> m4_7  [key=2, style=dotted];
m4_78 -> m4_99  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m4_78 -> m4_100  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m4_79 -> m4_80  [key=0, style=solid];
m4_79 -> m4_8  [key=2, style=dotted];
m4_79 -> m4_81  [key=1, style=dashed, color=darkseagreen4, label=response];
m4_80 -> m4_81  [key=0, style=solid];
m4_80 -> m4_83  [key=2, style=dotted];
m4_80 -> m4_84  [key=2, style=dotted];
m4_81 -> m4_82  [key=0, style=solid];
m4_81 -> m4_9  [key=2, style=dotted];
m4_82 -> m4_76  [key=0, style=bold, color=blue];
m4_497 -> m4_18  [key=1, style=dashed, color=darkseagreen4, label=module];
m4_498 -> m4_35  [key=1, style=dashed, color=darkseagreen4, label=module];
m4_499 -> m4_50  [key=1, style=dashed, color=darkseagreen4, label=module];
m4_500 -> m4_74  [key=1, style=dashed, color=darkseagreen4, label=module];
m4_501 -> m4_100  [key=1, style=dashed, color=darkseagreen4, label=module];
m4_502 -> m4_121  [key=1, style=dashed, color=darkseagreen4, label=module];
m4_503 -> m4_141  [key=1, style=dashed, color=darkseagreen4, label=module];
m4_504 -> m4_352  [key=1, style=dashed, color=darkseagreen4, label=negotiatedCookie];
m4_504 -> m4_355  [key=1, style=dashed, color=darkseagreen4, label=negotiatedCookie];
m4_504 -> m4_358  [key=1, style=dashed, color=darkseagreen4, label=negotiatedCookie];
m4_505 -> m4_386  [key=1, style=dashed, color=darkseagreen4, label=browser];
m4_506 -> m4_425  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_507 -> m4_437  [key=1, style=dashed, color=darkseagreen4, label=browser];
m4_508 -> m4_455  [key=1, style=dashed, color=darkseagreen4, label="System.Action<Nancy.Responses.Negotiation.Negotiator>"];
m4_508 -> m4_456  [key=1, style=dashed, color=darkseagreen4, label="System.Action<Nancy.Responses.Negotiation.Negotiator>"];
m4_509 -> m4_482  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.NegotiationModule"];
m4_509 -> m4_486  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.NegotiationModule"];
m4_509 -> m4_483  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.NegotiationModule"];
m4_509 -> m4_490  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.NegotiationModule"];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_3  [key=2, style=dotted];
m5_2 -> m5_0  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_2  [key=0, style=solid];
m6_2 -> m6_0  [key=0, style=bold, color=blue];
m6_3 -> m6_4  [key=0, style=solid];
m6_4 -> m6_3  [key=0, style=bold, color=blue];
m6_5 -> m6_6  [key=0, style=solid];
m6_6 -> m6_7  [key=0, style=solid];
m6_6 -> m6_8  [key=2, style=dotted];
m6_7 -> m6_5  [key=0, style=bold, color=blue];
m6_9 -> m6_10  [key=0, style=solid];
m6_9 -> m6_15  [key=0, style=bold, color=red];
m6_9 -> m6_11  [key=1, style=dashed, color=darkseagreen4, label="System.ComponentModel.PropertyDescriptor"];
m6_9 -> m6_12  [key=1, style=dashed, color=darkseagreen4, label=object];
m6_9 -> m6_13  [key=1, style=dashed, color=darkseagreen4, label=object];
m6_10 -> m6_11  [key=0, style=solid];
m6_10 -> m6_17  [key=2, style=dotted];
m6_10 -> m6_13  [key=1, style=dashed, color=darkseagreen4, label=context];
m6_15 -> m6_16  [key=0, style=solid, color=red];
m6_15 -> m6_20  [key=2, style=dotted, color=red];
m6_11 -> m6_12  [key=0, style=solid];
m6_11 -> m6_13  [key=0, style=solid];
m6_12 -> m6_13  [key=0, style=solid];
m6_12 -> m6_18  [key=2, style=dotted];
m6_12 -> m6_12  [key=1, style=dashed, color=darkseagreen4, label=object];
m6_13 -> m6_14  [key=0, style=solid];
m6_13 -> m6_19  [key=2, style=dotted];
m6_13 -> m6_15  [key=1, style=dashed, color=red, label=result];
m6_14 -> m6_15  [key=0, style=solid, color=red];
m6_14 -> m6_16  [key=0, style=solid];
m6_16 -> m6_9  [key=0, style=bold, color=blue];
m6_21 -> m6_1  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Validation.DataAnnotations.DataAnnotationsValidatorAdapter"];
m6_21 -> m6_6  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Validation.DataAnnotations.DataAnnotationsValidatorAdapter"];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_3  [key=2, style=dotted];
m8_2 -> m8_0  [key=0, style=bold, color=blue];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> m9_3  [key=2, style=dotted];
m9_2 -> m9_0  [key=0, style=bold, color=blue];
m10_0 -> m10_1  [key=0, style=solid];
m10_0 -> m10_2  [key=1, style=dashed, color=darkseagreen4, label=object];
m10_1 -> m10_2  [key=0, style=solid];
m10_1 -> m10_5  [key=2, style=dotted];
m10_2 -> m10_3  [key=0, style=solid, color=green];
m10_2 -> m10_6  [key=2, style=dotted];
m10_3 -> m10_4  [key=0, style=solid, color=green];
m10_3 -> m10_7  [key=2, style=dotted, color=green];
m10_3 -> m10_8  [key=1, style=dashed, color=green, label="lambda expression"];
m10_4 -> m10_0  [key=0, style=bold, color=blue];
m10_12 -> m10_13  [key=0, style=solid, color=green];
m10_8 -> m10_9  [key=0, style=solid, color=green];
m10_8 -> m10_13  [key=1, style=dashed, color=green, label="?"];
m10_9 -> m10_10  [key=0, style=solid, color=green];
m10_9 -> m10_11  [key=2, style=dotted, color=green];
m10_13 -> m10_14  [key=0, style=solid, color=green];
m10_10 -> m10_8  [key=0, style=bold, color=blue];
m10_14 -> m10_12  [key=0, style=bold, color=blue];
m10_15 -> m10_13  [key=1, style=dashed, color=green, label="?"];
m11_35 -> m11_36  [key=0, style=solid];
m11_35 -> m11_38  [key=1, style=dashed, color=darkseagreen4, label=object];
m11_35 -> m11_40  [key=1, style=dashed, color=darkseagreen4, label=object];
m11_35 -> m11_30  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Equals"];
m11_35 -> m11_9  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Equals"];
m11_36 -> m11_37  [key=0, style=solid];
m11_36 -> m11_38  [key=0, style=solid];
m11_36 -> m11_33  [key=2, style=dotted];
m11_38 -> m11_39  [key=0, style=solid];
m11_38 -> m11_40  [key=0, style=solid];
m11_38 -> m11_33  [key=2, style=dotted];
m11_40 -> m11_41  [key=0, style=solid];
m11_40 -> m11_42  [key=2, style=dotted];
m11_40 -> m11_28  [key=2, style=dotted];
m11_37 -> m11_41  [key=0, style=solid];
m11_39 -> m11_41  [key=0, style=solid];
m11_41 -> m11_35  [key=0, style=bold, color=blue];
m11_56 -> m11_57  [key=0, style=solid];
m11_57 -> m11_58  [key=0, style=solid];
m11_57 -> m11_59  [key=2, style=dotted];
m11_58 -> m11_56  [key=0, style=bold, color=blue];
m11_28 -> m11_29  [key=0, style=solid];
m11_28 -> m11_31  [key=1, style=dashed, color=darkseagreen4, label="Nancy.DynamicDictionary"];
m11_28 -> m11_30  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Equals"];
m11_28 -> m11_35  [key=3, color=darkorchid, style=bold, label="Parameter variable Nancy.DynamicDictionary other"];
m11_29 -> m11_30  [key=0, style=solid];
m11_29 -> m11_31  [key=0, style=solid];
m11_29 -> m11_33  [key=2, style=dotted];
m11_31 -> m11_32  [key=0, style=solid];
m11_31 -> m11_33  [key=2, style=dotted];
m11_31 -> m11_34  [key=2, style=dotted];
m11_30 -> m11_32  [key=0, style=solid];
m11_32 -> m11_28  [key=0, style=bold, color=blue];
m11_7 -> m11_8  [key=0, style=solid];
m11_7 -> m11_9  [key=3, color=darkorchid, style=bold, label="method methodReturn bool TrySetMember"];
m11_8 -> m11_9  [key=0, style=solid];
m11_9 -> m11_10  [key=0, style=solid];
m11_10 -> m11_7  [key=0, style=bold, color=blue];
m11_81 -> m11_82  [key=0, style=solid];
m11_82 -> m11_83  [key=0, style=solid];
m11_82 -> m11_71  [key=2, style=dotted];
m11_83 -> m11_84  [key=0, style=solid];
m11_83 -> m11_85  [key=2, style=dotted];
m11_84 -> m11_81  [key=0, style=bold, color=blue];
m11_53 -> m11_54  [key=0, style=solid];
m11_54 -> m11_55  [key=0, style=solid];
m11_54 -> m11_54  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, dynamic>"];
m11_55 -> m11_53  [key=0, style=bold, color=blue];
m11_67 -> m11_68  [key=0, style=solid];
m11_68 -> m11_69  [key=0, style=solid];
m11_68 -> m11_71  [key=2, style=dotted];
m11_69 -> m11_70  [key=0, style=solid];
m11_69 -> m11_72  [key=2, style=dotted];
m11_70 -> m11_67  [key=0, style=bold, color=blue];
m11_11 -> m11_12  [key=0, style=solid];
m11_11 -> m11_9  [key=3, color=darkorchid, style=bold, label="method methodReturn bool TryGetMember"];
m11_12 -> m11_13  [key=0, style=solid];
m11_12 -> m11_14  [key=0, style=solid];
m11_12 -> m11_16  [key=2, style=dotted];
m11_12 -> m11_15  [key=1, style=dashed, color=darkseagreen4, label="out object"];
m11_13 -> m11_14  [key=0, style=solid];
m11_13 -> m11_17  [key=2, style=dotted];
m11_13 -> m11_15  [key=1, style=dashed, color=darkseagreen4, label="out object"];
m11_14 -> m11_15  [key=0, style=solid];
m11_15 -> m11_11  [key=0, style=bold, color=blue];
m11_90 -> m11_91  [key=0, style=solid];
m11_91 -> m11_92  [key=0, style=solid];
m11_91 -> m11_93  [key=2, style=dotted];
m11_92 -> m11_90  [key=0, style=bold, color=blue];
m11_18 -> m11_19  [key=0, style=solid];
m11_19 -> m11_20  [key=0, style=solid];
m11_20 -> m11_18  [key=0, style=bold, color=blue];
m11_43 -> m11_44  [key=0, style=solid];
m11_44 -> m11_45  [key=0, style=solid];
m11_44 -> m11_24  [key=2, style=dotted];
m11_45 -> m11_43  [key=0, style=bold, color=blue];
m11_46 -> m11_47  [key=0, style=solid];
m11_47 -> m11_48  [key=0, style=solid];
m11_47 -> m11_49  [key=2, style=dotted];
m11_48 -> m11_46  [key=0, style=bold, color=blue];
m11_63 -> m11_64  [key=0, style=solid];
m11_64 -> m11_65  [key=0, style=solid];
m11_64 -> m11_66  [key=2, style=dotted];
m11_65 -> m11_63  [key=0, style=bold, color=blue];
m11_73 -> m11_74  [key=0, style=solid];
m11_74 -> m11_75  [key=0, style=solid];
m11_74 -> m11_76  [key=2, style=dotted];
m11_75 -> m11_73  [key=0, style=bold, color=blue];
m11_0 -> m11_1  [key=0, style=solid];
m11_0 -> m11_2  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, object>"];
m11_0 -> m11_3  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, object>"];
m11_1 -> m11_2  [key=0, style=solid];
m11_1 -> m11_6  [key=2, style=dotted];
m11_1 -> m11_3  [key=1, style=dashed, color=darkseagreen4, label=instance];
m11_1 -> m11_4  [key=1, style=dashed, color=darkseagreen4, label=instance];
m11_2 -> m11_3  [key=0, style=solid];
m11_2 -> m11_4  [key=0, style=solid];
m11_3 -> m11_2  [key=0, style=solid];
m11_4 -> m11_5  [key=0, style=solid];
m11_5 -> m11_0  [key=0, style=bold, color=blue];
m11_50 -> m11_51  [key=0, style=solid];
m11_51 -> m11_52  [key=0, style=solid];
m11_52 -> m11_50  [key=0, style=bold, color=blue];
m11_60 -> m11_61  [key=0, style=solid];
m11_61 -> m11_62  [key=0, style=solid];
m11_61 -> m11_16  [key=2, style=dotted];
m11_62 -> m11_60  [key=0, style=bold, color=blue];
m11_77 -> m11_78  [key=0, style=solid];
m11_78 -> m11_79  [key=0, style=solid];
m11_78 -> m11_80  [key=2, style=dotted];
m11_79 -> m11_77  [key=0, style=bold, color=blue];
m11_71 -> m11_86  [key=0, style=solid];
m11_71 -> m11_67  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.KeyValuePair<string, dynamic> item"];
m11_71 -> m11_81  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.KeyValuePair<string, dynamic> item"];
m11_86 -> m11_87  [key=0, style=solid];
m11_86 -> m11_89  [key=2, style=dotted];
m11_86 -> m11_17  [key=2, style=dotted];
m11_86 -> m11_86  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, dynamic>"];
m11_87 -> m11_88  [key=0, style=solid];
m11_88 -> m11_71  [key=0, style=bold, color=blue];
m11_21 -> m11_22  [key=0, style=solid];
m11_22 -> m11_23  [key=0, style=solid];
m11_22 -> m11_24  [key=2, style=dotted];
m11_23 -> m11_21  [key=0, style=bold, color=blue];
m11_25 -> m11_26  [key=0, style=solid];
m11_26 -> m11_27  [key=0, style=solid];
m11_26 -> m11_24  [key=2, style=dotted];
m11_27 -> m11_25  [key=0, style=bold, color=blue];
m11_94 -> m11_8  [key=1, style=dashed, color=darkseagreen4, label="Nancy.DynamicDictionary"];
m11_94 -> m11_12  [key=1, style=dashed, color=darkseagreen4, label="Nancy.DynamicDictionary"];
m11_94 -> m11_19  [key=1, style=dashed, color=darkseagreen4, label="Nancy.DynamicDictionary"];
m11_94 -> m11_22  [key=1, style=dashed, color=darkseagreen4, label="Nancy.DynamicDictionary"];
m11_94 -> m11_26  [key=1, style=dashed, color=darkseagreen4, label="Nancy.DynamicDictionary"];
m11_94 -> m11_31  [key=1, style=dashed, color=darkseagreen4, label="Nancy.DynamicDictionary"];
m11_94 -> m11_38  [key=1, style=dashed, color=darkseagreen4, label="Nancy.DynamicDictionary"];
m11_94 -> m11_40  [key=1, style=dashed, color=darkseagreen4, label="Nancy.DynamicDictionary"];
m11_94 -> m11_44  [key=1, style=dashed, color=darkseagreen4, label="Nancy.DynamicDictionary"];
m11_94 -> m11_47  [key=1, style=dashed, color=darkseagreen4, label="Nancy.DynamicDictionary"];
m11_94 -> m11_51  [key=1, style=dashed, color=darkseagreen4, label="Nancy.DynamicDictionary"];
m11_94 -> m11_54  [key=1, style=dashed, color=darkseagreen4, label="Nancy.DynamicDictionary"];
m11_94 -> m11_57  [key=1, style=dashed, color=darkseagreen4, label="Nancy.DynamicDictionary"];
m11_94 -> m11_61  [key=1, style=dashed, color=darkseagreen4, label="Nancy.DynamicDictionary"];
m11_94 -> m11_64  [key=1, style=dashed, color=darkseagreen4, label="Nancy.DynamicDictionary"];
m11_94 -> m11_69  [key=1, style=dashed, color=darkseagreen4, label="Nancy.DynamicDictionary"];
m11_94 -> m11_74  [key=1, style=dashed, color=darkseagreen4, label="Nancy.DynamicDictionary"];
m11_94 -> m11_78  [key=1, style=dashed, color=darkseagreen4, label="Nancy.DynamicDictionary"];
m11_94 -> m11_83  [key=1, style=dashed, color=darkseagreen4, label="Nancy.DynamicDictionary"];
m13_44 -> m13_45  [key=0, style=solid];
m13_45 -> m13_46  [key=0, style=solid];
m13_45 -> m13_47  [key=2, style=dotted];
m13_45 -> m13_48  [key=2, style=dotted];
m13_46 -> m13_44  [key=0, style=bold, color=blue];
m13_31 -> m13_0  [key=3, color=darkorchid, style=bold, label="Field variable IValidator validator"];
m13_0 -> m13_1  [key=0, style=solid];
m13_0 -> m13_2  [key=1, style=dashed, color=darkseagreen4, label=IValidator];
m13_0 -> m13_3  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Validation.FluentValidation.IFluentAdapterFactory"];
m13_1 -> m13_2  [key=0, style=solid];
m13_2 -> m13_3  [key=0, style=solid];
m13_3 -> m13_4  [key=0, style=solid];
m13_4 -> m13_0  [key=0, style=bold, color=blue];
m13_13 -> m13_14  [key=0, style=solid];
m13_14 -> m13_15  [key=0, style=solid];
m13_14 -> m13_24  [key=2, style=dotted];
m13_14 -> m13_16  [key=1, style=dashed, color=darkseagreen4, label=fluentDescriptor];
m13_14 -> m13_18  [key=1, style=dashed, color=darkseagreen4, label=fluentDescriptor];
m13_15 -> m13_16  [key=0, style=solid];
m13_15 -> m13_25  [key=2, style=dotted];
m13_15 -> m13_21  [key=1, style=dashed, color=darkseagreen4, label=rules];
m13_15 -> m13_22  [key=1, style=dashed, color=darkseagreen4, label=rules];
m13_16 -> m13_17  [key=0, style=solid];
m13_16 -> m13_26  [key=2, style=dotted];
m13_18 -> m13_19  [key=0, style=solid];
m13_18 -> m13_27  [key=2, style=dotted];
m13_18 -> m13_28  [key=2, style=dotted];
m13_21 -> m13_20  [key=0, style=solid];
m13_21 -> m13_29  [key=2, style=dotted];
m13_21 -> m13_30  [key=2, style=dotted];
m13_22 -> m13_23  [key=0, style=solid];
m13_22 -> m13_31  [key=2, style=dotted];
m13_17 -> m13_18  [key=0, style=solid];
m13_17 -> m13_22  [key=0, style=solid];
m13_19 -> m13_20  [key=0, style=solid];
m13_19 -> m13_17  [key=0, style=solid];
m13_19 -> m13_21  [key=1, style=dashed, color=darkseagreen4, label=rule];
m13_20 -> m13_21  [key=0, style=solid];
m13_20 -> m13_19  [key=0, style=solid];
m13_23 -> m13_13  [key=0, style=bold, color=blue];
m13_32 -> m13_33  [key=0, style=solid, color=green];
m13_33 -> m13_34  [key=0, style=solid, color=green];
m13_33 -> m13_35  [key=2, style=dotted, color=green];
m13_33 -> m13_36  [key=2, style=dotted, color=green];
m13_33 -> m13_37  [key=1, style=dashed, color=green, label="lambda expression"];
m13_34 -> m13_32  [key=0, style=bold, color=blue];
m13_5 -> m13_6  [key=0, style=solid];
m13_6 -> m13_7  [key=0, style=solid];
m13_6 -> m13_10  [key=2, style=dotted];
m13_7 -> m13_8  [key=0, style=solid];
m13_7 -> m13_11  [key=2, style=dotted];
m13_8 -> m13_9  [key=0, style=solid];
m13_8 -> m13_12  [key=2, style=dotted];
m13_9 -> m13_5  [key=0, style=bold, color=blue];
m13_41 -> m13_42  [key=0, style=solid, color=green];
m13_37 -> m13_38  [key=0, style=solid, color=green];
m13_37 -> m13_42  [key=1, style=dashed, color=green, label="?"];
m13_38 -> m13_39  [key=0, style=solid, color=green];
m13_38 -> m13_40  [key=2, style=dotted, color=green];
m13_42 -> m13_43  [key=0, style=solid, color=green];
m13_39 -> m13_37  [key=0, style=bold, color=blue];
m13_43 -> m13_41  [key=0, style=bold, color=blue];
m13_49 -> m13_1  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Validation.FluentValidation.FluentValidationValidator"];
m13_49 -> m13_2  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Validation.FluentValidation.FluentValidationValidator"];
m13_49 -> m13_3  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Validation.FluentValidation.FluentValidationValidator"];
m13_49 -> m13_6  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Validation.FluentValidation.FluentValidationValidator"];
m13_49 -> m13_7  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Validation.FluentValidation.FluentValidationValidator"];
m13_49 -> m13_14  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Validation.FluentValidation.FluentValidationValidator"];
m13_49 -> m13_21  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Validation.FluentValidation.FluentValidationValidator"];
m13_49 -> m13_22  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Validation.FluentValidation.FluentValidationValidator"];
m13_49 -> m13_45  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Validation.FluentValidation.FluentValidationValidator"];
m13_50 -> m13_42  [key=1, style=dashed, color=green, label="?"];
m14_0 -> m14_1  [key=0, style=solid];
m14_1 -> m14_2  [key=0, style=solid];
m14_1 -> m14_3  [key=2, style=dotted];
m14_2 -> m14_0  [key=0, style=bold, color=blue];
m15_0 -> m15_1  [key=0, style=solid];
m15_1 -> m15_2  [key=0, style=solid];
m15_1 -> m15_3  [key=2, style=dotted];
m15_2 -> m15_0  [key=0, style=bold, color=blue];
m16_2 -> m16_3  [key=0, style=solid];
m16_3 -> m16_2  [key=0, style=bold, color=blue];
m16_0 -> m16_1  [key=0, style=solid];
m16_1 -> m16_0  [key=0, style=bold, color=blue];
m17_0 -> m17_1  [key=0, style=solid];
m17_0 -> m17_3  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m17_0 -> m17_4  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m17_0 -> m17_7  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m17_0 -> m17_9  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m17_0 -> m17_14  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_0 -> m17_17  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_0 -> m17_0  [key=3, color=darkorchid, style=bold, label="Parameter variable string matchedValue"];
m17_0 -> m17_6  [key=3, color=darkorchid, style=bold, label="method methodReturn bool TryMatch"];
m17_0 -> m17_18  [key=3, color=darkorchid, style=bold, label="method methodReturn bool TryMatch"];
m17_1 -> m17_2  [key=0, style=solid];
m17_1 -> m17_14  [key=1, style=dashed, color=darkseagreen4, label=minLength];
m17_3 -> m17_4  [key=0, style=solid];
m17_3 -> m17_7  [key=0, style=solid];
m17_4 -> m17_5  [key=0, style=solid];
m17_4 -> m17_14  [key=0, style=solid];
m17_4 -> m17_20  [key=2, style=dotted];
m17_7 -> m17_8  [key=0, style=solid];
m17_7 -> m17_12  [key=0, style=solid];
m17_9 -> m17_10  [key=0, style=solid];
m17_9 -> m17_14  [key=0, style=solid];
m17_9 -> m17_20  [key=2, style=dotted];
m17_14 -> m17_15  [key=0, style=solid];
m17_14 -> m17_17  [key=0, style=solid];
m17_17 -> m17_18  [key=0, style=solid];
m17_17 -> m17_19  [key=1, style=dashed, color=darkseagreen4, label="out string"];
m17_2 -> m17_3  [key=0, style=solid];
m17_2 -> m17_14  [key=1, style=dashed, color=darkseagreen4, label=maxLength];
m17_5 -> m17_6  [key=0, style=solid];
m17_6 -> m17_19  [key=0, style=solid];
m17_8 -> m17_9  [key=0, style=solid];
m17_8 -> m17_14  [key=1, style=dashed, color=darkseagreen4, label=minLength];
m17_12 -> m17_13  [key=0, style=solid];
m17_10 -> m17_11  [key=0, style=solid];
m17_11 -> m17_19  [key=0, style=solid];
m17_13 -> m17_19  [key=0, style=solid];
m17_15 -> m17_16  [key=0, style=solid];
m17_16 -> m17_19  [key=0, style=solid];
m17_18 -> m17_19  [key=0, style=solid];
m17_19 -> m17_0  [key=0, style=bold, color=blue];
m17_21 -> m17_4  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Routing.Constraints.LengthRouteSegmentConstraint"];
m17_21 -> m17_9  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Routing.Constraints.LengthRouteSegmentConstraint"];
m18_153 -> m18_154  [key=0, style=solid];
m18_154 -> m18_155  [key=0, style=solid];
m18_154 -> m18_156  [key=1, style=dashed, color=darkseagreen4, label=item1];
m18_155 -> m18_156  [key=0, style=solid];
m18_155 -> m18_157  [key=1, style=dashed, color=darkseagreen4, label=item2];
m18_156 -> m18_157  [key=0, style=solid];
m18_156 -> m18_27  [key=2, style=dotted];
m18_157 -> m18_158  [key=0, style=solid];
m18_157 -> m18_27  [key=2, style=dotted];
m18_158 -> m18_159  [key=0, style=solid];
m18_158 -> m18_161  [key=1, style=dashed, color=darkseagreen4, label=item3];
m18_158 -> m18_165  [key=1, style=dashed, color=darkseagreen4, label=item3];
m18_159 -> m18_160  [key=0, style=solid];
m18_159 -> m18_162  [key=1, style=dashed, color=darkseagreen4, label=item4];
m18_159 -> m18_166  [key=1, style=dashed, color=darkseagreen4, label=item4];
m18_161 -> m18_162  [key=0, style=solid];
m18_161 -> m18_27  [key=2, style=dotted];
m18_165 -> m18_166  [key=0, style=solid];
m18_165 -> m18_129  [key=2, style=dotted];
m18_165 -> m18_54  [key=2, style=dotted];
m18_160 -> m18_161  [key=0, style=solid];
m18_160 -> m18_11  [key=2, style=dotted];
m18_160 -> m18_162  [key=1, style=dashed, color=darkseagreen4, label=pipeline2];
m18_160 -> m18_163  [key=1, style=dashed, color=darkseagreen4, label=pipeline2];
m18_162 -> m18_163  [key=0, style=solid];
m18_162 -> m18_27  [key=2, style=dotted];
m18_166 -> m18_167  [key=0, style=solid];
m18_166 -> m18_94  [key=2, style=dotted];
m18_166 -> m18_54  [key=2, style=dotted];
m18_163 -> m18_164  [key=0, style=solid];
m18_164 -> m18_165  [key=0, style=solid];
m18_164 -> m18_92  [key=2, style=dotted];
m18_164 -> m18_93  [key=2, style=dotted];
m18_167 -> m18_153  [key=0, style=bold, color=blue];
m18_8 -> m18_9  [key=0, style=solid];
m18_9 -> m18_10  [key=0, style=solid];
m18_9 -> m18_11  [key=2, style=dotted];
m18_10 -> m18_8  [key=0, style=bold, color=blue];
m18_180 -> m18_181  [key=0, style=solid];
m18_181 -> m18_182  [key=0, style=solid];
m18_182 -> m18_183  [key=0, style=solid];
m18_182 -> m18_187  [key=1, style=dashed, color=darkseagreen4, label=item1];
m18_183 -> m18_184  [key=0, style=solid];
m18_187 -> m18_188  [key=0, style=solid];
m18_187 -> m18_27  [key=2, style=dotted];
m18_184 -> m18_185  [key=0, style=solid];
m18_184 -> m18_188  [key=1, style=dashed, color=darkseagreen4, label=item2];
m18_185 -> m18_186  [key=0, style=solid];
m18_188 -> m18_189  [key=0, style=solid];
m18_188 -> m18_27  [key=2, style=dotted];
m18_186 -> m18_187  [key=0, style=solid];
m18_186 -> m18_189  [key=1, style=dashed, color=darkseagreen4, label=item3];
m18_189 -> m18_190  [key=0, style=solid];
m18_189 -> m18_27  [key=2, style=dotted];
m18_190 -> m18_191  [key=0, style=solid];
m18_191 -> m18_192  [key=0, style=solid];
m18_191 -> m18_4  [key=2, style=dotted];
m18_191 -> m18_196  [key=2, style=dotted];
m18_192 -> m18_193  [key=0, style=solid];
m18_192 -> m18_29  [key=2, style=dotted];
m18_193 -> m18_194  [key=0, style=solid];
m18_193 -> m18_29  [key=2, style=dotted];
m18_194 -> m18_195  [key=0, style=solid];
m18_194 -> m18_29  [key=2, style=dotted];
m18_195 -> m18_180  [key=0, style=bold, color=blue];
m18_12 -> m18_13  [key=0, style=solid];
m18_13 -> m18_14  [key=0, style=solid];
m18_14 -> m18_15  [key=0, style=solid];
m18_14 -> m18_19  [key=1, style=dashed, color=darkseagreen4, label=item1];
m18_15 -> m18_16  [key=0, style=solid];
m18_19 -> m18_20  [key=0, style=solid];
m18_19 -> m18_27  [key=2, style=dotted];
m18_16 -> m18_17  [key=0, style=solid];
m18_16 -> m18_20  [key=1, style=dashed, color=darkseagreen4, label=item2];
m18_17 -> m18_18  [key=0, style=solid];
m18_20 -> m18_21  [key=0, style=solid];
m18_20 -> m18_27  [key=2, style=dotted];
m18_18 -> m18_19  [key=0, style=solid];
m18_18 -> m18_21  [key=1, style=dashed, color=darkseagreen4, label=item3];
m18_21 -> m18_22  [key=0, style=solid];
m18_21 -> m18_27  [key=2, style=dotted];
m18_22 -> m18_23  [key=0, style=solid];
m18_22 -> m18_4  [key=2, style=dotted];
m18_22 -> m18_28  [key=2, style=dotted];
m18_23 -> m18_24  [key=0, style=solid];
m18_23 -> m18_29  [key=2, style=dotted];
m18_24 -> m18_25  [key=0, style=solid];
m18_24 -> m18_29  [key=2, style=dotted];
m18_25 -> m18_26  [key=0, style=solid];
m18_25 -> m18_30  [key=2, style=dotted];
m18_26 -> m18_12  [key=0, style=bold, color=blue];
m18_209 -> m18_210  [key=0, style=solid];
m18_210 -> m18_211  [key=0, style=solid];
m18_210 -> m18_213  [key=1, style=dashed, color=darkseagreen4, label=item1];
m18_211 -> m18_212  [key=0, style=solid];
m18_211 -> m18_213  [key=1, style=dashed, color=darkseagreen4, label=castPipeline];
m18_213 -> m18_214  [key=0, style=solid];
m18_213 -> m18_110  [key=2, style=dotted];
m18_213 -> m18_54  [key=2, style=dotted];
m18_212 -> m18_213  [key=0, style=solid];
m18_212 -> m18_92  [key=2, style=dotted];
m18_212 -> m18_93  [key=2, style=dotted];
m18_214 -> m18_209  [key=0, style=bold, color=blue];
m18_218 -> m18_219  [key=0, style=solid];
m18_219 -> m18_220  [key=0, style=solid];
m18_220 -> m18_221  [key=0, style=solid];
m18_220 -> m18_227  [key=1, style=dashed, color=darkseagreen4, label=item1];
m18_221 -> m18_222  [key=0, style=solid];
m18_227 -> m18_228  [key=0, style=solid];
m18_222 -> m18_223  [key=0, style=solid];
m18_222 -> m18_228  [key=1, style=dashed, color=darkseagreen4, label=item2];
m18_223 -> m18_224  [key=0, style=solid];
m18_228 -> m18_229  [key=0, style=solid];
m18_224 -> m18_225  [key=0, style=solid];
m18_224 -> m18_230  [key=1, style=dashed, color=darkseagreen4, label=item3];
m18_225 -> m18_226  [key=0, style=solid];
m18_230 -> m18_231  [key=0, style=solid];
m18_230 -> m18_230  [key=1, style=dashed, color=darkseagreen4, label=subPipeline];
m18_226 -> m18_227  [key=0, style=solid];
m18_226 -> m18_231  [key=1, style=dashed, color=darkseagreen4, label=item4];
m18_231 -> m18_232  [key=0, style=solid];
m18_231 -> m18_231  [key=1, style=dashed, color=darkseagreen4, label=subPipeline];
m18_229 -> m18_230  [key=0, style=solid];
m18_229 -> m18_11  [key=2, style=dotted];
m18_232 -> m18_233  [key=0, style=solid];
m18_232 -> m18_27  [key=2, style=dotted];
m18_233 -> m18_234  [key=0, style=solid];
m18_233 -> m18_4  [key=2, style=dotted];
m18_233 -> m18_28  [key=2, style=dotted];
m18_234 -> m18_235  [key=0, style=solid];
m18_234 -> m18_29  [key=2, style=dotted];
m18_235 -> m18_236  [key=0, style=solid];
m18_235 -> m18_29  [key=2, style=dotted];
m18_236 -> m18_237  [key=0, style=solid];
m18_236 -> m18_29  [key=2, style=dotted];
m18_237 -> m18_238  [key=0, style=solid];
m18_237 -> m18_29  [key=2, style=dotted];
m18_238 -> m18_218  [key=0, style=bold, color=blue];
m18_43 -> m18_44  [key=0, style=solid];
m18_44 -> m18_45  [key=0, style=solid];
m18_44 -> m18_0  [key=2, style=dotted];
m18_44 -> m18_46  [key=1, style=dashed, color=darkseagreen4, label=response];
m18_44 -> m18_59  [key=1, style=dashed, color=darkseagreen4, label=response];
m18_44 -> m18_52  [key=1, style=dashed, color=darkseagreen4, label=response];
m18_45 -> m18_46  [key=0, style=solid];
m18_45 -> m18_48  [key=1, style=dashed, color=darkseagreen4, label=item1];
m18_46 -> m18_47  [key=0, style=solid];
m18_46 -> m18_49  [key=1, style=dashed, color=darkseagreen4, label=item2];
m18_52 -> m18_53  [key=0, style=solid];
m18_52 -> m18_54  [key=2, style=dotted];
m18_48 -> m18_49  [key=0, style=solid];
m18_48 -> m18_27  [key=2, style=dotted];
m18_47 -> m18_48  [key=0, style=solid];
m18_47 -> m18_50  [key=1, style=dashed, color=darkseagreen4, label=item3];
m18_49 -> m18_50  [key=0, style=solid];
m18_49 -> m18_27  [key=2, style=dotted];
m18_50 -> m18_51  [key=0, style=solid];
m18_50 -> m18_27  [key=2, style=dotted];
m18_51 -> m18_52  [key=0, style=solid];
m18_51 -> m18_4  [key=2, style=dotted];
m18_51 -> m18_28  [key=2, style=dotted];
m18_53 -> m18_43  [key=0, style=bold, color=blue];
m18_101 -> m18_102  [key=0, style=solid];
m18_102 -> m18_103  [key=0, style=solid];
m18_102 -> m18_105  [key=1, style=dashed, color=darkseagreen4, label=item1];
m18_102 -> m18_107  [key=1, style=dashed, color=darkseagreen4, label=item1];
m18_103 -> m18_104  [key=0, style=solid];
m18_105 -> m18_106  [key=0, style=solid];
m18_105 -> m18_109  [key=2, style=dotted];
m18_107 -> m18_108  [key=0, style=solid];
m18_107 -> m18_110  [key=2, style=dotted];
m18_107 -> m18_54  [key=2, style=dotted];
m18_104 -> m18_105  [key=0, style=solid];
m18_104 -> m18_27  [key=2, style=dotted];
m18_106 -> m18_107  [key=0, style=solid];
m18_106 -> m18_92  [key=2, style=dotted];
m18_106 -> m18_93  [key=2, style=dotted];
m18_108 -> m18_101  [key=0, style=bold, color=blue];
m18_4 -> m18_5  [key=0, style=solid];
m18_5 -> m18_6  [key=0, style=solid];
m18_5 -> m18_7  [key=2, style=dotted];
m18_6 -> m18_4  [key=0, style=bold, color=blue];
m18_251 -> m18_252  [key=0, style=solid];
m18_31 -> m18_32  [key=0, style=solid];
m18_32 -> m18_33  [key=0, style=solid];
m18_32 -> m18_23  [key=1, style=dashed, color=darkseagreen4, label=item1Called];
m18_32 -> m18_34  [key=1, style=dashed, color=darkseagreen4, label=item1Called];
m18_33 -> m18_34  [key=0, style=solid];
m18_34 -> m18_31  [key=0, style=bold, color=blue];
m18_35 -> m18_36  [key=0, style=solid];
m18_36 -> m18_37  [key=0, style=solid];
m18_36 -> m18_24  [key=1, style=dashed, color=darkseagreen4, label=item2Called];
m18_36 -> m18_38  [key=1, style=dashed, color=darkseagreen4, label=item2Called];
m18_37 -> m18_38  [key=0, style=solid];
m18_37 -> m18_0  [key=2, style=dotted];
m18_38 -> m18_35  [key=0, style=bold, color=blue];
m18_39 -> m18_40  [key=0, style=solid];
m18_40 -> m18_41  [key=0, style=solid];
m18_40 -> m18_25  [key=1, style=dashed, color=darkseagreen4, label=item3Called];
m18_40 -> m18_42  [key=1, style=dashed, color=darkseagreen4, label=item3Called];
m18_41 -> m18_42  [key=0, style=solid];
m18_42 -> m18_39  [key=0, style=bold, color=blue];
m18_59 -> m18_60  [key=0, style=solid];
m18_55 -> m18_56  [key=0, style=solid];
m18_56 -> m18_57  [key=0, style=solid];
m18_57 -> m18_55  [key=0, style=bold, color=blue];
m18_58 -> m18_59  [key=0, style=solid];
m18_60 -> m18_58  [key=0, style=bold, color=blue];
m18_61 -> m18_62  [key=0, style=solid];
m18_62 -> m18_63  [key=0, style=solid];
m18_63 -> m18_61  [key=0, style=bold, color=blue];
m18_75 -> m18_76  [key=0, style=solid];
m18_76 -> m18_77  [key=0, style=solid];
m18_77 -> m18_75  [key=0, style=bold, color=blue];
m18_78 -> m18_79  [key=0, style=solid];
m18_79 -> m18_80  [key=0, style=solid];
m18_80 -> m18_78  [key=0, style=bold, color=blue];
m18_81 -> m18_82  [key=0, style=solid];
m18_82 -> m18_83  [key=0, style=solid];
m18_83 -> m18_81  [key=0, style=bold, color=blue];
m18_95 -> m18_96  [key=0, style=solid];
m18_96 -> m18_97  [key=0, style=solid];
m18_97 -> m18_95  [key=0, style=bold, color=blue];
m18_98 -> m18_99  [key=0, style=solid];
m18_99 -> m18_100  [key=0, style=solid];
m18_99 -> m18_0  [key=2, style=dotted];
m18_100 -> m18_98  [key=0, style=bold, color=blue];
m18_111 -> m18_112  [key=0, style=solid];
m18_112 -> m18_113  [key=0, style=solid];
m18_113 -> m18_111  [key=0, style=bold, color=blue];
m18_114 -> m18_115  [key=0, style=solid];
m18_115 -> m18_116  [key=0, style=solid];
m18_115 -> m18_3  [key=2, style=dotted];
m18_116 -> m18_114  [key=0, style=bold, color=blue];
m18_130 -> m18_131  [key=0, style=solid];
m18_131 -> m18_132  [key=0, style=solid];
m18_132 -> m18_130  [key=0, style=bold, color=blue];
m18_133 -> m18_134  [key=0, style=solid];
m18_134 -> m18_135  [key=0, style=solid];
m18_135 -> m18_133  [key=0, style=bold, color=blue];
m18_136 -> m18_137  [key=0, style=solid];
m18_137 -> m18_138  [key=0, style=solid];
m18_138 -> m18_136  [key=0, style=bold, color=blue];
m18_147 -> m18_148  [key=0, style=solid];
m18_148 -> m18_149  [key=0, style=solid];
m18_149 -> m18_147  [key=0, style=bold, color=blue];
m18_150 -> m18_151  [key=0, style=solid];
m18_151 -> m18_152  [key=0, style=solid];
m18_151 -> m18_0  [key=2, style=dotted];
m18_152 -> m18_150  [key=0, style=bold, color=blue];
m18_168 -> m18_169  [key=0, style=solid];
m18_169 -> m18_170  [key=0, style=solid];
m18_170 -> m18_168  [key=0, style=bold, color=blue];
m18_171 -> m18_172  [key=0, style=solid];
m18_172 -> m18_173  [key=0, style=solid];
m18_172 -> m18_0  [key=2, style=dotted];
m18_173 -> m18_171  [key=0, style=bold, color=blue];
m18_174 -> m18_175  [key=0, style=solid];
m18_175 -> m18_176  [key=0, style=solid];
m18_176 -> m18_174  [key=0, style=bold, color=blue];
m18_177 -> m18_178  [key=0, style=solid];
m18_178 -> m18_179  [key=0, style=solid];
m18_178 -> m18_0  [key=2, style=dotted];
m18_179 -> m18_177  [key=0, style=bold, color=blue];
m18_197 -> m18_198  [key=0, style=solid];
m18_198 -> m18_199  [key=0, style=solid];
m18_198 -> m18_192  [key=1, style=dashed, color=darkseagreen4, label=item1Called];
m18_198 -> m18_200  [key=1, style=dashed, color=darkseagreen4, label=item1Called];
m18_199 -> m18_200  [key=0, style=solid];
m18_200 -> m18_197  [key=0, style=bold, color=blue];
m18_201 -> m18_202  [key=0, style=solid];
m18_202 -> m18_203  [key=0, style=solid];
m18_202 -> m18_193  [key=1, style=dashed, color=darkseagreen4, label=item2Called];
m18_202 -> m18_204  [key=1, style=dashed, color=darkseagreen4, label=item2Called];
m18_203 -> m18_204  [key=0, style=solid];
m18_204 -> m18_201  [key=0, style=bold, color=blue];
m18_205 -> m18_206  [key=0, style=solid];
m18_206 -> m18_207  [key=0, style=solid];
m18_206 -> m18_194  [key=1, style=dashed, color=darkseagreen4, label=item3Called];
m18_206 -> m18_208  [key=1, style=dashed, color=darkseagreen4, label=item3Called];
m18_207 -> m18_208  [key=0, style=solid];
m18_208 -> m18_205  [key=0, style=bold, color=blue];
m18_215 -> m18_216  [key=0, style=solid];
m18_216 -> m18_217  [key=0, style=solid];
m18_217 -> m18_215  [key=0, style=bold, color=blue];
m18_239 -> m18_240  [key=0, style=solid];
m18_240 -> m18_241  [key=0, style=solid];
m18_240 -> m18_234  [key=1, style=dashed, color=darkseagreen4, label=item1Called];
m18_240 -> m18_242  [key=1, style=dashed, color=darkseagreen4, label=item1Called];
m18_241 -> m18_242  [key=0, style=solid];
m18_242 -> m18_239  [key=0, style=bold, color=blue];
m18_243 -> m18_244  [key=0, style=solid];
m18_244 -> m18_245  [key=0, style=solid];
m18_244 -> m18_235  [key=1, style=dashed, color=darkseagreen4, label=item2Called];
m18_244 -> m18_246  [key=1, style=dashed, color=darkseagreen4, label=item2Called];
m18_245 -> m18_246  [key=0, style=solid];
m18_246 -> m18_243  [key=0, style=bold, color=blue];
m18_247 -> m18_248  [key=0, style=solid];
m18_248 -> m18_249  [key=0, style=solid];
m18_248 -> m18_236  [key=1, style=dashed, color=darkseagreen4, label=item3Called];
m18_248 -> m18_250  [key=1, style=dashed, color=darkseagreen4, label=item3Called];
m18_249 -> m18_250  [key=0, style=solid];
m18_250 -> m18_247  [key=0, style=bold, color=blue];
m18_252 -> m18_253  [key=0, style=solid];
m18_252 -> m18_237  [key=1, style=dashed, color=darkseagreen4, label=item4Called];
m18_252 -> m18_254  [key=1, style=dashed, color=darkseagreen4, label=item4Called];
m18_253 -> m18_254  [key=0, style=solid];
m18_254 -> m18_251  [key=0, style=bold, color=blue];
m18_0 -> m18_1  [key=0, style=solid];
m18_1 -> m18_2  [key=0, style=solid];
m18_1 -> m18_3  [key=2, style=dotted];
m18_2 -> m18_0  [key=0, style=bold, color=blue];
m18_84 -> m18_85  [key=0, style=solid];
m18_85 -> m18_86  [key=0, style=solid];
m18_85 -> m18_88  [key=1, style=dashed, color=darkseagreen4, label=item1];
m18_85 -> m18_90  [key=1, style=dashed, color=darkseagreen4, label=item1];
m18_86 -> m18_87  [key=0, style=solid];
m18_88 -> m18_89  [key=0, style=solid];
m18_88 -> m18_27  [key=2, style=dotted];
m18_90 -> m18_91  [key=0, style=solid];
m18_90 -> m18_94  [key=2, style=dotted];
m18_90 -> m18_54  [key=2, style=dotted];
m18_87 -> m18_88  [key=0, style=solid];
m18_87 -> m18_27  [key=2, style=dotted];
m18_89 -> m18_90  [key=0, style=solid];
m18_89 -> m18_92  [key=2, style=dotted];
m18_89 -> m18_93  [key=2, style=dotted];
m18_91 -> m18_84  [key=0, style=bold, color=blue];
m18_139 -> m18_140  [key=0, style=solid];
m18_140 -> m18_141  [key=0, style=solid];
m18_140 -> m18_143  [key=1, style=dashed, color=darkseagreen4, label=item1];
m18_140 -> m18_145  [key=1, style=dashed, color=darkseagreen4, label=item1];
m18_141 -> m18_142  [key=0, style=solid];
m18_143 -> m18_144  [key=0, style=solid];
m18_145 -> m18_146  [key=0, style=solid];
m18_145 -> m18_94  [key=2, style=dotted];
m18_145 -> m18_54  [key=2, style=dotted];
m18_142 -> m18_143  [key=0, style=solid];
m18_142 -> m18_27  [key=2, style=dotted];
m18_144 -> m18_145  [key=0, style=solid];
m18_144 -> m18_92  [key=2, style=dotted];
m18_144 -> m18_93  [key=2, style=dotted];
m18_146 -> m18_139  [key=0, style=bold, color=blue];
m18_117 -> m18_118  [key=0, style=solid];
m18_118 -> m18_119  [key=0, style=solid];
m18_118 -> m18_121  [key=1, style=dashed, color=darkseagreen4, label=item1];
m18_118 -> m18_124  [key=1, style=dashed, color=darkseagreen4, label=item1];
m18_119 -> m18_120  [key=0, style=solid];
m18_119 -> m18_123  [key=1, style=dashed, color=darkseagreen4, label=item2];
m18_119 -> m18_125  [key=1, style=dashed, color=darkseagreen4, label=item2];
m18_121 -> m18_122  [key=0, style=solid];
m18_121 -> m18_27  [key=2, style=dotted];
m18_124 -> m18_125  [key=0, style=solid];
m18_124 -> m18_129  [key=2, style=dotted];
m18_124 -> m18_54  [key=2, style=dotted];
m18_120 -> m18_121  [key=0, style=solid];
m18_120 -> m18_122  [key=1, style=dashed, color=darkseagreen4, label=item3];
m18_120 -> m18_126  [key=1, style=dashed, color=darkseagreen4, label=item3];
m18_123 -> m18_124  [key=0, style=solid];
m18_123 -> m18_128  [key=2, style=dotted];
m18_125 -> m18_126  [key=0, style=solid];
m18_125 -> m18_129  [key=2, style=dotted];
m18_125 -> m18_54  [key=2, style=dotted];
m18_122 -> m18_123  [key=0, style=solid];
m18_122 -> m18_27  [key=2, style=dotted];
m18_126 -> m18_127  [key=0, style=solid];
m18_126 -> m18_129  [key=2, style=dotted];
m18_126 -> m18_54  [key=2, style=dotted];
m18_127 -> m18_117  [key=0, style=bold, color=blue];
m18_64 -> m18_65  [key=0, style=solid];
m18_65 -> m18_66  [key=0, style=solid];
m18_65 -> m18_68  [key=1, style=dashed, color=darkseagreen4, label=item1];
m18_66 -> m18_67  [key=0, style=solid];
m18_66 -> m18_69  [key=1, style=dashed, color=darkseagreen4, label=item2];
m18_68 -> m18_69  [key=0, style=solid];
m18_68 -> m18_27  [key=2, style=dotted];
m18_67 -> m18_68  [key=0, style=solid];
m18_67 -> m18_70  [key=1, style=dashed, color=darkseagreen4, label=item3];
m18_69 -> m18_70  [key=0, style=solid];
m18_69 -> m18_27  [key=2, style=dotted];
m18_70 -> m18_71  [key=0, style=solid];
m18_70 -> m18_27  [key=2, style=dotted];
m18_71 -> m18_72  [key=0, style=solid];
m18_71 -> m18_4  [key=2, style=dotted];
m18_71 -> m18_28  [key=2, style=dotted];
m18_72 -> m18_73  [key=0, style=solid];
m18_72 -> m18_74  [key=2, style=dotted];
m18_73 -> m18_64  [key=0, style=bold, color=blue];
m18_255 -> m18_9  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture"];
m18_255 -> m18_19  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture"];
m18_255 -> m18_20  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture"];
m18_255 -> m18_21  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture"];
m18_255 -> m18_22  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture"];
m18_255 -> m18_48  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture"];
m18_255 -> m18_49  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture"];
m18_255 -> m18_50  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture"];
m18_255 -> m18_51  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture"];
m18_255 -> m18_68  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture"];
m18_255 -> m18_69  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture"];
m18_255 -> m18_70  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture"];
m18_255 -> m18_71  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture"];
m18_255 -> m18_87  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture"];
m18_255 -> m18_88  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture"];
m18_255 -> m18_89  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture"];
m18_255 -> m18_90  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture"];
m18_255 -> m18_104  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture"];
m18_255 -> m18_105  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture"];
m18_255 -> m18_106  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture"];
m18_255 -> m18_107  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture"];
m18_255 -> m18_121  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture"];
m18_255 -> m18_122  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture"];
m18_255 -> m18_123  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture"];
m18_255 -> m18_124  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture"];
m18_255 -> m18_125  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture"];
m18_255 -> m18_126  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture"];
m18_255 -> m18_142  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture"];
m18_255 -> m18_143  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture"];
m18_255 -> m18_144  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture"];
m18_255 -> m18_145  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture"];
m18_255 -> m18_156  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture"];
m18_255 -> m18_157  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture"];
m18_255 -> m18_163  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture"];
m18_255 -> m18_164  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture"];
m18_255 -> m18_165  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture"];
m18_255 -> m18_166  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture"];
m18_255 -> m18_187  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture"];
m18_255 -> m18_188  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture"];
m18_255 -> m18_189  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture"];
m18_255 -> m18_190  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture"];
m18_255 -> m18_227  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture"];
m18_255 -> m18_228  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture"];
m18_255 -> m18_232  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture"];
m18_255 -> m18_233  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.PreRequestHooksPipelineFixture"];
m18_256 -> m18_59  [key=1, style=dashed, color=darkseagreen4, label=response];
m19_0 -> m19_1  [key=0, style=solid];
m19_0 -> m19_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m19_0 -> m19_2  [key=3, color=darkorchid, style=bold, label="Parameter variable int matchedValue"];
m19_0 -> m19_5  [key=3, color=darkorchid, style=bold, label="method methodReturn bool TryMatch"];
m19_0 -> m19_10  [key=3, color=darkorchid, style=bold, label="method methodReturn bool TryMatch"];
m19_1 -> m19_2  [key=0, style=solid];
m19_3 -> m19_4  [key=0, style=solid];
m19_3 -> m19_6  [key=0, style=solid];
m19_3 -> m19_12  [key=2, style=dotted];
m19_3 -> m19_9  [key=1, style=dashed, color=darkseagreen4, label=intValue];
m19_2 -> m19_3  [key=0, style=solid];
m19_4 -> m19_5  [key=0, style=solid];
m19_6 -> m19_7  [key=0, style=solid];
m19_6 -> m19_9  [key=0, style=solid];
m19_9 -> m19_10  [key=0, style=solid];
m19_9 -> m19_11  [key=1, style=dashed, color=darkseagreen4, label="out int"];
m19_5 -> m19_11  [key=0, style=solid];
m19_7 -> m19_8  [key=0, style=solid];
m19_8 -> m19_11  [key=0, style=solid];
m19_10 -> m19_11  [key=0, style=solid];
m19_11 -> m19_0  [key=0, style=bold, color=blue];
m19_13 -> m19_3  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Routing.Constraints.MaxRouteSegmentConstraint"];
m20_6 -> m20_7  [key=0, style=solid];
m20_6 -> m20_8  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IEnumerable<Nancy.ViewEngines.ViewLocationResult> GetLocatedViews"];
m20_7 -> m20_8  [key=0, style=solid];
m20_7 -> m20_11  [key=2, style=dotted];
m20_8 -> m20_9  [key=0, style=solid];
m20_8 -> m20_12  [key=2, style=dotted];
m20_9 -> m20_10  [key=0, style=solid];
m20_10 -> m20_6  [key=0, style=bold, color=blue];
m20_29 -> m20_30  [key=0, style=solid];
m20_30 -> m20_31  [key=0, style=solid];
m20_31 -> m20_29  [key=0, style=bold, color=blue];
m20_21 -> m20_22  [key=0, style=solid];
m20_22 -> m20_23  [key=0, style=solid];
m20_22 -> m20_5  [key=2, style=dotted];
m20_22 -> m20_24  [key=2, style=dotted];
m20_22 -> m20_25  [key=2, style=dotted];
m20_23 -> m20_21  [key=0, style=bold, color=blue];
m20_26 -> m20_27  [key=0, style=solid];
m20_26 -> m20_21  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator"];
m20_27 -> m20_28  [key=0, style=solid];
m20_27 -> m20_21  [key=2, style=dotted];
m20_28 -> m20_26  [key=0, style=bold, color=blue];
m20_0 -> m20_1  [key=0, style=solid];
m20_0 -> m20_2  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<Nancy.ViewEngines.IViewEngine>"];
m20_1 -> m20_2  [key=0, style=solid];
m20_2 -> m20_3  [key=0, style=solid];
m20_3 -> m20_4  [key=0, style=solid];
m20_3 -> m20_5  [key=2, style=dotted];
m20_4 -> m20_0  [key=0, style=bold, color=blue];
m20_13 -> m20_14  [key=0, style=solid];
m20_14 -> m20_15  [key=0, style=solid];
m20_14 -> m20_16  [key=2, style=dotted];
m20_14 -> m20_17  [key=2, style=dotted];
m20_14 -> m20_18  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_15 -> m20_13  [key=0, style=bold, color=blue];
m20_38 -> m20_39  [key=0, style=solid];
m20_18 -> m20_19  [key=0, style=solid];
m20_19 -> m20_20  [key=0, style=solid];
m20_20 -> m20_18  [key=0, style=bold, color=blue];
m20_39 -> m20_40  [key=0, style=solid];
m20_40 -> m20_38  [key=0, style=bold, color=blue];
m20_32 -> m20_33  [key=0, style=solid];
m20_33 -> m20_34  [key=0, style=solid];
m20_33 -> m20_5  [key=2, style=dotted];
m20_33 -> m20_36  [key=2, style=dotted];
m20_33 -> m20_37  [key=2, style=dotted];
m20_33 -> m20_38  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_34 -> m20_35  [key=0, style=solid];
m20_35 -> m20_32  [key=0, style=bold, color=blue];
m20_41 -> m20_1  [key=1, style=dashed, color=darkseagreen4, label="Nancy.ViewEngines.DefaultViewLocationCache"];
m20_41 -> m20_3  [key=1, style=dashed, color=darkseagreen4, label="Nancy.ViewEngines.DefaultViewLocationCache"];
m20_41 -> m20_7  [key=1, style=dashed, color=darkseagreen4, label="Nancy.ViewEngines.DefaultViewLocationCache"];
m20_41 -> m20_8  [key=1, style=dashed, color=darkseagreen4, label="Nancy.ViewEngines.DefaultViewLocationCache"];
m20_41 -> m20_22  [key=1, style=dashed, color=darkseagreen4, label="Nancy.ViewEngines.DefaultViewLocationCache"];
m20_41 -> m20_27  [key=1, style=dashed, color=darkseagreen4, label="Nancy.ViewEngines.DefaultViewLocationCache"];
m20_42 -> m20_30  [key=1, style=dashed, color=darkseagreen4, label="Nancy.ViewEngines.DefaultViewLocationCache.DefaultViewLocationCacheDiagnostics"];
m20_42 -> m20_33  [key=1, style=dashed, color=darkseagreen4, label="Nancy.ViewEngines.DefaultViewLocationCache.DefaultViewLocationCacheDiagnostics"];
m21_0 -> m21_1  [key=0, style=solid];
m21_0 -> m21_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_0 -> m21_2  [key=3, color=darkorchid, style=bold, label="Parameter variable int matchedValue"];
m21_0 -> m21_5  [key=3, color=darkorchid, style=bold, label="method methodReturn bool TryMatch"];
m21_0 -> m21_10  [key=3, color=darkorchid, style=bold, label="method methodReturn bool TryMatch"];
m21_1 -> m21_2  [key=0, style=solid];
m21_3 -> m21_4  [key=0, style=solid];
m21_3 -> m21_6  [key=0, style=solid];
m21_3 -> m21_12  [key=2, style=dotted];
m21_3 -> m21_9  [key=1, style=dashed, color=darkseagreen4, label=intValue];
m21_2 -> m21_3  [key=0, style=solid];
m21_4 -> m21_5  [key=0, style=solid];
m21_6 -> m21_7  [key=0, style=solid];
m21_6 -> m21_9  [key=0, style=solid];
m21_9 -> m21_10  [key=0, style=solid];
m21_9 -> m21_11  [key=1, style=dashed, color=darkseagreen4, label="out int"];
m21_5 -> m21_11  [key=0, style=solid];
m21_7 -> m21_8  [key=0, style=solid];
m21_8 -> m21_11  [key=0, style=solid];
m21_10 -> m21_11  [key=0, style=solid];
m21_11 -> m21_0  [key=0, style=bold, color=blue];
m21_13 -> m21_3  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Routing.Constraints.MinRouteSegmentConstraint"];
m22_6 -> m22_7  [key=0, style=solid];
m22_6 -> m22_8  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationRule>"];
m22_6 -> m22_10  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationRule>"];
m22_6 -> m22_0  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationRule> rules"];
m22_7 -> m22_8  [key=0, style=solid];
m22_7 -> m22_17  [key=2, style=dotted];
m22_7 -> m22_9  [key=1, style=dashed, color=darkseagreen4, label=results];
m22_7 -> m22_12  [key=1, style=dashed, color=darkseagreen4, label=results];
m22_7 -> m22_13  [key=1, style=dashed, color=darkseagreen4, label=results];
m22_7 -> m22_14  [key=1, style=dashed, color=darkseagreen4, label=results];
m22_7 -> m22_15  [key=1, style=dashed, color=darkseagreen4, label=results];
m22_8 -> m22_9  [key=0, style=solid];
m22_8 -> m22_10  [key=0, style=solid];
m22_10 -> m22_11  [key=0, style=solid];
m22_10 -> m22_15  [key=0, style=solid];
m22_10 -> m22_14  [key=1, style=dashed, color=darkseagreen4, label=rule];
m22_9 -> m22_16  [key=0, style=solid];
m22_12 -> m22_13  [key=0, style=solid];
m22_12 -> m22_14  [key=0, style=solid];
m22_12 -> m22_18  [key=2, style=dotted];
m22_13 -> m22_14  [key=0, style=solid];
m22_13 -> m22_19  [key=2, style=dotted];
m22_13 -> m22_20  [key=2, style=dotted];
m22_14 -> m22_11  [key=0, style=solid];
m22_14 -> m22_21  [key=2, style=dotted];
m22_15 -> m22_16  [key=0, style=solid];
m22_11 -> m22_12  [key=0, style=solid];
m22_11 -> m22_10  [key=0, style=solid];
m22_11 -> m22_13  [key=1, style=dashed, color=darkseagreen4, label=name];
m22_11 -> m22_14  [key=1, style=dashed, color=darkseagreen4, label=name];
m22_16 -> m22_6  [key=0, style=bold, color=blue];
m22_0 -> m22_1  [key=0, style=solid];
m22_1 -> m22_0  [key=0, style=bold, color=blue];
m22_2 -> m22_3  [key=0, style=solid];
m22_2 -> m22_4  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m22_3 -> m22_4  [key=0, style=solid];
m22_4 -> m22_5  [key=0, style=solid];
m22_5 -> m22_2  [key=0, style=bold, color=blue];
m22_22 -> m22_3  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Validation.ModelValidationDescriptor"];
m22_22 -> m22_4  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Validation.ModelValidationDescriptor"];
m23_0 -> m23_1  [key=0, style=solid, color=red];
m23_1 -> m23_2  [key=0, style=solid, color=red];
m23_2 -> m23_0  [key=0, style=bold, color=blue];
m23_2 -> m23_3  [key=0, style=solid, color=green];
m23_2 -> m23_4  [key=1, style=dashed, color=green, label="System.Func<string, string>"];
m23_3 -> m23_4  [key=0, style=solid, color=green];
m23_4 -> m23_3  [key=0, style=bold, color=blue];
m23_4 -> m23_5  [key=0, style=solid, color=green];
m23_6 -> m23_7  [key=0, style=solid, color=red];
m23_7 -> m23_8  [key=0, style=solid, color=red];
m23_7 -> m23_9  [key=2, style=dotted, color=red];
m23_8 -> m23_6  [key=0, style=bold, color=blue];
m23_8 -> m23_5  [key=0, style=bold, color=blue];
m23_5 -> m23_6  [key=0, style=solid, color=red];
m23_5 -> m23_2  [key=0, style=bold, color=blue];
m23_10 -> m23_1  [key=1, style=dashed, color=red, label="Nancy.Tests.Fakes.FakeViewEngine"];
m23_10 -> m23_6  [key=1, style=dashed, color=red, label="Nancy.Tests.Fakes.FakeViewEngine"];
m23_10 -> m23_3  [key=1, style=dashed, color=green, label="Nancy.Validation.ModelValidationError"];
m23_10 -> m23_4  [key=1, style=dashed, color=green, label="Nancy.Validation.ModelValidationError"];
m23_10 -> m23_7  [key=1, style=dashed, color=green, label="Nancy.Validation.ModelValidationError"];
m25_0 -> m25_1  [key=0, style=solid, color=green];
m25_1 -> m25_2  [key=0, style=solid, color=green];
m25_1 -> m25_3  [key=2, style=dotted, color=green];
m25_1 -> m25_4  [key=2, style=dotted, color=green];
m25_1 -> m25_5  [key=2, style=dotted, color=green];
m25_2 -> m25_0  [key=0, style=bold, color=blue];
m25_8 -> m25_9  [key=0, style=solid, color=green];
m25_8 -> m25_14  [key=1, style=dashed, color=green, label=string];
m25_9 -> m25_10  [key=0, style=solid, color=green];
m25_9 -> m25_0  [key=2, style=dotted, color=green];
m25_9 -> m25_11  [key=2, style=dotted, color=green];
m25_9 -> m25_12  [key=2, style=dotted, color=green];
m25_10 -> m25_8  [key=0, style=bold, color=blue];
m25_20 -> m25_21  [key=0, style=solid, color=green];
m25_14 -> m25_15  [key=0, style=solid, color=green];
m25_13 -> m25_14  [key=0, style=solid, color=green];
m25_15 -> m25_13  [key=0, style=bold, color=blue];
m25_21 -> m25_22  [key=0, style=solid, color=green];
m25_22 -> m25_20  [key=0, style=bold, color=blue];
m25_16 -> m25_17  [key=0, style=solid, color=green];
m25_16 -> m25_21  [key=1, style=dashed, color=green, label=string];
m25_17 -> m25_18  [key=0, style=solid, color=green];
m25_17 -> m25_0  [key=2, style=dotted, color=green];
m25_17 -> m25_19  [key=2, style=dotted, color=green];
m25_17 -> m25_12  [key=2, style=dotted, color=green];
m25_18 -> m25_16  [key=0, style=bold, color=blue];
m25_23 -> m25_1  [key=1, style=dashed, color=green, label="Nancy.Validation.ModelValidationResult"];
m25_23 -> m25_9  [key=1, style=dashed, color=green, label="Nancy.Validation.ModelValidationResult"];
m25_23 -> m25_17  [key=1, style=dashed, color=green, label="Nancy.Validation.ModelValidationResult"];
m25_24 -> m25_14  [key=1, style=dashed, color=green, label=string];
m25_25 -> m25_21  [key=1, style=dashed, color=green, label=string];
m26_8 -> m26_9  [key=0, style=solid];
m26_9 -> m26_10  [key=0, style=solid];
m26_9 -> m26_12  [key=2, style=dotted];
m26_9 -> m26_13  [key=2, style=dotted];
m26_10 -> m26_11  [key=0, style=solid];
m26_10 -> m26_14  [key=2, style=dotted];
m26_11 -> m26_8  [key=0, style=bold, color=blue];
m26_0 -> m26_1  [key=0, style=solid];
m26_1 -> m26_2  [key=0, style=solid];
m26_1 -> m26_5  [key=2, style=dotted];
m26_2 -> m26_3  [key=0, style=solid];
m26_2 -> m26_6  [key=2, style=dotted];
m26_3 -> m26_4  [key=0, style=solid];
m26_3 -> m26_7  [key=2, style=dotted];
m26_4 -> m26_0  [key=0, style=bold, color=blue];
m26_51 -> m26_52  [key=0, style=solid];
m26_52 -> m26_53  [key=0, style=solid];
m26_52 -> m26_6  [key=2, style=dotted];
m26_52 -> m26_55  [key=1, style=dashed, color=darkseagreen4, label=validator];
m26_52 -> m26_62  [key=1, style=dashed, color=darkseagreen4, label=validator];
m26_53 -> m26_54  [key=0, style=solid];
m26_53 -> m26_22  [key=2, style=dotted];
m26_53 -> m26_23  [key=2, style=dotted];
m26_53 -> m26_58  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_55 -> m26_56  [key=0, style=solid];
m26_55 -> m26_22  [key=2, style=dotted];
m26_55 -> m26_57  [key=2, style=dotted];
m26_55 -> m26_61  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_54 -> m26_55  [key=0, style=solid];
m26_54 -> m26_12  [key=2, style=dotted];
m26_54 -> m26_13  [key=2, style=dotted];
m26_56 -> m26_51  [key=0, style=bold, color=blue];
m26_32 -> m26_33  [key=0, style=solid];
m26_33 -> m26_34  [key=0, style=solid, color=red];
m26_33 -> m26_6  [key=2, style=dotted];
m26_33 -> m26_43  [key=1, style=dashed, color=red, label=validator];
m26_33 -> m26_35  [key=1, style=dashed, color=darkseagreen4, label=validator];
m26_34 -> m26_35  [key=0, style=solid, color=red];
m26_34 -> m26_22  [key=2, style=dotted, color=red];
m26_34 -> m26_39  [key=2, style=dotted, color=red];
m26_34 -> m26_40  [key=2, style=dotted, color=red];
m26_34 -> m26_23  [key=2, style=dotted, color=red];
m26_34 -> m26_42  [key=1, style=dashed, color=red, label="lambda expression"];
m26_35 -> m26_36  [key=0, style=solid];
m26_35 -> m26_22  [key=2, style=dotted];
m26_35 -> m26_23  [key=2, style=dotted];
m26_35 -> m26_48  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_36 -> m26_37  [key=0, style=solid];
m26_36 -> m26_12  [key=2, style=dotted];
m26_36 -> m26_13  [key=2, style=dotted];
m26_37 -> m26_38  [key=0, style=solid];
m26_37 -> m26_41  [key=2, style=dotted];
m26_38 -> m26_32  [key=0, style=bold, color=blue];
m26_15 -> m26_16  [key=0, style=solid];
m26_16 -> m26_17  [key=0, style=solid];
m26_16 -> m26_6  [key=2, style=dotted];
m26_16 -> m26_25  [key=1, style=dashed, color=darkseagreen4, label=validator];
m26_16 -> m26_18  [key=1, style=dashed, color=darkseagreen4, label=validator];
m26_17 -> m26_18  [key=0, style=solid];
m26_17 -> m26_22  [key=2, style=dotted];
m26_17 -> m26_23  [key=2, style=dotted];
m26_17 -> m26_24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_18 -> m26_19  [key=0, style=solid];
m26_18 -> m26_22  [key=2, style=dotted];
m26_18 -> m26_23  [key=2, style=dotted];
m26_18 -> m26_28  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_19 -> m26_20  [key=0, style=solid];
m26_19 -> m26_12  [key=2, style=dotted];
m26_19 -> m26_13  [key=2, style=dotted];
m26_20 -> m26_21  [key=0, style=solid];
m26_20 -> m26_14  [key=2, style=dotted];
m26_21 -> m26_15  [key=0, style=bold, color=blue];
m26_74 -> m26_75  [key=0, style=solid];
m26_25 -> m26_26  [key=0, style=solid];
m26_25 -> m26_27  [key=2, style=dotted];
m26_24 -> m26_25  [key=0, style=solid];
m26_28 -> m26_29  [key=0, style=solid];
m26_26 -> m26_24  [key=0, style=bold, color=blue];
m26_29 -> m26_30  [key=0, style=solid];
m26_29 -> m26_31  [key=2, style=dotted];
m26_30 -> m26_28  [key=0, style=bold, color=blue];
m26_43 -> m26_44  [key=0, style=solid, color=red];
m26_43 -> m26_27  [key=2, style=dotted, color=red];
m26_42 -> m26_43  [key=0, style=solid, color=red];
m26_48 -> m26_49  [key=0, style=solid];
m26_44 -> m26_42  [key=0, style=bold, color=blue];
m26_45 -> m26_46  [key=0, style=solid, color=red];
m26_46 -> m26_47  [key=0, style=solid, color=red];
m26_47 -> m26_45  [key=0, style=bold, color=blue];
m26_49 -> m26_50  [key=0, style=solid];
m26_49 -> m26_31  [key=2, style=dotted];
m26_50 -> m26_48  [key=0, style=bold, color=blue];
m26_62 -> m26_63  [key=0, style=solid];
m26_62 -> m26_27  [key=2, style=dotted];
m26_58 -> m26_59  [key=0, style=solid];
m26_61 -> m26_62  [key=0, style=solid];
m26_59 -> m26_60  [key=0, style=solid];
m26_59 -> m26_31  [key=2, style=dotted];
m26_60 -> m26_58  [key=0, style=bold, color=blue];
m26_63 -> m26_61  [key=0, style=bold, color=blue];
m26_75 -> m26_76  [key=0, style=solid];
m26_75 -> m26_27  [key=2, style=dotted];
m26_71 -> m26_72  [key=0, style=solid];
m26_72 -> m26_73  [key=0, style=solid];
m26_72 -> m26_31  [key=2, style=dotted];
m26_73 -> m26_71  [key=0, style=bold, color=blue];
m26_76 -> m26_74  [key=0, style=bold, color=blue];
m26_64 -> m26_65  [key=0, style=solid];
m26_65 -> m26_66  [key=0, style=solid];
m26_65 -> m26_12  [key=2, style=dotted];
m26_65 -> m26_68  [key=1, style=dashed, color=darkseagreen4, label=model];
m26_65 -> m26_69  [key=1, style=dashed, color=darkseagreen4, label=model];
m26_65 -> m26_75  [key=1, style=dashed, color=darkseagreen4, label=model];
m26_66 -> m26_67  [key=0, style=solid];
m26_66 -> m26_6  [key=2, style=dotted];
m26_66 -> m26_69  [key=1, style=dashed, color=darkseagreen4, label=validator];
m26_66 -> m26_75  [key=1, style=dashed, color=darkseagreen4, label=validator];
m26_68 -> m26_69  [key=0, style=solid];
m26_68 -> m26_13  [key=2, style=dotted];
m26_69 -> m26_70  [key=0, style=solid];
m26_69 -> m26_22  [key=2, style=dotted];
m26_69 -> m26_57  [key=2, style=dotted];
m26_69 -> m26_74  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_67 -> m26_68  [key=0, style=solid];
m26_67 -> m26_22  [key=2, style=dotted];
m26_67 -> m26_23  [key=2, style=dotted];
m26_67 -> m26_71  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_70 -> m26_64  [key=0, style=bold, color=blue];
m26_77 -> m26_1  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture"];
m26_77 -> m26_2  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture"];
m26_77 -> m26_3  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture"];
m26_77 -> m26_9  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture"];
m26_77 -> m26_18  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture"];
m26_77 -> m26_29  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture"];
m26_77 -> m26_19  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture"];
m26_77 -> m26_35  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture"];
m26_77 -> m26_49  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture"];
m26_77 -> m26_36  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture"];
m26_77 -> m26_53  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture"];
m26_77 -> m26_59  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture"];
m26_77 -> m26_54  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture"];
m26_77 -> m26_55  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture"];
m26_77 -> m26_62  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture"];
m26_77 -> m26_67  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture"];
m26_77 -> m26_72  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture"];
m26_77 -> m26_68  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Validation.ModuleExtensionsFixture"];
m26_78 -> m26_25  [key=1, style=dashed, color=darkseagreen4, label=validator];
m26_79 -> m26_43  [key=1, style=dashed, color=red, label=validator];
m26_80 -> m26_62  [key=1, style=dashed, color=darkseagreen4, label=validator];
m26_81 -> m26_75  [key=1, style=dashed, color=darkseagreen4, label=model];
m26_82 -> m26_75  [key=1, style=dashed, color=darkseagreen4, label=validator];
m27_9 -> m27_10  [key=0, style=solid];
m27_10 -> m27_11  [key=0, style=solid];
m27_10 -> m27_12  [key=0, style=solid];
m27_10 -> m27_18  [key=2, style=dotted];
m27_11 -> m27_10  [key=0, style=solid];
m27_11 -> m27_19  [key=2, style=dotted];
m27_12 -> m27_13  [key=0, style=solid];
m27_12 -> m27_20  [key=2, style=dotted];
m27_13 -> m27_14  [key=0, style=solid];
m27_13 -> m27_15  [key=0, style=solid];
m27_14 -> m27_15  [key=0, style=solid];
m27_14 -> m27_19  [key=2, style=dotted];
m27_15 -> m27_16  [key=0, style=solid];
m27_15 -> m27_17  [key=0, style=solid];
m27_16 -> m27_17  [key=0, style=solid];
m27_16 -> m27_21  [key=2, style=dotted];
m27_17 -> m27_9  [key=0, style=bold, color=blue];
m27_0 -> m27_1  [key=0, style=solid];
m27_1 -> m27_2  [key=0, style=solid];
m27_1 -> m27_6  [key=2, style=dotted];
m27_2 -> m27_3  [key=0, style=solid];
m27_2 -> m27_7  [key=2, style=dotted];
m27_3 -> m27_4  [key=0, style=solid];
m27_3 -> m27_8  [key=2, style=dotted];
m27_4 -> m27_5  [key=0, style=solid];
m27_5 -> m27_0  [key=0, style=bold, color=blue];
m27_22 -> m27_1  [key=1, style=dashed, color=darkseagreen4, label="Nancy.NancyContext"];
m27_22 -> m27_2  [key=1, style=dashed, color=darkseagreen4, label="Nancy.NancyContext"];
m27_22 -> m27_3  [key=1, style=dashed, color=darkseagreen4, label="Nancy.NancyContext"];
m27_22 -> m27_4  [key=1, style=dashed, color=darkseagreen4, label="Nancy.NancyContext"];
m27_22 -> m27_10  [key=1, style=dashed, color=darkseagreen4, label="Nancy.NancyContext"];
m27_22 -> m27_12  [key=1, style=dashed, color=darkseagreen4, label="Nancy.NancyContext"];
m27_22 -> m27_13  [key=1, style=dashed, color=darkseagreen4, label="Nancy.NancyContext"];
m27_22 -> m27_14  [key=1, style=dashed, color=darkseagreen4, label="Nancy.NancyContext"];
m27_22 -> m27_15  [key=1, style=dashed, color=darkseagreen4, label="Nancy.NancyContext"];
m27_22 -> m27_16  [key=1, style=dashed, color=darkseagreen4, label="Nancy.NancyContext"];
m28_19 -> m28_20  [key=0, style=solid];
m28_19 -> m28_21  [key=1, style=dashed, color=darkseagreen4, label=string];
m28_19 -> m28_22  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<Nancy.Routing.RouteDescription>"];
m28_20 -> m28_21  [key=0, style=solid];
m28_20 -> m28_22  [key=0, style=solid];
m28_20 -> m28_24  [key=2, style=dotted];
m28_21 -> m28_22  [key=0, style=solid];
m28_21 -> m28_25  [key=2, style=dotted];
m28_22 -> m28_23  [key=0, style=solid];
m28_22 -> m28_14  [key=2, style=dotted];
m28_22 -> m28_26  [key=2, style=dotted];
m28_22 -> m28_27  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_23 -> m28_19  [key=0, style=bold, color=blue];
m28_0 -> m28_1  [key=0, style=solid];
m28_0 -> m28_2  [key=1, style=dashed, color=darkseagreen4, label="Nancy.INancyModuleCatalog"];
m28_1 -> m28_2  [key=0, style=solid];
m28_2 -> m28_3  [key=0, style=solid];
m28_2 -> m28_4  [key=2, style=dotted];
m28_2 -> m28_5  [key=2, style=dotted];
m28_2 -> m28_6  [key=2, style=dotted];
m28_3 -> m28_0  [key=0, style=bold, color=blue];
m28_6 -> m28_7  [key=0, style=solid];
m28_7 -> m28_8  [key=0, style=solid];
m28_7 -> m28_11  [key=0, style=solid];
m28_7 -> m28_10  [key=1, style=dashed, color=darkseagreen4, label=module];
m28_8 -> m28_9  [key=0, style=solid];
m28_8 -> m28_12  [key=2, style=dotted];
m28_10 -> m28_7  [key=0, style=solid];
m28_10 -> m28_14  [key=2, style=dotted];
m28_10 -> m28_15  [key=2, style=dotted];
m28_10 -> m28_16  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_9 -> m28_10  [key=0, style=solid];
m28_9 -> m28_13  [key=2, style=dotted];
m28_11 -> m28_6  [key=0, style=bold, color=blue];
m28_36 -> m28_37  [key=0, style=solid];
m28_16 -> m28_17  [key=0, style=solid];
m28_17 -> m28_18  [key=0, style=solid];
m28_18 -> m28_16  [key=0, style=bold, color=blue];
m28_27 -> m28_28  [key=0, style=solid];
m28_28 -> m28_29  [key=0, style=solid];
m28_28 -> m28_30  [key=2, style=dotted];
m28_29 -> m28_27  [key=0, style=bold, color=blue];
m28_37 -> m28_38  [key=0, style=solid];
m28_38 -> m28_36  [key=0, style=bold, color=blue];
m28_31 -> m28_32  [key=0, style=solid];
m28_32 -> m28_33  [key=0, style=solid];
m28_32 -> m28_34  [key=2, style=dotted];
m28_32 -> m28_35  [key=2, style=dotted];
m28_32 -> m28_36  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_33 -> m28_31  [key=0, style=bold, color=blue];
m28_39 -> m28_1  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Routing.RouteCache"];
m28_39 -> m28_2  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Routing.RouteCache"];
m28_39 -> m28_9  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Routing.RouteCache"];
m28_39 -> m28_10  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Routing.RouteCache"];
m28_39 -> m28_20  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Routing.RouteCache"];
m28_39 -> m28_21  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Routing.RouteCache"];
m28_39 -> m28_22  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Routing.RouteCache"];
m28_39 -> m28_32  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Routing.RouteCache"];
m29_15 -> m29_16  [key=0, style=solid, color=green];
m29_16 -> m29_17  [key=0, style=solid, color=green];
m29_16 -> m29_18  [key=2, style=dotted, color=green];
m29_17 -> m29_15  [key=0, style=bold, color=blue];
m29_7 -> m29_8  [key=0, style=solid];
m29_7 -> m29_9  [key=1, style=dashed, color=darkseagreen4, label=string];
m29_7 -> m29_14  [key=3, color=darkorchid, style=bold, label="method methodReturn bool TryMatch"];
m29_8 -> m29_9  [key=0, style=solid];
m29_8 -> m29_4  [key=2, style=dotted];
m29_8 -> m29_11  [key=2, style=dotted];
m29_8 -> m29_12  [key=2, style=dotted];
m29_8 -> m29_13  [key=2, style=dotted];
m29_9 -> m29_10  [key=0, style=solid];
m29_9 -> m29_14  [key=2, style=dotted];
m29_10 -> m29_7  [key=0, style=bold, color=blue];
m29_0 -> m29_1  [key=0, style=solid];
m29_1 -> m29_2  [key=0, style=solid];
m29_1 -> m29_3  [key=2, style=dotted];
m29_1 -> m29_4  [key=2, style=dotted];
m29_1 -> m29_5  [key=2, style=dotted];
m29_1 -> m29_6  [key=2, style=dotted];
m29_2 -> m29_0  [key=0, style=bold, color=blue];
m29_14 -> m29_19  [key=0, style=solid];
m29_14 -> m29_7  [key=3, color=darkorchid, style=bold, label="Parameter variable T matchedValue"];
m29_14 -> m29_8  [key=3, color=darkorchid, style=bold, label="Parameter variable string[] parameters"];
m29_19 -> m29_14  [key=0, style=bold, color=blue];
m29_20 -> m29_1  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Routing.Constraints.ParameterizedRouteSegmentConstraintBase<T>"];
m29_20 -> m29_9  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Routing.Constraints.ParameterizedRouteSegmentConstraintBase<T>"];
m30_444 -> m30_445  [key=0, style=solid];
m30_445 -> m30_446  [key=0, style=solid];
m30_445 -> m30_83  [key=2, style=dotted];
m30_446 -> m30_447  [key=0, style=solid];
m30_446 -> m30_84  [key=2, style=dotted];
m30_446 -> m30_448  [key=1, style=dashed, color=darkseagreen4, label=context];
m30_447 -> m30_448  [key=0, style=solid];
m30_447 -> m30_65  [key=2, style=dotted];
m30_447 -> m30_452  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_448 -> m30_449  [key=0, style=solid];
m30_448 -> m30_85  [key=2, style=dotted];
m30_448 -> m30_450  [key=1, style=dashed, color=darkseagreen4, label=resolvedRoute];
m30_449 -> m30_450  [key=0, style=solid];
m30_449 -> m30_329  [key=2, style=dotted];
m30_450 -> m30_451  [key=0, style=solid];
m30_450 -> m30_342  [key=2, style=dotted];
m30_451 -> m30_444  [key=0, style=bold, color=blue];
m30_478 -> m30_479  [key=0, style=solid];
m30_479 -> m30_480  [key=0, style=solid];
m30_479 -> m30_83  [key=2, style=dotted];
m30_480 -> m30_481  [key=0, style=solid];
m30_480 -> m30_84  [key=2, style=dotted];
m30_480 -> m30_482  [key=1, style=dashed, color=darkseagreen4, label=context];
m30_481 -> m30_482  [key=0, style=solid];
m30_481 -> m30_65  [key=2, style=dotted];
m30_481 -> m30_487  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_482 -> m30_483  [key=0, style=solid];
m30_482 -> m30_85  [key=2, style=dotted];
m30_482 -> m30_484  [key=1, style=dashed, color=darkseagreen4, label=route];
m30_482 -> m30_485  [key=1, style=dashed, color=darkseagreen4, label=route];
m30_483 -> m30_484  [key=0, style=solid];
m30_483 -> m30_329  [key=2, style=dotted];
m30_484 -> m30_485  [key=0, style=solid];
m30_484 -> m30_342  [key=2, style=dotted];
m30_485 -> m30_486  [key=0, style=solid];
m30_485 -> m30_355  [key=2, style=dotted];
m30_485 -> m30_356  [key=2, style=dotted];
m30_485 -> m30_87  [key=2, style=dotted];
m30_486 -> m30_478  [key=0, style=bold, color=blue];
m30_270 -> m30_271  [key=0, style=solid];
m30_271 -> m30_272  [key=0, style=solid];
m30_271 -> m30_83  [key=2, style=dotted];
m30_271 -> m30_275  [key=1, style=dashed, color=darkseagreen4, label=request];
m30_271 -> m30_282  [key=1, style=dashed, color=darkseagreen4, label=request];
m30_272 -> m30_273  [key=0, style=solid];
m30_272 -> m30_84  [key=2, style=dotted];
m30_272 -> m30_274  [key=1, style=dashed, color=darkseagreen4, label=context];
m30_275 -> m30_276  [key=0, style=solid];
m30_275 -> m30_15  [key=2, style=dotted];
m30_275 -> m30_114  [key=2, style=dotted];
m30_275 -> m30_281  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_273 -> m30_274  [key=0, style=solid];
m30_273 -> m30_65  [key=2, style=dotted];
m30_273 -> m30_277  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_274 -> m30_275  [key=0, style=solid];
m30_274 -> m30_85  [key=2, style=dotted];
m30_276 -> m30_270  [key=0, style=bold, color=blue];
m30_75 -> m30_76  [key=0, style=solid];
m30_75 -> m30_83  [key=2, style=dotted];
m30_77 -> m30_78  [key=0, style=solid];
m30_77 -> m30_41  [key=2, style=dotted];
m30_77 -> m30_79  [key=1, style=dashed, color=darkseagreen4, label=results];
m30_77 -> m30_65  [key=2, style=dotted];
m30_77 -> m30_88  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_78 -> m30_79  [key=0, style=solid];
m30_78 -> m30_81  [key=2, style=dotted];
m30_78 -> m30_82  [key=2, style=dotted];
m30_78 -> m30_85  [key=2, style=dotted];
m30_78 -> m30_80  [key=1, style=dashed, color=darkseagreen4, label=resolvedRoute];
m30_79 -> m30_80  [key=0, style=solid];
m30_79 -> m30_81  [key=2, style=dotted];
m30_79 -> m30_82  [key=2, style=dotted];
m30_79 -> m30_86  [key=2, style=dotted];
m30_76 -> m30_77  [key=0, style=solid];
m30_76 -> m30_54  [key=2, style=dotted];
m30_76 -> m30_84  [key=2, style=dotted];
m30_76 -> m30_78  [key=1, style=dashed, color=darkseagreen4, label=context];
m30_80 -> m30_75  [key=0, style=bold, color=blue];
m30_80 -> m30_81  [key=0, style=solid];
m30_80 -> m30_86  [key=2, style=dotted];
m30_61 -> m30_62  [key=0, style=solid];
m30_61 -> m30_14  [key=2, style=dotted];
m30_61 -> m30_42  [key=2, style=dotted];
m30_61 -> m30_63  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_54 -> m30_51  [key=0, style=bold, color=blue];
m30_161 -> m30_162  [key=0, style=solid];
m30_162 -> m30_163  [key=0, style=solid];
m30_162 -> m30_83  [key=2, style=dotted];
m30_162 -> m30_165  [key=1, style=dashed, color=darkseagreen4, label=request];
m30_162 -> m30_180  [key=1, style=dashed, color=darkseagreen4, label=request];
m30_162 -> m30_166  [key=1, style=dashed, color=darkseagreen4, label=request];
m30_162 -> m30_186  [key=1, style=dashed, color=darkseagreen4, label=request];
m30_162 -> m30_167  [key=1, style=dashed, color=darkseagreen4, label=request];
m30_162 -> m30_192  [key=1, style=dashed, color=darkseagreen4, label=request];
m30_163 -> m30_164  [key=0, style=solid];
m30_163 -> m30_84  [key=2, style=dotted];
m30_163 -> m30_168  [key=1, style=dashed, color=darkseagreen4, label=context];
m30_163 -> m30_169  [key=1, style=dashed, color=darkseagreen4, label=context];
m30_163 -> m30_198  [key=1, style=dashed, color=darkseagreen4, label=context];
m30_165 -> m30_166  [key=0, style=solid];
m30_165 -> m30_15  [key=2, style=dotted];
m30_165 -> m30_50  [key=2, style=dotted];
m30_165 -> m30_17  [key=2, style=dotted];
m30_165 -> m30_179  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_165 -> m30_183  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator"];
m30_166 -> m30_167  [key=0, style=solid];
m30_166 -> m30_15  [key=2, style=dotted];
m30_166 -> m30_50  [key=2, style=dotted];
m30_166 -> m30_17  [key=2, style=dotted];
m30_166 -> m30_185  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_166 -> m30_189  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator"];
m30_167 -> m30_168  [key=0, style=solid];
m30_167 -> m30_15  [key=2, style=dotted];
m30_167 -> m30_50  [key=2, style=dotted];
m30_167 -> m30_17  [key=2, style=dotted];
m30_167 -> m30_191  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_167 -> m30_195  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator"];
m30_164 -> m30_165  [key=0, style=solid];
m30_164 -> m30_65  [key=2, style=dotted];
m30_164 -> m30_171  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_164 -> m30_168  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m30_168 -> m30_169  [key=0, style=solid];
m30_168 -> m30_85  [key=2, style=dotted];
m30_169 -> m30_170  [key=0, style=solid];
m30_169 -> m30_15  [key=2, style=dotted];
m30_169 -> m30_114  [key=2, style=dotted];
m30_169 -> m30_197  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_170 -> m30_161  [key=0, style=bold, color=blue];
m30_49 -> m30_50  [key=0, style=solid];
m30_49 -> m30_47  [key=0, style=bold, color=blue];
m30_49 -> m30_26  [key=0, style=bold, color=blue];
m30_51 -> m30_52  [key=0, style=solid];
m30_51 -> m30_41  [key=2, style=dotted];
m30_51 -> m30_53  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator"];
m30_52 -> m30_53  [key=0, style=solid];
m30_52 -> m30_14  [key=2, style=dotted];
m30_52 -> m30_42  [key=2, style=dotted];
m30_52 -> m30_55  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_52 -> m30_56  [key=2, style=dotted];
m30_50 -> m30_51  [key=0, style=solid];
m30_50 -> m30_52  [key=1, style=dashed, color=darkseagreen4, label=instance];
m30_50 -> m30_56  [key=1, style=dashed, color=darkseagreen4, label=instance];
m30_50 -> m30_54  [key=2, style=dotted];
m30_53 -> m30_49  [key=0, style=bold, color=blue];
m30_53 -> m30_54  [key=0, style=solid];
m30_53 -> m30_57  [key=2, style=dotted];
m30_346 -> m30_347  [key=0, style=solid];
m30_347 -> m30_348  [key=0, style=solid];
m30_347 -> m30_83  [key=2, style=dotted];
m30_348 -> m30_349  [key=0, style=solid];
m30_348 -> m30_84  [key=2, style=dotted];
m30_348 -> m30_350  [key=1, style=dashed, color=darkseagreen4, label=context];
m30_349 -> m30_350  [key=0, style=solid];
m30_349 -> m30_65  [key=2, style=dotted];
m30_349 -> m30_357  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_350 -> m30_351  [key=0, style=solid];
m30_350 -> m30_85  [key=2, style=dotted];
m30_350 -> m30_352  [key=1, style=dashed, color=darkseagreen4, label=route];
m30_350 -> m30_353  [key=1, style=dashed, color=darkseagreen4, label=route];
m30_351 -> m30_352  [key=0, style=solid];
m30_351 -> m30_329  [key=2, style=dotted];
m30_352 -> m30_353  [key=0, style=solid];
m30_352 -> m30_342  [key=2, style=dotted];
m30_353 -> m30_354  [key=0, style=solid];
m30_353 -> m30_355  [key=2, style=dotted];
m30_353 -> m30_356  [key=2, style=dotted];
m30_353 -> m30_87  [key=2, style=dotted];
m30_354 -> m30_346  [key=0, style=bold, color=blue];
m30_105 -> m30_106  [key=0, style=solid];
m30_106 -> m30_107  [key=0, style=solid];
m30_106 -> m30_83  [key=2, style=dotted];
m30_106 -> m30_110  [key=1, style=dashed, color=darkseagreen4, label=request];
m30_106 -> m30_123  [key=1, style=dashed, color=darkseagreen4, label=request];
m30_107 -> m30_108  [key=0, style=solid];
m30_107 -> m30_84  [key=2, style=dotted];
m30_107 -> m30_111  [key=1, style=dashed, color=darkseagreen4, label=context];
m30_107 -> m30_112  [key=1, style=dashed, color=darkseagreen4, label=context];
m30_107 -> m30_129  [key=1, style=dashed, color=darkseagreen4, label=context];
m30_110 -> m30_111  [key=0, style=solid];
m30_110 -> m30_15  [key=2, style=dotted];
m30_110 -> m30_50  [key=2, style=dotted];
m30_110 -> m30_17  [key=2, style=dotted];
m30_110 -> m30_122  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_110 -> m30_126  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator"];
m30_108 -> m30_109  [key=0, style=solid];
m30_108 -> m30_65  [key=2, style=dotted];
m30_108 -> m30_115  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_108 -> m30_111  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m30_111 -> m30_112  [key=0, style=solid];
m30_111 -> m30_85  [key=2, style=dotted];
m30_112 -> m30_113  [key=0, style=solid];
m30_112 -> m30_15  [key=2, style=dotted];
m30_112 -> m30_114  [key=2, style=dotted];
m30_112 -> m30_128  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_109 -> m30_110  [key=0, style=solid];
m30_109 -> m30_18  [key=2, style=dotted];
m30_109 -> m30_120  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModuleConfigurator"];
m30_113 -> m30_105  [key=0, style=bold, color=blue];
m30_466 -> m30_467  [key=0, style=solid];
m30_467 -> m30_468  [key=0, style=solid];
m30_467 -> m30_83  [key=2, style=dotted];
m30_467 -> m30_473  [key=1, style=dashed, color=darkseagreen4, label=request];
m30_468 -> m30_469  [key=0, style=solid];
m30_468 -> m30_84  [key=2, style=dotted];
m30_468 -> m30_470  [key=1, style=dashed, color=darkseagreen4, label=context];
m30_473 -> m30_474  [key=0, style=solid];
m30_473 -> m30_87  [key=2, style=dotted];
m30_469 -> m30_470  [key=0, style=solid];
m30_469 -> m30_65  [key=2, style=dotted];
m30_469 -> m30_475  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_470 -> m30_471  [key=0, style=solid];
m30_470 -> m30_85  [key=2, style=dotted];
m30_470 -> m30_472  [key=1, style=dashed, color=darkseagreen4, label=resolvedRoute];
m30_470 -> m30_473  [key=1, style=dashed, color=darkseagreen4, label=resolvedRoute];
m30_471 -> m30_472  [key=0, style=solid];
m30_471 -> m30_329  [key=2, style=dotted];
m30_472 -> m30_473  [key=0, style=solid];
m30_472 -> m30_342  [key=2, style=dotted];
m30_474 -> m30_466  [key=0, style=bold, color=blue];
m30_200 -> m30_201  [key=0, style=solid];
m30_201 -> m30_202  [key=0, style=solid];
m30_201 -> m30_83  [key=2, style=dotted];
m30_201 -> m30_205  [key=1, style=dashed, color=darkseagreen4, label=request];
m30_201 -> m30_221  [key=1, style=dashed, color=darkseagreen4, label=request];
m30_201 -> m30_206  [key=1, style=dashed, color=darkseagreen4, label=request];
m30_201 -> m30_227  [key=1, style=dashed, color=darkseagreen4, label=request];
m30_201 -> m30_207  [key=1, style=dashed, color=darkseagreen4, label=request];
m30_201 -> m30_233  [key=1, style=dashed, color=darkseagreen4, label=request];
m30_202 -> m30_203  [key=0, style=solid];
m30_202 -> m30_84  [key=2, style=dotted];
m30_202 -> m30_208  [key=1, style=dashed, color=darkseagreen4, label=context];
m30_202 -> m30_209  [key=1, style=dashed, color=darkseagreen4, label=context];
m30_202 -> m30_239  [key=1, style=dashed, color=darkseagreen4, label=context];
m30_205 -> m30_206  [key=0, style=solid];
m30_205 -> m30_15  [key=2, style=dotted];
m30_205 -> m30_50  [key=2, style=dotted];
m30_205 -> m30_17  [key=2, style=dotted];
m30_205 -> m30_220  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_205 -> m30_224  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator"];
m30_206 -> m30_207  [key=0, style=solid];
m30_206 -> m30_15  [key=2, style=dotted];
m30_206 -> m30_50  [key=2, style=dotted];
m30_206 -> m30_17  [key=2, style=dotted];
m30_206 -> m30_226  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_206 -> m30_230  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator"];
m30_207 -> m30_208  [key=0, style=solid];
m30_207 -> m30_15  [key=2, style=dotted];
m30_207 -> m30_50  [key=2, style=dotted];
m30_207 -> m30_17  [key=2, style=dotted];
m30_207 -> m30_232  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_207 -> m30_236  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator"];
m30_203 -> m30_204  [key=0, style=solid];
m30_203 -> m30_65  [key=2, style=dotted];
m30_203 -> m30_211  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_203 -> m30_208  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m30_208 -> m30_209  [key=0, style=solid];
m30_208 -> m30_85  [key=2, style=dotted];
m30_209 -> m30_210  [key=0, style=solid];
m30_209 -> m30_15  [key=2, style=dotted];
m30_209 -> m30_114  [key=2, style=dotted];
m30_209 -> m30_238  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_204 -> m30_205  [key=0, style=solid];
m30_204 -> m30_18  [key=2, style=dotted];
m30_204 -> m30_218  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModuleConfigurator"];
m30_210 -> m30_200  [key=0, style=bold, color=blue];
m30_58 -> m30_59  [key=0, style=solid];
m30_60 -> m30_61  [key=0, style=solid];
m30_60 -> m30_41  [key=2, style=dotted];
m30_60 -> m30_58  [key=0, style=bold, color=blue];
m30_59 -> m30_60  [key=0, style=solid];
m30_59 -> m30_54  [key=2, style=dotted];
m30_59 -> m30_61  [key=2, style=dotted];
m30_62 -> m30_58  [key=0, style=bold, color=blue];
m30_62 -> m30_63  [key=0, style=solid];
m30_526 -> m30_527  [key=0, style=solid];
m30_527 -> m30_528  [key=0, style=solid];
m30_527 -> m30_513  [key=2, style=dotted];
m30_527 -> m30_529  [key=1, style=dashed, color=darkseagreen4, label=moduleCatalog];
m30_528 -> m30_529  [key=0, style=solid];
m30_528 -> m30_514  [key=2, style=dotted];
m30_528 -> m30_515  [key=2, style=dotted];
m30_528 -> m30_14  [key=2, style=dotted];
m30_529 -> m30_530  [key=0, style=solid];
m30_529 -> m30_73  [key=2, style=dotted];
m30_529 -> m30_532  [key=1, style=dashed, color=darkseagreen4, label=specificResolver];
m30_530 -> m30_531  [key=0, style=solid];
m30_530 -> m30_83  [key=2, style=dotted];
m30_532 -> m30_533  [key=0, style=solid];
m30_532 -> m30_85  [key=2, style=dotted];
m30_531 -> m30_532  [key=0, style=solid];
m30_531 -> m30_84  [key=2, style=dotted];
m30_531 -> m30_533  [key=1, style=dashed, color=darkseagreen4, label=context];
m30_533 -> m30_534  [key=0, style=solid];
m30_533 -> m30_535  [key=2, style=dotted];
m30_533 -> m30_536  [key=2, style=dotted];
m30_534 -> m30_526  [key=0, style=bold, color=blue];
m30_41 -> m30_42  [key=0, style=solid];
m30_241 -> m30_242  [key=0, style=solid];
m30_242 -> m30_243  [key=0, style=solid];
m30_242 -> m30_83  [key=2, style=dotted];
m30_242 -> m30_245  [key=1, style=dashed, color=darkseagreen4, label=request];
m30_242 -> m30_256  [key=1, style=dashed, color=darkseagreen4, label=request];
m30_242 -> m30_246  [key=1, style=dashed, color=darkseagreen4, label=request];
m30_242 -> m30_262  [key=1, style=dashed, color=darkseagreen4, label=request];
m30_243 -> m30_244  [key=0, style=solid];
m30_243 -> m30_84  [key=2, style=dotted];
m30_243 -> m30_247  [key=1, style=dashed, color=darkseagreen4, label=context];
m30_243 -> m30_248  [key=1, style=dashed, color=darkseagreen4, label=context];
m30_243 -> m30_268  [key=1, style=dashed, color=darkseagreen4, label=context];
m30_245 -> m30_246  [key=0, style=solid];
m30_245 -> m30_15  [key=2, style=dotted];
m30_245 -> m30_50  [key=2, style=dotted];
m30_245 -> m30_17  [key=2, style=dotted];
m30_245 -> m30_255  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_245 -> m30_259  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator"];
m30_246 -> m30_247  [key=0, style=solid];
m30_246 -> m30_15  [key=2, style=dotted];
m30_246 -> m30_50  [key=2, style=dotted];
m30_246 -> m30_17  [key=2, style=dotted];
m30_246 -> m30_261  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_246 -> m30_265  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator"];
m30_244 -> m30_245  [key=0, style=solid];
m30_244 -> m30_65  [key=2, style=dotted];
m30_244 -> m30_250  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_244 -> m30_247  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m30_247 -> m30_248  [key=0, style=solid];
m30_247 -> m30_85  [key=2, style=dotted];
m30_248 -> m30_249  [key=0, style=solid];
m30_248 -> m30_15  [key=2, style=dotted];
m30_248 -> m30_114  [key=2, style=dotted];
m30_248 -> m30_267  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_249 -> m30_241  [key=0, style=bold, color=blue];
m30_67 -> m30_68  [key=0, style=solid];
m30_67 -> m30_70  [key=2, style=dotted];
m30_69 -> m30_70  [key=0, style=solid];
m30_69 -> m30_41  [key=2, style=dotted];
m30_70 -> m30_71  [key=0, style=solid];
m30_70 -> m30_14  [key=2, style=dotted];
m30_70 -> m30_42  [key=2, style=dotted];
m30_70 -> m30_72  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_68 -> m30_69  [key=0, style=solid];
m30_68 -> m30_54  [key=2, style=dotted];
m30_68 -> m30_65  [key=0, style=bold, color=blue];
m30_71 -> m30_67  [key=0, style=bold, color=blue];
m30_71 -> m30_72  [key=0, style=solid];
m30_71 -> m30_73  [key=2, style=dotted];
m30_46 -> m30_47  [key=0, style=solid];
m30_72 -> m30_70  [key=0, style=bold, color=blue];
m30_72 -> m30_73  [key=0, style=solid];
m30_455 -> m30_456  [key=0, style=solid];
m30_456 -> m30_457  [key=0, style=solid];
m30_456 -> m30_83  [key=2, style=dotted];
m30_457 -> m30_458  [key=0, style=solid];
m30_457 -> m30_84  [key=2, style=dotted];
m30_457 -> m30_459  [key=1, style=dashed, color=darkseagreen4, label=context];
m30_458 -> m30_459  [key=0, style=solid];
m30_458 -> m30_65  [key=2, style=dotted];
m30_458 -> m30_463  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_459 -> m30_460  [key=0, style=solid];
m30_459 -> m30_85  [key=2, style=dotted];
m30_460 -> m30_461  [key=0, style=solid];
m30_460 -> m30_356  [key=2, style=dotted];
m30_461 -> m30_462  [key=0, style=solid];
m30_461 -> m30_87  [key=2, style=dotted];
m30_462 -> m30_455  [key=0, style=bold, color=blue];
m30_81 -> m30_82  [key=0, style=solid];
m30_81 -> m30_87  [key=2, style=dotted];
m30_55 -> m30_56  [key=0, style=solid];
m30_537 -> m30_538  [key=0, style=solid];
m30_538 -> m30_539  [key=0, style=solid];
m30_538 -> m30_14  [key=2, style=dotted];
m30_538 -> m30_552  [key=1, style=dashed, color=darkseagreen4, label=moduleCatalog];
m30_538 -> m30_540  [key=1, style=dashed, color=darkseagreen4, label=moduleCatalog];
m30_538 -> m30_556  [key=1, style=dashed, color=darkseagreen4, label=moduleCatalog];
m30_538 -> m30_541  [key=1, style=dashed, color=darkseagreen4, label=moduleCatalog];
m30_538 -> m30_542  [key=1, style=dashed, color=darkseagreen4, label=moduleCatalog];
m30_539 -> m30_540  [key=0, style=solid];
m30_539 -> m30_15  [key=2, style=dotted];
m30_539 -> m30_549  [key=2, style=dotted];
m30_539 -> m30_17  [key=2, style=dotted];
m30_539 -> m30_551  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_540 -> m30_541  [key=0, style=solid];
m30_540 -> m30_15  [key=2, style=dotted];
m30_540 -> m30_549  [key=2, style=dotted];
m30_540 -> m30_17  [key=2, style=dotted];
m30_540 -> m30_555  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_541 -> m30_542  [key=0, style=solid];
m30_541 -> m30_514  [key=2, style=dotted];
m30_541 -> m30_515  [key=2, style=dotted];
m30_541 -> m30_14  [key=2, style=dotted];
m30_542 -> m30_543  [key=0, style=solid];
m30_542 -> m30_550  [key=2, style=dotted];
m30_542 -> m30_545  [key=1, style=dashed, color=darkseagreen4, label=specificResolver];
m30_543 -> m30_544  [key=0, style=solid];
m30_543 -> m30_83  [key=2, style=dotted];
m30_545 -> m30_546  [key=0, style=solid];
m30_545 -> m30_85  [key=2, style=dotted];
m30_545 -> m30_547  [key=1, style=dashed, color=darkseagreen4, label=result];
m30_544 -> m30_545  [key=0, style=solid];
m30_544 -> m30_84  [key=2, style=dotted];
m30_546 -> m30_547  [key=0, style=solid];
m30_546 -> m30_329  [key=2, style=dotted];
m30_547 -> m30_548  [key=0, style=solid];
m30_547 -> m30_329  [key=2, style=dotted];
m30_548 -> m30_537  [key=0, style=bold, color=blue];
m30_333 -> m30_334  [key=0, style=solid];
m30_334 -> m30_335  [key=0, style=solid];
m30_334 -> m30_83  [key=2, style=dotted];
m30_334 -> m30_340  [key=1, style=dashed, color=darkseagreen4, label=request];
m30_335 -> m30_336  [key=0, style=solid];
m30_335 -> m30_84  [key=2, style=dotted];
m30_335 -> m30_337  [key=1, style=dashed, color=darkseagreen4, label=context];
m30_340 -> m30_341  [key=0, style=solid];
m30_340 -> m30_87  [key=2, style=dotted];
m30_336 -> m30_337  [key=0, style=solid];
m30_336 -> m30_65  [key=2, style=dotted];
m30_336 -> m30_343  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_337 -> m30_338  [key=0, style=solid];
m30_337 -> m30_85  [key=2, style=dotted];
m30_337 -> m30_339  [key=1, style=dashed, color=darkseagreen4, label=route];
m30_337 -> m30_340  [key=1, style=dashed, color=darkseagreen4, label=route];
m30_338 -> m30_339  [key=0, style=solid];
m30_338 -> m30_329  [key=2, style=dotted];
m30_339 -> m30_340  [key=0, style=solid];
m30_339 -> m30_342  [key=2, style=dotted];
m30_341 -> m30_333  [key=0, style=bold, color=blue];
m30_0 -> m30_1  [key=0, style=solid];
m30_2 -> m30_3  [key=0, style=solid, color=green];
m30_2 -> m30_13  [key=2, style=dotted, color=green];
m30_2 -> m30_15  [key=2, style=dotted];
m30_2 -> m30_16  [key=2, style=dotted];
m30_2 -> m30_19  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_2 -> m30_23  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_1 -> m30_2  [key=0, style=solid, color=green];
m30_1 -> m30_12  [key=2, style=dotted];
m30_1 -> m30_14  [key=2, style=dotted];
m30_3 -> m30_4  [key=0, style=solid];
m30_3 -> m30_14  [key=2, style=dotted];
m30_3 -> m30_15  [key=2, style=dotted];
m30_3 -> m30_26  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_5 -> m30_6  [key=0, style=solid, color=green];
m30_5 -> m30_13  [key=2, style=dotted, color=green];
m30_4 -> m30_5  [key=0, style=solid, color=green];
m30_4 -> m30_12  [key=2, style=dotted];
m30_4 -> m30_15  [key=2, style=dotted];
m30_4 -> m30_17  [key=2, style=dotted];
m30_4 -> m30_26  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_6 -> m30_7  [key=0, style=solid];
m30_6 -> m30_14  [key=2, style=dotted];
m30_6 -> m30_15  [key=2, style=dotted];
m30_6 -> m30_33  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_6 -> m30_18  [key=2, style=dotted];
m30_6 -> m30_34  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModuleConfigurator"];
m30_7 -> m30_8  [key=0, style=solid];
m30_7 -> m30_16  [key=2, style=dotted];
m30_7 -> m30_17  [key=2, style=dotted];
m30_7 -> m30_18  [key=2, style=dotted];
m30_7 -> m30_15  [key=2, style=dotted];
m30_7 -> m30_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_7 -> m30_40  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_9 -> m30_10  [key=0, style=solid, color=red];
m30_9 -> m30_19  [key=2, style=dotted];
m30_9 -> m30_20  [key=2, style=dotted];
m30_9 -> m30_21  [key=2, style=dotted];
m30_9 -> m30_15  [key=2, style=dotted, color=red];
m30_9 -> m30_16  [key=2, style=dotted, color=red];
m30_9 -> m30_43  [key=1, style=dashed, color=red, label="lambda expression"];
m30_9 -> m30_47  [key=1, style=dashed, color=red, label="lambda expression"];
m30_10 -> m30_11  [key=0, style=solid];
m30_10 -> m30_22  [key=2, style=dotted];
m30_10 -> m30_14  [key=2, style=dotted];
m30_8 -> m30_9  [key=0, style=solid, color=red];
m30_8 -> m30_14  [key=2, style=dotted];
m30_11 -> m30_0  [key=0, style=bold, color=blue];
m30_11 -> m30_12  [key=0, style=solid];
m30_11 -> m30_14  [key=2, style=dotted];
m30_21 -> m30_19  [key=0, style=bold, color=blue];
m30_66 -> m30_67  [key=0, style=solid];
m30_66 -> m30_69  [key=2, style=dotted];
m30_19 -> m30_20  [key=0, style=solid];
m30_23 -> m30_24  [key=0, style=solid, color=green];
m30_26 -> m30_27  [key=0, style=solid];
m30_26 -> m30_31  [key=0, style=solid, color=green];
m30_34 -> m30_35  [key=0, style=solid];
m30_34 -> m30_36  [key=2, style=dotted];
m30_34 -> m30_29  [key=2, style=dotted];
m30_37 -> m30_38  [key=0, style=solid];
m30_37 -> m30_41  [key=2, style=dotted];
m30_40 -> m30_41  [key=0, style=solid];
m30_40 -> m30_36  [key=0, style=bold, color=blue];
m30_43 -> m30_44  [key=0, style=solid];
m30_47 -> m30_48  [key=0, style=solid, color=red];
m30_47 -> m30_52  [key=1, style=dashed, color=darkseagreen4, label="?"];
m30_47 -> m30_29  [key=2, style=dotted];
m30_20 -> m30_21  [key=0, style=solid];
m30_20 -> m30_22  [key=2, style=dotted];
m30_24 -> m30_25  [key=0, style=solid, color=green];
m30_25 -> m30_23  [key=0, style=bold, color=blue];
m30_27 -> m30_28  [key=0, style=solid];
m30_27 -> m30_29  [key=2, style=dotted];
m30_27 -> m30_49  [key=0, style=solid];
m30_28 -> m30_26  [key=0, style=bold, color=blue];
m30_30 -> m30_31  [key=0, style=solid];
m30_31 -> m30_32  [key=0, style=solid];
m30_31 -> m30_28  [key=0, style=solid, color=green];
m30_32 -> m30_30  [key=0, style=bold, color=blue];
m30_33 -> m30_34  [key=0, style=solid];
m30_35 -> m30_33  [key=0, style=bold, color=blue];
m30_38 -> m30_39  [key=0, style=solid];
m30_38 -> m30_29  [key=2, style=dotted];
m30_38 -> m30_14  [key=2, style=dotted];
m30_38 -> m30_42  [key=2, style=dotted];
m30_38 -> m30_43  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_39 -> m30_37  [key=0, style=bold, color=blue];
m30_39 -> m30_40  [key=0, style=solid];
m30_39 -> m30_14  [key=2, style=dotted];
m30_39 -> m30_42  [key=2, style=dotted];
m30_39 -> m30_46  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_42 -> m30_40  [key=0, style=bold, color=blue];
m30_44 -> m30_45  [key=0, style=solid];
m30_44 -> m30_46  [key=2, style=dotted];
m30_44 -> m30_29  [key=2, style=dotted];
m30_45 -> m30_43  [key=0, style=bold, color=blue];
m30_48 -> m30_49  [key=0, style=solid, color=red];
m30_48 -> m30_50  [key=2, style=dotted, color=red];
m30_48 -> m30_52  [key=1, style=dashed, color=red, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator"];
m30_48 -> m30_53  [key=1, style=dashed, color=red, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator"];
m30_48 -> m30_46  [key=0, style=bold, color=blue];
m30_63 -> m30_64  [key=0, style=solid];
m30_64 -> m30_62  [key=0, style=bold, color=blue];
m30_64 -> m30_65  [key=0, style=solid];
m30_64 -> m30_66  [key=2, style=dotted];
m30_64 -> m30_29  [key=2, style=dotted];
m30_88 -> m30_89  [key=0, style=solid];
m30_89 -> m30_90  [key=0, style=solid];
m30_89 -> m30_91  [key=2, style=dotted];
m30_90 -> m30_88  [key=0, style=bold, color=blue];
m30_102 -> m30_103  [key=0, style=solid];
m30_103 -> m30_104  [key=0, style=solid];
m30_103 -> m30_91  [key=2, style=dotted];
m30_104 -> m30_102  [key=0, style=bold, color=blue];
m30_123 -> m30_124  [key=0, style=solid];
m30_123 -> m30_46  [key=2, style=dotted];
m30_129 -> m30_130  [key=0, style=solid];
m30_129 -> m30_131  [key=2, style=dotted];
m30_115 -> m30_116  [key=0, style=solid];
m30_115 -> m30_117  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator"];
m30_120 -> m30_121  [key=0, style=solid];
m30_120 -> m30_36  [key=2, style=dotted];
m30_122 -> m30_123  [key=0, style=solid];
m30_126 -> m30_127  [key=0, style=solid];
m30_126 -> m30_56  [key=2, style=dotted];
m30_126 -> m30_57  [key=2, style=dotted];
m30_128 -> m30_129  [key=0, style=solid];
m30_116 -> m30_117  [key=0, style=solid];
m30_116 -> m30_91  [key=2, style=dotted];
m30_117 -> m30_118  [key=0, style=solid];
m30_117 -> m30_91  [key=2, style=dotted];
m30_118 -> m30_115  [key=0, style=bold, color=blue];
m30_119 -> m30_120  [key=0, style=solid];
m30_121 -> m30_119  [key=0, style=bold, color=blue];
m30_124 -> m30_122  [key=0, style=bold, color=blue];
m30_125 -> m30_126  [key=0, style=solid];
m30_127 -> m30_125  [key=0, style=bold, color=blue];
m30_130 -> m30_128  [key=0, style=bold, color=blue];
m30_146 -> m30_147  [key=0, style=solid];
m30_146 -> m30_148  [key=2, style=dotted];
m30_153 -> m30_154  [key=0, style=solid];
m30_153 -> m30_46  [key=2, style=dotted];
m30_159 -> m30_160  [key=0, style=solid];
m30_159 -> m30_131  [key=2, style=dotted];
m30_141 -> m30_142  [key=0, style=solid];
m30_141 -> m30_143  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator"];
m30_145 -> m30_146  [key=0, style=solid];
m30_150 -> m30_151  [key=0, style=solid];
m30_150 -> m30_56  [key=2, style=dotted];
m30_150 -> m30_57  [key=2, style=dotted];
m30_152 -> m30_153  [key=0, style=solid];
m30_156 -> m30_157  [key=0, style=solid];
m30_156 -> m30_56  [key=2, style=dotted];
m30_156 -> m30_57  [key=2, style=dotted];
m30_158 -> m30_159  [key=0, style=solid];
m30_142 -> m30_143  [key=0, style=solid];
m30_142 -> m30_91  [key=2, style=dotted];
m30_143 -> m30_144  [key=0, style=solid];
m30_143 -> m30_91  [key=2, style=dotted];
m30_144 -> m30_141  [key=0, style=bold, color=blue];
m30_147 -> m30_145  [key=0, style=bold, color=blue];
m30_149 -> m30_150  [key=0, style=solid];
m30_151 -> m30_149  [key=0, style=bold, color=blue];
m30_154 -> m30_152  [key=0, style=bold, color=blue];
m30_155 -> m30_156  [key=0, style=solid];
m30_157 -> m30_155  [key=0, style=bold, color=blue];
m30_160 -> m30_158  [key=0, style=bold, color=blue];
m30_180 -> m30_181  [key=0, style=solid];
m30_180 -> m30_148  [key=2, style=dotted];
m30_186 -> m30_187  [key=0, style=solid];
m30_186 -> m30_148  [key=2, style=dotted];
m30_192 -> m30_193  [key=0, style=solid];
m30_192 -> m30_148  [key=2, style=dotted];
m30_198 -> m30_199  [key=0, style=solid];
m30_198 -> m30_131  [key=2, style=dotted];
m30_171 -> m30_172  [key=0, style=solid];
m30_171 -> m30_173  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator"];
m30_171 -> m30_174  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator"];
m30_171 -> m30_175  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator"];
m30_171 -> m30_176  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator"];
m30_171 -> m30_177  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator"];
m30_179 -> m30_180  [key=0, style=solid];
m30_183 -> m30_184  [key=0, style=solid];
m30_183 -> m30_56  [key=2, style=dotted];
m30_185 -> m30_186  [key=0, style=solid];
m30_189 -> m30_190  [key=0, style=solid];
m30_189 -> m30_56  [key=2, style=dotted];
m30_189 -> m30_57  [key=2, style=dotted];
m30_191 -> m30_192  [key=0, style=solid];
m30_195 -> m30_196  [key=0, style=solid];
m30_195 -> m30_56  [key=2, style=dotted];
m30_195 -> m30_57  [key=2, style=dotted];
m30_197 -> m30_198  [key=0, style=solid];
m30_172 -> m30_173  [key=0, style=solid];
m30_172 -> m30_91  [key=2, style=dotted];
m30_173 -> m30_174  [key=0, style=solid];
m30_173 -> m30_91  [key=2, style=dotted];
m30_174 -> m30_175  [key=0, style=solid];
m30_174 -> m30_91  [key=2, style=dotted];
m30_175 -> m30_176  [key=0, style=solid];
m30_175 -> m30_91  [key=2, style=dotted];
m30_176 -> m30_177  [key=0, style=solid];
m30_176 -> m30_91  [key=2, style=dotted];
m30_177 -> m30_178  [key=0, style=solid];
m30_177 -> m30_91  [key=2, style=dotted];
m30_178 -> m30_171  [key=0, style=bold, color=blue];
m30_181 -> m30_179  [key=0, style=bold, color=blue];
m30_182 -> m30_183  [key=0, style=solid];
m30_184 -> m30_182  [key=0, style=bold, color=blue];
m30_187 -> m30_185  [key=0, style=bold, color=blue];
m30_188 -> m30_189  [key=0, style=solid];
m30_190 -> m30_188  [key=0, style=bold, color=blue];
m30_193 -> m30_191  [key=0, style=bold, color=blue];
m30_194 -> m30_195  [key=0, style=solid];
m30_196 -> m30_194  [key=0, style=bold, color=blue];
m30_199 -> m30_197  [key=0, style=bold, color=blue];
m30_221 -> m30_222  [key=0, style=solid];
m30_221 -> m30_46  [key=2, style=dotted];
m30_227 -> m30_228  [key=0, style=solid];
m30_227 -> m30_46  [key=2, style=dotted];
m30_233 -> m30_234  [key=0, style=solid];
m30_233 -> m30_46  [key=2, style=dotted];
m30_239 -> m30_240  [key=0, style=solid];
m30_239 -> m30_131  [key=2, style=dotted];
m30_211 -> m30_212  [key=0, style=solid];
m30_211 -> m30_213  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator"];
m30_211 -> m30_214  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator"];
m30_211 -> m30_215  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator"];
m30_218 -> m30_219  [key=0, style=solid];
m30_218 -> m30_36  [key=2, style=dotted];
m30_220 -> m30_221  [key=0, style=solid];
m30_224 -> m30_225  [key=0, style=solid];
m30_224 -> m30_56  [key=2, style=dotted];
m30_224 -> m30_57  [key=2, style=dotted];
m30_226 -> m30_227  [key=0, style=solid];
m30_230 -> m30_231  [key=0, style=solid];
m30_230 -> m30_56  [key=2, style=dotted];
m30_230 -> m30_57  [key=2, style=dotted];
m30_232 -> m30_233  [key=0, style=solid];
m30_236 -> m30_237  [key=0, style=solid];
m30_236 -> m30_56  [key=2, style=dotted];
m30_236 -> m30_57  [key=2, style=dotted];
m30_238 -> m30_239  [key=0, style=solid];
m30_212 -> m30_213  [key=0, style=solid];
m30_212 -> m30_91  [key=2, style=dotted];
m30_213 -> m30_214  [key=0, style=solid];
m30_213 -> m30_91  [key=2, style=dotted];
m30_214 -> m30_215  [key=0, style=solid];
m30_214 -> m30_91  [key=2, style=dotted];
m30_215 -> m30_216  [key=0, style=solid];
m30_215 -> m30_91  [key=2, style=dotted];
m30_216 -> m30_211  [key=0, style=bold, color=blue];
m30_217 -> m30_218  [key=0, style=solid];
m30_219 -> m30_217  [key=0, style=bold, color=blue];
m30_222 -> m30_220  [key=0, style=bold, color=blue];
m30_223 -> m30_224  [key=0, style=solid];
m30_225 -> m30_223  [key=0, style=bold, color=blue];
m30_228 -> m30_226  [key=0, style=bold, color=blue];
m30_229 -> m30_230  [key=0, style=solid];
m30_231 -> m30_229  [key=0, style=bold, color=blue];
m30_234 -> m30_232  [key=0, style=bold, color=blue];
m30_235 -> m30_236  [key=0, style=solid];
m30_237 -> m30_235  [key=0, style=bold, color=blue];
m30_240 -> m30_238  [key=0, style=bold, color=blue];
m30_256 -> m30_257  [key=0, style=solid];
m30_256 -> m30_46  [key=2, style=dotted];
m30_262 -> m30_263  [key=0, style=solid];
m30_262 -> m30_46  [key=2, style=dotted];
m30_268 -> m30_269  [key=0, style=solid];
m30_268 -> m30_131  [key=2, style=dotted];
m30_250 -> m30_251  [key=0, style=solid];
m30_250 -> m30_252  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator"];
m30_250 -> m30_253  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator"];
m30_255 -> m30_256  [key=0, style=solid];
m30_259 -> m30_260  [key=0, style=solid];
m30_259 -> m30_56  [key=2, style=dotted];
m30_261 -> m30_262  [key=0, style=solid];
m30_265 -> m30_266  [key=0, style=solid];
m30_265 -> m30_56  [key=2, style=dotted];
m30_265 -> m30_57  [key=2, style=dotted];
m30_267 -> m30_268  [key=0, style=solid];
m30_251 -> m30_252  [key=0, style=solid];
m30_251 -> m30_91  [key=2, style=dotted];
m30_252 -> m30_253  [key=0, style=solid];
m30_252 -> m30_91  [key=2, style=dotted];
m30_253 -> m30_254  [key=0, style=solid];
m30_253 -> m30_91  [key=2, style=dotted];
m30_254 -> m30_250  [key=0, style=bold, color=blue];
m30_257 -> m30_255  [key=0, style=bold, color=blue];
m30_258 -> m30_259  [key=0, style=solid];
m30_260 -> m30_258  [key=0, style=bold, color=blue];
m30_263 -> m30_261  [key=0, style=bold, color=blue];
m30_264 -> m30_265  [key=0, style=solid];
m30_266 -> m30_264  [key=0, style=bold, color=blue];
m30_269 -> m30_267  [key=0, style=bold, color=blue];
m30_282 -> m30_283  [key=0, style=solid];
m30_282 -> m30_46  [key=2, style=dotted];
m30_277 -> m30_278  [key=0, style=solid];
m30_281 -> m30_282  [key=0, style=solid];
m30_278 -> m30_279  [key=0, style=solid];
m30_278 -> m30_280  [key=2, style=dotted];
m30_279 -> m30_277  [key=0, style=bold, color=blue];
m30_283 -> m30_281  [key=0, style=bold, color=blue];
m30_295 -> m30_296  [key=0, style=solid];
m30_295 -> m30_46  [key=2, style=dotted];
m30_291 -> m30_292  [key=0, style=solid];
m30_294 -> m30_295  [key=0, style=solid];
m30_292 -> m30_293  [key=0, style=solid];
m30_292 -> m30_280  [key=2, style=dotted];
m30_293 -> m30_291  [key=0, style=bold, color=blue];
m30_296 -> m30_294  [key=0, style=bold, color=blue];
m30_306 -> m30_307  [key=0, style=solid];
m30_306 -> m30_308  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator"];
m30_306 -> m30_309  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator"];
m30_311 -> m30_312  [key=0, style=solid];
m30_314 -> m30_315  [key=0, style=solid];
m30_317 -> m30_318  [key=0, style=solid];
m30_307 -> m30_308  [key=0, style=solid];
m30_307 -> m30_280  [key=2, style=dotted];
m30_308 -> m30_309  [key=0, style=solid];
m30_308 -> m30_280  [key=2, style=dotted];
m30_309 -> m30_310  [key=0, style=solid];
m30_309 -> m30_280  [key=2, style=dotted];
m30_310 -> m30_306  [key=0, style=bold, color=blue];
m30_312 -> m30_313  [key=0, style=solid];
m30_312 -> m30_46  [key=2, style=dotted];
m30_313 -> m30_311  [key=0, style=bold, color=blue];
m30_315 -> m30_316  [key=0, style=solid];
m30_315 -> m30_46  [key=2, style=dotted];
m30_316 -> m30_314  [key=0, style=bold, color=blue];
m30_318 -> m30_319  [key=0, style=solid];
m30_318 -> m30_46  [key=2, style=dotted];
m30_319 -> m30_317  [key=0, style=bold, color=blue];
m30_330 -> m30_331  [key=0, style=solid];
m30_331 -> m30_332  [key=0, style=solid];
m30_331 -> m30_280  [key=2, style=dotted];
m30_332 -> m30_330  [key=0, style=bold, color=blue];
m30_343 -> m30_344  [key=0, style=solid];
m30_344 -> m30_345  [key=0, style=solid];
m30_344 -> m30_280  [key=2, style=dotted];
m30_345 -> m30_343  [key=0, style=bold, color=blue];
m30_357 -> m30_358  [key=0, style=solid];
m30_357 -> m30_359  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator"];
m30_358 -> m30_359  [key=0, style=solid];
m30_358 -> m30_280  [key=2, style=dotted];
m30_359 -> m30_360  [key=0, style=solid];
m30_359 -> m30_361  [key=2, style=dotted];
m30_360 -> m30_357  [key=0, style=bold, color=blue];
m30_373 -> m30_374  [key=0, style=solid];
m30_373 -> m30_375  [key=2, style=dotted];
m30_369 -> m30_370  [key=0, style=solid];
m30_372 -> m30_373  [key=0, style=solid];
m30_370 -> m30_371  [key=0, style=solid];
m30_370 -> m30_280  [key=2, style=dotted];
m30_371 -> m30_369  [key=0, style=bold, color=blue];
m30_374 -> m30_372  [key=0, style=bold, color=blue];
m30_385 -> m30_386  [key=0, style=solid];
m30_389 -> m30_390  [key=0, style=solid];
m30_389 -> m30_391  [key=2, style=dotted];
m30_392 -> m30_393  [key=0, style=solid];
m30_386 -> m30_387  [key=0, style=solid];
m30_386 -> m30_280  [key=2, style=dotted];
m30_387 -> m30_385  [key=0, style=bold, color=blue];
m30_388 -> m30_389  [key=0, style=solid];
m30_390 -> m30_388  [key=0, style=bold, color=blue];
m30_393 -> m30_394  [key=0, style=solid];
m30_393 -> m30_22  [key=2, style=dotted];
m30_394 -> m30_392  [key=0, style=bold, color=blue];
m30_403 -> m30_404  [key=0, style=solid];
m30_404 -> m30_405  [key=0, style=solid];
m30_404 -> m30_280  [key=2, style=dotted];
m30_405 -> m30_403  [key=0, style=bold, color=blue];
m30_423 -> m30_424  [key=0, style=solid];
m30_426 -> m30_427  [key=0, style=solid];
m30_430 -> m30_431  [key=0, style=solid];
m30_430 -> m30_56  [key=2, style=dotted];
m30_424 -> m30_425  [key=0, style=solid];
m30_424 -> m30_280  [key=2, style=dotted];
m30_425 -> m30_423  [key=0, style=bold, color=blue];
m30_427 -> m30_428  [key=0, style=solid];
m30_427 -> m30_148  [key=2, style=dotted];
m30_428 -> m30_426  [key=0, style=bold, color=blue];
m30_429 -> m30_430  [key=0, style=solid];
m30_431 -> m30_429  [key=0, style=bold, color=blue];
m30_441 -> m30_442  [key=0, style=solid];
m30_442 -> m30_443  [key=0, style=solid];
m30_442 -> m30_280  [key=2, style=dotted];
m30_443 -> m30_441  [key=0, style=bold, color=blue];
m30_452 -> m30_453  [key=0, style=solid];
m30_453 -> m30_454  [key=0, style=solid];
m30_453 -> m30_280  [key=2, style=dotted];
m30_454 -> m30_452  [key=0, style=bold, color=blue];
m30_463 -> m30_464  [key=0, style=solid];
m30_464 -> m30_465  [key=0, style=solid];
m30_464 -> m30_280  [key=2, style=dotted];
m30_465 -> m30_463  [key=0, style=bold, color=blue];
m30_475 -> m30_476  [key=0, style=solid];
m30_476 -> m30_477  [key=0, style=solid];
m30_476 -> m30_280  [key=2, style=dotted];
m30_477 -> m30_475  [key=0, style=bold, color=blue];
m30_487 -> m30_488  [key=0, style=solid];
m30_487 -> m30_489  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator"];
m30_488 -> m30_489  [key=0, style=solid];
m30_488 -> m30_280  [key=2, style=dotted];
m30_489 -> m30_490  [key=0, style=solid];
m30_489 -> m30_361  [key=2, style=dotted];
m30_490 -> m30_487  [key=0, style=bold, color=blue];
m30_499 -> m30_500  [key=0, style=solid];
m30_499 -> m30_501  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator"];
m30_500 -> m30_501  [key=0, style=solid];
m30_500 -> m30_280  [key=2, style=dotted];
m30_501 -> m30_502  [key=0, style=solid];
m30_501 -> m30_503  [key=2, style=dotted];
m30_502 -> m30_499  [key=0, style=bold, color=blue];
m30_552 -> m30_553  [key=0, style=solid];
m30_552 -> m30_554  [key=2, style=dotted];
m30_556 -> m30_557  [key=0, style=solid];
m30_556 -> m30_29  [key=2, style=dotted];
m30_551 -> m30_552  [key=0, style=solid];
m30_555 -> m30_556  [key=0, style=solid];
m30_553 -> m30_551  [key=0, style=bold, color=blue];
m30_557 -> m30_555  [key=0, style=bold, color=blue];
m30_56 -> m30_57  [key=0, style=solid];
m30_56 -> m30_29  [key=2, style=dotted];
m30_73 -> m30_74  [key=0, style=solid];
m30_73 -> m30_29  [key=2, style=dotted];
m30_57 -> m30_55  [key=0, style=bold, color=blue];
m30_65 -> m30_63  [key=0, style=bold, color=blue];
m30_65 -> m30_66  [key=0, style=solid];
m30_74 -> m30_72  [key=0, style=bold, color=blue];
m30_74 -> m30_75  [key=0, style=solid];
m30_12 -> m30_13  [key=0, style=solid];
m30_12 -> m30_15  [key=2, style=dotted];
m30_12 -> m30_16  [key=2, style=dotted];
m30_12 -> m30_58  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_12 -> m30_62  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_13 -> m30_0  [key=0, style=bold, color=blue];
m30_36 -> m30_37  [key=0, style=solid];
m30_504 -> m30_505  [key=0, style=solid];
m30_505 -> m30_506  [key=0, style=solid];
m30_505 -> m30_513  [key=2, style=dotted];
m30_505 -> m30_507  [key=1, style=dashed, color=darkseagreen4, label=moduleCatalog];
m30_506 -> m30_507  [key=0, style=solid];
m30_506 -> m30_514  [key=2, style=dotted];
m30_506 -> m30_515  [key=2, style=dotted];
m30_506 -> m30_14  [key=2, style=dotted];
m30_507 -> m30_508  [key=0, style=solid];
m30_507 -> m30_73  [key=2, style=dotted];
m30_507 -> m30_510  [key=1, style=dashed, color=darkseagreen4, label=specificResolver];
m30_508 -> m30_509  [key=0, style=solid];
m30_508 -> m30_83  [key=2, style=dotted];
m30_510 -> m30_511  [key=0, style=solid];
m30_510 -> m30_85  [key=2, style=dotted];
m30_509 -> m30_510  [key=0, style=solid];
m30_509 -> m30_84  [key=2, style=dotted];
m30_511 -> m30_512  [key=0, style=solid];
m30_511 -> m30_516  [key=2, style=dotted];
m30_512 -> m30_504  [key=0, style=bold, color=blue];
m30_284 -> m30_285  [key=0, style=solid];
m30_285 -> m30_286  [key=0, style=solid];
m30_285 -> m30_83  [key=2, style=dotted];
m30_286 -> m30_287  [key=0, style=solid];
m30_286 -> m30_84  [key=2, style=dotted];
m30_286 -> m30_288  [key=1, style=dashed, color=darkseagreen4, label=context];
m30_286 -> m30_289  [key=1, style=dashed, color=darkseagreen4, label=context];
m30_286 -> m30_295  [key=1, style=dashed, color=darkseagreen4, label=context];
m30_287 -> m30_288  [key=0, style=solid];
m30_287 -> m30_65  [key=2, style=dotted];
m30_287 -> m30_291  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_288 -> m30_289  [key=0, style=solid];
m30_288 -> m30_85  [key=2, style=dotted];
m30_289 -> m30_290  [key=0, style=solid];
m30_289 -> m30_15  [key=2, style=dotted];
m30_289 -> m30_114  [key=2, style=dotted];
m30_289 -> m30_294  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_290 -> m30_284  [key=0, style=bold, color=blue];
m30_297 -> m30_298  [key=0, style=solid];
m30_298 -> m30_299  [key=0, style=solid];
m30_298 -> m30_83  [key=2, style=dotted];
m30_299 -> m30_300  [key=0, style=solid];
m30_299 -> m30_84  [key=2, style=dotted];
m30_299 -> m30_301  [key=1, style=dashed, color=darkseagreen4, label=context];
m30_300 -> m30_301  [key=0, style=solid];
m30_300 -> m30_65  [key=2, style=dotted];
m30_300 -> m30_306  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_301 -> m30_302  [key=0, style=solid];
m30_301 -> m30_85  [key=2, style=dotted];
m30_302 -> m30_303  [key=0, style=solid];
m30_302 -> m30_15  [key=2, style=dotted];
m30_302 -> m30_114  [key=2, style=dotted];
m30_302 -> m30_311  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_303 -> m30_304  [key=0, style=solid];
m30_303 -> m30_15  [key=2, style=dotted];
m30_303 -> m30_114  [key=2, style=dotted];
m30_303 -> m30_314  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_304 -> m30_305  [key=0, style=solid];
m30_304 -> m30_15  [key=2, style=dotted];
m30_304 -> m30_114  [key=2, style=dotted];
m30_304 -> m30_317  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_305 -> m30_297  [key=0, style=bold, color=blue];
m30_92 -> m30_93  [key=0, style=solid];
m30_93 -> m30_94  [key=0, style=solid];
m30_93 -> m30_83  [key=2, style=dotted];
m30_94 -> m30_95  [key=0, style=solid];
m30_94 -> m30_84  [key=2, style=dotted];
m30_94 -> m30_96  [key=1, style=dashed, color=darkseagreen4, label=context];
m30_95 -> m30_96  [key=0, style=solid];
m30_95 -> m30_65  [key=2, style=dotted];
m30_95 -> m30_102  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_96 -> m30_97  [key=0, style=solid];
m30_96 -> m30_85  [key=2, style=dotted];
m30_96 -> m30_98  [key=1, style=dashed, color=darkseagreen4, label=resolvedRoute];
m30_96 -> m30_99  [key=1, style=dashed, color=darkseagreen4, label=resolvedRoute];
m30_97 -> m30_98  [key=0, style=solid];
m30_97 -> m30_86  [key=2, style=dotted];
m30_98 -> m30_99  [key=0, style=solid];
m30_98 -> m30_86  [key=2, style=dotted];
m30_99 -> m30_100  [key=0, style=solid];
m30_99 -> m30_101  [key=2, style=dotted];
m30_100 -> m30_92  [key=0, style=bold, color=blue];
m30_362 -> m30_363  [key=0, style=solid];
m30_363 -> m30_364  [key=0, style=solid];
m30_363 -> m30_83  [key=2, style=dotted];
m30_364 -> m30_365  [key=0, style=solid];
m30_364 -> m30_84  [key=2, style=dotted];
m30_364 -> m30_366  [key=1, style=dashed, color=darkseagreen4, label=context];
m30_364 -> m30_367  [key=1, style=dashed, color=darkseagreen4, label=context];
m30_364 -> m30_373  [key=1, style=dashed, color=darkseagreen4, label=context];
m30_365 -> m30_366  [key=0, style=solid];
m30_365 -> m30_65  [key=2, style=dotted];
m30_365 -> m30_369  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_366 -> m30_367  [key=0, style=solid];
m30_366 -> m30_85  [key=2, style=dotted];
m30_367 -> m30_368  [key=0, style=solid];
m30_367 -> m30_15  [key=2, style=dotted];
m30_367 -> m30_114  [key=2, style=dotted];
m30_367 -> m30_372  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_368 -> m30_362  [key=0, style=bold, color=blue];
m30_395 -> m30_396  [key=0, style=solid];
m30_396 -> m30_397  [key=0, style=solid];
m30_396 -> m30_83  [key=2, style=dotted];
m30_396 -> m30_401  [key=1, style=dashed, color=darkseagreen4, label=request];
m30_397 -> m30_398  [key=0, style=solid];
m30_397 -> m30_84  [key=2, style=dotted];
m30_397 -> m30_399  [key=1, style=dashed, color=darkseagreen4, label=context];
m30_401 -> m30_402  [key=0, style=solid];
m30_401 -> m30_87  [key=2, style=dotted];
m30_398 -> m30_399  [key=0, style=solid];
m30_398 -> m30_65  [key=2, style=dotted];
m30_398 -> m30_403  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_399 -> m30_400  [key=0, style=solid];
m30_399 -> m30_85  [key=2, style=dotted];
m30_399 -> m30_401  [key=1, style=dashed, color=darkseagreen4, label=resolvedRoute];
m30_400 -> m30_401  [key=0, style=solid];
m30_400 -> m30_86  [key=2, style=dotted];
m30_402 -> m30_395  [key=0, style=bold, color=blue];
m30_406 -> m30_407  [key=0, style=solid];
m30_407 -> m30_408  [key=0, style=solid];
m30_407 -> m30_83  [key=2, style=dotted];
m30_407 -> m30_412  [key=1, style=dashed, color=darkseagreen4, label=request];
m30_408 -> m30_409  [key=0, style=solid];
m30_408 -> m30_84  [key=2, style=dotted];
m30_408 -> m30_410  [key=1, style=dashed, color=darkseagreen4, label=context];
m30_412 -> m30_413  [key=0, style=solid];
m30_412 -> m30_87  [key=2, style=dotted];
m30_409 -> m30_410  [key=0, style=solid];
m30_409 -> m30_70  [key=2, style=dotted];
m30_410 -> m30_411  [key=0, style=solid];
m30_410 -> m30_85  [key=2, style=dotted];
m30_410 -> m30_412  [key=1, style=dashed, color=darkseagreen4, label=resolvedRoute];
m30_411 -> m30_412  [key=0, style=solid];
m30_411 -> m30_342  [key=2, style=dotted];
m30_413 -> m30_406  [key=0, style=bold, color=blue];
m30_82 -> m30_74  [key=0, style=bold, color=blue];
m30_132 -> m30_133  [key=0, style=solid];
m30_133 -> m30_134  [key=0, style=solid];
m30_133 -> m30_83  [key=2, style=dotted];
m30_133 -> m30_136  [key=1, style=dashed, color=darkseagreen4, label=request];
m30_133 -> m30_146  [key=1, style=dashed, color=darkseagreen4, label=request];
m30_133 -> m30_137  [key=1, style=dashed, color=darkseagreen4, label=request];
m30_133 -> m30_153  [key=1, style=dashed, color=darkseagreen4, label=request];
m30_134 -> m30_135  [key=0, style=solid];
m30_134 -> m30_84  [key=2, style=dotted];
m30_134 -> m30_138  [key=1, style=dashed, color=darkseagreen4, label=context];
m30_134 -> m30_139  [key=1, style=dashed, color=darkseagreen4, label=context];
m30_134 -> m30_159  [key=1, style=dashed, color=darkseagreen4, label=context];
m30_136 -> m30_137  [key=0, style=solid];
m30_136 -> m30_15  [key=2, style=dotted];
m30_136 -> m30_50  [key=2, style=dotted];
m30_136 -> m30_17  [key=2, style=dotted];
m30_136 -> m30_145  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_136 -> m30_150  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator"];
m30_137 -> m30_138  [key=0, style=solid];
m30_137 -> m30_15  [key=2, style=dotted];
m30_137 -> m30_50  [key=2, style=dotted];
m30_137 -> m30_17  [key=2, style=dotted];
m30_137 -> m30_152  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_137 -> m30_156  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator"];
m30_135 -> m30_136  [key=0, style=solid];
m30_135 -> m30_65  [key=2, style=dotted];
m30_135 -> m30_141  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_135 -> m30_138  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m30_138 -> m30_139  [key=0, style=solid];
m30_138 -> m30_85  [key=2, style=dotted];
m30_139 -> m30_140  [key=0, style=solid];
m30_139 -> m30_15  [key=2, style=dotted];
m30_139 -> m30_114  [key=2, style=dotted];
m30_139 -> m30_158  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_140 -> m30_132  [key=0, style=bold, color=blue];
m30_320 -> m30_321  [key=0, style=solid];
m30_321 -> m30_322  [key=0, style=solid];
m30_321 -> m30_83  [key=2, style=dotted];
m30_322 -> m30_323  [key=0, style=solid];
m30_322 -> m30_84  [key=2, style=dotted];
m30_322 -> m30_324  [key=1, style=dashed, color=darkseagreen4, label=context];
m30_323 -> m30_324  [key=0, style=solid];
m30_323 -> m30_65  [key=2, style=dotted];
m30_323 -> m30_330  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_324 -> m30_325  [key=0, style=solid];
m30_324 -> m30_85  [key=2, style=dotted];
m30_324 -> m30_326  [key=1, style=dashed, color=darkseagreen4, label=resolvedRoute];
m30_324 -> m30_327  [key=1, style=dashed, color=darkseagreen4, label=resolvedRoute];
m30_325 -> m30_326  [key=0, style=solid];
m30_325 -> m30_329  [key=2, style=dotted];
m30_326 -> m30_327  [key=0, style=solid];
m30_326 -> m30_86  [key=2, style=dotted];
m30_327 -> m30_328  [key=0, style=solid];
m30_327 -> m30_86  [key=2, style=dotted];
m30_328 -> m30_320  [key=0, style=bold, color=blue];
m30_491 -> m30_492  [key=0, style=solid];
m30_492 -> m30_493  [key=0, style=solid];
m30_492 -> m30_83  [key=2, style=dotted];
m30_493 -> m30_494  [key=0, style=solid];
m30_493 -> m30_84  [key=2, style=dotted];
m30_493 -> m30_495  [key=1, style=dashed, color=darkseagreen4, label=context];
m30_494 -> m30_495  [key=0, style=solid];
m30_494 -> m30_65  [key=2, style=dotted];
m30_494 -> m30_499  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_495 -> m30_496  [key=0, style=solid];
m30_495 -> m30_85  [key=2, style=dotted];
m30_495 -> m30_497  [key=1, style=dashed, color=darkseagreen4, label=route];
m30_496 -> m30_497  [key=0, style=solid];
m30_496 -> m30_329  [key=2, style=dotted];
m30_497 -> m30_498  [key=0, style=solid];
m30_497 -> m30_86  [key=2, style=dotted];
m30_498 -> m30_491  [key=0, style=bold, color=blue];
m30_517 -> m30_518  [key=0, style=solid];
m30_518 -> m30_519  [key=0, style=solid];
m30_518 -> m30_513  [key=2, style=dotted];
m30_518 -> m30_520  [key=1, style=dashed, color=darkseagreen4, label=moduleCatalog];
m30_519 -> m30_520  [key=0, style=solid];
m30_519 -> m30_514  [key=2, style=dotted];
m30_519 -> m30_515  [key=2, style=dotted];
m30_519 -> m30_14  [key=2, style=dotted];
m30_520 -> m30_521  [key=0, style=solid];
m30_520 -> m30_73  [key=2, style=dotted];
m30_520 -> m30_523  [key=1, style=dashed, color=darkseagreen4, label=specificResolver];
m30_521 -> m30_522  [key=0, style=solid];
m30_521 -> m30_83  [key=2, style=dotted];
m30_523 -> m30_524  [key=0, style=solid];
m30_523 -> m30_85  [key=2, style=dotted];
m30_522 -> m30_523  [key=0, style=solid];
m30_522 -> m30_84  [key=2, style=dotted];
m30_524 -> m30_525  [key=0, style=solid];
m30_524 -> m30_516  [key=2, style=dotted];
m30_525 -> m30_517  [key=0, style=bold, color=blue];
m30_83 -> m30_2  [key=1, style=dashed, color=green, label="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture"];
m30_83 -> m30_5  [key=1, style=dashed, color=green, label="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture"];
m30_83 -> m30_1  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture"];
m30_83 -> m30_3  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture"];
m30_83 -> m30_27  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture"];
m30_83 -> m30_4  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture"];
m30_83 -> m30_6  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture"];
m30_83 -> m30_34  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture"];
m30_83 -> m30_7  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture"];
m30_83 -> m30_9  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture"];
m30_83 -> m30_10  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture"];
m30_83 -> m30_37  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture"];
m30_83 -> m30_38  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture"];
m30_83 -> m30_44  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture"];
m30_83 -> m30_39  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture"];
m30_83 -> m30_47  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture"];
m30_83 -> m30_51  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture"];
m30_83 -> m30_52  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture"];
m30_83 -> m30_56  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture"];
m30_83 -> m30_60  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture"];
m30_83 -> m30_61  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture"];
m30_83 -> m30_64  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture"];
m30_83 -> m30_69  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture"];
m30_83 -> m30_70  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture"];
m30_83 -> m30_73  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture"];
m30_83 -> m30_77  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture"];
m30_83 -> m30_78  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture"];
m30_83 -> m30_79  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Validation.DataAnnotations.Tests.PropertyValidatorFixture"];
m30_414 -> m30_415  [key=0, style=solid];
m30_415 -> m30_416  [key=0, style=solid];
m30_415 -> m30_83  [key=2, style=dotted];
m30_415 -> m30_421  [key=1, style=dashed, color=darkseagreen4, label=request];
m30_416 -> m30_417  [key=0, style=solid];
m30_416 -> m30_84  [key=2, style=dotted];
m30_416 -> m30_419  [key=1, style=dashed, color=darkseagreen4, label=context];
m30_421 -> m30_422  [key=0, style=solid];
m30_421 -> m30_87  [key=2, style=dotted];
m30_417 -> m30_418  [key=0, style=solid];
m30_417 -> m30_65  [key=2, style=dotted];
m30_417 -> m30_423  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_417 -> m30_419  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m30_419 -> m30_420  [key=0, style=solid];
m30_419 -> m30_85  [key=2, style=dotted];
m30_419 -> m30_421  [key=1, style=dashed, color=darkseagreen4, label=resolvedRoute];
m30_418 -> m30_419  [key=0, style=solid];
m30_418 -> m30_15  [key=2, style=dotted];
m30_418 -> m30_50  [key=2, style=dotted];
m30_418 -> m30_17  [key=2, style=dotted];
m30_418 -> m30_426  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_418 -> m30_430  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator"];
m30_420 -> m30_421  [key=0, style=solid];
m30_420 -> m30_342  [key=2, style=dotted];
m30_422 -> m30_414  [key=0, style=bold, color=blue];
m30_84 -> m30_56  [key=1, style=dashed, color=darkseagreen4, label=instance];
m30_432 -> m30_433  [key=0, style=solid];
m30_433 -> m30_434  [key=0, style=solid];
m30_433 -> m30_83  [key=2, style=dotted];
m30_434 -> m30_435  [key=0, style=solid];
m30_434 -> m30_84  [key=2, style=dotted];
m30_434 -> m30_436  [key=1, style=dashed, color=darkseagreen4, label=context];
m30_435 -> m30_436  [key=0, style=solid];
m30_435 -> m30_65  [key=2, style=dotted];
m30_435 -> m30_441  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_436 -> m30_437  [key=0, style=solid];
m30_436 -> m30_85  [key=2, style=dotted];
m30_436 -> m30_438  [key=1, style=dashed, color=darkseagreen4, label=resolvedRoute];
m30_436 -> m30_439  [key=1, style=dashed, color=darkseagreen4, label=resolvedRoute];
m30_437 -> m30_438  [key=0, style=solid];
m30_437 -> m30_329  [key=2, style=dotted];
m30_438 -> m30_439  [key=0, style=solid];
m30_438 -> m30_86  [key=2, style=dotted];
m30_439 -> m30_440  [key=0, style=solid];
m30_439 -> m30_86  [key=2, style=dotted];
m30_440 -> m30_432  [key=0, style=bold, color=blue];
m30_376 -> m30_377  [key=0, style=solid];
m30_377 -> m30_378  [key=0, style=solid];
m30_377 -> m30_83  [key=2, style=dotted];
m30_378 -> m30_379  [key=0, style=solid];
m30_378 -> m30_84  [key=2, style=dotted];
m30_378 -> m30_382  [key=1, style=dashed, color=darkseagreen4, label=context];
m30_379 -> m30_380  [key=0, style=solid];
m30_379 -> m30_65  [key=2, style=dotted];
m30_379 -> m30_385  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_379 -> m30_382  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m30_382 -> m30_383  [key=0, style=solid];
m30_382 -> m30_85  [key=2, style=dotted];
m30_380 -> m30_381  [key=0, style=solid];
m30_380 -> m30_18  [key=2, style=dotted];
m30_380 -> m30_389  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModuleConfigurator"];
m30_381 -> m30_382  [key=0, style=solid];
m30_381 -> m30_15  [key=2, style=dotted];
m30_381 -> m30_17  [key=2, style=dotted];
m30_381 -> m30_392  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_383 -> m30_384  [key=0, style=solid];
m30_383 -> m30_87  [key=2, style=dotted];
m30_384 -> m30_376  [key=0, style=bold, color=blue];
m30_558 -> m30_1  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_2  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_20  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_3  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_4  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_27  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_5  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_6  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_34  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_7  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_38  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_41  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_8  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_9  [key=1, style=dashed, color=red, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_44  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_10  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_11  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_12  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_59  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_67  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_71  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_77  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_95  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_99  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_108  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_109  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_120  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_110  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_123  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_112  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_129  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_135  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_136  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_146  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_137  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_153  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_139  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_159  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_164  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_165  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_180  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_166  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_186  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_167  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_192  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_169  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_198  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_203  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_204  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_218  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_205  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_221  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_206  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_227  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_207  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_233  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_209  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_239  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_244  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_245  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_256  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_246  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_262  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_248  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_268  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_273  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_275  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_282  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_287  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_289  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_295  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_300  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_302  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_312  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_303  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_315  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_304  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_318  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_323  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_336  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_349  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_365  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_367  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_373  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_379  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_381  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_393  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_398  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_409  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_417  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_418  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_427  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_435  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_447  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_458  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_469  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_481  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_494  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_507  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_520  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_529  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_558 -> m30_542  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture"];
m30_559 -> m30_52  [key=1, style=dashed, color=darkseagreen4, label="?"];
m30_560 -> m30_123  [key=1, style=dashed, color=darkseagreen4, label=request];
m30_561 -> m30_129  [key=1, style=dashed, color=darkseagreen4, label=context];
m30_562 -> m30_146  [key=1, style=dashed, color=darkseagreen4, label=request];
m30_562 -> m30_153  [key=1, style=dashed, color=darkseagreen4, label=request];
m30_563 -> m30_159  [key=1, style=dashed, color=darkseagreen4, label=context];
m30_564 -> m30_180  [key=1, style=dashed, color=darkseagreen4, label=request];
m30_564 -> m30_186  [key=1, style=dashed, color=darkseagreen4, label=request];
m30_564 -> m30_192  [key=1, style=dashed, color=darkseagreen4, label=request];
m30_565 -> m30_198  [key=1, style=dashed, color=darkseagreen4, label=context];
m30_566 -> m30_221  [key=1, style=dashed, color=darkseagreen4, label=request];
m30_566 -> m30_227  [key=1, style=dashed, color=darkseagreen4, label=request];
m30_566 -> m30_233  [key=1, style=dashed, color=darkseagreen4, label=request];
m30_567 -> m30_239  [key=1, style=dashed, color=darkseagreen4, label=context];
m30_568 -> m30_256  [key=1, style=dashed, color=darkseagreen4, label=request];
m30_568 -> m30_262  [key=1, style=dashed, color=darkseagreen4, label=request];
m30_569 -> m30_268  [key=1, style=dashed, color=darkseagreen4, label=context];
m30_570 -> m30_282  [key=1, style=dashed, color=darkseagreen4, label=request];
m30_571 -> m30_295  [key=1, style=dashed, color=darkseagreen4, label=context];
m30_572 -> m30_373  [key=1, style=dashed, color=darkseagreen4, label=context];
m30_573 -> m30_552  [key=1, style=dashed, color=darkseagreen4, label=moduleCatalog];
m30_573 -> m30_556  [key=1, style=dashed, color=darkseagreen4, label=moduleCatalog];
m32_10 -> m32_12  [key=0, style=solid];
m32_10 -> m32_4  [key=3, color=darkorchid, style=bold, label="Parameter variable string segment"];
m32_10 -> m32_5  [key=3, color=darkorchid, style=bold, label="Parameter variable T matchedValue"];
m32_12 -> m32_10  [key=0, style=bold, color=blue];
m32_4 -> m32_5  [key=0, style=solid];
m32_4 -> m32_6  [key=1, style=dashed, color=darkseagreen4, label=string];
m32_4 -> m32_7  [key=1, style=dashed, color=darkseagreen4, label=string];
m32_4 -> m32_11  [key=3, color=darkorchid, style=bold, label="method methodReturn Nancy.Routing.Trie.SegmentMatch GetMatch"];
m32_5 -> m32_6  [key=0, style=solid];
m32_6 -> m32_7  [key=0, style=solid];
m32_6 -> m32_8  [key=0, style=solid];
m32_6 -> m32_10  [key=2, style=dotted];
m32_7 -> m32_9  [key=0, style=solid];
m32_7 -> m32_11  [key=2, style=dotted];
m32_8 -> m32_9  [key=0, style=solid];
m32_9 -> m32_4  [key=0, style=bold, color=blue];
m32_0 -> m32_1  [key=0, style=solid];
m32_1 -> m32_2  [key=0, style=solid];
m32_1 -> m32_3  [key=2, style=dotted];
m32_2 -> m32_0  [key=0, style=bold, color=blue];
m32_11 -> m32_13  [key=0, style=solid];
m32_11 -> m32_14  [key=1, style=dashed, color=darkseagreen4, label=string];
m32_11 -> m32_4  [key=3, color=darkorchid, style=bold, label="Parameter variable string parameterName"];
m32_11 -> m32_5  [key=3, color=darkorchid, style=bold, label="Parameter variable object matchedValue"];
m32_13 -> m32_14  [key=0, style=solid];
m32_13 -> m32_17  [key=2, style=dotted];
m32_13 -> m32_15  [key=1, style=dashed, color=darkseagreen4, label=match];
m32_14 -> m32_15  [key=0, style=solid];
m32_14 -> m32_18  [key=2, style=dotted];
m32_15 -> m32_16  [key=0, style=solid];
m32_16 -> m32_11  [key=0, style=bold, color=blue];
m32_19 -> m32_1  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Routing.Constraints.RouteSegmentConstraintBase<T>"];
m32_19 -> m32_6  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Routing.Constraints.RouteSegmentConstraintBase<T>"];
m33_0 -> m33_4  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m33_0 -> m33_1  [key=0, style=solid];
m33_0 -> m33_2  [key=1, style=dashed, color=darkseagreen4, label=string];
m33_0 -> m33_3  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m33_5 -> m33_6  [key=0, style=solid, color=green];
m33_5 -> m33_7  [key=2, style=dotted, color=green];
m33_5 -> m33_8  [key=2, style=dotted, color=green];
m33_5 -> m33_9  [key=2, style=dotted, color=green];
m33_4 -> m33_5  [key=0, style=solid, color=green];
m33_4 -> m33_9  [key=2, style=dotted];
m33_1 -> m33_2  [key=0, style=solid];
m33_1 -> m33_0  [key=0, style=bold, color=blue];
m33_2 -> m33_3  [key=0, style=solid];
m33_2 -> m33_5  [key=1, style=dashed, color=darkseagreen4, label=string];
m33_3 -> m33_4  [key=0, style=solid];
m33_3 -> m33_8  [key=2, style=dotted];
m33_6 -> m33_0  [key=0, style=bold, color=blue];
m33_6 -> m33_7  [key=0, style=solid];
m33_6 -> m33_10  [key=2, style=dotted];
m33_10 -> m33_11  [key=0, style=solid];
m33_11 -> m33_12  [key=0, style=solid];
m33_11 -> m33_13  [key=1, style=dashed, color=darkseagreen4, label="Nancy.NancyModule"];
m33_12 -> m33_13  [key=0, style=solid];
m33_12 -> m33_10  [key=0, style=bold, color=blue];
m33_13 -> m33_14  [key=0, style=solid];
m33_13 -> m33_5  [key=1, style=dashed, color=green, label="Nancy.ViewEngines.ViewNotFoundException"];
m33_13 -> m33_1  [key=1, style=dashed, color=darkseagreen4, label="Nancy.ViewEngines.ViewNotFoundException"];
m33_13 -> m33_2  [key=1, style=dashed, color=darkseagreen4, label="Nancy.ViewEngines.ViewNotFoundException"];
m33_13 -> m33_3  [key=1, style=dashed, color=darkseagreen4, label="Nancy.ViewEngines.ViewNotFoundException"];
m33_13 -> m33_4  [key=1, style=dashed, color=darkseagreen4, label="Nancy.ViewEngines.ViewNotFoundException"];
m33_13 -> m33_11  [key=1, style=dashed, color=darkseagreen4, label="Nancy.ViewEngines.ViewNotFoundException"];
m33_14 -> m33_11  [key=0, style=bold, color=blue];
m33_8 -> m33_0  [key=3, color=darkorchid, style=bold, label="Property variable string[] InspectedLocations"];
m33_7 -> m33_2  [key=0, style=bold, color=blue];
m33_15 -> m33_16  [key=0, style=solid];
m33_15 -> m33_17  [key=1, style=dashed, color=darkseagreen4, label="System.Func<Nancy.NancyContext, bool>"];
m33_16 -> m33_17  [key=0, style=solid];
m33_16 -> m33_19  [key=2, style=dotted];
m33_17 -> m33_18  [key=0, style=solid];
m33_17 -> m33_20  [key=2, style=dotted];
m33_17 -> m33_21  [key=2, style=dotted];
m33_18 -> m33_15  [key=0, style=bold, color=blue];
m33_22 -> m33_23  [key=0, style=solid];
m33_23 -> m33_24  [key=0, style=solid];
m33_24 -> m33_22  [key=0, style=bold, color=blue];
m33_25 -> m33_26  [key=0, style=solid];
m33_26 -> m33_27  [key=0, style=solid];
m33_26 -> m33_28  [key=2, style=dotted];
m33_26 -> m33_29  [key=2, style=dotted];
m33_27 -> m33_25  [key=0, style=bold, color=blue];
m33_30 -> m33_3  [key=1, style=dashed, color=darkseagreen4, label="Nancy.NancyModule"];
m33_30 -> m33_4  [key=1, style=dashed, color=darkseagreen4, label="Nancy.NancyModule"];
m33_30 -> m33_5  [key=1, style=dashed, color=darkseagreen4, label="Nancy.NancyModule"];
m33_30 -> m33_6  [key=1, style=dashed, color=darkseagreen4, label="Nancy.NancyModule"];
m33_31 -> m33_12  [key=1, style=dashed, color=darkseagreen4, label="Nancy.NancyModule.RouteBuilder"];
m33_31 -> m33_13  [key=1, style=dashed, color=darkseagreen4, label="Nancy.NancyModule.RouteBuilder"];
m33_31 -> m33_16  [key=1, style=dashed, color=darkseagreen4, label="Nancy.NancyModule.RouteBuilder"];
m33_31 -> m33_17  [key=1, style=dashed, color=darkseagreen4, label="Nancy.NancyModule.RouteBuilder"];
m33_32 -> m33_23  [key=1, style=dashed, color=darkseagreen4, label="Nancy.NancyModule.ViewRenderer"];
m33_32 -> m33_26  [key=1, style=dashed, color=darkseagreen4, label="Nancy.NancyModule.ViewRenderer"];
}
