digraph  {
n34 [label="Nancy.Testing.Tests.TestingViewExtensions.GetModelExtententionsTests", span=""];
n0 [cluster="Nancy.Testing.Tests.TestingViewExtensions.GetModelExtententionsTests.GetModelExtententionsTests()", label="Entry Nancy.Testing.Tests.TestingViewExtensions.GetModelExtententionsTests.GetModelExtententionsTests()", span="8-8"];
n1 [cluster="Nancy.Testing.Tests.TestingViewExtensions.GetModelExtententionsTests.GetModelExtententionsTests()", label="this._browser = new Browser(with =>\r\n            {\r\n                with.Module<TestingViewFactoryTestModule>();\r\n                with.ViewFactory<TestingViewFactory>();\r\n            })", span="10-14"];
n2 [cluster="Nancy.Testing.Tests.TestingViewExtensions.GetModelExtententionsTests.GetModelExtententionsTests()", label="Exit Nancy.Testing.Tests.TestingViewExtensions.GetModelExtententionsTests.GetModelExtententionsTests()", span="8-8"];
n3 [cluster="Nancy.Testing.Browser.Browser(System.Action<Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator>)", label="Entry Nancy.Testing.Browser.Browser(System.Action<Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator>)", span="26-26"];
n5 [cluster="lambda expression", label="with.Module<TestingViewFactoryTestModule>()", span="12-12"];
n6 [cluster="lambda expression", label="with.ViewFactory<TestingViewFactory>()", span="13-13"];
n4 [cluster="lambda expression", label="Entry lambda expression", span="10-14"];
n8 [cluster="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.Module<T>()", label="Entry Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.Module<T>()", span="807-807"];
n7 [cluster="lambda expression", label="Exit lambda expression", span="10-14"];
n9 [cluster="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.ViewFactory<T>()", label="Entry Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.ViewFactory<T>()", span="1338-1338"];
n10 [cluster="Nancy.Testing.Tests.TestingViewExtensions.GetModelExtententionsTests.GetModel_should_return_null_when_model_is_not_set()", label="Entry Nancy.Testing.Tests.TestingViewExtensions.GetModelExtententionsTests.GetModel_should_return_null_when_model_is_not_set()", span="19-19"];
n11 [cluster="Nancy.Testing.Tests.TestingViewExtensions.GetModelExtententionsTests.GetModel_should_return_null_when_model_is_not_set()", label="var response = this._browser.Get(''/testingViewFactoryNoModel'')", span="21-21"];
n12 [cluster="Nancy.Testing.Tests.TestingViewExtensions.GetModelExtententionsTests.GetModel_should_return_null_when_model_is_not_set()", label="Assert.Null(response.GetModel<ViewFactoryTestModel>())", span="22-22"];
n14 [cluster="Nancy.Testing.Browser.Get(string, System.Action<Nancy.Testing.BrowserContext>)", label="Entry Nancy.Testing.Browser.Get(string, System.Action<Nancy.Testing.BrowserContext>)", span="59-59"];
n13 [cluster="Nancy.Testing.Tests.TestingViewExtensions.GetModelExtententionsTests.GetModel_should_return_null_when_model_is_not_set()", label="Exit Nancy.Testing.Tests.TestingViewExtensions.GetModelExtententionsTests.GetModel_should_return_null_when_model_is_not_set()", span="19-19"];
n15 [cluster="Nancy.Testing.BrowserResponse.GetModel<TType>()", label="Entry Nancy.Testing.BrowserResponse.GetModel<TType>()", span="55-55"];
n16 [cluster="Unk.Null", label="Entry Unk.Null", span=""];
n17 [cluster="Nancy.Testing.Tests.TestingViewExtensions.GetModelExtententionsTests.GetModel_should_not_return_null_when_model_is_set()", label="Entry Nancy.Testing.Tests.TestingViewExtensions.GetModelExtententionsTests.GetModel_should_not_return_null_when_model_is_set()", span="26-26"];
n18 [cluster="Nancy.Testing.Tests.TestingViewExtensions.GetModelExtententionsTests.GetModel_should_not_return_null_when_model_is_set()", label="var response = this._browser.Get(''/testingViewFactory'')", span="28-28"];
n19 [cluster="Nancy.Testing.Tests.TestingViewExtensions.GetModelExtententionsTests.GetModel_should_not_return_null_when_model_is_set()", label="Assert.NotNull(response.GetModel<ViewFactoryTestModel>())", span="29-29"];
n20 [cluster="Nancy.Testing.Tests.TestingViewExtensions.GetModelExtententionsTests.GetModel_should_not_return_null_when_model_is_set()", label="Exit Nancy.Testing.Tests.TestingViewExtensions.GetModelExtententionsTests.GetModel_should_not_return_null_when_model_is_set()", span="26-26"];
n21 [cluster="Unk.NotNull", label="Entry Unk.NotNull", span=""];
n22 [cluster="Nancy.Testing.Tests.TestingViewExtensions.GetModelExtententionsTests.should_return_model_of_correct_type()", label="Entry Nancy.Testing.Tests.TestingViewExtensions.GetModelExtententionsTests.should_return_model_of_correct_type()", span="33-33"];
n23 [cluster="Nancy.Testing.Tests.TestingViewExtensions.GetModelExtententionsTests.should_return_model_of_correct_type()", label="var response = this._browser.Get(''/testingViewFactory'')", span="35-35"];
n24 [cluster="Nancy.Testing.Tests.TestingViewExtensions.GetModelExtententionsTests.should_return_model_of_correct_type()", label="Assert.IsType<ViewFactoryTestModel>(response.GetModel<ViewFactoryTestModel>())", span="36-36"];
n25 [cluster="Nancy.Testing.Tests.TestingViewExtensions.GetModelExtententionsTests.should_return_model_of_correct_type()", label="Exit Nancy.Testing.Tests.TestingViewExtensions.GetModelExtententionsTests.should_return_model_of_correct_type()", span="33-33"];
n26 [cluster="Unk.>", label="Entry Unk.>", span=""];
n27 [cluster="Nancy.Testing.Tests.TestingViewExtensions.GetModelExtententionsTests.should_set_values_correct_on_the_model()", label="Entry Nancy.Testing.Tests.TestingViewExtensions.GetModelExtententionsTests.should_set_values_correct_on_the_model()", span="40-40"];
n28 [cluster="Nancy.Testing.Tests.TestingViewExtensions.GetModelExtententionsTests.should_set_values_correct_on_the_model()", label="var response = this._browser.Get(''/testingViewFactory'')", span="42-42"];
n29 [cluster="Nancy.Testing.Tests.TestingViewExtensions.GetModelExtententionsTests.should_set_values_correct_on_the_model()", label="var model = response.GetModel<ViewFactoryTestModel>()", span="43-43"];
n30 [cluster="Nancy.Testing.Tests.TestingViewExtensions.GetModelExtententionsTests.should_set_values_correct_on_the_model()", label="Assert.Equal(''A value'', model.AString)", span="44-44"];
n31 [cluster="Nancy.Testing.Tests.TestingViewExtensions.GetModelExtententionsTests.should_set_values_correct_on_the_model()", label="Assert.Equal(''Another value'', model.ComplexModel.AnotherString)", span="45-45"];
n33 [cluster="Unk.Equal", label="Entry Unk.Equal", span=""];
n32 [cluster="Nancy.Testing.Tests.TestingViewExtensions.GetModelExtententionsTests.should_set_values_correct_on_the_model()", label="Exit Nancy.Testing.Tests.TestingViewExtensions.GetModelExtententionsTests.should_set_values_correct_on_the_model()", span="40-40"];
d6 [cluster="Nancy.Responses.StreamResponse.GetResponseBodyDelegate(System.Func<System.IO.Stream>)", color=green, community=0, label="0: return stream =>\r\n                {\r\n                    using (var source = sourceDelegate.Invoke())\r\n                    {\r\n                        if (source.CanSeek)\r\n                        {\r\n                            source.Position = 0;\r\n                        }\r\n\r\n                        if (source.CanRead)\r\n                        {\r\n                            source.CopyTo(stream);\r\n                        }\r\n                    }\r\n                };", span="16-30"];
d5 [cluster="Nancy.Responses.StreamResponse.GetResponseBodyDelegate(System.Func<System.IO.Stream>)", label="Entry Nancy.Responses.StreamResponse.GetResponseBodyDelegate(System.Func<System.IO.Stream>)", span="14-14"];
d7 [cluster="Nancy.Responses.StreamResponse.GetResponseBodyDelegate(System.Func<System.IO.Stream>)", label="Exit Nancy.Responses.StreamResponse.GetResponseBodyDelegate(System.Func<System.IO.Stream>)", span="14-14"];
d13 [cluster="lambda expression", label="source.CopyTo(stream)", span="27-27"];
d9 [cluster="lambda expression", color=green, community=0, label="0: var source = sourceDelegate.Invoke()", span="18-18"];
d18 [label="System.Func<System.IO.Stream>", span=""];
d8 [cluster="lambda expression", label="Entry lambda expression", span="16-30"];
d10 [cluster="lambda expression", label="source.CanSeek", span="20-20"];
d15 [cluster="System.Func<TResult>.Invoke()", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
d11 [cluster="lambda expression", label="source.Position = 0", span="22-22"];
d12 [cluster="lambda expression", color=green, community=0, label="0: source.CanRead", span="25-25"];
d14 [cluster="lambda expression", label="Exit lambda expression", span="16-30"];
d1 [cluster="Nancy.Responses.StreamResponse.StreamResponse(System.Func<System.IO.Stream>, string)", label="this.Contents = GetResponseBodyDelegate(source)", span="9-9"];
d0 [cluster="Nancy.Responses.StreamResponse.StreamResponse(System.Func<System.IO.Stream>, string)", label="Entry Nancy.Responses.StreamResponse.StreamResponse(System.Func<System.IO.Stream>, string)", span="7-7"];
d16 [cluster="System.IO.Stream.CopyTo(System.IO.Stream)", label="Entry System.IO.Stream.CopyTo(System.IO.Stream)", span="0-0"];
d17 [label="Nancy.Responses.StreamResponse", span=""];
d2 [cluster="Nancy.Responses.StreamResponse.StreamResponse(System.Func<System.IO.Stream>, string)", label="this.ContentType = contentType", span="10-10"];
d4 [cluster="Nancy.Responses.StreamResponse.StreamResponse(System.Func<System.IO.Stream>, string)", label="Exit Nancy.Responses.StreamResponse.StreamResponse(System.Func<System.IO.Stream>, string)", span="7-7"];
d3 [cluster="Nancy.Responses.StreamResponse.StreamResponse(System.Func<System.IO.Stream>, string)", label="this.StatusCode = HttpStatusCode.OK", span="11-11"];
m1_0 [cluster="Nancy.Testing.Tests.TestingViewExtensions.GetViewNameExtensionTests.GetViewNameExtensionTests()", file="GetViewNameExtensionTests.cs", label="Entry Nancy.Testing.Tests.TestingViewExtensions.GetViewNameExtensionTests.GetViewNameExtensionTests()", span="8-8"];
m1_1 [cluster="Nancy.Testing.Tests.TestingViewExtensions.GetViewNameExtensionTests.GetViewNameExtensionTests()", color=green, community=0, file="GetViewNameExtensionTests.cs", label="0: this._browser = new Browser(with =>\r\n            {\r\n                with.Module<TestingViewFactoryTestModule>();\r\n                with.ViewFactory<TestingViewFactory>();\r\n            })", span="10-14"];
m1_2 [cluster="Nancy.Testing.Tests.TestingViewExtensions.GetViewNameExtensionTests.GetViewNameExtensionTests()", file="GetViewNameExtensionTests.cs", label="Exit Nancy.Testing.Tests.TestingViewExtensions.GetViewNameExtensionTests.GetViewNameExtensionTests()", span="8-8"];
m1_24 [cluster="Nancy.Testing.BrowserContext.Accept(Nancy.Responses.Negotiation.MediaRange)", file="GetViewNameExtensionTests.cs", label="Entry Nancy.Testing.BrowserContext.Accept(Nancy.Responses.Negotiation.MediaRange)", span="172-172"];
m1_8 [cluster="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.Module<T>()", file="GetViewNameExtensionTests.cs", label="Entry Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.Module<T>()", span="807-807"];
m1_17 [cluster="Nancy.Testing.Tests.TestingViewExtensions.GetViewNameExtensionTests.GetViewName_should_return_empty_string_for_routes_withoutuu_view()", file="GetViewNameExtensionTests.cs", label="Entry Nancy.Testing.Tests.TestingViewExtensions.GetViewNameExtensionTests.GetViewName_should_return_empty_string_for_routes_withoutuu_view()", span="25-25"];
m1_18 [cluster="Nancy.Testing.Tests.TestingViewExtensions.GetViewNameExtensionTests.GetViewName_should_return_empty_string_for_routes_withoutuu_view()", color=green, community=0, file="GetViewNameExtensionTests.cs", label="0: var response = this._browser.Get(''/testingViewFactoryNoViewName'', \r\n                with => with.Accept(''application/json''))", span="27-28"];
m1_19 [cluster="Nancy.Testing.Tests.TestingViewExtensions.GetViewNameExtensionTests.GetViewName_should_return_empty_string_for_routes_withoutuu_view()", color=green, community=0, file="GetViewNameExtensionTests.cs", label="0: Assert.Equal(string.Empty, response.GetViewName())", span="29-29"];
m1_20 [cluster="Nancy.Testing.Tests.TestingViewExtensions.GetViewNameExtensionTests.GetViewName_should_return_empty_string_for_routes_withoutuu_view()", file="GetViewNameExtensionTests.cs", label="Exit Nancy.Testing.Tests.TestingViewExtensions.GetViewNameExtensionTests.GetViewName_should_return_empty_string_for_routes_withoutuu_view()", span="25-25"];
m1_14 [cluster="Nancy.Testing.Browser.Get(string, System.Action<Nancy.Testing.BrowserContext>)", file="GetViewNameExtensionTests.cs", label="Entry Nancy.Testing.Browser.Get(string, System.Action<Nancy.Testing.BrowserContext>)", span="59-59"];
m1_10 [cluster="Nancy.Testing.Tests.TestingViewExtensions.GetViewNameExtensionTests.GetViewName_should_return_name_of_the_view_for_routes_with_view()", file="GetViewNameExtensionTests.cs", label="Entry Nancy.Testing.Tests.TestingViewExtensions.GetViewNameExtensionTests.GetViewName_should_return_name_of_the_view_for_routes_with_view()", span="18-18"];
m1_11 [cluster="Nancy.Testing.Tests.TestingViewExtensions.GetViewNameExtensionTests.GetViewName_should_return_name_of_the_view_for_routes_with_view()", color=green, community=0, file="GetViewNameExtensionTests.cs", label="0: var response = this._browser.Get(''/testingViewFactory'')", span="20-20"];
m1_12 [cluster="Nancy.Testing.Tests.TestingViewExtensions.GetViewNameExtensionTests.GetViewName_should_return_name_of_the_view_for_routes_with_view()", color=green, community=0, file="GetViewNameExtensionTests.cs", label="0: Assert.Equal(''TestingViewExtensions/ViewFactoryTest.sshtml'', response.GetViewName())", span="21-21"];
m1_13 [cluster="Nancy.Testing.Tests.TestingViewExtensions.GetViewNameExtensionTests.GetViewName_should_return_name_of_the_view_for_routes_with_view()", file="GetViewNameExtensionTests.cs", label="Exit Nancy.Testing.Tests.TestingViewExtensions.GetViewNameExtensionTests.GetViewName_should_return_name_of_the_view_for_routes_with_view()", span="18-18"];
m1_16 [cluster="Unk.Equal", file="GetViewNameExtensionTests.cs", label="Entry Unk.Equal", span=""];
m1_21 [cluster="lambda expression", file="GetViewNameExtensionTests.cs", label="Entry lambda expression", span="28-28"];
m1_5 [cluster="lambda expression", color=green, community=0, file="GetViewNameExtensionTests.cs", label="0: with.Module<TestingViewFactoryTestModule>()", span="12-12"];
m1_6 [cluster="lambda expression", color=green, community=0, file="GetViewNameExtensionTests.cs", label="0: with.ViewFactory<TestingViewFactory>()", span="13-13"];
m1_4 [cluster="lambda expression", file="GetViewNameExtensionTests.cs", label="Entry lambda expression", span="10-14"];
m1_7 [cluster="lambda expression", file="GetViewNameExtensionTests.cs", label="Exit lambda expression", span="10-14"];
m1_22 [cluster="lambda expression", color=green, community=0, file="GetViewNameExtensionTests.cs", label="0: with.Accept(''application/json'')", span="28-28"];
m1_23 [cluster="lambda expression", file="GetViewNameExtensionTests.cs", label="Exit lambda expression", span="28-28"];
m1_15 [cluster="Nancy.Testing.BrowserResponse.GetViewName()", file="GetViewNameExtensionTests.cs", label="Entry Nancy.Testing.BrowserResponse.GetViewName()", span="65-65"];
m1_9 [cluster="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.ViewFactory<T>()", file="GetViewNameExtensionTests.cs", label="Entry Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.ViewFactory<T>()", span="1338-1338"];
m1_25 [file="GetViewNameExtensionTests.cs", label="Nancy.Testing.Tests.TestingViewExtensions.GetViewNameExtensionTests", span=""];
m2_15 [cluster="Nancy.Testing.Tests.TestingViewExtensions.ModulePathExtensionMethodTests.should_get_empty_string_for_module_with_no_module_path_set()", file="ModulePathExtensionMethodTests.cs", label="Entry Nancy.Testing.Tests.TestingViewExtensions.ModulePathExtensionMethodTests.should_get_empty_string_for_module_with_no_module_path_set()", span="24-24"];
m2_16 [cluster="Nancy.Testing.Tests.TestingViewExtensions.ModulePathExtensionMethodTests.should_get_empty_string_for_module_with_no_module_path_set()", color=red, community=0, file="ModulePathExtensionMethodTests.cs", label="0: var browser = new Browser(with =>\r\n            {\r\n                with.Module<ModuleWithLongModulePath>();\r\n                with.ViewFactory<TestingViewFactory>();\r\n            })", span="27-31"];
m2_17 [cluster="Nancy.Testing.Tests.TestingViewExtensions.ModulePathExtensionMethodTests.should_get_empty_string_for_module_with_no_module_path_set()", file="ModulePathExtensionMethodTests.cs", label="var response = browser.Get(''/getModulePath'')", span="34-34"];
m2_18 [cluster="Nancy.Testing.Tests.TestingViewExtensions.ModulePathExtensionMethodTests.should_get_empty_string_for_module_with_no_module_path_set()", file="ModulePathExtensionMethodTests.cs", label="Assert.Equal('''', response.GetModulePath())", span="37-37"];
m2_19 [cluster="Nancy.Testing.Tests.TestingViewExtensions.ModulePathExtensionMethodTests.should_get_empty_string_for_module_with_no_module_path_set()", file="ModulePathExtensionMethodTests.cs", label="Exit Nancy.Testing.Tests.TestingViewExtensions.ModulePathExtensionMethodTests.should_get_empty_string_for_module_with_no_module_path_set()", span="24-24"];
m2_13 [cluster="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.Module<T>()", file="ModulePathExtensionMethodTests.cs", label="Entry Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.Module<T>()", span="807-807"];
m2_24 [cluster="Nancy.Testing.Tests.TestingViewExtensions.ModuleWithLongModulePath.ModuleWithLongModulePath()", file="ModulePathExtensionMethodTests.cs", label="Entry Nancy.Testing.Tests.TestingViewExtensions.ModuleWithLongModulePath.ModuleWithLongModulePath()", span="43-43"];
m2_25 [cluster="Nancy.Testing.Tests.TestingViewExtensions.ModuleWithLongModulePath.ModuleWithLongModulePath()", color=red, community=0, file="ModulePathExtensionMethodTests.cs", label="0: this.Get[''/getModulePath''] = _ => this.View[''ViewFactoryTest.sshtml'']", span="46-46"];
m2_26 [cluster="Nancy.Testing.Tests.TestingViewExtensions.ModuleWithLongModulePath.ModuleWithLongModulePath()", file="ModulePathExtensionMethodTests.cs", label="Exit Nancy.Testing.Tests.TestingViewExtensions.ModuleWithLongModulePath.ModuleWithLongModulePath()", span="43-43"];
m2_6 [cluster="Nancy.Testing.Browser.Get(string, System.Action<Nancy.Testing.BrowserContext>)", file="ModulePathExtensionMethodTests.cs", label="Entry Nancy.Testing.Browser.Get(string, System.Action<Nancy.Testing.BrowserContext>)", span="59-59"];
m2_8 [cluster="Unk.Equal", file="ModulePathExtensionMethodTests.cs", label="Entry Unk.Equal", span=""];
m2_30 [cluster="Nancy.Testing.Tests.TestingViewExtensions.ModuleWithOutModulePath.ModuleWithOutModulePath()", file="ModulePathExtensionMethodTests.cs", label="Entry Nancy.Testing.Tests.TestingViewExtensions.ModuleWithOutModulePath.ModuleWithOutModulePath()", span="52-52"];
m2_31 [cluster="Nancy.Testing.Tests.TestingViewExtensions.ModuleWithOutModulePath.ModuleWithOutModulePath()", color=red, community=0, file="ModulePathExtensionMethodTests.cs", label="0: this.Get[''/getModulePath''] = _ => this.View[''ViewFactoryTest.sshtml'']", span="54-54"];
m2_32 [cluster="Nancy.Testing.Tests.TestingViewExtensions.ModuleWithOutModulePath.ModuleWithOutModulePath()", file="ModulePathExtensionMethodTests.cs", label="Exit Nancy.Testing.Tests.TestingViewExtensions.ModuleWithOutModulePath.ModuleWithOutModulePath()", span="52-52"];
m2_33 [cluster="lambda expression", file="ModulePathExtensionMethodTests.cs", label="Entry lambda expression", span="54-54"];
m2_10 [cluster="lambda expression", color=red, community=0, file="ModulePathExtensionMethodTests.cs", label="0: with.Module<ModuleWithLongModulePath>()", span="12-12"];
m2_11 [cluster="lambda expression", file="ModulePathExtensionMethodTests.cs", label="with.ViewFactory<TestingViewFactory>()", span="13-13"];
m2_9 [cluster="lambda expression", file="ModulePathExtensionMethodTests.cs", label="Entry lambda expression", span="10-14"];
m2_12 [cluster="lambda expression", file="ModulePathExtensionMethodTests.cs", label="Exit lambda expression", span="10-14"];
m2_21 [cluster="lambda expression", color=red, community=0, file="ModulePathExtensionMethodTests.cs", label="0: with.Module<ModuleWithLongModulePath>()", span="29-29"];
m2_22 [cluster="lambda expression", file="ModulePathExtensionMethodTests.cs", label="with.ViewFactory<TestingViewFactory>()", span="30-30"];
m2_20 [cluster="lambda expression", file="ModulePathExtensionMethodTests.cs", label="Entry lambda expression", span="27-31"];
m2_23 [cluster="lambda expression", file="ModulePathExtensionMethodTests.cs", label="Exit lambda expression", span="27-31"];
m2_27 [cluster="lambda expression", file="ModulePathExtensionMethodTests.cs", label="Entry lambda expression", span="46-46"];
m2_28 [cluster="lambda expression", color=red, community=0, file="ModulePathExtensionMethodTests.cs", label="0: this.View[''ViewFactoryTest.sshtml'']", span="46-46"];
m2_29 [cluster="lambda expression", file="ModulePathExtensionMethodTests.cs", label="Exit lambda expression", span="46-46"];
m2_34 [cluster="lambda expression", color=red, community=0, file="ModulePathExtensionMethodTests.cs", label="0: this.View[''ViewFactoryTest.sshtml'']", span="54-54"];
m2_35 [cluster="lambda expression", file="ModulePathExtensionMethodTests.cs", label="Exit lambda expression", span="54-54"];
m2_0 [cluster="Nancy.Testing.Tests.TestingViewExtensions.ModulePathExtensionMethodTests.should_get_the_module_path_for_modules_with_module_path()", file="ModulePathExtensionMethodTests.cs", label="Entry Nancy.Testing.Tests.TestingViewExtensions.ModulePathExtensionMethodTests.should_get_the_module_path_for_modules_with_module_path()", span="7-7"];
m2_1 [cluster="Nancy.Testing.Tests.TestingViewExtensions.ModulePathExtensionMethodTests.should_get_the_module_path_for_modules_with_module_path()", color=red, community=0, file="ModulePathExtensionMethodTests.cs", label="0: var browser = new Browser(with =>\r\n            {\r\n                with.Module<ModuleWithLongModulePath>();\r\n                with.ViewFactory<TestingViewFactory>();\r\n            })", span="10-14"];
m2_2 [cluster="Nancy.Testing.Tests.TestingViewExtensions.ModulePathExtensionMethodTests.should_get_the_module_path_for_modules_with_module_path()", file="ModulePathExtensionMethodTests.cs", label="var response = browser.Get(''/a/long/path/getModulePath'')", span="17-17"];
m2_3 [cluster="Nancy.Testing.Tests.TestingViewExtensions.ModulePathExtensionMethodTests.should_get_the_module_path_for_modules_with_module_path()", file="ModulePathExtensionMethodTests.cs", label="Assert.Equal(''/a/long/path'', response.GetModulePath())", span="20-20"];
m2_4 [cluster="Nancy.Testing.Tests.TestingViewExtensions.ModulePathExtensionMethodTests.should_get_the_module_path_for_modules_with_module_path()", file="ModulePathExtensionMethodTests.cs", label="Exit Nancy.Testing.Tests.TestingViewExtensions.ModulePathExtensionMethodTests.should_get_the_module_path_for_modules_with_module_path()", span="7-7"];
m2_7 [cluster="Nancy.Testing.BrowserResponse.GetModulePath()", file="ModulePathExtensionMethodTests.cs", label="Entry Nancy.Testing.BrowserResponse.GetModulePath()", span="85-85"];
m2_14 [cluster="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.ViewFactory<T>()", file="ModulePathExtensionMethodTests.cs", label="Entry Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.ViewFactory<T>()", span="1338-1338"];
m2_36 [file="ModulePathExtensionMethodTests.cs", label="Nancy.Testing.Tests.TestingViewExtensions.ModuleWithLongModulePath", span=""];
m2_37 [file="ModulePathExtensionMethodTests.cs", label="Nancy.Testing.Tests.TestingViewExtensions.ModuleWithOutModulePath", span=""];
m3_4 [cluster="Unk.Exception", file="TestingViewFactory.cs", label="Entry Unk.Exception", span=""];
m3_15 [cluster="bool.ShouldBeTrue()", file="TestingViewFactory.cs", label="Entry bool.ShouldBeTrue()", span="85-85"];
m3_9 [cluster="Nancy.Validation.ModelValidationResult.ModelValidationResult(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationError>)", file="TestingViewFactory.cs", label="Entry Nancy.Validation.ModelValidationResult.ModelValidationResult(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationError>)", span="36-36"];
m3_16 [cluster="Nancy.Tests.Unit.Validation.ModelValidationResultFixture.Should_return_invalid_if_any_errors_exist()", file="TestingViewFactory.cs", label="Entry Nancy.Tests.Unit.Validation.ModelValidationResultFixture.Should_return_invalid_if_any_errors_exist()", span="31-31"];
m3_17 [cluster="Nancy.Tests.Unit.Validation.ModelValidationResultFixture.Should_return_invalid_if_any_errors_exist()", file="TestingViewFactory.cs", label="var subject = new ModelValidationResult(new[] { new ModelValidationError(''blah'', s => ''blah'') })", span="34-34"];
m3_18 [cluster="Nancy.Tests.Unit.Validation.ModelValidationResultFixture.Should_return_invalid_if_any_errors_exist()", file="TestingViewFactory.cs", label="var result = subject.IsValid", span="37-37"];
m3_19 [cluster="Nancy.Tests.Unit.Validation.ModelValidationResultFixture.Should_return_invalid_if_any_errors_exist()", file="TestingViewFactory.cs", label="result.ShouldBeFalse()", span="40-40"];
m3_20 [cluster="Nancy.Tests.Unit.Validation.ModelValidationResultFixture.Should_return_invalid_if_any_errors_exist()", file="TestingViewFactory.cs", label="Exit Nancy.Tests.Unit.Validation.ModelValidationResultFixture.Should_return_invalid_if_any_errors_exist()", span="31-31"];
m3_0 [cluster="Nancy.Tests.Unit.Validation.ModelValidationResultFixture.Should_not_throw_if_null_errors_collection_is_passed()", file="TestingViewFactory.cs", label="Entry Nancy.Tests.Unit.Validation.ModelValidationResultFixture.Should_not_throw_if_null_errors_collection_is_passed()", span="8-8"];
m3_1 [cluster="Nancy.Tests.Unit.Validation.ModelValidationResultFixture.Should_not_throw_if_null_errors_collection_is_passed()", file="TestingViewFactory.cs", label="var result = Record.Exception(() => new ModelValidationResult(null))", span="11-11"];
m3_2 [cluster="Nancy.Tests.Unit.Validation.ModelValidationResultFixture.Should_not_throw_if_null_errors_collection_is_passed()", file="TestingViewFactory.cs", label="result.ShouldBeNull()", span="14-14"];
m3_3 [cluster="Nancy.Tests.Unit.Validation.ModelValidationResultFixture.Should_not_throw_if_null_errors_collection_is_passed()", file="TestingViewFactory.cs", label="Exit Nancy.Tests.Unit.Validation.ModelValidationResultFixture.Should_not_throw_if_null_errors_collection_is_passed()", span="8-8"];
m3_22 [cluster="bool.ShouldBeFalse()", file="TestingViewFactory.cs", label="Entry bool.ShouldBeFalse()", span="90-90"];
m3_21 [cluster="Nancy.Validation.ModelValidationError.ModelValidationError(string, System.Func<string, string>)", file="TestingViewFactory.cs", label="Entry Nancy.Validation.ModelValidationError.ModelValidationError(string, System.Func<string, string>)", span="23-23"];
m3_5 [cluster="Unk.ShouldBeNull", file="TestingViewFactory.cs", label="Entry Unk.ShouldBeNull", span=""];
m3_23 [cluster="lambda expression", file="TestingViewFactory.cs", label="Entry lambda expression", span="34-34"];
m3_6 [cluster="lambda expression", file="TestingViewFactory.cs", label="Entry lambda expression", span="11-11"];
m3_7 [cluster="lambda expression", file="TestingViewFactory.cs", label="new ModelValidationResult(null)", span="11-11"];
m3_8 [cluster="lambda expression", file="TestingViewFactory.cs", label="Exit lambda expression", span="11-11"];
m3_24 [cluster="lambda expression", file="TestingViewFactory.cs", label="''blah''", span="34-34"];
m3_25 [cluster="lambda expression", file="TestingViewFactory.cs", label="Exit lambda expression", span="34-34"];
m3_10 [cluster="Nancy.Tests.Unit.Validation.ModelValidationResultFixture.Should_return_valid_when_no_errors_exist()", file="TestingViewFactory.cs", label="Entry Nancy.Tests.Unit.Validation.ModelValidationResultFixture.Should_return_valid_when_no_errors_exist()", span="18-18"];
m3_11 [cluster="Nancy.Tests.Unit.Validation.ModelValidationResultFixture.Should_return_valid_when_no_errors_exist()", file="TestingViewFactory.cs", label="var subject = new ModelValidationResult(null)", span="21-21"];
m3_12 [cluster="Nancy.Tests.Unit.Validation.ModelValidationResultFixture.Should_return_valid_when_no_errors_exist()", file="TestingViewFactory.cs", label="var result = subject.IsValid", span="24-24"];
m3_13 [cluster="Nancy.Tests.Unit.Validation.ModelValidationResultFixture.Should_return_valid_when_no_errors_exist()", file="TestingViewFactory.cs", label="result.ShouldBeTrue()", span="27-27"];
m3_14 [cluster="Nancy.Tests.Unit.Validation.ModelValidationResultFixture.Should_return_valid_when_no_errors_exist()", file="TestingViewFactory.cs", label="Exit Nancy.Tests.Unit.Validation.ModelValidationResultFixture.Should_return_valid_when_no_errors_exist()", span="18-18"];
m4_17 [cluster="Nancy.Testing.Tests.TestingViewExtensions.ViewFactoryTestModel.ViewFactoryTestModel()", file="TestingViewFactoryTestModule.cs", label="Entry Nancy.Testing.Tests.TestingViewExtensions.ViewFactoryTestModel.ViewFactoryTestModel()", span="22-22"];
m4_18 [cluster="Nancy.Testing.Tests.TestingViewExtensions.CompositeTestModel.CompositeTestModel()", file="TestingViewFactoryTestModule.cs", label="Entry Nancy.Testing.Tests.TestingViewExtensions.CompositeTestModel.CompositeTestModel()", span="28-28"];
m4_0 [cluster="Nancy.Testing.Tests.TestingViewExtensions.TestingViewFactoryTestModule.TestingViewFactoryTestModule()", file="TestingViewFactoryTestModule.cs", label="Entry Nancy.Testing.Tests.TestingViewExtensions.TestingViewFactoryTestModule.TestingViewFactoryTestModule()", span="5-5"];
m4_1 [cluster="Nancy.Testing.Tests.TestingViewExtensions.TestingViewFactoryTestModule.TestingViewFactoryTestModule()", file="TestingViewFactoryTestModule.cs", label="this.Get[''/testingViewFactoryNoModel''] = _ => this.View[VIEW_PATH]", span="7-7"];
m4_2 [cluster="Nancy.Testing.Tests.TestingViewExtensions.TestingViewFactoryTestModule.TestingViewFactoryTestModule()", file="TestingViewFactoryTestModule.cs", label="this.Get[''/testingViewFactory''] = _ => this.View[VIEW_PATH, GetModel()]", span="8-8"];
m4_3 [cluster="Nancy.Testing.Tests.TestingViewExtensions.TestingViewFactoryTestModule.TestingViewFactoryTestModule()", color=green, community=0, file="TestingViewFactoryTestModule.cs", label="0: this.Get[''/testingViewFactoryNoViewName''] = _ => { return GetModel(); }", span="10-10"];
m4_4 [cluster="Nancy.Testing.Tests.TestingViewExtensions.TestingViewFactoryTestModule.TestingViewFactoryTestModule()", file="TestingViewFactoryTestModule.cs", label="Exit Nancy.Testing.Tests.TestingViewExtensions.TestingViewFactoryTestModule.TestingViewFactoryTestModule()", span="5-5"];
m4_12 [cluster="lambda expression", file="TestingViewFactoryTestModule.cs", label="Entry lambda expression", span="9-9"];
m4_5 [cluster="lambda expression", file="TestingViewFactoryTestModule.cs", label="Entry lambda expression", span="7-7"];
m4_6 [cluster="lambda expression", file="TestingViewFactoryTestModule.cs", label="this.View[VIEW_PATH]", span="7-7"];
m4_7 [cluster="lambda expression", file="TestingViewFactoryTestModule.cs", label="Exit lambda expression", span="7-7"];
m4_8 [cluster="lambda expression", file="TestingViewFactoryTestModule.cs", label="Entry lambda expression", span="8-8"];
m4_9 [cluster="lambda expression", file="TestingViewFactoryTestModule.cs", label="this.View[VIEW_PATH, GetModel()]", span="8-8"];
m4_10 [cluster="lambda expression", file="TestingViewFactoryTestModule.cs", label="Exit lambda expression", span="8-8"];
m4_13 [cluster="lambda expression", color=green, community=0, file="TestingViewFactoryTestModule.cs", label="0: return GetModel();", span="10-10"];
m4_14 [cluster="lambda expression", file="TestingViewFactoryTestModule.cs", label="Exit lambda expression", span="9-9"];
m4_11 [cluster="Nancy.Testing.Tests.TestingViewExtensions.TestingViewFactoryTestModule.GetModel()", file="TestingViewFactoryTestModule.cs", label="Entry Nancy.Testing.Tests.TestingViewExtensions.TestingViewFactoryTestModule.GetModel()", span="12-12"];
m4_15 [cluster="Nancy.Testing.Tests.TestingViewExtensions.TestingViewFactoryTestModule.GetModel()", file="TestingViewFactoryTestModule.cs", label="return new ViewFactoryTestModel\r\n            {\r\n                AString = ''A value'',\r\n                ComplexModel = new CompositeTestModel { AnotherString = ''Another value'' }\r\n            };", span="14-18"];
m4_16 [cluster="Nancy.Testing.Tests.TestingViewExtensions.TestingViewFactoryTestModule.GetModel()", file="TestingViewFactoryTestModule.cs", label="Exit Nancy.Testing.Tests.TestingViewExtensions.TestingViewFactoryTestModule.GetModel()", span="12-12"];
m4_19 [file="TestingViewFactoryTestModule.cs", label="Nancy.Testing.Tests.TestingViewExtensions.TestingViewFactoryTestModule", span=""];
n34 -> n1  [color=darkseagreen4, key=1, label="Nancy.Testing.Tests.TestingViewExtensions.GetModelExtententionsTests", style=dashed];
n34 -> n11  [color=darkseagreen4, key=1, label="Nancy.Testing.Tests.TestingViewExtensions.GetModelExtententionsTests", style=dashed];
n34 -> n18  [color=darkseagreen4, key=1, label="Nancy.Testing.Tests.TestingViewExtensions.GetModelExtententionsTests", style=dashed];
n34 -> n23  [color=darkseagreen4, key=1, label="Nancy.Testing.Tests.TestingViewExtensions.GetModelExtententionsTests", style=dashed];
n34 -> n28  [color=darkseagreen4, key=1, label="Nancy.Testing.Tests.TestingViewExtensions.GetModelExtententionsTests", style=dashed];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=2, style=dotted];
n1 -> n5  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
n1 -> n6  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
n2 -> n0  [color=blue, key=0, style=bold];
n5 -> n6  [key=0, style=solid];
n5 -> n8  [key=2, style=dotted];
n6 -> n7  [key=0, style=solid];
n6 -> n9  [key=2, style=dotted];
n4 -> n5  [key=0, style=solid];
n4 -> n6  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
n7 -> n4  [color=blue, key=0, style=bold];
n10 -> n11  [key=0, style=solid];
n11 -> n12  [key=0, style=solid];
n11 -> n14  [key=2, style=dotted];
n12 -> n13  [key=0, style=solid];
n12 -> n15  [key=2, style=dotted];
n12 -> n16  [key=2, style=dotted];
n13 -> n10  [color=blue, key=0, style=bold];
n17 -> n18  [key=0, style=solid];
n18 -> n19  [key=0, style=solid];
n18 -> n14  [key=2, style=dotted];
n19 -> n20  [key=0, style=solid];
n19 -> n15  [key=2, style=dotted];
n19 -> n21  [key=2, style=dotted];
n20 -> n17  [color=blue, key=0, style=bold];
n22 -> n23  [key=0, style=solid];
n23 -> n24  [key=0, style=solid];
n23 -> n14  [key=2, style=dotted];
n24 -> n25  [key=0, style=solid];
n24 -> n15  [key=2, style=dotted];
n24 -> n26  [key=2, style=dotted];
n25 -> n22  [color=blue, key=0, style=bold];
n27 -> n28  [key=0, style=solid];
n28 -> n29  [key=0, style=solid];
n28 -> n14  [key=2, style=dotted];
n29 -> n30  [key=0, style=solid];
n29 -> n15  [key=2, style=dotted];
n29 -> n31  [color=darkseagreen4, key=1, label=model, style=dashed];
n30 -> n31  [key=0, style=solid];
n30 -> n33  [key=2, style=dotted];
n31 -> n32  [key=0, style=solid];
n31 -> n33  [key=2, style=dotted];
n32 -> n27  [color=blue, key=0, style=bold];
d6 -> d7  [color=green, key=0, style=solid];
d6 -> d13  [color=green, key=1, label="System.IO.Stream", style=dashed];
d5 -> d6  [color=green, key=0, style=solid];
d5 -> d9  [color=green, key=1, label="System.Func<System.IO.Stream>", style=dashed];
d5 -> d0  [color=darkorchid, key=3, label="Parameter variable System.Func<System.IO.Stream> sourceDelegate", style=bold];
d7 -> d5  [color=blue, key=0, style=bold];
d13 -> d14  [key=0, style=solid];
d13 -> d16  [key=2, style=dotted];
d9 -> d10  [color=green, key=0, style=solid];
d9 -> d15  [color=green, key=2, style=dotted];
d9 -> d11  [color=green, key=1, label=source, style=dashed];
d9 -> d12  [color=green, key=1, label=source, style=dashed];
d9 -> d13  [color=green, key=1, label=source, style=dashed];
d18 -> d9  [color=green, key=1, label="System.Func<System.IO.Stream>", style=dashed];
d8 -> d9  [color=green, key=0, style=solid];
d8 -> d13  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
d10 -> d12  [color=green, key=0, style=solid];
d10 -> d11  [key=0, style=solid];
d11 -> d12  [color=green, key=0, style=solid];
d12 -> d13  [color=green, key=0, style=solid];
d12 -> d14  [color=green, key=0, style=solid];
d14 -> d8  [color=blue, key=0, style=bold];
d1 -> d5  [key=2, style=dotted];
d1 -> d2  [key=0, style=solid];
d0 -> d1  [key=0, style=solid];
d0 -> d2  [color=darkseagreen4, key=1, label=string, style=dashed];
d17 -> d1  [color=darkseagreen4, key=1, label="Nancy.Responses.StreamResponse", style=dashed];
d17 -> d2  [color=darkseagreen4, key=1, label="Nancy.Responses.StreamResponse", style=dashed];
d17 -> d3  [color=darkseagreen4, key=1, label="Nancy.Responses.StreamResponse", style=dashed];
d2 -> d3  [key=0, style=solid];
d4 -> d0  [color=blue, key=0, style=bold];
d3 -> d4  [key=0, style=solid];
m1_0 -> m1_1  [color=green, key=0, style=solid];
m1_1 -> m1_2  [color=green, key=0, style=solid];
m1_1 -> n3  [color=green, key=2, style=dotted];
m1_1 -> m1_5  [color=green, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m1_1 -> m1_6  [color=green, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m1_2 -> m1_0  [color=blue, key=0, style=bold];
m1_17 -> m1_18  [color=green, key=0, style=solid];
m1_18 -> m1_19  [color=green, key=0, style=solid];
m1_18 -> m1_14  [color=green, key=2, style=dotted];
m1_18 -> m1_21  [color=green, key=1, label="lambda expression", style=dashed];
m1_19 -> m1_20  [color=green, key=0, style=solid];
m1_19 -> m1_15  [color=green, key=2, style=dotted];
m1_19 -> m1_16  [color=green, key=2, style=dotted];
m1_20 -> m1_17  [color=blue, key=0, style=bold];
m1_10 -> m1_11  [color=green, key=0, style=solid];
m1_11 -> m1_12  [color=green, key=0, style=solid];
m1_11 -> m1_14  [color=green, key=2, style=dotted];
m1_12 -> m1_13  [color=green, key=0, style=solid];
m1_12 -> m1_15  [color=green, key=2, style=dotted];
m1_12 -> m1_16  [color=green, key=2, style=dotted];
m1_13 -> m1_10  [color=blue, key=0, style=bold];
m1_21 -> m1_22  [color=green, key=0, style=solid];
m1_5 -> m1_6  [color=green, key=0, style=solid];
m1_5 -> m1_8  [color=green, key=2, style=dotted];
m1_6 -> m1_7  [color=green, key=0, style=solid];
m1_6 -> m1_9  [color=green, key=2, style=dotted];
m1_4 -> m1_5  [color=green, key=0, style=solid];
m1_4 -> m1_6  [color=green, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m1_7 -> m1_4  [color=blue, key=0, style=bold];
m1_22 -> m1_23  [color=green, key=0, style=solid];
m1_22 -> m1_24  [color=green, key=2, style=dotted];
m1_23 -> m1_21  [color=blue, key=0, style=bold];
m1_25 -> m1_1  [color=green, key=1, label="Nancy.Testing.Tests.TestingViewExtensions.GetViewNameExtensionTests", style=dashed];
m1_25 -> m1_11  [color=green, key=1, label="Nancy.Testing.Tests.TestingViewExtensions.GetViewNameExtensionTests", style=dashed];
m1_25 -> m1_18  [color=green, key=1, label="Nancy.Testing.Tests.TestingViewExtensions.GetViewNameExtensionTests", style=dashed];
m2_15 -> m2_16  [color=red, key=0, style=solid];
m2_16 -> m2_17  [color=red, key=0, style=solid];
m2_16 -> n3  [color=red, key=2, style=dotted];
m2_16 -> m2_21  [color=red, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m2_16 -> m2_22  [color=red, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_6  [key=2, style=dotted];
m2_18 -> m2_19  [key=0, style=solid];
m2_18 -> m2_7  [key=2, style=dotted];
m2_18 -> m2_8  [key=2, style=dotted];
m2_19 -> m2_15  [color=blue, key=0, style=bold];
m2_24 -> m2_25  [color=red, key=0, style=solid];
m2_25 -> m2_26  [color=red, key=0, style=solid];
m2_26 -> m2_24  [color=blue, key=0, style=bold];
m2_30 -> m2_31  [color=red, key=0, style=solid];
m2_31 -> m2_32  [color=red, key=0, style=solid];
m2_32 -> m2_30  [color=blue, key=0, style=bold];
m2_33 -> m2_34  [color=red, key=0, style=solid];
m2_10 -> m2_11  [color=red, key=0, style=solid];
m2_10 -> m2_13  [color=red, key=2, style=dotted];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_14  [key=2, style=dotted];
m2_9 -> m2_10  [color=red, key=0, style=solid];
m2_9 -> m2_11  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m2_12 -> m2_9  [color=blue, key=0, style=bold];
m2_21 -> m2_22  [color=red, key=0, style=solid];
m2_21 -> m2_13  [color=red, key=2, style=dotted];
m2_22 -> m2_23  [key=0, style=solid];
m2_22 -> m2_14  [key=2, style=dotted];
m2_20 -> m2_21  [color=red, key=0, style=solid];
m2_20 -> m2_22  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m2_23 -> m2_20  [color=blue, key=0, style=bold];
m2_27 -> m2_28  [color=red, key=0, style=solid];
m2_28 -> m2_29  [color=red, key=0, style=solid];
m2_29 -> m2_27  [color=blue, key=0, style=bold];
m2_34 -> m2_35  [color=red, key=0, style=solid];
m2_35 -> m2_33  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [color=red, key=0, style=solid];
m2_1 -> m2_2  [color=red, key=0, style=solid];
m2_1 -> n3  [color=red, key=2, style=dotted];
m2_1 -> m2_10  [color=red, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m2_1 -> m2_11  [color=red, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_6  [key=2, style=dotted];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_7  [key=2, style=dotted];
m2_3 -> m2_8  [key=2, style=dotted];
m2_4 -> m2_0  [color=blue, key=0, style=bold];
m2_36 -> m2_25  [color=red, key=1, label="Nancy.Testing.Tests.TestingViewExtensions.ModuleWithLongModulePath", style=dashed];
m2_36 -> m2_28  [color=red, key=1, label="Nancy.Testing.Tests.TestingViewExtensions.ModuleWithLongModulePath", style=dashed];
m2_37 -> m2_31  [color=red, key=1, label="Nancy.Testing.Tests.TestingViewExtensions.ModuleWithOutModulePath", style=dashed];
m2_37 -> m2_34  [color=red, key=1, label="Nancy.Testing.Tests.TestingViewExtensions.ModuleWithOutModulePath", style=dashed];
m3_16 -> m3_17  [key=0, style=solid];
m3_17 -> m3_18  [key=0, style=solid];
m3_17 -> m3_9  [key=2, style=dotted];
m3_17 -> m3_21  [key=2, style=dotted];
m3_18 -> m3_19  [key=0, style=solid];
m3_19 -> m3_20  [key=0, style=solid];
m3_19 -> m3_22  [key=2, style=dotted];
m3_20 -> m3_16  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_4  [key=2, style=dotted];
m3_1 -> m3_6  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_5  [key=2, style=dotted];
m3_3 -> m3_0  [color=blue, key=0, style=bold];
m3_23 -> m3_24  [key=0, style=solid];
m3_6 -> m3_7  [key=0, style=solid];
m3_7 -> m3_8  [key=0, style=solid];
m3_7 -> m3_9  [key=2, style=dotted];
m3_8 -> m3_6  [color=blue, key=0, style=bold];
m3_24 -> m3_25  [key=0, style=solid];
m3_25 -> m3_23  [color=blue, key=0, style=bold];
m3_10 -> m3_11  [key=0, style=solid];
m3_11 -> m3_12  [key=0, style=solid];
m3_11 -> m3_9  [key=2, style=dotted];
m3_12 -> m3_13  [key=0, style=solid];
m3_13 -> m3_14  [key=0, style=solid];
m3_13 -> m3_15  [key=2, style=dotted];
m3_14 -> m3_10  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_2 -> m4_3  [color=green, key=0, style=solid];
m4_3 -> m4_4  [color=green, key=0, style=solid];
m4_3 -> m4_11  [color=green, key=3, label="method methodReturn dynamic ", style=bold];
m4_4 -> m4_0  [color=blue, key=0, style=bold];
m4_12 -> m4_13  [color=green, key=0, style=solid];
m4_5 -> m4_6  [key=0, style=solid];
m4_6 -> m4_7  [key=0, style=solid];
m4_7 -> m4_5  [color=blue, key=0, style=bold];
m4_8 -> m4_9  [key=0, style=solid];
m4_9 -> m4_10  [key=0, style=solid];
m4_9 -> m4_11  [key=2, style=dotted];
m4_10 -> m4_8  [color=blue, key=0, style=bold];
m4_13 -> m4_14  [color=green, key=0, style=solid];
m4_13 -> m4_11  [color=green, key=2, style=dotted];
m4_14 -> m4_12  [color=blue, key=0, style=bold];
m4_11 -> m4_15  [key=0, style=solid];
m4_15 -> m4_16  [key=0, style=solid];
m4_15 -> m4_17  [key=2, style=dotted];
m4_15 -> m4_18  [key=2, style=dotted];
m4_16 -> m4_11  [color=blue, key=0, style=bold];
m4_19 -> m4_1  [color=darkseagreen4, key=1, label="Nancy.Testing.Tests.TestingViewExtensions.TestingViewFactoryTestModule", style=dashed];
m4_19 -> m4_6  [color=darkseagreen4, key=1, label="Nancy.Testing.Tests.TestingViewExtensions.TestingViewFactoryTestModule", style=dashed];
m4_19 -> m4_2  [color=darkseagreen4, key=1, label="Nancy.Testing.Tests.TestingViewExtensions.TestingViewFactoryTestModule", style=dashed];
m4_19 -> m4_9  [color=darkseagreen4, key=1, label="Nancy.Testing.Tests.TestingViewExtensions.TestingViewFactoryTestModule", style=dashed];
m4_19 -> m4_3  [color=green, key=1, label="Nancy.Testing.Tests.TestingViewExtensions.TestingViewFactoryTestModule", style=dashed];
m4_19 -> m4_13  [color=red, key=1, label="Nancy.Testing.Tests.TestingViewExtensions.TestingViewFactoryTestModule", style=dashed];
}
