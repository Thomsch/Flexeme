digraph  {
n53 [label="Nancy.Hosting.Aspnet.NancyHandler", span=""];
n0 [cluster="Nancy.Hosting.Aspnet.NancyHandler.NancyHandler(Nancy.INancyEngine)", label="Entry Nancy.Hosting.Aspnet.NancyHandler.NancyHandler(Nancy.INancyEngine)", span="13-13"];
n1 [cluster="Nancy.Hosting.Aspnet.NancyHandler.NancyHandler(Nancy.INancyEngine)", label="this.engine = engine", span="15-15"];
n2 [cluster="Nancy.Hosting.Aspnet.NancyHandler.NancyHandler(Nancy.INancyEngine)", label="Exit Nancy.Hosting.Aspnet.NancyHandler.NancyHandler(Nancy.INancyEngine)", span="13-13"];
n3 [cluster="Nancy.Hosting.Aspnet.NancyHandler.ProcessRequest(HttpContextBase)", label="Entry Nancy.Hosting.Aspnet.NancyHandler.ProcessRequest(HttpContextBase)", span="18-18"];
n4 [cluster="Nancy.Hosting.Aspnet.NancyHandler.ProcessRequest(HttpContextBase)", label="var request = CreateNancyRequest(context)", span="20-20"];
n6 [cluster="Nancy.Hosting.Aspnet.NancyHandler.ProcessRequest(HttpContextBase)", label="SetNancyResponseToHttpResponse(context, nancyContext.Response)", span="24-24"];
n5 [cluster="Nancy.Hosting.Aspnet.NancyHandler.ProcessRequest(HttpContextBase)", label="var nancyContext = this.engine.HandleRequest(request)", span="22-22"];
n8 [cluster="Nancy.Hosting.Aspnet.NancyHandler.CreateNancyRequest(HttpContextBase)", label="Entry Nancy.Hosting.Aspnet.NancyHandler.CreateNancyRequest(HttpContextBase)", span="28-28"];
n9 [cluster="Nancy.INancyEngine.HandleRequest(Nancy.Request)", label="Entry Nancy.INancyEngine.HandleRequest(Nancy.Request)", span="46-46"];
n7 [cluster="Nancy.Hosting.Aspnet.NancyHandler.ProcessRequest(HttpContextBase)", label="Exit Nancy.Hosting.Aspnet.NancyHandler.ProcessRequest(HttpContextBase)", span="18-18"];
n10 [cluster="Nancy.Hosting.Aspnet.NancyHandler.SetNancyResponseToHttpResponse(HttpContextBase, Nancy.Response)", label="Entry Nancy.Hosting.Aspnet.NancyHandler.SetNancyResponseToHttpResponse(HttpContextBase, Nancy.Response)", span="81-81"];
n11 [cluster="Nancy.Hosting.Aspnet.NancyHandler.CreateNancyRequest(HttpContextBase)", label="var expectedRequestLength =\r\n                GetExpectedRequestLength(context.Request.Headers.ToDictionary())", span="30-31"];
n13 [cluster="Nancy.Hosting.Aspnet.NancyHandler.CreateNancyRequest(HttpContextBase)", label="return new Request(\r\n                context.Request.HttpMethod.ToUpperInvariant(),\r\n                nancyUrl,\r\n                RequestStream.FromStream(context.Request.InputStream, expectedRequestLength, true),\r\n                context.Request.Headers.ToDictionary(),\r\n                context.Request.UserHostAddress);", span="44-49"];
n15 [cluster="Unk.ToDictionary", label="Entry Unk.ToDictionary", span=""];
n16 [cluster="Unk.GetExpectedRequestLength", label="Entry Unk.GetExpectedRequestLength", span=""];
n17 [cluster="Nancy.Url.Url()", label="Entry Nancy.Url.Url()", span="14-14"];
n18 [cluster="Unk.TrimEnd", label="Entry Unk.TrimEnd", span=""];
n19 [cluster="Unk.Replace", label="Entry Unk.Replace", span=""];
n14 [cluster="Nancy.Hosting.Aspnet.NancyHandler.CreateNancyRequest(HttpContextBase)", label="Exit Nancy.Hosting.Aspnet.NancyHandler.CreateNancyRequest(HttpContextBase)", span="28-28"];
n20 [cluster="Request.cstr", label="Entry Request.cstr", span=""];
n21 [cluster="Unk.ToUpperInvariant", label="Entry Unk.ToUpperInvariant", span=""];
n22 [cluster="Unk.FromStream", label="Entry Unk.FromStream", span=""];
n23 [cluster="Nancy.Hosting.Aspnet.NancyHandler.GetExpectedRequestLength(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", label="Entry Nancy.Hosting.Aspnet.NancyHandler.GetExpectedRequestLength(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", span="52-52"];
n24 [cluster="Nancy.Hosting.Aspnet.NancyHandler.GetExpectedRequestLength(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", label="incomingHeaders == null", span="54-54"];
n26 [cluster="Nancy.Hosting.Aspnet.NancyHandler.GetExpectedRequestLength(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", label="!incomingHeaders.ContainsKey(''Content-Length'')", span="59-59"];
n28 [cluster="Nancy.Hosting.Aspnet.NancyHandler.GetExpectedRequestLength(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", label="var headerValue =\r\n                incomingHeaders[''Content-Length''].SingleOrDefault()", span="64-65"];
n25 [cluster="Nancy.Hosting.Aspnet.NancyHandler.GetExpectedRequestLength(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", label="return 0;", span="56-56"];
n27 [cluster="Nancy.Hosting.Aspnet.NancyHandler.GetExpectedRequestLength(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", label="return 0;", span="61-61"];
n36 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
n29 [cluster="Nancy.Hosting.Aspnet.NancyHandler.GetExpectedRequestLength(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", label="headerValue == null", span="67-67"];
n37 [cluster="System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", span="0-0"];
n32 [cluster="Nancy.Hosting.Aspnet.NancyHandler.GetExpectedRequestLength(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", label="!long.TryParse(headerValue, NumberStyles.Any, CultureInfo.InvariantCulture, out contentLength)", span="73-73"];
n30 [cluster="Nancy.Hosting.Aspnet.NancyHandler.GetExpectedRequestLength(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", label="return 0;", span="69-69"];
n31 [cluster="Nancy.Hosting.Aspnet.NancyHandler.GetExpectedRequestLength(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", label="long contentLength", span="72-72"];
n33 [cluster="Nancy.Hosting.Aspnet.NancyHandler.GetExpectedRequestLength(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", label="return 0;", span="75-75"];
n34 [cluster="Nancy.Hosting.Aspnet.NancyHandler.GetExpectedRequestLength(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", label="return contentLength;", span="78-78"];
n38 [cluster="long.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out long)", label="Entry long.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out long)", span="0-0"];
n35 [cluster="Nancy.Hosting.Aspnet.NancyHandler.GetExpectedRequestLength(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", label="Exit Nancy.Hosting.Aspnet.NancyHandler.GetExpectedRequestLength(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", span="52-52"];
n39 [cluster="Nancy.Hosting.Aspnet.NancyHandler.SetNancyResponseToHttpResponse(HttpContextBase, Nancy.Response)", label="SetHttpResponseHeaders(context, response)", span="83-83"];
n40 [cluster="Nancy.Hosting.Aspnet.NancyHandler.SetNancyResponseToHttpResponse(HttpContextBase, Nancy.Response)", label="context.Response.ContentType = response.ContentType", span="85-85"];
n41 [cluster="Nancy.Hosting.Aspnet.NancyHandler.SetNancyResponseToHttpResponse(HttpContextBase, Nancy.Response)", label="context.Response.StatusCode = (int)response.StatusCode", span="86-86"];
n42 [cluster="Nancy.Hosting.Aspnet.NancyHandler.SetNancyResponseToHttpResponse(HttpContextBase, Nancy.Response)", label="response.Contents.Invoke(context.Response.OutputStream)", span="87-87"];
n44 [cluster="Nancy.Hosting.Aspnet.NancyHandler.SetHttpResponseHeaders(HttpContextBase, Nancy.Response)", label="Entry Nancy.Hosting.Aspnet.NancyHandler.SetHttpResponseHeaders(HttpContextBase, Nancy.Response)", span="90-90"];
n43 [cluster="Nancy.Hosting.Aspnet.NancyHandler.SetNancyResponseToHttpResponse(HttpContextBase, Nancy.Response)", label="Exit Nancy.Hosting.Aspnet.NancyHandler.SetNancyResponseToHttpResponse(HttpContextBase, Nancy.Response)", span="81-81"];
n45 [cluster="Unk.Invoke", label="Entry Unk.Invoke", span=""];
n46 [cluster="Nancy.Hosting.Aspnet.NancyHandler.SetHttpResponseHeaders(HttpContextBase, Nancy.Response)", label="response.Headers", span="92-92"];
n47 [cluster="Nancy.Hosting.Aspnet.NancyHandler.SetHttpResponseHeaders(HttpContextBase, Nancy.Response)", label="context.Response.AddHeader(header.Key, header.Value)", span="94-94"];
n48 [cluster="Nancy.Hosting.Aspnet.NancyHandler.SetHttpResponseHeaders(HttpContextBase, Nancy.Response)", label="response.Cookies", span="97-97"];
n49 [cluster="Nancy.Hosting.Aspnet.NancyHandler.SetHttpResponseHeaders(HttpContextBase, Nancy.Response)", label="context.Response.AddHeader(''Set-Cookie'', cookie.ToString())", span="99-99"];
n51 [cluster="Unk.AddHeader", label="Entry Unk.AddHeader", span=""];
n50 [cluster="Nancy.Hosting.Aspnet.NancyHandler.SetHttpResponseHeaders(HttpContextBase, Nancy.Response)", label="Exit Nancy.Hosting.Aspnet.NancyHandler.SetHttpResponseHeaders(HttpContextBase, Nancy.Response)", span="90-90"];
n52 [cluster="object.ToString()", label="Entry object.ToString()", span="0-0"];
d12 [cluster="Nancy.Hosting.Aspnet.NancyHandler.CreateNancyRequest(HttpContextBase)", color=green, community=0, label="var nancyUrl = new Url\r\n                               {\r\n                                   Scheme = context.Request.Url.Scheme,\r\n                                   HostName = context.Request.Url.Host,\r\n                                   Port = context.Request.Url.Port,\r\n                                   BasePath = context.Request.ApplicationPath.TrimEnd('/'),\r\n                                   Path = context.Request.AppRelativeCurrentExecutionFilePath.Replace(''~'', string.Empty),\r\n                                   Query = context.Request.Url.Query,\r\n                                   Fragment = context.Request.Url.Fragment,\r\n                               }", prediction=0, span="33-42"];
n3 -> n6  [color=darkseagreen4, key=1, label=HttpContextBase, style=dashed];
n8 -> n13  [color=darkseagreen4, key=1, label=HttpContextBase, style=dashed];
n10 -> n42  [color=darkseagreen4, key=1, label="Nancy.Response", style=dashed];
n11 -> n13  [color=darkseagreen4, key=1, label=expectedRequestLength, style=dashed];
n23 -> n26  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>", style=dashed];
n23 -> n28  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>", style=dashed];
n28 -> n32  [color=darkseagreen4, key=1, label=headerValue, style=dashed];
n44 -> n47  [color=darkseagreen4, key=1, label=HttpContextBase, style=dashed];
n44 -> n48  [color=darkseagreen4, key=1, label="Nancy.Response", style=dashed];
n44 -> n49  [color=darkseagreen4, key=1, label=HttpContextBase, style=dashed];
n47 -> n47  [color=darkseagreen4, key=1, label=header, style=dashed];
}
