digraph  {
n83 [label="Nancy.Testing.Tests.CaseSensitivityFixture.MainModule", span=""];
n84 [label="Nancy.Testing.Tests.CaseSensitivityFixture", span=""];
n85 [label=animal, span=""];
n86 [label=animal, span=""];
n87 [label=animal, span=""];
n88 [label=animal, span=""];
n0 [cluster="Nancy.Testing.Tests.CaseSensitivityFixture.MainModule.MainModule()", label="Entry Nancy.Testing.Tests.CaseSensitivityFixture.MainModule.MainModule()", span="12-12"];
n1 [cluster="Nancy.Testing.Tests.CaseSensitivityFixture.MainModule.MainModule()", label="Get[''/''] = _ =>\r\n                {\r\n                    string name = Request.Query.animal.HasValue ? Request.Query.animal : '''';\r\n                    return name;\r\n                }", span="14-18"];
n2 [cluster="Nancy.Testing.Tests.CaseSensitivityFixture.MainModule.MainModule()", label="Get[''/{ANIMAL}''] = args =>\r\n                {\r\n                    string name = args.animal.HasValue ? args.animal : '''';\r\n                    return name;\r\n                }", span="20-24"];
n10 [cluster="lambda expression", label="string name = args.animal.HasValue ? args.animal : ''''", span="22-22"];
n4 [cluster="Nancy.Testing.Tests.CaseSensitivityFixture.MainModule.MainModule()", label="Exit Nancy.Testing.Tests.CaseSensitivityFixture.MainModule.MainModule()", span="12-12"];
n5 [cluster="lambda expression", label="Entry lambda expression", span="14-18"];
n6 [cluster="lambda expression", label="string name = Request.Query.animal.HasValue ? Request.Query.animal : ''''", span="16-16"];
n7 [cluster="lambda expression", label="return name;", span="17-17"];
n8 [cluster="lambda expression", label="Exit lambda expression", span="14-18"];
n9 [cluster="lambda expression", label="Entry lambda expression", span="20-24"];
n11 [cluster="lambda expression", label="return name;", span="23-23"];
n12 [cluster="lambda expression", label="Exit lambda expression", span="20-24"];
n13 [cluster="lambda expression", label="Entry lambda expression", span="26-30"];
n14 [cluster="lambda expression", label="Animal animal = this.Bind<Animal>()", span="28-28"];
n17 [cluster="Nancy.NancyModule.Bind<TModel>(params string[])", label="Entry Nancy.NancyModule.Bind<TModel>(params string[])", span="25-25"];
n16 [cluster="lambda expression", label="Exit lambda expression", span="26-30"];
n18 [cluster="Nancy.Testing.Tests.CaseSensitivityFixture.CaseSensitivityFixture()", label="Entry Nancy.Testing.Tests.CaseSensitivityFixture.CaseSensitivityFixture()", span="39-39"];
n19 [cluster="Nancy.Testing.Tests.CaseSensitivityFixture.CaseSensitivityFixture()", label="var bootstrapper = new ConfigurableBootstrapper(with =>\r\n            {\r\n                with.Module<MainModule>();\r\n            })", span="41-44"];
n20 [cluster="Nancy.Testing.Tests.CaseSensitivityFixture.CaseSensitivityFixture()", label="this.browser = new Browser(bootstrapper)", span="46-46"];
n22 [cluster="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapper(System.Action<Nancy.Testing.ConfigurableBootstrapper.ConfigurableBoostrapperConfigurator>)", label="Entry Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapper(System.Action<Nancy.Testing.ConfigurableBootstrapper.ConfigurableBoostrapperConfigurator>)", span="42-42"];
n25 [cluster="lambda expression", label="with.Module<MainModule>()", span="43-43"];
n21 [cluster="Nancy.Testing.Tests.CaseSensitivityFixture.CaseSensitivityFixture()", label="Exit Nancy.Testing.Tests.CaseSensitivityFixture.CaseSensitivityFixture()", span="39-39"];
n23 [cluster="Nancy.Testing.Browser.Browser(Nancy.Bootstrapper.INancyBootstrapper)", label="Entry Nancy.Testing.Browser.Browser(Nancy.Bootstrapper.INancyBootstrapper)", span="25-25"];
n24 [cluster="lambda expression", label="Entry lambda expression", span="41-44"];
n26 [cluster="lambda expression", label="Exit lambda expression", span="41-44"];
n27 [cluster="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBoostrapperConfigurator.Module<T>()", label="Entry Nancy.Testing.ConfigurableBootstrapper.ConfigurableBoostrapperConfigurator.Module<T>()", span="704-704"];
n28 [cluster="Nancy.Testing.Tests.CaseSensitivityFixture.Should_pull_query_parameter_with_different_case()", label="Entry Nancy.Testing.Tests.CaseSensitivityFixture.Should_pull_query_parameter_with_different_case()", span="50-50"];
n29 [cluster="Nancy.Testing.Tests.CaseSensitivityFixture.Should_pull_query_parameter_with_different_case()", label="StaticConfiguration.CaseSensitive = false", span="52-52"];
n30 [cluster="Nancy.Testing.Tests.CaseSensitivityFixture.Should_pull_query_parameter_with_different_case()", label="string animal = ''dog''", span="53-53"];
n31 [cluster="Nancy.Testing.Tests.CaseSensitivityFixture.Should_pull_query_parameter_with_different_case()", label="var response = browser.Get(''/'', with =>\r\n            {\r\n                with.Query(''ANIMAL'', animal);\r\n            })", span="54-57"];
n38 [cluster="lambda expression", label="with.Query(''ANIMAL'', animal)", span="56-56"];
n32 [cluster="Nancy.Testing.Tests.CaseSensitivityFixture.Should_pull_query_parameter_with_different_case()", label="response.Body.AsString().ShouldEqual(animal)", span="59-59"];
n34 [cluster="Nancy.Testing.Browser.Get(string, System.Action<Nancy.Testing.BrowserContext>)", label="Entry Nancy.Testing.Browser.Get(string, System.Action<Nancy.Testing.BrowserContext>)", span="49-49"];
n37 [cluster="lambda expression", label="Entry lambda expression", span="54-57"];
n33 [cluster="Nancy.Testing.Tests.CaseSensitivityFixture.Should_pull_query_parameter_with_different_case()", label="Exit Nancy.Testing.Tests.CaseSensitivityFixture.Should_pull_query_parameter_with_different_case()", span="50-50"];
n35 [cluster="Nancy.Testing.BrowserResponseBodyWrapper.AsString()", label="Entry Nancy.Testing.BrowserResponseBodyWrapper.AsString()", span="30-30"];
n36 [cluster="object.ShouldEqual(object)", label="Entry object.ShouldEqual(object)", span="95-95"];
n39 [cluster="lambda expression", label="Exit lambda expression", span="54-57"];
n40 [cluster="Nancy.Testing.BrowserContext.Query(string, string)", label="Entry Nancy.Testing.BrowserContext.Query(string, string)", span="132-132"];
n41 [cluster="Nancy.Testing.Tests.CaseSensitivityFixture.Should_not_pull_query_parameter_with_different_case_when_sensitivity_is_on()", label="Entry Nancy.Testing.Tests.CaseSensitivityFixture.Should_not_pull_query_parameter_with_different_case_when_sensitivity_is_on()", span="63-63"];
n42 [cluster="Nancy.Testing.Tests.CaseSensitivityFixture.Should_not_pull_query_parameter_with_different_case_when_sensitivity_is_on()", label="StaticConfiguration.CaseSensitive = true", span="65-65"];
n43 [cluster="Nancy.Testing.Tests.CaseSensitivityFixture.Should_not_pull_query_parameter_with_different_case_when_sensitivity_is_on()", label="string animal = ''dog''", span="66-66"];
n44 [cluster="Nancy.Testing.Tests.CaseSensitivityFixture.Should_not_pull_query_parameter_with_different_case_when_sensitivity_is_on()", label="var response = browser.Get(''/'', with =>\r\n            {\r\n                with.Query(''ANIMAL'', animal);\r\n            })", span="67-70"];
n48 [cluster="lambda expression", label="with.Query(''ANIMAL'', animal)", span="69-69"];
n45 [cluster="Nancy.Testing.Tests.CaseSensitivityFixture.Should_not_pull_query_parameter_with_different_case_when_sensitivity_is_on()", label="response.Body.AsString().ShouldEqual('''')", span="72-72"];
n47 [cluster="lambda expression", label="Entry lambda expression", span="67-70"];
n46 [cluster="Nancy.Testing.Tests.CaseSensitivityFixture.Should_not_pull_query_parameter_with_different_case_when_sensitivity_is_on()", label="Exit Nancy.Testing.Tests.CaseSensitivityFixture.Should_not_pull_query_parameter_with_different_case_when_sensitivity_is_on()", span="63-63"];
n49 [cluster="lambda expression", label="Exit lambda expression", span="67-70"];
n50 [cluster="Nancy.Testing.Tests.CaseSensitivityFixture.Should_pull_parameter_with_different_case()", label="Entry Nancy.Testing.Tests.CaseSensitivityFixture.Should_pull_parameter_with_different_case()", span="76-76"];
n51 [cluster="Nancy.Testing.Tests.CaseSensitivityFixture.Should_pull_parameter_with_different_case()", label="StaticConfiguration.CaseSensitive = false", span="78-78"];
n52 [cluster="Nancy.Testing.Tests.CaseSensitivityFixture.Should_pull_parameter_with_different_case()", label="string animal = ''dog''", span="79-79"];
n53 [cluster="Nancy.Testing.Tests.CaseSensitivityFixture.Should_pull_parameter_with_different_case()", label="var response = browser.Get(''/dog'', with =>\r\n            {\r\n            })", span="80-82"];
n54 [cluster="Nancy.Testing.Tests.CaseSensitivityFixture.Should_pull_parameter_with_different_case()", label="response.Body.AsString().ShouldEqual(animal)", span="84-84"];
n56 [cluster="lambda expression", label="Entry lambda expression", span="80-82"];
n55 [cluster="Nancy.Testing.Tests.CaseSensitivityFixture.Should_pull_parameter_with_different_case()", label="Exit Nancy.Testing.Tests.CaseSensitivityFixture.Should_pull_parameter_with_different_case()", span="76-76"];
n57 [cluster="lambda expression", label="Exit lambda expression", span="80-82"];
n58 [cluster="Nancy.Testing.Tests.CaseSensitivityFixture.Should_not_pull_parameter_with_different_case_when_sensitivity_is_on()", label="Entry Nancy.Testing.Tests.CaseSensitivityFixture.Should_not_pull_parameter_with_different_case_when_sensitivity_is_on()", span="88-88"];
n59 [cluster="Nancy.Testing.Tests.CaseSensitivityFixture.Should_not_pull_parameter_with_different_case_when_sensitivity_is_on()", label="StaticConfiguration.CaseSensitive = true", span="90-90"];
n60 [cluster="Nancy.Testing.Tests.CaseSensitivityFixture.Should_not_pull_parameter_with_different_case_when_sensitivity_is_on()", label="var response = browser.Get(''/dog'', with =>\r\n            {\r\n            })", span="92-94"];
n61 [cluster="Nancy.Testing.Tests.CaseSensitivityFixture.Should_not_pull_parameter_with_different_case_when_sensitivity_is_on()", label="response.Body.AsString().ShouldEqual('''')", span="96-96"];
n63 [cluster="lambda expression", label="Entry lambda expression", span="92-94"];
n62 [cluster="Nancy.Testing.Tests.CaseSensitivityFixture.Should_not_pull_parameter_with_different_case_when_sensitivity_is_on()", label="Exit Nancy.Testing.Tests.CaseSensitivityFixture.Should_not_pull_parameter_with_different_case_when_sensitivity_is_on()", span="88-88"];
n64 [cluster="lambda expression", label="Exit lambda expression", span="92-94"];
n65 [cluster="Nancy.Testing.Tests.CaseSensitivityFixture.Should_bind_with_different_case()", label="Entry Nancy.Testing.Tests.CaseSensitivityFixture.Should_bind_with_different_case()", span="100-100"];
n66 [cluster="Nancy.Testing.Tests.CaseSensitivityFixture.Should_bind_with_different_case()", label="StaticConfiguration.CaseSensitive = false", span="102-102"];
n67 [cluster="Nancy.Testing.Tests.CaseSensitivityFixture.Should_bind_with_different_case()", label="string animal = ''dog''", span="103-103"];
n68 [cluster="Nancy.Testing.Tests.CaseSensitivityFixture.Should_bind_with_different_case()", label="var response = browser.Get(''/animal'', with =>\r\n            {\r\n                with.Query(''TYPE'', animal);\r\n            })", span="104-107"];
n72 [cluster="lambda expression", label="with.Query(''TYPE'', animal)", span="106-106"];
n71 [cluster="lambda expression", label="Entry lambda expression", span="104-107"];
n70 [cluster="Nancy.Testing.Tests.CaseSensitivityFixture.Should_bind_with_different_case()", label="Exit Nancy.Testing.Tests.CaseSensitivityFixture.Should_bind_with_different_case()", span="100-100"];
n73 [cluster="lambda expression", label="Exit lambda expression", span="104-107"];
n74 [cluster="Nancy.Testing.Tests.CaseSensitivityFixture.Should_not_bind_with_different_case_when_sensitivity_is_on()", label="Entry Nancy.Testing.Tests.CaseSensitivityFixture.Should_not_bind_with_different_case_when_sensitivity_is_on()", span="113-113"];
n75 [cluster="Nancy.Testing.Tests.CaseSensitivityFixture.Should_not_bind_with_different_case_when_sensitivity_is_on()", label="StaticConfiguration.CaseSensitive = true", span="115-115"];
n76 [cluster="Nancy.Testing.Tests.CaseSensitivityFixture.Should_not_bind_with_different_case_when_sensitivity_is_on()", label="string animal = ''dog''", span="116-116"];
n77 [cluster="Nancy.Testing.Tests.CaseSensitivityFixture.Should_not_bind_with_different_case_when_sensitivity_is_on()", label="var response = browser.Get(''/animal'', with =>\r\n            {\r\n                with.Query(''TYPE'', animal);\r\n            })", span="117-120"];
n81 [cluster="lambda expression", label="with.Query(''TYPE'', animal)", span="119-119"];
n80 [cluster="lambda expression", label="Entry lambda expression", span="117-120"];
n79 [cluster="Nancy.Testing.Tests.CaseSensitivityFixture.Should_not_bind_with_different_case_when_sensitivity_is_on()", label="Exit Nancy.Testing.Tests.CaseSensitivityFixture.Should_not_bind_with_different_case_when_sensitivity_is_on()", span="113-113"];
n82 [cluster="lambda expression", label="Exit lambda expression", span="117-120"];
d29 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_return_main_page_with_valid_auth_cookie()", color=green, community=0, label="var result = browser.Get(diagsConfig.Path, with =>\r\n                {\r\n                    with.Cookie(DiagsCookieName, Nancy.Helpers.HttpUtility.UrlEncode(this.GetSessionCookieValue(''password'')));\r\n                })", prediction=0, span="108-111"];
d195 [label="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture", span=""];
d26 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_return_main_page_with_valid_auth_cookie()", label="var diagsConfig = new DiagnosticsConfiguration { Password = ''password'', CryptographyConfiguration = this.cryptoConfig }", span="96-96"];
d28 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_return_main_page_with_valid_auth_cookie()", label="var browser = new Browser(bootstrapper)", span="105-105"];
d30 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_return_main_page_with_valid_auth_cookie()", label="result.Body[''#infoBox''].ShouldExistOnce()", span="114-114"];
d15 [cluster="Nancy.Testing.Browser.Get(string, System.Action<Nancy.Testing.BrowserContext>)", label="Entry Nancy.Testing.Browser.Get(string, System.Action<Nancy.Testing.BrowserContext>)", span="74-74"];
d37 [cluster="lambda expression", label="Entry lambda expression", span="108-111"];
d1 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.DiagnosticsHookFixture()", label="this.cryptoConfig = CryptographyConfiguration.Default", span="20-20"];
d2 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.DiagnosticsHookFixture()", label="this.objectSerializer = new DefaultObjectSerializer()", span="21-21"];
d6 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_return_login_page_with_no_auth_cookie()", label="var diagsConfig = new DiagnosticsConfiguration { Password = ''password'', CryptographyConfiguration = this.cryptoConfig }", span="74-74"];
d38 [cluster="lambda expression", label="with.Cookie(DiagsCookieName, Nancy.Helpers.HttpUtility.UrlEncode(this.GetSessionCookieValue(''password'')))", span="110-110"];
d44 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_return_login_page_with_expired_auth_cookie()", label="var diagsConfig = new DiagnosticsConfiguration { Password = ''password'', CryptographyConfiguration = this.cryptoConfig }", span="121-121"];
d47 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_return_login_page_with_expired_auth_cookie()", label="var result = browser.Get(diagsConfig.Path, with =>\r\n            {\r\n                with.Cookie(DiagsCookieName, Nancy.Helpers.HttpUtility.UrlEncode(this.GetSessionCookieValue(''password'', DateTime.Now.AddMinutes(-10))));\r\n            })", span="133-136"];
d56 [cluster="lambda expression", label="with.Cookie(DiagsCookieName, Nancy.Helpers.HttpUtility.UrlEncode(this.GetSessionCookieValue(''password'', DateTime.Now.AddMinutes(-10))))", span="135-135"];
d60 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_return_login_page_with_auth_cookie_with_incorrect_password()", label="var diagsConfig = new DiagnosticsConfiguration { Password = ''password'', CryptographyConfiguration = this.cryptoConfig }", span="146-146"];
d63 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_return_login_page_with_auth_cookie_with_incorrect_password()", label="var result = browser.Get(diagsConfig.Path, with =>\r\n            {\r\n                with.Cookie(DiagsCookieName, Nancy.Helpers.HttpUtility.UrlEncode(this.GetSessionCookieValue(''wrongPassword'')));\r\n            })", span="158-161"];
d72 [cluster="lambda expression", label="with.Cookie(DiagsCookieName, Nancy.Helpers.HttpUtility.UrlEncode(this.GetSessionCookieValue(''wrongPassword'')))", span="160-160"];
d75 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_not_accept_invalid_password()", label="var diagsConfig = new DiagnosticsConfiguration { Password = ''password'', CryptographyConfiguration = this.cryptoConfig }", span="171-171"];
d99 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_set_login_cookie_when_password_correct()", label="var diagsConfig = new DiagnosticsConfiguration { Password = ''password'', CryptographyConfiguration = this.cryptoConfig }", span="197-197"];
d124 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_use_rolling_expiry_for_auth_cookie()", label="var diagsConfig = new DiagnosticsConfiguration { Password = ''password'', CryptographyConfiguration = this.cryptoConfig }", span="223-223"];
d128 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_use_rolling_expiry_for_auth_cookie()", label="var result = browser.Get(diagsConfig.Path, with =>\r\n            {\r\n                with.Cookie(DiagsCookieName, Nancy.Helpers.HttpUtility.UrlEncode(this.GetSessionCookieValue(''password'', expiryDate)));\r\n            })", span="236-239"];
d140 [cluster="lambda expression", label="with.Cookie(DiagsCookieName, Nancy.Helpers.HttpUtility.UrlEncode(this.GetSessionCookieValue(''password'', expiryDate)))", span="238-238"];
d130 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_use_rolling_expiry_for_auth_cookie()", label="this.DecodeCookie(result.Cookies.First(c => c.Name == DiagsCookieName))\r\n                .Expiry.ShouldNotEqual(expiryDate)", span="243-244"];
d149 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_return_diagnostic_example()", label="var diagsConfig = new DiagnosticsConfiguration { Password = ''password'', CryptographyConfiguration = this.cryptoConfig }", span="251-251"];
d152 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_return_diagnostic_example()", label="var result = browser.Get(diagsConfig.Path + ''/interactive/providers/'', with =>\r\n                {\r\n                    with.Cookie(DiagsCookieName, Nancy.Helpers.HttpUtility.UrlEncode(this.GetSessionCookieValue(''password'')));\r\n                })", span="263-266"];
d165 [cluster="lambda expression", label="with.Cookie(DiagsCookieName, Nancy.Helpers.HttpUtility.UrlEncode(this.GetSessionCookieValue(''password'')))", span="265-265"];
d170 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.GetSessionCookieValue(string, System.DateTime?)", label="var serializedSession = this.objectSerializer.Serialize(session)", span="284-284"];
d171 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.GetSessionCookieValue(string, System.DateTime?)", label="var encryptedSession = this.cryptoConfig.EncryptionProvider.Encrypt(serializedSession)", span="286-286"];
d172 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.GetSessionCookieValue(string, System.DateTime?)", label="var hmacBytes = this.cryptoConfig.HmacProvider.GenerateHmac(encryptedSession)", span="287-287"];
d186 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.DecodeCookie(Nancy.Cookies.INancyCookie)", label="var hmacStringLength = Base64Helpers.GetBase64Length(this.cryptoConfig.HmacProvider.HmacLength)", span="296-296"];
d188 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.DecodeCookie(Nancy.Cookies.INancyCookie)", label="var decrypted = this.cryptoConfig.EncryptionProvider.Decrypt(encryptedSession)", span="298-298"];
d189 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.DecodeCookie(Nancy.Cookies.INancyCookie)", label="return this.objectSerializer.Deserialize(decrypted) as DiagnosticsSession;", span="300-300"];
d25 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_return_main_page_with_valid_auth_cookie()", label="Entry Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_return_main_page_with_valid_auth_cookie()", span="93-93"];
d27 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_return_main_page_with_valid_auth_cookie()", label="var bootstrapper = new ConfigurableBootstrapper(with =>\r\n            {\r\n                with.EnableAutoRegistration();\r\n                with.DiagnosticsConfiguration(diagsConfig);\r\n                with.Diagnostics<DefaultDiagnostics>();\r\n            })", span="98-103"];
d12 [cluster="Nancy.Diagnostics.DiagnosticsConfiguration.DiagnosticsConfiguration()", label="Entry Nancy.Diagnostics.DiagnosticsConfiguration.DiagnosticsConfiguration()", span="16-16"];
d34 [cluster="lambda expression", label="with.DiagnosticsConfiguration(diagsConfig)", span="101-101"];
d14 [cluster="Nancy.Testing.Browser.Browser(Nancy.Bootstrapper.INancyBootstrapper, System.Action<Nancy.Testing.BrowserContext>)", label="Entry Nancy.Testing.Browser.Browser(Nancy.Bootstrapper.INancyBootstrapper, System.Action<Nancy.Testing.BrowserContext>)", span="38-38"];
d31 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_return_main_page_with_valid_auth_cookie()", label="Exit Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_return_main_page_with_valid_auth_cookie()", span="93-93"];
d16 [cluster="Nancy.Testing.QueryWrapper.ShouldExistOnce()", label="Entry Nancy.Testing.QueryWrapper.ShouldExistOnce()", span="50-50"];
d9 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_return_login_page_with_no_auth_cookie()", label="var result = browser.Get(diagsConfig.Path)", span="86-86"];
d0 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.DiagnosticsHookFixture()", label="Entry Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.DiagnosticsHookFixture()", span="18-18"];
d3 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.DiagnosticsHookFixture()", label="Exit Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.DiagnosticsHookFixture()", span="18-18"];
d4 [cluster="Nancy.DefaultObjectSerializer.DefaultObjectSerializer()", label="Entry Nancy.DefaultObjectSerializer.DefaultObjectSerializer()", span="7-7"];
d5 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_return_login_page_with_no_auth_cookie()", label="Entry Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_return_login_page_with_no_auth_cookie()", span="71-71"];
d7 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_return_login_page_with_no_auth_cookie()", label="var bootstrapper = new ConfigurableBootstrapper(with =>\r\n            {\r\n                with.EnableAutoRegistration();\r\n                with.DiagnosticsConfiguration(diagsConfig);\r\n                with.Diagnostics<DefaultDiagnostics>();\r\n            })", span="76-81"];
d19 [cluster="lambda expression", label="with.DiagnosticsConfiguration(diagsConfig)", span="79-79"];
d40 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.GetSessionCookieValue(string, System.DateTime?)", label="Entry Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.GetSessionCookieValue(string, System.DateTime?)", span="273-273"];
d41 [cluster="Nancy.Helpers.HttpUtility.UrlEncode(string)", label="Entry Nancy.Helpers.HttpUtility.UrlEncode(string)", span="383-383"];
d42 [cluster="Nancy.Testing.BrowserContext.Cookie(string, string)", label="Entry Nancy.Testing.BrowserContext.Cookie(string, string)", span="129-129"];
d43 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_return_login_page_with_expired_auth_cookie()", label="Entry Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_return_login_page_with_expired_auth_cookie()", span="118-118"];
d45 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_return_login_page_with_expired_auth_cookie()", label="var bootstrapper = new ConfigurableBootstrapper(with =>\r\n            {\r\n                with.EnableAutoRegistration();\r\n                with.DiagnosticsConfiguration(diagsConfig);\r\n                with.Diagnostics<DefaultDiagnostics>();\r\n            })", span="123-128"];
d52 [cluster="lambda expression", label="with.DiagnosticsConfiguration(diagsConfig)", span="126-126"];
d46 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_return_login_page_with_expired_auth_cookie()", label="var browser = new Browser(bootstrapper)", span="130-130"];
d48 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_return_login_page_with_expired_auth_cookie()", label="result.Body[''#login''].ShouldExistOnce()", span="139-139"];
d55 [cluster="lambda expression", label="Entry lambda expression", span="133-136"];
d57 [cluster="lambda expression", label="Exit lambda expression", span="133-136"];
d58 [cluster="System.DateTime.AddMinutes(double)", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
d59 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_return_login_page_with_auth_cookie_with_incorrect_password()", label="Entry Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_return_login_page_with_auth_cookie_with_incorrect_password()", span="143-143"];
d61 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_return_login_page_with_auth_cookie_with_incorrect_password()", label="var bootstrapper = new ConfigurableBootstrapper(with =>\r\n            {\r\n                with.EnableAutoRegistration();\r\n                with.DiagnosticsConfiguration(diagsConfig);\r\n                with.Diagnostics<DefaultDiagnostics>();\r\n            })", span="148-153"];
d68 [cluster="lambda expression", label="with.DiagnosticsConfiguration(diagsConfig)", span="151-151"];
d62 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_return_login_page_with_auth_cookie_with_incorrect_password()", label="var browser = new Browser(bootstrapper)", span="155-155"];
d64 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_return_login_page_with_auth_cookie_with_incorrect_password()", label="result.Body[''#login''].ShouldExistOnce()", span="164-164"];
d71 [cluster="lambda expression", label="Entry lambda expression", span="158-161"];
d73 [cluster="lambda expression", label="Exit lambda expression", span="158-161"];
d74 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_not_accept_invalid_password()", label="Entry Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_not_accept_invalid_password()", span="168-168"];
d76 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_not_accept_invalid_password()", label="var bootstrapper = new ConfigurableBootstrapper(with =>\r\n            {\r\n                with.EnableAutoRegistration();\r\n                with.DiagnosticsConfiguration(diagsConfig);\r\n                with.Diagnostics<DefaultDiagnostics>();\r\n            })", span="173-178"];
d87 [cluster="lambda expression", label="with.DiagnosticsConfiguration(diagsConfig)", span="176-176"];
d78 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_not_accept_invalid_password()", label="var result = browser.Post(diagsConfig.Path, with =>\r\n            {\r\n                with.FormValue(''Password'', ''wrongpassword'');\r\n            })", span="183-186"];
d98 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_set_login_cookie_when_password_correct()", label="Entry Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_set_login_cookie_when_password_correct()", span="194-194"];
d100 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_set_login_cookie_when_password_correct()", label="var bootstrapper = new ConfigurableBootstrapper(with =>\r\n            {\r\n                with.EnableAutoRegistration();\r\n                with.DiagnosticsConfiguration(diagsConfig);\r\n                with.Diagnostics<DefaultDiagnostics>();\r\n            })", span="199-204"];
d111 [cluster="lambda expression", label="with.DiagnosticsConfiguration(diagsConfig)", span="202-202"];
d102 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_set_login_cookie_when_password_correct()", label="var result = browser.Post(diagsConfig.Path, with =>\r\n            {\r\n                with.FormValue(''Password'', ''password'');\r\n            })", span="209-212"];
d123 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_use_rolling_expiry_for_auth_cookie()", label="Entry Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_use_rolling_expiry_for_auth_cookie()", span="220-220"];
d125 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_use_rolling_expiry_for_auth_cookie()", label="var bootstrapper = new ConfigurableBootstrapper(with =>\r\n            {\r\n                with.EnableAutoRegistration();\r\n                with.DiagnosticsConfiguration(diagsConfig);\r\n                with.Diagnostics<DefaultDiagnostics>();\r\n            })", span="225-230"];
d136 [cluster="lambda expression", label="with.DiagnosticsConfiguration(diagsConfig)", span="228-228"];
d126 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_use_rolling_expiry_for_auth_cookie()", label="var browser = new Browser(bootstrapper)", span="232-232"];
d127 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_use_rolling_expiry_for_auth_cookie()", label="var expiryDate = DateTime.Now.AddMinutes(5)", span="233-233"];
d129 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_use_rolling_expiry_for_auth_cookie()", label="result.Cookies.Any(c => c.Name == DiagsCookieName).ShouldBeTrue()", span="242-242"];
d139 [cluster="lambda expression", label="Entry lambda expression", span="236-239"];
d203 [label=expiryDate, span=""];
d141 [cluster="lambda expression", label="Exit lambda expression", span="236-239"];
d131 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_use_rolling_expiry_for_auth_cookie()", label="Exit Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_use_rolling_expiry_for_auth_cookie()", span="220-220"];
d107 [cluster="Unk.First", label="Entry Unk.First", span=""];
d132 [cluster="Unk.DecodeCookie", label="Entry Unk.DecodeCookie", span=""];
d133 [cluster="object.ShouldNotEqual(object)", label="Entry object.ShouldNotEqual(object)", span="130-130"];
d145 [cluster="lambda expression", label="Entry lambda expression", span="243-243"];
d148 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_return_diagnostic_example()", label="Entry Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_return_diagnostic_example()", span="248-248"];
d150 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_return_diagnostic_example()", label="var bootstrapper = new ConfigurableBootstrapper(with =>\r\n            {\r\n                with.EnableAutoRegistration();\r\n                with.DiagnosticsConfiguration(diagsConfig);\r\n                with.Diagnostics<DefaultDiagnostics>();\r\n            })", span="253-258"];
d161 [cluster="lambda expression", label="with.DiagnosticsConfiguration(diagsConfig)", span="256-256"];
d151 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_return_diagnostic_example()", label="var browser = new Browser(bootstrapper)", span="260-260"];
d153 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_return_diagnostic_example()", label="result.Body.AsString().ShouldNotContain(''Fake testing provider'')", span="269-269"];
d164 [cluster="lambda expression", label="Entry lambda expression", span="263-266"];
d154 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_return_diagnostic_example()", label="result.Body.AsString().Contains(''Testing Diagnostic Provider'')", span="270-270"];
d166 [cluster="lambda expression", label="Exit lambda expression", span="263-266"];
d169 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.GetSessionCookieValue(string, System.DateTime?)", label="var session = new DiagnosticsSession\r\n                {\r\n                    Hash = hash,\r\n                    Salt = salt,\r\n                    Expiry = expiry.HasValue ? expiry.Value : DateTime.Now.AddMinutes(15),\r\n                }", span="277-282"];
d179 [cluster="Nancy.IObjectSerializer.Serialize(object)", label="Entry Nancy.IObjectSerializer.Serialize(object)", span="12-12"];
d180 [cluster="Nancy.Cryptography.IEncryptionProvider.Encrypt(string)", label="Entry Nancy.Cryptography.IEncryptionProvider.Encrypt(string)", span="12-12"];
d174 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.GetSessionCookieValue(string, System.DateTime?)", label="return String.Format(''{1}{0}'', encryptedSession, hmacString);", span="290-290"];
d173 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.GetSessionCookieValue(string, System.DateTime?)", label="var hmacString = Convert.ToBase64String(hmacBytes)", span="288-288"];
d181 [cluster="Nancy.Cryptography.IHmacProvider.GenerateHmac(string)", label="Entry Nancy.Cryptography.IHmacProvider.GenerateHmac(string)", span="17-17"];
d185 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.DecodeCookie(Nancy.Cookies.INancyCookie)", label="var cookieValue = nancyCookie.Value", span="295-295"];
d187 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.DecodeCookie(Nancy.Cookies.INancyCookie)", label="var encryptedSession = cookieValue.Substring(hmacStringLength)", span="297-297"];
d191 [cluster="Nancy.Cryptography.Base64Helpers.GetBase64Length(int)", label="Entry Nancy.Cryptography.Base64Helpers.GetBase64Length(int)", span="11-11"];
d193 [cluster="Nancy.Cryptography.IEncryptionProvider.Decrypt(string)", label="Entry Nancy.Cryptography.IEncryptionProvider.Decrypt(string)", span="19-19"];
d190 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.DecodeCookie(Nancy.Cookies.INancyCookie)", label="Exit Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.DecodeCookie(Nancy.Cookies.INancyCookie)", span="293-293"];
d194 [cluster="Nancy.IObjectSerializer.Deserialize(string)", label="Entry Nancy.IObjectSerializer.Deserialize(string)", span="19-19"];
d13 [cluster="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapper(System.Action<Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator>)", label="Entry Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapper(System.Action<Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator>)", span="62-62"];
d33 [cluster="lambda expression", label="with.EnableAutoRegistration()", span="100-100"];
d35 [cluster="lambda expression", label="with.Diagnostics<DefaultDiagnostics>()", span="102-102"];
d197 [label=diagsConfig, span=""];
d32 [cluster="lambda expression", label="Entry lambda expression", span="98-103"];
d23 [cluster="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.DiagnosticsConfiguration(Nancy.Diagnostics.DiagnosticsConfiguration)", label="Entry Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.DiagnosticsConfiguration(Nancy.Diagnostics.DiagnosticsConfiguration)", span="1668-1668"];
d8 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_return_login_page_with_no_auth_cookie()", label="var browser = new Browser(bootstrapper)", span="83-83"];
d77 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_not_accept_invalid_password()", label="var browser = new Browser(bootstrapper)", span="180-180"];
d101 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_set_login_cookie_when_password_correct()", label="var browser = new Browser(bootstrapper)", span="206-206"];
d10 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_return_login_page_with_no_auth_cookie()", label="result.Body[''#login''].ShouldExistOnce()", span="89-89"];
d79 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_not_accept_invalid_password()", label="result.Body[''#login''].ShouldExistOnce()", span="189-189"];
d11 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_return_login_page_with_no_auth_cookie()", label="Exit Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_return_login_page_with_no_auth_cookie()", span="71-71"];
d18 [cluster="lambda expression", label="with.EnableAutoRegistration()", span="78-78"];
d20 [cluster="lambda expression", label="with.Diagnostics<DefaultDiagnostics>()", span="80-80"];
d196 [label=diagsConfig, span=""];
d17 [cluster="lambda expression", label="Entry lambda expression", span="76-81"];
d175 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.GetSessionCookieValue(string, System.DateTime?)", label="Exit Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.GetSessionCookieValue(string, System.DateTime?)", span="273-273"];
d167 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.GetSessionCookieValue(string, System.DateTime?)", label="var salt = DiagnosticsSession.GenerateRandomSalt()", span="275-275"];
d168 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.GetSessionCookieValue(string, System.DateTime?)", label="var hash = DiagnosticsSession.GenerateSaltedHash(password, salt)", span="276-276"];
d49 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_return_login_page_with_expired_auth_cookie()", label="Exit Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_return_login_page_with_expired_auth_cookie()", span="118-118"];
d51 [cluster="lambda expression", label="with.EnableAutoRegistration()", span="125-125"];
d53 [cluster="lambda expression", label="with.Diagnostics<DefaultDiagnostics>()", span="127-127"];
d198 [label=diagsConfig, span=""];
d50 [cluster="lambda expression", label="Entry lambda expression", span="123-128"];
d65 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_return_login_page_with_auth_cookie_with_incorrect_password()", label="Exit Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_return_login_page_with_auth_cookie_with_incorrect_password()", span="143-143"];
d67 [cluster="lambda expression", label="with.EnableAutoRegistration()", span="150-150"];
d69 [cluster="lambda expression", label="with.Diagnostics<DefaultDiagnostics>()", span="152-152"];
d199 [label=diagsConfig, span=""];
d66 [cluster="lambda expression", label="Entry lambda expression", span="148-153"];
d81 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_not_accept_invalid_password()", label="Exit Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_not_accept_invalid_password()", span="168-168"];
d86 [cluster="lambda expression", label="with.EnableAutoRegistration()", span="175-175"];
d88 [cluster="lambda expression", label="with.Diagnostics<DefaultDiagnostics>()", span="177-177"];
d200 [label=diagsConfig, span=""];
d85 [cluster="lambda expression", label="Entry lambda expression", span="173-178"];
d82 [cluster="Nancy.Testing.Browser.Post(string, System.Action<Nancy.Testing.BrowserContext>)", label="Entry Nancy.Testing.Browser.Post(string, System.Action<Nancy.Testing.BrowserContext>)", span="162-162"];
d90 [cluster="lambda expression", label="Entry lambda expression", span="183-186"];
d80 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_not_accept_invalid_password()", label="result.Cookies.Any(c => c.Name == DiagsCookieName && !string.IsNullOrEmpty(c.Value)).ShouldBeFalse()", span="190-190"];
d105 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_set_login_cookie_when_password_correct()", label="Exit Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_set_login_cookie_when_password_correct()", span="194-194"];
d110 [cluster="lambda expression", label="with.EnableAutoRegistration()", span="201-201"];
d112 [cluster="lambda expression", label="with.Diagnostics<DefaultDiagnostics>()", span="203-203"];
d201 [label=diagsConfig, span=""];
d109 [cluster="lambda expression", label="Entry lambda expression", span="199-204"];
d103 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_set_login_cookie_when_password_correct()", label="result.Cookies.Any(c => c.Name == DiagsCookieName).ShouldBeTrue()", span="215-215"];
d114 [cluster="lambda expression", label="Entry lambda expression", span="209-212"];
d104 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_set_login_cookie_when_password_correct()", label="string.IsNullOrEmpty(result.Cookies.First(c => c.Name == DiagsCookieName).Value).ShouldBeFalse()", span="216-216"];
d135 [cluster="lambda expression", label="with.EnableAutoRegistration()", span="227-227"];
d137 [cluster="lambda expression", label="with.Diagnostics<DefaultDiagnostics>()", span="229-229"];
d202 [label=diagsConfig, span=""];
d134 [cluster="lambda expression", label="Entry lambda expression", span="225-230"];
d83 [cluster="Unk.Any", label="Entry Unk.Any", span=""];
d106 [cluster="bool.ShouldBeTrue()", label="Entry bool.ShouldBeTrue()", span="95-95"];
d142 [cluster="lambda expression", label="Entry lambda expression", span="242-242"];
d147 [cluster="lambda expression", label="Exit lambda expression", span="243-243"];
d146 [cluster="lambda expression", label="c.Name == DiagsCookieName", span="243-243"];
d155 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_return_diagnostic_example()", label="Exit Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.Should_return_diagnostic_example()", span="248-248"];
d160 [cluster="lambda expression", label="with.EnableAutoRegistration()", span="255-255"];
d162 [cluster="lambda expression", label="with.Diagnostics<DefaultDiagnostics>()", span="257-257"];
d204 [label=diagsConfig, span=""];
d159 [cluster="lambda expression", label="Entry lambda expression", span="253-258"];
d156 [cluster="Nancy.Testing.BrowserResponseBodyWrapper.AsString()", label="Entry Nancy.Testing.BrowserResponseBodyWrapper.AsString()", span="30-30"];
d157 [cluster="string.ShouldNotContain(string)", label="Entry string.ShouldNotContain(string)", span="80-80"];
d158 [cluster="string.Contains(string)", label="Entry string.Contains(string)", span="0-0"];
d178 [cluster="Nancy.Diagnostics.DiagnosticsSession.DiagnosticsSession()", label="Entry Nancy.Diagnostics.DiagnosticsSession.DiagnosticsSession()", span="7-7"];
d183 [cluster="string.Format(string, object, object)", label="Entry string.Format(string, object, object)", span="0-0"];
d182 [cluster="System.Convert.ToBase64String(byte[])", label="Entry System.Convert.ToBase64String(byte[])", span="0-0"];
d184 [cluster="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.DecodeCookie(Nancy.Cookies.INancyCookie)", label="Entry Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture.DecodeCookie(Nancy.Cookies.INancyCookie)", span="293-293"];
d192 [cluster="string.Substring(int)", label="Entry string.Substring(int)", span="0-0"];
d22 [cluster="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.EnableAutoRegistration()", label="Entry Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.EnableAutoRegistration()", span="798-798"];
d24 [cluster="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.Diagnostics<T>()", label="Entry Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.Diagnostics<T>()", span="1692-1692"];
d176 [cluster="Nancy.Diagnostics.DiagnosticsSession.GenerateRandomSalt()", label="Entry Nancy.Diagnostics.DiagnosticsSession.GenerateRandomSalt()", span="15-15"];
d177 [cluster="Nancy.Diagnostics.DiagnosticsSession.GenerateSaltedHash(string, byte[])", label="Entry Nancy.Diagnostics.DiagnosticsSession.GenerateSaltedHash(string, byte[])", span="44-44"];
d54 [cluster="lambda expression", label="Exit lambda expression", span="123-128"];
d70 [cluster="lambda expression", label="Exit lambda expression", span="148-153"];
d89 [cluster="lambda expression", label="Exit lambda expression", span="173-178"];
d92 [cluster="lambda expression", label="Exit lambda expression", span="183-186"];
d91 [cluster="lambda expression", label="with.FormValue(''Password'', ''wrongpassword'')", span="185-185"];
d84 [cluster="bool.ShouldBeFalse()", label="Entry bool.ShouldBeFalse()", span="100-100"];
d94 [cluster="lambda expression", label="Entry lambda expression", span="190-190"];
d113 [cluster="lambda expression", label="Exit lambda expression", span="199-204"];
d117 [cluster="lambda expression", label="Entry lambda expression", span="215-215"];
d116 [cluster="lambda expression", label="Exit lambda expression", span="209-212"];
d115 [cluster="lambda expression", label="with.FormValue(''Password'', ''password'')", span="211-211"];
d108 [cluster="Unk.IsNullOrEmpty", label="Entry Unk.IsNullOrEmpty", span=""];
d120 [cluster="lambda expression", label="Entry lambda expression", span="216-216"];
d138 [cluster="lambda expression", label="Exit lambda expression", span="225-230"];
d144 [cluster="lambda expression", label="Exit lambda expression", span="242-242"];
d143 [cluster="lambda expression", label="c.Name == DiagsCookieName", span="242-242"];
d163 [cluster="lambda expression", label="Exit lambda expression", span="253-258"];
d93 [cluster="Nancy.Testing.BrowserContext.FormValue(string, string)", label="Entry Nancy.Testing.BrowserContext.FormValue(string, string)", span="112-112"];
d96 [cluster="lambda expression", label="Exit lambda expression", span="190-190"];
d95 [cluster="lambda expression", label="c.Name == DiagsCookieName && !string.IsNullOrEmpty(c.Value)", span="190-190"];
d119 [cluster="lambda expression", label="Exit lambda expression", span="215-215"];
d118 [cluster="lambda expression", label="c.Name == DiagsCookieName", span="215-215"];
d122 [cluster="lambda expression", label="Exit lambda expression", span="216-216"];
d121 [cluster="lambda expression", label="c.Name == DiagsCookieName", span="216-216"];
d97 [cluster="string.IsNullOrEmpty(string)", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m0_3 [cluster="System.Guid.TryParse(string, out System.Guid)", file="ConfigurableBootstrapper.cs", label="Entry System.Guid.TryParse(string, out System.Guid)", span="0-0"];
m0_0 [cluster="Nancy.Routing.Constraints.GuidRouteConstraint.TryMatch(string, string, out System.Guid)", file="ConfigurableBootstrapper.cs", label="Entry Nancy.Routing.Constraints.GuidRouteConstraint.TryMatch(string, string, out System.Guid)", span="11-11"];
m0_1 [cluster="Nancy.Routing.Constraints.GuidRouteConstraint.TryMatch(string, string, out System.Guid)", file="ConfigurableBootstrapper.cs", label="return Guid.TryParse(segment, out matchedValue);", span="13-13"];
m0_2 [cluster="Nancy.Routing.Constraints.GuidRouteConstraint.TryMatch(string, string, out System.Guid)", file="ConfigurableBootstrapper.cs", label="Exit Nancy.Routing.Constraints.GuidRouteConstraint.TryMatch(string, string, out System.Guid)", span="11-11"];
m1_4 [cluster="Nancy.Routing.Route.Invoke(Nancy.DynamicDictionary)", file="DefaultRouteInvoker.cs", label="Entry Nancy.Routing.Route.Invoke(Nancy.DynamicDictionary)", span="54-54"];
m1_0 [cluster="Nancy.Routing.DefaultRouteInvoker.Invoke(Nancy.Routing.Route, Nancy.DynamicDictionary, Nancy.NancyContext)", file="DefaultRouteInvoker.cs", label="Entry Nancy.Routing.DefaultRouteInvoker.Invoke(Nancy.Routing.Route, Nancy.DynamicDictionary, Nancy.NancyContext)", span="14-14"];
m1_1 [cluster="Nancy.Routing.DefaultRouteInvoker.Invoke(Nancy.Routing.Route, Nancy.DynamicDictionary, Nancy.NancyContext)", color=green, community=1, file="DefaultRouteInvoker.cs", label="var result =\r\n                route.Invoke(parameters)", prediction=1, span="16-17"];
m1_2 [cluster="Nancy.Routing.DefaultRouteInvoker.Invoke(Nancy.Routing.Route, Nancy.DynamicDictionary, Nancy.NancyContext)", color=green, community=0, file="DefaultRouteInvoker.cs", label="return result;", prediction=2, span="19-19"];
m1_3 [cluster="Nancy.Routing.DefaultRouteInvoker.Invoke(Nancy.Routing.Route, Nancy.DynamicDictionary, Nancy.NancyContext)", file="DefaultRouteInvoker.cs", label="Exit Nancy.Routing.DefaultRouteInvoker.Invoke(Nancy.Routing.Route, Nancy.DynamicDictionary, Nancy.NancyContext)", span="14-14"];
m2_2 [cluster="Nancy.Routing.Constraints.IRouteConstraint.GetMatch(string, string, string)", file="DefaultRouteResolverFixture.cs", label="Entry Nancy.Routing.Constraints.IRouteConstraint.GetMatch(string, string, string)", span="8-8"];
m2_3 [cluster="Nancy.Routing.Constraints.IRouteConstraint.GetMatch(string, string, string)", file="DefaultRouteResolverFixture.cs", label="Exit Nancy.Routing.Constraints.IRouteConstraint.GetMatch(string, string, string)", span="8-8"];
m2_0 [cluster="Nancy.Routing.Constraints.IRouteConstraint.Matches(string)", file="DefaultRouteResolverFixture.cs", label="Entry Nancy.Routing.Constraints.IRouteConstraint.Matches(string)", span="6-6"];
m2_1 [cluster="Nancy.Routing.Constraints.IRouteConstraint.Matches(string)", file="DefaultRouteResolverFixture.cs", label="Exit Nancy.Routing.Constraints.IRouteConstraint.Matches(string)", span="6-6"];
m4_83 [cluster="System.Threading.ThreadPool.QueueUserWorkItem(System.Threading.WaitCallback)", file="NancyEngine.cs", label="Entry System.Threading.ThreadPool.QueueUserWorkItem(System.Threading.WaitCallback)", span="0-0"];
m4_13 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="NancyEngine.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m4_96 [cluster="Unk.Handle", file="NancyEngine.cs", label="Entry Unk.Handle", span=""];
m4_147 [cluster="Nancy.NancyEngine.ExecuteRoutePreReq(Nancy.NancyContext, System.Func<Nancy.NancyContext, Nancy.Response>)", file="NancyEngine.cs", label="Entry Nancy.NancyEngine.ExecuteRoutePreReq(Nancy.NancyContext, System.Func<Nancy.NancyContext, Nancy.Response>)", span="271-271"];
m4_151 [cluster="Nancy.NancyEngine.ExecuteRoutePreReq(Nancy.NancyContext, System.Func<Nancy.NancyContext, Nancy.Response>)", file="NancyEngine.cs", label="resolveResultPreReq == null", span="273-273"];
m4_153 [cluster="Nancy.NancyEngine.ExecuteRoutePreReq(Nancy.NancyContext, System.Func<Nancy.NancyContext, Nancy.Response>)", file="NancyEngine.cs", label="var resolveResultPreReqResponse = resolveResultPreReq.Invoke(context)", span="278-278"];
m4_155 [cluster="Nancy.NancyEngine.ExecuteRoutePreReq(Nancy.NancyContext, System.Func<Nancy.NancyContext, Nancy.Response>)", file="NancyEngine.cs", label="context.Response = resolveResultPreReqResponse", span="282-282"];
m4_152 [cluster="Nancy.NancyEngine.ExecuteRoutePreReq(Nancy.NancyContext, System.Func<Nancy.NancyContext, Nancy.Response>)", file="NancyEngine.cs", label="return;", span="275-275"];
m4_154 [cluster="Nancy.NancyEngine.ExecuteRoutePreReq(Nancy.NancyContext, System.Func<Nancy.NancyContext, Nancy.Response>)", file="NancyEngine.cs", label="resolveResultPreReqResponse != null", span="280-280"];
m4_156 [cluster="Nancy.NancyEngine.ExecuteRoutePreReq(Nancy.NancyContext, System.Func<Nancy.NancyContext, Nancy.Response>)", file="NancyEngine.cs", label="Exit Nancy.NancyEngine.ExecuteRoutePreReq(Nancy.NancyContext, System.Func<Nancy.NancyContext, Nancy.Response>)", span="271-271"];
m4_49 [cluster="Nancy.NancyEngine.UpdateTraceCookie(Nancy.NancyContext, System.Guid)", file="NancyEngine.cs", label="Entry Nancy.NancyEngine.UpdateTraceCookie(Nancy.NancyContext, System.Guid)", span="142-142"];
m4_73 [cluster="Nancy.NancyEngine.UpdateTraceCookie(Nancy.NancyContext, System.Guid)", file="NancyEngine.cs", label="var cookie = new NancyCookie(''__NCTRACE'', sessionGuid.ToString(), true) { Expires = DateTime.Now.AddMinutes(30) }", span="144-144"];
m4_74 [cluster="Nancy.NancyEngine.UpdateTraceCookie(Nancy.NancyContext, System.Guid)", file="NancyEngine.cs", label="ctx.Response.AddCookie(cookie)", span="145-145"];
m4_75 [cluster="Nancy.NancyEngine.UpdateTraceCookie(Nancy.NancyContext, System.Guid)", file="NancyEngine.cs", label="Exit Nancy.NancyEngine.UpdateTraceCookie(Nancy.NancyContext, System.Guid)", span="142-142"];
m4_110 [cluster="Nancy.NancyEngine.ResolveAndInvokeRoute(Nancy.NancyContext)", file="NancyEngine.cs", label="Entry Nancy.NancyEngine.ResolveAndInvokeRoute(Nancy.NancyContext)", span="246-246"];
m4_134 [cluster="Nancy.NancyEngine.ResolveAndInvokeRoute(Nancy.NancyContext)", file="NancyEngine.cs", label="var resolveResult = this.resolver.Resolve(context)", span="248-248"];
m4_135 [cluster="Nancy.NancyEngine.ResolveAndInvokeRoute(Nancy.NancyContext)", file="NancyEngine.cs", label="context.Parameters = resolveResult.Item2", span="250-250"];
m4_138 [cluster="Nancy.NancyEngine.ResolveAndInvokeRoute(Nancy.NancyContext)", file="NancyEngine.cs", label="ExecuteRoutePreReq(context, resolveResultPreReq)", span="253-253"];
m4_139 [cluster="Nancy.NancyEngine.ResolveAndInvokeRoute(Nancy.NancyContext)", file="NancyEngine.cs", label="context.Response == null", span="255-255"];
m4_141 [cluster="Nancy.NancyEngine.ResolveAndInvokeRoute(Nancy.NancyContext)", file="NancyEngine.cs", label="context.Request.Method.ToUpperInvariant() == ''HEAD''", span="260-260"];
m4_142 [cluster="Nancy.NancyEngine.ResolveAndInvokeRoute(Nancy.NancyContext)", file="NancyEngine.cs", label="context.Response = new HeadResponse(context.Response)", span="262-262"];
m4_144 [cluster="Nancy.NancyEngine.ResolveAndInvokeRoute(Nancy.NancyContext)", file="NancyEngine.cs", label="resolveResultPostReq.Invoke(context)", span="267-267"];
m4_136 [cluster="Nancy.NancyEngine.ResolveAndInvokeRoute(Nancy.NancyContext)", file="NancyEngine.cs", label="var resolveResultPreReq = resolveResult.Item3", span="251-251"];
m4_137 [cluster="Nancy.NancyEngine.ResolveAndInvokeRoute(Nancy.NancyContext)", file="NancyEngine.cs", label="var resolveResultPostReq = resolveResult.Item4", span="252-252"];
m4_143 [cluster="Nancy.NancyEngine.ResolveAndInvokeRoute(Nancy.NancyContext)", file="NancyEngine.cs", label="resolveResultPostReq != null", span="265-265"];
m4_145 [cluster="Nancy.NancyEngine.ResolveAndInvokeRoute(Nancy.NancyContext)", file="NancyEngine.cs", label="Exit Nancy.NancyEngine.ResolveAndInvokeRoute(Nancy.NancyContext)", span="246-246"];
m4_58 [cluster="string.StartsWith(string)", file="NancyEngine.cs", label="Entry string.StartsWith(string)", span="0-0"];
m4_12 [cluster="System.ArgumentNullException.ArgumentNullException(string, string)", file="NancyEngine.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string, string)", span="0-0"];
m4_47 [cluster="Unk.ToDictionary", file="NancyEngine.cs", label="Entry Unk.ToDictionary", span=""];
m4_150 [cluster="Nancy.HeadResponse.HeadResponse(Nancy.Response)", file="NancyEngine.cs", label="Entry Nancy.HeadResponse.HeadResponse(Nancy.Response)", span="13-13"];
m4_48 [cluster="Nancy.Diagnostics.IRequestTracing.AddRequestDiagnosticToSession(System.Guid, Nancy.NancyContext)", file="NancyEngine.cs", label="Entry Nancy.Diagnostics.IRequestTracing.AddRequestDiagnosticToSession(System.Guid, Nancy.NancyContext)", span="9-9"];
m4_46 [cluster="object.GetType()", file="NancyEngine.cs", label="Entry object.GetType()", span="0-0"];
m4_27 [cluster="Nancy.NancyEngine.InvokeRequestLifeCycle(Nancy.NancyContext, Nancy.Bootstrapper.IPipelines)", file="NancyEngine.cs", label="Entry Nancy.NancyEngine.InvokeRequestLifeCycle(Nancy.NancyContext, Nancy.Bootstrapper.IPipelines)", span="185-185"];
m4_101 [cluster="Nancy.NancyEngine.InvokeRequestLifeCycle(Nancy.NancyContext, Nancy.Bootstrapper.IPipelines)", file="NancyEngine.cs", label="InvokePreRequestHook(context, pipelines.BeforeRequest)", span="189-189"];
m4_102 [cluster="Nancy.NancyEngine.InvokeRequestLifeCycle(Nancy.NancyContext, Nancy.Bootstrapper.IPipelines)", file="NancyEngine.cs", label="context.Response == null", span="191-191"];
m4_103 [cluster="Nancy.NancyEngine.InvokeRequestLifeCycle(Nancy.NancyContext, Nancy.Bootstrapper.IPipelines)", file="NancyEngine.cs", label="this.ResolveAndInvokeRoute(context)", span="193-193"];
m4_104 [cluster="Nancy.NancyEngine.InvokeRequestLifeCycle(Nancy.NancyContext, Nancy.Bootstrapper.IPipelines)", file="NancyEngine.cs", label="pipelines.AfterRequest != null", span="196-196"];
m4_105 [cluster="Nancy.NancyEngine.InvokeRequestLifeCycle(Nancy.NancyContext, Nancy.Bootstrapper.IPipelines)", file="NancyEngine.cs", label="pipelines.AfterRequest.Invoke(context)", span="198-198"];
m4_107 [cluster="Nancy.NancyEngine.InvokeRequestLifeCycle(Nancy.NancyContext, Nancy.Bootstrapper.IPipelines)", file="NancyEngine.cs", label="InvokeOnErrorHook(context, pipelines.OnError, ex)", span="203-203"];
m4_106 [cluster="Nancy.NancyEngine.InvokeRequestLifeCycle(Nancy.NancyContext, Nancy.Bootstrapper.IPipelines)", file="NancyEngine.cs", label=Exception, span="201-201"];
m4_108 [cluster="Nancy.NancyEngine.InvokeRequestLifeCycle(Nancy.NancyContext, Nancy.Bootstrapper.IPipelines)", file="NancyEngine.cs", label="Exit Nancy.NancyEngine.InvokeRequestLifeCycle(Nancy.NancyContext, Nancy.Bootstrapper.IPipelines)", span="185-185"];
m4_76 [cluster="Nancy.Cookies.NancyCookie.NancyCookie(string, string, bool)", file="NancyEngine.cs", label="Entry Nancy.Cookies.NancyCookie.NancyCookie(string, string, bool)", span="15-15"];
m4_80 [cluster="Nancy.NancyEngine.HandleRequest(Nancy.Request, System.Action<Nancy.NancyContext>, System.Action<System.Exception>)", file="NancyEngine.cs", label="Entry Nancy.NancyEngine.HandleRequest(Nancy.Request, System.Action<Nancy.NancyContext>, System.Action<System.Exception>)", span="154-154"];
m4_81 [cluster="Nancy.NancyEngine.HandleRequest(Nancy.Request, System.Action<Nancy.NancyContext>, System.Action<System.Exception>)", file="NancyEngine.cs", label="ThreadPool.QueueUserWorkItem(s =>\r\n                {\r\n                    try\r\n                    {\r\n                        onComplete.Invoke(this.HandleRequest(request));\r\n                    }\r\n                    catch (Exception e)\r\n                    {\r\n                        onError.Invoke(e);\r\n                    }\r\n                })", span="159-169"];
m4_82 [cluster="Nancy.NancyEngine.HandleRequest(Nancy.Request, System.Action<Nancy.NancyContext>, System.Action<System.Exception>)", file="NancyEngine.cs", label="Exit Nancy.NancyEngine.HandleRequest(Nancy.Request, System.Action<Nancy.NancyContext>, System.Action<System.Exception>)", span="154-154"];
m4_111 [cluster="Nancy.AfterPipeline.Invoke(Nancy.NancyContext)", file="NancyEngine.cs", label="Entry Nancy.AfterPipeline.Invoke(Nancy.NancyContext)", span="53-53"];
m4_26 [cluster="System.Func<T, TResult>.Invoke(T)", file="NancyEngine.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m4_44 [cluster="Nancy.NancyEngine.EnableTracing(Nancy.NancyContext)", file="NancyEngine.cs", label="Entry Nancy.NancyEngine.EnableTracing(Nancy.NancyContext)", span="114-114"];
m4_56 [cluster="Nancy.NancyEngine.EnableTracing(Nancy.NancyContext)", file="NancyEngine.cs", label="return StaticConfiguration.EnableRequestTracing &&\r\n                   !ctx.Request.Path.StartsWith(DiagnosticsHook.ControlPanelPrefix);", span="116-117"];
m4_57 [cluster="Nancy.NancyEngine.EnableTracing(Nancy.NancyContext)", file="NancyEngine.cs", label="Exit Nancy.NancyEngine.EnableTracing(Nancy.NancyContext)", span="114-114"];
m4_149 [cluster="string.ToUpperInvariant()", file="NancyEngine.cs", label="Entry string.ToUpperInvariant()", span="0-0"];
m4_112 [cluster="Nancy.NancyEngine.InvokeOnErrorHook(Nancy.NancyContext, Nancy.ErrorPipeline, System.Exception)", file="NancyEngine.cs", label="Entry Nancy.NancyEngine.InvokeOnErrorHook(Nancy.NancyContext, Nancy.ErrorPipeline, System.Exception)", span="220-220"];
m4_119 [cluster="Nancy.NancyEngine.InvokeOnErrorHook(Nancy.NancyContext, Nancy.ErrorPipeline, System.Exception)", file="NancyEngine.cs", label="pipeline == null", span="224-224"];
m4_120 [cluster="Nancy.NancyEngine.InvokeOnErrorHook(Nancy.NancyContext, Nancy.ErrorPipeline, System.Exception)", file="NancyEngine.cs", label="throw new RequestExecutionException(ex);", span="226-226"];
m4_121 [cluster="Nancy.NancyEngine.InvokeOnErrorHook(Nancy.NancyContext, Nancy.ErrorPipeline, System.Exception)", file="NancyEngine.cs", label="var onErrorResponse = pipeline.Invoke(context, ex)", span="229-229"];
m4_123 [cluster="Nancy.NancyEngine.InvokeOnErrorHook(Nancy.NancyContext, Nancy.ErrorPipeline, System.Exception)", file="NancyEngine.cs", label="throw new RequestExecutionException(ex);", span="233-233"];
m4_124 [cluster="Nancy.NancyEngine.InvokeOnErrorHook(Nancy.NancyContext, Nancy.ErrorPipeline, System.Exception)", file="NancyEngine.cs", label="context.Response = onErrorResponse", span="236-236"];
m4_126 [cluster="Nancy.NancyEngine.InvokeOnErrorHook(Nancy.NancyContext, Nancy.ErrorPipeline, System.Exception)", file="NancyEngine.cs", label="context.Response = new Response { StatusCode = HttpStatusCode.InternalServerError }", span="240-240"];
m4_127 [cluster="Nancy.NancyEngine.InvokeOnErrorHook(Nancy.NancyContext, Nancy.ErrorPipeline, System.Exception)", file="NancyEngine.cs", label="context.Items[ERROR_KEY] = e.ToString()", span="241-241"];
m4_128 [cluster="Nancy.NancyEngine.InvokeOnErrorHook(Nancy.NancyContext, Nancy.ErrorPipeline, System.Exception)", file="NancyEngine.cs", label="context.Items[ERROR_EXCEPTION] = e", span="242-242"];
m4_122 [cluster="Nancy.NancyEngine.InvokeOnErrorHook(Nancy.NancyContext, Nancy.ErrorPipeline, System.Exception)", file="NancyEngine.cs", label="onErrorResponse == null", span="231-231"];
m4_125 [cluster="Nancy.NancyEngine.InvokeOnErrorHook(Nancy.NancyContext, Nancy.ErrorPipeline, System.Exception)", file="NancyEngine.cs", label=Exception, span="238-238"];
m4_129 [cluster="Nancy.NancyEngine.InvokeOnErrorHook(Nancy.NancyContext, Nancy.ErrorPipeline, System.Exception)", file="NancyEngine.cs", label="Exit Nancy.NancyEngine.InvokeOnErrorHook(Nancy.NancyContext, Nancy.ErrorPipeline, System.Exception)", span="220-220"];
m4_89 [cluster="System.Action<T>.Invoke(T)", file="NancyEngine.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m4_131 [cluster="Nancy.ErrorPipeline.Invoke(Nancy.NancyContext, System.Exception)", file="NancyEngine.cs", label="Entry Nancy.ErrorPipeline.Invoke(Nancy.NancyContext, System.Exception)", span="67-67"];
m4_77 [cluster="System.Guid.ToString()", file="NancyEngine.cs", label="Entry System.Guid.ToString()", span="0-0"];
m4_95 [cluster="Unk.Where", file="NancyEngine.cs", label="Entry Unk.Where", span=""];
m4_71 [cluster="System.Guid.TryParse(string, out System.Guid)", file="NancyEngine.cs", label="Entry System.Guid.TryParse(string, out System.Guid)", span="0-0"];
m4_130 [cluster="Nancy.RequestExecutionException.RequestExecutionException(System.Exception)", file="NancyEngine.cs", label="Entry Nancy.RequestExecutionException.RequestExecutionException(System.Exception)", span="15-15"];
m4_70 [cluster="Nancy.Diagnostics.IRequestTracing.CreateSession()", file="NancyEngine.cs", label="Entry Nancy.Diagnostics.IRequestTracing.CreateSession()", span="7-7"];
m4_28 [cluster="Nancy.NancyEngine.CheckErrorHandler(Nancy.NancyContext)", file="NancyEngine.cs", label="Entry Nancy.NancyEngine.CheckErrorHandler(Nancy.NancyContext)", span="172-172"];
m4_90 [cluster="Nancy.NancyEngine.CheckErrorHandler(Nancy.NancyContext)", file="NancyEngine.cs", label="context.Response == null", span="174-174"];
m4_92 [cluster="Nancy.NancyEngine.CheckErrorHandler(Nancy.NancyContext)", file="NancyEngine.cs", label="this.errorHandlers.Where(e => e.HandlesStatusCode(context.Response.StatusCode, context))", span="179-179"];
m4_93 [cluster="Nancy.NancyEngine.CheckErrorHandler(Nancy.NancyContext)", file="NancyEngine.cs", label="errorHandler.Handle(context.Response.StatusCode, context)", span="181-181"];
m4_91 [cluster="Nancy.NancyEngine.CheckErrorHandler(Nancy.NancyContext)", file="NancyEngine.cs", label="return;", span="176-176"];
m4_94 [cluster="Nancy.NancyEngine.CheckErrorHandler(Nancy.NancyContext)", file="NancyEngine.cs", label="Exit Nancy.NancyEngine.CheckErrorHandler(Nancy.NancyContext)", span="172-172"];
m4_72 [cluster="Nancy.Diagnostics.IRequestTracing.IsValidSessionId(System.Guid)", file="NancyEngine.cs", label="Entry Nancy.Diagnostics.IRequestTracing.IsValidSessionId(System.Guid)", span="15-15"];
m4_97 [cluster="lambda expression", file="NancyEngine.cs", label="Entry lambda expression", span="179-179"];
m4_50 [cluster="lambda expression", file="NancyEngine.cs", label="Entry lambda expression", span="106-106"];
m4_53 [cluster="lambda expression", file="NancyEngine.cs", label="Entry lambda expression", span="106-106"];
m4_51 [cluster="lambda expression", file="NancyEngine.cs", label="kv.Key", span="106-106"];
m4_52 [cluster="lambda expression", file="NancyEngine.cs", label="Exit lambda expression", span="106-106"];
m4_54 [cluster="lambda expression", file="NancyEngine.cs", label="kv.Value", span="106-106"];
m4_55 [cluster="lambda expression", file="NancyEngine.cs", label="Exit lambda expression", span="106-106"];
m4_85 [cluster="lambda expression", file="NancyEngine.cs", label="onComplete.Invoke(this.HandleRequest(request))", span="163-163"];
m4_87 [cluster="lambda expression", file="NancyEngine.cs", label="onError.Invoke(e)", span="167-167"];
m4_84 [cluster="lambda expression", file="NancyEngine.cs", label="Entry lambda expression", span="159-169"];
m4_86 [cluster="lambda expression", file="NancyEngine.cs", label=Exception, span="165-165"];
m4_88 [cluster="lambda expression", file="NancyEngine.cs", label="Exit lambda expression", span="159-169"];
m4_98 [cluster="lambda expression", file="NancyEngine.cs", label="e.HandlesStatusCode(context.Response.StatusCode, context)", span="179-179"];
m4_99 [cluster="lambda expression", file="NancyEngine.cs", label="Exit lambda expression", span="179-179"];
m4_109 [cluster="Nancy.NancyEngine.InvokePreRequestHook(Nancy.NancyContext, Nancy.BeforePipeline)", file="NancyEngine.cs", label="Entry Nancy.NancyEngine.InvokePreRequestHook(Nancy.NancyContext, Nancy.BeforePipeline)", span="207-207"];
m4_113 [cluster="Nancy.NancyEngine.InvokePreRequestHook(Nancy.NancyContext, Nancy.BeforePipeline)", file="NancyEngine.cs", label="pipeline != null", span="209-209"];
m4_114 [cluster="Nancy.NancyEngine.InvokePreRequestHook(Nancy.NancyContext, Nancy.BeforePipeline)", file="NancyEngine.cs", label="var preRequestResponse = pipeline.Invoke(context)", span="211-211"];
m4_116 [cluster="Nancy.NancyEngine.InvokePreRequestHook(Nancy.NancyContext, Nancy.BeforePipeline)", file="NancyEngine.cs", label="context.Response = preRequestResponse", span="215-215"];
m4_115 [cluster="Nancy.NancyEngine.InvokePreRequestHook(Nancy.NancyContext, Nancy.BeforePipeline)", file="NancyEngine.cs", label="preRequestResponse != null", span="213-213"];
m4_117 [cluster="Nancy.NancyEngine.InvokePreRequestHook(Nancy.NancyContext, Nancy.BeforePipeline)", file="NancyEngine.cs", label="Exit Nancy.NancyEngine.InvokePreRequestHook(Nancy.NancyContext, Nancy.BeforePipeline)", span="207-207"];
m4_118 [cluster="Nancy.BeforePipeline.Invoke(Nancy.NancyContext)", file="NancyEngine.cs", label="Entry Nancy.BeforePipeline.Invoke(Nancy.NancyContext)", span="65-65"];
m4_148 [cluster="Nancy.Routing.Route.Invoke(Nancy.DynamicDictionary)", file="NancyEngine.cs", label="Entry Nancy.Routing.Route.Invoke(Nancy.DynamicDictionary)", span="54-54"];
m4_29 [cluster="Nancy.NancyEngine.SaveTraceInformation(Nancy.NancyContext)", file="NancyEngine.cs", label="Entry Nancy.NancyEngine.SaveTraceInformation(Nancy.NancyContext)", span="88-88"];
m4_30 [cluster="Nancy.NancyEngine.SaveTraceInformation(Nancy.NancyContext)", file="NancyEngine.cs", label="!this.EnableTracing(ctx)", span="90-90"];
m4_32 [cluster="Nancy.NancyEngine.SaveTraceInformation(Nancy.NancyContext)", file="NancyEngine.cs", label="ctx.Request == null || ctx.Response == null", span="95-95"];
m4_34 [cluster="Nancy.NancyEngine.SaveTraceInformation(Nancy.NancyContext)", file="NancyEngine.cs", label="var sessionGuid = this.GetDiagnosticsSessionGuid(ctx)", span="100-100"];
m4_35 [cluster="Nancy.NancyEngine.SaveTraceInformation(Nancy.NancyContext)", file="NancyEngine.cs", label="ctx.Trace.ResponseType = ctx.Response.GetType()", span="102-102"];
m4_36 [cluster="Nancy.NancyEngine.SaveTraceInformation(Nancy.NancyContext)", file="NancyEngine.cs", label="ctx.Trace.StatusCode = ctx.Response.StatusCode", span="103-103"];
m4_37 [cluster="Nancy.NancyEngine.SaveTraceInformation(Nancy.NancyContext)", file="NancyEngine.cs", label="ctx.Trace.RequestContentType = ctx.Request.Headers.ContentType", span="104-104"];
m4_38 [cluster="Nancy.NancyEngine.SaveTraceInformation(Nancy.NancyContext)", file="NancyEngine.cs", label="ctx.Trace.ResponseContentType = ctx.Response.ContentType", span="105-105"];
m4_39 [cluster="Nancy.NancyEngine.SaveTraceInformation(Nancy.NancyContext)", file="NancyEngine.cs", label="ctx.Trace.RequestHeaders = ctx.Request.Headers.ToDictionary(kv => kv.Key, kv => kv.Value)", span="106-106"];
m4_40 [cluster="Nancy.NancyEngine.SaveTraceInformation(Nancy.NancyContext)", file="NancyEngine.cs", label="ctx.Trace.ResponseHeaders = ctx.Response.Headers", span="107-107"];
m4_41 [cluster="Nancy.NancyEngine.SaveTraceInformation(Nancy.NancyContext)", file="NancyEngine.cs", label="this.requestTracing.AddRequestDiagnosticToSession(sessionGuid, ctx)", span="109-109"];
m4_42 [cluster="Nancy.NancyEngine.SaveTraceInformation(Nancy.NancyContext)", file="NancyEngine.cs", label="this.UpdateTraceCookie(ctx, sessionGuid)", span="111-111"];
m4_31 [cluster="Nancy.NancyEngine.SaveTraceInformation(Nancy.NancyContext)", file="NancyEngine.cs", label="return;", span="92-92"];
m4_33 [cluster="Nancy.NancyEngine.SaveTraceInformation(Nancy.NancyContext)", file="NancyEngine.cs", label="return;", span="97-97"];
m4_43 [cluster="Nancy.NancyEngine.SaveTraceInformation(Nancy.NancyContext)", file="NancyEngine.cs", label="Exit Nancy.NancyEngine.SaveTraceInformation(Nancy.NancyContext)", span="88-88"];
m4_69 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="NancyEngine.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m4_79 [cluster="Nancy.Response.AddCookie(Nancy.Cookies.INancyCookie)", file="NancyEngine.cs", label="Entry Nancy.Response.AddCookie(Nancy.Cookies.INancyCookie)", span="72-72"];
m4_100 [cluster="Nancy.ErrorHandling.IErrorHandler.HandlesStatusCode(Nancy.HttpStatusCode, Nancy.NancyContext)", file="NancyEngine.cs", label="Entry Nancy.ErrorHandling.IErrorHandler.HandlesStatusCode(Nancy.HttpStatusCode, Nancy.NancyContext)", span="13-13"];
m4_45 [cluster="Nancy.NancyEngine.GetDiagnosticsSessionGuid(Nancy.NancyContext)", file="NancyEngine.cs", label="Entry Nancy.NancyEngine.GetDiagnosticsSessionGuid(Nancy.NancyContext)", span="120-120"];
m4_59 [cluster="Nancy.NancyEngine.GetDiagnosticsSessionGuid(Nancy.NancyContext)", file="NancyEngine.cs", label="string sessionId", span="122-122"];
m4_60 [cluster="Nancy.NancyEngine.GetDiagnosticsSessionGuid(Nancy.NancyContext)", file="NancyEngine.cs", label="!ctx.Request.Cookies.TryGetValue(''__NCTRACE'', out sessionId)", span="123-123"];
m4_61 [cluster="Nancy.NancyEngine.GetDiagnosticsSessionGuid(Nancy.NancyContext)", file="NancyEngine.cs", label="return this.requestTracing.CreateSession();", span="125-125"];
m4_62 [cluster="Nancy.NancyEngine.GetDiagnosticsSessionGuid(Nancy.NancyContext)", file="NancyEngine.cs", label="Guid sessionGuid", span="128-128"];
m4_63 [cluster="Nancy.NancyEngine.GetDiagnosticsSessionGuid(Nancy.NancyContext)", file="NancyEngine.cs", label="!Guid.TryParse(sessionId, out sessionGuid)", span="129-129"];
m4_64 [cluster="Nancy.NancyEngine.GetDiagnosticsSessionGuid(Nancy.NancyContext)", file="NancyEngine.cs", label="return this.requestTracing.CreateSession();", span="131-131"];
m4_65 [cluster="Nancy.NancyEngine.GetDiagnosticsSessionGuid(Nancy.NancyContext)", file="NancyEngine.cs", label="!this.requestTracing.IsValidSessionId(sessionGuid)", span="134-134"];
m4_67 [cluster="Nancy.NancyEngine.GetDiagnosticsSessionGuid(Nancy.NancyContext)", file="NancyEngine.cs", label="return sessionGuid;", span="139-139"];
m4_66 [cluster="Nancy.NancyEngine.GetDiagnosticsSessionGuid(Nancy.NancyContext)", file="NancyEngine.cs", label="return this.requestTracing.CreateSession();", span="136-136"];
m4_68 [cluster="Nancy.NancyEngine.GetDiagnosticsSessionGuid(Nancy.NancyContext)", file="NancyEngine.cs", label="Exit Nancy.NancyEngine.GetDiagnosticsSessionGuid(Nancy.NancyContext)", span="120-120"];
m4_133 [cluster="System.Exception.ToString()", file="NancyEngine.cs", label="Entry System.Exception.ToString()", span="0-0"];
m4_14 [cluster="Nancy.NancyEngine.HandleRequest(Nancy.Request)", file="NancyEngine.cs", label="Entry Nancy.NancyEngine.HandleRequest(Nancy.Request)", span="66-66"];
m4_15 [cluster="Nancy.NancyEngine.HandleRequest(Nancy.Request)", file="NancyEngine.cs", label="request == null", span="68-68"];
m4_18 [cluster="Nancy.NancyEngine.HandleRequest(Nancy.Request)", file="NancyEngine.cs", label="context.Request = request", span="74-74"];
m4_16 [cluster="Nancy.NancyEngine.HandleRequest(Nancy.Request)", file="NancyEngine.cs", label="throw new ArgumentNullException(''request'', ''The request parameter cannot be null.'');", span="70-70"];
m4_17 [cluster="Nancy.NancyEngine.HandleRequest(Nancy.Request)", file="NancyEngine.cs", label="var context = this.contextFactory.Create()", span="73-73"];
m4_19 [cluster="Nancy.NancyEngine.HandleRequest(Nancy.Request)", file="NancyEngine.cs", label="var pipelines =\r\n                this.RequestPipelinesFactory.Invoke(context)", span="76-77"];
m4_20 [cluster="Nancy.NancyEngine.HandleRequest(Nancy.Request)", file="NancyEngine.cs", label="this.InvokeRequestLifeCycle(context, pipelines)", span="79-79"];
m4_21 [cluster="Nancy.NancyEngine.HandleRequest(Nancy.Request)", file="NancyEngine.cs", label="CheckErrorHandler(context)", span="81-81"];
m4_22 [cluster="Nancy.NancyEngine.HandleRequest(Nancy.Request)", file="NancyEngine.cs", label="this.SaveTraceInformation(context)", span="83-83"];
m4_23 [cluster="Nancy.NancyEngine.HandleRequest(Nancy.Request)", file="NancyEngine.cs", label="return context;", span="85-85"];
m4_24 [cluster="Nancy.NancyEngine.HandleRequest(Nancy.Request)", file="NancyEngine.cs", label="Exit Nancy.NancyEngine.HandleRequest(Nancy.Request)", span="66-66"];
m4_25 [cluster="Nancy.INancyContextFactory.Create()", file="NancyEngine.cs", label="Entry Nancy.INancyContextFactory.Create()", span="11-11"];
m4_132 [cluster="Nancy.Response.Response()", file="NancyEngine.cs", label="Entry Nancy.Response.Response()", span="20-20"];
m4_0 [cluster="Nancy.NancyEngine.NancyEngine(Nancy.Routing.IRouteResolver, Nancy.INancyContextFactory, System.Collections.Generic.IEnumerable<Nancy.ErrorHandling.IErrorHandler>, Nancy.Diagnostics.IRequestTracing)", file="NancyEngine.cs", label="Entry Nancy.NancyEngine.NancyEngine(Nancy.Routing.IRouteResolver, Nancy.INancyContextFactory, System.Collections.Generic.IEnumerable<Nancy.ErrorHandling.IErrorHandler>, Nancy.Diagnostics.IRequestTracing)", span="32-32"];
m4_1 [cluster="Nancy.NancyEngine.NancyEngine(Nancy.Routing.IRouteResolver, Nancy.INancyContextFactory, System.Collections.Generic.IEnumerable<Nancy.ErrorHandling.IErrorHandler>, Nancy.Diagnostics.IRequestTracing)", file="NancyEngine.cs", label="resolver == null", span="34-34"];
m4_3 [cluster="Nancy.NancyEngine.NancyEngine(Nancy.Routing.IRouteResolver, Nancy.INancyContextFactory, System.Collections.Generic.IEnumerable<Nancy.ErrorHandling.IErrorHandler>, Nancy.Diagnostics.IRequestTracing)", file="NancyEngine.cs", label="contextFactory == null", span="39-39"];
m4_5 [cluster="Nancy.NancyEngine.NancyEngine(Nancy.Routing.IRouteResolver, Nancy.INancyContextFactory, System.Collections.Generic.IEnumerable<Nancy.ErrorHandling.IErrorHandler>, Nancy.Diagnostics.IRequestTracing)", file="NancyEngine.cs", label="errorHandlers == null", span="44-44"];
m4_7 [cluster="Nancy.NancyEngine.NancyEngine(Nancy.Routing.IRouteResolver, Nancy.INancyContextFactory, System.Collections.Generic.IEnumerable<Nancy.ErrorHandling.IErrorHandler>, Nancy.Diagnostics.IRequestTracing)", file="NancyEngine.cs", label="this.resolver = resolver", span="49-49"];
m4_8 [cluster="Nancy.NancyEngine.NancyEngine(Nancy.Routing.IRouteResolver, Nancy.INancyContextFactory, System.Collections.Generic.IEnumerable<Nancy.ErrorHandling.IErrorHandler>, Nancy.Diagnostics.IRequestTracing)", file="NancyEngine.cs", label="this.contextFactory = contextFactory", span="50-50"];
m4_9 [cluster="Nancy.NancyEngine.NancyEngine(Nancy.Routing.IRouteResolver, Nancy.INancyContextFactory, System.Collections.Generic.IEnumerable<Nancy.ErrorHandling.IErrorHandler>, Nancy.Diagnostics.IRequestTracing)", file="NancyEngine.cs", label="this.errorHandlers = errorHandlers", span="51-51"];
m4_10 [cluster="Nancy.NancyEngine.NancyEngine(Nancy.Routing.IRouteResolver, Nancy.INancyContextFactory, System.Collections.Generic.IEnumerable<Nancy.ErrorHandling.IErrorHandler>, Nancy.Diagnostics.IRequestTracing)", file="NancyEngine.cs", label="this.requestTracing = requestTracing", span="52-52"];
m4_2 [cluster="Nancy.NancyEngine.NancyEngine(Nancy.Routing.IRouteResolver, Nancy.INancyContextFactory, System.Collections.Generic.IEnumerable<Nancy.ErrorHandling.IErrorHandler>, Nancy.Diagnostics.IRequestTracing)", file="NancyEngine.cs", label="throw new ArgumentNullException(''resolver'', ''The resolver parameter cannot be null.'');", span="36-36"];
m4_4 [cluster="Nancy.NancyEngine.NancyEngine(Nancy.Routing.IRouteResolver, Nancy.INancyContextFactory, System.Collections.Generic.IEnumerable<Nancy.ErrorHandling.IErrorHandler>, Nancy.Diagnostics.IRequestTracing)", file="NancyEngine.cs", label="throw new ArgumentNullException(''contextFactory'');", span="41-41"];
m4_6 [cluster="Nancy.NancyEngine.NancyEngine(Nancy.Routing.IRouteResolver, Nancy.INancyContextFactory, System.Collections.Generic.IEnumerable<Nancy.ErrorHandling.IErrorHandler>, Nancy.Diagnostics.IRequestTracing)", file="NancyEngine.cs", label="throw new ArgumentNullException(''errorHandlers'');", span="46-46"];
m4_11 [cluster="Nancy.NancyEngine.NancyEngine(Nancy.Routing.IRouteResolver, Nancy.INancyContextFactory, System.Collections.Generic.IEnumerable<Nancy.ErrorHandling.IErrorHandler>, Nancy.Diagnostics.IRequestTracing)", file="NancyEngine.cs", label="Exit Nancy.NancyEngine.NancyEngine(Nancy.Routing.IRouteResolver, Nancy.INancyContextFactory, System.Collections.Generic.IEnumerable<Nancy.ErrorHandling.IErrorHandler>, Nancy.Diagnostics.IRequestTracing)", span="32-32"];
m4_146 [cluster="Nancy.Routing.IRouteResolver.Resolve(Nancy.NancyContext)", file="NancyEngine.cs", label="Entry Nancy.Routing.IRouteResolver.Resolve(Nancy.NancyContext)", span="14-14"];
m4_157 [file="NancyEngine.cs", label="Nancy.NancyEngine", span=""];
m4_158 [file="NancyEngine.cs", label="Nancy.Request", span=""];
m4_159 [file="NancyEngine.cs", label="System.Action<Nancy.NancyContext>", span=""];
m4_160 [file="NancyEngine.cs", label="System.Action<System.Exception>", span=""];
m4_161 [file="NancyEngine.cs", label="Nancy.NancyContext", span=""];
m5_0 [cluster="Nancy.Routing.Constraints.ParameterizedRouteConstraint<T>.Matches(string)", file="NancyEngineFixture.cs", label="Entry Nancy.Routing.Constraints.ParameterizedRouteConstraint<T>.Matches(string)", span="7-7"];
m5_1 [cluster="Nancy.Routing.Constraints.ParameterizedRouteConstraint<T>.Matches(string)", color=green, community=0, file="NancyEngineFixture.cs", label="return constraint.Contains('(') && constraint.Contains(')') && base.Matches(constraint.Substring(0, constraint.IndexOf('(')));", prediction=3, span="9-9"];
m5_2 [cluster="Nancy.Routing.Constraints.ParameterizedRouteConstraint<T>.Matches(string)", color=green, community=0, file="NancyEngineFixture.cs", label="Exit Nancy.Routing.Constraints.ParameterizedRouteConstraint<T>.Matches(string)", prediction=3, span="7-7"];
m5_3 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", color=green, community=0, file="NancyEngineFixture.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", prediction=3, span="0-0"];
m5_4 [cluster="string.IndexOf(char)", color=green, community=0, file="NancyEngineFixture.cs", label="Entry string.IndexOf(char)", prediction=3, span="0-0"];
m5_5 [cluster="string.Substring(int, int)", color=green, community=0, file="NancyEngineFixture.cs", label="Entry string.Substring(int, int)", prediction=3, span="0-0"];
m5_6 [cluster="Nancy.Routing.Constraints.RouteConstraintBase<T>.Matches(string)", file="NancyEngineFixture.cs", label="Entry Nancy.Routing.Constraints.RouteConstraintBase<T>.Matches(string)", span="10-10"];
m5_12 [cluster="lambda expression", file="NancyEngineFixture.cs", label="string.Concat(''  - '', x, Environment.NewLine)", span="56-56"];
m5_10 [cluster="Nancy.Routing.Constraints.ParameterizedRouteConstraint<T>.TryMatch(string, string, out T)", file="NancyEngineFixture.cs", label="Exit Nancy.Routing.Constraints.ParameterizedRouteConstraint<T>.TryMatch(string, string, out T)", span="12-12"];
m5_8 [cluster="Nancy.Routing.Constraints.ParameterizedRouteConstraint<T>.TryMatch(string, string, out T)", file="NancyEngineFixture.cs", label="var parameters = constraint.Substring(constraint.IndexOf('(')).Trim('(', ')').Split(',')", span="14-14"];
m5_18 [cluster="Nancy.ViewEngines.ViewNotFoundException.ViewNotFoundException(string, string[])", file="NancyEngineFixture.cs", label="Entry Nancy.ViewEngines.ViewNotFoundException.ViewNotFoundException(string, string[])", span="67-67"];
m5_9 [cluster="Nancy.Routing.Constraints.ParameterizedRouteConstraint<T>.TryMatch(string, string, out T)", file="NancyEngineFixture.cs", label="return TryMatch(segment, parameters, out matchedValue);", span="16-16"];
m5_23 [cluster="string.Join(string, params string[])", file="NancyEngineFixture.cs", label="Entry string.Join(string, params string[])", span="0-0"];
m5_7 [cluster="Unk.Select", file="NancyEngineFixture.cs", label="Entry Unk.Select", span=""];
m5_24 [cluster="string.Format(string, object, object, object)", file="NancyEngineFixture.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m5_15 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Entry lambda expression", span="57-57"];
m5_16 [cluster="lambda expression", file="NancyEngineFixture.cs", label="string.Concat(''  - '', x, Environment.NewLine)", span="57-57"];
m5_17 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Exit lambda expression", span="57-57"];
m5_14 [cluster="string.Concat(string, string, string)", file="NancyEngineFixture.cs", label="Entry string.Concat(string, string, string)", span="0-0"];
m5_19 [cluster="Nancy.ViewEngines.ViewNotFoundException.ViewNotFoundException(string, string[])", file="NancyEngineFixture.cs", label="this.ViewName = viewName", span="69-69"];
m5_11 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Entry lambda expression", span="56-56"];
m5_13 [cluster="string.Split(params char[])", file="NancyEngineFixture.cs", label="Entry string.Split(params char[])", span="0-0"];
m5_25 [cluster="Nancy.ViewEngines.ViewNotFoundException.ViewNotFoundException(string)", file="NancyEngineFixture.cs", label="Entry Nancy.ViewEngines.ViewNotFoundException.ViewNotFoundException(string)", span="83-83"];
m5_26 [cluster="Nancy.ViewEngines.ViewNotFoundException.ViewNotFoundException(string)", color=green, community=0, file="NancyEngineFixture.cs", label="this.message = msg", prediction=8, span="85-85"];
m5_27 [cluster="Nancy.ViewEngines.ViewNotFoundException.ViewNotFoundException(string)", file="NancyEngineFixture.cs", label="Exit Nancy.ViewEngines.ViewNotFoundException.ViewNotFoundException(string)", span="83-83"];
m5_21 [cluster="Nancy.ViewEngines.ViewNotFoundException.ViewNotFoundException(string, string[])", color=green, community=0, file="NancyEngineFixture.cs", label="this.message = string.Format(\r\n                    ''Unable to locate view '{0}'{2}Currently available view engine extensions: {1}{2}'',\r\n                    this.ViewName,\r\n                    string.Join('','', this.AvailableViewEngineExtensions),\r\n                    Environment.NewLine)", prediction=9, span="72-76"];
m5_20 [cluster="Nancy.ViewEngines.ViewNotFoundException.ViewNotFoundException(string, string[])", file="NancyEngineFixture.cs", label="Nancy.Routing.Constraints.ParameterizedRouteConstraint<T>", span=""];
m5_22 [cluster="Nancy.ViewEngines.ViewNotFoundException.ViewNotFoundException(string, string[])", file="NancyEngineFixture.cs", label="Exit Nancy.ViewEngines.ViewNotFoundException.ViewNotFoundException(string, string[])", span="67-67"];
m5_28 [file="NancyEngineFixture.cs", label="Nancy.ViewEngines.ViewNotFoundException", span=""];
m6_46 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_path_and_url_correctly_without_trailing_slash()", file="NancyInternalConfiguration.cs", label="Entry Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_path_and_url_correctly_without_trailing_slash()", span="81-81"];
m6_48 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_path_and_url_correctly_without_trailing_slash()", file="NancyInternalConfiguration.cs", label="var fakeEngine = A.Fake<INancyEngine>()", span="85-85"];
m6_79 [cluster="System.Net.WebResponse.GetResponseStream()", file="NancyInternalConfiguration.cs", label="Entry System.Net.WebResponse.GetResponseStream()", span="0-0"];
m6_58 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_path_and_url_correctly_without_trailing_slash()", file="NancyInternalConfiguration.cs", label="nancyRequest.Path.ShouldEqual(''/test/stuff'')", span="111-111"];
m6_49 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_path_and_url_correctly_without_trailing_slash()", file="NancyInternalConfiguration.cs", label="A.CallTo(() => fakeEngine.HandleRequest(A<Request>.Ignored, A<Func<NancyContext, NancyContext>>.Ignored, A<CancellationToken>.Ignored))\r\n                .Invokes(f => nancyRequest = (Request)f.Arguments[0])\r\n                .Returns(TaskHelpers.GetCompletedTask(new NancyContext()))", span="86-88"];
m6_61 [cluster="System.Uri.Uri(string)", file="NancyInternalConfiguration.cs", label="Entry System.Uri.Uri(string)", span="0-0"];
m6_109 [cluster="Unk.Equal", file="NancyInternalConfiguration.cs", label="Entry Unk.Equal", span=""];
m6_31 [cluster="lambda expression", file="NancyInternalConfiguration.cs", label="Entry lambda expression", span="44-44"];
m6_62 [cluster="Nancy.Url.ToString()", file="NancyInternalConfiguration.cs", label="Entry Nancy.Url.ToString()", span="111-111"];
m6_163 [cluster="Nancy.Tests.xUnitExtensions.SkipException.SkipException(string)", file="NancyInternalConfiguration.cs", label="Entry Nancy.Tests.xUnitExtensions.SkipException.SkipException(string)", span="9-9"];
m6_119 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_not_have_content_type_header_for_not_modified_responses()", file="NancyInternalConfiguration.cs", label="Entry Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_not_have_content_type_header_for_not_modified_responses()", span="193-193"];
m6_132 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_not_have_content_type_header_for_not_modified_responses()", color=green, community=0, file="NancyInternalConfiguration.cs", label="Assert.NotNull(response)", prediction=10, span="231-231"];
m6_129 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_not_have_content_type_header_for_not_modified_responses()", file="NancyInternalConfiguration.cs", label="request.GetResponse()", span="221-221"];
m6_131 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_not_have_content_type_header_for_not_modified_responses()", file="NancyInternalConfiguration.cs", label="response = notModifiedEx.Response", span="226-226"];
m6_133 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_not_have_content_type_header_for_not_modified_responses()", color=green, community=0, file="NancyInternalConfiguration.cs", label="Assert.False(response.Headers.AllKeys.Any(header => header == ''Content-Type''))", prediction=11, span="232-232"];
m6_127 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_not_have_content_type_header_for_not_modified_responses()", file="NancyInternalConfiguration.cs", label="var request = WebRequest.Create(new Uri(BaseUri, ''notmodified''))", span="217-217"];
m6_128 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_not_have_content_type_header_for_not_modified_responses()", file="NancyInternalConfiguration.cs", label="request.Method = ''GET''", span="218-218"];
m6_130 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_not_have_content_type_header_for_not_modified_responses()", file="NancyInternalConfiguration.cs", label=WebException, span="223-223"];
m6_126 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_not_have_content_type_header_for_not_modified_responses()", file="NancyInternalConfiguration.cs", label="CreateAndOpenWebServiceHost(fakeBootstrapper)", span="215-215"];
m6_120 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_not_have_content_type_header_for_not_modified_responses()", file="NancyInternalConfiguration.cs", label="var fakeEngine = A.Fake<INancyEngine>()", span="196-196"];
m6_121 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_not_have_content_type_header_for_not_modified_responses()", file="NancyInternalConfiguration.cs", label="var fakeBootstrapper = A.Fake<INancyBootstrapper>()", span="197-197"];
m6_125 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_not_have_content_type_header_for_not_modified_responses()", file="NancyInternalConfiguration.cs", label="WebResponse response = null", span="214-214"];
m6_123 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_not_have_content_type_header_for_not_modified_responses()", file="NancyInternalConfiguration.cs", label="A.CallTo(() => fakeEngine.HandleRequest(A<Request>.Ignored, A<Func<NancyContext, NancyContext>>.Ignored, A<CancellationToken>.Ignored))\r\n                .Returns(TaskHelpers.GetCompletedTask(context))", span="209-210"];
m6_124 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_not_have_content_type_header_for_not_modified_responses()", file="NancyInternalConfiguration.cs", label="A.CallTo(() => fakeBootstrapper.GetEngine()).Returns(fakeEngine)", span="211-211"];
m6_122 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_not_have_content_type_header_for_not_modified_responses()", file="NancyInternalConfiguration.cs", label="var context = new NancyContext\r\n            {\r\n                Response = new Response\r\n                {\r\n                    ContentType = null,\r\n                    StatusCode = Nancy.HttpStatusCode.NotModified\r\n                }\r\n            }", span="200-207"];
m6_134 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_not_have_content_type_header_for_not_modified_responses()", file="NancyInternalConfiguration.cs", label="Exit Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_not_have_content_type_header_for_not_modified_responses()", span="193-193"];
m6_29 [cluster="lambda expression", file="NancyInternalConfiguration.cs", label="asm.FullName.StartsWith(''xunit'', StringComparison.InvariantCulture)", span="43-43"];
m6_33 [cluster="lambda expression", file="NancyInternalConfiguration.cs", label="Exit lambda expression", span="44-44"];
m6_10 [cluster="lambda expression", file="NancyInternalConfiguration.cs", label="Entry lambda expression", span="37-37"];
m6_158 [cluster="WebServiceHost.cstr", file="NancyInternalConfiguration.cs", label="Entry WebServiceHost.cstr", span=""];
m6_50 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_path_and_url_correctly_without_trailing_slash()", file="NancyInternalConfiguration.cs", label="var fakeBootstrapper = A.Fake<INancyBootstrapper>()", span="89-89"];
m6_51 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_path_and_url_correctly_without_trailing_slash()", file="NancyInternalConfiguration.cs", label="A.CallTo(() => fakeBootstrapper.GetEngine()).Returns(fakeEngine)", span="90-90"];
m6_52 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_path_and_url_correctly_without_trailing_slash()", file="NancyInternalConfiguration.cs", label="var baseUriWithoutTrailingSlash = new Uri(''http://localhost:56297/base'')", span="92-92"];
m6_11 [cluster="lambda expression", file="NancyInternalConfiguration.cs", label="asm.FullName.StartsWith(''CR_ExtUnitTest'', StringComparison.InvariantCulture)", span="37-37"];
m6_27 [cluster="lambda expression", file="NancyInternalConfiguration.cs", label="Exit lambda expression", span="42-42"];
m6_54 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_path_and_url_correctly_without_trailing_slash()", file="NancyInternalConfiguration.cs", label="var request = WebRequest.Create(new Uri(BaseUri, ''test/stuff''))", span="97-97"];
m6_55 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_path_and_url_correctly_without_trailing_slash()", file="NancyInternalConfiguration.cs", label="request.Method = ''GET''", span="98-98"];
m6_56 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_path_and_url_correctly_without_trailing_slash()", file="NancyInternalConfiguration.cs", label="request.GetResponse()", span="102-102"];
m6_57 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_path_and_url_correctly_without_trailing_slash()", file="NancyInternalConfiguration.cs", label=WebException, span="104-104"];
m6_92 [cluster="System.Net.WebRequest.GetRequestStream()", file="NancyInternalConfiguration.cs", label="Entry System.Net.WebRequest.GetRequestStream()", span="0-0"];
m6_138 [cluster="Unk.False", file="NancyInternalConfiguration.cs", label="Entry Unk.False", span=""];
m6_162 [cluster="Unk.Open", file="NancyInternalConfiguration.cs", label="Entry Unk.Open", span=""];
m6_38 [cluster="lambda expression", file="NancyInternalConfiguration.cs", label="tr.RegistrationType == null", span="174-174"];
m6_45 [cluster="Unk.GetEngine", file="NancyInternalConfiguration.cs", label="Entry Unk.GetEngine", span=""];
m6_160 [cluster="WebHttpBinding.cstr", file="NancyInternalConfiguration.cs", label="Entry WebHttpBinding.cstr", span=""];
m6_3 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_get_any_header_from_selfhost()", file="NancyInternalConfiguration.cs", label="request.Method = ''GET''", span="36-36"];
m6_91 [cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", file="NancyInternalConfiguration.cs", label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0"];
m6_136 [cluster="Unk.NotNull", file="NancyInternalConfiguration.cs", label="Entry Unk.NotNull", span=""];
m6_161 [cluster="Unk.AddServiceEndpoint", file="NancyInternalConfiguration.cs", label="Entry Unk.AddServiceEndpoint", span=""];
m6_40 [cluster="lambda expression", file="NancyInternalConfiguration.cs", label="nancyRequest = (Request)f.Arguments[0]", span="53-53"];
m6_41 [cluster="lambda expression", file="NancyInternalConfiguration.cs", label="Exit lambda expression", span="53-53"];
m6_42 [cluster="lambda expression", file="NancyInternalConfiguration.cs", label="Entry lambda expression", span="56-56"];
m6_43 [cluster="lambda expression", file="NancyInternalConfiguration.cs", label="fakeBootstrapper.GetEngine()", span="56-56"];
m6_44 [cluster="lambda expression", file="NancyInternalConfiguration.cs", label="Exit lambda expression", span="56-56"];
m6_0 [cluster="lambda expression", file="NancyInternalConfiguration.cs", label="Entry lambda expression", span="34-34"];
m6_2 [cluster="lambda expression", file="NancyInternalConfiguration.cs", label="Exit lambda expression", span="34-34"];
m6_4 [cluster="lambda expression", file="NancyInternalConfiguration.cs", label="Entry lambda expression", span="35-35"];
m6_1 [cluster="lambda expression", file="NancyInternalConfiguration.cs", label="asm.FullName.StartsWith(''Microsoft.'', StringComparison.InvariantCulture)", span="34-34"];
m6_5 [cluster="lambda expression", file="NancyInternalConfiguration.cs", label="asm.FullName.StartsWith(''System.'', StringComparison.InvariantCulture)", span="35-35"];
m6_6 [cluster="lambda expression", file="NancyInternalConfiguration.cs", label="Exit lambda expression", span="35-35"];
m6_28 [cluster="lambda expression", file="NancyInternalConfiguration.cs", label="Entry lambda expression", span="43-43"];
m6_30 [cluster="lambda expression", file="NancyInternalConfiguration.cs", label="Exit lambda expression", span="43-43"];
m6_157 [cluster="Nancy.DefaultNancyBootstrapper.DefaultNancyBootstrapper()", file="NancyInternalConfiguration.cs", label="Entry Nancy.DefaultNancyBootstrapper.DefaultNancyBootstrapper()", span="14-14"];
m6_69 [cluster="lambda expression", file="NancyInternalConfiguration.cs", label="Entry lambda expression", span="90-90"];
m6_7 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.CreateAndOpenWebServiceHost(Nancy.Bootstrapper.INancyBootstrapper, System.Uri)", file="NancyInternalConfiguration.cs", label="Entry Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.CreateAndOpenWebServiceHost(Nancy.Bootstrapper.INancyBootstrapper, System.Uri)", span="235-235"];
m6_8 [cluster="System.Uri.Uri(System.Uri, string)", file="NancyInternalConfiguration.cs", label="Entry System.Uri.Uri(System.Uri, string)", span="0-0"];
m6_9 [cluster="System.Net.WebRequest.Create(System.Uri)", file="NancyInternalConfiguration.cs", label="Entry System.Net.WebRequest.Create(System.Uri)", span="0-0"];
m6_12 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_query_string_and_uri_correctly()", file="NancyInternalConfiguration.cs", label="Entry Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_query_string_and_uri_correctly()", span="47-47"];
m6_13 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_query_string_and_uri_correctly()", file="NancyInternalConfiguration.cs", label="Request nancyRequest = null", span="50-50"];
m6_14 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_query_string_and_uri_correctly()", file="NancyInternalConfiguration.cs", label="var fakeEngine = A.Fake<INancyEngine>()", span="51-51"];
m6_15 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_query_string_and_uri_correctly()", file="NancyInternalConfiguration.cs", label="A.CallTo(() => fakeEngine.HandleRequest(A<Request>.Ignored, A<Func<NancyContext, NancyContext>>.Ignored, A<CancellationToken>.Ignored))\r\n                .Invokes(f => nancyRequest = (Request)f.Arguments[0])\r\n                .Returns(TaskHelpers.GetCompletedTask(new NancyContext()))", span="52-54"];
m6_16 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_query_string_and_uri_correctly()", file="NancyInternalConfiguration.cs", label="var fakeBootstrapper = A.Fake<INancyBootstrapper>()", span="55-55"];
m6_17 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_query_string_and_uri_correctly()", file="NancyInternalConfiguration.cs", label="A.CallTo(() => fakeBootstrapper.GetEngine()).Returns(fakeEngine)", span="56-56"];
m6_18 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_query_string_and_uri_correctly()", file="NancyInternalConfiguration.cs", label="CreateAndOpenWebServiceHost(fakeBootstrapper)", span="59-59"];
m6_19 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_query_string_and_uri_correctly()", file="NancyInternalConfiguration.cs", label="var request = WebRequest.Create(new Uri(BaseUri, ''test/stuff?query=value&query2=value2''))", span="61-61"];
m6_20 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_query_string_and_uri_correctly()", file="NancyInternalConfiguration.cs", label="request.Method = ''GET''", span="62-62"];
m6_21 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_query_string_and_uri_correctly()", file="NancyInternalConfiguration.cs", label="request.GetResponse()", span="66-66"];
m6_22 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_query_string_and_uri_correctly()", file="NancyInternalConfiguration.cs", label=WebException, span="68-68"];
m6_23 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_query_string_and_uri_correctly()", file="NancyInternalConfiguration.cs", label="nancyRequest.Path.ShouldEqual(''/test/stuff'')", span="75-75"];
m6_24 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_query_string_and_uri_correctly()", file="NancyInternalConfiguration.cs", label="Assert.True(nancyRequest.Query.query.HasValue)", span="76-76"];
m6_25 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_query_string_and_uri_correctly()", file="NancyInternalConfiguration.cs", label="Assert.True(nancyRequest.Query.query2.HasValue)", span="77-77"];
m6_26 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_query_string_and_uri_correctly()", file="NancyInternalConfiguration.cs", label="Exit Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_query_string_and_uri_correctly()", span="47-47"];
m6_32 [cluster="Unk.Returns", file="NancyInternalConfiguration.cs", label="Entry Unk.Returns", span=""];
m6_37 [cluster="lambda expression", file="NancyInternalConfiguration.cs", label="Exit lambda expression", span="52-52"];
m6_39 [cluster="lambda expression", file="NancyInternalConfiguration.cs", label="Entry lambda expression", span="53-53"];
m6_145 [cluster="lambda expression", file="NancyInternalConfiguration.cs", label="Entry lambda expression", span="232-232"];
m6_146 [cluster="lambda expression", color=green, community=0, file="NancyInternalConfiguration.cs", label="header == ''Content-Type''", prediction=12, span="232-232"];
m6_147 [cluster="lambda expression", file="NancyInternalConfiguration.cs", label="Exit lambda expression", span="232-232"];
m6_140 [cluster="lambda expression", file="NancyInternalConfiguration.cs", label="fakeEngine.HandleRequest(A<Request>.Ignored, A<Func<NancyContext, NancyContext>>.Ignored, A<CancellationToken>.Ignored)", span="209-209"];
m6_143 [cluster="lambda expression", file="NancyInternalConfiguration.cs", label="fakeBootstrapper.GetEngine()", span="211-211"];
m6_139 [cluster="lambda expression", file="NancyInternalConfiguration.cs", label="Entry lambda expression", span="209-209"];
m6_141 [cluster="lambda expression", file="NancyInternalConfiguration.cs", label="Exit lambda expression", span="209-209"];
m6_142 [cluster="lambda expression", file="NancyInternalConfiguration.cs", label="Entry lambda expression", span="211-211"];
m6_70 [cluster="lambda expression", file="NancyInternalConfiguration.cs", label="fakeBootstrapper.GetEngine()", span="90-90"];
m6_117 [cluster="lambda expression", file="NancyInternalConfiguration.cs", label="fakeBootstrapper.GetEngine()", span="168-168"];
m6_116 [cluster="lambda expression", file="NancyInternalConfiguration.cs", label="Entry lambda expression", span="168-168"];
m6_144 [cluster="lambda expression", file="NancyInternalConfiguration.cs", label="Exit lambda expression", span="211-211"];
m6_35 [cluster="Nancy.Bootstrapper.NancyInternalConfiguration.UpdateIgnoredAssemblies(System.Collections.Generic.IEnumerable<System.Func<System.Reflection.Assembly, bool>>)", file="NancyInternalConfiguration.cs", label="AppDomainAssemblyTypeScanner.IgnoredAssemblies = assemblies", span="162-162"];
m6_63 [cluster="lambda expression", file="NancyInternalConfiguration.cs", label="Entry lambda expression", span="86-86"];
m6_66 [cluster="lambda expression", file="NancyInternalConfiguration.cs", label="Entry lambda expression", span="87-87"];
m6_110 [cluster="lambda expression", file="NancyInternalConfiguration.cs", label="Entry lambda expression", span="165-165"];
m6_113 [cluster="lambda expression", file="NancyInternalConfiguration.cs", label="Entry lambda expression", span="166-166"];
m6_36 [cluster="Nancy.Bootstrapper.NancyInternalConfiguration.UpdateIgnoredAssemblies(System.Collections.Generic.IEnumerable<System.Func<System.Reflection.Assembly, bool>>)", file="NancyInternalConfiguration.cs", label="Exit Nancy.Bootstrapper.NancyInternalConfiguration.UpdateIgnoredAssemblies(System.Collections.Generic.IEnumerable<System.Func<System.Reflection.Assembly, bool>>)", span="160-160"];
m6_64 [cluster="lambda expression", file="NancyInternalConfiguration.cs", label="fakeEngine.HandleRequest(A<Request>.Ignored, A<Func<NancyContext, NancyContext>>.Ignored, A<CancellationToken>.Ignored)", span="86-86"];
m6_111 [cluster="lambda expression", file="NancyInternalConfiguration.cs", label="fakeEngine.HandleRequest(A<Request>.Ignored, A<Func<NancyContext, NancyContext>>.Ignored, A<CancellationToken>.Ignored)", span="165-165"];
m6_71 [cluster="lambda expression", file="NancyInternalConfiguration.cs", label="Exit lambda expression", span="90-90"];
m6_118 [cluster="lambda expression", file="NancyInternalConfiguration.cs", label="Exit lambda expression", span="168-168"];
m6_65 [cluster="lambda expression", file="NancyInternalConfiguration.cs", label="Exit lambda expression", span="86-86"];
m6_68 [cluster="lambda expression", file="NancyInternalConfiguration.cs", label="Exit lambda expression", span="87-87"];
m6_67 [cluster="lambda expression", file="NancyInternalConfiguration.cs", label="nancyRequest = (Request)f.Arguments[0]", span="87-87"];
m6_112 [cluster="lambda expression", file="NancyInternalConfiguration.cs", label="Exit lambda expression", span="165-165"];
m6_114 [cluster="lambda expression", file="NancyInternalConfiguration.cs", label="nancyRequest = (Request)f.Arguments[0]", span="166-166"];
m6_115 [cluster="lambda expression", file="NancyInternalConfiguration.cs", label="Exit lambda expression", span="166-166"];
m6_148 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.CreateAndOpenWebServiceHost(Nancy.Bootstrapper.INancyBootstrapper, System.Uri)", file="NancyInternalConfiguration.cs", label="nancyBootstrapper == null", span="237-237"];
m6_150 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.CreateAndOpenWebServiceHost(Nancy.Bootstrapper.INancyBootstrapper, System.Uri)", file="NancyInternalConfiguration.cs", label="var host = new WebServiceHost(\r\n                new NancyWcfGenericService(nancyBootstrapper),\r\n                baseUri ?? BaseUri)", span="242-244"];
m6_155 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.CreateAndOpenWebServiceHost(Nancy.Bootstrapper.INancyBootstrapper, System.Uri)", file="NancyInternalConfiguration.cs", label="return host;", span="256-256"];
m6_154 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.CreateAndOpenWebServiceHost(Nancy.Bootstrapper.INancyBootstrapper, System.Uri)", file="NancyInternalConfiguration.cs", label="throw new SkipException(''Skipped due to no Administrator access - please see test fixture for more information.'');", span="253-253"];
m6_149 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.CreateAndOpenWebServiceHost(Nancy.Bootstrapper.INancyBootstrapper, System.Uri)", file="NancyInternalConfiguration.cs", label="nancyBootstrapper = new DefaultNancyBootstrapper()", span="239-239"];
m6_151 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.CreateAndOpenWebServiceHost(Nancy.Bootstrapper.INancyBootstrapper, System.Uri)", file="NancyInternalConfiguration.cs", label="host.AddServiceEndpoint(typeof (NancyWcfGenericService), new WebHttpBinding(), '''')", span="246-246"];
m6_152 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.CreateAndOpenWebServiceHost(Nancy.Bootstrapper.INancyBootstrapper, System.Uri)", file="NancyInternalConfiguration.cs", label="host.Open()", span="249-249"];
m6_153 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.CreateAndOpenWebServiceHost(Nancy.Bootstrapper.INancyBootstrapper, System.Uri)", file="NancyInternalConfiguration.cs", label=AddressAccessDeniedException, span="251-251"];
m6_156 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.CreateAndOpenWebServiceHost(Nancy.Bootstrapper.INancyBootstrapper, System.Uri)", file="NancyInternalConfiguration.cs", label="Exit Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.CreateAndOpenWebServiceHost(Nancy.Bootstrapper.INancyBootstrapper, System.Uri)", span="235-235"];
m6_34 [cluster="Unk.True", file="NancyInternalConfiguration.cs", label="Entry Unk.True", span=""];
m6_72 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_get_from_selfhost()", file="NancyInternalConfiguration.cs", label="Entry Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_get_from_selfhost()", span="116-116"];
m6_74 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_get_from_selfhost()", file="NancyInternalConfiguration.cs", label="var reader =\r\n                    new StreamReader(WebRequest.Create(new Uri(BaseUri, ''rel'')).GetResponse().GetResponseStream())", span="121-122"];
m6_73 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_get_from_selfhost()", file="NancyInternalConfiguration.cs", label="CreateAndOpenWebServiceHost()", span="119-119"];
m6_75 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_get_from_selfhost()", file="NancyInternalConfiguration.cs", label="var response = reader.ReadToEnd()", span="125-125"];
m6_76 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_get_from_selfhost()", file="NancyInternalConfiguration.cs", label="response.ShouldEqual(''This is the site route'')", span="128-128"];
m6_77 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_get_from_selfhost()", file="NancyInternalConfiguration.cs", label="Exit Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_get_from_selfhost()", span="116-116"];
m6_93 [cluster="System.IO.StreamWriter.Write(string)", file="NancyInternalConfiguration.cs", label="Entry System.IO.StreamWriter.Write(string)", span="0-0"];
m6_94 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_nancyrequest_contain_hostname_port_and_scheme()", file="NancyInternalConfiguration.cs", label="Entry Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_nancyrequest_contain_hostname_port_and_scheme()", span="158-158"];
m6_101 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_nancyrequest_contain_hostname_port_and_scheme()", file="NancyInternalConfiguration.cs", label="var request = WebRequest.Create(BaseUri)", span="173-173"];
m6_103 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_nancyrequest_contain_hostname_port_and_scheme()", file="NancyInternalConfiguration.cs", label="request.GetResponse()", span="178-178"];
m6_100 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_nancyrequest_contain_hostname_port_and_scheme()", file="NancyInternalConfiguration.cs", label="CreateAndOpenWebServiceHost(fakeBootstrapper)", span="171-171"];
m6_102 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_nancyrequest_contain_hostname_port_and_scheme()", file="NancyInternalConfiguration.cs", label="request.Method = ''GET''", span="174-174"];
m6_104 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_nancyrequest_contain_hostname_port_and_scheme()", file="NancyInternalConfiguration.cs", label=WebException, span="180-180"];
m6_105 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_nancyrequest_contain_hostname_port_and_scheme()", file="NancyInternalConfiguration.cs", label="Assert.Equal(56297, nancyRequest.Url.Port)", span="187-187"];
m6_97 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_nancyrequest_contain_hostname_port_and_scheme()", file="NancyInternalConfiguration.cs", label="var fakeBootstrapper = A.Fake<INancyBootstrapper>()", span="163-163"];
m6_99 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_nancyrequest_contain_hostname_port_and_scheme()", file="NancyInternalConfiguration.cs", label="A.CallTo(() => fakeBootstrapper.GetEngine()).Returns(fakeEngine)", span="168-168"];
m6_98 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_nancyrequest_contain_hostname_port_and_scheme()", file="NancyInternalConfiguration.cs", label="A.CallTo(() => fakeEngine.HandleRequest(A<Request>.Ignored, A<Func<NancyContext, NancyContext>>.Ignored, A<CancellationToken>.Ignored))\r\n                .Invokes(f => nancyRequest = (Request)f.Arguments[0])\r\n                .Returns(TaskHelpers.GetCompletedTask(new NancyContext()))", span="165-167"];
m6_106 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_nancyrequest_contain_hostname_port_and_scheme()", file="NancyInternalConfiguration.cs", label="Assert.Equal(''localhost'', nancyRequest.Url.HostName)", span="188-188"];
m6_96 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_nancyrequest_contain_hostname_port_and_scheme()", file="NancyInternalConfiguration.cs", label="var fakeEngine = A.Fake<INancyEngine>()", span="162-162"];
m6_107 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_nancyrequest_contain_hostname_port_and_scheme()", file="NancyInternalConfiguration.cs", label="Assert.Equal(''http'', nancyRequest.Url.Scheme)", span="189-189"];
m6_95 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_nancyrequest_contain_hostname_port_and_scheme()", file="NancyInternalConfiguration.cs", label="Request nancyRequest = null", span="161-161"];
m6_108 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_nancyrequest_contain_hostname_port_and_scheme()", file="NancyInternalConfiguration.cs", label="Exit Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_nancyrequest_contain_hostname_port_and_scheme()", span="158-158"];
m6_78 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="NancyInternalConfiguration.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m6_53 [cluster="Nancy.Bootstrapper.CollectionTypeRegistration.CollectionTypeRegistration(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", file="NancyInternalConfiguration.cs", label="Entry Nancy.Bootstrapper.CollectionTypeRegistration.CollectionTypeRegistration(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", span="19-19"];
m6_59 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_path_and_url_correctly_without_trailing_slash()", file="NancyInternalConfiguration.cs", label="Nancy.Bootstrapper.NancyInternalConfiguration", span=""];
m6_60 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_path_and_url_correctly_without_trailing_slash()", file="NancyInternalConfiguration.cs", label="Exit Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_path_and_url_correctly_without_trailing_slash()", span="81-81"];
m6_81 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_post_body_to_selfhost()", file="NancyInternalConfiguration.cs", label="Entry Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_post_body_to_selfhost()", span="133-133"];
m6_85 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_post_body_to_selfhost()", color=green, community=0, file="NancyInternalConfiguration.cs", label="request.Method = ''POST''", prediction=13, span="142-142"];
m6_84 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_post_body_to_selfhost()", file="NancyInternalConfiguration.cs", label="var request = \r\n                    WebRequest.Create(new Uri(BaseUri, ''rel''))", span="140-141"];
m6_86 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_post_body_to_selfhost()", file="NancyInternalConfiguration.cs", label="var writer = \r\n                    new StreamWriter(request.GetRequestStream()) {AutoFlush = true}", span="144-145"];
m6_83 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_post_body_to_selfhost()", file="NancyInternalConfiguration.cs", label="string testBody = ''This is the body of the request''", span="138-138"];
m6_88 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_post_body_to_selfhost()", file="NancyInternalConfiguration.cs", label="var responseBody = \r\n                    new StreamReader(request.GetResponse().GetResponseStream()).ReadToEnd()", span="149-150"];
m6_87 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_post_body_to_selfhost()", file="NancyInternalConfiguration.cs", label="writer.Write(testBody)", span="146-146"];
m6_82 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_post_body_to_selfhost()", file="NancyInternalConfiguration.cs", label="CreateAndOpenWebServiceHost()", span="136-136"];
m6_89 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_post_body_to_selfhost()", file="NancyInternalConfiguration.cs", label="responseBody.ShouldEqual(testBody)", span="153-153"];
m6_90 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_post_body_to_selfhost()", file="NancyInternalConfiguration.cs", label="Exit Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_post_body_to_selfhost()", span="133-133"];
m6_159 [cluster="Nancy.Hosting.Wcf.NancyWcfGenericService.NancyWcfGenericService(Nancy.Bootstrapper.INancyBootstrapper)", file="NancyInternalConfiguration.cs", label="Entry Nancy.Hosting.Wcf.NancyWcfGenericService.NancyWcfGenericService(Nancy.Bootstrapper.INancyBootstrapper)", span="39-39"];
m6_80 [cluster="System.IO.StreamReader.ReadToEnd()", file="NancyInternalConfiguration.cs", label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0"];
m6_135 [cluster="Nancy.Response.Response()", file="NancyInternalConfiguration.cs", label="Entry Nancy.Response.Response()", span="29-29"];
m6_164 [file="NancyInternalConfiguration.cs", label="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture", span=""];
m6_171 [file="NancyInternalConfiguration.cs", label=fakeEngine, span=""];
m6_172 [file="NancyInternalConfiguration.cs", label=fakeBootstrapper, span=""];
m6_166 [file="NancyInternalConfiguration.cs", label=fakeBootstrapper, span=""];
m6_168 [file="NancyInternalConfiguration.cs", label=fakeBootstrapper, span=""];
m6_170 [file="NancyInternalConfiguration.cs", label=fakeBootstrapper, span=""];
m6_165 [file="NancyInternalConfiguration.cs", label=fakeEngine, span=""];
m6_167 [file="NancyInternalConfiguration.cs", label=fakeEngine, span=""];
m6_169 [file="NancyInternalConfiguration.cs", label=fakeEngine, span=""];
m7_0 [cluster="Nancy.Tests.Functional.Tests.CookieTestsFixture.Cookie_should_decode_value_correctly()", file="NancyModule.cs", label="Entry Nancy.Tests.Functional.Tests.CookieTestsFixture.Cookie_should_decode_value_correctly()", span="12-12"];
m7_1 [cluster="Nancy.Tests.Functional.Tests.CookieTestsFixture.Cookie_should_decode_value_correctly()", file="NancyModule.cs", label="var browser = new Browser(with => with.Module<CookieTestsModule>())", span="15-15"];
m7_2 [cluster="Nancy.Tests.Functional.Tests.CookieTestsFixture.Cookie_should_decode_value_correctly()", file="NancyModule.cs", label="var result = browser.Get(''/setcookie'').Then.Get(''/getcookie'')", span="18-18"];
m7_3 [cluster="Nancy.Tests.Functional.Tests.CookieTestsFixture.Cookie_should_decode_value_correctly()", file="NancyModule.cs", label="Assert.Equal(HttpStatusCode.OK, result.StatusCode)", span="21-21"];
m7_4 [cluster="Nancy.Tests.Functional.Tests.CookieTestsFixture.Cookie_should_decode_value_correctly()", file="NancyModule.cs", label="Exit Nancy.Tests.Functional.Tests.CookieTestsFixture.Cookie_should_decode_value_correctly()", span="12-12"];
m7_11 [cluster="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.Module<T>()", file="NancyModule.cs", label="Entry Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.Module<T>()", span="880-880"];
m7_5 [cluster="Browser.cstr", file="NancyModule.cs", label="Entry Browser.cstr", span=""];
m7_7 [cluster="Unk.Equal", file="NancyModule.cs", label="Entry Unk.Equal", span=""];
m7_8 [cluster="lambda expression", file="NancyModule.cs", label="Entry lambda expression", span="15-15"];
m7_9 [cluster="lambda expression", file="NancyModule.cs", label="with.Module<CookieTestsModule>()", span="15-15"];
m7_10 [cluster="lambda expression", file="NancyModule.cs", label="Exit lambda expression", span="15-15"];
m8_13 [cluster="Nancy.Routing.Route.Invoke(Nancy.DynamicDictionary)", file="NotFoundRouteFixture.cs", label="Entry Nancy.Routing.Route.Invoke(Nancy.DynamicDictionary)", span="54-54"];
m8_14 [cluster="object.ShouldBeOfType<T>()", file="NotFoundRouteFixture.cs", label="Entry object.ShouldBeOfType<T>()", span="150-150"];
m8_0 [cluster="Nancy.Tests.Unit.Routing.NotFoundRouteFixture.NotFoundRouteFixture()", file="NotFoundRouteFixture.cs", label="Entry Nancy.Tests.Unit.Routing.NotFoundRouteFixture.NotFoundRouteFixture()", span="9-9"];
m8_1 [cluster="Nancy.Tests.Unit.Routing.NotFoundRouteFixture.NotFoundRouteFixture()", file="NotFoundRouteFixture.cs", label="this.route = new NotFoundRoute(''GET'', ''/test'')", span="11-11"];
m8_2 [cluster="Nancy.Tests.Unit.Routing.NotFoundRouteFixture.NotFoundRouteFixture()", file="NotFoundRouteFixture.cs", label="Exit Nancy.Tests.Unit.Routing.NotFoundRouteFixture.NotFoundRouteFixture()", span="9-9"];
m8_3 [cluster="Nancy.Routing.NotFoundRoute.NotFoundRoute(string, string)", file="NotFoundRouteFixture.cs", label="Entry Nancy.Routing.NotFoundRoute.NotFoundRoute(string, string)", span="14-14"];
m8_12 [cluster="Nancy.DynamicDictionary.DynamicDictionary()", file="NotFoundRouteFixture.cs", label="Entry Nancy.DynamicDictionary.DynamicDictionary()", span="10-10"];
m8_4 [cluster="Nancy.Tests.Unit.Routing.NotFoundRouteFixture.Should_set_route_property_when_instantiated()", file="NotFoundRouteFixture.cs", label="Entry Nancy.Tests.Unit.Routing.NotFoundRouteFixture.Should_set_route_property_when_instantiated()", span="15-15"];
m8_5 [cluster="Nancy.Tests.Unit.Routing.NotFoundRouteFixture.Should_set_route_property_when_instantiated()", file="NotFoundRouteFixture.cs", label="route.Description.Path.ShouldEqual(''/test'')", span="18-18"];
m8_6 [cluster="Nancy.Tests.Unit.Routing.NotFoundRouteFixture.Should_set_route_property_when_instantiated()", file="NotFoundRouteFixture.cs", label="Exit Nancy.Tests.Unit.Routing.NotFoundRouteFixture.Should_set_route_property_when_instantiated()", span="15-15"];
m8_8 [cluster="Nancy.Tests.Unit.Routing.NotFoundRouteFixture.Should_set_action_that_returns_not_found_when_instantiated()", file="NotFoundRouteFixture.cs", label="Entry Nancy.Tests.Unit.Routing.NotFoundRouteFixture.Should_set_action_that_returns_not_found_when_instantiated()", span="22-22"];
m8_9 [cluster="Nancy.Tests.Unit.Routing.NotFoundRouteFixture.Should_set_action_that_returns_not_found_when_instantiated()", color=green, community=0, file="NotFoundRouteFixture.cs", label="var response = route.Invoke(new DynamicDictionary())", prediction=14, span="25-25"];
m8_10 [cluster="Nancy.Tests.Unit.Routing.NotFoundRouteFixture.Should_set_action_that_returns_not_found_when_instantiated()", file="NotFoundRouteFixture.cs", label="response.ShouldBeOfType<NotFoundResponse>()", span="28-28"];
m8_11 [cluster="Nancy.Tests.Unit.Routing.NotFoundRouteFixture.Should_set_action_that_returns_not_found_when_instantiated()", file="NotFoundRouteFixture.cs", label="Exit Nancy.Tests.Unit.Routing.NotFoundRouteFixture.Should_set_action_that_returns_not_found_when_instantiated()", span="22-22"];
m8_15 [file="NotFoundRouteFixture.cs", label="Nancy.Tests.Unit.Routing.NotFoundRouteFixture", span=""];
m9_9 [cluster="Nancy.Routing.Route.Invoke(Nancy.DynamicDictionary)", file="Route.cs", label="Entry Nancy.Routing.Route.Invoke(Nancy.DynamicDictionary)", span="54-54"];
m9_10 [cluster="Nancy.Routing.Route.Invoke(Nancy.DynamicDictionary)", file="Route.cs", label="return this.Action.Invoke(parameters);", span="56-56"];
m9_11 [cluster="Nancy.Routing.Route.Invoke(Nancy.DynamicDictionary)", file="Route.cs", label="Exit Nancy.Routing.Route.Invoke(Nancy.DynamicDictionary)", span="54-54"];
m9_6 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Route.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m9_0 [cluster="Nancy.Routing.Route.Route(Nancy.Routing.RouteDescription, System.Func<dynamic, Nancy.Response>)", file="Route.cs", label="Entry Nancy.Routing.Route.Route(Nancy.Routing.RouteDescription, System.Func<dynamic, Nancy.Response>)", span="14-14"];
m9_1 [cluster="Nancy.Routing.Route.Route(Nancy.Routing.RouteDescription, System.Func<dynamic, Nancy.Response>)", file="Route.cs", label="action == null", span="16-16"];
m9_3 [cluster="Nancy.Routing.Route.Route(Nancy.Routing.RouteDescription, System.Func<dynamic, Nancy.Response>)", file="Route.cs", label="this.Description = description", span="21-21"];
m9_4 [cluster="Nancy.Routing.Route.Route(Nancy.Routing.RouteDescription, System.Func<dynamic, Nancy.Response>)", file="Route.cs", label="this.Action = action", span="22-22"];
m9_2 [cluster="Nancy.Routing.Route.Route(Nancy.Routing.RouteDescription, System.Func<dynamic, Nancy.Response>)", file="Route.cs", label="throw new ArgumentNullException(''action'');", span="18-18"];
m9_5 [cluster="Nancy.Routing.Route.Route(Nancy.Routing.RouteDescription, System.Func<dynamic, Nancy.Response>)", file="Route.cs", label="Exit Nancy.Routing.Route.Route(Nancy.Routing.RouteDescription, System.Func<dynamic, Nancy.Response>)", span="14-14"];
m9_12 [cluster="System.Func<T, TResult>.Invoke(T)", file="Route.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m9_7 [cluster="Nancy.Routing.Route.Route(string, string, System.Func<Nancy.NancyContext, bool>, System.Func<dynamic, Nancy.Response>)", file="Route.cs", label="Entry Nancy.Routing.Route.Route(string, string, System.Func<Nancy.NancyContext, bool>, System.Func<dynamic, Nancy.Response>)", span="32-32"];
m9_8 [cluster="Nancy.Routing.Route.Route(string, string, System.Func<Nancy.NancyContext, bool>, System.Func<dynamic, Nancy.Response>)", file="Route.cs", label="Exit Nancy.Routing.Route.Route(string, string, System.Func<Nancy.NancyContext, bool>, System.Func<dynamic, Nancy.Response>)", span="32-32"];
m9_13 [file="Route.cs", label="Nancy.Routing.Route", span=""];
n85 -> n38  [color=darkseagreen4, key=1, label=animal, style=dashed];
n86 -> n48  [color=darkseagreen4, key=1, label=animal, style=dashed];
n87 -> n72  [color=darkseagreen4, key=1, label=animal, style=dashed];
n88 -> n81  [color=darkseagreen4, key=1, label=animal, style=dashed];
n19 -> n25  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBoostrapperConfigurator", style=dashed];
n30 -> n38  [color=darkseagreen4, key=1, label=animal, style=dashed];
n30 -> n32  [color=darkseagreen4, key=1, label=animal, style=dashed];
n31 -> n37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n43 -> n48  [color=darkseagreen4, key=1, label=animal, style=dashed];
n44 -> n47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n52 -> n54  [color=darkseagreen4, key=1, label=animal, style=dashed];
n53 -> n56  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n60 -> n63  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n67 -> n72  [color=darkseagreen4, key=1, label=animal, style=dashed];
n68 -> n71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n76 -> n81  [color=darkseagreen4, key=1, label=animal, style=dashed];
n77 -> n80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d29 -> d37  [color=green, key=1, label="lambda expression", style=dashed];
d195 -> d38  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture", style=dashed];
d195 -> d56  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture", style=dashed];
d195 -> d72  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture", style=dashed];
d195 -> d140  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture", style=dashed];
d195 -> d130  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture", style=dashed];
d195 -> d165  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture", style=dashed];
d195 -> d189  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Diagnostics.DiagnosticsHookFixture", style=dashed];
d26 -> d34  [color=darkseagreen4, key=1, label=diagsConfig, style=dashed];
d6 -> d19  [color=darkseagreen4, key=1, label=diagsConfig, style=dashed];
d44 -> d52  [color=darkseagreen4, key=1, label=diagsConfig, style=dashed];
d47 -> d55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d60 -> d68  [color=darkseagreen4, key=1, label=diagsConfig, style=dashed];
d63 -> d71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d75 -> d87  [color=darkseagreen4, key=1, label=diagsConfig, style=dashed];
d99 -> d111  [color=darkseagreen4, key=1, label=diagsConfig, style=dashed];
d124 -> d136  [color=darkseagreen4, key=1, label=diagsConfig, style=dashed];
d128 -> d139  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d128 -> d130  [color=darkseagreen4, key=1, label=result, style=dashed];
d130 -> d145  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d149 -> d161  [color=darkseagreen4, key=1, label=diagsConfig, style=dashed];
d152 -> d164  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d152 -> d154  [color=darkseagreen4, key=1, label=result, style=dashed];
d171 -> d174  [color=darkseagreen4, key=1, label=encryptedSession, style=dashed];
d27 -> d33  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
d27 -> d34  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
d27 -> d35  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
d7 -> d18  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
d7 -> d19  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
d7 -> d20  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
d45 -> d51  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
d45 -> d52  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
d45 -> d53  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
d61 -> d67  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
d61 -> d68  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
d61 -> d69  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
d76 -> d86  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
d76 -> d87  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
d76 -> d88  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
d78 -> d90  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d78 -> d80  [color=darkseagreen4, key=1, label=result, style=dashed];
d100 -> d110  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
d100 -> d111  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
d100 -> d112  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
d102 -> d114  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d102 -> d104  [color=darkseagreen4, key=1, label=result, style=dashed];
d125 -> d135  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
d125 -> d136  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
d125 -> d137  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
d127 -> d140  [color=darkseagreen4, key=1, label=expiryDate, style=dashed];
d127 -> d130  [color=darkseagreen4, key=1, label=expiryDate, style=dashed];
d129 -> d142  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d203 -> d140  [color=darkseagreen4, key=1, label=expiryDate, style=dashed];
d150 -> d160  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
d150 -> d161  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
d150 -> d162  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
d197 -> d34  [color=darkseagreen4, key=1, label=diagsConfig, style=dashed];
d32 -> d34  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
d32 -> d35  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
d196 -> d19  [color=darkseagreen4, key=1, label=diagsConfig, style=dashed];
d17 -> d19  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
d17 -> d20  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
d198 -> d52  [color=darkseagreen4, key=1, label=diagsConfig, style=dashed];
d50 -> d52  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
d50 -> d53  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
d199 -> d68  [color=darkseagreen4, key=1, label=diagsConfig, style=dashed];
d66 -> d68  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
d66 -> d69  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
d200 -> d87  [color=darkseagreen4, key=1, label=diagsConfig, style=dashed];
d85 -> d87  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
d85 -> d88  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
d80 -> d94  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d201 -> d111  [color=darkseagreen4, key=1, label=diagsConfig, style=dashed];
d109 -> d111  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
d109 -> d112  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
d103 -> d117  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d104 -> d120  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d202 -> d136  [color=darkseagreen4, key=1, label=diagsConfig, style=dashed];
d134 -> d136  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
d134 -> d137  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
d204 -> d161  [color=darkseagreen4, key=1, label=diagsConfig, style=dashed];
d159 -> d161  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
d159 -> d162  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m4_49 -> m4_74  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m4_110 -> m4_138  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m4_110 -> m4_139  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m4_110 -> m4_141  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m4_110 -> m4_144  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m4_136 -> m4_138  [color=darkseagreen4, key=1, label=resolveResultPreReq, style=dashed];
m4_137 -> m4_143  [color=darkseagreen4, key=1, label=resolveResultPostReq, style=dashed];
m4_137 -> m4_144  [color=darkseagreen4, key=1, label=resolveResultPostReq, style=dashed];
m4_27 -> m4_102  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m4_27 -> m4_103  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m4_27 -> m4_104  [color=darkseagreen4, key=1, label="Nancy.Bootstrapper.IPipelines", style=dashed];
m4_27 -> m4_105  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m4_27 -> m4_107  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m4_80 -> m4_85  [color=darkseagreen4, key=1, label="Nancy.Request", style=dashed];
m4_80 -> m4_87  [color=darkseagreen4, key=1, label="System.Action<System.Exception>", style=dashed];
m4_81 -> m4_84  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_112 -> m4_120  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
m4_112 -> m4_123  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
m4_28 -> m4_92  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m4_28 -> m4_98  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m4_28 -> m4_93  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m4_92 -> m4_97  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_51 -> m4_51  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", style=dashed];
m4_54 -> m4_54  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", style=dashed];
m4_29 -> m4_32  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m4_29 -> m4_41  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m4_29 -> m4_42  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m4_34 -> m4_41  [color=darkseagreen4, key=1, label=sessionGuid, style=dashed];
m4_34 -> m4_42  [color=darkseagreen4, key=1, label=sessionGuid, style=dashed];
m4_39 -> m4_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_39 -> m4_53  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_45 -> m4_60  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m4_60 -> m4_63  [color=darkseagreen4, key=1, label=sessionId, style=dashed];
m4_63 -> m4_67  [color=darkseagreen4, key=1, label=sessionGuid, style=dashed];
m4_17 -> m4_19  [color=darkseagreen4, key=1, label=context, style=dashed];
m4_17 -> m4_20  [color=darkseagreen4, key=1, label=context, style=dashed];
m4_17 -> m4_21  [color=darkseagreen4, key=1, label=context, style=dashed];
m4_17 -> m4_22  [color=darkseagreen4, key=1, label=context, style=dashed];
m4_17 -> m4_23  [color=darkseagreen4, key=1, label=context, style=dashed];
m4_0 -> m4_3  [color=darkseagreen4, key=1, label="Nancy.INancyContextFactory", style=dashed];
m4_0 -> m4_5  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Nancy.ErrorHandling.IErrorHandler>", style=dashed];
m4_157 -> m4_19  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m4_157 -> m4_20  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m4_157 -> m4_21  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m4_157 -> m4_22  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m4_157 -> m4_30  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m4_157 -> m4_41  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m4_157 -> m4_42  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m4_157 -> m4_61  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m4_157 -> m4_64  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m4_157 -> m4_65  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m4_157 -> m4_66  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m4_157 -> m4_81  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m4_157 -> m4_85  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m4_157 -> m4_92  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m4_157 -> m4_103  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m4_158 -> m4_85  [color=darkseagreen4, key=1, label="Nancy.Request", style=dashed];
m4_159 -> m4_85  [color=darkseagreen4, key=1, label="System.Action<Nancy.NancyContext>", style=dashed];
m4_160 -> m4_87  [color=darkseagreen4, key=1, label="System.Action<System.Exception>", style=dashed];
m4_161 -> m4_98  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m5_0 -> m5_2  [color=green, key=1, label=string, style=dashed];
m5_0 -> m5_3  [color=green, key=1, label="string[]", style=dashed];
m5_0 -> m5_4  [color=green, key=1, label="string[]", style=dashed];
m5_5 -> m5_11  [color=green, key=1, label="lambda expression", style=dashed];
m5_5 -> m5_15  [color=green, key=1, label="lambda expression", style=dashed];
m5_18 -> m5_20  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m5_7 -> m5_9  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_20 -> m5_1  [color=darkseagreen4, key=1, label="Nancy.Routing.Constraints.ParameterizedRouteConstraint<T>", style=dashed];
m5_20 -> m5_9  [color=darkseagreen4, key=1, label="Nancy.Routing.Constraints.ParameterizedRouteConstraint<T>", style=dashed];
m5_28 -> m5_1  [color=green, key=1, label="Nancy.ViewEngines.ViewNotFoundException", style=dashed];
m5_28 -> m5_2  [color=green, key=1, label="Nancy.ViewEngines.ViewNotFoundException", style=dashed];
m5_28 -> m5_3  [color=green, key=1, label="Nancy.ViewEngines.ViewNotFoundException", style=dashed];
m5_28 -> m5_4  [color=green, key=1, label="Nancy.ViewEngines.ViewNotFoundException", style=dashed];
m5_28 -> m5_5  [color=green, key=1, label="Nancy.ViewEngines.ViewNotFoundException", style=dashed];
m5_28 -> m5_20  [color=darkseagreen4, key=1, label="Nancy.ViewEngines.ViewNotFoundException", style=dashed];
m6_48 -> m6_64  [color=darkseagreen4, key=1, label=fakeEngine, style=dashed];
m6_48 -> m6_51  [color=darkseagreen4, key=1, label=fakeEngine, style=dashed];
m6_49 -> m6_58  [color=darkseagreen4, key=1, label=nancyRequest, style=dashed];
m6_49 -> m6_59  [color=darkseagreen4, key=1, label=nancyRequest, style=dashed];
m6_49 -> m6_63  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_49 -> m6_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_131 -> m6_133  [color=green, key=1, label=response, style=dashed];
m6_133 -> m6_145  [color=green, key=1, label="lambda expression", style=dashed];
m6_127 -> m6_129  [color=darkseagreen4, key=1, label=request, style=dashed];
m6_120 -> m6_123  [color=darkseagreen4, key=1, label=fakeEngine, style=dashed];
m6_120 -> m6_140  [color=darkseagreen4, key=1, label=fakeEngine, style=dashed];
m6_120 -> m6_124  [color=darkseagreen4, key=1, label=fakeEngine, style=dashed];
m6_121 -> m6_126  [color=darkseagreen4, key=1, label=fakeBootstrapper, style=dashed];
m6_121 -> m6_124  [color=darkseagreen4, key=1, label=fakeBootstrapper, style=dashed];
m6_121 -> m6_143  [color=darkseagreen4, key=1, label=fakeBootstrapper, style=dashed];
m6_123 -> m6_139  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_124 -> m6_142  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_50 -> m6_53  [color=darkseagreen4, key=1, label=fakeBootstrapper, style=dashed];
m6_50 -> m6_70  [color=darkseagreen4, key=1, label=fakeBootstrapper, style=dashed];
m6_51 -> m6_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_54 -> m6_56  [color=darkseagreen4, key=1, label=request, style=dashed];
m6_40 -> m6_42  [color=darkseagreen4, key=1, label="System.Action<Nancy.Bootstrapper.NancyInternalConfiguration>", style=dashed];
m6_41 -> m6_43  [color=darkseagreen4, key=1, label=configuration, style=dashed];
m6_2 -> m6_4  [color=darkseagreen4, key=1, label=request, style=dashed];
m6_14 -> m6_17  [color=darkseagreen4, key=1, label=fakeEngine, style=dashed];
m6_14 -> m6_36  [color=darkseagreen4, key=1, label=fakeEngine, style=dashed];
m6_15 -> m6_23  [color=darkseagreen4, key=1, label=nancyRequest, style=dashed];
m6_15 -> m6_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_15 -> m6_24  [color=darkseagreen4, key=1, label=nancyRequest, style=dashed];
m6_15 -> m6_25  [color=darkseagreen4, key=1, label=nancyRequest, style=dashed];
m6_16 -> m6_18  [color=darkseagreen4, key=1, label=fakeBootstrapper, style=dashed];
m6_16 -> m6_43  [color=darkseagreen4, key=1, label=fakeBootstrapper, style=dashed];
m6_17 -> m6_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_19 -> m6_21  [color=darkseagreen4, key=1, label=request, style=dashed];
m6_150 -> m6_152  [color=darkseagreen4, key=1, label=host, style=dashed];
m6_150 -> m6_155  [color=darkseagreen4, key=1, label=host, style=dashed];
m6_101 -> m6_103  [color=darkseagreen4, key=1, label=request, style=dashed];
m6_97 -> m6_100  [color=darkseagreen4, key=1, label=fakeBootstrapper, style=dashed];
m6_97 -> m6_99  [color=darkseagreen4, key=1, label=fakeBootstrapper, style=dashed];
m6_97 -> m6_117  [color=darkseagreen4, key=1, label=fakeBootstrapper, style=dashed];
m6_99 -> m6_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_98 -> m6_105  [color=darkseagreen4, key=1, label=nancyRequest, style=dashed];
m6_98 -> m6_110  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_98 -> m6_113  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_98 -> m6_106  [color=darkseagreen4, key=1, label=nancyRequest, style=dashed];
m6_98 -> m6_107  [color=darkseagreen4, key=1, label=nancyRequest, style=dashed];
m6_96 -> m6_99  [color=darkseagreen4, key=1, label=fakeEngine, style=dashed];
m6_96 -> m6_111  [color=darkseagreen4, key=1, label=fakeEngine, style=dashed];
m6_59 -> m6_51  [color=darkseagreen4, key=1, label="Nancy.Bootstrapper.NancyInternalConfiguration", style=dashed];
m6_59 -> m6_56  [color=darkseagreen4, key=1, label="Nancy.Bootstrapper.NancyInternalConfiguration", style=dashed];
m6_83 -> m6_87  [color=darkseagreen4, key=1, label=testBody, style=dashed];
m6_83 -> m6_89  [color=darkseagreen4, key=1, label=testBody, style=dashed];
m6_164 -> m6_126  [color=darkseagreen4, key=1, label="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture", style=dashed];
m6_164 -> m6_18  [color=darkseagreen4, key=1, label="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture", style=dashed];
m6_164 -> m6_53  [color=darkseagreen4, key=1, label="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture", style=dashed];
m6_164 -> m6_100  [color=darkseagreen4, key=1, label="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture", style=dashed];
m6_171 -> m6_140  [color=darkseagreen4, key=1, label=fakeEngine, style=dashed];
m6_172 -> m6_143  [color=darkseagreen4, key=1, label=fakeBootstrapper, style=dashed];
m6_166 -> m6_43  [color=darkseagreen4, key=1, label=fakeBootstrapper, style=dashed];
m6_168 -> m6_70  [color=darkseagreen4, key=1, label=fakeBootstrapper, style=dashed];
m6_170 -> m6_117  [color=darkseagreen4, key=1, label=fakeBootstrapper, style=dashed];
m6_165 -> m6_36  [color=darkseagreen4, key=1, label=fakeEngine, style=dashed];
m6_167 -> m6_64  [color=darkseagreen4, key=1, label=fakeEngine, style=dashed];
m6_169 -> m6_111  [color=darkseagreen4, key=1, label=fakeEngine, style=dashed];
m7_1 -> m7_9  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m8_15 -> m8_5  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.NotFoundRouteFixture", style=dashed];
m9_13 -> m9_10  [color=darkseagreen4, key=1, label="Nancy.Routing.Route", style=dashed];
}
