digraph  {
n16 [label="Nancy.Hosting.NancyHttpRequestHandler", span=""];
n0 [cluster="Nancy.Hosting.NancyHttpRequestHandler.ProcessRequest(HttpContext)", label="Entry Nancy.Hosting.NancyHttpRequestHandler.ProcessRequest(HttpContext)", span="14-14"];
n1 [cluster="Nancy.Hosting.NancyHttpRequestHandler.ProcessRequest(HttpContext)", label="var engine = new NancyEngine(\r\n                CreateModuleLocator(),\r\n                new RouteResolver(),\r\n                application)", span="16-19"];
n2 [cluster="Nancy.Hosting.NancyHttpRequestHandler.ProcessRequest(HttpContext)", label="var wrappedContext = new HttpContextWrapper(context)", span="21-21"];
n6 [cluster="Nancy.NancyEngine.NancyEngine(Nancy.INancyModuleLocator, Nancy.Routing.IRouteResolver, Nancy.INancyApplication)", label="Entry Nancy.NancyEngine.NancyEngine(Nancy.INancyModuleLocator, Nancy.Routing.IRouteResolver, Nancy.INancyApplication)", span="20-20"];
n7 [cluster="Nancy.Hosting.NancyHttpRequestHandler.CreateModuleLocator()", label="Entry Nancy.Hosting.NancyHttpRequestHandler.CreateModuleLocator()", span="26-26"];
n8 [cluster="Nancy.Routing.RouteResolver.RouteResolver()", label="Entry Nancy.Routing.RouteResolver.RouteResolver()", span="10-10"];
n3 [cluster="Nancy.Hosting.NancyHttpRequestHandler.ProcessRequest(HttpContext)", label="var handler = new NancyHandler(engine)", span="22-22"];
n9 [cluster="HttpContextWrapper.cstr", label="Entry HttpContextWrapper.cstr", span=""];
n4 [cluster="Nancy.Hosting.NancyHttpRequestHandler.ProcessRequest(HttpContext)", label="handler.ProcessRequest(wrappedContext)", span="23-23"];
n10 [cluster="Nancy.Hosting.NancyHandler.NancyHandler(Nancy.INancyEngine)", label="Entry Nancy.Hosting.NancyHandler.NancyHandler(Nancy.INancyEngine)", span="9-9"];
n5 [cluster="Nancy.Hosting.NancyHttpRequestHandler.ProcessRequest(HttpContext)", label="Exit Nancy.Hosting.NancyHttpRequestHandler.ProcessRequest(HttpContext)", span="14-14"];
n11 [cluster="Unk.ProcessRequest", label="Entry Unk.ProcessRequest", span=""];
n12 [cluster="Nancy.Hosting.NancyHttpRequestHandler.CreateModuleLocator()", label="return new AppDomainModuleLocator(new DefaultModuleActivator());", span="28-28"];
n13 [cluster="Nancy.Hosting.NancyHttpRequestHandler.CreateModuleLocator()", label="Exit Nancy.Hosting.NancyHttpRequestHandler.CreateModuleLocator()", span="26-26"];
n14 [cluster="Nancy.AppDomainModuleLocator.AppDomainModuleLocator(Nancy.IModuleActivator)", label="Entry Nancy.AppDomainModuleLocator.AppDomainModuleLocator(Nancy.IModuleActivator)", span="18-18"];
n15 [cluster="Nancy.DefaultModuleActivator.DefaultModuleActivator()", label="Entry Nancy.DefaultModuleActivator.DefaultModuleActivator()", span="4-4"];
m0_305 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_status_code_to_response_when_set_as_integer()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_status_code_to_response_when_set_as_integer()", span="450-450"];
m0_306 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_status_code_to_response_when_set_as_integer()", file="ContentNegotiationFixture.cs", label="var browser = new Browser(with =>\r\n            {\r\n                with.ResponseProcessor<TestProcessor>();\r\n\r\n                with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithStatusCode(507);\r\n                    }));\r\n                }));\r\n            })", span="453-464"];
m0_307 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_status_code_to_response_when_set_as_integer()", file="ContentNegotiationFixture.cs", label="var response = browser.Get(''/'', with =>\r\n            {\r\n                with.Accept(''test/test'', 0.9m);\r\n            })", span="467-470"];
m0_308 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_status_code_to_response_when_set_as_integer()", file="ContentNegotiationFixture.cs", label="Assert.Equal(HttpStatusCode.InsufficientStorage, response.StatusCode)", span="473-473"];
m0_309 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_status_code_to_response_when_set_as_integer()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_status_code_to_response_when_set_as_integer()", span="450-450"];
m0_168 [cluster="string.Contains(string)", file="ContentNegotiationFixture.cs", label="Entry string.Contains(string)", span="0-0"];
m0_351 [cluster="Unk.Same", file="ContentNegotiationFixture.cs", label="Entry Unk.Same", span=""];
m0_8 [cluster="Nancy.Testing.Browser.Get(string, System.Action<Nancy.Testing.BrowserContext>)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Testing.Browser.Get(string, System.Action<Nancy.Testing.BrowserContext>)", span="59-59"];
m0_399 [cluster="string.StartsWith(string)", file="ContentNegotiationFixture.cs", label="Entry string.StartsWith(string)", span="0-0"];
m0_120 [cluster="Unk.WithStatusDescription", file="ContentNegotiationFixture.cs", label="Entry Unk.WithStatusDescription", span=""];
m0_9 [cluster="Unk.Equal", file="ContentNegotiationFixture.cs", label="Entry Unk.Equal", span=""];
m0_95 [cluster="Nancy.Responses.Negotiation.NegotiationContext.NegotiationContext()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Responses.Negotiation.NegotiationContext.NegotiationContext()", span="15-15"];
m0_284 [cluster="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.ResponseProcessors(params System.Type[])", file="ContentNegotiationFixture.cs", label="Entry Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.ResponseProcessors(params System.Type[])", span="1225-1225"];
m0_97 [cluster="Nancy.Responses.Negotiation.Negotiator.WithHeader(string, string)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Responses.Negotiation.Negotiator.WithHeader(string, string)", span="45-45"];
m0_226 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.CreateNegotiatedResponse(System.Action<Nancy.Responses.Negotiation.Negotiator>)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.CreateNegotiatedResponse(System.Action<Nancy.Responses.Negotiation.Negotiator>)", span="621-621"];
m0_441 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.CreateNegotiatedResponse(System.Action<Nancy.Responses.Negotiation.Negotiator>)", file="ContentNegotiationFixture.cs", label="return (parameters, module) =>\r\n                {\r\n                    var negotiator = new Negotiator(module.Context);\r\n\r\n                    if (action != null)\r\n                    {\r\n                        action.Invoke(negotiator);\r\n                    }\r\n\r\n                    return negotiator;\r\n                };", span="623-633"];
m0_442 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.CreateNegotiatedResponse(System.Action<Nancy.Responses.Negotiation.Negotiator>)", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.CreateNegotiatedResponse(System.Action<Nancy.Responses.Negotiation.Negotiator>)", span="621-621"];
m0_162 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_boost_html_priority_if_set_to_the_same_priority_as_others()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_boost_html_priority_if_set_to_the_same_priority_as_others()", span="246-246"];
m0_163 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_boost_html_priority_if_set_to_the_same_priority_as_others()", file="ContentNegotiationFixture.cs", label="var browser = new Browser(with =>\r\n            {\r\n                with.ResponseProcessor<TestProcessor>();\r\n\r\n                with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', (parameters, module) =>\r\n                    {\r\n                        var context =\r\n                            new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n                        var negotiator =\r\n                            new Negotiator(context);\r\n\r\n                        negotiator.WithAllowedMediaRange(''application/xml'');\r\n                        negotiator.WithAllowedMediaRange(''text/html'');\r\n\r\n                        return negotiator;\r\n                    });\r\n                }));\r\n            })", span="249-269"];
m0_164 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_boost_html_priority_if_set_to_the_same_priority_as_others()", file="ContentNegotiationFixture.cs", label="var response = browser.Get(''/'', with =>\r\n            {\r\n                with.Header(''User-Agent'', ''Mozilla/5.0 (Windows; U; Windows NT 5.1; ru-RU) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4'');\r\n                with.Accept(''application/xml'', 0.9m);\r\n                with.Accept(''text/html'', 0.9m);\r\n            })", span="272-277"];
m0_165 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_boost_html_priority_if_set_to_the_same_priority_as_others()", file="ContentNegotiationFixture.cs", label="Assert.Equal(HttpStatusCode.OK, response.StatusCode)", span="280-280"];
m0_166 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_boost_html_priority_if_set_to_the_same_priority_as_others()", file="ContentNegotiationFixture.cs", label="Assert.True(response.Body.AsString().Contains(''text/html''), ''Media type mismatch'')", span="281-281"];
m0_167 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_boost_html_priority_if_set_to_the_same_priority_as_others()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_boost_html_priority_if_set_to_the_same_priority_as_others()", span="246-246"];
m0_191 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_override_with_extension()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_override_with_extension()", span="285-285"];
m0_192 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_override_with_extension()", file="ContentNegotiationFixture.cs", label="var browser = new Browser(with =>\r\n            {\r\n                with.ResponseProcessor<TestProcessor>();\r\n\r\n                with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/test'', (parameters, module) =>\r\n                    {\r\n                        var context =\r\n                            new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n                        var negotiator =\r\n                            new Negotiator(context);\r\n\r\n                        return negotiator;\r\n                    });\r\n                }));\r\n            })", span="288-305"];
m0_193 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_override_with_extension()", file="ContentNegotiationFixture.cs", label="var response = browser.Get(''/test.foo'', with =>\r\n            {\r\n                with.Header(''User-Agent'', ''Mozilla/5.0 (Windows; U; Windows NT 5.1; ru-RU) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4'');\r\n                with.Accept(''application/xml'', 0.9m);\r\n                with.Accept(''text/html'', 0.9m);\r\n            })", span="308-313"];
m0_194 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_override_with_extension()", file="ContentNegotiationFixture.cs", label="Assert.Equal(HttpStatusCode.OK, response.StatusCode)", span="316-316"];
m0_195 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_override_with_extension()", file="ContentNegotiationFixture.cs", label="Assert.True(response.Body.AsString().Contains(''foo/bar''), ''Media type mismatch'')", span="317-317"];
m0_196 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_override_with_extension()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_override_with_extension()", span="285-285"];
m0_291 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_link_header_for_matching_response_processors()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_link_header_for_matching_response_processors()", span="427-427"];
m0_292 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_link_header_for_matching_response_processors()", file="ContentNegotiationFixture.cs", label="var browser = new Browser(with =>\r\n            {\r\n                with.ResponseProcessors(typeof(XmlProcessor), typeof(JsonProcessor), typeof(TestProcessor));\r\n\r\n                with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse());\r\n                }));\r\n            })", span="430-438"];
m0_293 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_link_header_for_matching_response_processors()", file="ContentNegotiationFixture.cs", label="var response = browser.Get(''/'')", span="441-441"];
m0_294 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_link_header_for_matching_response_processors()", file="ContentNegotiationFixture.cs", label="Assert.True(response.Headers[''Link''].Contains(@''</.foo>; rel=''''foo/bar''''''))", span="444-444"];
m0_295 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_link_header_for_matching_response_processors()", file="ContentNegotiationFixture.cs", label="Assert.True(response.Headers[''Link''].Contains(@''</.json>; rel=''''application/json''''''))", span="445-445"];
m0_296 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_link_header_for_matching_response_processors()", file="ContentNegotiationFixture.cs", label="Assert.True(response.Headers[''Link''].Contains(@''</.xml>; rel=''''application/xml''''''))", span="446-446"];
m0_297 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_link_header_for_matching_response_processors()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_link_header_for_matching_response_processors()", span="427-427"];
m0_233 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_that_contains_default_model_when_no_media_range_specific_model_was_declared()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_that_contains_default_model_when_no_media_range_specific_model_was_declared()", span="348-348"];
m0_234 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_that_contains_default_model_when_no_media_range_specific_model_was_declared()", file="ContentNegotiationFixture.cs", label="var browser = new Browser(with =>\r\n            {\r\n                with.ResponseProcessor<ModelProcessor>();\r\n\r\n                with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithModel(''the model'');\r\n                        config.WithAllowedMediaRange(''test/test'');\r\n                    }));\r\n                }));\r\n            })", span="351-363"];
m0_235 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_that_contains_default_model_when_no_media_range_specific_model_was_declared()", file="ContentNegotiationFixture.cs", label="var response = browser.Get(''/'', with =>\r\n            {\r\n                with.Accept(''test/test'', 0.9m);\r\n            })", span="366-369"];
m0_236 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_that_contains_default_model_when_no_media_range_specific_model_was_declared()", file="ContentNegotiationFixture.cs", label="Assert.Equal(''the model'', response.Body.AsString())", span="372-372"];
m0_237 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_that_contains_default_model_when_no_media_range_specific_model_was_declared()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_that_contains_default_model_when_no_media_range_specific_model_was_declared()", span="348-348"];
m0_393 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_use_next_processor_if_processor_returns_null()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_use_next_processor_if_processor_returns_null()", span="558-558"];
m0_394 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_use_next_processor_if_processor_returns_null()", file="ContentNegotiationFixture.cs", label="var browser = new Browser(with =>\r\n                {\r\n                with.ResponseProcessors(typeof(NullProcessor), typeof(TestProcessor));\r\n\r\n                with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/test'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithAllowedMediaRange(''application/xml'');\r\n                    }));\r\n                }));\r\n            })", span="561-572"];
m0_395 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_use_next_processor_if_processor_returns_null()", file="ContentNegotiationFixture.cs", label="var response = browser.Get(''/test'', with =>\r\n            {\r\n                with.Accept(''application/xml'', 0.9m);\r\n            })", span="575-578"];
m0_396 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_use_next_processor_if_processor_returns_null()", file="ContentNegotiationFixture.cs", label="var bodyResult = response.Body.AsString()", span="581-581"];
m0_397 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_use_next_processor_if_processor_returns_null()", file="ContentNegotiationFixture.cs", label="Assert.True(bodyResult.StartsWith(''application/xml''), string.Format(''Body should have started with 'application/xml' but was actually '{0}''', bodyResult))", span="582-582"];
m0_398 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_use_next_processor_if_processor_returns_null()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_use_next_processor_if_processor_returns_null()", span="558-558"];
m0_400 [cluster="string.Format(string, object)", file="ContentNegotiationFixture.cs", label="Entry string.Format(string, object)", span="0-0"];
m0_386 [cluster="Nancy.Responses.Negotiation.Negotiator.WithView(string)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Responses.Negotiation.Negotiator.WithView(string)", span="148-148"];
m0_20 [cluster="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.Module(Nancy.INancyModule)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.Module(Nancy.INancyModule)", span="817-817"];
m0_437 [cluster="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.Module<T>()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.Module<T>()", span="807-807"];
m0_339 [cluster="Nancy.Responses.Negotiation.Negotiator.WithStatusCode(Nancy.HttpStatusCode)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Responses.Negotiation.Negotiator.WithStatusCode(Nancy.HttpStatusCode)", span="202-202"];
m0_429 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_not_try_and_serve_view_with_invalid_name()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_not_try_and_serve_view_with_invalid_name()", span="612-612"];
m0_430 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_not_try_and_serve_view_with_invalid_name()", file="ContentNegotiationFixture.cs", label="var browser = new Browser(with => with.Module<NegotiationModule>())", span="614-614"];
m0_431 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_not_try_and_serve_view_with_invalid_name()", file="ContentNegotiationFixture.cs", label="var result = Record.Exception(() => browser.Get(''/invalid-view-name''))", span="616-616"];
m0_432 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_not_try_and_serve_view_with_invalid_name()", file="ContentNegotiationFixture.cs", label="Assert.True(result.ToString().Contains(''Unable to locate view''))", span="618-618"];
m0_433 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_not_try_and_serve_view_with_invalid_name()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_not_try_and_serve_view_with_invalid_name()", span="612-612"];
m0_6 [cluster="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModule(System.Action<Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator>)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModule(System.Action<Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator>)", span="20-20"];
m0_190 [cluster="Nancy.Testing.BrowserContext.Accept(Nancy.Responses.Negotiation.MediaRange, decimal)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Testing.BrowserContext.Accept(Nancy.Responses.Negotiation.MediaRange, decimal)", span="177-177"];
m0_27 [cluster="Nancy.Testing.BrowserResponseBodyWrapper.AsString()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Testing.BrowserResponseBodyWrapper.AsString()", span="30-30"];
m0_145 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_apply_default_accept_when_no_accept_header_sent()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_apply_default_accept_when_no_accept_header_sent()", span="216-216"];
m0_146 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_apply_default_accept_when_no_accept_header_sent()", file="ContentNegotiationFixture.cs", label="var browser = new Browser(with =>\r\n            {\r\n                with.ResponseProcessor<TestProcessor>();\r\n\r\n                with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', (parameters, module) =>\r\n                    {\r\n                        var context =\r\n                            new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n                        var negotiator =\r\n                            new Negotiator(context);\r\n\r\n                        return negotiator;\r\n                    });\r\n                }));\r\n            })", span="219-236"];
m0_147 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_apply_default_accept_when_no_accept_header_sent()", file="ContentNegotiationFixture.cs", label="var response = browser.Get(''/'')", span="239-239"];
m0_148 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_apply_default_accept_when_no_accept_header_sent()", file="ContentNegotiationFixture.cs", label="Assert.Equal(HttpStatusCode.OK, response.StatusCode)", span="242-242"];
m0_149 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_apply_default_accept_when_no_accept_header_sent()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_apply_default_accept_when_no_accept_header_sent()", span="216-216"];
m0_366 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_throw_exception_if_view_location_fails()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_throw_exception_if_view_location_fails()", span="534-534"];
m0_367 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_throw_exception_if_view_location_fails()", file="ContentNegotiationFixture.cs", label="var browser = new Browser(with =>\r\n            {\r\n                with.ResponseProcessor<ViewProcessor>();\r\n\r\n                with.Module(new ConfigurableNancyModule(x => x.Get(''/FakeModuleInvalidViewName'', CreateNegotiatedResponse(neg => neg.WithView(''blahblahblah'')))));\r\n            })", span="536-541"];
m0_368 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_throw_exception_if_view_location_fails()", file="ContentNegotiationFixture.cs", label="var result = Record.Exception(() =>\r\n                {\r\n                    var response = browser.Get(\r\n                        ''/FakeModuleInvalidViewName'',\r\n                        with =>\r\n                            { with.Accept(''text/html'', 1.0m); });\r\n                })", span="544-550"];
m0_369 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_throw_exception_if_view_location_fails()", file="ContentNegotiationFixture.cs", label="Assert.NotNull(result)", span="553-553"];
m0_370 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_throw_exception_if_view_location_fails()", file="ContentNegotiationFixture.cs", label="Assert.Contains(''Unable to locate view'', result.ToString())", span="554-554"];
m0_371 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_throw_exception_if_view_location_fails()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_throw_exception_if_view_location_fails()", span="534-534"];
m0_320 [cluster="Nancy.Responses.Negotiation.Negotiator.WithStatusCode(int)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Responses.Negotiation.Negotiator.WithStatusCode(int)", span="190-190"];
m0_0 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_int_value_from_get_route_as_response_with_status_code_set_to_value()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_int_value_from_get_route_as_response_with_status_code_set_to_value()", span="18-18"];
m0_2 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_int_value_from_get_route_as_response_with_status_code_set_to_value()", file="ContentNegotiationFixture.cs", label="var browser = new Browser(with =>\r\n            {\r\n                with.Module(module);\r\n            })", span="26-29"];
m0_3 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_int_value_from_get_route_as_response_with_status_code_set_to_value()", file="ContentNegotiationFixture.cs", label="var response = browser.Get(''/int'')", span="32-32"];
m0_4 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_int_value_from_get_route_as_response_with_status_code_set_to_value()", file="ContentNegotiationFixture.cs", label="Assert.Equal((HttpStatusCode)200, response.StatusCode)", span="35-35"];
m0_1 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_int_value_from_get_route_as_response_with_status_code_set_to_value()", file="ContentNegotiationFixture.cs", label="var module = new ConfigurableNancyModule(with =>\r\n            {\r\n                with.Get(''/int'', (x,m) => 200);\r\n            })", span="21-24"];
m0_5 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_int_value_from_get_route_as_response_with_status_code_set_to_value()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_int_value_from_get_route_as_response_with_status_code_set_to_value()", span="18-18"];
m0_449 [cluster="System.Action<T>.Invoke(T)", file="ContentNegotiationFixture.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m0_324 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_status_code_to_response_when_set_as_httpstatuscode()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_status_code_to_response_when_set_as_httpstatuscode()", span="477-477"];
m0_325 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_status_code_to_response_when_set_as_httpstatuscode()", file="ContentNegotiationFixture.cs", label="var browser = new Browser(with =>\r\n            {\r\n                with.ResponseProcessor<TestProcessor>();\r\n\r\n                with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithStatusCode(HttpStatusCode.InsufficientStorage);\r\n                    }));\r\n                }));\r\n            })", span="480-491"];
m0_326 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_status_code_to_response_when_set_as_httpstatuscode()", file="ContentNegotiationFixture.cs", label="var response = browser.Get(''/'', with =>\r\n            {\r\n                with.Accept(''test/test'', 0.9m);\r\n            })", span="494-497"];
m0_327 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_status_code_to_response_when_set_as_httpstatuscode()", file="ContentNegotiationFixture.cs", label="Assert.Equal(HttpStatusCode.InsufficientStorage, response.StatusCode)", span="500-500"];
m0_328 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_status_code_to_response_when_set_as_httpstatuscode()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_status_code_to_response_when_set_as_httpstatuscode()", span="477-477"];
m0_374 [cluster="Unk.ToString", file="ContentNegotiationFixture.cs", label="Entry Unk.ToString", span=""];
m0_71 [cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", file="ContentNegotiationFixture.cs", label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0"];
m0_373 [cluster="Unk.NotNull", file="ContentNegotiationFixture.cs", label="Entry Unk.NotNull", span=""];
m0_7 [cluster="Nancy.Testing.Browser.Browser(System.Action<Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator>)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Testing.Browser.Browser(System.Action<Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator>)", span="26-26"];
m0_140 [cluster="Nancy.Responses.Negotiation.Negotiator.WithContentType(string)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Responses.Negotiation.Negotiator.WithContentType(string)", span="56-56"];
m0_52 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_action_value_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_action_value_as_response_with_content_set_as_value()", span="81-81"];
m0_54 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_action_value_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs", label="var browser = new Browser(with =>\r\n            {\r\n                with.Module(module);\r\n            })", span="101-104"];
m0_55 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_action_value_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs", label="var response = browser.Get(''/action'')", span="107-107"];
m0_56 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_action_value_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs", label="Assert.Equal(''Hiya Nancy!'', response.Body.AsString())", span="110-110"];
m0_53 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_action_value_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs", label="var module = new ConfigurableNancyModule(with =>\r\n            {\r\n                with.Get(''/action'', (x, m) =>\r\n                {\r\n                    Action<Stream> result = stream =>\r\n                    {\r\n                        var wrapper = new UnclosableStreamWrapper(stream);\r\n                        using (var writer = new StreamWriter(wrapper))\r\n                        {\r\n                            writer.Write(''Hiya Nancy!'');\r\n                        }\r\n                    };\r\n\r\n                    return result;\r\n                });\r\n            })", span="84-99"];
m0_57 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_action_value_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_action_value_as_response_with_content_set_as_value()", span="81-81"];
m0_183 [cluster="Nancy.Responses.Negotiation.Negotiator.WithAllowedMediaRange(Nancy.Responses.Negotiation.MediaRange)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Responses.Negotiation.Negotiator.WithAllowedMediaRange(Nancy.Responses.Negotiation.MediaRange)", span="113-113"];
m0_214 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_response_with_notacceptable_when_route_does_not_allow_any_of_the_accepted_formats()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_response_with_notacceptable_when_route_does_not_allow_any_of_the_accepted_formats()", span="321-321"];
m0_215 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_response_with_notacceptable_when_route_does_not_allow_any_of_the_accepted_formats()", file="ContentNegotiationFixture.cs", label="var browser = new Browser(with =>\r\n            {\r\n                with.ResponseProcessor<TestProcessor>();\r\n\r\n                with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/test'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithAllowedMediaRange(''application/xml'');\r\n                    }));\r\n                }));\r\n            })", span="324-335"];
m0_216 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_response_with_notacceptable_when_route_does_not_allow_any_of_the_accepted_formats()", file="ContentNegotiationFixture.cs", label="var response = browser.Get(''/test'', with =>\r\n            {\r\n                with.Accept(''foo/bar'', 0.9m);\r\n            })", span="338-341"];
m0_217 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_response_with_notacceptable_when_route_does_not_allow_any_of_the_accepted_formats()", file="ContentNegotiationFixture.cs", label="Assert.Equal(HttpStatusCode.NotAcceptable, response.StatusCode)", span="344-344"];
m0_218 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_response_with_notacceptable_when_route_does_not_allow_any_of_the_accepted_formats()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_response_with_notacceptable_when_route_does_not_allow_any_of_the_accepted_formats()", span="321-321"];
m0_37 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_httpstatuscode_value_from_get_route_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_httpstatuscode_value_from_get_route_as_response_with_content_set_as_value()", span="60-60"];
m0_39 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_httpstatuscode_value_from_get_route_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs", label="var browser = new Browser(with =>\r\n            {\r\n                with.Module(module);\r\n            })", span="68-71"];
m0_40 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_httpstatuscode_value_from_get_route_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs", label="var response = browser.Get(''/httpstatuscode'')", span="74-74"];
m0_41 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_httpstatuscode_value_from_get_route_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs", label="Assert.Equal(HttpStatusCode.Accepted, response.StatusCode)", span="77-77"];
m0_38 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_httpstatuscode_value_from_get_route_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs", label="var module = new ConfigurableNancyModule(with =>\r\n            {\r\n                with.Get(''/httpstatuscode'', (x, m) => HttpStatusCode.Accepted);\r\n            })", span="63-66"];
m0_42 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_httpstatuscode_value_from_get_route_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_httpstatuscode_value_from_get_route_as_response_with_content_set_as_value()", span="60-60"];
m0_109 [cluster="ConfigurableNancyModule.cstr", file="ContentNegotiationFixture.cs", label="Entry ConfigurableNancyModule.cstr", span=""];
m0_94 [cluster="Nancy.NancyContext.NancyContext()", file="ContentNegotiationFixture.cs", label="Entry Nancy.NancyContext.NancyContext()", span="25-25"];
m0_83 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="ContentNegotiationFixture.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m0_350 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="ContentNegotiationFixture.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m0_65 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="88-95"];
m0_111 [cluster="lambda expression", color=green, community=1, file="ContentNegotiationFixture.cs", label="with.Get(''/customStatus'', (x, m) =>\r\n                {\r\n                    var context =\r\n                        new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n                    var negotiator =\r\n                        new Negotiator(context);\r\n                    negotiator.WithStatusDescription(''The test is passing!'');\r\n\r\n                    return negotiator;\r\n                })", prediction=0, span="154-164"];
m0_123 [cluster="lambda expression", color=green, community=0, file="ContentNegotiationFixture.cs", label="with.Module(module)", prediction=1, span="171-171"];
m0_122 [cluster="lambda expression", color=green, community=0, file="ContentNegotiationFixture.cs", label="with.ResponseProcessor<TestProcessor>()", prediction=1, span="169-169"];
m0_110 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="152-165"];
m0_112 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="152-165"];
m0_114 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="154-164"];
m0_121 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="167-172"];
m0_124 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="167-172"];
m0_115 [cluster="lambda expression", color=green, community=1, file="ContentNegotiationFixture.cs", label="var context =\r\n                        new NancyContext { NegotiationContext = new NegotiationContext() }", prediction=3, span="156-157"];
m0_116 [cluster="lambda expression", color=green, community=1, file="ContentNegotiationFixture.cs", label="var negotiator =\r\n                        new Negotiator(context)", prediction=4, span="159-160"];
m0_117 [cluster="lambda expression", color=green, community=0, file="ContentNegotiationFixture.cs", label="negotiator.WithStatusDescription(''The test is passing!'')", prediction=5, span="161-161"];
m0_118 [cluster="lambda expression", color=green, community=0, file="ContentNegotiationFixture.cs", label="return negotiator;", prediction=4, span="163-163"];
m0_119 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="154-164"];
m0_18 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(module)", span="28-28"];
m0_35 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(module)", span="49-49"];
m0_50 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(module)", span="70-70"];
m0_74 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(module)", span="103-103"];
m0_100 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(module)", span="137-137"];
m0_143 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(module)", span="205-205"];
m0_152 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', (parameters, module) =>\r\n                    {\r\n                        var context =\r\n                            new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n                        var negotiator =\r\n                            new Negotiator(context);\r\n\r\n                        return negotiator;\r\n                    });\r\n                }))", span="223-235"];
m0_171 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', (parameters, module) =>\r\n                    {\r\n                        var context =\r\n                            new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n                        var negotiator =\r\n                            new Negotiator(context);\r\n\r\n                        negotiator.WithAllowedMediaRange(''application/xml'');\r\n                        negotiator.WithAllowedMediaRange(''text/html'');\r\n\r\n                        return negotiator;\r\n                    });\r\n                }))", span="253-268"];
m0_199 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/test'', (parameters, module) =>\r\n                    {\r\n                        var context =\r\n                            new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n                        var negotiator =\r\n                            new Negotiator(context);\r\n\r\n                        return negotiator;\r\n                    });\r\n                }))", span="292-304"];
m0_221 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/test'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithAllowedMediaRange(''application/xml'');\r\n                    }));\r\n                }))", span="328-334"];
m0_240 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithModel(''the model'');\r\n                        config.WithAllowedMediaRange(''test/test'');\r\n                    }));\r\n                }))", span="355-362"];
m0_260 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithModel(''the model'');\r\n                        config.WithAllowedMediaRange(''test/test'');\r\n                        config.WithMediaRangeModel(''test/test'', ''media model'');\r\n                    }));\r\n                }))", span="383-391"];
m0_282 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse());\r\n                }))", span="412-415"];
m0_300 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse());\r\n                }))", span="434-437"];
m0_312 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithStatusCode(507);\r\n                    }));\r\n                }))", span="457-463"];
m0_331 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithStatusCode(HttpStatusCode.InsufficientStorage);\r\n                    }));\r\n                }))", span="484-490"];
m0_354 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithCookie(negotiatedCookie);\r\n                    }));\r\n                }))", span="514-520"];
m0_378 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(new ConfigurableNancyModule(x => x.Get(''/FakeModuleInvalidViewName'', CreateNegotiatedResponse(neg => neg.WithView(''blahblahblah'')))))", span="540-540"];
m0_403 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/test'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithAllowedMediaRange(''application/xml'');\r\n                    }));\r\n                }))", span="565-571"];
m0_421 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse());\r\n                }))", span="595-598"];
m0_388 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="var response = browser.Get(\r\n                        ''/FakeModuleInvalidViewName'',\r\n                        with =>\r\n                            { with.Accept(''text/html'', 1.0m); })", span="546-549"];
m0_439 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="browser.Get(''/invalid-view-name'')", span="616-616"];
m0_99 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.ResponseProcessor<TestProcessor>()", span="135-135"];
m0_142 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.ResponseProcessor<TestProcessor>()", span="203-203"];
m0_151 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.ResponseProcessor<TestProcessor>()", span="221-221"];
m0_170 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.ResponseProcessor<TestProcessor>()", span="251-251"];
m0_198 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.ResponseProcessor<TestProcessor>()", span="290-290"];
m0_220 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.ResponseProcessor<TestProcessor>()", span="326-326"];
m0_239 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.ResponseProcessor<ModelProcessor>()", span="353-353"];
m0_259 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.ResponseProcessor<ModelProcessor>()", span="381-381"];
m0_311 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.ResponseProcessor<TestProcessor>()", span="455-455"];
m0_330 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.ResponseProcessor<TestProcessor>()", span="482-482"];
m0_353 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.ResponseProcessor<TestProcessor>()", span="512-512"];
m0_377 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.ResponseProcessor<ViewProcessor>()", span="538-538"];
m0_89 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="var context =\r\n                        new NancyContext { NegotiationContext = new NegotiationContext() }", span="122-123"];
m0_135 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="var context =\r\n                  new NancyContext { NegotiationContext = new NegotiationContext() }", span="190-191"];
m0_158 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="var context =\r\n                            new NancyContext { NegotiationContext = new NegotiationContext() }", span="227-228"];
m0_177 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="var context =\r\n                            new NancyContext { NegotiationContext = new NegotiationContext() }", span="257-258"];
m0_205 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="var context =\r\n                            new NancyContext { NegotiationContext = new NegotiationContext() }", span="296-297"];
m0_90 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="var negotiator =\r\n                        new Negotiator(context)", span="125-126"];
m0_136 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="var negotiator =\r\n                  new Negotiator(context)", span="193-194"];
m0_159 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="var negotiator =\r\n                            new Negotiator(context)", span="230-231"];
m0_178 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="var negotiator =\r\n                            new Negotiator(context)", span="260-261"];
m0_206 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="var negotiator =\r\n                            new Negotiator(context)", span="299-300"];
m0_444 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="var negotiator = new Negotiator(module.Context)", span="625-625"];
m0_281 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.ResponseProcessors(typeof(XmlProcessor), typeof(JsonProcessor), typeof(TestProcessor))", span="410-410"];
m0_299 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.ResponseProcessors(typeof(XmlProcessor), typeof(JsonProcessor), typeof(TestProcessor))", span="432-432"];
m0_402 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.ResponseProcessors(typeof(NullProcessor), typeof(TestProcessor))", span="563-563"];
m0_420 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.ResponseProcessors(typeof(XmlProcessor), typeof(JsonProcessor), typeof(TestProcessor))", span="593-593"];
m0_435 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module<NegotiationModule>()", span="614-614"];
m0_17 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="26-29"];
m0_19 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="26-29"];
m0_34 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="47-50"];
m0_36 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="47-50"];
m0_49 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="68-71"];
m0_51 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="68-71"];
m0_73 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="101-104"];
m0_75 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="101-104"];
m0_98 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="133-138"];
m0_101 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="133-138"];
m0_141 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="201-206"];
m0_144 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="201-206"];
m0_150 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="219-236"];
m0_153 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="219-236"];
m0_155 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="x.Get(''/'', (parameters, module) =>\r\n                    {\r\n                        var context =\r\n                            new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n                        var negotiator =\r\n                            new Negotiator(context);\r\n\r\n                        return negotiator;\r\n                    })", span="225-234"];
m0_169 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="249-269"];
m0_172 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="249-269"];
m0_174 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="x.Get(''/'', (parameters, module) =>\r\n                    {\r\n                        var context =\r\n                            new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n                        var negotiator =\r\n                            new Negotiator(context);\r\n\r\n                        negotiator.WithAllowedMediaRange(''application/xml'');\r\n                        negotiator.WithAllowedMediaRange(''text/html'');\r\n\r\n                        return negotiator;\r\n                    })", span="255-267"];
m0_197 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="288-305"];
m0_200 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="288-305"];
m0_202 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="x.Get(''/test'', (parameters, module) =>\r\n                    {\r\n                        var context =\r\n                            new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n                        var negotiator =\r\n                            new Negotiator(context);\r\n\r\n                        return negotiator;\r\n                    })", span="294-303"];
m0_219 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="324-335"];
m0_222 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="324-335"];
m0_224 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="x.Get(''/test'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithAllowedMediaRange(''application/xml'');\r\n                    }))", span="330-333"];
m0_238 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="351-363"];
m0_241 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="351-363"];
m0_243 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithModel(''the model'');\r\n                        config.WithAllowedMediaRange(''test/test'');\r\n                    }))", span="357-361"];
m0_258 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="379-392"];
m0_261 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="379-392"];
m0_263 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithModel(''the model'');\r\n                        config.WithAllowedMediaRange(''test/test'');\r\n                        config.WithMediaRangeModel(''test/test'', ''media model'');\r\n                    }))", span="385-390"];
m0_280 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="408-416"];
m0_283 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="408-416"];
m0_286 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="x.Get(''/'', CreateNegotiatedResponse())", span="414-414"];
m0_298 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="430-438"];
m0_301 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="430-438"];
m0_303 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="x.Get(''/'', CreateNegotiatedResponse())", span="436-436"];
m0_310 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="453-464"];
m0_313 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="453-464"];
m0_315 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithStatusCode(507);\r\n                    }))", span="459-462"];
m0_329 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="480-491"];
m0_332 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="480-491"];
m0_334 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithStatusCode(HttpStatusCode.InsufficientStorage);\r\n                    }))", span="486-489"];
m0_352 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="510-521"];
m0_355 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="510-521"];
m0_357 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithCookie(negotiatedCookie);\r\n                    }))", span="516-519"];
m0_376 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="536-541"];
m0_379 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="536-541"];
m0_381 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="x.Get(''/FakeModuleInvalidViewName'', CreateNegotiatedResponse(neg => neg.WithView(''blahblahblah'')))", span="540-540"];
m0_401 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="561-572"];
m0_404 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="561-572"];
m0_406 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="x.Get(''/test'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithAllowedMediaRange(''application/xml'');\r\n                    }))", span="567-570"];
m0_419 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="591-599"];
m0_422 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="591-599"];
m0_424 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="x.Get(''/'', CreateNegotiatedResponse())", span="597-597"];
m0_184 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="272-277"];
m0_209 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="308-313"];
m0_230 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="338-341"];
m0_250 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="366-369"];
m0_271 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="395-398"];
m0_288 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="419-419"];
m0_321 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="467-470"];
m0_340 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="494-497"];
m0_363 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="524-527"];
m0_387 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="544-550"];
m0_389 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="544-550"];
m0_390 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="548-549"];
m0_411 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="575-578"];
m0_426 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="602-605"];
m0_438 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="616-616"];
m0_440 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="616-616"];
m0_88 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="120-130"];
m0_134 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="188-198"];
m0_157 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="225-234"];
m0_176 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="255-267"];
m0_204 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="294-303"];
m0_91 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="negotiator.WithHeader(''foo'', ''bar'')", span="127-127"];
m0_92 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="return negotiator;", span="129-129"];
m0_137 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="negotiator.WithContentType(''text/xml'')", span="195-195"];
m0_138 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="return negotiator;", span="197-197"];
m0_160 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="return negotiator;", span="233-233"];
m0_179 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="negotiator.WithAllowedMediaRange(''application/xml'')", span="263-263"];
m0_180 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="negotiator.WithAllowedMediaRange(''text/html'')", span="264-264"];
m0_181 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="return negotiator;", span="266-266"];
m0_207 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="return negotiator;", span="302-302"];
m0_443 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="623-633"];
m0_445 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="action != null", span="627-627"];
m0_446 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="action.Invoke(negotiator)", span="629-629"];
m0_447 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="return negotiator;", span="632-632"];
m0_11 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Get(''/int'', (x,m) => 200)", span="23-23"];
m0_29 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Get(''/string'', (x, m) => ''hello'')", span="44-44"];
m0_44 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Get(''/httpstatuscode'', (x, m) => HttpStatusCode.Accepted)", span="65-65"];
m0_59 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Get(''/action'', (x, m) =>\r\n                {\r\n                    Action<Stream> result = stream =>\r\n                    {\r\n                        var wrapper = new UnclosableStreamWrapper(stream);\r\n                        using (var writer = new StreamWriter(wrapper))\r\n                        {\r\n                            writer.Write(''Hiya Nancy!'');\r\n                        }\r\n                    };\r\n\r\n                    return result;\r\n                })", span="86-98"];
m0_86 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Get(''/headers'', (x, m) =>\r\n                {\r\n                    var context =\r\n                        new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n                    var negotiator =\r\n                        new Negotiator(context);\r\n                    negotiator.WithHeader(''foo'', ''bar'');\r\n\r\n                    return negotiator;\r\n                })", span="120-130"];
m0_132 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Get(''/headers'', (x, m) =>\r\n            {\r\n              var context =\r\n                  new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n              var negotiator =\r\n                  new Negotiator(context);\r\n              negotiator.WithContentType(''text/xml'');\r\n\r\n              return negotiator;\r\n            })", span="188-198"];
m0_360 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="config.WithCookie(negotiatedCookie)", span="518-518"];
m0_427 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Header(''Accept'', header)", span="604-604"];
m0_434 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="614-614"];
m0_436 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="614-614"];
m0_154 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="223-235"];
m0_156 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="223-235"];
m0_173 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="253-268"];
m0_175 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="253-268"];
m0_201 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="292-304"];
m0_203 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="292-304"];
m0_223 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="328-334"];
m0_225 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="328-334"];
m0_227 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="330-333"];
m0_242 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="355-362"];
m0_244 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="355-362"];
m0_245 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="357-361"];
m0_262 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="383-391"];
m0_264 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="383-391"];
m0_265 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="385-390"];
m0_285 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="412-415"];
m0_287 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="412-415"];
m0_302 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="434-437"];
m0_304 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="434-437"];
m0_314 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="457-463"];
m0_316 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="457-463"];
m0_317 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="459-462"];
m0_333 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="484-490"];
m0_335 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="484-490"];
m0_336 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="486-489"];
m0_356 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="514-520"];
m0_358 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="514-520"];
m0_359 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="516-519"];
m0_380 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="540-540"];
m0_382 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="540-540"];
m0_383 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="540-540"];
m0_405 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="565-571"];
m0_407 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="565-571"];
m0_408 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="567-570"];
m0_423 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="595-598"];
m0_425 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="595-598"];
m0_188 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="272-277"];
m0_185 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Header(''User-Agent'', ''Mozilla/5.0 (Windows; U; Windows NT 5.1; ru-RU) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4'')", span="274-274"];
m0_186 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Accept(''application/xml'', 0.9m)", span="275-275"];
m0_187 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Accept(''text/html'', 0.9m)", span="276-276"];
m0_213 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="308-313"];
m0_210 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Header(''User-Agent'', ''Mozilla/5.0 (Windows; U; Windows NT 5.1; ru-RU) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4'')", span="310-310"];
m0_211 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Accept(''application/xml'', 0.9m)", span="311-311"];
m0_212 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Accept(''text/html'', 0.9m)", span="312-312"];
m0_232 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="338-341"];
m0_231 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Accept(''foo/bar'', 0.9m)", span="340-340"];
m0_252 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="366-369"];
m0_251 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Accept(''test/test'', 0.9m)", span="368-368"];
m0_273 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="395-398"];
m0_272 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Accept(''test/test'', 0.9m)", span="397-397"];
m0_290 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="419-419"];
m0_289 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Header(''Accept'', ''application/json'')", span="419-419"];
m0_323 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="467-470"];
m0_322 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Accept(''test/test'', 0.9m)", span="469-469"];
m0_342 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="494-497"];
m0_341 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Accept(''test/test'', 0.9m)", span="496-496"];
m0_365 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="524-527"];
m0_364 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Accept(''test/test'', 0.9m)", span="526-526"];
m0_392 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="548-549"];
m0_391 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Accept(''text/html'', 1.0m)", span="549-549"];
m0_413 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="575-578"];
m0_412 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Accept(''application/xml'', 0.9m)", span="577-577"];
m0_428 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="602-605"];
m0_93 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="120-130"];
m0_139 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="188-198"];
m0_161 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="225-234"];
m0_182 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="255-267"];
m0_208 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="294-303"];
m0_448 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="623-633"];
m0_10 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="21-24"];
m0_12 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="21-24"];
m0_14 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="23-23"];
m0_28 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="42-45"];
m0_30 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="42-45"];
m0_31 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="44-44"];
m0_43 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="63-66"];
m0_45 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="63-66"];
m0_46 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="65-65"];
m0_58 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="84-99"];
m0_60 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="84-99"];
m0_61 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="86-98"];
m0_85 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="118-131"];
m0_87 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="118-131"];
m0_131 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="186-199"];
m0_133 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="186-199"];
m0_361 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="516-519"];
m0_229 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="330-333"];
m0_228 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="config.WithAllowedMediaRange(''application/xml'')", span="332-332"];
m0_248 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="357-361"];
m0_246 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="config.WithModel(''the model'')", span="359-359"];
m0_247 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="config.WithAllowedMediaRange(''test/test'')", span="360-360"];
m0_269 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="385-390"];
m0_266 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="config.WithModel(''the model'')", span="387-387"];
m0_267 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="config.WithAllowedMediaRange(''test/test'')", span="388-388"];
m0_268 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="config.WithMediaRangeModel(''test/test'', ''media model'')", span="389-389"];
m0_319 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="459-462"];
m0_318 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="config.WithStatusCode(507)", span="461-461"];
m0_338 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="486-489"];
m0_337 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="config.WithStatusCode(HttpStatusCode.InsufficientStorage)", span="488-488"];
m0_385 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="540-540"];
m0_384 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="neg.WithView(''blahblahblah'')", span="540-540"];
m0_410 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="567-570"];
m0_409 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="config.WithAllowedMediaRange(''application/xml'')", span="569-569"];
m0_16 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="23-23"];
m0_15 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label=200, span="23-23"];
m0_33 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="44-44"];
m0_32 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="''hello''", span="44-44"];
m0_48 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="65-65"];
m0_47 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="HttpStatusCode.Accepted", span="65-65"];
m0_64 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="86-98"];
m0_62 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Action<Stream> result = stream =>\r\n                    {\r\n                        var wrapper = new UnclosableStreamWrapper(stream);\r\n                        using (var writer = new StreamWriter(wrapper))\r\n                        {\r\n                            writer.Write(''Hiya Nancy!'');\r\n                        }\r\n                    }", span="88-95"];
m0_63 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="return result;", span="97-97"];
m0_66 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="var wrapper = new UnclosableStreamWrapper(stream)", span="90-90"];
m0_67 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="var writer = new StreamWriter(wrapper)", span="91-91"];
m0_68 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="writer.Write(''Hiya Nancy!'')", span="93-93"];
m0_69 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="88-95"];
m0_21 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_string_value_from_get_route_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_string_value_from_get_route_as_response_with_content_set_as_value()", span="39-39"];
m0_23 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_string_value_from_get_route_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs", label="var browser = new Browser(with =>\r\n            {\r\n                with.Module(module);\r\n            })", span="47-50"];
m0_24 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_string_value_from_get_route_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs", label="var response = browser.Get(''/string'')", span="53-53"];
m0_25 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_string_value_from_get_route_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs", label="Assert.Equal(''hello'', response.Body.AsString())", span="56-56"];
m0_22 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_string_value_from_get_route_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs", label="var module = new ConfigurableNancyModule(with =>\r\n            {\r\n                with.Get(''/string'', (x, m) => ''hello'');\r\n            })", span="42-45"];
m0_26 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_string_value_from_get_route_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_string_value_from_get_route_as_response_with_content_set_as_value()", span="39-39"];
m0_270 [cluster="Nancy.Responses.Negotiation.Negotiator.WithMediaRangeModel(Nancy.Responses.Negotiation.MediaRange, object)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Responses.Negotiation.Negotiator.WithMediaRangeModel(Nancy.Responses.Negotiation.MediaRange, object)", span="163-163"];
m0_375 [cluster="Unk.Contains", file="ContentNegotiationFixture.cs", label="Entry Unk.Contains", span=""];
m0_96 [cluster="Nancy.Responses.Negotiation.Negotiator.Negotiator(Nancy.NancyContext)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Responses.Negotiation.Negotiator.Negotiator(Nancy.NancyContext)", span="13-13"];
m0_70 [cluster="Nancy.IO.UnclosableStreamWrapper.UnclosableStreamWrapper(System.IO.Stream)", file="ContentNegotiationFixture.cs", label="Entry Nancy.IO.UnclosableStreamWrapper.UnclosableStreamWrapper(System.IO.Stream)", span="22-22"];
m0_372 [cluster="Unk.Exception", file="ContentNegotiationFixture.cs", label="Entry Unk.Exception", span=""];
m0_72 [cluster="System.IO.StreamWriter.Write(string)", file="ContentNegotiationFixture.cs", label="Entry System.IO.StreamWriter.Write(string)", span="0-0"];
m0_349 [cluster="Nancy.Cookies.NancyCookie.NancyCookie(string, string)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Cookies.NancyCookie.NancyCookie(string, string)", span="10-10"];
m0_414 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_not_throw_exception_because_of_uncommon_accept_header(string)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_not_throw_exception_because_of_uncommon_accept_header(string)", span="588-588"];
m0_415 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_not_throw_exception_because_of_uncommon_accept_header(string)", file="ContentNegotiationFixture.cs", label="var browser = new Browser(with =>\r\n            {\r\n                with.ResponseProcessors(typeof(XmlProcessor), typeof(JsonProcessor), typeof(TestProcessor));\r\n\r\n                with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse());\r\n                }));\r\n            })", span="591-599"];
m0_416 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_not_throw_exception_because_of_uncommon_accept_header(string)", file="ContentNegotiationFixture.cs", label="var response = browser.Get(''/'', with =>\r\n            {\r\n                with.Header(''Accept'', header);\r\n            })", span="602-605"];
m0_417 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_not_throw_exception_because_of_uncommon_accept_header(string)", file="ContentNegotiationFixture.cs", label="Assert.Equal((HttpStatusCode)200, response.StatusCode)", span="608-608"];
m0_418 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_not_throw_exception_because_of_uncommon_accept_header(string)", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_not_throw_exception_because_of_uncommon_accept_header(string)", span="588-588"];
m0_189 [cluster="Nancy.Testing.BrowserContext.Header(string, string)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Testing.BrowserContext.Header(string, string)", span="107-107"];
m0_84 [cluster="Unk.True", file="ContentNegotiationFixture.cs", label="Entry Unk.True", span=""];
m0_113 [cluster="Unk.Get", file="ContentNegotiationFixture.cs", label="Entry Unk.Get", span=""];
m0_102 [cluster="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.ResponseProcessor<T>()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.ResponseProcessor<T>()", span="1212-1212"];
m0_274 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_vary_accept_header()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_vary_accept_header()", span="405-405"];
m0_275 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_vary_accept_header()", file="ContentNegotiationFixture.cs", label="var browser = new Browser(with =>\r\n            {\r\n                with.ResponseProcessors(typeof(XmlProcessor), typeof(JsonProcessor), typeof(TestProcessor));\r\n\r\n                with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse());\r\n                }));\r\n            })", span="408-416"];
m0_276 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_vary_accept_header()", file="ContentNegotiationFixture.cs", label="var response = browser.Get(''/'', with => with.Header(''Accept'', ''application/json''))", span="419-419"];
m0_277 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_vary_accept_header()", file="ContentNegotiationFixture.cs", label="Assert.True(response.Headers.ContainsKey(''Vary''))", span="422-422"];
m0_278 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_vary_accept_header()", file="ContentNegotiationFixture.cs", label="Assert.True(response.Headers[''Vary''].Contains(''Accept''))", span="423-423"];
m0_279 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_vary_accept_header()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_vary_accept_header()", span="405-405"];
m0_103 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_status_description_on_response()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_status_description_on_response()", span="149-149"];
m0_104 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_status_description_on_response()", color=green, community=1, file="ContentNegotiationFixture.cs", label="var module = new ConfigurableNancyModule(with =>\r\n            {\r\n                with.Get(''/customStatus'', (x, m) =>\r\n                {\r\n                    var context =\r\n                        new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n                    var negotiator =\r\n                        new Negotiator(context);\r\n                    negotiator.WithStatusDescription(''The test is passing!'');\r\n\r\n                    return negotiator;\r\n                });\r\n            })", prediction=1, span="152-165"];
m0_105 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_status_description_on_response()", color=green, community=1, file="ContentNegotiationFixture.cs", label="var brower = new Browser(with =>\r\n            {\r\n                with.ResponseProcessor<TestProcessor>();\r\n\r\n                with.Module(module);\r\n            })", prediction=1, span="167-172"];
m0_106 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_status_description_on_response()", color=green, community=0, file="ContentNegotiationFixture.cs", label="var response = brower.Get(''/customStatus'')", prediction=9, span="175-175"];
m0_107 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_status_description_on_response()", color=green, community=0, file="ContentNegotiationFixture.cs", label="Assert.Equal(''The test is passing!'', response.StatusDescription)", prediction=10, span="178-178"];
m0_108 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_status_description_on_response()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_status_description_on_response()", span="149-149"];
m0_343 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_cookies_to_response()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_cookies_to_response()", span="504-504"];
m0_345 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_cookies_to_response()", file="ContentNegotiationFixture.cs", label="var browser = new Browser(with =>\r\n            {\r\n                with.ResponseProcessor<TestProcessor>();\r\n\r\n                with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithCookie(negotiatedCookie);\r\n                    }));\r\n                }));\r\n            })", span="510-521"];
m0_346 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_cookies_to_response()", file="ContentNegotiationFixture.cs", label="var response = browser.Get(''/'', with =>\r\n            {\r\n                with.Accept(''test/test'', 0.9m);\r\n            })", span="524-527"];
m0_344 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_cookies_to_response()", file="ContentNegotiationFixture.cs", label="var negotiatedCookie = \r\n                new NancyCookie(''test'', ''test'')", span="507-508"];
m0_347 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_cookies_to_response()", file="ContentNegotiationFixture.cs", label="Assert.Same(negotiatedCookie, response.Cookies.First())", span="530-530"];
m0_348 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_cookies_to_response()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_cookies_to_response()", span="504-504"];
m0_13 [cluster="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator.Get(string, System.Func<dynamic, Nancy.NancyModule, dynamic>)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator.Get(string, System.Func<dynamic, Nancy.NancyModule, dynamic>)", span="133-133"];
m0_125 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_content_headers_to_response()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_content_headers_to_response()", span="182-182"];
m0_127 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_content_headers_to_response()", file="ContentNegotiationFixture.cs", label="var brower = new Browser(with =>\r\n          {\r\n            with.ResponseProcessor<TestProcessor>();\r\n\r\n            with.Module(module);\r\n          })", span="201-206"];
m0_128 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_content_headers_to_response()", file="ContentNegotiationFixture.cs", label="var response = brower.Get(''/headers'')", span="209-209"];
m0_129 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_content_headers_to_response()", file="ContentNegotiationFixture.cs", label="Assert.Equal(''text/xml'', response.Context.Response.ContentType)", span="212-212"];
m0_126 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_content_headers_to_response()", file="ContentNegotiationFixture.cs", label="var module = new ConfigurableNancyModule(with =>\r\n          {\r\n            with.Get(''/headers'', (x, m) =>\r\n            {\r\n              var context =\r\n                  new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n              var negotiator =\r\n                  new Negotiator(context);\r\n              negotiator.WithContentType(''text/xml'');\r\n\r\n              return negotiator;\r\n            });\r\n          })", span="186-199"];
m0_130 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_content_headers_to_response()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_content_headers_to_response()", span="182-182"];
m0_253 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_media_range_specific_model_when_declared()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_media_range_specific_model_when_declared()", span="376-376"];
m0_254 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_media_range_specific_model_when_declared()", file="ContentNegotiationFixture.cs", label="var browser = new Browser(with =>\r\n            {\r\n                with.ResponseProcessor<ModelProcessor>();\r\n\r\n                with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithModel(''the model'');\r\n                        config.WithAllowedMediaRange(''test/test'');\r\n                        config.WithMediaRangeModel(''test/test'', ''media model'');\r\n                    }));\r\n                }));\r\n            })", span="379-392"];
m0_255 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_media_range_specific_model_when_declared()", file="ContentNegotiationFixture.cs", label="var response = browser.Get(''/'', with =>\r\n            {\r\n                with.Accept(''test/test'', 0.9m);\r\n            })", span="395-398"];
m0_256 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_media_range_specific_model_when_declared()", file="ContentNegotiationFixture.cs", label="Assert.Equal(''media model'', response.Body.AsString())", span="401-401"];
m0_257 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_media_range_specific_model_when_declared()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_media_range_specific_model_when_declared()", span="376-376"];
m0_249 [cluster="Nancy.Responses.Negotiation.Negotiator.WithModel(dynamic)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Responses.Negotiation.Negotiator.WithModel(dynamic)", span="135-135"];
m0_76 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_headers_to_response()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_headers_to_response()", span="114-114"];
m0_78 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_headers_to_response()", file="ContentNegotiationFixture.cs", label="var brower = new Browser(with =>\r\n            {\r\n                with.ResponseProcessor<TestProcessor>();\r\n\r\n                with.Module(module);\r\n            })", span="133-138"];
m0_79 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_headers_to_response()", file="ContentNegotiationFixture.cs", label="var response = brower.Get(''/headers'')", span="141-141"];
m0_81 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_headers_to_response()", file="ContentNegotiationFixture.cs", label="Assert.Equal(''bar'', response.Headers[''foo''])", span="145-145"];
m0_77 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_headers_to_response()", file="ContentNegotiationFixture.cs", label="var module = new ConfigurableNancyModule(with =>\r\n            {\r\n                with.Get(''/headers'', (x, m) =>\r\n                {\r\n                    var context =\r\n                        new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n                    var negotiator =\r\n                        new Negotiator(context);\r\n                    negotiator.WithHeader(''foo'', ''bar'');\r\n\r\n                    return negotiator;\r\n                });\r\n            })", span="118-131"];
m0_80 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_headers_to_response()", file="ContentNegotiationFixture.cs", label="Assert.True(response.Headers.ContainsKey(''foo''))", span="144-144"];
m0_82 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_headers_to_response()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_headers_to_response()", span="114-114"];
m0_362 [cluster="Nancy.Responses.Negotiation.Negotiator.WithCookie(Nancy.Cookies.INancyCookie)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Responses.Negotiation.Negotiator.WithCookie(Nancy.Cookies.INancyCookie)", span="16-16"];
m0_486 [file="ContentNegotiationFixture.cs", label=module, span=""];
m0_481 [file="ContentNegotiationFixture.cs", label=module, span=""];
m0_482 [file="ContentNegotiationFixture.cs", label=module, span=""];
m0_483 [file="ContentNegotiationFixture.cs", label=module, span=""];
m0_484 [file="ContentNegotiationFixture.cs", label=module, span=""];
m0_485 [file="ContentNegotiationFixture.cs", label=module, span=""];
m0_487 [file="ContentNegotiationFixture.cs", label=module, span=""];
m0_488 [file="ContentNegotiationFixture.cs", label=negotiatedCookie, span=""];
m0_489 [file="ContentNegotiationFixture.cs", label=browser, span=""];
m0_491 [file="ContentNegotiationFixture.cs", label=browser, span=""];
m0_492 [file="ContentNegotiationFixture.cs", label="System.Action<Nancy.Responses.Negotiation.Negotiator>", span=""];
m0_490 [file="ContentNegotiationFixture.cs", label=string, span=""];
m1_10 [cluster="string.IsNullOrEmpty(string)", file="NegotiationContext.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m1_11 [cluster="System.ArgumentException.ArgumentException(string, string)", file="NegotiationContext.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m1_0 [cluster="Nancy.Routing.RouteDescription.RouteDescription(string, string, string, System.Func<Nancy.NancyContext, bool>)", file="NegotiationContext.cs", label="Entry Nancy.Routing.RouteDescription.RouteDescription(string, string, string, System.Func<Nancy.NancyContext, bool>)", span="21-21"];
m1_1 [cluster="Nancy.Routing.RouteDescription.RouteDescription(string, string, string, System.Func<Nancy.NancyContext, bool>)", file="NegotiationContext.cs", label="string.IsNullOrEmpty(method)", span="23-23"];
m1_3 [cluster="Nancy.Routing.RouteDescription.RouteDescription(string, string, string, System.Func<Nancy.NancyContext, bool>)", file="NegotiationContext.cs", label="string.IsNullOrEmpty(path)", span="28-28"];
m1_5 [cluster="Nancy.Routing.RouteDescription.RouteDescription(string, string, string, System.Func<Nancy.NancyContext, bool>)", file="NegotiationContext.cs", label="this.Name = name ?? string.Empty", span="33-33"];
m1_6 [cluster="Nancy.Routing.RouteDescription.RouteDescription(string, string, string, System.Func<Nancy.NancyContext, bool>)", file="NegotiationContext.cs", label="this.Method = method", span="34-34"];
m1_7 [cluster="Nancy.Routing.RouteDescription.RouteDescription(string, string, string, System.Func<Nancy.NancyContext, bool>)", file="NegotiationContext.cs", label="this.Path = path", span="35-35"];
m1_8 [cluster="Nancy.Routing.RouteDescription.RouteDescription(string, string, string, System.Func<Nancy.NancyContext, bool>)", file="NegotiationContext.cs", label="this.Condition = condition", span="36-36"];
m1_2 [cluster="Nancy.Routing.RouteDescription.RouteDescription(string, string, string, System.Func<Nancy.NancyContext, bool>)", file="NegotiationContext.cs", label="throw new ArgumentException(''Method must be specified'', ''method'');", span="25-25"];
m1_4 [cluster="Nancy.Routing.RouteDescription.RouteDescription(string, string, string, System.Func<Nancy.NancyContext, bool>)", file="NegotiationContext.cs", label="throw new ArgumentException(''Path must be specified'', ''path'');", span="30-30"];
m1_9 [cluster="Nancy.Routing.RouteDescription.RouteDescription(string, string, string, System.Func<Nancy.NancyContext, bool>)", file="NegotiationContext.cs", label="Exit Nancy.Routing.RouteDescription.RouteDescription(string, string, string, System.Func<Nancy.NancyContext, bool>)", span="21-21"];
m1_12 [file="NegotiationContext.cs", label="Nancy.Routing.RouteDescription", span=""];
m2_6 [cluster="Unk.First", file="NegotiatorExtensions.cs", label="Entry Unk.First", span=""];
m2_7 [cluster="Nancy.Tests.Fakes.FakeRoute.FakeRoute()", file="NegotiatorExtensions.cs", label="Entry Nancy.Tests.Fakes.FakeRoute.FakeRoute()", span="8-8"];
m2_0 [cluster="Nancy.Tests.Fakes.FakeRouteResolver.GetRoute(Nancy.IRequest, System.Collections.Generic.IEnumerable<Nancy.ModuleMeta>, Nancy.INancyApplication)", file="NegotiatorExtensions.cs", label="Entry Nancy.Tests.Fakes.FakeRouteResolver.GetRoute(Nancy.IRequest, System.Collections.Generic.IEnumerable<Nancy.ModuleMeta>, Nancy.INancyApplication)", span="8-8"];
m2_1 [cluster="Nancy.Tests.Fakes.FakeRouteResolver.GetRoute(Nancy.IRequest, System.Collections.Generic.IEnumerable<Nancy.ModuleMeta>, Nancy.INancyApplication)", file="NegotiatorExtensions.cs", label="var description = (from m in meta\r\n                               from d in m.RouteDescriptions\r\n                               where d.ModulePath + d.Path == request.Uri\r\n                               select d).First()", span="12-15"];
m2_2 [cluster="Nancy.Tests.Fakes.FakeRouteResolver.GetRoute(Nancy.IRequest, System.Collections.Generic.IEnumerable<Nancy.ModuleMeta>, Nancy.INancyApplication)", file="NegotiatorExtensions.cs", label="this.ModulePath = description.ModulePath", span="17-17"];
m2_3 [cluster="Nancy.Tests.Fakes.FakeRouteResolver.GetRoute(Nancy.IRequest, System.Collections.Generic.IEnumerable<Nancy.ModuleMeta>, Nancy.INancyApplication)", file="NegotiatorExtensions.cs", label="this.Path = description.Path", span="18-18"];
m2_4 [cluster="Nancy.Tests.Fakes.FakeRouteResolver.GetRoute(Nancy.IRequest, System.Collections.Generic.IEnumerable<Nancy.ModuleMeta>, Nancy.INancyApplication)", file="NegotiatorExtensions.cs", label="return new FakeRoute();", span="20-20"];
m2_5 [cluster="Nancy.Tests.Fakes.FakeRouteResolver.GetRoute(Nancy.IRequest, System.Collections.Generic.IEnumerable<Nancy.ModuleMeta>, Nancy.INancyApplication)", file="NegotiatorExtensions.cs", label="Exit Nancy.Tests.Fakes.FakeRouteResolver.GetRoute(Nancy.IRequest, System.Collections.Generic.IEnumerable<Nancy.ModuleMeta>, Nancy.INancyApplication)", span="8-8"];
m2_8 [file="NegotiatorExtensions.cs", label="Nancy.Tests.Fakes.FakeRouteResolver", span=""];
n2 -> n4  [color=darkseagreen4, key=1, label=wrappedContext, style=dashed];
m0_306 -> m0_311  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m0_306 -> m0_312  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m0_307 -> m0_321  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_226 -> m0_445  [color=darkseagreen4, key=1, label="System.Action<Nancy.Responses.Negotiation.Negotiator>", style=dashed];
m0_226 -> m0_446  [color=darkseagreen4, key=1, label="System.Action<Nancy.Responses.Negotiation.Negotiator>", style=dashed];
m0_163 -> m0_170  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m0_164 -> m0_184  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_164 -> m0_166  [color=darkseagreen4, key=1, label=response, style=dashed];
m0_192 -> m0_198  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m0_193 -> m0_209  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_193 -> m0_195  [color=darkseagreen4, key=1, label=response, style=dashed];
m0_292 -> m0_299  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m0_292 -> m0_300  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m0_293 -> m0_295  [color=darkseagreen4, key=1, label=response, style=dashed];
m0_293 -> m0_296  [color=darkseagreen4, key=1, label=response, style=dashed];
m0_234 -> m0_239  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m0_234 -> m0_240  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m0_235 -> m0_250  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_394 -> m0_402  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m0_394 -> m0_403  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m0_395 -> m0_411  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_430 -> m0_435  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m0_430 -> m0_439  [color=darkseagreen4, key=1, label=browser, style=dashed];
m0_431 -> m0_438  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_146 -> m0_151  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m0_367 -> m0_377  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m0_367 -> m0_378  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m0_368 -> m0_387  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_368 -> m0_370  [color=darkseagreen4, key=1, label=result, style=dashed];
m0_2 -> m0_18  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m0_1 -> m0_18  [color=darkseagreen4, key=1, label=module, style=dashed];
m0_1 -> m0_11  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator", style=dashed];
m0_325 -> m0_330  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m0_325 -> m0_331  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m0_326 -> m0_340  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_54 -> m0_74  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m0_53 -> m0_74  [color=darkseagreen4, key=1, label=module, style=dashed];
m0_215 -> m0_220  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m0_215 -> m0_221  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m0_216 -> m0_230  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_39 -> m0_50  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m0_38 -> m0_50  [color=darkseagreen4, key=1, label=module, style=dashed];
m0_38 -> m0_44  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator", style=dashed];
m0_111 -> m0_114  [color=green, key=1, label="lambda expression", style=dashed];
m0_121 -> m0_123  [color=green, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m0_116 -> m0_118  [color=green, key=1, label=negotiator, style=dashed];
m0_221 -> m0_224  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator", style=dashed];
m0_240 -> m0_243  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator", style=dashed];
m0_260 -> m0_263  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator", style=dashed];
m0_282 -> m0_286  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator", style=dashed];
m0_300 -> m0_303  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator", style=dashed];
m0_312 -> m0_315  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator", style=dashed];
m0_331 -> m0_334  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator", style=dashed];
m0_354 -> m0_357  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator", style=dashed];
m0_378 -> m0_381  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator", style=dashed];
m0_403 -> m0_406  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator", style=dashed];
m0_421 -> m0_424  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator", style=dashed];
m0_388 -> m0_390  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_90 -> m0_92  [color=darkseagreen4, key=1, label=negotiator, style=dashed];
m0_136 -> m0_138  [color=darkseagreen4, key=1, label=negotiator, style=dashed];
m0_178 -> m0_180  [color=darkseagreen4, key=1, label=negotiator, style=dashed];
m0_178 -> m0_181  [color=darkseagreen4, key=1, label=negotiator, style=dashed];
m0_444 -> m0_446  [color=darkseagreen4, key=1, label=negotiator, style=dashed];
m0_444 -> m0_447  [color=darkseagreen4, key=1, label=negotiator, style=dashed];
m0_98 -> m0_100  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m0_141 -> m0_143  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m0_155 -> m0_157  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_174 -> m0_176  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_202 -> m0_204  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_219 -> m0_221  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m0_224 -> m0_227  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_238 -> m0_240  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m0_243 -> m0_245  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_258 -> m0_260  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m0_263 -> m0_265  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_280 -> m0_282  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m0_298 -> m0_300  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m0_310 -> m0_312  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m0_315 -> m0_317  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_329 -> m0_331  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m0_334 -> m0_336  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_352 -> m0_354  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m0_357 -> m0_359  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_376 -> m0_378  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m0_381 -> m0_383  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_401 -> m0_403  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m0_406 -> m0_408  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_419 -> m0_421  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m0_184 -> m0_186  [color=darkseagreen4, key=1, label="Nancy.Testing.BrowserContext", style=dashed];
m0_184 -> m0_187  [color=darkseagreen4, key=1, label="Nancy.Testing.BrowserContext", style=dashed];
m0_209 -> m0_211  [color=darkseagreen4, key=1, label="Nancy.Testing.BrowserContext", style=dashed];
m0_209 -> m0_212  [color=darkseagreen4, key=1, label="Nancy.Testing.BrowserContext", style=dashed];
m0_11 -> m0_14  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_29 -> m0_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_44 -> m0_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_59 -> m0_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_86 -> m0_88  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_132 -> m0_134  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_245 -> m0_247  [color=darkseagreen4, key=1, label="Nancy.Responses.Negotiation.Negotiator", style=dashed];
m0_265 -> m0_267  [color=darkseagreen4, key=1, label="Nancy.Responses.Negotiation.Negotiator", style=dashed];
m0_265 -> m0_268  [color=darkseagreen4, key=1, label="Nancy.Responses.Negotiation.Negotiator", style=dashed];
m0_23 -> m0_35  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m0_22 -> m0_35  [color=darkseagreen4, key=1, label=module, style=dashed];
m0_22 -> m0_29  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator", style=dashed];
m0_414 -> m0_427  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_415 -> m0_420  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m0_415 -> m0_421  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m0_416 -> m0_426  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_275 -> m0_281  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m0_275 -> m0_282  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m0_276 -> m0_288  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_276 -> m0_278  [color=darkseagreen4, key=1, label=response, style=dashed];
m0_104 -> m0_123  [color=green, key=1, label=module, style=dashed];
m0_105 -> m0_122  [color=green, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m0_105 -> m0_123  [color=green, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m0_345 -> m0_353  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m0_345 -> m0_354  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m0_346 -> m0_363  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_344 -> m0_354  [color=darkseagreen4, key=1, label=negotiatedCookie, style=dashed];
m0_344 -> m0_357  [color=darkseagreen4, key=1, label=negotiatedCookie, style=dashed];
m0_344 -> m0_360  [color=darkseagreen4, key=1, label=negotiatedCookie, style=dashed];
m0_344 -> m0_347  [color=darkseagreen4, key=1, label=negotiatedCookie, style=dashed];
m0_127 -> m0_142  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m0_127 -> m0_143  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m0_126 -> m0_143  [color=darkseagreen4, key=1, label=module, style=dashed];
m0_254 -> m0_259  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m0_254 -> m0_260  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m0_255 -> m0_271  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_78 -> m0_99  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m0_78 -> m0_100  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m0_79 -> m0_81  [color=darkseagreen4, key=1, label=response, style=dashed];
m0_77 -> m0_100  [color=darkseagreen4, key=1, label=module, style=dashed];
m0_486 -> m0_123  [color=green, key=1, label=module, style=dashed];
m0_481 -> m0_18  [color=darkseagreen4, key=1, label=module, style=dashed];
m0_482 -> m0_35  [color=darkseagreen4, key=1, label=module, style=dashed];
m0_483 -> m0_50  [color=darkseagreen4, key=1, label=module, style=dashed];
m0_484 -> m0_74  [color=darkseagreen4, key=1, label=module, style=dashed];
m0_485 -> m0_100  [color=darkseagreen4, key=1, label=module, style=dashed];
m0_487 -> m0_143  [color=darkseagreen4, key=1, label=module, style=dashed];
m0_488 -> m0_354  [color=darkseagreen4, key=1, label=negotiatedCookie, style=dashed];
m0_488 -> m0_357  [color=darkseagreen4, key=1, label=negotiatedCookie, style=dashed];
m0_488 -> m0_360  [color=darkseagreen4, key=1, label=negotiatedCookie, style=dashed];
m0_491 -> m0_439  [color=darkseagreen4, key=1, label=browser, style=dashed];
m0_492 -> m0_445  [color=darkseagreen4, key=1, label="System.Action<Nancy.Responses.Negotiation.Negotiator>", style=dashed];
m0_492 -> m0_446  [color=darkseagreen4, key=1, label="System.Action<Nancy.Responses.Negotiation.Negotiator>", style=dashed];
m0_490 -> m0_427  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_0 -> m1_3  [color=darkseagreen4, key=1, label=string, style=dashed];
}
