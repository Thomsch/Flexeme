digraph  {
n127 [label="Nancy.Testing.Tests.AssertExtensionsTests", span=""];
n128 [label=htmlNode, span=""];
n129 [label=htmlNode, span=""];
n130 [label=htmlNodes, span=""];
n131 [label=htmlNodes, span=""];
n132 [label=htmlNode, span=""];
n133 [label=htmlNode, span=""];
n134 [label=htmlNode, span=""];
n135 [label=htmlNodes, span=""];
n136 [label=htmlNodes, span=""];
n0 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.AssertExtensionsTests()", label="Entry Nancy.Testing.Tests.AssertExtensionsTests.AssertExtensionsTests()", span="15-15"];
n1 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.AssertExtensionsTests()", label="var document =\r\n                CQ.Create(@''<html><head></head><body><div id='testId' class='myClass'>Test</div><div class='anotherClass'>Tes</div><span class='class'>some contents</span><span class='class'>This has contents</span></body></html>'')", span="17-18"];
n2 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.AssertExtensionsTests()", label="this.query =\r\n                new QueryWrapper(document)", span="20-21"];
n4 [cluster="Unk.Create", label="Entry Unk.Create", span=""];
n3 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.AssertExtensionsTests()", label="Exit Nancy.Testing.Tests.AssertExtensionsTests.AssertExtensionsTests()", span="15-15"];
n5 [cluster="QueryWrapper.cstr", label="Entry QueryWrapper.cstr", span=""];
n6 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.Should_throw_assertexception_when_id_does_not_exist()", label="Entry Nancy.Testing.Tests.AssertExtensionsTests.Should_throw_assertexception_when_id_does_not_exist()", span="25-25"];
n7 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.Should_throw_assertexception_when_id_does_not_exist()", label="var result = Record.Exception(() => this.query[''#notThere''].ShouldExist())", span="28-28"];
n8 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.Should_throw_assertexception_when_id_does_not_exist()", label="Assert.IsAssignableFrom<AssertException>(result)", span="31-31"];
n10 [cluster="Unk.Exception", label="Entry Unk.Exception", span=""];
n12 [cluster="lambda expression", label="Entry lambda expression", span="28-28"];
n9 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.Should_throw_assertexception_when_id_does_not_exist()", label="Exit Nancy.Testing.Tests.AssertExtensionsTests.Should_throw_assertexception_when_id_does_not_exist()", span="25-25"];
n11 [cluster="Unk.>", label="Entry Unk.>", span=""];
n13 [cluster="lambda expression", label="this.query[''#notThere''].ShouldExist()", span="28-28"];
n14 [cluster="lambda expression", label="Exit lambda expression", span="28-28"];
n15 [cluster="Nancy.Testing.QueryWrapper.ShouldExist()", label="Entry Nancy.Testing.QueryWrapper.ShouldExist()", span="25-25"];
n16 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.Should_not_throw_exception_when_id_does_exist()", label="Entry Nancy.Testing.Tests.AssertExtensionsTests.Should_not_throw_exception_when_id_does_exist()", span="35-35"];
n17 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.Should_not_throw_exception_when_id_does_exist()", label="var result = Record.Exception(() => this.query[''#testId''].ShouldExist())", span="38-38"];
n18 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.Should_not_throw_exception_when_id_does_exist()", label="Assert.Null(result)", span="41-41"];
n21 [cluster="lambda expression", label="Entry lambda expression", span="38-38"];
n19 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.Should_not_throw_exception_when_id_does_exist()", label="Exit Nancy.Testing.Tests.AssertExtensionsTests.Should_not_throw_exception_when_id_does_exist()", span="35-35"];
n20 [cluster="Unk.Null", label="Entry Unk.Null", span=""];
n22 [cluster="lambda expression", label="this.query[''#testId''].ShouldExist()", span="38-38"];
n23 [cluster="lambda expression", label="Exit lambda expression", span="38-38"];
n24 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.Should_not_throw_exception_when_id_that_should_only_exists_once_only_exists_once()", label="Entry Nancy.Testing.Tests.AssertExtensionsTests.Should_not_throw_exception_when_id_that_should_only_exists_once_only_exists_once()", span="45-45"];
n25 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.Should_not_throw_exception_when_id_that_should_only_exists_once_only_exists_once()", label="var result = Record.Exception(() => this.query[''#testId''].ShouldExistOnce())", span="48-48"];
n26 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.Should_not_throw_exception_when_id_that_should_only_exists_once_only_exists_once()", label="Assert.Null(result)", span="51-51"];
n28 [cluster="lambda expression", label="Entry lambda expression", span="48-48"];
n27 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.Should_not_throw_exception_when_id_that_should_only_exists_once_only_exists_once()", label="Exit Nancy.Testing.Tests.AssertExtensionsTests.Should_not_throw_exception_when_id_that_should_only_exists_once_only_exists_once()", span="45-45"];
n29 [cluster="lambda expression", label="this.query[''#testId''].ShouldExistOnce()", span="48-48"];
n30 [cluster="lambda expression", label="Exit lambda expression", span="48-48"];
n31 [cluster="Nancy.Testing.QueryWrapper.ShouldExistOnce()", label="Entry Nancy.Testing.QueryWrapper.ShouldExistOnce()", span="35-35"];
n32 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldExistOnce_ExistsOnce_ReturnsSingleItemAndConnector()", label="Entry Nancy.Testing.Tests.AssertExtensionsTests.ShouldExistOnce_ExistsOnce_ReturnsSingleItemAndConnector()", span="55-55"];
n33 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldExistOnce_ExistsOnce_ReturnsSingleItemAndConnector()", label="var result = this.query[''#testId''].ShouldExistOnce()", span="58-58"];
n34 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldExistOnce_ExistsOnce_ReturnsSingleItemAndConnector()", label="Assert.IsType<AndConnector<NodeWrapper>>(result)", span="61-61"];
n35 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldExistOnce_ExistsOnce_ReturnsSingleItemAndConnector()", label="Exit Nancy.Testing.Tests.AssertExtensionsTests.ShouldExistOnce_ExistsOnce_ReturnsSingleItemAndConnector()", span="55-55"];
n36 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldExistOnce_DoesNotExist_ShouldThrowAssert()", label="Entry Nancy.Testing.Tests.AssertExtensionsTests.ShouldExistOnce_DoesNotExist_ShouldThrowAssert()", span="65-65"];
n37 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldExistOnce_DoesNotExist_ShouldThrowAssert()", label="var result = Record.Exception(() => this.query[''#notHere''].ShouldExistOnce())", span="68-68"];
n38 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldExistOnce_DoesNotExist_ShouldThrowAssert()", label="Assert.IsAssignableFrom<AssertException>(result)", span="71-71"];
n40 [cluster="lambda expression", label="Entry lambda expression", span="68-68"];
n39 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldExistOnce_DoesNotExist_ShouldThrowAssert()", label="Exit Nancy.Testing.Tests.AssertExtensionsTests.ShouldExistOnce_DoesNotExist_ShouldThrowAssert()", span="65-65"];
n41 [cluster="lambda expression", label="this.query[''#notHere''].ShouldExistOnce()", span="68-68"];
n42 [cluster="lambda expression", label="Exit lambda expression", span="68-68"];
n43 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldExistOnce_ExistsMoreThanOnce_ShouldThrowAssert()", label="Entry Nancy.Testing.Tests.AssertExtensionsTests.ShouldExistOnce_ExistsMoreThanOnce_ShouldThrowAssert()", span="75-75"];
n44 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldExistOnce_ExistsMoreThanOnce_ShouldThrowAssert()", label="var result = Record.Exception(() => this.query[''div''].ShouldExistOnce())", span="78-78"];
n45 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldExistOnce_ExistsMoreThanOnce_ShouldThrowAssert()", label="Assert.IsAssignableFrom<AssertException>(result)", span="81-81"];
n47 [cluster="lambda expression", label="Entry lambda expression", span="78-78"];
n46 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldExistOnce_ExistsMoreThanOnce_ShouldThrowAssert()", label="Exit Nancy.Testing.Tests.AssertExtensionsTests.ShouldExistOnce_ExistsMoreThanOnce_ShouldThrowAssert()", span="75-75"];
n48 [cluster="lambda expression", label="this.query[''div''].ShouldExistOnce()", span="78-78"];
n49 [cluster="lambda expression", label="Exit lambda expression", span="78-78"];
n50 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_SingleElementNotThatClass_ShouldThrowAssert()", label="Entry Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_SingleElementNotThatClass_ShouldThrowAssert()", span="85-85"];
n51 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_SingleElementNotThatClass_ShouldThrowAssert()", label="var htmlNode = this.query[''#testId''].First()", span="88-88"];
n52 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_SingleElementNotThatClass_ShouldThrowAssert()", label="var result = Record.Exception(() => htmlNode.ShouldBeOfClass(''nope''))", span="91-91"];
n55 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
n57 [cluster="lambda expression", label="htmlNode.ShouldBeOfClass(''nope'')", span="91-91"];
n53 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_SingleElementNotThatClass_ShouldThrowAssert()", label="Assert.IsAssignableFrom<AssertException>(result)", span="94-94"];
n56 [cluster="lambda expression", label="Entry lambda expression", span="91-91"];
n54 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_SingleElementNotThatClass_ShouldThrowAssert()", label="Exit Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_SingleElementNotThatClass_ShouldThrowAssert()", span="85-85"];
n58 [cluster="lambda expression", label="Exit lambda expression", span="91-91"];
n59 [cluster="Nancy.Testing.NodeWrapper.ShouldBeOfClass(string)", label="Entry Nancy.Testing.NodeWrapper.ShouldBeOfClass(string)", span="43-43"];
n60 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_SingleElementWithThatClass_ShouldNotThrowAssert()", label="Entry Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_SingleElementWithThatClass_ShouldNotThrowAssert()", span="98-98"];
n61 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_SingleElementWithThatClass_ShouldNotThrowAssert()", label="var htmlNode = this.query[''#testId''].First()", span="101-101"];
n62 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_SingleElementWithThatClass_ShouldNotThrowAssert()", label="var result = Record.Exception(() => htmlNode.ShouldBeOfClass(''myClass''))", span="104-104"];
n66 [cluster="lambda expression", label="htmlNode.ShouldBeOfClass(''myClass'')", span="104-104"];
n63 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_SingleElementWithThatClass_ShouldNotThrowAssert()", label="Assert.Null(result)", span="107-107"];
n65 [cluster="lambda expression", label="Entry lambda expression", span="104-104"];
n64 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_SingleElementWithThatClass_ShouldNotThrowAssert()", label="Exit Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_SingleElementWithThatClass_ShouldNotThrowAssert()", span="98-98"];
n67 [cluster="lambda expression", label="Exit lambda expression", span="104-104"];
n68 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_MultipleElementsOneNotThatClass_ShouldThrowAssert()", label="Entry Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_MultipleElementsOneNotThatClass_ShouldThrowAssert()", span="111-111"];
n69 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_MultipleElementsOneNotThatClass_ShouldThrowAssert()", label="var htmlNodes = this.query[''div'']", span="114-114"];
n70 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_MultipleElementsOneNotThatClass_ShouldThrowAssert()", label="var result = Record.Exception(() => htmlNodes.ShouldBeOfClass(''myClass''))", span="117-117"];
n74 [cluster="lambda expression", label="htmlNodes.ShouldBeOfClass(''myClass'')", span="117-117"];
n71 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_MultipleElementsOneNotThatClass_ShouldThrowAssert()", label="Assert.IsAssignableFrom<AssertException>(result)", span="120-120"];
n73 [cluster="lambda expression", label="Entry lambda expression", span="117-117"];
n72 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_MultipleElementsOneNotThatClass_ShouldThrowAssert()", label="Exit Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_MultipleElementsOneNotThatClass_ShouldThrowAssert()", span="111-111"];
n75 [cluster="lambda expression", label="Exit lambda expression", span="117-117"];
n76 [cluster="Nancy.Testing.QueryWrapper.ShouldBeOfClass(string)", label="Entry Nancy.Testing.QueryWrapper.ShouldBeOfClass(string)", span="53-53"];
n77 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_MultipleElementsAllThatClass_ShouldNotThrowAssert()", label="Entry Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_MultipleElementsAllThatClass_ShouldNotThrowAssert()", span="124-124"];
n78 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_MultipleElementsAllThatClass_ShouldNotThrowAssert()", label="var htmlNodes = this.query[''span'']", span="127-127"];
n79 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_MultipleElementsAllThatClass_ShouldNotThrowAssert()", label="var result = Record.Exception(() => htmlNodes.ShouldBeOfClass(''class''))", span="130-130"];
n83 [cluster="lambda expression", label="htmlNodes.ShouldBeOfClass(''class'')", span="130-130"];
n80 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_MultipleElementsAllThatClass_ShouldNotThrowAssert()", label="Assert.Null(result)", span="133-133"];
n82 [cluster="lambda expression", label="Entry lambda expression", span="130-130"];
n81 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_MultipleElementsAllThatClass_ShouldNotThrowAssert()", label="Exit Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_MultipleElementsAllThatClass_ShouldNotThrowAssert()", span="124-124"];
n84 [cluster="lambda expression", label="Exit lambda expression", span="130-130"];
n85 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementThatContainsText_ShouldNotThrowAssert()", label="Entry Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementThatContainsText_ShouldNotThrowAssert()", span="137-137"];
n86 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementThatContainsText_ShouldNotThrowAssert()", label="var htmlNode = this.query[''#testId''].First()", span="140-140"];
n87 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementThatContainsText_ShouldNotThrowAssert()", label="var result = Record.Exception(() => htmlNode.ShouldContain(''Test''))", span="143-143"];
n91 [cluster="lambda expression", label="htmlNode.ShouldContain(''Test'')", span="143-143"];
n88 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementThatContainsText_ShouldNotThrowAssert()", label="Assert.Null(result)", span="146-146"];
n90 [cluster="lambda expression", label="Entry lambda expression", span="143-143"];
n89 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementThatContainsText_ShouldNotThrowAssert()", label="Exit Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementThatContainsText_ShouldNotThrowAssert()", span="137-137"];
n92 [cluster="lambda expression", label="Exit lambda expression", span="143-143"];
n93 [cluster="Nancy.Testing.NodeWrapper.ShouldContain(string, System.StringComparison)", label="Entry Nancy.Testing.NodeWrapper.ShouldContain(string, System.StringComparison)", span="66-66"];
n94 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementWithTextInDifferentCase_ShouldHonorCompareType()", label="Entry Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementWithTextInDifferentCase_ShouldHonorCompareType()", span="150-150"];
n95 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementWithTextInDifferentCase_ShouldHonorCompareType()", label="var htmlNode = this.query[''#testId''].First()", span="153-153"];
n96 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementWithTextInDifferentCase_ShouldHonorCompareType()", label="var result = Record.Exception(() => htmlNode.ShouldContain(''test'', StringComparison.InvariantCultureIgnoreCase))", span="156-156"];
n100 [cluster="lambda expression", label="htmlNode.ShouldContain(''test'', StringComparison.InvariantCultureIgnoreCase)", span="156-156"];
n97 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementWithTextInDifferentCase_ShouldHonorCompareType()", label="Assert.Null(result)", span="159-159"];
n99 [cluster="lambda expression", label="Entry lambda expression", span="156-156"];
n98 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementWithTextInDifferentCase_ShouldHonorCompareType()", label="Exit Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementWithTextInDifferentCase_ShouldHonorCompareType()", span="150-150"];
n101 [cluster="lambda expression", label="Exit lambda expression", span="156-156"];
n102 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementDoesntContainText_ShouldThrowAssert()", label="Entry Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementDoesntContainText_ShouldThrowAssert()", span="163-163"];
n103 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementDoesntContainText_ShouldThrowAssert()", label="var htmlNode = this.query[''#testId''].First()", span="166-166"];
n104 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementDoesntContainText_ShouldThrowAssert()", label="var result = Record.Exception(() => htmlNode.ShouldContain(''nope''))", span="169-169"];
n108 [cluster="lambda expression", label="htmlNode.ShouldContain(''nope'')", span="169-169"];
n105 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementDoesntContainText_ShouldThrowAssert()", label="Assert.IsAssignableFrom<AssertException>(result)", span="172-172"];
n107 [cluster="lambda expression", label="Entry lambda expression", span="169-169"];
n106 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementDoesntContainText_ShouldThrowAssert()", label="Exit Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementDoesntContainText_ShouldThrowAssert()", span="163-163"];
n109 [cluster="lambda expression", label="Exit lambda expression", span="169-169"];
n110 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_MultipleElementsAllContainingText_ShouldntThrowAssert()", label="Entry Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_MultipleElementsAllContainingText_ShouldntThrowAssert()", span="176-176"];
n111 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_MultipleElementsAllContainingText_ShouldntThrowAssert()", label="var htmlNodes = this.query[''span'']", span="179-179"];
n112 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_MultipleElementsAllContainingText_ShouldntThrowAssert()", label="var result = Record.Exception(() => htmlNodes.ShouldContain(''contents''))", span="182-182"];
n116 [cluster="lambda expression", label="htmlNodes.ShouldContain(''contents'')", span="182-182"];
n113 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_MultipleElementsAllContainingText_ShouldntThrowAssert()", label="Assert.Null(result)", span="185-185"];
n115 [cluster="lambda expression", label="Entry lambda expression", span="182-182"];
n114 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_MultipleElementsAllContainingText_ShouldntThrowAssert()", label="Exit Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_MultipleElementsAllContainingText_ShouldntThrowAssert()", span="176-176"];
n117 [cluster="lambda expression", label="Exit lambda expression", span="182-182"];
n118 [cluster="Nancy.Testing.QueryWrapper.ShouldContain(string, System.StringComparison)", label="Entry Nancy.Testing.QueryWrapper.ShouldContain(string, System.StringComparison)", span="76-76"];
n119 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_MultipleElementsOneNotContainingText_ShouldThrowAssert()", label="Entry Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_MultipleElementsOneNotContainingText_ShouldThrowAssert()", span="189-189"];
n120 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_MultipleElementsOneNotContainingText_ShouldThrowAssert()", label="var htmlNodes = this.query[''div'']", span="192-192"];
n121 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_MultipleElementsOneNotContainingText_ShouldThrowAssert()", label="var result = Record.Exception(() => htmlNodes.ShouldContain(''Test''))", span="195-195"];
n125 [cluster="lambda expression", label="htmlNodes.ShouldContain(''Test'')", span="195-195"];
n122 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_MultipleElementsOneNotContainingText_ShouldThrowAssert()", label="Assert.IsAssignableFrom<AssertException>(result)", span="198-198"];
n124 [cluster="lambda expression", label="Entry lambda expression", span="195-195"];
n123 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_MultipleElementsOneNotContainingText_ShouldThrowAssert()", label="Exit Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_MultipleElementsOneNotContainingText_ShouldThrowAssert()", span="189-189"];
n126 [cluster="lambda expression", label="Exit lambda expression", span="195-195"];
d46 [cluster="Nancy.Authentication.Basic.BasicAuthentication.ExtractCredentialsFromHeaders(Nancy.Request)", color=green, community=0, label="var authorization =\r\n                request.Headers.Authorization", prediction=0, span="105-106"];
d44 [cluster="Nancy.Authentication.Basic.BasicAuthentication.ExtractCredentialsFromHeaders(Nancy.Request)", label="Entry Nancy.Authentication.Basic.BasicAuthentication.ExtractCredentialsFromHeaders(Nancy.Request)", span="103-103"];
d47 [cluster="Nancy.Authentication.Basic.BasicAuthentication.ExtractCredentialsFromHeaders(Nancy.Request)", label="string.IsNullOrEmpty(authorization)", span="108-108"];
d49 [cluster="Nancy.Authentication.Basic.BasicAuthentication.ExtractCredentialsFromHeaders(Nancy.Request)", color=green, community=0, label="!authorization.StartsWith(SCHEME)", prediction=0, span="113-113"];
d51 [cluster="Nancy.Authentication.Basic.BasicAuthentication.ExtractCredentialsFromHeaders(Nancy.Request)", label="var encodedUserPass = authorization.Substring(SCHEME.Length).Trim()", span="120-120"];
d50 [cluster="Nancy.Authentication.Basic.BasicAuthentication.ExtractCredentialsFromHeaders(Nancy.Request)", label="return null;", span="115-115"];
d58 [cluster="string.StartsWith(string)", label="Entry string.StartsWith(string)", span="0-0"];
d39 [cluster="Nancy.Authentication.Basic.BasicAuthentication.RetrieveCredentials(Nancy.NancyContext, Nancy.Authentication.Basic.BasicAuthenticationConfiguration)", label="var credentials = ExtractCredentialsFromHeaders(context.Request)", span="92-92"];
d56 [cluster="Nancy.Authentication.Basic.BasicAuthentication.ExtractCredentialsFromHeaders(Nancy.Request)", label="Exit Nancy.Authentication.Basic.BasicAuthentication.ExtractCredentialsFromHeaders(Nancy.Request)", span="103-103"];
d25 [cluster="Nancy.Authentication.Basic.BasicAuthentication.GetCredentialRetrievalHook(Nancy.Authentication.Basic.BasicAuthenticationConfiguration)", label="return context =>\r\n                {\r\n                    RetrieveCredentials(context, configuration);\r\n                    return null;\r\n                };", span="72-76"];
d48 [cluster="Nancy.Authentication.Basic.BasicAuthentication.ExtractCredentialsFromHeaders(Nancy.Request)", label="return null;", span="110-110"];
d57 [cluster="string.IsNullOrEmpty(string)", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
d52 [cluster="Nancy.Authentication.Basic.BasicAuthentication.ExtractCredentialsFromHeaders(Nancy.Request)", label="var userPass = Encoding.UTF8.GetString(Convert.FromBase64String(encodedUserPass))", span="121-121"];
d59 [cluster="string.Substring(int)", label="Entry string.Substring(int)", span="0-0"];
d60 [cluster="string.Trim()", label="Entry string.Trim()", span="0-0"];
d31 [cluster="Nancy.Authentication.Basic.BasicAuthentication.RetrieveCredentials(Nancy.NancyContext, Nancy.Authentication.Basic.BasicAuthenticationConfiguration)", label="Entry Nancy.Authentication.Basic.BasicAuthentication.RetrieveCredentials(Nancy.NancyContext, Nancy.Authentication.Basic.BasicAuthenticationConfiguration)", span="90-90"];
d40 [cluster="Nancy.Authentication.Basic.BasicAuthentication.RetrieveCredentials(Nancy.NancyContext, Nancy.Authentication.Basic.BasicAuthenticationConfiguration)", label="credentials != null && credentials.Length == 2", span="94-94"];
d41 [cluster="Nancy.Authentication.Basic.BasicAuthentication.RetrieveCredentials(Nancy.NancyContext, Nancy.Authentication.Basic.BasicAuthenticationConfiguration)", label="configuration.UserValidator.Validate(credentials[0], credentials[1])", span="96-96"];
d42 [cluster="Nancy.Authentication.Basic.BasicAuthentication.RetrieveCredentials(Nancy.NancyContext, Nancy.Authentication.Basic.BasicAuthenticationConfiguration)", label="context.Items[SecurityConventions.AuthenticatedUsernameKey] = credentials[0]", span="98-98"];
d53 [cluster="Nancy.Authentication.Basic.BasicAuthentication.ExtractCredentialsFromHeaders(Nancy.Request)", label="return String.IsNullOrWhiteSpace(userPass) ? null : userPass.Split(':');", span="123-123"];
d55 [cluster="Nancy.Authentication.Basic.BasicAuthentication.ExtractCredentialsFromHeaders(Nancy.Request)", label="return null;", span="127-127"];
d9 [cluster="Nancy.Authentication.Basic.BasicAuthentication.GetCredentialRetrievalHook(Nancy.Authentication.Basic.BasicAuthenticationConfiguration)", label="Entry Nancy.Authentication.Basic.BasicAuthentication.GetCredentialRetrievalHook(Nancy.Authentication.Basic.BasicAuthenticationConfiguration)", span="65-65"];
d23 [cluster="Nancy.Authentication.Basic.BasicAuthentication.GetCredentialRetrievalHook(Nancy.Authentication.Basic.BasicAuthenticationConfiguration)", label="configuration == null", span="67-67"];
d26 [cluster="Nancy.Authentication.Basic.BasicAuthentication.GetCredentialRetrievalHook(Nancy.Authentication.Basic.BasicAuthenticationConfiguration)", label="Exit Nancy.Authentication.Basic.BasicAuthentication.GetCredentialRetrievalHook(Nancy.Authentication.Basic.BasicAuthenticationConfiguration)", span="65-65"];
d28 [cluster="lambda expression", label="RetrieveCredentials(context, configuration)", span="74-74"];
d61 [cluster="System.Convert.FromBase64String(string)", label="Entry System.Convert.FromBase64String(string)", span="0-0"];
d62 [cluster="System.Text.Encoding.GetString(byte[])", label="Entry System.Text.Encoding.GetString(byte[])", span="0-0"];
d43 [cluster="Nancy.Authentication.Basic.BasicAuthentication.RetrieveCredentials(Nancy.NancyContext, Nancy.Authentication.Basic.BasicAuthenticationConfiguration)", label="Exit Nancy.Authentication.Basic.BasicAuthentication.RetrieveCredentials(Nancy.NancyContext, Nancy.Authentication.Basic.BasicAuthenticationConfiguration)", span="90-90"];
d45 [cluster="Nancy.Authentication.Basic.IUserValidator.Validate(string, string)", label="Entry Nancy.Authentication.Basic.IUserValidator.Validate(string, string)", span="18-18"];
d63 [cluster="string.IsNullOrWhiteSpace(string)", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
d64 [cluster="string.Split(params char[])", label="Entry string.Split(params char[])", span="0-0"];
d54 [cluster="Nancy.Authentication.Basic.BasicAuthentication.ExtractCredentialsFromHeaders(Nancy.Request)", label=FormatException, span="125-125"];
d5 [cluster="Nancy.Authentication.Basic.BasicAuthentication.Enable(Nancy.Bootstrapper.IApplicationPipelines, Nancy.Authentication.Basic.BasicAuthenticationConfiguration)", label="applicationPipelines.BeforeRequest.AddItemToStartOfPipeline(GetCredentialRetrievalHook(configuration))", span="33-33"];
d19 [cluster="Nancy.Authentication.Basic.BasicAuthentication.Enable(Nancy.NancyModule, Nancy.Authentication.Basic.BasicAuthenticationConfiguration)", label="module.Before.AddItemToStartOfPipeline(GetCredentialRetrievalHook(configuration))", span="55-55"];
d0 [cluster="Nancy.Authentication.Basic.BasicAuthentication.Enable(Nancy.Bootstrapper.IApplicationPipelines, Nancy.Authentication.Basic.BasicAuthenticationConfiguration)", label="Entry Nancy.Authentication.Basic.BasicAuthentication.Enable(Nancy.Bootstrapper.IApplicationPipelines, Nancy.Authentication.Basic.BasicAuthenticationConfiguration)", span="21-21"];
d13 [cluster="Nancy.Authentication.Basic.BasicAuthentication.Enable(Nancy.NancyModule, Nancy.Authentication.Basic.BasicAuthenticationConfiguration)", label="Entry Nancy.Authentication.Basic.BasicAuthentication.Enable(Nancy.NancyModule, Nancy.Authentication.Basic.BasicAuthenticationConfiguration)", span="42-42"];
d24 [cluster="Nancy.Authentication.Basic.BasicAuthentication.GetCredentialRetrievalHook(Nancy.Authentication.Basic.BasicAuthenticationConfiguration)", label="throw new ArgumentNullException(''configuration'');", span="69-69"];
d65 [label="Nancy.Authentication.Basic.BasicAuthenticationConfiguration", span=""];
d27 [cluster="lambda expression", label="Entry lambda expression", span="72-76"];
d29 [cluster="lambda expression", label="return null;", span="75-75"];
d3 [cluster="Nancy.Authentication.Basic.BasicAuthentication.Enable(Nancy.Bootstrapper.IApplicationPipelines, Nancy.Authentication.Basic.BasicAuthenticationConfiguration)", label="configuration == null", span="28-28"];
d6 [cluster="Nancy.Authentication.Basic.BasicAuthentication.Enable(Nancy.Bootstrapper.IApplicationPipelines, Nancy.Authentication.Basic.BasicAuthenticationConfiguration)", label="applicationPipelines.AfterRequest.AddItemToEndOfPipeline(GetAuthenticationPromptHook(configuration))", span="34-34"];
d10 [cluster="Nancy.BeforePipeline.AddItemToStartOfPipeline(System.Func<Nancy.NancyContext, Nancy.Response>)", label="Entry Nancy.BeforePipeline.AddItemToStartOfPipeline(System.Func<Nancy.NancyContext, Nancy.Response>)", span="96-96"];
d18 [cluster="Nancy.Authentication.Basic.BasicAuthentication.Enable(Nancy.NancyModule, Nancy.Authentication.Basic.BasicAuthenticationConfiguration)", label="module.RequiresAuthentication()", span="54-54"];
d20 [cluster="Nancy.Authentication.Basic.BasicAuthentication.Enable(Nancy.NancyModule, Nancy.Authentication.Basic.BasicAuthenticationConfiguration)", label="module.After.AddItemToEndOfPipeline(GetAuthenticationPromptHook(configuration))", span="56-56"];
d7 [cluster="Nancy.Authentication.Basic.BasicAuthentication.Enable(Nancy.Bootstrapper.IApplicationPipelines, Nancy.Authentication.Basic.BasicAuthenticationConfiguration)", label="Exit Nancy.Authentication.Basic.BasicAuthentication.Enable(Nancy.Bootstrapper.IApplicationPipelines, Nancy.Authentication.Basic.BasicAuthenticationConfiguration)", span="21-21"];
d11 [cluster="Nancy.Authentication.Basic.BasicAuthentication.GetAuthenticationPromptHook(Nancy.Authentication.Basic.BasicAuthenticationConfiguration)", label="Entry Nancy.Authentication.Basic.BasicAuthentication.GetAuthenticationPromptHook(Nancy.Authentication.Basic.BasicAuthenticationConfiguration)", span="79-79"];
d1 [cluster="Nancy.Authentication.Basic.BasicAuthentication.Enable(Nancy.Bootstrapper.IApplicationPipelines, Nancy.Authentication.Basic.BasicAuthenticationConfiguration)", label="applicationPipelines == null", span="23-23"];
d21 [cluster="Nancy.Authentication.Basic.BasicAuthentication.Enable(Nancy.NancyModule, Nancy.Authentication.Basic.BasicAuthenticationConfiguration)", label="Exit Nancy.Authentication.Basic.BasicAuthentication.Enable(Nancy.NancyModule, Nancy.Authentication.Basic.BasicAuthenticationConfiguration)", span="42-42"];
d14 [cluster="Nancy.Authentication.Basic.BasicAuthentication.Enable(Nancy.NancyModule, Nancy.Authentication.Basic.BasicAuthenticationConfiguration)", label="module == null", span="44-44"];
d16 [cluster="Nancy.Authentication.Basic.BasicAuthentication.Enable(Nancy.NancyModule, Nancy.Authentication.Basic.BasicAuthenticationConfiguration)", label="configuration == null", span="49-49"];
d8 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
d30 [cluster="lambda expression", label="Exit lambda expression", span="72-76"];
d4 [cluster="Nancy.Authentication.Basic.BasicAuthentication.Enable(Nancy.Bootstrapper.IApplicationPipelines, Nancy.Authentication.Basic.BasicAuthenticationConfiguration)", label="throw new ArgumentNullException(''configuration'');", span="30-30"];
d12 [cluster="Nancy.AfterPipeline.AddItemToEndOfPipeline(System.Action<Nancy.NancyContext>)", label="Entry Nancy.AfterPipeline.AddItemToEndOfPipeline(System.Action<Nancy.NancyContext>)", span="86-86"];
d22 [cluster="Nancy.NancyModule.RequiresAuthentication()", label="Entry Nancy.NancyModule.RequiresAuthentication()", span="15-15"];
d2 [cluster="Nancy.Authentication.Basic.BasicAuthentication.Enable(Nancy.Bootstrapper.IApplicationPipelines, Nancy.Authentication.Basic.BasicAuthenticationConfiguration)", label="throw new ArgumentNullException(''applicationPipelines'');", span="25-25"];
d33 [cluster="Nancy.Authentication.Basic.BasicAuthentication.GetAuthenticationPromptHook(Nancy.Authentication.Basic.BasicAuthenticationConfiguration)", label="Exit Nancy.Authentication.Basic.BasicAuthentication.GetAuthenticationPromptHook(Nancy.Authentication.Basic.BasicAuthenticationConfiguration)", span="79-79"];
d32 [cluster="Nancy.Authentication.Basic.BasicAuthentication.GetAuthenticationPromptHook(Nancy.Authentication.Basic.BasicAuthenticationConfiguration)", label="return context =>\r\n                {\r\n                    if (context.Response.StatusCode == HttpStatusCode.Unauthorized)\r\n                    {\r\n                        context.Response.Headers[''WWW-Authenticate''] = String.Format(''{0} realm=\''{1}\'''', SCHEME, configuration.Realm);\r\n                    }\r\n                };", span="81-87"];
d36 [cluster="lambda expression", label="context.Response.Headers[''WWW-Authenticate''] = String.Format(''{0} realm=\''{1}\'''', SCHEME, configuration.Realm)", span="85-85"];
d15 [cluster="Nancy.Authentication.Basic.BasicAuthentication.Enable(Nancy.NancyModule, Nancy.Authentication.Basic.BasicAuthenticationConfiguration)", label="throw new ArgumentNullException(''module'');", span="46-46"];
d17 [cluster="Nancy.Authentication.Basic.BasicAuthentication.Enable(Nancy.NancyModule, Nancy.Authentication.Basic.BasicAuthenticationConfiguration)", label="throw new ArgumentNullException(''configuration'');", span="51-51"];
d35 [cluster="lambda expression", label="context.Response.StatusCode == HttpStatusCode.Unauthorized", span="83-83"];
d66 [label="Nancy.Authentication.Basic.BasicAuthenticationConfiguration", span=""];
d34 [cluster="lambda expression", label="Entry lambda expression", span="81-87"];
d37 [cluster="lambda expression", label="Exit lambda expression", span="81-87"];
d38 [cluster="string.Format(string, object, object)", label="Entry string.Format(string, object, object)", span="0-0"];
m0_0 [cluster="Nancy.Diagnostics.TraceLog.TraceLog()", file="BasicAuthenticationFixture.cs", label="Entry Nancy.Diagnostics.TraceLog.TraceLog()", span="9-9"];
m0_1 [cluster="Nancy.Diagnostics.TraceLog.TraceLog()", file="BasicAuthenticationFixture.cs", label="this.log = new StringBuilder()", span="11-11"];
m0_2 [cluster="Nancy.Diagnostics.TraceLog.TraceLog()", file="BasicAuthenticationFixture.cs", label="Exit Nancy.Diagnostics.TraceLog.TraceLog()", span="9-9"];
m0_4 [cluster="Nancy.Diagnostics.TraceLog.WriteLog(System.Action<System.Text.StringBuilder>)", file="BasicAuthenticationFixture.cs", label="Entry Nancy.Diagnostics.TraceLog.WriteLog(System.Action<System.Text.StringBuilder>)", span="14-14"];
m0_5 [cluster="Nancy.Diagnostics.TraceLog.WriteLog(System.Action<System.Text.StringBuilder>)", file="BasicAuthenticationFixture.cs", label="this.log != null", span="16-16"];
m0_6 [cluster="Nancy.Diagnostics.TraceLog.WriteLog(System.Action<System.Text.StringBuilder>)", file="BasicAuthenticationFixture.cs", label="logDelegate.Invoke(this.log)", span="18-18"];
m0_7 [cluster="Nancy.Diagnostics.TraceLog.WriteLog(System.Action<System.Text.StringBuilder>)", file="BasicAuthenticationFixture.cs", label="Exit Nancy.Diagnostics.TraceLog.WriteLog(System.Action<System.Text.StringBuilder>)", span="14-14"];
m0_3 [cluster="System.Text.StringBuilder.StringBuilder()", file="BasicAuthenticationFixture.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m0_12 [cluster="System.Text.StringBuilder.ToString()", file="BasicAuthenticationFixture.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m0_9 [cluster="Nancy.Diagnostics.TraceLog.ToString()", file="BasicAuthenticationFixture.cs", label="Entry Nancy.Diagnostics.TraceLog.ToString()", span="22-22"];
m0_10 [cluster="Nancy.Diagnostics.TraceLog.ToString()", file="BasicAuthenticationFixture.cs", label="return this.log != null ? this.log.ToString() : string.Empty;", span="24-24"];
m0_11 [cluster="Nancy.Diagnostics.TraceLog.ToString()", file="BasicAuthenticationFixture.cs", label="Exit Nancy.Diagnostics.TraceLog.ToString()", span="22-22"];
m0_8 [cluster="System.Action<T>.Invoke(T)", file="BasicAuthenticationFixture.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m0_13 [file="BasicAuthenticationFixture.cs", label="Nancy.Diagnostics.TraceLog", span=""];
m1_7 [cluster="Nancy.Testing.DocumentWrapper.DocumentWrapper(System.Collections.Generic.IEnumerable<byte>)", file="CookieBasedSessionsFixture.cs", label="Entry Nancy.Testing.DocumentWrapper.DocumentWrapper(System.Collections.Generic.IEnumerable<byte>)", span="18-18"];
m1_22 [cluster="object.ShouldBeSameAs(object)", file="CookieBasedSessionsFixture.cs", label="Entry object.ShouldBeSameAs(object)", span="130-130"];
m1_21 [cluster="lambda expression", file="CookieBasedSessionsFixture.cs", label="Exit lambda expression", span="31-43"];
m1_64 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.EquatableModel.EquatableModel()", file="CookieBasedSessionsFixture.cs", label="Exit Nancy.Testing.Tests.AssertEqualityComparerFixture.EquatableModel.EquatableModel()", span="137-137"];
m1_56 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_result_from_comparing_comparables(int, bool)", file="CookieBasedSessionsFixture.cs", label="Entry Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_result_from_comparing_comparables(int, bool)", span="119-119"];
m1_60 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_result_from_comparing_comparables(int, bool)", file="CookieBasedSessionsFixture.cs", label="var result = comparer.Equals(expected, actual)", span="127-127"];
m1_57 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_result_from_comparing_comparables(int, bool)", file="CookieBasedSessionsFixture.cs", label="var comparer = new AssertEqualityComparer<CompareableModel>()", span="122-122"];
m1_58 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_result_from_comparing_comparables(int, bool)", file="CookieBasedSessionsFixture.cs", label="var actual = new CompareableModel(compareResult)", span="123-123"];
m1_59 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_result_from_comparing_comparables(int, bool)", file="CookieBasedSessionsFixture.cs", label="var expected = new CompareableModel()", span="124-124"];
m1_61 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_result_from_comparing_comparables(int, bool)", file="CookieBasedSessionsFixture.cs", label="result.ShouldEqual(expectedResult)", span="130-130"];
m1_62 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_result_from_comparing_comparables(int, bool)", file="CookieBasedSessionsFixture.cs", label="Exit Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_result_from_comparing_comparables(int, bool)", span="119-119"];
m1_63 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.CompareableModel.CompareableModel(int)", file="CookieBasedSessionsFixture.cs", label="Entry Nancy.Testing.Tests.AssertEqualityComparerFixture.CompareableModel.CompareableModel(int)", span="188-188"];
m1_79 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.CompareableModel.CompareableModel(int)", file="CookieBasedSessionsFixture.cs", label="this.returnValue = returnValue", span="190-190"];
m1_80 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.CompareableModel.CompareableModel(int)", file="CookieBasedSessionsFixture.cs", label="Exit Nancy.Testing.Tests.AssertEqualityComparerFixture.CompareableModel.CompareableModel(int)", span="188-188"];
m1_31 [cluster="object.ShouldEqual(object)", file="CookieBasedSessionsFixture.cs", label="Entry object.ShouldEqual(object)", span="95-95"];
m1_15 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_invoke_equals_with_expected_value_when_actual_is_equatable()", file="CookieBasedSessionsFixture.cs", label="var comparer = new AssertEqualityComparer<EquatableModel>()", span="39-39"];
m1_30 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.EquatableModel.EquatableModel(bool)", file="CookieBasedSessionsFixture.cs", label="Entry Nancy.Testing.Tests.AssertEqualityComparerFixture.EquatableModel.EquatableModel(bool)", span="142-142"];
m1_65 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.EquatableModel.EquatableModel(bool)", file="CookieBasedSessionsFixture.cs", label="this.returnValue = returnValue", span="144-144"];
m1_66 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.EquatableModel.EquatableModel(bool)", file="CookieBasedSessionsFixture.cs", label="Exit Nancy.Testing.Tests.AssertEqualityComparerFixture.EquatableModel.EquatableModel(bool)", span="142-142"];
m1_8 [cluster="Nancy.Testing.QueryWrapper.ShouldExist()", file="CookieBasedSessionsFixture.cs", label="Entry Nancy.Testing.QueryWrapper.ShouldExist()", span="25-25"];
m1_10 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_false_if_expected_is_null_when_comparing_equality()", file="CookieBasedSessionsFixture.cs", label="var comparer = new AssertEqualityComparer<object>()", span="26-26"];
m1_12 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_false_if_expected_is_null_when_comparing_equality()", file="CookieBasedSessionsFixture.cs", label="results.ShouldBeFalse()", span="32-32"];
m1_13 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_false_if_expected_is_null_when_comparing_equality()", file="CookieBasedSessionsFixture.cs", label="Exit Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_false_if_expected_is_null_when_comparing_equality()", span="23-23"];
m1_32 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_invoke_compareto_with_expected_value_when_actual_is_generic_comparable()", file="CookieBasedSessionsFixture.cs", label="Entry Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_invoke_compareto_with_expected_value_when_actual_is_generic_comparable()", span="68-68"];
m1_36 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_invoke_compareto_with_expected_value_when_actual_is_generic_comparable()", file="CookieBasedSessionsFixture.cs", label="comparer.Equals(expected, actual)", span="76-76"];
m1_33 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_invoke_compareto_with_expected_value_when_actual_is_generic_comparable()", file="CookieBasedSessionsFixture.cs", label="var comparer = new AssertEqualityComparer<GenericCompareableModel>()", span="71-71"];
m1_34 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_invoke_compareto_with_expected_value_when_actual_is_generic_comparable()", file="CookieBasedSessionsFixture.cs", label="var actual = new GenericCompareableModel()", span="72-72"];
m1_35 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_invoke_compareto_with_expected_value_when_actual_is_generic_comparable()", file="CookieBasedSessionsFixture.cs", label="var expected = new GenericCompareableModel()", span="73-73"];
m1_37 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_invoke_compareto_with_expected_value_when_actual_is_generic_comparable()", file="CookieBasedSessionsFixture.cs", label="actual.ExpectedValueThatWasPassedIn.ShouldBeSameAs(expected)", span="79-79"];
m1_38 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_invoke_compareto_with_expected_value_when_actual_is_generic_comparable()", file="CookieBasedSessionsFixture.cs", label="Exit Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_invoke_compareto_with_expected_value_when_actual_is_generic_comparable()", span="68-68"];
m1_6 [cluster="System.Text.Encoding.GetBytes(string)", file="CookieBasedSessionsFixture.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m1_48 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_invoke_compareto_with_expected_value_when_actual_is_comparable()", file="CookieBasedSessionsFixture.cs", label="Entry Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_invoke_compareto_with_expected_value_when_actual_is_comparable()", span="101-101"];
m1_52 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_invoke_compareto_with_expected_value_when_actual_is_comparable()", file="CookieBasedSessionsFixture.cs", label="comparer.Equals(expected, actual)", span="109-109"];
m1_49 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_invoke_compareto_with_expected_value_when_actual_is_comparable()", file="CookieBasedSessionsFixture.cs", label="var comparer = new AssertEqualityComparer<CompareableModel>()", span="104-104"];
m1_50 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_invoke_compareto_with_expected_value_when_actual_is_comparable()", file="CookieBasedSessionsFixture.cs", label="var actual = new CompareableModel()", span="105-105"];
m1_51 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_invoke_compareto_with_expected_value_when_actual_is_comparable()", file="CookieBasedSessionsFixture.cs", label="var expected = new CompareableModel()", span="106-106"];
m1_53 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_invoke_compareto_with_expected_value_when_actual_is_comparable()", file="CookieBasedSessionsFixture.cs", label="actual.ExpectedValueThatWasPassedIn.ShouldBeSameAs(expected)", span="112-112"];
m1_54 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_invoke_compareto_with_expected_value_when_actual_is_comparable()", file="CookieBasedSessionsFixture.cs", label="Exit Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_invoke_compareto_with_expected_value_when_actual_is_comparable()", span="101-101"];
m1_74 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.GenericCompareableModel.CompareTo(Nancy.Testing.Tests.AssertEqualityComparerFixture.GenericCompareableModel)", file="CookieBasedSessionsFixture.cs", label="Entry Nancy.Testing.Tests.AssertEqualityComparerFixture.GenericCompareableModel.CompareTo(Nancy.Testing.Tests.AssertEqualityComparerFixture.GenericCompareableModel)", span="172-172"];
m1_75 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.GenericCompareableModel.CompareTo(Nancy.Testing.Tests.AssertEqualityComparerFixture.GenericCompareableModel)", file="CookieBasedSessionsFixture.cs", label="this.ExpectedValueThatWasPassedIn = comparable", span="174-174"];
m1_76 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.GenericCompareableModel.CompareTo(Nancy.Testing.Tests.AssertEqualityComparerFixture.GenericCompareableModel)", file="CookieBasedSessionsFixture.cs", label="return this.returnValue;", span="175-175"];
m1_77 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.GenericCompareableModel.CompareTo(Nancy.Testing.Tests.AssertEqualityComparerFixture.GenericCompareableModel)", file="CookieBasedSessionsFixture.cs", label="Exit Nancy.Testing.Tests.AssertEqualityComparerFixture.GenericCompareableModel.CompareTo(Nancy.Testing.Tests.AssertEqualityComparerFixture.GenericCompareableModel)", span="172-172"];
m1_5 [cluster="Nancy.Testing.Tests.AndConnectorTests.Should_allow_chaining_of_asserts_and_still_pass()", file="CookieBasedSessionsFixture.cs", label="Exit Nancy.Testing.Tests.AndConnectorTests.Should_allow_chaining_of_asserts_and_still_pass()", span="10-10"];
m1_47 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.GenericCompareableModel.GenericCompareableModel(int)", file="CookieBasedSessionsFixture.cs", label="Entry Nancy.Testing.Tests.AssertEqualityComparerFixture.GenericCompareableModel.GenericCompareableModel(int)", span="165-165"];
m1_72 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.GenericCompareableModel.GenericCompareableModel(int)", file="CookieBasedSessionsFixture.cs", label="this.returnValue = returnValue", span="167-167"];
m1_73 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.GenericCompareableModel.GenericCompareableModel(int)", file="CookieBasedSessionsFixture.cs", label="Exit Nancy.Testing.Tests.AssertEqualityComparerFixture.GenericCompareableModel.GenericCompareableModel(int)", span="165-165"];
m1_16 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_invoke_equals_with_expected_value_when_actual_is_equatable()", file="CookieBasedSessionsFixture.cs", label="var actual = new EquatableModel()", span="40-40"];
m1_17 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_invoke_equals_with_expected_value_when_actual_is_equatable()", file="CookieBasedSessionsFixture.cs", label="var expected = new EquatableModel()", span="41-41"];
m1_19 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_invoke_equals_with_expected_value_when_actual_is_equatable()", file="CookieBasedSessionsFixture.cs", label="actual.ExpectedValueThatWasPassedIn.ShouldBeSameAs(expected)", span="47-47"];
m1_20 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_invoke_equals_with_expected_value_when_actual_is_equatable()", file="CookieBasedSessionsFixture.cs", label="Exit Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_invoke_equals_with_expected_value_when_actual_is_equatable()", span="36-36"];
m1_14 [cluster="Unk.Exception", file="CookieBasedSessionsFixture.cs", label="Entry Unk.Exception", span=""];
m1_67 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.EquatableModel.Equals(Nancy.Testing.Tests.AssertEqualityComparerFixture.EquatableModel)", file="CookieBasedSessionsFixture.cs", label="Entry Nancy.Testing.Tests.AssertEqualityComparerFixture.EquatableModel.Equals(Nancy.Testing.Tests.AssertEqualityComparerFixture.EquatableModel)", span="149-149"];
m1_68 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.EquatableModel.Equals(Nancy.Testing.Tests.AssertEqualityComparerFixture.EquatableModel)", file="CookieBasedSessionsFixture.cs", label="this.ExpectedValueThatWasPassedIn = expected", span="151-151"];
m1_69 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.EquatableModel.Equals(Nancy.Testing.Tests.AssertEqualityComparerFixture.EquatableModel)", file="CookieBasedSessionsFixture.cs", label="return this.returnValue;", span="152-152"];
m1_70 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.EquatableModel.Equals(Nancy.Testing.Tests.AssertEqualityComparerFixture.EquatableModel)", file="CookieBasedSessionsFixture.cs", label="Exit Nancy.Testing.Tests.AssertEqualityComparerFixture.EquatableModel.Equals(Nancy.Testing.Tests.AssertEqualityComparerFixture.EquatableModel)", span="149-149"];
m1_9 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_false_if_expected_is_null_when_comparing_equality()", file="CookieBasedSessionsFixture.cs", label="Entry Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_false_if_expected_is_null_when_comparing_equality()", span="23-23"];
m1_55 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.CompareableModel.CompareableModel()", file="CookieBasedSessionsFixture.cs", label="Entry Nancy.Testing.Tests.AssertEqualityComparerFixture.CompareableModel.CompareableModel()", span="183-183"];
m1_78 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.CompareableModel.CompareableModel()", file="CookieBasedSessionsFixture.cs", label="Exit Nancy.Testing.Tests.AssertEqualityComparerFixture.CompareableModel.CompareableModel()", span="183-183"];
m1_23 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_result_from_comparing_equatables(bool)", file="CookieBasedSessionsFixture.cs", label="Entry Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_result_from_comparing_equatables(bool)", span="53-53"];
m1_27 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_result_from_comparing_equatables(bool)", file="CookieBasedSessionsFixture.cs", label="var result = comparer.Equals(expected, actual)", span="61-61"];
m1_24 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_result_from_comparing_equatables(bool)", file="CookieBasedSessionsFixture.cs", label="var comparer = new AssertEqualityComparer<EquatableModel>()", span="56-56"];
m1_25 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_result_from_comparing_equatables(bool)", file="CookieBasedSessionsFixture.cs", label="var actual = new EquatableModel(expectedReturnValue)", span="57-57"];
m1_26 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_result_from_comparing_equatables(bool)", file="CookieBasedSessionsFixture.cs", label="var expected = new EquatableModel()", span="58-58"];
m1_28 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_result_from_comparing_equatables(bool)", file="CookieBasedSessionsFixture.cs", label="result.ShouldEqual(expectedReturnValue)", span="64-64"];
m1_29 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_result_from_comparing_equatables(bool)", file="CookieBasedSessionsFixture.cs", label="Exit Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_result_from_comparing_equatables(bool)", span="53-53"];
m1_81 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.CompareableModel.CompareTo(object)", file="CookieBasedSessionsFixture.cs", label="Entry Nancy.Testing.Tests.AssertEqualityComparerFixture.CompareableModel.CompareTo(object)", span="195-195"];
m1_82 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.CompareableModel.CompareTo(object)", file="CookieBasedSessionsFixture.cs", label="this.ExpectedValueThatWasPassedIn = comparable", span="197-197"];
m1_83 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.CompareableModel.CompareTo(object)", file="CookieBasedSessionsFixture.cs", label="return this.returnValue;", span="198-198"];
m1_84 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.CompareableModel.CompareTo(object)", file="CookieBasedSessionsFixture.cs", label="Exit Nancy.Testing.Tests.AssertEqualityComparerFixture.CompareableModel.CompareTo(object)", span="195-195"];
m1_39 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.GenericCompareableModel.GenericCompareableModel()", file="CookieBasedSessionsFixture.cs", label="Entry Nancy.Testing.Tests.AssertEqualityComparerFixture.GenericCompareableModel.GenericCompareableModel()", span="160-160"];
m1_71 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.GenericCompareableModel.GenericCompareableModel()", file="CookieBasedSessionsFixture.cs", label="Exit Nancy.Testing.Tests.AssertEqualityComparerFixture.GenericCompareableModel.GenericCompareableModel()", span="160-160"];
m1_0 [cluster="Nancy.Testing.Tests.AndConnectorTests.Should_allow_chaining_of_asserts_and_still_pass()", file="CookieBasedSessionsFixture.cs", label="Entry Nancy.Testing.Tests.AndConnectorTests.Should_allow_chaining_of_asserts_and_still_pass()", span="10-10"];
m1_2 [cluster="Nancy.Testing.Tests.AndConnectorTests.Should_allow_chaining_of_asserts_and_still_pass()", file="CookieBasedSessionsFixture.cs", label="var buffer =\r\n                Encoding.UTF8.GetBytes(input)", span="15-16"];
m1_1 [cluster="Nancy.Testing.Tests.AndConnectorTests.Should_allow_chaining_of_asserts_and_still_pass()", file="CookieBasedSessionsFixture.cs", label="string input = @''<html><head></head><body><div id='testId' class='myClass'>Test</div></body></html>''", span="13-13"];
m1_4 [cluster="Nancy.Testing.Tests.AndConnectorTests.Should_allow_chaining_of_asserts_and_still_pass()", file="CookieBasedSessionsFixture.cs", label="document[''#testId''].ShouldExist().And.ShouldBeOfClass(''myClass'')", span="22-22"];
m1_40 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_result_from_comparing_generic_comparables(int, bool)", file="CookieBasedSessionsFixture.cs", label="Entry Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_result_from_comparing_generic_comparables(int, bool)", span="86-86"];
m1_44 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_result_from_comparing_generic_comparables(int, bool)", file="CookieBasedSessionsFixture.cs", label="var result = comparer.Equals(expected, actual)", span="94-94"];
m1_41 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_result_from_comparing_generic_comparables(int, bool)", file="CookieBasedSessionsFixture.cs", label="var comparer = new AssertEqualityComparer<GenericCompareableModel>()", span="89-89"];
m1_42 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_result_from_comparing_generic_comparables(int, bool)", file="CookieBasedSessionsFixture.cs", label="var actual = new GenericCompareableModel(compareResult)", span="90-90"];
m1_43 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_result_from_comparing_generic_comparables(int, bool)", file="CookieBasedSessionsFixture.cs", label="var expected = new GenericCompareableModel()", span="91-91"];
m1_45 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_result_from_comparing_generic_comparables(int, bool)", file="CookieBasedSessionsFixture.cs", label="result.ShouldEqual(expectedResult)", span="97-97"];
m1_46 [cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_result_from_comparing_generic_comparables(int, bool)", file="CookieBasedSessionsFixture.cs", label="Exit Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_result_from_comparing_generic_comparables(int, bool)", span="86-86"];
m1_85 [file="CookieBasedSessionsFixture.cs", label="Nancy.Testing.Tests.AssertEqualityComparerFixture.EquatableModel", span=""];
m1_86 [file="CookieBasedSessionsFixture.cs", label="Nancy.Testing.Tests.AssertEqualityComparerFixture.GenericCompareableModel", span=""];
m1_87 [file="CookieBasedSessionsFixture.cs", label="Nancy.Testing.Tests.AssertEqualityComparerFixture.CompareableModel", span=""];
m2_16 [cluster="string.Contains(string)", file="DefaultBinder.cs", label="Entry string.Contains(string)", span="0-0"];
m2_14 [cluster="Nancy.Testing.Browser.Get(string, System.Action<Nancy.Testing.BrowserContext>)", file="DefaultBinder.cs", label="Entry Nancy.Testing.Browser.Get(string, System.Action<Nancy.Testing.BrowserContext>)", span="49-49"];
m2_17 [cluster="Unk.True", file="DefaultBinder.cs", label="Entry Unk.True", span=""];
m2_15 [cluster="Nancy.Testing.BrowserResponseBodyWrapper.AsString()", file="DefaultBinder.cs", label="Entry Nancy.Testing.BrowserResponseBodyWrapper.AsString()", span="30-30"];
m2_0 [cluster="Nancy.Tests.Functional.Tests.ViewBagTests.ViewBagTests()", file="DefaultBinder.cs", label="Entry Nancy.Tests.Functional.Tests.ViewBagTests.ViewBagTests()", span="14-14"];
m2_1 [cluster="Nancy.Tests.Functional.Tests.ViewBagTests.ViewBagTests()", file="DefaultBinder.cs", label="this.bootstrapper = new ConfigurableBootstrapper(\r\n                    configuration => configuration.Modules(new Type[] { typeof(RazorTestModule) }))", span="16-17"];
m2_2 [cluster="Nancy.Tests.Functional.Tests.ViewBagTests.ViewBagTests()", file="DefaultBinder.cs", label="this.browser = new Browser(bootstrapper)", span="19-19"];
m2_3 [cluster="Nancy.Tests.Functional.Tests.ViewBagTests.ViewBagTests()", file="DefaultBinder.cs", label="Exit Nancy.Tests.Functional.Tests.ViewBagTests.ViewBagTests()", span="14-14"];
m2_4 [cluster="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapper(System.Action<Nancy.Testing.ConfigurableBootstrapper.ConfigurableBoostrapperConfigurator>)", file="DefaultBinder.cs", label="Entry Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapper(System.Action<Nancy.Testing.ConfigurableBootstrapper.ConfigurableBoostrapperConfigurator>)", span="42-42"];
m2_9 [cluster="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBoostrapperConfigurator.Modules(params System.Type[])", file="DefaultBinder.cs", label="Entry Nancy.Testing.ConfigurableBootstrapper.ConfigurableBoostrapperConfigurator.Modules(params System.Type[])", span="649-649"];
m2_21 [cluster="Nancy.Testing.BrowserContext.HttpRequest()", file="DefaultBinder.cs", label="Entry Nancy.Testing.BrowserContext.HttpRequest()", span="116-116"];
m2_22 [cluster="Nancy.Tests.Functional.Tests.ViewBagTests.Should_render_content_from_viewbags()", file="DefaultBinder.cs", label="Entry Nancy.Tests.Functional.Tests.ViewBagTests.Should_render_content_from_viewbags()", span="39-39"];
m2_23 [cluster="Nancy.Tests.Functional.Tests.ViewBagTests.Should_render_content_from_viewbags()", file="DefaultBinder.cs", label="var response = browser.Get(\r\n                @''/razor-viewbag'',\r\n                with =>\r\n                {\r\n                    with.HttpRequest();\r\n                })", span="43-48"];
m2_24 [cluster="Nancy.Tests.Functional.Tests.ViewBagTests.Should_render_content_from_viewbags()", file="DefaultBinder.cs", label="Assert.True(response.Body.AsString().Contains(@''Hello Bob''))", span="51-51"];
m2_25 [cluster="Nancy.Tests.Functional.Tests.ViewBagTests.Should_render_content_from_viewbags()", file="DefaultBinder.cs", label="Exit Nancy.Tests.Functional.Tests.ViewBagTests.Should_render_content_from_viewbags()", span="39-39"];
m2_26 [cluster="lambda expression", file="DefaultBinder.cs", label="Entry lambda expression", span="45-48"];
m2_7 [cluster="lambda expression", file="DefaultBinder.cs", label="configuration.Modules(new Type[] { typeof(RazorTestModule) })", span="17-17"];
m2_6 [cluster="lambda expression", file="DefaultBinder.cs", label="Entry lambda expression", span="17-17"];
m2_8 [cluster="lambda expression", file="DefaultBinder.cs", label="Exit lambda expression", span="17-17"];
m2_18 [cluster="lambda expression", file="DefaultBinder.cs", label="Entry lambda expression", span="29-32"];
m2_19 [cluster="lambda expression", file="DefaultBinder.cs", label="with.HttpRequest()", span="31-31"];
m2_20 [cluster="lambda expression", file="DefaultBinder.cs", label="Exit lambda expression", span="29-32"];
m2_27 [cluster="lambda expression", file="DefaultBinder.cs", label="with.HttpRequest()", span="47-47"];
m2_28 [cluster="lambda expression", file="DefaultBinder.cs", label="Exit lambda expression", span="45-48"];
m2_10 [cluster="Nancy.Tests.Functional.Tests.ViewBagTests.Should_render_content_from_viewbag()", file="DefaultBinder.cs", label="Entry Nancy.Tests.Functional.Tests.ViewBagTests.Should_render_content_from_viewbag()", span="23-23"];
m2_11 [cluster="Nancy.Tests.Functional.Tests.ViewBagTests.Should_render_content_from_viewbag()", file="DefaultBinder.cs", label="var response = browser.Get(\r\n                @''/razor-viewbag'',\r\n                with =>\r\n                {\r\n                    with.HttpRequest();\r\n                })", span="27-32"];
m2_12 [cluster="Nancy.Tests.Functional.Tests.ViewBagTests.Should_render_content_from_viewbag()", file="DefaultBinder.cs", label="Assert.True(response.Body.AsString().Contains(@''Hello Bob''))", span="35-35"];
m2_13 [cluster="Nancy.Tests.Functional.Tests.ViewBagTests.Should_render_content_from_viewbag()", file="DefaultBinder.cs", label="Exit Nancy.Tests.Functional.Tests.ViewBagTests.Should_render_content_from_viewbag()", span="23-23"];
m2_5 [cluster="Nancy.Testing.Browser.Browser(Nancy.Bootstrapper.INancyBootstrapper)", file="DefaultBinder.cs", label="Entry Nancy.Testing.Browser.Browser(Nancy.Bootstrapper.INancyBootstrapper)", span="25-25"];
m2_29 [file="DefaultBinder.cs", label="Nancy.Tests.Functional.Tests.ViewBagTests", span=""];
m3_0 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.DefaultBinderFixture()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.DefaultBinderFixture()", span="15-15"];
m3_1 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.DefaultBinderFixture()", color=green, community=0, file="DefaultBinderFixture.cs", label="this.passthroughNameConverter = A.Fake<IFieldNameConverter>()", prediction=2, span="17-17"];
m3_2 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.DefaultBinderFixture()", color=green, community=0, file="DefaultBinderFixture.cs", label="A.CallTo(() => this.passthroughNameConverter.Convert(null)).WithAnyArguments()\r\n                .ReturnsLazily(f => (string)f.Arguments[0])", prediction=3, span="18-19"];
m3_3 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.DefaultBinderFixture()", file="DefaultBinderFixture.cs", label="this.emptyDefaults = A.Fake<BindingDefaults>()", span="21-21"];
m3_70 [cluster="Unk.MustHaveHappened", file="DefaultBinderFixture.cs", label="Entry Unk.MustHaveHappened", span=""];
m3_78 [cluster="Unk.Deserialize", file="DefaultBinderFixture.cs", label="Entry Unk.Deserialize", span=""];
m3_94 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_request_content_type_to_can_deserialize()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_request_content_type_to_can_deserialize()", span="103-103"];
m3_99 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_request_content_type_to_can_deserialize()", color=green, community=0, file="DefaultBinderFixture.cs", label="A.CallTo(() => deserializer.CanDeserialize(''application/xml''))\r\n                .MustHaveHappened(Repeated.Exactly.Once)", prediction=4, span="115-116"];
m3_95 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_request_content_type_to_can_deserialize()", file="DefaultBinderFixture.cs", label="var deserializer = A.Fake<IBodyDeserializer>()", span="106-106"];
m3_98 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_request_content_type_to_can_deserialize()", file="DefaultBinderFixture.cs", label="binder.Bind(context, this.GetType())", span="112-112"];
m3_96 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_request_content_type_to_can_deserialize()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder(bodyDeserializers: new[] { deserializer })", span="107-107"];
m3_97 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_request_content_type_to_can_deserialize()", file="DefaultBinderFixture.cs", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="109-109"];
m3_100 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_request_content_type_to_can_deserialize()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_request_content_type_to_can_deserialize()", span="103-103"];
m3_15 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="54-54"];
m3_69 [cluster="Nancy.ModelBinding.IBinder.Bind(Nancy.NancyContext, System.Type, params string[])", file="DefaultBinderFixture.cs", label="Entry Nancy.ModelBinding.IBinder.Bind(Nancy.NancyContext, System.Type, params string[])", span="16-16"];
m3_51 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_defaults_is_null()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_defaults_is_null()", span="57-57"];
m3_52 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_defaults_is_null()", file="DefaultBinderFixture.cs", label="var result = Record.Exception(() => new DefaultBinder(new ITypeConverter[] { }, new IBodyDeserializer[] { }, A.Fake<IFieldNameConverter>(), null))", span="60-60"];
m3_53 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_defaults_is_null()", file="DefaultBinderFixture.cs", label="result.ShouldBeOfType(typeof(ArgumentNullException))", span="63-63"];
m3_54 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_defaults_is_null()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_defaults_is_null()", span="57-57"];
m3_68 [cluster="object.GetType()", file="DefaultBinderFixture.cs", label="Entry object.GetType()", span="0-0"];
m3_115 [cluster="object.ShouldBeSameAs(object)", file="DefaultBinderFixture.cs", label="Entry object.ShouldBeSameAs(object)", span="115-115"];
m3_238 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_body_serializer_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_body_serializer_should_take_precedence_over_default_one()", span="269-269"];
m3_243 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_body_serializer_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs", label="A.CallTo(() => this.emptyDefaults.DefaultBodyDeserializers).Returns(new[] { defaultDeserializer })", span="278-278"];
m3_244 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_body_serializer_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder(bodyDeserializers: new[] { userDeserializer })", span="279-279"];
m3_246 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_body_serializer_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs", label="binder.Bind(context, this.GetType())", span="284-284"];
m3_239 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_body_serializer_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs", label="var userDeserializer = A.Fake<IBodyDeserializer>()", span="272-272"];
m3_241 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_body_serializer_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs", label="var defaultDeserializer = A.Fake<IBodyDeserializer>()", span="275-275"];
m3_240 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_body_serializer_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs", label="A.CallTo(() => userDeserializer.CanDeserialize(null)).WithAnyArguments().Returns(true)", span="273-273"];
m3_247 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_body_serializer_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs", label="A.CallTo(() => userDeserializer.Deserialize(null, null, null)).WithAnyArguments()\r\n                .MustHaveHappened(Repeated.Exactly.Once)", span="287-288"];
m3_242 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_body_serializer_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs", label="A.CallTo(() => defaultDeserializer.CanDeserialize(null)).WithAnyArguments().Returns(true)", span="276-276"];
m3_248 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_body_serializer_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs", label="A.CallTo(() => defaultDeserializer.Deserialize(null, null, null)).WithAnyArguments()\r\n                .MustNotHaveHappened()", span="289-290"];
m3_245 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_body_serializer_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="281-281"];
m3_249 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_body_serializer_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_body_serializer_should_take_precedence_over_default_one()", span="269-269"];
m3_30 [cluster="Unk.ShouldBeOfType", file="DefaultBinderFixture.cs", label="Entry Unk.ShouldBeOfType", span=""];
m3_188 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist()", span="213-213"];
m3_189 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder(typeConverters: new[] { new FallbackConverter() })", span="216-216"];
m3_193 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist()", file="DefaultBinderFixture.cs", label="var result = (TestModel)binder.Bind(context, typeof(TestModel), ''IntProperty'')", span="222-222"];
m3_190 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist()", file="DefaultBinderFixture.cs", label="var context = new NancyContext { Request = new FakeRequest(''GET'', ''/'') }", span="217-217"];
m3_192 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty''] = ''12''", span="219-219"];
m3_194 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist()", file="DefaultBinderFixture.cs", label="result.StringProperty.ShouldEqual(''Test'')", span="225-225"];
m3_195 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist()", file="DefaultBinderFixture.cs", label="result.IntProperty.ShouldEqual(0)", span="226-226"];
m3_191 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist()", file="DefaultBinderFixture.cs", label="context.Request.Form[''StringProperty''] = ''Test''", span="218-218"];
m3_196 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist()", span="213-213"];
m3_177 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_field_name_converter_for_each_field()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_field_name_converter_for_each_field()", span="196-196"];
m3_182 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_field_name_converter_for_each_field()", color=green, community=0, file="DefaultBinderFixture.cs", label="binder.Bind(context, typeof(TestModel))", prediction=5, span="205-205"];
m3_178 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_field_name_converter_for_each_field()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder()", span="199-199"];
m3_179 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_field_name_converter_for_each_field()", file="DefaultBinderFixture.cs", label="var context = new NancyContext { Request = new FakeRequest(''GET'', ''/'') }", span="200-200"];
m3_181 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_field_name_converter_for_each_field()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty''] = ''12''", span="202-202"];
m3_183 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_field_name_converter_for_each_field()", file="DefaultBinderFixture.cs", label="A.CallTo(() => this.passthroughNameConverter.Convert(null)).WithAnyArguments()\r\n                .MustHaveHappened(Repeated.Exactly.Times(2))", span="208-209"];
m3_180 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_field_name_converter_for_each_field()", file="DefaultBinderFixture.cs", label="context.Request.Form[''StringProperty''] = ''Test''", span="201-201"];
m3_184 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_field_name_converter_for_each_field()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_field_name_converter_for_each_field()", span="196-196"];
m3_174 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.GetBinder(System.Collections.Generic.IEnumerable<Nancy.ModelBinding.ITypeConverter>, System.Collections.Generic.IEnumerable<Nancy.ModelBinding.IBodyDeserializer>, Nancy.ModelBinding.IFieldNameConverter, Nancy.ModelBinding.BindingDefaults)", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.GetBinder(System.Collections.Generic.IEnumerable<Nancy.ModelBinding.ITypeConverter>, System.Collections.Generic.IEnumerable<Nancy.ModelBinding.IBodyDeserializer>, Nancy.ModelBinding.IFieldNameConverter, Nancy.ModelBinding.BindingDefaults)", span="318-318"];
m3_303 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.GetBinder(System.Collections.Generic.IEnumerable<Nancy.ModelBinding.ITypeConverter>, System.Collections.Generic.IEnumerable<Nancy.ModelBinding.IBodyDeserializer>, Nancy.ModelBinding.IFieldNameConverter, Nancy.ModelBinding.BindingDefaults)", file="DefaultBinderFixture.cs", label="var converter = nameConverter ?? this.passthroughNameConverter", span="322-322"];
m3_304 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.GetBinder(System.Collections.Generic.IEnumerable<Nancy.ModelBinding.ITypeConverter>, System.Collections.Generic.IEnumerable<Nancy.ModelBinding.IBodyDeserializer>, Nancy.ModelBinding.IFieldNameConverter, Nancy.ModelBinding.BindingDefaults)", file="DefaultBinderFixture.cs", label="var defaults = bindingDefaults ?? this.emptyDefaults", span="323-323"];
m3_302 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.GetBinder(System.Collections.Generic.IEnumerable<Nancy.ModelBinding.ITypeConverter>, System.Collections.Generic.IEnumerable<Nancy.ModelBinding.IBodyDeserializer>, Nancy.ModelBinding.IFieldNameConverter, Nancy.ModelBinding.BindingDefaults)", file="DefaultBinderFixture.cs", label="var deserializers = bodyDeserializers ?? new IBodyDeserializer[] { }", span="321-321"];
m3_305 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.GetBinder(System.Collections.Generic.IEnumerable<Nancy.ModelBinding.ITypeConverter>, System.Collections.Generic.IEnumerable<Nancy.ModelBinding.IBodyDeserializer>, Nancy.ModelBinding.IFieldNameConverter, Nancy.ModelBinding.BindingDefaults)", file="DefaultBinderFixture.cs", label="return new DefaultBinder(converters, deserializers, converter, defaults);", span="325-325"];
m3_301 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.GetBinder(System.Collections.Generic.IEnumerable<Nancy.ModelBinding.ITypeConverter>, System.Collections.Generic.IEnumerable<Nancy.ModelBinding.IBodyDeserializer>, Nancy.ModelBinding.IFieldNameConverter, Nancy.ModelBinding.BindingDefaults)", file="DefaultBinderFixture.cs", label="var converters = typeConverters ?? new ITypeConverter[] { }", span="320-320"];
m3_306 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.GetBinder(System.Collections.Generic.IEnumerable<Nancy.ModelBinding.ITypeConverter>, System.Collections.Generic.IEnumerable<Nancy.ModelBinding.IBodyDeserializer>, Nancy.ModelBinding.IFieldNameConverter, Nancy.ModelBinding.BindingDefaults)", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.GetBinder(System.Collections.Generic.IEnumerable<Nancy.ModelBinding.ITypeConverter>, System.Collections.Generic.IEnumerable<Nancy.ModelBinding.IBodyDeserializer>, Nancy.ModelBinding.IFieldNameConverter, Nancy.ModelBinding.BindingDefaults)", span="318-318"];
m3_311 [cluster="Nancy.Tests.Fakes.FakeRequest.FakeRequest(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Fakes.FakeRequest.FakeRequest(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", span="13-13"];
m3_43 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_field_name_converter_is_null()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_field_name_converter_is_null()", span="47-47"];
m3_44 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_field_name_converter_is_null()", file="DefaultBinderFixture.cs", label="var result = Record.Exception(() => new DefaultBinder(new ITypeConverter[] { }, new IBodyDeserializer[] { }, null, new BindingDefaults()))", span="50-50"];
m3_45 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_field_name_converter_is_null()", file="DefaultBinderFixture.cs", label="result.ShouldBeOfType(typeof(ArgumentNullException))", span="53-53"];
m3_46 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_field_name_converter_is_null()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_field_name_converter_is_null()", span="47-47"];
m3_25 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_type_converters_is_null()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_type_converters_is_null()", span="27-27"];
m3_26 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_type_converters_is_null()", file="DefaultBinderFixture.cs", label="var result = Record.Exception(() => new DefaultBinder(null, new IBodyDeserializer[] { }, A.Fake<IFieldNameConverter>(), new BindingDefaults()))", span="30-30"];
m3_27 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_type_converters_is_null()", file="DefaultBinderFixture.cs", label="result.ShouldBeOfType(typeof(ArgumentNullException))", span="33-33"];
m3_28 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_type_converters_is_null()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_type_converters_is_null()", span="27-27"];
m3_175 [cluster="object.ShouldEqual(object)", file="DefaultBinderFixture.cs", label="Entry object.ShouldEqual(object)", span="80-80"];
m3_4 [cluster="Nancy.StaticContentStartup.Initialize(Nancy.Bootstrapper.IPipelines)", file="DefaultBinderFixture.cs", label="Entry Nancy.StaticContentStartup.Initialize(Nancy.Bootstrapper.IPipelines)", span="49-49"];
m3_6 [cluster="Nancy.StaticContentStartup.Initialize(Nancy.Bootstrapper.IPipelines)", file="DefaultBinderFixture.cs", label="pipelines.BeforeRequest.AddItemToStartOfPipeline(item)", span="58-58"];
m3_34 [cluster="DefaultBinder.cstr", file="DefaultBinderFixture.cs", label="Entry DefaultBinder.cstr", span=""];
m3_197 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_body_deserializer_if_one_found()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_body_deserializer_if_one_found()", span="230-230"];
m3_203 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_body_deserializer_if_one_found()", color=green, community=0, file="DefaultBinderFixture.cs", label="binder.Bind(context, this.GetType())", prediction=3, span="241-241"];
m3_201 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_body_deserializer_if_one_found()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder()", span="236-236"];
m3_202 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_body_deserializer_if_one_found()", file="DefaultBinderFixture.cs", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="238-238"];
m3_204 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_body_deserializer_if_one_found()", file="DefaultBinderFixture.cs", label="A.CallTo(() => deserializer.Deserialize(null, null, null)).WithAnyArguments()\r\n                .MustHaveHappened(Repeated.Exactly.Once)", span="244-245"];
m3_200 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_body_deserializer_if_one_found()", file="DefaultBinderFixture.cs", label="A.CallTo(() => this.emptyDefaults.DefaultBodyDeserializers).Returns(new[] { deserializer })", span="235-235"];
m3_198 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_body_deserializer_if_one_found()", file="DefaultBinderFixture.cs", label="var deserializer = A.Fake<IBodyDeserializer>()", span="233-233"];
m3_199 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_body_deserializer_if_one_found()", file="DefaultBinderFixture.cs", label="A.CallTo(() => deserializer.CanDeserialize(null)).WithAnyArguments().Returns(true)", span="234-234"];
m3_205 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_body_deserializer_if_one_found()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_body_deserializer_if_one_found()", span="230-230"];
m3_18 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="19-19"];
m3_9 [cluster="Unk.WithAnyArguments", file="DefaultBinderFixture.cs", label="Entry Unk.WithAnyArguments", span=""];
m3_87 [cluster="Unk.MustNotHaveHappened", file="DefaultBinderFixture.cs", label="Entry Unk.MustNotHaveHappened", span=""];
m3_142 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_convert_on_type_converter_if_available()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_convert_on_type_converter_if_available()", span="158-158"];
m3_146 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_convert_on_type_converter_if_available()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder(typeConverters: new[] { typeConverter })", span="164-164"];
m3_143 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_convert_on_type_converter_if_available()", file="DefaultBinderFixture.cs", label="var typeConverter = A.Fake<ITypeConverter>()", span="161-161"];
m3_144 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_convert_on_type_converter_if_available()", file="DefaultBinderFixture.cs", label="A.CallTo(() => typeConverter.CanConvertTo(typeof(string))).WithAnyArguments().Returns(true)", span="162-162"];
m3_145 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_convert_on_type_converter_if_available()", file="DefaultBinderFixture.cs", label="A.CallTo(() => typeConverter.Convert(null, null, null)).WithAnyArguments().Returns(null)", span="163-163"];
m3_150 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_convert_on_type_converter_if_available()", file="DefaultBinderFixture.cs", label="A.CallTo(() => typeConverter.Convert(null, null, null)).WithAnyArguments()\r\n                .MustHaveHappened(Repeated.Exactly.Once)", span="172-173"];
m3_149 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_convert_on_type_converter_if_available()", file="DefaultBinderFixture.cs", label="binder.Bind(context, typeof(TestModel))", span="169-169"];
m3_147 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_convert_on_type_converter_if_available()", file="DefaultBinderFixture.cs", label="var context = new NancyContext { Request = new FakeRequest(''GET'', ''/'') }", span="165-165"];
m3_148 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_convert_on_type_converter_if_available()", file="DefaultBinderFixture.cs", label="context.Request.Form[''StringProperty''] = ''Test''", span="166-166"];
m3_151 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_convert_on_type_converter_if_available()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_convert_on_type_converter_if_available()", span="158-158"];
m3_134 [cluster="Unk.Times", file="DefaultBinderFixture.cs", label="Entry Unk.Times", span=""];
m3_66 [cluster="Unk.GetBinder", file="DefaultBinderFixture.cs", label="Entry Unk.GetBinder", span=""];
m3_158 [cluster="Unk.Convert", file="DefaultBinderFixture.cs", label="Entry Unk.Convert", span=""];
m3_133 [cluster="Nancy.Tests.Fakes.FakeRequest.FakeRequest(string, string)", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Fakes.FakeRequest.FakeRequest(string, string)", span="8-8"];
m3_310 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="DefaultBinderFixture.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m3_8 [cluster="Unk.CallTo", file="DefaultBinderFixture.cs", label="Entry Unk.CallTo", span=""];
m3_114 [cluster="object.Object()", file="DefaultBinderFixture.cs", label="Entry object.Object()", span="0-0"];
m3_79 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_call_body_deserializer_if_doesnt_match()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_call_body_deserializer_if_doesnt_match()", span="85-85"];
m3_85 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_call_body_deserializer_if_doesnt_match()", color=green, community=0, file="DefaultBinderFixture.cs", label="A.CallTo(() => deserializer.Deserialize(null, null, null)).WithAnyArguments()\r\n                .MustNotHaveHappened()", prediction=7, span="98-99"];
m3_80 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_call_body_deserializer_if_doesnt_match()", file="DefaultBinderFixture.cs", label="var deserializer = A.Fake<IBodyDeserializer>()", span="88-88"];
m3_84 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_call_body_deserializer_if_doesnt_match()", file="DefaultBinderFixture.cs", label="binder.Bind(context, this.GetType())", span="95-95"];
m3_82 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_call_body_deserializer_if_doesnt_match()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder(bodyDeserializers: new[] { deserializer })", span="90-90"];
m3_81 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_call_body_deserializer_if_doesnt_match()", file="DefaultBinderFixture.cs", label="A.CallTo(() => deserializer.CanDeserialize(null)).WithAnyArguments().Returns(false)", span="89-89"];
m3_83 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_call_body_deserializer_if_doesnt_match()", file="DefaultBinderFixture.cs", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="92-92"];
m3_86 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_call_body_deserializer_if_doesnt_match()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_call_body_deserializer_if_doesnt_match()", span="85-85"];
m3_7 [cluster="Nancy.StaticContentStartup.Initialize(Nancy.Bootstrapper.IPipelines)", file="DefaultBinderFixture.cs", label="Exit Nancy.StaticContentStartup.Initialize(Nancy.Bootstrapper.IPipelines)", span="49-49"];
m3_122 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_see_if_a_type_converter_is_available_for_each_property_on_the_model_where_incoming_value_exists()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_see_if_a_type_converter_is_available_for_each_property_on_the_model_where_incoming_value_exists()", span="139-139"];
m3_125 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_see_if_a_type_converter_is_available_for_each_property_on_the_model_where_incoming_value_exists()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder(typeConverters: new[] { typeConverter })", span="144-144"];
m3_123 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_see_if_a_type_converter_is_available_for_each_property_on_the_model_where_incoming_value_exists()", file="DefaultBinderFixture.cs", label="var typeConverter = A.Fake<ITypeConverter>()", span="142-142"];
m3_124 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_see_if_a_type_converter_is_available_for_each_property_on_the_model_where_incoming_value_exists()", file="DefaultBinderFixture.cs", label="A.CallTo(() => typeConverter.CanConvertTo(null)).WithAnyArguments().Returns(false)", span="143-143"];
m3_130 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_see_if_a_type_converter_is_available_for_each_property_on_the_model_where_incoming_value_exists()", file="DefaultBinderFixture.cs", label="A.CallTo(() => typeConverter.CanConvertTo(null)).WithAnyArguments()\r\n                .MustHaveHappened(Repeated.Exactly.Times(2))", span="153-154"];
m3_129 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_see_if_a_type_converter_is_available_for_each_property_on_the_model_where_incoming_value_exists()", file="DefaultBinderFixture.cs", label="binder.Bind(context, typeof(TestModel))", span="150-150"];
m3_126 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_see_if_a_type_converter_is_available_for_each_property_on_the_model_where_incoming_value_exists()", file="DefaultBinderFixture.cs", label="var context = new NancyContext { Request = new FakeRequest(''GET'', ''/'') }", span="145-145"];
m3_128 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_see_if_a_type_converter_is_available_for_each_property_on_the_model_where_incoming_value_exists()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty''] = ''12''", span="147-147"];
m3_127 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_see_if_a_type_converter_is_available_for_each_property_on_the_model_where_incoming_value_exists()", file="DefaultBinderFixture.cs", label="context.Request.Form[''StringProperty''] = ''Test''", span="146-146"];
m3_131 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_see_if_a_type_converter_is_available_for_each_property_on_the_model_where_incoming_value_exists()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_see_if_a_type_converter_is_available_for_each_property_on_the_model_where_incoming_value_exists()", span="139-139"];
m3_132 [cluster="Nancy.NancyContext.NancyContext()", file="DefaultBinderFixture.cs", label="Entry Nancy.NancyContext.NancyContext()", span="14-14"];
m3_36 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_body_deserializers_is_null()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_body_deserializers_is_null()", span="37-37"];
m3_37 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_body_deserializers_is_null()", file="DefaultBinderFixture.cs", label="var result = Record.Exception(() => new DefaultBinder(new ITypeConverter[] { }, null, A.Fake<IFieldNameConverter>(), new BindingDefaults()))", span="40-40"];
m3_38 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_body_deserializers_is_null()", file="DefaultBinderFixture.cs", label="result.ShouldBeOfType(typeof(ArgumentNullException))", span="43-43"];
m3_39 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_body_deserializers_is_null()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_body_deserializers_is_null()", span="37-37"];
m3_162 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_properties_that_cannot_be_converted()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_properties_that_cannot_be_converted()", span="177-177"];
m3_163 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_properties_that_cannot_be_converted()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder(typeConverters: new[] { new FallbackConverter() })", span="180-180"];
m3_168 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_properties_that_cannot_be_converted()", file="DefaultBinderFixture.cs", label="var result = (TestModel)binder.Bind(context, typeof(TestModel))", span="187-187"];
m3_164 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_properties_that_cannot_be_converted()", file="DefaultBinderFixture.cs", label="var context = new NancyContext { Request = new FakeRequest(''GET'', ''/'') }", span="181-181"];
m3_167 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_properties_that_cannot_be_converted()", file="DefaultBinderFixture.cs", label="context.Request.Form[''DateProperty''] = ''Broken''", span="184-184"];
m3_169 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_properties_that_cannot_be_converted()", file="DefaultBinderFixture.cs", label="result.StringProperty.ShouldEqual(''Test'')", span="190-190"];
m3_170 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_properties_that_cannot_be_converted()", file="DefaultBinderFixture.cs", label="result.IntProperty.ShouldEqual(12)", span="191-191"];
m3_171 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_properties_that_cannot_be_converted()", file="DefaultBinderFixture.cs", label="result.DateProperty.ShouldEqual(default(DateTime))", span="192-192"];
m3_165 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_properties_that_cannot_be_converted()", file="DefaultBinderFixture.cs", label="context.Request.Form[''StringProperty''] = ''Test''", span="182-182"];
m3_166 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_properties_that_cannot_be_converted()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty''] = ''12''", span="183-183"];
m3_172 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_properties_that_cannot_be_converted()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_properties_that_cannot_be_converted()", span="177-177"];
m3_47 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="50-50"];
m3_11 [cluster="Unk.Returns", file="DefaultBinderFixture.cs", label="Entry Unk.Returns", span=""];
m3_16 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="19-19"];
m3_10 [cluster="Unk.ReturnsLazily", file="DefaultBinderFixture.cs", label="Entry Unk.ReturnsLazily", span=""];
m3_12 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="18-18"];
m3_20 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="this.emptyDefaults.DefaultBodyDeserializers", span="22-22"];
m3_17 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="(string)f.Arguments[0]", span="19-19"];
m3_21 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="22-22"];
m3_22 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="23-23"];
m3_13 [cluster="Unk.Select", color=green, community=0, file="DefaultBinderFixture.cs", label="Entry Unk.Select", prediction=3, span=""];
m3_91 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="98-98"];
m3_92 [cluster="lambda expression", color=green, community=0, file="DefaultBinderFixture.cs", label="deserializer.Deserialize(null, null, null)", prediction=7, span="98-98"];
m3_93 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="98-98"];
m3_101 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="115-115"];
m3_102 [cluster="lambda expression", color=green, community=0, file="DefaultBinderFixture.cs", label="deserializer.CanDeserialize(''application/xml'')", prediction=4, span="115-115"];
m3_103 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="115-115"];
m3_23 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Nancy.StaticContentStartup", span=""];
m3_186 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="this.passthroughNameConverter.Convert(null)", span="208-208"];
m3_210 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="this.emptyDefaults.DefaultBodyDeserializers", span="235-235"];
m3_233 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="this.emptyDefaults.DefaultTypeConverters", span="255-255"];
m3_257 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="this.emptyDefaults.DefaultBodyDeserializers", span="278-278"];
m3_293 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="this.emptyDefaults.DefaultTypeConverters", span="303-303"];
m3_32 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="new DefaultBinder(null, new IBodyDeserializer[] { }, A.Fake<IFieldNameConverter>(), new BindingDefaults())", span="30-30"];
m3_41 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="new DefaultBinder(new ITypeConverter[] { }, null, A.Fake<IFieldNameConverter>(), new BindingDefaults())", span="40-40"];
m3_56 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="new DefaultBinder(new ITypeConverter[] { }, new IBodyDeserializer[] { }, A.Fake<IFieldNameConverter>(), null)", span="60-60"];
m3_89 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="deserializer.CanDeserialize(null)", span="89-89"];
m3_76 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="deserializer.Deserialize(null, null, null)", span="80-80"];
m3_120 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="deserializer.Deserialize(null, null, null)", span="126-126"];
m3_213 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="deserializer.Deserialize(null, null, null)", span="244-244"];
m3_260 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="userDeserializer.Deserialize(null, null, null)", span="287-287"];
m3_263 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="defaultDeserializer.Deserialize(null, null, null)", span="289-289"];
m3_72 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="deserializer.CanDeserialize(null)", span="71-71"];
m3_117 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="deserializer.CanDeserialize(null)", span="125-125"];
m3_207 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="deserializer.CanDeserialize(null)", span="234-234"];
m3_251 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="userDeserializer.CanDeserialize(null)", span="273-273"];
m3_254 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="defaultDeserializer.CanDeserialize(null)", span="276-276"];
m3_185 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="208-208"];
m3_212 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="244-244"];
m3_235 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="264-264"];
m3_19 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="DefaultBinderFixture.cs", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
m3_24 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Nancy.NancyContext", span=""];
m3_187 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="208-208"];
m3_209 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="235-235"];
m3_211 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="235-235"];
m3_232 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="255-255"];
m3_234 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="255-255"];
m3_256 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="278-278"];
m3_258 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="278-278"];
m3_292 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="303-303"];
m3_294 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="303-303"];
m3_31 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="30-30"];
m3_33 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="30-30"];
m3_40 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="40-40"];
m3_42 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="40-40"];
m3_55 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="60-60"];
m3_57 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="60-60"];
m3_136 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="typeConverter.CanConvertTo(null)", span="143-143"];
m3_140 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="typeConverter.CanConvertTo(null)", span="153-153"];
m3_153 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="typeConverter.CanConvertTo(typeof(string))", span="162-162"];
m3_156 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="typeConverter.Convert(null, null, null)", span="163-163"];
m3_160 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="typeConverter.Convert(null, null, null)", span="172-172"];
m3_227 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="typeConverter.CanConvertTo(typeof(string))", span="253-253"];
m3_230 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="typeConverter.Convert(null, null, null)", span="254-254"];
m3_236 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="typeConverter.Convert(null, null, null)", span="264-264"];
m3_281 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="userTypeConverter.CanConvertTo(typeof(string))", span="298-298"];
m3_284 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="userTypeConverter.Convert(null, null, null)", span="299-299"];
m3_296 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="userTypeConverter.Convert(null, null, null)", span="312-312"];
m3_287 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="defaultTypeConverter.CanConvertTo(typeof(string))", span="301-301"];
m3_290 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="defaultTypeConverter.Convert(null, null, null)", span="302-302"];
m3_299 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="defaultTypeConverter.Convert(null, null, null)", span="314-314"];
m3_71 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="71-71"];
m3_75 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="80-80"];
m3_88 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="89-89"];
m3_119 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="126-126"];
m3_116 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="125-125"];
m3_135 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="143-143"];
m3_139 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="153-153"];
m3_152 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="162-162"];
m3_155 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="163-163"];
m3_159 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="172-172"];
m3_206 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="234-234"];
m3_226 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="253-253"];
m3_229 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="254-254"];
m3_250 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="273-273"];
m3_259 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="287-287"];
m3_253 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="276-276"];
m3_262 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="289-289"];
m3_280 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="298-298"];
m3_283 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="299-299"];
m3_295 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="312-312"];
m3_286 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="301-301"];
m3_289 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="302-302"];
m3_298 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="314-314"];
m3_90 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="89-89"];
m3_77 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="80-80"];
m3_121 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="126-126"];
m3_214 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="244-244"];
m3_261 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="287-287"];
m3_264 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="289-289"];
m3_73 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="71-71"];
m3_118 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="125-125"];
m3_208 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="234-234"];
m3_252 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="273-273"];
m3_255 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="276-276"];
m3_237 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="264-264"];
m3_48 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="new DefaultBinder(new ITypeConverter[] { }, new IBodyDeserializer[] { }, null, new BindingDefaults())", span="50-50"];
m3_137 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="143-143"];
m3_141 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="153-153"];
m3_154 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="162-162"];
m3_157 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="163-163"];
m3_161 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="172-172"];
m3_228 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="253-253"];
m3_231 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="254-254"];
m3_282 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="298-298"];
m3_285 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="299-299"];
m3_297 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="312-312"];
m3_288 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="301-301"];
m3_291 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="302-302"];
m3_300 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="314-314"];
m3_49 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="50-50"];
m3_67 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.CreateContextWithHeader(string, System.Collections.Generic.IEnumerable<string>)", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.CreateContextWithHeader(string, System.Collections.Generic.IEnumerable<string>)", span="328-328"];
m3_308 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.CreateContextWithHeader(string, System.Collections.Generic.IEnumerable<string>)", file="DefaultBinderFixture.cs", label="return new NancyContext()\r\n            {\r\n                Request = new FakeRequest(''GET'', ''/'', header)\r\n            };", span="335-338"];
m3_307 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.CreateContextWithHeader(string, System.Collections.Generic.IEnumerable<string>)", file="DefaultBinderFixture.cs", label="var header = new Dictionary<string, IEnumerable<string>>\r\n            {\r\n                { name, values }\r\n            }", span="330-333"];
m3_309 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.CreateContextWithHeader(string, System.Collections.Generic.IEnumerable<string>)", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.CreateContextWithHeader(string, System.Collections.Generic.IEnumerable<string>)", span="328-328"];
m3_74 [cluster="Unk.CanDeserialize", file="DefaultBinderFixture.cs", label="Entry Unk.CanDeserialize", span=""];
m3_14 [cluster="Unk.FirstOrDefault", file="DefaultBinderFixture.cs", label="Entry Unk.FirstOrDefault", span=""];
m3_58 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_body_deserializer_if_one_matches()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_body_deserializer_if_one_matches()", span="67-67"];
m3_61 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_body_deserializer_if_one_matches()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder(bodyDeserializers: new[] { deserializer })", span="72-72"];
m3_63 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_body_deserializer_if_one_matches()", file="DefaultBinderFixture.cs", label="binder.Bind(context, this.GetType())", span="77-77"];
m3_59 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_body_deserializer_if_one_matches()", file="DefaultBinderFixture.cs", label="var deserializer = A.Fake<IBodyDeserializer>()", span="70-70"];
m3_60 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_body_deserializer_if_one_matches()", file="DefaultBinderFixture.cs", label="A.CallTo(() => deserializer.CanDeserialize(null)).WithAnyArguments().Returns(true)", span="71-71"];
m3_64 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_body_deserializer_if_one_matches()", file="DefaultBinderFixture.cs", label="A.CallTo(() => deserializer.Deserialize(null, null, null)).WithAnyArguments()\r\n                .MustHaveHappened(Repeated.Exactly.Once)", span="80-81"];
m3_62 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_body_deserializer_if_one_matches()", file="DefaultBinderFixture.cs", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="74-74"];
m3_65 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_body_deserializer_if_one_matches()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_body_deserializer_if_one_matches()", span="67-67"];
m3_173 [cluster="Nancy.ModelBinding.DefaultConverters.FallbackConverter.FallbackConverter()", file="DefaultBinderFixture.cs", label="Entry Nancy.ModelBinding.DefaultConverters.FallbackConverter.FallbackConverter()", span="9-9"];
m3_138 [cluster="Unk.CanConvertTo", file="DefaultBinderFixture.cs", label="Entry Unk.CanConvertTo", span=""];
m3_29 [cluster="Unk.Exception", file="DefaultBinderFixture.cs", label="Entry Unk.Exception", span=""];
m3_35 [cluster="Nancy.ModelBinding.BindingDefaults.BindingDefaults()", file="DefaultBinderFixture.cs", label="Entry Nancy.ModelBinding.BindingDefaults.BindingDefaults()", span="20-20"];
m3_50 [cluster="Nancy.ModelBinding.DefaultBinder.DefaultBinder(System.Collections.Generic.IEnumerable<Nancy.ModelBinding.ITypeConverter>, System.Collections.Generic.IEnumerable<Nancy.ModelBinding.IBodyDeserializer>, Nancy.ModelBinding.IFieldNameConverter, Nancy.ModelBinding.BindingDefaults)", file="DefaultBinderFixture.cs", label="Entry Nancy.ModelBinding.DefaultBinder.DefaultBinder(System.Collections.Generic.IEnumerable<Nancy.ModelBinding.ITypeConverter>, System.Collections.Generic.IEnumerable<Nancy.ModelBinding.IBodyDeserializer>, Nancy.ModelBinding.IFieldNameConverter, Nancy.ModelBinding.BindingDefaults)", span="21-21"];
m3_265 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", span="294-294"];
m3_272 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs", label="A.CallTo(() => this.emptyDefaults.DefaultTypeConverters).Returns(new[] { defaultTypeConverter })", span="303-303"];
m3_273 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder(new[] { userTypeConverter })", span="304-304"];
m3_266 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs", label="var userTypeConverter = A.Fake<ITypeConverter>()", span="297-297"];
m3_269 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs", label="var defaultTypeConverter = A.Fake<ITypeConverter>()", span="300-300"];
m3_267 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs", label="A.CallTo(() => userTypeConverter.CanConvertTo(typeof(string))).WithAnyArguments().Returns(true)", span="298-298"];
m3_268 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs", label="A.CallTo(() => userTypeConverter.Convert(null, null, null)).WithAnyArguments().Returns(null)", span="299-299"];
m3_277 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs", label="A.CallTo(() => userTypeConverter.Convert(null, null, null)).WithAnyArguments()\r\n                .MustHaveHappened(Repeated.Exactly.Once)", span="312-313"];
m3_270 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs", label="A.CallTo(() => defaultTypeConverter.CanConvertTo(typeof(string))).WithAnyArguments().Returns(true)", span="301-301"];
m3_271 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs", label="A.CallTo(() => defaultTypeConverter.Convert(null, null, null)).WithAnyArguments().Returns(null)", span="302-302"];
m3_278 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs", label="A.CallTo(() => defaultTypeConverter.Convert(null, null, null)).WithAnyArguments()\r\n                .MustNotHaveHappened()", span="314-315"];
m3_276 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs", label="binder.Bind(context, typeof(TestModel))", span="309-309"];
m3_274 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs", label="var context = new NancyContext { Request = new FakeRequest(''GET'', ''/'') }", span="305-305"];
m3_275 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs", label="context.Request.Form[''StringProperty''] = ''Test''", span="306-306"];
m3_279 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", span="294-294"];
m3_215 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_type_converter_if_one_found()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_type_converter_if_one_found()", span="249-249"];
m3_223 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_type_converter_if_one_found()", color=green, community=0, file="DefaultBinderFixture.cs", label="binder.Bind(context, typeof(TestModel))", prediction=11, span="261-261"];
m3_220 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_type_converter_if_one_found()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder()", span="256-256"];
m3_221 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_type_converter_if_one_found()", file="DefaultBinderFixture.cs", label="var context = new NancyContext { Request = new FakeRequest(''GET'', ''/'') }", span="257-257"];
m3_222 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_type_converter_if_one_found()", file="DefaultBinderFixture.cs", label="context.Request.Form[''StringProperty''] = ''Test''", span="258-258"];
m3_224 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_type_converter_if_one_found()", file="DefaultBinderFixture.cs", label="A.CallTo(() => typeConverter.Convert(null, null, null)).WithAnyArguments()\r\n                .MustHaveHappened(Repeated.Exactly.Once)", span="264-265"];
m3_219 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_type_converter_if_one_found()", file="DefaultBinderFixture.cs", label="A.CallTo(() => this.emptyDefaults.DefaultTypeConverters).Returns(new[] { typeConverter })", span="255-255"];
m3_216 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_type_converter_if_one_found()", file="DefaultBinderFixture.cs", label="var typeConverter = A.Fake<ITypeConverter>()", span="252-252"];
m3_217 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_type_converter_if_one_found()", file="DefaultBinderFixture.cs", label="A.CallTo(() => typeConverter.CanConvertTo(typeof(string))).WithAnyArguments().Returns(true)", span="253-253"];
m3_218 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_type_converter_if_one_found()", file="DefaultBinderFixture.cs", label="A.CallTo(() => typeConverter.Convert(null, null, null)).WithAnyArguments().Returns(null)", span="254-254"];
m3_225 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_type_converter_if_one_found()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_type_converter_if_one_found()", span="249-249"];
m3_176 [cluster="System.DateTime.ShouldEqual(System.DateTime)", file="DefaultBinderFixture.cs", label="Entry System.DateTime.ShouldEqual(System.DateTime)", span="85-85"];
m3_104 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_return_object_from_deserializer_if_one_returned()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_return_object_from_deserializer_if_one_returned()", span="120-120"];
m3_109 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_return_object_from_deserializer_if_one_returned()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder(bodyDeserializers: new[] { deserializer })", span="127-127"];
m3_111 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_return_object_from_deserializer_if_one_returned()", file="DefaultBinderFixture.cs", label="var result = binder.Bind(context, this.GetType())", span="132-132"];
m3_106 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_return_object_from_deserializer_if_one_returned()", file="DefaultBinderFixture.cs", label="var deserializer = A.Fake<IBodyDeserializer>()", span="124-124"];
m3_108 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_return_object_from_deserializer_if_one_returned()", file="DefaultBinderFixture.cs", label="A.CallTo(() => deserializer.Deserialize(null, null, null)).WithAnyArguments().Returns(modelObject)", span="126-126"];
m3_107 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_return_object_from_deserializer_if_one_returned()", file="DefaultBinderFixture.cs", label="A.CallTo(() => deserializer.CanDeserialize(null)).WithAnyArguments().Returns(true)", span="125-125"];
m3_110 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_return_object_from_deserializer_if_one_returned()", file="DefaultBinderFixture.cs", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="129-129"];
m3_112 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_return_object_from_deserializer_if_one_returned()", file="DefaultBinderFixture.cs", label="result.ShouldBeSameAs(modelObject)", span="135-135"];
m3_105 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_return_object_from_deserializer_if_one_returned()", file="DefaultBinderFixture.cs", label="var modelObject = new object()", span="123-123"];
m3_113 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_return_object_from_deserializer_if_one_returned()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_return_object_from_deserializer_if_one_returned()", span="120-120"];
m3_312 [file="DefaultBinderFixture.cs", label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", span=""];
m3_314 [file="DefaultBinderFixture.cs", label=deserializer, span=""];
m3_315 [file="DefaultBinderFixture.cs", label=deserializer, span=""];
m3_313 [file="DefaultBinderFixture.cs", label=deserializer, span=""];
m3_316 [file="DefaultBinderFixture.cs", label=deserializer, span=""];
m3_319 [file="DefaultBinderFixture.cs", label=deserializer, span=""];
m3_321 [file="DefaultBinderFixture.cs", label=userDeserializer, span=""];
m3_322 [file="DefaultBinderFixture.cs", label=defaultDeserializer, span=""];
m3_317 [file="DefaultBinderFixture.cs", label=typeConverter, span=""];
m3_318 [file="DefaultBinderFixture.cs", label=typeConverter, span=""];
m3_320 [file="DefaultBinderFixture.cs", label=typeConverter, span=""];
m3_323 [file="DefaultBinderFixture.cs", label=userTypeConverter, span=""];
m3_324 [file="DefaultBinderFixture.cs", label=defaultTypeConverter, span=""];
m4_9 [cluster="System.Text.RegularExpressions.Regex.Match(string)", file="DefaultRoutePatternMatcher.cs", label="Entry System.Text.RegularExpressions.Regex.Match(string)", span="0-0"];
m4_6 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.GetOrAdd(TKey, System.Func<TKey, TValue>)", file="DefaultRoutePatternMatcher.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.GetOrAdd(TKey, System.Func<TKey, TValue>)", span="0-0"];
m4_51 [cluster="string.Format(System.IFormatProvider, string, object)", file="DefaultRoutePatternMatcher.cs", label="Entry string.Format(System.IFormatProvider, string, object)", span="0-0"];
m4_49 [cluster="string.IsParameterized()", file="DefaultRoutePatternMatcher.cs", label="Entry string.IsParameterized()", span="44-44"];
m4_15 [cluster="Nancy.Routing.DefaultRoutePatternMatcher.BuildRegexMatcher(string)", file="DefaultRoutePatternMatcher.cs", label="Entry Nancy.Routing.DefaultRoutePatternMatcher.BuildRegexMatcher(string)", span="39-39"];
m4_22 [cluster="Nancy.Routing.DefaultRoutePatternMatcher.BuildRegexMatcher(string)", file="DefaultRoutePatternMatcher.cs", label="var segments =\r\n                path.Split(new[] { ''/'' }, StringSplitOptions.RemoveEmptyEntries)", span="41-42"];
m4_23 [cluster="Nancy.Routing.DefaultRoutePatternMatcher.BuildRegexMatcher(string)", file="DefaultRoutePatternMatcher.cs", label="var parameterizedSegments =\r\n                GetParameterizedSegments(segments)", span="44-45"];
m4_24 [cluster="Nancy.Routing.DefaultRoutePatternMatcher.BuildRegexMatcher(string)", file="DefaultRoutePatternMatcher.cs", label="var pattern =\r\n                string.Concat(@''^/'', string.Join(''/'', parameterizedSegments), @''$'')", span="47-48"];
m4_25 [cluster="Nancy.Routing.DefaultRoutePatternMatcher.BuildRegexMatcher(string)", file="DefaultRoutePatternMatcher.cs", label="return new Regex(pattern, RegexOptions.Compiled | RegexOptions.IgnoreCase);", span="50-50"];
m4_26 [cluster="Nancy.Routing.DefaultRoutePatternMatcher.BuildRegexMatcher(string)", file="DefaultRoutePatternMatcher.cs", label="Exit Nancy.Routing.DefaultRoutePatternMatcher.BuildRegexMatcher(string)", span="39-39"];
m4_11 [cluster="Nancy.Routing.DefaultRoutePatternMatcher.GetParameters(System.Text.RegularExpressions.Regex, System.Text.RegularExpressions.GroupCollection)", file="DefaultRoutePatternMatcher.cs", label="Entry Nancy.Routing.DefaultRoutePatternMatcher.GetParameters(System.Text.RegularExpressions.Regex, System.Text.RegularExpressions.GroupCollection)", span="53-53"];
m4_32 [cluster="Nancy.Routing.DefaultRoutePatternMatcher.GetParameters(System.Text.RegularExpressions.Regex, System.Text.RegularExpressions.GroupCollection)", file="DefaultRoutePatternMatcher.cs", label="dynamic data = new DynamicDictionary()", span="55-55"];
m4_34 [cluster="Nancy.Routing.DefaultRoutePatternMatcher.GetParameters(System.Text.RegularExpressions.Regex, System.Text.RegularExpressions.GroupCollection)", file="DefaultRoutePatternMatcher.cs", label="i <= groups.Count", span="57-57"];
m4_35 [cluster="Nancy.Routing.DefaultRoutePatternMatcher.GetParameters(System.Text.RegularExpressions.Regex, System.Text.RegularExpressions.GroupCollection)", file="DefaultRoutePatternMatcher.cs", label="data[regex.GroupNameFromNumber(i)] = Uri.UnescapeDataString(groups[i].Value)", span="59-59"];
m4_33 [cluster="Nancy.Routing.DefaultRoutePatternMatcher.GetParameters(System.Text.RegularExpressions.Regex, System.Text.RegularExpressions.GroupCollection)", file="DefaultRoutePatternMatcher.cs", label="int i = 1", span="57-57"];
m4_37 [cluster="Nancy.Routing.DefaultRoutePatternMatcher.GetParameters(System.Text.RegularExpressions.Regex, System.Text.RegularExpressions.GroupCollection)", file="DefaultRoutePatternMatcher.cs", label="return data;", span="62-62"];
m4_36 [cluster="Nancy.Routing.DefaultRoutePatternMatcher.GetParameters(System.Text.RegularExpressions.Regex, System.Text.RegularExpressions.GroupCollection)", file="DefaultRoutePatternMatcher.cs", label="i++", span="57-57"];
m4_38 [cluster="Nancy.Routing.DefaultRoutePatternMatcher.GetParameters(System.Text.RegularExpressions.Regex, System.Text.RegularExpressions.GroupCollection)", file="DefaultRoutePatternMatcher.cs", label="Exit Nancy.Routing.DefaultRoutePatternMatcher.GetParameters(System.Text.RegularExpressions.Regex, System.Text.RegularExpressions.GroupCollection)", span="53-53"];
m4_8 [cluster="Nancy.Helpers.HttpUtility.UrlDecode(string)", file="DefaultRoutePatternMatcher.cs", label="Entry Nancy.Helpers.HttpUtility.UrlDecode(string)", span="103-103"];
m4_20 [cluster="string.Equals(string)", file="DefaultRoutePatternMatcher.cs", label="Entry string.Equals(string)", span="0-0"];
m4_41 [cluster="System.Uri.UnescapeDataString(string)", file="DefaultRoutePatternMatcher.cs", label="Entry System.Uri.UnescapeDataString(string)", span="0-0"];
m4_52 [cluster="string.Replace(string, string)", file="DefaultRoutePatternMatcher.cs", label="Entry string.Replace(string, string)", span="0-0"];
m4_27 [cluster="string.Split(string[], System.StringSplitOptions)", file="DefaultRoutePatternMatcher.cs", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
m4_21 [cluster="string.TrimEnd(params char[])", file="DefaultRoutePatternMatcher.cs", label="Entry string.TrimEnd(params char[])", span="0-0"];
m4_29 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="DefaultRoutePatternMatcher.cs", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
m4_50 [cluster="string.GetParameterName()", file="DefaultRoutePatternMatcher.cs", label="Entry string.GetParameterName()", span="24-24"];
m4_40 [cluster="System.Text.RegularExpressions.Regex.GroupNameFromNumber(int)", file="DefaultRoutePatternMatcher.cs", label="Entry System.Text.RegularExpressions.Regex.GroupNameFromNumber(int)", span="0-0"];
m4_10 [cluster="Nancy.Routing.RoutePatternMatchResult.RoutePatternMatchResult(bool, Nancy.DynamicDictionary)", file="DefaultRoutePatternMatcher.cs", label="Entry Nancy.Routing.RoutePatternMatchResult.RoutePatternMatchResult(bool, Nancy.DynamicDictionary)", span="12-12"];
m4_12 [cluster="lambda expression", file="DefaultRoutePatternMatcher.cs", label="Entry lambda expression", span="19-19"];
m4_13 [cluster="lambda expression", file="DefaultRoutePatternMatcher.cs", label="BuildRegexMatcher(routePath)", span="19-19"];
m4_14 [cluster="lambda expression", file="DefaultRoutePatternMatcher.cs", label="Exit lambda expression", span="19-19"];
m4_31 [cluster="System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", file="DefaultRoutePatternMatcher.cs", label="Entry System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", span="0-0"];
m4_30 [cluster="string.Concat(string, string, string)", file="DefaultRoutePatternMatcher.cs", label="Entry string.Concat(string, string, string)", span="0-0"];
m4_0 [cluster="Nancy.Routing.DefaultRoutePatternMatcher.Match(string, string)", file="DefaultRoutePatternMatcher.cs", label="Entry Nancy.Routing.DefaultRoutePatternMatcher.Match(string, string)", span="17-17"];
m4_1 [cluster="Nancy.Routing.DefaultRoutePatternMatcher.Match(string, string)", file="DefaultRoutePatternMatcher.cs", label="var routePathPattern = this.matcherCache.GetOrAdd(routePath, (s) => BuildRegexMatcher(routePath))", span="19-19"];
m4_2 [cluster="Nancy.Routing.DefaultRoutePatternMatcher.Match(string, string)", file="DefaultRoutePatternMatcher.cs", label="requestedPath = TrimTrailingSlashFromRequestedPath(requestedPath)", span="21-21"];
m4_4 [cluster="Nancy.Routing.DefaultRoutePatternMatcher.Match(string, string)", file="DefaultRoutePatternMatcher.cs", label="return new RoutePatternMatchResult(\r\n                match.Success,\r\n                GetParameters(routePathPattern, match.Groups));", span="24-26"];
m4_5 [cluster="Nancy.Routing.DefaultRoutePatternMatcher.Match(string, string)", file="DefaultRoutePatternMatcher.cs", label="Exit Nancy.Routing.DefaultRoutePatternMatcher.Match(string, string)", span="17-17"];
m4_39 [cluster="Nancy.DynamicDictionary.DynamicDictionary()", file="DefaultRoutePatternMatcher.cs", label="Entry Nancy.DynamicDictionary.DynamicDictionary()", span="6-6"];
m4_7 [cluster="Nancy.Routing.DefaultRoutePatternMatcher.TrimTrailingSlashFromRequestedPath(string)", file="DefaultRoutePatternMatcher.cs", label="Entry Nancy.Routing.DefaultRoutePatternMatcher.TrimTrailingSlashFromRequestedPath(string)", span="29-29"];
m4_16 [cluster="Nancy.Routing.DefaultRoutePatternMatcher.TrimTrailingSlashFromRequestedPath(string)", file="DefaultRoutePatternMatcher.cs", label="!requestedPath.Equals(''/'')", span="31-31"];
m4_17 [cluster="Nancy.Routing.DefaultRoutePatternMatcher.TrimTrailingSlashFromRequestedPath(string)", file="DefaultRoutePatternMatcher.cs", label="requestedPath = requestedPath.TrimEnd('/')", span="33-33"];
m4_18 [cluster="Nancy.Routing.DefaultRoutePatternMatcher.TrimTrailingSlashFromRequestedPath(string)", file="DefaultRoutePatternMatcher.cs", label="return requestedPath;", span="36-36"];
m4_19 [cluster="Nancy.Routing.DefaultRoutePatternMatcher.TrimTrailingSlashFromRequestedPath(string)", file="DefaultRoutePatternMatcher.cs", label="Exit Nancy.Routing.DefaultRoutePatternMatcher.TrimTrailingSlashFromRequestedPath(string)", span="29-29"];
m4_28 [cluster="Nancy.Routing.DefaultRoutePatternMatcher.GetParameterizedSegments(System.Collections.Generic.IEnumerable<string>)", file="DefaultRoutePatternMatcher.cs", label="Entry Nancy.Routing.DefaultRoutePatternMatcher.GetParameterizedSegments(System.Collections.Generic.IEnumerable<string>)", span="65-65"];
m4_42 [cluster="Nancy.Routing.DefaultRoutePatternMatcher.GetParameterizedSegments(System.Collections.Generic.IEnumerable<string>)", file="DefaultRoutePatternMatcher.cs", label=segments, span="67-67"];
m4_47 [cluster="Nancy.Routing.DefaultRoutePatternMatcher.GetParameterizedSegments(System.Collections.Generic.IEnumerable<string>)", file="DefaultRoutePatternMatcher.cs", label="yield return current;", span="78-78"];
m4_43 [cluster="Nancy.Routing.DefaultRoutePatternMatcher.GetParameterizedSegments(System.Collections.Generic.IEnumerable<string>)", color=green, community=0, file="DefaultRoutePatternMatcher.cs", label="var current = segment", prediction=12, span="69-69"];
m4_46 [cluster="Nancy.Routing.DefaultRoutePatternMatcher.GetParameterizedSegments(System.Collections.Generic.IEnumerable<string>)", file="DefaultRoutePatternMatcher.cs", label="current = segment.Replace(segment, replacement)", span="75-75"];
m4_44 [cluster="Nancy.Routing.DefaultRoutePatternMatcher.GetParameterizedSegments(System.Collections.Generic.IEnumerable<string>)", file="DefaultRoutePatternMatcher.cs", label="current.IsParameterized()", span="70-70"];
m4_48 [cluster="Nancy.Routing.DefaultRoutePatternMatcher.GetParameterizedSegments(System.Collections.Generic.IEnumerable<string>)", file="DefaultRoutePatternMatcher.cs", label="Exit Nancy.Routing.DefaultRoutePatternMatcher.GetParameterizedSegments(System.Collections.Generic.IEnumerable<string>)", span="65-65"];
m4_53 [file="DefaultRoutePatternMatcher.cs", label="Nancy.Routing.DefaultRoutePatternMatcher", span=""];
m4_54 [file="DefaultRoutePatternMatcher.cs", label=string, span=""];
m5_18 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_return_match_result_when_paths_matched()", file="DefaultRoutePatternMatcherFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_return_match_result_when_paths_matched()", span="47-47"];
m5_19 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_return_match_result_when_paths_matched()", file="DefaultRoutePatternMatcherFixture.cs", label="var results = this.matcher.Match(''/foo/bar'', ''/foo/bar'')", span="50-50"];
m5_20 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_return_match_result_when_paths_matched()", file="DefaultRoutePatternMatcherFixture.cs", label="results.IsMatch.ShouldBeTrue()", span="53-53"];
m5_21 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_return_match_result_when_paths_matched()", file="DefaultRoutePatternMatcherFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_return_match_result_when_paths_matched()", span="47-47"];
m5_14 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_ignore_trailing_slash_on_request_uri()", file="DefaultRoutePatternMatcherFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_ignore_trailing_slash_on_request_uri()", span="37-37"];
m5_15 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_ignore_trailing_slash_on_request_uri()", file="DefaultRoutePatternMatcherFixture.cs", label="var results = this.matcher.Match(''/foo/bar/'', ''/foo/bar'')", span="40-40"];
m5_16 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_ignore_trailing_slash_on_request_uri()", file="DefaultRoutePatternMatcherFixture.cs", label="results.IsMatch.ShouldBeTrue()", span="43-43"];
m5_17 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_ignore_trailing_slash_on_request_uri()", file="DefaultRoutePatternMatcherFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_ignore_trailing_slash_on_request_uri()", span="37-37"];
m5_9 [cluster="bool.ShouldBeTrue()", file="DefaultRoutePatternMatcherFixture.cs", label="Entry bool.ShouldBeTrue()", span="70-70"];
m5_36 [cluster="object.ShouldEqual(object)", file="DefaultRoutePatternMatcherFixture.cs", label="Entry object.ShouldEqual(object)", span="80-80"];
m5_27 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_be_case_insensitive_when_checking_for_match()", file="DefaultRoutePatternMatcherFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_be_case_insensitive_when_checking_for_match()", span="67-67"];
m5_28 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_be_case_insensitive_when_checking_for_match()", file="DefaultRoutePatternMatcherFixture.cs", label="var results = this.matcher.Match(''/FoO/baR'', ''/fOO/bAr'')", span="70-70"];
m5_29 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_be_case_insensitive_when_checking_for_match()", file="DefaultRoutePatternMatcherFixture.cs", label="results.IsMatch.ShouldBeTrue()", span="73-73"];
m5_30 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_be_case_insensitive_when_checking_for_match()", file="DefaultRoutePatternMatcherFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_be_case_insensitive_when_checking_for_match()", span="67-67"];
m5_37 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_treat_parameters_as_greedy()", file="DefaultRoutePatternMatcherFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_treat_parameters_as_greedy()", span="88-88"];
m5_38 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_treat_parameters_as_greedy()", file="DefaultRoutePatternMatcherFixture.cs", label="var results = this.matcher.Match(''/foo/bar/baz'', ''/foo/{bar}'')", span="91-91"];
m5_39 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_treat_parameters_as_greedy()", file="DefaultRoutePatternMatcherFixture.cs", label="((string)results.Parameters[''bar'']).ShouldEqual(''bar/baz'')", span="94-94"];
m5_40 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_treat_parameters_as_greedy()", file="DefaultRoutePatternMatcherFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_treat_parameters_as_greedy()", span="88-88"];
m5_47 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_allow_regex_in_route_definition_and_return_negative_result_when_it_does_not_match()", file="DefaultRoutePatternMatcherFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_allow_regex_in_route_definition_and_return_negative_result_when_it_does_not_match()", span="110-110"];
m5_48 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_allow_regex_in_route_definition_and_return_negative_result_when_it_does_not_match()", file="DefaultRoutePatternMatcherFixture.cs", label="var results = this.matcher.Match(''/foo/bar'', @''/foo/(?<bar>[0-9]*)'')", span="113-113"];
m5_49 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_allow_regex_in_route_definition_and_return_negative_result_when_it_does_not_match()", file="DefaultRoutePatternMatcherFixture.cs", label="results.IsMatch.ShouldBeFalse()", span="116-116"];
m5_50 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_allow_regex_in_route_definition_and_return_negative_result_when_it_does_not_match()", file="DefaultRoutePatternMatcherFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_allow_regex_in_route_definition_and_return_negative_result_when_it_does_not_match()", span="110-110"];
m5_58 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_allow_all_of_the_unreserved_rfc_1738_characters_in_the_uri()", file="DefaultRoutePatternMatcherFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_allow_all_of_the_unreserved_rfc_1738_characters_in_the_uri()", span="134-134"];
m5_60 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_allow_all_of_the_unreserved_rfc_1738_characters_in_the_uri()", file="DefaultRoutePatternMatcherFixture.cs", label="var results = this.matcher.Match(''/foo/'' + parameter, ''/foo/{bar}'')", span="140-140"];
m5_61 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_allow_all_of_the_unreserved_rfc_1738_characters_in_the_uri()", file="DefaultRoutePatternMatcherFixture.cs", label="((string)results.Parameters[''bar'']).ShouldEqual(parameter)", span="143-143"];
m5_62 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_allow_all_of_the_unreserved_rfc_1738_characters_in_the_uri()", file="DefaultRoutePatternMatcherFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_allow_all_of_the_unreserved_rfc_1738_characters_in_the_uri()", span="134-134"];
m5_0 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.DefaultRoutePatternMatcherFixture()", file="DefaultRoutePatternMatcherFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.DefaultRoutePatternMatcherFixture()", span="11-11"];
m5_1 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.DefaultRoutePatternMatcherFixture()", file="DefaultRoutePatternMatcherFixture.cs", label="this.matcher = new DefaultRoutePatternMatcher()", span="13-13"];
m5_2 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.DefaultRoutePatternMatcherFixture()", file="DefaultRoutePatternMatcherFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.DefaultRoutePatternMatcherFixture()", span="11-11"];
m5_8 [cluster="Nancy.Routing.DefaultRoutePatternMatcher.Match(string, string)", file="DefaultRoutePatternMatcherFixture.cs", label="Entry Nancy.Routing.DefaultRoutePatternMatcher.Match(string, string)", span="17-17"];
m5_26 [cluster="bool.ShouldBeFalse()", file="DefaultRoutePatternMatcherFixture.cs", label="Entry bool.ShouldBeFalse()", span="75-75"];
m5_51 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_properly_handle_uri_escaped_route_parameters_that_were_matched()", file="DefaultRoutePatternMatcherFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_properly_handle_uri_escaped_route_parameters_that_were_matched()", span="120-120"];
m5_53 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_properly_handle_uri_escaped_route_parameters_that_were_matched()", file="DefaultRoutePatternMatcherFixture.cs", label="var escapedParameter = Uri.EscapeUriString(parameter)", span="124-124"];
m5_55 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_properly_handle_uri_escaped_route_parameters_that_were_matched()", file="DefaultRoutePatternMatcherFixture.cs", label="((string)results.Parameters[''bar'']).ShouldEqual(parameter)", span="130-130"];
m5_54 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_properly_handle_uri_escaped_route_parameters_that_were_matched()", file="DefaultRoutePatternMatcherFixture.cs", label="var results = this.matcher.Match(''/foo/'' + escapedParameter, ''/foo/{bar}'')", span="127-127"];
m5_56 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_properly_handle_uri_escaped_route_parameters_that_were_matched()", file="DefaultRoutePatternMatcherFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_properly_handle_uri_escaped_route_parameters_that_were_matched()", span="120-120"];
m5_57 [cluster="System.Uri.EscapeUriString(string)", file="DefaultRoutePatternMatcherFixture.cs", label="Entry System.Uri.EscapeUriString(string)", span="0-0"];
m5_10 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_ignore_trailing_slash_on_route_path()", file="DefaultRoutePatternMatcherFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_ignore_trailing_slash_on_route_path()", span="27-27"];
m5_11 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_ignore_trailing_slash_on_route_path()", file="DefaultRoutePatternMatcherFixture.cs", label="var results = this.matcher.Match(''/foo/bar'', ''/foo/bar/'')", span="30-30"];
m5_12 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_ignore_trailing_slash_on_route_path()", file="DefaultRoutePatternMatcherFixture.cs", label="results.IsMatch.ShouldBeTrue()", span="33-33"];
m5_13 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_ignore_trailing_slash_on_route_path()", file="DefaultRoutePatternMatcherFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_ignore_trailing_slash_on_route_path()", span="27-27"];
m5_31 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_capture_parameters()", file="DefaultRoutePatternMatcherFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_capture_parameters()", span="77-77"];
m5_32 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_capture_parameters()", file="DefaultRoutePatternMatcherFixture.cs", label="var results = this.matcher.Match(''/foo/bar/baz'', ''/foo/{bar}/{baz}'')", span="80-80"];
m5_33 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_capture_parameters()", file="DefaultRoutePatternMatcherFixture.cs", label="((string)results.Parameters[''bar'']).ShouldEqual(''bar'')", span="83-83"];
m5_34 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_capture_parameters()", file="DefaultRoutePatternMatcherFixture.cs", label="((string)results.Parameters[''baz'']).ShouldEqual(''baz'')", span="84-84"];
m5_35 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_capture_parameters()", file="DefaultRoutePatternMatcherFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_capture_parameters()", span="77-77"];
m5_3 [cluster="Nancy.Routing.DefaultRoutePatternMatcher.DefaultRoutePatternMatcher()", file="DefaultRoutePatternMatcherFixture.cs", label="Entry Nancy.Routing.DefaultRoutePatternMatcher.DefaultRoutePatternMatcher()", span="13-13"];
m5_41 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_allow_regex_in_route_definition_and_capture_specified_parameters()", file="DefaultRoutePatternMatcherFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_allow_regex_in_route_definition_and_capture_specified_parameters()", span="98-98"];
m5_42 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_allow_regex_in_route_definition_and_capture_specified_parameters()", file="DefaultRoutePatternMatcherFixture.cs", label="var results = this.matcher.Match(''/foo/1234'', @''/(?<foo>foo)/(?<bar>\d{4})/'')", span="101-101"];
m5_43 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_allow_regex_in_route_definition_and_capture_specified_parameters()", file="DefaultRoutePatternMatcherFixture.cs", label="results.IsMatch.ShouldBeTrue()", span="104-104"];
m5_44 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_allow_regex_in_route_definition_and_capture_specified_parameters()", file="DefaultRoutePatternMatcherFixture.cs", label="((string)results.Parameters[''foo'']).ShouldEqual(''foo'')", span="105-105"];
m5_45 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_allow_regex_in_route_definition_and_capture_specified_parameters()", file="DefaultRoutePatternMatcherFixture.cs", label="((string)results.Parameters[''bar'']).ShouldEqual(''1234'')", span="106-106"];
m5_46 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_allow_regex_in_route_definition_and_capture_specified_parameters()", file="DefaultRoutePatternMatcherFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_allow_regex_in_route_definition_and_capture_specified_parameters()", span="98-98"];
m5_22 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_return_negative_match_result_when_paths_does_not_match()", file="DefaultRoutePatternMatcherFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_return_negative_match_result_when_paths_does_not_match()", span="57-57"];
m5_23 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_return_negative_match_result_when_paths_does_not_match()", file="DefaultRoutePatternMatcherFixture.cs", label="var results = this.matcher.Match(''/foo/bar'', ''/bar/foo'')", span="60-60"];
m5_24 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_return_negative_match_result_when_paths_does_not_match()", file="DefaultRoutePatternMatcherFixture.cs", label="results.IsMatch.ShouldBeFalse()", span="63-63"];
m5_25 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_return_negative_match_result_when_paths_does_not_match()", file="DefaultRoutePatternMatcherFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_return_negative_match_result_when_paths_does_not_match()", span="57-57"];
m5_4 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_not_trim_trailing_slash_if_requesting_root()", file="DefaultRoutePatternMatcherFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_not_trim_trailing_slash_if_requesting_root()", span="17-17"];
m5_5 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_not_trim_trailing_slash_if_requesting_root()", file="DefaultRoutePatternMatcherFixture.cs", label="var results = this.matcher.Match(''/'', ''/'')", span="20-20"];
m5_6 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_not_trim_trailing_slash_if_requesting_root()", file="DefaultRoutePatternMatcherFixture.cs", label="results.IsMatch.ShouldBeTrue()", span="23-23"];
m5_7 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_not_trim_trailing_slash_if_requesting_root()", file="DefaultRoutePatternMatcherFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_not_trim_trailing_slash_if_requesting_root()", span="17-17"];
m5_63 [file="DefaultRoutePatternMatcherFixture.cs", label="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture", span=""];
m6_43 [cluster="string.Replace(string, string)", file="DynamicDictionary.cs", label="Entry string.Replace(string, string)", span="0-0"];
m6_28 [cluster="Nancy.DynamicDictionary.Equals(object)", file="DynamicDictionary.cs", label="Entry Nancy.DynamicDictionary.Equals(object)", span="119-119"];
m6_29 [cluster="Nancy.DynamicDictionary.Equals(object)", file="DynamicDictionary.cs", label="ReferenceEquals(null, obj)", span="121-121"];
m6_31 [cluster="Nancy.DynamicDictionary.Equals(object)", file="DynamicDictionary.cs", label="ReferenceEquals(this, obj)", span="126-126"];
m6_33 [cluster="Nancy.DynamicDictionary.Equals(object)", file="DynamicDictionary.cs", label="return obj.GetType() == typeof (DynamicDictionary) && this.Equals((DynamicDictionary) obj);", span="131-131"];
m6_30 [cluster="Nancy.DynamicDictionary.Equals(object)", file="DynamicDictionary.cs", label="return false;", span="123-123"];
m6_32 [cluster="Nancy.DynamicDictionary.Equals(object)", file="DynamicDictionary.cs", label="return true;", span="128-128"];
m6_34 [cluster="Nancy.DynamicDictionary.Equals(object)", file="DynamicDictionary.cs", label="Exit Nancy.DynamicDictionary.Equals(object)", span="119-119"];
m6_17 [cluster="Nancy.DynamicDictionaryValue.DynamicDictionaryValue(object)", file="DynamicDictionary.cs", label="Entry Nancy.DynamicDictionaryValue.DynamicDictionaryValue(object)", span="15-15"];
m6_16 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="DynamicDictionary.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m6_11 [cluster="Nancy.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder, out object)", file="DynamicDictionary.cs", label="Entry Nancy.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder, out object)", span="55-55"];
m6_12 [cluster="Nancy.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder, out object)", file="DynamicDictionary.cs", label="!dictionary.TryGetValue(binder.Name, out result)", span="57-57"];
m6_13 [cluster="Nancy.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder, out object)", file="DynamicDictionary.cs", label="result = new DynamicDictionaryValue(null)", span="59-59"];
m6_14 [cluster="Nancy.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder, out object)", file="DynamicDictionary.cs", label="return true;", span="62-62"];
m6_15 [cluster="Nancy.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder, out object)", file="DynamicDictionary.cs", label="Exit Nancy.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder, out object)", span="55-55"];
m6_21 [cluster="Nancy.DynamicDictionary.Equals(Nancy.DynamicDictionary)", file="DynamicDictionary.cs", label="Entry Nancy.DynamicDictionary.Equals(Nancy.DynamicDictionary)", span="104-104"];
m6_22 [cluster="Nancy.DynamicDictionary.Equals(Nancy.DynamicDictionary)", file="DynamicDictionary.cs", label="ReferenceEquals(null, other)", span="106-106"];
m6_24 [cluster="Nancy.DynamicDictionary.Equals(Nancy.DynamicDictionary)", file="DynamicDictionary.cs", label="return ReferenceEquals(this, other) || Equals(other.dictionary, this.dictionary);", span="111-111"];
m6_23 [cluster="Nancy.DynamicDictionary.Equals(Nancy.DynamicDictionary)", file="DynamicDictionary.cs", label="return false;", span="108-108"];
m6_25 [cluster="Nancy.DynamicDictionary.Equals(Nancy.DynamicDictionary)", file="DynamicDictionary.cs", label="Exit Nancy.DynamicDictionary.Equals(Nancy.DynamicDictionary)", span="104-104"];
m6_7 [cluster="Nancy.DynamicDictionary.TrySetMember(System.Dynamic.SetMemberBinder, object)", file="DynamicDictionary.cs", label="Entry Nancy.DynamicDictionary.TrySetMember(System.Dynamic.SetMemberBinder, object)", span="44-44"];
m6_8 [cluster="Nancy.DynamicDictionary.TrySetMember(System.Dynamic.SetMemberBinder, object)", file="DynamicDictionary.cs", label="this[binder.Name] = value", span="46-46"];
m6_9 [cluster="Nancy.DynamicDictionary.TrySetMember(System.Dynamic.SetMemberBinder, object)", file="DynamicDictionary.cs", label="return true;", span="47-47"];
m6_10 [cluster="Nancy.DynamicDictionary.TrySetMember(System.Dynamic.SetMemberBinder, object)", file="DynamicDictionary.cs", label="Exit Nancy.DynamicDictionary.TrySetMember(System.Dynamic.SetMemberBinder, object)", span="44-44"];
m6_40 [cluster="Nancy.DynamicDictionary.GetNeutralKey(string)", file="DynamicDictionary.cs", label="Entry Nancy.DynamicDictionary.GetNeutralKey(string)", span="143-143"];
m6_42 [cluster="Nancy.DynamicDictionary.GetNeutralKey(string)", file="DynamicDictionary.cs", label="Exit Nancy.DynamicDictionary.GetNeutralKey(string)", span="143-143"];
m6_18 [cluster="Nancy.DynamicDictionary.GetDynamicMemberNames()", file="DynamicDictionary.cs", label="Entry Nancy.DynamicDictionary.GetDynamicMemberNames()", span="68-68"];
m6_19 [cluster="Nancy.DynamicDictionary.GetDynamicMemberNames()", file="DynamicDictionary.cs", label="return dictionary.Keys;", span="70-70"];
m6_20 [cluster="Nancy.DynamicDictionary.GetDynamicMemberNames()", file="DynamicDictionary.cs", label="Exit Nancy.DynamicDictionary.GetDynamicMemberNames()", span="68-68"];
m6_0 [cluster="Nancy.DynamicDictionary.Create(System.Collections.Generic.IDictionary<string, object>)", file="DynamicDictionary.cs", label="Entry Nancy.DynamicDictionary.Create(System.Collections.Generic.IDictionary<string, object>)", span="27-27"];
m6_5 [cluster="Nancy.DynamicDictionary.Create(System.Collections.Generic.IDictionary<string, object>)", file="DynamicDictionary.cs", label="Exit Nancy.DynamicDictionary.Create(System.Collections.Generic.IDictionary<string, object>)", span="27-27"];
m6_27 [cluster="object.Equals(object, object)", file="DynamicDictionary.cs", label="Entry object.Equals(object, object)", span="0-0"];
m6_39 [cluster="object.GetHashCode()", file="DynamicDictionary.cs", label="Entry object.GetHashCode()", span="0-0"];
m6_6 [cluster="Nancy.DynamicDictionary.DynamicDictionary()", file="DynamicDictionary.cs", label="Entry Nancy.DynamicDictionary.DynamicDictionary()", span="6-6"];
m6_35 [cluster="object.GetType()", file="DynamicDictionary.cs", label="Entry object.GetType()", span="0-0"];
m6_26 [cluster="object.ReferenceEquals(object, object)", file="DynamicDictionary.cs", label="Entry object.ReferenceEquals(object, object)", span="0-0"];
m6_36 [cluster="Nancy.DynamicDictionary.GetHashCode()", file="DynamicDictionary.cs", label="Entry Nancy.DynamicDictionary.GetHashCode()", span="138-138"];
m6_37 [cluster="Nancy.DynamicDictionary.GetHashCode()", file="DynamicDictionary.cs", label="return (dictionary != null ? dictionary.GetHashCode() : 0);", span="140-140"];
m6_38 [cluster="Nancy.DynamicDictionary.GetHashCode()", file="DynamicDictionary.cs", label="Exit Nancy.DynamicDictionary.GetHashCode()", span="138-138"];
m6_44 [file="DynamicDictionary.cs", label="Nancy.DynamicDictionary", span=""];
m7_52 [cluster="Nancy.Conventions.DefaultViewLocationConventions.Initialise(Nancy.Conventions.NancyConventions)", file="DynamicDictionaryFixture.cs", label="Entry Nancy.Conventions.DefaultViewLocationConventions.Initialise(Nancy.Conventions.NancyConventions)", span="15-15"];
m7_24 [cluster="System.Collections.Generic.List<T>.List()", file="DynamicDictionaryFixture.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m7_61 [cluster="System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", file="DynamicDictionaryFixture.cs", label="Entry System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", span="0-0"];
m7_0 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.DefaultViewLocationConventionsFixture()", file="DynamicDictionaryFixture.cs", label="Entry Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.DefaultViewLocationConventionsFixture()", span="13-13"];
m7_1 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.DefaultViewLocationConventionsFixture()", file="DynamicDictionaryFixture.cs", label="this.conventions = new NancyConventions()", span="15-15"];
m7_2 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.DefaultViewLocationConventionsFixture()", file="DynamicDictionaryFixture.cs", label="this.viewLocationConventions = new DefaultViewLocationConventions()", span="16-16"];
m7_3 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.DefaultViewLocationConventionsFixture()", file="DynamicDictionaryFixture.cs", label="Exit Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.DefaultViewLocationConventionsFixture()", span="13-13"];
m7_62 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_views_folder()", file="DynamicDictionaryFixture.cs", label="Entry Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_views_folder()", span="137-137"];
m7_63 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_views_folder()", file="DynamicDictionaryFixture.cs", label="this.viewLocationConventions.Initialise(this.conventions)", span="140-140"];
m7_64 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_views_folder()", file="DynamicDictionaryFixture.cs", label="var convention = this.conventions.ViewLocationConventions[1]", span="141-141"];
m7_65 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_views_folder()", file="DynamicDictionaryFixture.cs", label="var result = convention.Invoke(\r\n                ''viewname'',\r\n                null,\r\n                new ViewLocationContext { ModulePath = string.Empty })", span="144-147"];
m7_66 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_views_folder()", file="DynamicDictionaryFixture.cs", label="result.ShouldEqual(''views/viewname'')", span="150-150"];
m7_67 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_views_folder()", file="DynamicDictionaryFixture.cs", label="Exit Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_views_folder()", span="137-137"];
m7_54 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname()", file="DynamicDictionaryFixture.cs", label="Entry Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname()", span="120-120"];
m7_55 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname()", file="DynamicDictionaryFixture.cs", label="this.viewLocationConventions.Initialise(this.conventions)", span="123-123"];
m7_56 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname()", file="DynamicDictionaryFixture.cs", label="var convention = this.conventions.ViewLocationConventions[0]", span="124-124"];
m7_57 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname()", file="DynamicDictionaryFixture.cs", label="var result = convention.Invoke(\r\n                ''viewname'', \r\n                null, \r\n                new ViewLocationContext { ModulePath = string.Empty })", span="127-130"];
m7_58 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname()", file="DynamicDictionaryFixture.cs", label="result.ShouldEqual(''viewname'')", span="133-133"];
m7_59 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname()", file="DynamicDictionaryFixture.cs", label="Exit Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname()", span="120-120"];
m7_60 [cluster="Nancy.ViewEngines.ViewLocationContext.ViewLocationContext()", file="DynamicDictionaryFixture.cs", label="Entry Nancy.ViewEngines.ViewLocationContext.ViewLocationContext()", span="5-5"];
m7_86 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_folder_when_modulepath_contains_leading_slash()", file="DynamicDictionaryFixture.cs", label="Entry Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_folder_when_modulepath_contains_leading_slash()", span="205-205"];
m7_87 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_folder_when_modulepath_contains_leading_slash()", file="DynamicDictionaryFixture.cs", label="this.viewLocationConventions.Initialise(this.conventions)", span="208-208"];
m7_88 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_folder_when_modulepath_contains_leading_slash()", file="DynamicDictionaryFixture.cs", label="var convention = this.conventions.ViewLocationConventions[3]", span="209-209"];
m7_89 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_folder_when_modulepath_contains_leading_slash()", file="DynamicDictionaryFixture.cs", label="var result = convention.Invoke(\r\n                ''viewname'',\r\n                null,\r\n                new ViewLocationContext { ModulePath = ''/modulepath'' })", span="212-215"];
m7_90 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_folder_when_modulepath_contains_leading_slash()", file="DynamicDictionaryFixture.cs", label="result.ShouldEqual(''modulepath/viewname'')", span="218-218"];
m7_91 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_folder_when_modulepath_contains_leading_slash()", file="DynamicDictionaryFixture.cs", label="Exit Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_folder_when_modulepath_contains_leading_slash()", span="205-205"];
m7_44 [cluster="string.ShouldBeEmpty()", file="DynamicDictionaryFixture.cs", label="Entry string.ShouldBeEmpty()", span="26-26"];
m7_18 [cluster="object.ShouldEqual(object)", file="DynamicDictionaryFixture.cs", label="Entry object.ShouldEqual(object)", span="95-95"];
m7_53 [cluster="int.ShouldBeGreaterThan(int)", file="DynamicDictionaryFixture.cs", label="Entry int.ShouldBeGreaterThan(int)", span="115-115"];
m7_25 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_return_correct_error_message_when_not_valid_because_view_location_conventions_is_empty()", file="DynamicDictionaryFixture.cs", label="Entry Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_return_correct_error_message_when_not_valid_because_view_location_conventions_is_empty()", span="59-59"];
m7_29 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_return_correct_error_message_when_not_valid_because_view_location_conventions_is_empty()", file="DynamicDictionaryFixture.cs", label="Exit Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_return_correct_error_message_when_not_valid_because_view_location_conventions_is_empty()", span="59-59"];
m7_12 [cluster="bool.ShouldBeFalse()", file="DynamicDictionaryFixture.cs", label="Entry bool.ShouldBeFalse()", span="90-90"];
m7_68 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_subfolder_of_views_folder()", file="DynamicDictionaryFixture.cs", label="Entry Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_subfolder_of_views_folder()", span="154-154"];
m7_69 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_subfolder_of_views_folder()", file="DynamicDictionaryFixture.cs", label="this.viewLocationConventions.Initialise(this.conventions)", span="157-157"];
m7_70 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_subfolder_of_views_folder()", file="DynamicDictionaryFixture.cs", label="var convention = this.conventions.ViewLocationConventions[2]", span="158-158"];
m7_71 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_subfolder_of_views_folder()", file="DynamicDictionaryFixture.cs", label="var result = convention.Invoke(\r\n                ''viewname'',\r\n                null,\r\n                new ViewLocationContext { ModulePath = ''modulepath'' })", span="161-164"];
m7_72 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_subfolder_of_views_folder()", file="DynamicDictionaryFixture.cs", label="result.ShouldEqual(''views/modulepath/viewname'')", span="167-167"];
m7_73 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_subfolder_of_views_folder()", file="DynamicDictionaryFixture.cs", label="Exit Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_subfolder_of_views_folder()", span="154-154"];
m7_39 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_return_empty_error_message_when_valid()", file="DynamicDictionaryFixture.cs", label="Entry Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_return_empty_error_message_when_valid()", span="91-91"];
m7_40 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_return_empty_error_message_when_valid()", file="DynamicDictionaryFixture.cs", label="this.conventions.ViewLocationConventions =\r\n                new List<Func<string, dynamic, ViewLocationContext, string>>\r\n                {\r\n                    (viewName, model, viewLocationContext) => {\r\n                        return string.Empty;\r\n                    }\r\n                }", span="94-100"];
m7_41 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_return_empty_error_message_when_valid()", file="DynamicDictionaryFixture.cs", label="var result = this.viewLocationConventions.Validate(this.conventions)", span="103-103"];
m7_42 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_return_empty_error_message_when_valid()", file="DynamicDictionaryFixture.cs", label="result.Item2.ShouldBeEmpty()", span="106-106"];
m7_43 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_return_empty_error_message_when_valid()", file="DynamicDictionaryFixture.cs", label="Exit Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_return_empty_error_message_when_valid()", span="91-91"];
m7_92 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulename_subfolder_of_views_folder()", file="DynamicDictionaryFixture.cs", label="Entry Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulename_subfolder_of_views_folder()", span="222-222"];
m7_93 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulename_subfolder_of_views_folder()", file="DynamicDictionaryFixture.cs", label="this.viewLocationConventions.Initialise(this.conventions)", span="225-225"];
m7_94 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulename_subfolder_of_views_folder()", file="DynamicDictionaryFixture.cs", label="var convention = this.conventions.ViewLocationConventions[4]", span="226-226"];
m7_95 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulename_subfolder_of_views_folder()", file="DynamicDictionaryFixture.cs", label="var result = convention.Invoke(\r\n                ''viewname'',\r\n                null,\r\n                new ViewLocationContext { ModuleName = ''modulename'' })", span="229-232"];
m7_96 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulename_subfolder_of_views_folder()", file="DynamicDictionaryFixture.cs", label="result.ShouldEqual(''views/modulename/viewname'')", span="235-235"];
m7_97 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulename_subfolder_of_views_folder()", file="DynamicDictionaryFixture.cs", label="Exit Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulename_subfolder_of_views_folder()", span="222-222"];
m7_35 [cluster="bool.ShouldBeTrue()", file="DynamicDictionaryFixture.cs", label="Entry bool.ShouldBeTrue()", span="85-85"];
m7_98 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulename_folder()", file="DynamicDictionaryFixture.cs", label="Entry Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulename_folder()", span="239-239"];
m7_99 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulename_folder()", file="DynamicDictionaryFixture.cs", label="this.viewLocationConventions.Initialise(this.conventions)", span="242-242"];
m7_100 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulename_folder()", file="DynamicDictionaryFixture.cs", label="var convention = this.conventions.ViewLocationConventions[5]", span="243-243"];
m7_101 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulename_folder()", file="DynamicDictionaryFixture.cs", label="var result = convention.Invoke(\r\n                ''viewname'',\r\n                null,\r\n                new ViewLocationContext { ModuleName = ''modulename'' })", span="246-249"];
m7_102 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulename_folder()", file="DynamicDictionaryFixture.cs", label="result.ShouldEqual(''modulename/viewname'')", span="252-252"];
m7_103 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulename_folder()", file="DynamicDictionaryFixture.cs", label="Exit Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulename_folder()", span="239-239"];
m7_6 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_not_be_valid_when_view_location_conventions_is_null()", file="DynamicDictionaryFixture.cs", label="Entry Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_not_be_valid_when_view_location_conventions_is_null()", span="20-20"];
m7_10 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_not_be_valid_when_view_location_conventions_is_null()", file="DynamicDictionaryFixture.cs", label="Exit Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_not_be_valid_when_view_location_conventions_is_null()", span="20-20"];
m7_45 [cluster="lambda expression", file="DynamicDictionaryFixture.cs", label="Entry lambda expression", span="97-99"];
m7_36 [cluster="lambda expression", file="DynamicDictionaryFixture.cs", label="Entry lambda expression", span="78-80"];
m7_38 [cluster="lambda expression", file="DynamicDictionaryFixture.cs", label="Exit lambda expression", span="78-80"];
m7_46 [cluster="lambda expression", file="DynamicDictionaryFixture.cs", label="return string.Empty;", span="98-98"];
m7_47 [cluster="lambda expression", file="DynamicDictionaryFixture.cs", label="Exit lambda expression", span="97-99"];
m7_5 [cluster="Nancy.Conventions.DefaultViewLocationConventions.DefaultViewLocationConventions()", file="DynamicDictionaryFixture.cs", label="Entry Nancy.Conventions.DefaultViewLocationConventions.DefaultViewLocationConventions()", span="9-9"];
m7_13 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_return_correct_error_message_when_not_valid_because_view_location_conventions_is_null()", file="DynamicDictionaryFixture.cs", label="Entry Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_return_correct_error_message_when_not_valid_because_view_location_conventions_is_null()", span="33-33"];
m7_17 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_return_correct_error_message_when_not_valid_because_view_location_conventions_is_null()", file="DynamicDictionaryFixture.cs", label="Exit Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_return_correct_error_message_when_not_valid_because_view_location_conventions_is_null()", span="33-33"];
m7_74 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_subfolder_of_views_folder_when_modulepath_contains_leading_slash()", file="DynamicDictionaryFixture.cs", label="Entry Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_subfolder_of_views_folder_when_modulepath_contains_leading_slash()", span="171-171"];
m7_75 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_subfolder_of_views_folder_when_modulepath_contains_leading_slash()", file="DynamicDictionaryFixture.cs", label="this.viewLocationConventions.Initialise(this.conventions)", span="174-174"];
m7_76 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_subfolder_of_views_folder_when_modulepath_contains_leading_slash()", file="DynamicDictionaryFixture.cs", label="var convention = this.conventions.ViewLocationConventions[2]", span="175-175"];
m7_77 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_subfolder_of_views_folder_when_modulepath_contains_leading_slash()", file="DynamicDictionaryFixture.cs", label="var result = convention.Invoke(\r\n                ''viewname'',\r\n                null,\r\n                new ViewLocationContext { ModulePath = ''/modulepath'' })", span="178-181"];
m7_78 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_subfolder_of_views_folder_when_modulepath_contains_leading_slash()", file="DynamicDictionaryFixture.cs", label="result.ShouldEqual(''views/modulepath/viewname'')", span="184-184"];
m7_79 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_subfolder_of_views_folder_when_modulepath_contains_leading_slash()", file="DynamicDictionaryFixture.cs", label="Exit Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_subfolder_of_views_folder_when_modulepath_contains_leading_slash()", span="171-171"];
m7_11 [cluster="Nancy.Conventions.DefaultViewLocationConventions.Validate(Nancy.Conventions.NancyConventions)", file="DynamicDictionaryFixture.cs", label="Entry Nancy.Conventions.DefaultViewLocationConventions.Validate(Nancy.Conventions.NancyConventions)", span="25-25"];
m7_48 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_add_conventions_when_initialised()", file="DynamicDictionaryFixture.cs", label="Entry Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_add_conventions_when_initialised()", span="110-110"];
m7_49 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_add_conventions_when_initialised()", file="DynamicDictionaryFixture.cs", label="this.viewLocationConventions.Initialise(this.conventions)", span="113-113"];
m7_50 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_add_conventions_when_initialised()", file="DynamicDictionaryFixture.cs", label="this.conventions.ViewLocationConventions.Count.ShouldBeGreaterThan(0)", span="116-116"];
m7_51 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_add_conventions_when_initialised()", file="DynamicDictionaryFixture.cs", label="Exit Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_add_conventions_when_initialised()", span="110-110"];
m7_19 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_not_be_valid_when_view_location_conventions_is_empty()", file="DynamicDictionaryFixture.cs", label="Entry Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_not_be_valid_when_view_location_conventions_is_empty()", span="46-46"];
m7_23 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_not_be_valid_when_view_location_conventions_is_empty()", file="DynamicDictionaryFixture.cs", label="Exit Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_not_be_valid_when_view_location_conventions_is_empty()", span="46-46"];
m7_80 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_folder()", file="DynamicDictionaryFixture.cs", label="Entry Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_folder()", span="188-188"];
m7_81 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_folder()", file="DynamicDictionaryFixture.cs", label="this.viewLocationConventions.Initialise(this.conventions)", span="191-191"];
m7_82 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_folder()", file="DynamicDictionaryFixture.cs", label="var convention = this.conventions.ViewLocationConventions[3]", span="192-192"];
m7_83 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_folder()", file="DynamicDictionaryFixture.cs", label="var result = convention.Invoke(\r\n                ''viewname'',\r\n                null,\r\n                new ViewLocationContext { ModulePath = ''modulepath'' })", span="195-198"];
m7_84 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_folder()", file="DynamicDictionaryFixture.cs", label="result.ShouldEqual(''modulepath/viewname'')", span="201-201"];
m7_85 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_folder()", file="DynamicDictionaryFixture.cs", label="Exit Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_folder()", span="188-188"];
m7_4 [cluster="Nancy.Conventions.NancyConventions.NancyConventions()", file="DynamicDictionaryFixture.cs", label="Entry Nancy.Conventions.NancyConventions.NancyConventions()", span="23-23"];
m7_30 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_be_valid_when_view_conventions_is_not_empty()", file="DynamicDictionaryFixture.cs", label="Entry Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_be_valid_when_view_conventions_is_not_empty()", span="72-72"];
m7_34 [cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_be_valid_when_view_conventions_is_not_empty()", file="DynamicDictionaryFixture.cs", label="Exit Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_be_valid_when_view_conventions_is_not_empty()", span="72-72"];
m7_104 [file="DynamicDictionaryFixture.cs", label="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture", span=""];
m8_4 [cluster="Nancy.Tests.Unit.Responses.GenericFileResponseFixture.Should_set_status_code_to_ok()", file="GenericFileResponseFixture.cs", label="Entry Nancy.Tests.Unit.Responses.GenericFileResponseFixture.Should_set_status_code_to_ok()", span="18-18"];
m8_5 [cluster="Nancy.Tests.Unit.Responses.GenericFileResponseFixture.Should_set_status_code_to_ok()", file="GenericFileResponseFixture.cs", label="var response = new GenericFileResponse(this.imagePath, imageContentType)", span="21-21"];
m8_6 [cluster="Nancy.Tests.Unit.Responses.GenericFileResponseFixture.Should_set_status_code_to_ok()", file="GenericFileResponseFixture.cs", label="response.StatusCode.ShouldEqual(HttpStatusCode.OK)", span="24-24"];
m8_7 [cluster="Nancy.Tests.Unit.Responses.GenericFileResponseFixture.Should_set_status_code_to_ok()", file="GenericFileResponseFixture.cs", label="Exit Nancy.Tests.Unit.Responses.GenericFileResponseFixture.Should_set_status_code_to_ok()", span="18-18"];
m8_9 [cluster="object.ShouldEqual(object)", file="GenericFileResponseFixture.cs", label="Entry object.ShouldEqual(object)", span="80-80"];
m8_26 [cluster="System.IO.MemoryStream.Flush()", file="GenericFileResponseFixture.cs", label="Entry System.IO.MemoryStream.Flush()", span="0-0"];
m8_18 [cluster="System.Collections.Generic.IEnumerable<T>.ShouldEqualSequence<T>(System.Collections.Generic.IEnumerable<T>)", file="GenericFileResponseFixture.cs", label="Entry System.Collections.Generic.IEnumerable<T>.ShouldEqualSequence<T>(System.Collections.Generic.IEnumerable<T>)", span="95-95"];
m8_16 [cluster="System.IO.File.ReadAllBytes(string)", file="GenericFileResponseFixture.cs", label="Entry System.IO.File.ReadAllBytes(string)", span="0-0"];
m8_0 [cluster="Nancy.Tests.Unit.Responses.GenericFileResponseFixture.GenericFileResponseFixture()", file="GenericFileResponseFixture.cs", label="Entry Nancy.Tests.Unit.Responses.GenericFileResponseFixture.GenericFileResponseFixture()", span="12-12"];
m8_1 [cluster="Nancy.Tests.Unit.Responses.GenericFileResponseFixture.GenericFileResponseFixture()", color=green, community=0, file="GenericFileResponseFixture.cs", label="this.imagePath = Path.Combine(@''..'', @''..'', ''Resources'', ''zip.png'')", prediction=13, span="14-14"];
m8_2 [cluster="Nancy.Tests.Unit.Responses.GenericFileResponseFixture.GenericFileResponseFixture()", file="GenericFileResponseFixture.cs", label="Exit Nancy.Tests.Unit.Responses.GenericFileResponseFixture.GenericFileResponseFixture()", span="12-12"];
m8_8 [cluster="Nancy.Responses.GenericFileResponse.GenericFileResponse(string, string)", file="GenericFileResponseFixture.cs", label="Entry Nancy.Responses.GenericFileResponse.GenericFileResponse(string, string)", span="12-12"];
m8_25 [cluster="System.Action<T>.Invoke(T)", file="GenericFileResponseFixture.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m8_27 [cluster="System.IO.MemoryStream.ToArray()", file="GenericFileResponseFixture.cs", label="Entry System.IO.MemoryStream.ToArray()", span="0-0"];
m8_10 [cluster="Nancy.Tests.Unit.Responses.GenericFileResponseFixture.Should_return_file_unchanged()", file="GenericFileResponseFixture.cs", label="Entry Nancy.Tests.Unit.Responses.GenericFileResponseFixture.Should_return_file_unchanged()", span="28-28"];
m8_11 [cluster="Nancy.Tests.Unit.Responses.GenericFileResponseFixture.Should_return_file_unchanged()", file="GenericFileResponseFixture.cs", label="var expected = File.ReadAllBytes(this.imagePath)", span="31-31"];
m8_12 [cluster="Nancy.Tests.Unit.Responses.GenericFileResponseFixture.Should_return_file_unchanged()", file="GenericFileResponseFixture.cs", label="var response = new GenericFileResponse(this.imagePath, imageContentType)", span="32-32"];
m8_14 [cluster="Nancy.Tests.Unit.Responses.GenericFileResponseFixture.Should_return_file_unchanged()", file="GenericFileResponseFixture.cs", label="result.ShouldEqualSequence(expected)", span="38-38"];
m8_13 [cluster="Nancy.Tests.Unit.Responses.GenericFileResponseFixture.Should_return_file_unchanged()", file="GenericFileResponseFixture.cs", label="var result = GetResponseContents(response)", span="35-35"];
m8_15 [cluster="Nancy.Tests.Unit.Responses.GenericFileResponseFixture.Should_return_file_unchanged()", file="GenericFileResponseFixture.cs", label="Exit Nancy.Tests.Unit.Responses.GenericFileResponseFixture.Should_return_file_unchanged()", span="28-28"];
m8_17 [cluster="Nancy.Tests.Unit.Responses.GenericFileResponseFixture.GetResponseContents(Nancy.Response)", file="GenericFileResponseFixture.cs", label="Entry Nancy.Tests.Unit.Responses.GenericFileResponseFixture.GetResponseContents(Nancy.Response)", span="41-41"];
m8_19 [cluster="Nancy.Tests.Unit.Responses.GenericFileResponseFixture.GetResponseContents(Nancy.Response)", file="GenericFileResponseFixture.cs", label="var ms = new MemoryStream()", span="43-43"];
m8_20 [cluster="Nancy.Tests.Unit.Responses.GenericFileResponseFixture.GetResponseContents(Nancy.Response)", file="GenericFileResponseFixture.cs", label="response.Contents(ms)", span="44-44"];
m8_21 [cluster="Nancy.Tests.Unit.Responses.GenericFileResponseFixture.GetResponseContents(Nancy.Response)", file="GenericFileResponseFixture.cs", label="ms.Flush()", span="45-45"];
m8_22 [cluster="Nancy.Tests.Unit.Responses.GenericFileResponseFixture.GetResponseContents(Nancy.Response)", file="GenericFileResponseFixture.cs", label="return ms.ToArray();", span="47-47"];
m8_23 [cluster="Nancy.Tests.Unit.Responses.GenericFileResponseFixture.GetResponseContents(Nancy.Response)", file="GenericFileResponseFixture.cs", label="Exit Nancy.Tests.Unit.Responses.GenericFileResponseFixture.GetResponseContents(Nancy.Response)", span="41-41"];
m8_3 [cluster="System.IO.Path.Combine(string, string, string, string)", file="GenericFileResponseFixture.cs", label="Entry System.IO.Path.Combine(string, string, string, string)", span="0-0"];
m8_24 [cluster="System.IO.MemoryStream.MemoryStream()", file="GenericFileResponseFixture.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m8_28 [file="GenericFileResponseFixture.cs", label="Nancy.Tests.Unit.Responses.GenericFileResponseFixture", span=""];
m9_0 [cluster="Nancy.Routing.IRoutePatternMatcher.Match(string, string)", file="IRoutePatternMatcher.cs", label="Entry Nancy.Routing.IRoutePatternMatcher.Match(string, string)", span="14-14"];
m9_1 [cluster="Nancy.Routing.IRoutePatternMatcher.Match(string, string)", file="IRoutePatternMatcher.cs", label="Exit Nancy.Routing.IRoutePatternMatcher.Match(string, string)", span="14-14"];
m10_0 [cluster="Nancy.Request.Request(string, string, string)", file="Request.cs", label="Entry Nancy.Request.Request(string, string, string)", span="27-27"];
m10_1 [cluster="Nancy.Request.Request(string, string, string)", file="Request.cs", label="Exit Nancy.Request.Request(string, string, string)", span="27-27"];
m10_4 [cluster="Nancy.Request.Request(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, Nancy.IO.RequestStream, string, string)", file="Request.cs", label="throw new ArgumentNullException(''method'', ''The value of the method parameter cannot be null.'');", span="44-44"];
m10_13 [cluster="Nancy.Request.Request(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, Nancy.IO.RequestStream, string, string)", color=green, community=0, file="Request.cs", label="body == null", prediction=14, span="58-58"];
m10_11 [cluster="Nancy.Request.Request(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, Nancy.IO.RequestStream, string, string)", file="Request.cs", label="headers == null", span="55-55"];
m10_14 [cluster="Nancy.Request.Request(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, Nancy.IO.RequestStream, string, string)", file="Request.cs", label="throw new ArgumentNullException(''body'', ''The value of the body parameter cannot be null.'');", span="59-59"];
m10_15 [cluster="Nancy.Request.Request(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, Nancy.IO.RequestStream, string, string)", file="Request.cs", label="protocol == null", span="61-61"];
m10_5 [cluster="Nancy.Request.Request(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, Nancy.IO.RequestStream, string, string)", file="Request.cs", label="method.Length == 0", span="46-46"];
m10_7 [cluster="Nancy.Request.Request(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, Nancy.IO.RequestStream, string, string)", file="Request.cs", label="uri == null", span="49-49"];
m10_9 [cluster="Nancy.Request.Request(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, Nancy.IO.RequestStream, string, string)", file="Request.cs", label="uri.Length == 0", span="52-52"];
m10_16 [cluster="Nancy.Request.Request(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, Nancy.IO.RequestStream, string, string)", file="Request.cs", label="throw new ArgumentNullException(''protocol'', ''The value of the protocol parameter cannot be null.'');", span="62-62"];
m10_17 [cluster="Nancy.Request.Request(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, Nancy.IO.RequestStream, string, string)", file="Request.cs", label="protocol.Length == 0", span="64-64"];
m10_18 [cluster="Nancy.Request.Request(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, Nancy.IO.RequestStream, string, string)", file="Request.cs", label="throw new ArgumentOutOfRangeException(''protocol'', protocol, ''The value of the protocol parameter cannot be empty.'');", span="65-65"];
m10_19 [cluster="Nancy.Request.Request(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, Nancy.IO.RequestStream, string, string)", file="Request.cs", label="this.Body = body", span="67-67"];
m10_12 [cluster="Nancy.Request.Request(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, Nancy.IO.RequestStream, string, string)", file="Request.cs", label="throw new ArgumentNullException(''headers'', ''The value of the headers parameter cannot be null.'');", span="56-56"];
m10_6 [cluster="Nancy.Request.Request(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, Nancy.IO.RequestStream, string, string)", file="Request.cs", label="throw new ArgumentOutOfRangeException(''method'', method, ''The value of the method parameter cannot be empty.'');", span="47-47"];
m10_8 [cluster="Nancy.Request.Request(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, Nancy.IO.RequestStream, string, string)", file="Request.cs", label="throw new ArgumentNullException(''uri'', ''The value of the uri parameter cannot be null.'');", span="50-50"];
m10_10 [cluster="Nancy.Request.Request(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, Nancy.IO.RequestStream, string, string)", file="Request.cs", label="throw new ArgumentOutOfRangeException(''uri'', uri, ''The value of the uri parameter cannot be empty.'');", span="53-53"];
m10_22 [cluster="Nancy.Request.Request(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, Nancy.IO.RequestStream, string, string)", file="Request.cs", label="this.Uri = uri", span="70-70"];
m10_21 [cluster="Nancy.Request.Request(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, Nancy.IO.RequestStream, string, string)", file="Request.cs", label="this.Method = method", span="69-69"];
m10_23 [cluster="Nancy.Request.Request(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, Nancy.IO.RequestStream, string, string)", file="Request.cs", label="this.Protocol = protocol", span="71-71"];
m10_34 [cluster="Nancy.Request.ParseFormData()", file="Request.cs", label="Entry Nancy.Request.ParseFormData()", span="170-170"];
m10_55 [cluster="Nancy.Request.ParseFormData()", file="Request.cs", label="return;", span="174-174"];
m10_56 [cluster="Nancy.Request.ParseFormData()", file="Request.cs", label="var contentType = this.Headers[''content-type''].First()", span="177-177"];
m10_57 [cluster="Nancy.Request.ParseFormData()", file="Request.cs", label="var mimeType = contentType.Split(';').First()", span="178-178"];
m10_63 [cluster="Nancy.Request.ParseFormData()", file="Request.cs", label="var boundary = Regex.Match(contentType, @''boundary=(?<token>[^\n\; ]*)'').Groups[''token''].Value", span="190-190"];
m10_58 [cluster="Nancy.Request.ParseFormData()", file="Request.cs", label="mimeType.Equals(''application/x-www-form-urlencoded'', StringComparison.OrdinalIgnoreCase)", span="179-179"];
m10_61 [cluster="Nancy.Request.ParseFormData()", file="Request.cs", label="!mimeType.Equals(''multipart/form-data'', StringComparison.OrdinalIgnoreCase)", span="185-185"];
m10_59 [cluster="Nancy.Request.ParseFormData()", file="Request.cs", label="var reader = new StreamReader(this.Body)", span="181-181"];
m10_60 [cluster="Nancy.Request.ParseFormData()", file="Request.cs", label="this.form = reader.ReadToEnd().AsQueryDictionary()", span="182-182"];
m10_62 [cluster="Nancy.Request.ParseFormData()", file="Request.cs", label="return;", span="187-187"];
m10_64 [cluster="Nancy.Request.ParseFormData()", file="Request.cs", label="var multipart = new HttpMultipart(this.Body, boundary)", span="191-191"];
m10_65 [cluster="Nancy.Request.ParseFormData()", file="Request.cs", label="multipart.GetBoundaries()", span="193-193"];
m10_66 [cluster="Nancy.Request.ParseFormData()", file="Request.cs", label="string.IsNullOrEmpty(httpMultipartBoundary.Filename)", span="195-195"];
m10_67 [cluster="Nancy.Request.ParseFormData()", file="Request.cs", label="var reader = new StreamReader(httpMultipartBoundary.Value)", span="197-197"];
m10_68 [cluster="Nancy.Request.ParseFormData()", file="Request.cs", label="this.form[httpMultipartBoundary.Name] = reader.ReadToEnd()", span="198-198"];
m10_69 [cluster="Nancy.Request.ParseFormData()", file="Request.cs", label="this.files.Add(new HttpFile(\r\n                                       httpMultipartBoundary.ContentType,\r\n                                       httpMultipartBoundary.Filename,\r\n                                       httpMultipartBoundary.Value\r\n                                       ))", span="202-206"];
m10_53 [cluster="lambda expression", file="Request.cs", label="Exit lambda expression", span="111-111"];
m10_70 [cluster="Nancy.Request.ParseFormData()", file="Request.cs", label="Exit Nancy.Request.ParseFormData()", span="170-170"];
m10_2 [cluster="Nancy.Request.Request(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, Nancy.IO.RequestStream, string, string)", file="Request.cs", label="Entry Nancy.Request.Request(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, Nancy.IO.RequestStream, string, string)", span="41-41"];
m10_3 [cluster="Nancy.Request.Request(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, Nancy.IO.RequestStream, string, string)", file="Request.cs", label="method == null", span="43-43"];
m10_24 [cluster="Nancy.Request.Request(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, Nancy.IO.RequestStream, string, string)", file="Request.cs", label="this.Query = query.AsQueryDictionary()", span="72-72"];
m10_25 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="Request.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
m10_26 [cluster="Nancy.Request.Request(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, Nancy.IO.RequestStream, string, string)", file="Request.cs", label="this.ParseFormData()", span="74-74"];
m10_27 [cluster="string.AsQueryDictionary()", file="Request.cs", label="Entry string.AsQueryDictionary()", span="57-57"];
m10_28 [cluster="System.IO.MemoryStream.MemoryStream()", file="Request.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m10_29 [cluster="Nancy.IO.RequestStream.FromStream(System.IO.Stream)", file="Request.cs", label="Entry Nancy.IO.RequestStream.FromStream(System.IO.Stream)", span="209-209"];
m10_45 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IEqualityComparer<TKey>)", file="Request.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0"];
m10_77 [cluster="Nancy.HttpMultipart.GetBoundaries()", file="Request.cs", label="Entry Nancy.HttpMultipart.GetBoundaries()", span="33-33"];
m10_46 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="Request.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m10_50 [cluster="Unk.Trim", file="Request.cs", label="Entry Unk.Trim", span=""];
m10_78 [cluster="Nancy.HttpFile.HttpFile(string, string, System.IO.Stream)", file="Request.cs", label="Entry Nancy.HttpFile.HttpFile(string, string, System.IO.Stream)", span="9-9"];
m10_33 [cluster="Nancy.Session.NullSessionProvider.NullSessionProvider()", file="Request.cs", label="Entry Nancy.Session.NullSessionProvider.NullSessionProvider()", span="6-6"];
m10_35 [cluster="Nancy.Request.GetCookieData()", file="Request.cs", label="Entry Nancy.Request.GetCookieData()", span="141-141"];
m10_80 [cluster="Nancy.Request.RewriteMethod()", file="Request.cs", label="!this.Method.Equals(''POST'', StringComparison.OrdinalIgnoreCase)", span="213-213"];
m10_81 [cluster="Nancy.Request.RewriteMethod()", file="Request.cs", label="return;", span="215-215"];
m10_82 [cluster="Nancy.Request.RewriteMethod()", file="Request.cs", label="!this.Form[''_method''].HasValue", span="218-218"];
m10_83 [cluster="Nancy.Request.RewriteMethod()", file="Request.cs", label="return;", span="220-220"];
m10_84 [cluster="Nancy.Request.RewriteMethod()", file="Request.cs", label="Nancy.Request", span=""];
m10_85 [cluster="Nancy.Request.RewriteMethod()", file="Request.cs", label="Exit Nancy.Request.RewriteMethod()", span="211-211"];
m10_76 [cluster="Nancy.HttpMultipart.HttpMultipart(System.IO.Stream, string)", file="Request.cs", label="Entry Nancy.HttpMultipart.HttpMultipart(System.IO.Stream, string)", span="22-22"];
m10_32 [cluster="string.AsQueryDictionary()", file="Request.cs", label="Entry string.AsQueryDictionary()", span="57-57"];
m10_31 [cluster="Nancy.RequestHeaders.RequestHeaders(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="Request.cs", label="Entry Nancy.RequestHeaders.RequestHeaders(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", span="20-20"];
m10_30 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, object, string)", file="Request.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, object, string)", span="0-0"];
m10_71 [cluster="string.IsNullOrEmpty(string)", file="Request.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m10_75 [cluster="System.Text.RegularExpressions.Regex.Match(string, string)", file="Request.cs", label="Entry System.Text.RegularExpressions.Regex.Match(string, string)", span="0-0"];
m10_47 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="Request.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m10_72 [cluster="string.Equals(string, System.StringComparison)", file="Request.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m10_51 [cluster="lambda expression", file="Request.cs", label="Entry lambda expression", span="111-111"];
m10_52 [cluster="lambda expression", file="Request.cs", label="c.Split('=')", span="111-111"];
m10_49 [cluster="Unk.Select", file="Request.cs", label="Entry Unk.Select", span=""];
m10_48 [cluster="string.Split(params char[])", file="Request.cs", label="Entry string.Split(params char[])", span="0-0"];
m10_73 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="Request.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m10_79 [cluster="System.Collections.Generic.List<T>.Add(T)", file="Request.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m10_74 [cluster="System.IO.StreamReader.ReadToEnd()", file="Request.cs", label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0"];
m10_36 [cluster="Nancy.Request.GetCookieData()", color=green, community=0, file="Request.cs", label="var cookieDictionary = new Dictionary<string, string>(StringComparer.OrdinalIgnoreCase)", prediction=15, span="143-143"];
m10_37 [cluster="Nancy.Request.GetCookieData()", file="Request.cs", label="!this.Headers.Cookie.Any()", span="145-145"];
m10_39 [cluster="Nancy.Request.GetCookieData()", file="Request.cs", label="return cookieDictionary;", span="107-107"];
m10_42 [cluster="Nancy.Request.GetCookieData()", file="Request.cs", label="return cookieDictionary;", span="156-156"];
m10_43 [cluster="Nancy.Request.GetCookieData()", file="Request.cs", label="return cookieDictionary;", span="116-116"];
m10_40 [cluster="Nancy.Request.GetCookieData()", file="Request.cs", label="var cookies = this.Headers[''cookie''].First().Split(';')", span="110-110"];
m10_41 [cluster="Nancy.Request.GetCookieData()", file="Request.cs", label="cookieDictionary[parts[0].Trim()] = parts[1]", span="153-153"];
m10_44 [cluster="Nancy.Request.GetCookieData()", file="Request.cs", label="Exit Nancy.Request.GetCookieData()", span="101-101"];
m10_86 [file="Request.cs", label="Nancy.Request", span=""];
m11_5 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="RequestExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0"];
m11_0 [cluster="Nancy.Extensions.RequestExtensions.IsAjaxRequest(Nancy.Request)", file="RequestExtensions.cs", label="Entry Nancy.Extensions.RequestExtensions.IsAjaxRequest(Nancy.Request)", span="15-15"];
m11_1 [cluster="Nancy.Extensions.RequestExtensions.IsAjaxRequest(Nancy.Request)", file="RequestExtensions.cs", label="string ajaxRequestHeaderKey = ''X-Requested-With''", span="17-17"];
m11_3 [cluster="Nancy.Extensions.RequestExtensions.IsAjaxRequest(Nancy.Request)", color=green, community=0, file="RequestExtensions.cs", label="return request.Headers[ajaxRequestHeaderKey].Contains(ajaxRequestHeaderValue);", prediction=16, span="20-20"];
m11_2 [cluster="Nancy.Extensions.RequestExtensions.IsAjaxRequest(Nancy.Request)", file="RequestExtensions.cs", label="string ajaxRequestHeaderValue = ''XMLHttpRequest''", span="18-18"];
m11_4 [cluster="Nancy.Extensions.RequestExtensions.IsAjaxRequest(Nancy.Request)", file="RequestExtensions.cs", label="Exit Nancy.Extensions.RequestExtensions.IsAjaxRequest(Nancy.Request)", span="15-15"];
m12_50 [cluster="System.Net.WebResponse.GetResponseStream()", file="RequestExtensionsFixture.cs", label="Entry System.Net.WebResponse.GetResponseStream()", span="0-0"];
m12_80 [cluster="Unk.Equal", file="RequestExtensionsFixture.cs", label="Entry Unk.Equal", span=""];
m12_105 [cluster="Nancy.Tests.xUnitExtensions.SkipException.SkipException(string)", file="RequestExtensionsFixture.cs", label="Entry Nancy.Tests.xUnitExtensions.SkipException.SkipException(string)", span="9-9"];
m12_28 [cluster="Unk.Invokes", file="RequestExtensionsFixture.cs", label="Entry Unk.Invokes", span=""];
m12_30 [cluster="Unk.CreateAndOpenWebServiceHost", file="RequestExtensionsFixture.cs", label="Entry Unk.CreateAndOpenWebServiceHost", span=""];
m12_6 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.CreateAndOpenWebServiceHost(Nancy.Bootstrapper.INancyBootstrapper)", file="RequestExtensionsFixture.cs", label="Entry Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.CreateAndOpenWebServiceHost(Nancy.Bootstrapper.INancyBootstrapper)", span="136-136"];
m12_90 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.CreateAndOpenWebServiceHost(Nancy.Bootstrapper.INancyBootstrapper)", file="RequestExtensionsFixture.cs", label="nancyBootstrapper == null", span="138-138"];
m12_92 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.CreateAndOpenWebServiceHost(Nancy.Bootstrapper.INancyBootstrapper)", file="RequestExtensionsFixture.cs", label="var host = new WebServiceHost(\r\n                new NancyWcfGenericService(nancyBootstrapper),\r\n                BaseUri)", span="143-145"];
m12_91 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.CreateAndOpenWebServiceHost(Nancy.Bootstrapper.INancyBootstrapper)", file="RequestExtensionsFixture.cs", label="nancyBootstrapper = new DefaultNancyBootstrapper()", span="140-140"];
m12_93 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.CreateAndOpenWebServiceHost(Nancy.Bootstrapper.INancyBootstrapper)", file="RequestExtensionsFixture.cs", label="host.AddServiceEndpoint(typeof (NancyWcfGenericService), new WebHttpBinding(), '''')", span="147-147"];
m12_94 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.CreateAndOpenWebServiceHost(Nancy.Bootstrapper.INancyBootstrapper)", file="RequestExtensionsFixture.cs", label="host.Open()", span="150-150"];
m12_97 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.CreateAndOpenWebServiceHost(Nancy.Bootstrapper.INancyBootstrapper)", file="RequestExtensionsFixture.cs", label="return host;", span="157-157"];
m12_95 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.CreateAndOpenWebServiceHost(Nancy.Bootstrapper.INancyBootstrapper)", file="RequestExtensionsFixture.cs", label="System.ServiceModel.AddressAccessDeniedException", span="152-152"];
m12_96 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.CreateAndOpenWebServiceHost(Nancy.Bootstrapper.INancyBootstrapper)", file="RequestExtensionsFixture.cs", label="throw new SkipException(''Skipped due to no Administrator access - please see test fixture for more information.'');", span="154-154"];
m12_98 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.CreateAndOpenWebServiceHost(Nancy.Bootstrapper.INancyBootstrapper)", file="RequestExtensionsFixture.cs", label="Exit Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.CreateAndOpenWebServiceHost(Nancy.Bootstrapper.INancyBootstrapper)", span="136-136"];
m12_9 [cluster="System.Net.WebRequest.GetResponse()", file="RequestExtensionsFixture.cs", label="Entry System.Net.WebRequest.GetResponse()", span="0-0"];
m12_100 [cluster="WebServiceHost.cstr", file="RequestExtensionsFixture.cs", label="Entry WebServiceHost.cstr", span=""];
m12_10 [cluster="object.ShouldEqual(object)", file="RequestExtensionsFixture.cs", label="Entry object.ShouldEqual(object)", span="95-95"];
m12_63 [cluster="System.Net.WebRequest.GetRequestStream()", file="RequestExtensionsFixture.cs", label="Entry System.Net.WebRequest.GetRequestStream()", span="0-0"];
m12_104 [cluster="Unk.Open", file="RequestExtensionsFixture.cs", label="Entry Unk.Open", span=""];
m12_35 [cluster="Unk.HandleRequest", file="RequestExtensionsFixture.cs", label="Entry Unk.HandleRequest", span=""];
m12_102 [cluster="WebHttpBinding.cstr", file="RequestExtensionsFixture.cs", label="Entry WebHttpBinding.cstr", span=""];
m12_62 [cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", file="RequestExtensionsFixture.cs", label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0"];
m12_103 [cluster="Unk.AddServiceEndpoint", file="RequestExtensionsFixture.cs", label="Entry Unk.AddServiceEndpoint", span=""];
m12_27 [cluster="Unk.CallTo", file="RequestExtensionsFixture.cs", label="Entry Unk.CallTo", span=""];
m12_0 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_get_any_header_from_selfhost()", file="RequestExtensionsFixture.cs", label="Entry Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_get_any_header_from_selfhost()", span="25-25"];
m12_1 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_get_any_header_from_selfhost()", file="RequestExtensionsFixture.cs", label="CreateAndOpenWebServiceHost()", span="27-27"];
m12_2 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_get_any_header_from_selfhost()", file="RequestExtensionsFixture.cs", label="var request = WebRequest.Create(new Uri(BaseUri, ''rel/header/?query=value''))", span="29-29"];
m12_3 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_get_any_header_from_selfhost()", file="RequestExtensionsFixture.cs", label="request.Method = ''GET''", span="30-30"];
m12_4 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_get_any_header_from_selfhost()", file="RequestExtensionsFixture.cs", label="request.GetResponse().Headers[''X-Some-Header''].ShouldEqual(''Some value'')", span="32-32"];
m12_5 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_get_any_header_from_selfhost()", file="RequestExtensionsFixture.cs", label="Exit Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_get_any_header_from_selfhost()", span="25-25"];
m12_42 [cluster="Unk.GetEngine", file="RequestExtensionsFixture.cs", label="Entry Unk.GetEngine", span=""];
m12_99 [cluster="Nancy.DefaultNancyBootstrapper.DefaultNancyBootstrapper()", file="RequestExtensionsFixture.cs", label="Entry Nancy.DefaultNancyBootstrapper.DefaultNancyBootstrapper()", span="16-16"];
m12_87 [cluster="lambda expression", file="RequestExtensionsFixture.cs", label="Entry lambda expression", span="112-112"];
m12_33 [cluster="lambda expression", file="RequestExtensionsFixture.cs", label="fakeEngine.HandleRequest(A<Request>.Ignored)", span="41-41"];
m12_32 [cluster="lambda expression", file="RequestExtensionsFixture.cs", label="Entry lambda expression", span="41-41"];
m12_36 [cluster="lambda expression", file="RequestExtensionsFixture.cs", label="Entry lambda expression", span="42-42"];
m12_40 [cluster="lambda expression", file="RequestExtensionsFixture.cs", label="fakeBootstrapper.GetEngine()", span="44-44"];
m12_39 [cluster="lambda expression", file="RequestExtensionsFixture.cs", label="Entry lambda expression", span="44-44"];
m12_34 [cluster="lambda expression", file="RequestExtensionsFixture.cs", label="Exit lambda expression", span="41-41"];
m12_37 [cluster="lambda expression", file="RequestExtensionsFixture.cs", label="nancyRequest = (Request)f.Arguments[0]", span="42-42"];
m12_38 [cluster="lambda expression", file="RequestExtensionsFixture.cs", label="Exit lambda expression", span="42-42"];
m12_41 [cluster="lambda expression", file="RequestExtensionsFixture.cs", label="Exit lambda expression", span="44-44"];
m12_82 [cluster="lambda expression", file="RequestExtensionsFixture.cs", label="fakeEngine.HandleRequest(A<Request>.Ignored)", span="110-110"];
m12_88 [cluster="lambda expression", file="RequestExtensionsFixture.cs", label="fakeBootstrapper.GetEngine()", span="112-112"];
m12_81 [cluster="lambda expression", file="RequestExtensionsFixture.cs", label="Entry lambda expression", span="110-110"];
m12_84 [cluster="lambda expression", file="RequestExtensionsFixture.cs", label="Entry lambda expression", span="111-111"];
m12_83 [cluster="lambda expression", file="RequestExtensionsFixture.cs", label="Exit lambda expression", span="110-110"];
m12_85 [cluster="lambda expression", file="RequestExtensionsFixture.cs", label="nancyRequest = (Request)f.Arguments[0]", span="111-111"];
m12_86 [cluster="lambda expression", file="RequestExtensionsFixture.cs", label="Exit lambda expression", span="111-111"];
m12_89 [cluster="lambda expression", file="RequestExtensionsFixture.cs", label="Exit lambda expression", span="112-112"];
m12_43 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_get_from_selfhost()", file="RequestExtensionsFixture.cs", label="Entry Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_get_from_selfhost()", span="67-67"];
m12_44 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_get_from_selfhost()", file="RequestExtensionsFixture.cs", label="CreateAndOpenWebServiceHost()", span="69-69"];
m12_45 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_get_from_selfhost()", file="RequestExtensionsFixture.cs", label="var reader =\r\n                    new StreamReader(WebRequest.Create(new Uri(BaseUri, ''rel'')).GetResponse().GetResponseStream())", span="71-72"];
m12_46 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_get_from_selfhost()", file="RequestExtensionsFixture.cs", label="var response = reader.ReadToEnd()", span="74-74"];
m12_47 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_get_from_selfhost()", file="RequestExtensionsFixture.cs", label="response.ShouldEqual(''This is the site route'')", span="76-76"];
m12_48 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_get_from_selfhost()", file="RequestExtensionsFixture.cs", label="Exit Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_get_from_selfhost()", span="67-67"];
m12_64 [cluster="System.IO.StreamWriter.Write(string)", file="RequestExtensionsFixture.cs", label="Entry System.IO.StreamWriter.Write(string)", span="0-0"];
m12_65 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_nancyrequest_contain_hostname_port_and_scheme()", file="RequestExtensionsFixture.cs", label="Entry Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_nancyrequest_contain_hostname_port_and_scheme()", span="103-103"];
m12_66 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_nancyrequest_contain_hostname_port_and_scheme()", file="RequestExtensionsFixture.cs", label="Request nancyRequest = null", span="106-106"];
m12_67 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_nancyrequest_contain_hostname_port_and_scheme()", file="RequestExtensionsFixture.cs", label="var fakeEngine = A.Fake<INancyEngine>()", span="107-107"];
m12_68 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_nancyrequest_contain_hostname_port_and_scheme()", file="RequestExtensionsFixture.cs", label="var fakeBootstrapper = A.Fake<INancyBootstrapper>()", span="108-108"];
m12_69 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_nancyrequest_contain_hostname_port_and_scheme()", file="RequestExtensionsFixture.cs", label="A.CallTo(() => fakeEngine.HandleRequest(A<Request>.Ignored))\r\n                .Invokes((f) => nancyRequest = (Request)f.Arguments[0])", span="110-111"];
m12_70 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_nancyrequest_contain_hostname_port_and_scheme()", file="RequestExtensionsFixture.cs", label="A.CallTo(() => fakeBootstrapper.GetEngine()).Returns(fakeEngine)", span="112-112"];
m12_71 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_nancyrequest_contain_hostname_port_and_scheme()", file="RequestExtensionsFixture.cs", label="CreateAndOpenWebServiceHost(fakeBootstrapper)", span="115-115"];
m12_76 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_nancyrequest_contain_hostname_port_and_scheme()", file="RequestExtensionsFixture.cs", label="Assert.Equal(1234, nancyRequest.Url.Port)", span="131-131"];
m12_77 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_nancyrequest_contain_hostname_port_and_scheme()", file="RequestExtensionsFixture.cs", label="Assert.Equal(''localhost'', nancyRequest.Url.HostName)", span="132-132"];
m12_78 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_nancyrequest_contain_hostname_port_and_scheme()", file="RequestExtensionsFixture.cs", label="Assert.Equal(''http'', nancyRequest.Url.Scheme)", span="133-133"];
m12_72 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_nancyrequest_contain_hostname_port_and_scheme()", file="RequestExtensionsFixture.cs", label="var request = WebRequest.Create(BaseUri)", span="117-117"];
m12_73 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_nancyrequest_contain_hostname_port_and_scheme()", file="RequestExtensionsFixture.cs", label="request.Method = ''GET''", span="118-118"];
m12_74 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_nancyrequest_contain_hostname_port_and_scheme()", file="RequestExtensionsFixture.cs", label="request.GetResponse()", span="122-122"];
m12_75 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_nancyrequest_contain_hostname_port_and_scheme()", file="RequestExtensionsFixture.cs", label=WebException, span="124-124"];
m12_79 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_nancyrequest_contain_hostname_port_and_scheme()", file="RequestExtensionsFixture.cs", label="Exit Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_nancyrequest_contain_hostname_port_and_scheme()", span="103-103"];
m12_49 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="RequestExtensionsFixture.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m12_31 [cluster="Unk.True", file="RequestExtensionsFixture.cs", label="Entry Unk.True", span=""];
m12_8 [cluster="System.Net.WebRequest.Create(System.Uri)", file="RequestExtensionsFixture.cs", label="Entry System.Net.WebRequest.Create(System.Uri)", span="0-0"];
m12_52 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_post_body_to_selfhost()", file="RequestExtensionsFixture.cs", label="Entry Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_post_body_to_selfhost()", span="81-81"];
m12_53 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_post_body_to_selfhost()", file="RequestExtensionsFixture.cs", label="CreateAndOpenWebServiceHost()", span="83-83"];
m12_54 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_post_body_to_selfhost()", file="RequestExtensionsFixture.cs", label="string testBody = ''This is the body of the request''", span="85-85"];
m12_55 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_post_body_to_selfhost()", file="RequestExtensionsFixture.cs", label="var request = \r\n                    WebRequest.Create(new Uri(BaseUri, ''rel''))", span="87-88"];
m12_58 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_post_body_to_selfhost()", file="RequestExtensionsFixture.cs", label="writer.Write(testBody)", span="93-93"];
m12_60 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_post_body_to_selfhost()", file="RequestExtensionsFixture.cs", label="responseBody.ShouldEqual(testBody)", span="98-98"];
m12_56 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_post_body_to_selfhost()", file="RequestExtensionsFixture.cs", label="request.Method = ''POST''", span="89-89"];
m12_57 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_post_body_to_selfhost()", file="RequestExtensionsFixture.cs", label="var writer = \r\n                    new StreamWriter(request.GetRequestStream()) {AutoFlush = true}", span="91-92"];
m12_59 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_post_body_to_selfhost()", file="RequestExtensionsFixture.cs", label="var responseBody = \r\n                    new StreamReader(request.GetResponse().GetResponseStream()).ReadToEnd()", span="95-96"];
m12_61 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_post_body_to_selfhost()", file="RequestExtensionsFixture.cs", label="Exit Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_post_body_to_selfhost()", span="81-81"];
m12_101 [cluster="Nancy.Hosting.Wcf.NancyWcfGenericService.NancyWcfGenericService(Nancy.Bootstrapper.INancyBootstrapper)", file="RequestExtensionsFixture.cs", label="Entry Nancy.Hosting.Wcf.NancyWcfGenericService.NancyWcfGenericService(Nancy.Bootstrapper.INancyBootstrapper)", span="37-37"];
m12_7 [cluster="System.Uri.Uri(System.Uri, string)", file="RequestExtensionsFixture.cs", label="Entry System.Uri.Uri(System.Uri, string)", span="0-0"];
m12_29 [cluster="Unk.Returns", file="RequestExtensionsFixture.cs", label="Entry Unk.Returns", span=""];
m12_51 [cluster="System.IO.StreamReader.ReadToEnd()", file="RequestExtensionsFixture.cs", label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0"];
m12_11 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_query_string_and_uri_correctly()", file="RequestExtensionsFixture.cs", label="Entry Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_query_string_and_uri_correctly()", span="37-37"];
m12_12 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_query_string_and_uri_correctly()", file="RequestExtensionsFixture.cs", label="Request nancyRequest = null", span="39-39"];
m12_13 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_query_string_and_uri_correctly()", file="RequestExtensionsFixture.cs", label="var fakeEngine = A.Fake<INancyEngine>()", span="40-40"];
m12_14 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_query_string_and_uri_correctly()", file="RequestExtensionsFixture.cs", label="A.CallTo(() => fakeEngine.HandleRequest(A<Request>.Ignored))\r\n                .Invokes((f) => nancyRequest = (Request)f.Arguments[0])", span="41-42"];
m12_16 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_query_string_and_uri_correctly()", file="RequestExtensionsFixture.cs", label="A.CallTo(() => fakeBootstrapper.GetEngine()).Returns(fakeEngine)", span="44-44"];
m12_15 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_query_string_and_uri_correctly()", file="RequestExtensionsFixture.cs", label="var fakeBootstrapper = A.Fake<INancyBootstrapper>()", span="43-43"];
m12_22 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_query_string_and_uri_correctly()", file="RequestExtensionsFixture.cs", label="nancyRequest.Path.ShouldEqual(''/test/stuff'')", span="61-61"];
m12_23 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_query_string_and_uri_correctly()", file="RequestExtensionsFixture.cs", label="Assert.True(nancyRequest.Query.query.HasValue)", span="62-62"];
m12_24 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_query_string_and_uri_correctly()", file="RequestExtensionsFixture.cs", label="Assert.True(nancyRequest.Query.query2.HasValue)", span="63-63"];
m12_17 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_query_string_and_uri_correctly()", file="RequestExtensionsFixture.cs", label="CreateAndOpenWebServiceHost(fakeBootstrapper)", span="46-46"];
m12_18 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_query_string_and_uri_correctly()", file="RequestExtensionsFixture.cs", label="var request = WebRequest.Create(new Uri(BaseUri, ''test/stuff?query=value&query2=value2''))", span="48-48"];
m12_19 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_query_string_and_uri_correctly()", file="RequestExtensionsFixture.cs", label="request.Method = ''GET''", span="49-49"];
m12_20 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_query_string_and_uri_correctly()", file="RequestExtensionsFixture.cs", label="request.GetResponse()", span="53-53"];
m12_21 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_query_string_and_uri_correctly()", file="RequestExtensionsFixture.cs", label=WebException, span="55-55"];
m12_25 [cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_query_string_and_uri_correctly()", file="RequestExtensionsFixture.cs", label="Exit Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_query_string_and_uri_correctly()", span="37-37"];
m12_106 [file="RequestExtensionsFixture.cs", label="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture", span=""];
m12_107 [file="RequestExtensionsFixture.cs", label=fakeEngine, span=""];
m12_108 [file="RequestExtensionsFixture.cs", label=fakeBootstrapper, span=""];
m12_109 [file="RequestExtensionsFixture.cs", label=fakeEngine, span=""];
m12_110 [file="RequestExtensionsFixture.cs", label=fakeBootstrapper, span=""];
m13_60 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_method_parameter_value_to_method_property_when_initialized()", file="RequestFixture.cs", label="Entry Nancy.Tests.Unit.RequestFixture.Should_set_method_parameter_value_to_method_property_when_initialized()", span="104-104"];
m13_63 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_method_parameter_value_to_method_property_when_initialized()", file="RequestFixture.cs", label="request.Method.ShouldEqual(method)", span="113-113"];
m13_61 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_method_parameter_value_to_method_property_when_initialized()", file="RequestFixture.cs", label="string method = ''GET''", span="107-107"];
m13_62 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_method_parameter_value_to_method_property_when_initialized()", file="RequestFixture.cs", label="var request = new Request(method, ''/'', ''http'')", span="110-110"];
m13_64 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_method_parameter_value_to_method_property_when_initialized()", file="RequestFixture.cs", label="Exit Nancy.Tests.Unit.RequestFixture.Should_set_method_parameter_value_to_method_property_when_initialized()", span="104-104"];
m13_38 [cluster="Nancy.Request.Request(string, string, string)", file="RequestFixture.cs", label="Entry Nancy.Request.Request(string, string, string)", span="27-27"];
m13_46 [cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentnullexception_when_initialized_with_null_uri()", file="RequestFixture.cs", label="Entry Nancy.Tests.Unit.RequestFixture.Should_throw_argumentnullexception_when_initialized_with_null_uri()", span="82-82"];
m13_47 [cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentnullexception_when_initialized_with_null_uri()", file="RequestFixture.cs", label="var exception =\r\n                Record.Exception(() => new Request(''GET'', null, ''http''))", span="85-86"];
m13_48 [cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentnullexception_when_initialized_with_null_uri()", file="RequestFixture.cs", label="exception.ShouldBeOfType<ArgumentNullException>()", span="89-89"];
m13_49 [cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentnullexception_when_initialized_with_null_uri()", file="RequestFixture.cs", label="Exit Nancy.Tests.Unit.RequestFixture.Should_throw_argumentnullexception_when_initialized_with_null_uri()", span="82-82"];
m13_130 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_name_on_file_extracted_from_multipart_form_data_body()", file="RequestFixture.cs", label="Entry Nancy.Tests.Unit.RequestFixture.Should_set_name_on_file_extracted_from_multipart_form_data_body()", span="278-278"];
m13_131 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_name_on_file_extracted_from_multipart_form_data_body()", file="RequestFixture.cs", label="var memory =\r\n                new MemoryStream(BuildMultipartFileValues(new Dictionary<string, Tuple<string, string>>\r\n                {\r\n                    { ''sample.txt'', new Tuple<string, string>(''content/type'', ''some test content'')}\r\n                }))", span="281-285"];
m13_132 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_name_on_file_extracted_from_multipart_form_data_body()", file="RequestFixture.cs", label="var headers =\r\n                new Dictionary<string, IEnumerable<string>>\r\n                {\r\n                    { ''content-type'', new[] { ''multipart/form-data; boundary=----NancyFormBoundary'' } }\r\n                }", span="287-291"];
m13_133 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_name_on_file_extracted_from_multipart_form_data_body()", file="RequestFixture.cs", label="var request = new Request(''POST'', ''/'', headers, CreateRequestStream(memory), ''http'')", span="294-294"];
m13_134 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_name_on_file_extracted_from_multipart_form_data_body()", file="RequestFixture.cs", label="request.Files.First().Name.ShouldEqual(''sample.txt'')", span="297-297"];
m13_135 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_name_on_file_extracted_from_multipart_form_data_body()", file="RequestFixture.cs", label="Exit Nancy.Tests.Unit.RequestFixture.Should_set_name_on_file_extracted_from_multipart_form_data_body()", span="278-278"];
m13_208 [cluster="System.Text.StringBuilder.Append(string)", file="RequestFixture.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m13_16 [cluster="Nancy.Request.Request(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, Nancy.IO.RequestStream, string, string)", file="RequestFixture.cs", label="Entry Nancy.Request.Request(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, Nancy.IO.RequestStream, string, string)", span="41-41"];
m13_114 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extracted_files_to_files_collection_when_body_content_type_is_multipart_form_data()", file="RequestFixture.cs", label="Entry Nancy.Tests.Unit.RequestFixture.Should_set_extracted_files_to_files_collection_when_body_content_type_is_multipart_form_data()", span="232-232"];
m13_115 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extracted_files_to_files_collection_when_body_content_type_is_multipart_form_data()", file="RequestFixture.cs", label="var memory =\r\n                new MemoryStream(BuildMultipartFileValues(new Dictionary<string, Tuple<string, string>>\r\n                {\r\n                    { ''test'', new Tuple<string, string>(''content/type'', ''some test content'')}\r\n                }))", span="235-239"];
m13_116 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extracted_files_to_files_collection_when_body_content_type_is_multipart_form_data()", file="RequestFixture.cs", label="var headers =\r\n                new Dictionary<string, IEnumerable<string>>\r\n                {\r\n                    { ''content-type'', new[] { ''multipart/form-data; boundary=----NancyFormBoundary'' } }\r\n                }", span="241-245"];
m13_117 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extracted_files_to_files_collection_when_body_content_type_is_multipart_form_data()", file="RequestFixture.cs", label="var request = new Request(''POST'', ''/'', headers, CreateRequestStream(memory), ''http'')", span="248-248"];
m13_118 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extracted_files_to_files_collection_when_body_content_type_is_multipart_form_data()", file="RequestFixture.cs", label="request.Files.ShouldHaveCount(1)", span="251-251"];
m13_119 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extracted_files_to_files_collection_when_body_content_type_is_multipart_form_data()", file="RequestFixture.cs", label="Exit Nancy.Tests.Unit.RequestFixture.Should_set_extracted_files_to_files_collection_when_body_content_type_is_multipart_form_data()", span="232-232"];
m13_81 [cluster="object.ShouldBeSameAs(object)", file="RequestFixture.cs", label="Entry object.ShouldBeSameAs(object)", span="115-115"];
m13_104 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extracted_form_data_from_body_when_content_type_is_multipart_form_data()", file="RequestFixture.cs", label="Entry Nancy.Tests.Unit.RequestFixture.Should_set_extracted_form_data_from_body_when_content_type_is_multipart_form_data()", span="207-207"];
m13_105 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extracted_form_data_from_body_when_content_type_is_multipart_form_data()", file="RequestFixture.cs", label="var memory =\r\n                new MemoryStream(BuildMultipartFormValues(new Dictionary<string, string>\r\n                {\r\n                    { ''name'', ''John Doe''},\r\n                    { ''age'', ''42''}\r\n                }))", span="210-215"];
m13_106 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extracted_form_data_from_body_when_content_type_is_multipart_form_data()", file="RequestFixture.cs", label="var headers =\r\n                new Dictionary<string, IEnumerable<string>>\r\n                {\r\n                    { ''content-type'', new[] { ''multipart/form-data; boundary=----NancyFormBoundary'' } }\r\n                }", span="217-221"];
m13_107 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extracted_form_data_from_body_when_content_type_is_multipart_form_data()", file="RequestFixture.cs", label="var request = new Request(''POST'', ''/'', headers, CreateRequestStream(memory), ''http'')", span="224-224"];
m13_108 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extracted_form_data_from_body_when_content_type_is_multipart_form_data()", file="RequestFixture.cs", label="((string)request.Form.name).ShouldEqual(''John Doe'')", span="227-227"];
m13_109 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extracted_form_data_from_body_when_content_type_is_multipart_form_data()", file="RequestFixture.cs", label="((string)request.Form.age).ShouldEqual(''42'')", span="228-228"];
m13_110 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extracted_form_data_from_body_when_content_type_is_multipart_form_data()", file="RequestFixture.cs", label="Exit Nancy.Tests.Unit.RequestFixture.Should_set_extracted_form_data_from_body_when_content_type_is_multipart_form_data()", span="207-207"];
m13_111 [cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="RequestFixture.cs", label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0"];
m13_121 [cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="RequestFixture.cs", label="Entry Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", span="427-427"];
m13_212 [cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="RequestFixture.cs", label="var boundaryBuilder = new StringBuilder()", span="429-429"];
m13_213 [cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="RequestFixture.cs", label="formValues.Keys", span="431-431"];
m13_223 [cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="RequestFixture.cs", label="boundaryBuilder.AppendFormat(''Content-Type: {0}'', formValues[key].Item1)", span="442-442"];
m13_228 [cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="RequestFixture.cs", label="boundaryBuilder.Append(formValues[key].Item2)", span="447-447"];
m13_232 [cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="RequestFixture.cs", label="var bytes =\r\n                Encoding.ASCII.GetBytes(boundaryBuilder.ToString())", span="454-455"];
m13_233 [cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="RequestFixture.cs", label="return bytes;", span="457-457"];
m13_214 [cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="RequestFixture.cs", label="boundaryBuilder.Append('\r')", span="433-433"];
m13_215 [cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="RequestFixture.cs", label="boundaryBuilder.Append('\n')", span="434-434"];
m13_216 [cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="RequestFixture.cs", label="boundaryBuilder.Append(''--'')", span="435-435"];
m13_217 [cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="RequestFixture.cs", label="boundaryBuilder.Append(''----NancyFormBoundary'')", span="436-436"];
m13_218 [cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="RequestFixture.cs", label="boundaryBuilder.Append('\r')", span="437-437"];
m13_219 [cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="RequestFixture.cs", label="boundaryBuilder.Append('\n')", span="438-438"];
m13_220 [cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="RequestFixture.cs", label="boundaryBuilder.AppendFormat(''Content-Disposition: form-data; name=\''whatever\''; filename=\''{0}\'''', key)", span="439-439"];
m13_221 [cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="RequestFixture.cs", label="boundaryBuilder.Append('\r')", span="440-440"];
m13_222 [cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="RequestFixture.cs", label="boundaryBuilder.Append('\n')", span="441-441"];
m13_224 [cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="RequestFixture.cs", label="boundaryBuilder.Append('\r')", span="443-443"];
m13_225 [cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="RequestFixture.cs", label="boundaryBuilder.Append('\n')", span="444-444"];
m13_226 [cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="RequestFixture.cs", label="boundaryBuilder.Append('\r')", span="445-445"];
m13_227 [cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="RequestFixture.cs", label="boundaryBuilder.Append('\n')", span="446-446"];
m13_229 [cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="RequestFixture.cs", label="boundaryBuilder.Append('\r')", span="450-450"];
m13_230 [cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="RequestFixture.cs", label="boundaryBuilder.Append('\n')", span="451-451"];
m13_231 [cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="RequestFixture.cs", label="boundaryBuilder.Append(''------NancyFormBoundary--'')", span="452-452"];
m13_234 [cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="RequestFixture.cs", label="Exit Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", span="427-427"];
m13_17 [cluster="object.ShouldEqual(object)", file="RequestFixture.cs", label="Entry object.ShouldEqual(object)", span="80-80"];
m13_162 [cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentnullexception_when_initialized_with_null_protocol()", file="RequestFixture.cs", label="Entry Nancy.Tests.Unit.RequestFixture.Should_throw_argumentnullexception_when_initialized_with_null_protocol()", span="353-353"];
m13_163 [cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentnullexception_when_initialized_with_null_protocol()", file="RequestFixture.cs", label="var exception =\r\n                Record.Exception(() => new Request(''GET'', ''/'', null))", span="356-357"];
m13_164 [cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentnullexception_when_initialized_with_null_protocol()", file="RequestFixture.cs", label="exception.ShouldBeOfType<ArgumentNullException>()", span="360-360"];
m13_165 [cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentnullexception_when_initialized_with_null_protocol()", file="RequestFixture.cs", label="Exit Nancy.Tests.Unit.RequestFixture.Should_throw_argumentnullexception_when_initialized_with_null_protocol()", span="353-353"];
m13_206 [cluster="System.Text.StringBuilder.StringBuilder()", file="RequestFixture.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m13_11 [cluster="Nancy.Tests.Unit.RequestFixture.CreateRequestStream()", file="RequestFixture.cs", label="Entry Nancy.Tests.Unit.RequestFixture.CreateRequestStream()", span="387-387"];
m13_181 [cluster="Nancy.Tests.Unit.RequestFixture.CreateRequestStream()", file="RequestFixture.cs", label="return CreateRequestStream(new MemoryStream());", span="389-389"];
m13_182 [cluster="Nancy.Tests.Unit.RequestFixture.CreateRequestStream()", file="RequestFixture.cs", label="Exit Nancy.Tests.Unit.RequestFixture.CreateRequestStream()", span="387-387"];
m13_122 [cluster="System.Collections.Generic.IEnumerable<T>.ShouldHaveCount<T>(int)", file="RequestFixture.cs", label="Entry System.Collections.Generic.IEnumerable<T>.ShouldHaveCount<T>(int)", span="65-65"];
m13_142 [cluster="Nancy.Tests.Unit.RequestFixture.GetStringValue(System.IO.Stream)", file="RequestFixture.cs", label="Entry Nancy.Tests.Unit.RequestFixture.GetStringValue(System.IO.Stream)", span="323-323"];
m13_143 [cluster="Nancy.Tests.Unit.RequestFixture.GetStringValue(System.IO.Stream)", file="RequestFixture.cs", label="var reader = new StreamReader(stream)", span="325-325"];
m13_144 [cluster="Nancy.Tests.Unit.RequestFixture.GetStringValue(System.IO.Stream)", file="RequestFixture.cs", label="return reader.ReadToEnd();", span="326-326"];
m13_145 [cluster="Nancy.Tests.Unit.RequestFixture.GetStringValue(System.IO.Stream)", file="RequestFixture.cs", label="Exit Nancy.Tests.Unit.RequestFixture.GetStringValue(System.IO.Stream)", span="323-323"];
m13_210 [cluster="System.Text.StringBuilder.ToString()", file="RequestFixture.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m13_93 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded_with_character_set()", file="RequestFixture.cs", label="Entry Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded_with_character_set()", span="183-183"];
m13_94 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded_with_character_set()", file="RequestFixture.cs", label="string bodyContent = ''name=John+Doe&gender=male&family=5&city=kent&city=miami&other=abc%0D%0Adef&nickname=J%26D''", span="186-186"];
m13_95 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded_with_character_set()", file="RequestFixture.cs", label="var memory = CreateRequestStream()", span="187-187"];
m13_98 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded_with_character_set()", file="RequestFixture.cs", label="writer.Flush()", span="190-190"];
m13_100 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded_with_character_set()", file="RequestFixture.cs", label="var headers =\r\n                new Dictionary<string, IEnumerable<string>>\r\n                {\r\n                    { ''content-type'', new[] { ''application/x-www-form-urlencoded; charset=UTF-8'' } }\r\n                }", span="193-197"];
m13_97 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded_with_character_set()", file="RequestFixture.cs", label="writer.Write(bodyContent)", span="189-189"];
m13_96 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded_with_character_set()", file="RequestFixture.cs", label="var writer = new StreamWriter(memory)", span="188-188"];
m13_99 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded_with_character_set()", file="RequestFixture.cs", label="memory.Position = 0", span="191-191"];
m13_101 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded_with_character_set()", file="RequestFixture.cs", label="var request = new Request(''POST'', ''/'', headers, memory, ''http'')", span="200-200"];
m13_102 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded_with_character_set()", file="RequestFixture.cs", label="((string)request.Form.name).ShouldEqual(''John Doe'')", span="203-203"];
m13_103 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded_with_character_set()", file="RequestFixture.cs", label="Exit Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded_with_character_set()", span="183-183"];
m13_76 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_body_parameter_value_to_body_property_when_initialized()", file="RequestFixture.cs", label="Entry Nancy.Tests.Unit.RequestFixture.Should_set_body_parameter_value_to_body_property_when_initialized()", span="146-146"];
m13_77 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_body_parameter_value_to_body_property_when_initialized()", file="RequestFixture.cs", label="var body = CreateRequestStream()", span="149-149"];
m13_78 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_body_parameter_value_to_body_property_when_initialized()", file="RequestFixture.cs", label="var request = new Request(''GET'', ''/'', new Dictionary<string, IEnumerable<string>>(), body, ''http'')", span="152-152"];
m13_79 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_body_parameter_value_to_body_property_when_initialized()", file="RequestFixture.cs", label="request.Body.ShouldBeSameAs(body)", span="155-155"];
m13_80 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_body_parameter_value_to_body_property_when_initialized()", file="RequestFixture.cs", label="Exit Nancy.Tests.Unit.RequestFixture.Should_set_body_parameter_value_to_body_property_when_initialized()", span="146-146"];
m13_209 [cluster="System.Text.StringBuilder.AppendFormat(string, object)", file="RequestFixture.cs", label="Entry System.Text.StringBuilder.AppendFormat(string, object)", span="0-0"];
m13_161 [cluster="Unk.ToString", file="RequestFixture.cs", label="Entry Unk.ToString", span=""];
m13_29 [cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentnullexception_when_initialized_with_null_method()", file="RequestFixture.cs", label="Entry Nancy.Tests.Unit.RequestFixture.Should_throw_argumentnullexception_when_initialized_with_null_method()", span="60-60"];
m13_30 [cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentnullexception_when_initialized_with_null_method()", file="RequestFixture.cs", label="var exception =\r\n                Record.Exception(() => new Request(null, ''/'', ''http''))", span="63-64"];
m13_31 [cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentnullexception_when_initialized_with_null_method()", file="RequestFixture.cs", label="exception.ShouldBeOfType<ArgumentNullException>()", span="67-67"];
m13_32 [cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentnullexception_when_initialized_with_null_method()", file="RequestFixture.cs", label="Exit Nancy.Tests.Unit.RequestFixture.Should_throw_argumentnullexception_when_initialized_with_null_method()", span="60-60"];
m13_12 [cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", file="RequestFixture.cs", label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0"];
m13_70 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_header_parameter_value_to_header_property_when_initialized()", file="RequestFixture.cs", label="Entry Nancy.Tests.Unit.RequestFixture.Should_set_header_parameter_value_to_header_property_when_initialized()", span="130-130"];
m13_72 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_header_parameter_value_to_header_property_when_initialized()", file="RequestFixture.cs", label="var request = new Request(''GET'', ''/'', headers, CreateRequestStream(), ''http'')", span="139-139"];
m13_71 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_header_parameter_value_to_header_property_when_initialized()", file="RequestFixture.cs", label="var headers = new Dictionary<string, IEnumerable<string>>()\r\n                {\r\n                    { ''content-type'', new[] {''foo''} }\r\n                }", span="133-136"];
m13_73 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_header_parameter_value_to_header_property_when_initialized()", file="RequestFixture.cs", label="request.Headers.ContentType.ShouldNotBeEmpty()", span="142-142"];
m13_74 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_header_parameter_value_to_header_property_when_initialized()", file="RequestFixture.cs", label="Exit Nancy.Tests.Unit.RequestFixture.Should_set_header_parameter_value_to_header_property_when_initialized()", span="130-130"];
m13_176 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_protocol_parameter_value_to_protocol_property_when_initialized()", file="RequestFixture.cs", label="Entry Nancy.Tests.Unit.RequestFixture.Should_set_protocol_parameter_value_to_protocol_property_when_initialized()", span="375-375"];
m13_179 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_protocol_parameter_value_to_protocol_property_when_initialized()", file="RequestFixture.cs", label="request.Url.Scheme.ShouldEqual(protocol)", span="384-384"];
m13_177 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_protocol_parameter_value_to_protocol_property_when_initialized()", file="RequestFixture.cs", label="string protocol = ''http''", span="378-378"];
m13_178 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_protocol_parameter_value_to_protocol_property_when_initialized()", file="RequestFixture.cs", label="var request = new Request(''GET'', ''/'', protocol)", span="381-381"];
m13_180 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_protocol_parameter_value_to_protocol_property_when_initialized()", file="RequestFixture.cs", label="Exit Nancy.Tests.Unit.RequestFixture.Should_set_protocol_parameter_value_to_protocol_property_when_initialized()", span="375-375"];
m13_15 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RequestFixture.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m13_169 [cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_an_empty_protocol()", file="RequestFixture.cs", label="Entry Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_an_empty_protocol()", span="364-364"];
m13_170 [cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_an_empty_protocol()", file="RequestFixture.cs", label="var exception =\r\n                Record.Exception(() => new Request(''GET'', ''/'', string.Empty))", span="367-368"];
m13_171 [cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_an_empty_protocol()", file="RequestFixture.cs", label="exception.ShouldBeOfType<ArgumentOutOfRangeException>()", span="371-371"];
m13_172 [cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_an_empty_protocol()", file="RequestFixture.cs", label="Exit Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_an_empty_protocol()", span="364-364"];
m13_120 [cluster="System.Tuple<T1, T2>.Tuple(T1, T2)", file="RequestFixture.cs", label="Entry System.Tuple<T1, T2>.Tuple(T1, T2)", span="0-0"];
m13_207 [cluster="System.Text.StringBuilder.Append(char)", file="RequestFixture.cs", label="Entry System.Text.StringBuilder.Append(char)", span="0-0"];
m13_0 [cluster="Nancy.Bootstrapper.IStartup.Initialize(Nancy.Bootstrapper.IPipelines)", file="RequestFixture.cs", label="Entry Nancy.Bootstrapper.IStartup.Initialize(Nancy.Bootstrapper.IPipelines)", span="28-28"];
m13_2 [cluster="Nancy.Tests.Unit.RequestFixture.Should_override_request_method_on_post()", file="RequestFixture.cs", label="var memory = CreateRequestStream()", span="18-18"];
m13_5 [cluster="Nancy.Tests.Unit.RequestFixture.Should_override_request_method_on_post()", file="RequestFixture.cs", label="writer.Flush()", span="21-21"];
m13_7 [cluster="Nancy.Tests.Unit.RequestFixture.Should_override_request_method_on_post()", file="RequestFixture.cs", label="var headers =\r\n                new Dictionary<string, IEnumerable<string>> { { ''content-type'', new[] { ''application/x-www-form-urlencoded'' } } }", span="24-25"];
m13_3 [cluster="Nancy.Tests.Unit.RequestFixture.Should_override_request_method_on_post()", file="RequestFixture.cs", label="var writer = new StreamWriter(memory)", span="19-19"];
m13_1 [cluster="Nancy.Bootstrapper.IStartup.Initialize(Nancy.Bootstrapper.IPipelines)", file="RequestFixture.cs", label="Exit Nancy.Bootstrapper.IStartup.Initialize(Nancy.Bootstrapper.IPipelines)", span="28-28"];
m13_6 [cluster="Nancy.Tests.Unit.RequestFixture.Should_override_request_method_on_post()", file="RequestFixture.cs", label="memory.Position = 0", span="22-22"];
m13_8 [cluster="Nancy.Tests.Unit.RequestFixture.Should_override_request_method_on_post()", file="RequestFixture.cs", label="var request = new Request(''POST'', ''/'', headers, memory, ''http'')", span="28-28"];
m13_4 [cluster="Nancy.Tests.Unit.RequestFixture.Should_override_request_method_on_post()", file="RequestFixture.cs", label="writer.Write(bodyContent)", span="20-20"];
m13_9 [cluster="Nancy.Tests.Unit.RequestFixture.Should_override_request_method_on_post()", file="RequestFixture.cs", label="request.Method.ShouldEqual(''GET'')", span="31-31"];
m13_10 [cluster="Nancy.Tests.Unit.RequestFixture.Should_override_request_method_on_post()", file="RequestFixture.cs", label="Exit Nancy.Tests.Unit.RequestFixture.Should_override_request_method_on_post()", span="14-14"];
m13_113 [cluster="Nancy.Tests.Unit.RequestFixture.CreateRequestStream(System.IO.Stream)", file="RequestFixture.cs", label="Entry Nancy.Tests.Unit.RequestFixture.CreateRequestStream(System.IO.Stream)", span="392-392"];
m13_183 [cluster="Nancy.Tests.Unit.RequestFixture.CreateRequestStream(System.IO.Stream)", file="RequestFixture.cs", label="return RequestStream.FromStream(stream);", span="394-394"];
m13_184 [cluster="Nancy.Tests.Unit.RequestFixture.CreateRequestStream(System.IO.Stream)", file="RequestFixture.cs", label="Exit Nancy.Tests.Unit.RequestFixture.CreateRequestStream(System.IO.Stream)", span="392-392"];
m13_112 [cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="RequestFixture.cs", label="Entry Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", span="397-397"];
m13_186 [cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="RequestFixture.cs", label="var boundaryBuilder = new StringBuilder()", span="399-399"];
m13_187 [cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="RequestFixture.cs", label="formValues.Keys", span="401-401"];
m13_199 [cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="RequestFixture.cs", label="boundaryBuilder.Append(formValues[key])", span="414-414"];
m13_203 [cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="RequestFixture.cs", label="var bytes =\r\n                Encoding.ASCII.GetBytes(boundaryBuilder.ToString())", span="421-422"];
m13_204 [cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="RequestFixture.cs", label="return bytes;", span="424-424"];
m13_188 [cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="RequestFixture.cs", label="boundaryBuilder.Append('\r')", span="403-403"];
m13_189 [cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="RequestFixture.cs", label="boundaryBuilder.Append('\n')", span="404-404"];
m13_190 [cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="RequestFixture.cs", label="boundaryBuilder.Append(''--'')", span="405-405"];
m13_191 [cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="RequestFixture.cs", label="boundaryBuilder.Append(''----NancyFormBoundary'')", span="406-406"];
m13_192 [cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="RequestFixture.cs", label="boundaryBuilder.Append('\r')", span="407-407"];
m13_193 [cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="RequestFixture.cs", label="boundaryBuilder.Append('\n')", span="408-408"];
m13_194 [cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="RequestFixture.cs", label="boundaryBuilder.AppendFormat(''Content-Disposition: form-data; name=\''{0}\'''', key)", span="409-409"];
m13_195 [cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="RequestFixture.cs", label="boundaryBuilder.Append('\r')", span="410-410"];
m13_196 [cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="RequestFixture.cs", label="boundaryBuilder.Append('\n')", span="411-411"];
m13_197 [cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="RequestFixture.cs", label="boundaryBuilder.Append('\r')", span="412-412"];
m13_198 [cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="RequestFixture.cs", label="boundaryBuilder.Append('\n')", span="413-413"];
m13_200 [cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="RequestFixture.cs", label="boundaryBuilder.Append('\r')", span="417-417"];
m13_201 [cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="RequestFixture.cs", label="boundaryBuilder.Append('\n')", span="418-418"];
m13_202 [cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="RequestFixture.cs", label="boundaryBuilder.Append(''------NancyFormBoundary--'')", span="419-419"];
m13_205 [cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="RequestFixture.cs", label="Exit Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", span="397-397"];
m13_129 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="RequestFixture.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m13_39 [cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_empty_method()", file="RequestFixture.cs", label="Entry Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_empty_method()", span="71-71"];
m13_40 [cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_empty_method()", file="RequestFixture.cs", label="var exception =\r\n                Record.Exception(() => new Request(string.Empty, ''/'', ''http''))", span="74-75"];
m13_41 [cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_empty_method()", file="RequestFixture.cs", label="exception.ShouldBeOfType<ArgumentOutOfRangeException>()", span="78-78"];
m13_42 [cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_empty_method()", file="RequestFixture.cs", label="Exit Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_empty_method()", span="71-71"];
m13_173 [cluster="lambda expression", file="RequestFixture.cs", label="Entry lambda expression", span="368-368"];
m13_36 [cluster="lambda expression", file="RequestFixture.cs", label="new Request(null, ''/'', ''http'')", span="64-64"];
m13_44 [cluster="lambda expression", file="RequestFixture.cs", label="new Request(string.Empty, ''/'', ''http'')", span="75-75"];
m13_51 [cluster="lambda expression", file="RequestFixture.cs", label="new Request(''GET'', null, ''http'')", span="86-86"];
m13_58 [cluster="lambda expression", file="RequestFixture.cs", label="new Request(''GET'', string.Empty, ''http'')", span="97-97"];
m13_167 [cluster="lambda expression", file="RequestFixture.cs", label="new Request(''GET'', ''/'', null)", span="357-357"];
m13_174 [cluster="lambda expression", file="RequestFixture.cs", label="new Request(''GET'', ''/'', string.Empty)", span="368-368"];
m13_35 [cluster="lambda expression", file="RequestFixture.cs", label="Entry lambda expression", span="64-64"];
m13_37 [cluster="lambda expression", file="RequestFixture.cs", label="Exit lambda expression", span="64-64"];
m13_43 [cluster="lambda expression", file="RequestFixture.cs", label="Entry lambda expression", span="75-75"];
m13_45 [cluster="lambda expression", file="RequestFixture.cs", label="Exit lambda expression", span="75-75"];
m13_50 [cluster="lambda expression", file="RequestFixture.cs", label="Entry lambda expression", span="86-86"];
m13_52 [cluster="lambda expression", file="RequestFixture.cs", label="Exit lambda expression", span="86-86"];
m13_57 [cluster="lambda expression", file="RequestFixture.cs", label="Entry lambda expression", span="97-97"];
m13_59 [cluster="lambda expression", file="RequestFixture.cs", label="Exit lambda expression", span="97-97"];
m13_166 [cluster="lambda expression", file="RequestFixture.cs", label="Entry lambda expression", span="357-357"];
m13_168 [cluster="lambda expression", file="RequestFixture.cs", label="Exit lambda expression", span="357-357"];
m13_175 [cluster="lambda expression", file="RequestFixture.cs", label="Exit lambda expression", span="368-368"];
m13_53 [cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_empty_uri()", file="RequestFixture.cs", label="Entry Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_empty_uri()", span="93-93"];
m13_54 [cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_empty_uri()", file="RequestFixture.cs", label="var exception =\r\n                Record.Exception(() => new Request(''GET'', string.Empty, ''http''))", span="96-97"];
m13_55 [cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_empty_uri()", file="RequestFixture.cs", label="exception.ShouldBeOfType<ArgumentOutOfRangeException>()", span="100-100"];
m13_56 [cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_empty_uri()", file="RequestFixture.cs", label="Exit Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_empty_uri()", span="93-93"];
m13_65 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_uri_parameter_value_to_uri_property_when_initialized()", file="RequestFixture.cs", label="Entry Nancy.Tests.Unit.RequestFixture.Should_set_uri_parameter_value_to_uri_property_when_initialized()", span="117-117"];
m13_68 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_uri_parameter_value_to_uri_property_when_initialized()", file="RequestFixture.cs", label="request.Path.ShouldEqual(path)", span="126-126"];
m13_66 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_uri_parameter_value_to_uri_property_when_initialized()", file="RequestFixture.cs", label="string path = ''/''", span="120-120"];
m13_67 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_uri_parameter_value_to_uri_property_when_initialized()", file="RequestFixture.cs", label="var request = new Request(''GET'', path, ''http'')", span="123-123"];
m13_69 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_uri_parameter_value_to_uri_property_when_initialized()", file="RequestFixture.cs", label="Exit Nancy.Tests.Unit.RequestFixture.Should_set_uri_parameter_value_to_uri_property_when_initialized()", span="117-117"];
m13_160 [cluster="System.IO.MemoryStream.MemoryStream()", file="RequestFixture.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m13_18 [cluster="Nancy.Tests.Unit.RequestFixture.Should_only_override_method_on_post(string)", file="RequestFixture.cs", label="Entry Nancy.Tests.Unit.RequestFixture.Should_only_override_method_on_post(string)", span="39-39"];
m13_20 [cluster="Nancy.Tests.Unit.RequestFixture.Should_only_override_method_on_post(string)", file="RequestFixture.cs", label="var memory = CreateRequestStream()", span="43-43"];
m13_23 [cluster="Nancy.Tests.Unit.RequestFixture.Should_only_override_method_on_post(string)", file="RequestFixture.cs", label="writer.Flush()", span="46-46"];
m13_25 [cluster="Nancy.Tests.Unit.RequestFixture.Should_only_override_method_on_post(string)", file="RequestFixture.cs", label="var headers =\r\n                new Dictionary<string, IEnumerable<string>> { { ''content-type'', new[] { ''application/x-www-form-urlencoded'' } } }", span="49-50"];
m13_21 [cluster="Nancy.Tests.Unit.RequestFixture.Should_only_override_method_on_post(string)", file="RequestFixture.cs", label="var writer = new StreamWriter(memory)", span="44-44"];
m13_19 [cluster="Nancy.Tests.Unit.RequestFixture.Should_only_override_method_on_post(string)", file="RequestFixture.cs", label="string bodyContent = ''_method=TEST''", span="42-42"];
m13_24 [cluster="Nancy.Tests.Unit.RequestFixture.Should_only_override_method_on_post(string)", file="RequestFixture.cs", label="memory.Position = 0", span="47-47"];
m13_26 [cluster="Nancy.Tests.Unit.RequestFixture.Should_only_override_method_on_post(string)", file="RequestFixture.cs", label="var request = new Request(method, ''/'', headers, memory, ''http'')", span="53-53"];
m13_22 [cluster="Nancy.Tests.Unit.RequestFixture.Should_only_override_method_on_post(string)", file="RequestFixture.cs", label="writer.Write(bodyContent)", span="45-45"];
m13_27 [cluster="Nancy.Tests.Unit.RequestFixture.Should_only_override_method_on_post(string)", file="RequestFixture.cs", label="request.Method.ShouldEqual(method)", span="56-56"];
m13_28 [cluster="Nancy.Tests.Unit.RequestFixture.Should_only_override_method_on_post(string)", file="RequestFixture.cs", label="Exit Nancy.Tests.Unit.RequestFixture.Should_only_override_method_on_post(string)", span="39-39"];
m13_82 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded()", file="RequestFixture.cs", label="Entry Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded()", span="159-159"];
m13_88 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded()", color=green, community=0, file="RequestFixture.cs", label="memory.Position = 0", prediction=17, span="167-167"];
m13_84 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded()", file="RequestFixture.cs", label="var memory = CreateRequestStream()", span="163-163"];
m13_87 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded()", file="RequestFixture.cs", label="writer.Flush()", span="166-166"];
m13_89 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded()", file="RequestFixture.cs", label="var headers = \r\n                new Dictionary<string, IEnumerable<string>>\r\n                {\r\n                    { ''content-type'', new[] { ''application/x-www-form-urlencoded'' } }\r\n                }", span="169-173"];
m13_83 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded()", file="RequestFixture.cs", label="string bodyContent = ''name=John+Doe&gender=male&family=5&city=kent&city=miami&other=abc%0D%0Adef&nickname=J%26D''", span="162-162"];
m13_85 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded()", file="RequestFixture.cs", label="var writer = new StreamWriter(memory)", span="164-164"];
m13_90 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded()", file="RequestFixture.cs", label="var request = new Request(''POST'', ''/'', headers, memory, ''http'')", span="176-176"];
m13_86 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded()", file="RequestFixture.cs", label="writer.Write(bodyContent)", span="165-165"];
m13_91 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded()", file="RequestFixture.cs", label="((string)request.Form.name).ShouldEqual(''John Doe'')", span="179-179"];
m13_92 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded()", file="RequestFixture.cs", label="Exit Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded()", span="159-159"];
m13_13 [cluster="System.IO.StreamWriter.Write(string)", file="RequestFixture.cs", label="Entry System.IO.StreamWriter.Write(string)", span="0-0"];
m13_33 [cluster="Unk.Exception", file="RequestFixture.cs", label="Entry Unk.Exception", span=""];
m13_146 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="RequestFixture.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m13_148 [cluster="Nancy.Tests.Unit.RequestFixture.Should_be_able_to_invoke_form_repeatedly()", file="RequestFixture.cs", label="Entry Nancy.Tests.Unit.RequestFixture.Should_be_able_to_invoke_form_repeatedly()", span="330-330"];
m13_149 [cluster="Nancy.Tests.Unit.RequestFixture.Should_be_able_to_invoke_form_repeatedly()", file="RequestFixture.cs", label="string bodyContent = ''name=John+Doe&gender=male&family=5&city=kent&city=miami&other=abc%0D%0Adef&nickname=J%26D''", span="332-332"];
m13_153 [cluster="Nancy.Tests.Unit.RequestFixture.Should_be_able_to_invoke_form_repeatedly()", file="RequestFixture.cs", label="writer.Flush()", span="336-336"];
m13_155 [cluster="Nancy.Tests.Unit.RequestFixture.Should_be_able_to_invoke_form_repeatedly()", file="RequestFixture.cs", label="var headers =\r\n				new Dictionary<string, IEnumerable<string>>\r\n                {\r\n                    { ''content-type'', new[] { ''application/x-www-form-urlencoded'' } }\r\n                }", span="339-343"];
m13_150 [cluster="Nancy.Tests.Unit.RequestFixture.Should_be_able_to_invoke_form_repeatedly()", file="RequestFixture.cs", label="var memory = new MemoryStream()", span="333-333"];
m13_152 [cluster="Nancy.Tests.Unit.RequestFixture.Should_be_able_to_invoke_form_repeatedly()", file="RequestFixture.cs", label="writer.Write(bodyContent)", span="335-335"];
m13_151 [cluster="Nancy.Tests.Unit.RequestFixture.Should_be_able_to_invoke_form_repeatedly()", file="RequestFixture.cs", label="var writer = new StreamWriter(memory)", span="334-334"];
m13_156 [cluster="Nancy.Tests.Unit.RequestFixture.Should_be_able_to_invoke_form_repeatedly()", file="RequestFixture.cs", label="var request = new Request(''POST'', ''/'', headers, CreateRequestStream(memory), ''http'')", span="346-346"];
m13_154 [cluster="Nancy.Tests.Unit.RequestFixture.Should_be_able_to_invoke_form_repeatedly()", file="RequestFixture.cs", label="memory.Position = 0", span="337-337"];
m13_157 [cluster="Nancy.Tests.Unit.RequestFixture.Should_be_able_to_invoke_form_repeatedly()", file="RequestFixture.cs", label="request.Form.ToString()", span="347-347"];
m13_158 [cluster="Nancy.Tests.Unit.RequestFixture.Should_be_able_to_invoke_form_repeatedly()", file="RequestFixture.cs", label="((string)request.Form.name).ShouldEqual(''John Doe'')", span="349-349"];
m13_159 [cluster="Nancy.Tests.Unit.RequestFixture.Should_be_able_to_invoke_form_repeatedly()", file="RequestFixture.cs", label="Exit Nancy.Tests.Unit.RequestFixture.Should_be_able_to_invoke_form_repeatedly()", span="330-330"];
m13_14 [cluster="System.IO.StreamWriter.Flush()", file="RequestFixture.cs", label="Entry System.IO.StreamWriter.Flush()", span="0-0"];
m13_123 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_content_type_on_file_extracted_from_multipart_form_data_body()", file="RequestFixture.cs", label="Entry Nancy.Tests.Unit.RequestFixture.Should_set_content_type_on_file_extracted_from_multipart_form_data_body()", span="255-255"];
m13_124 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_content_type_on_file_extracted_from_multipart_form_data_body()", file="RequestFixture.cs", label="var memory =\r\n                new MemoryStream(BuildMultipartFileValues(new Dictionary<string, Tuple<string, string>>\r\n                {\r\n                    { ''sample.txt'', new Tuple<string, string>(''content/type'', ''some test content'')}\r\n                }))", span="258-262"];
m13_125 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_content_type_on_file_extracted_from_multipart_form_data_body()", file="RequestFixture.cs", label="var headers =\r\n                new Dictionary<string, IEnumerable<string>>\r\n                {\r\n                    { ''content-type'', new[] { ''multipart/form-data; boundary=----NancyFormBoundary'' } }\r\n                }", span="264-268"];
m13_126 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_content_type_on_file_extracted_from_multipart_form_data_body()", file="RequestFixture.cs", label="var request = new Request(''POST'', ''/'', headers, CreateRequestStream(memory), ''http'')", span="271-271"];
m13_127 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_content_type_on_file_extracted_from_multipart_form_data_body()", file="RequestFixture.cs", label="request.Files.First().ContentType.ShouldEqual(''content/type'')", span="274-274"];
m13_128 [cluster="Nancy.Tests.Unit.RequestFixture.Should_set_content_type_on_file_extracted_from_multipart_form_data_body()", file="RequestFixture.cs", label="Exit Nancy.Tests.Unit.RequestFixture.Should_set_content_type_on_file_extracted_from_multipart_form_data_body()", span="255-255"];
m13_211 [cluster="System.Text.Encoding.GetBytes(string)", file="RequestFixture.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m13_147 [cluster="System.IO.StreamReader.ReadToEnd()", file="RequestFixture.cs", label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0"];
m13_185 [cluster="Nancy.IO.RequestStream.FromStream(System.IO.Stream)", file="RequestFixture.cs", label="Entry Nancy.IO.RequestStream.FromStream(System.IO.Stream)", span="209-209"];
m13_136 [cluster="Nancy.Tests.Unit.RequestFixture.Should_value_on_file_extracted_from_multipart_form_data_body()", file="RequestFixture.cs", label="Entry Nancy.Tests.Unit.RequestFixture.Should_value_on_file_extracted_from_multipart_form_data_body()", span="301-301"];
m13_137 [cluster="Nancy.Tests.Unit.RequestFixture.Should_value_on_file_extracted_from_multipart_form_data_body()", file="RequestFixture.cs", label="var memory =\r\n                new MemoryStream(BuildMultipartFileValues(new Dictionary<string, Tuple<string, string>>\r\n                {\r\n                    { ''sample.txt'', new Tuple<string, string>(''content/type'', ''some test content'')}\r\n                }))", span="304-308"];
m13_138 [cluster="Nancy.Tests.Unit.RequestFixture.Should_value_on_file_extracted_from_multipart_form_data_body()", file="RequestFixture.cs", label="var headers =\r\n                new Dictionary<string, IEnumerable<string>>\r\n                {\r\n                    { ''content-type'', new[] { ''multipart/form-data; boundary=----NancyFormBoundary'' } }\r\n                }", span="310-314"];
m13_139 [cluster="Nancy.Tests.Unit.RequestFixture.Should_value_on_file_extracted_from_multipart_form_data_body()", file="RequestFixture.cs", label="var request = new Request(''POST'', ''/'', headers, CreateRequestStream(memory), ''http'')", span="317-317"];
m13_140 [cluster="Nancy.Tests.Unit.RequestFixture.Should_value_on_file_extracted_from_multipart_form_data_body()", file="RequestFixture.cs", label="GetStringValue(request.Files.First().Value).ShouldEqual(''some test content'')", span="320-320"];
m13_141 [cluster="Nancy.Tests.Unit.RequestFixture.Should_value_on_file_extracted_from_multipart_form_data_body()", file="RequestFixture.cs", label="Exit Nancy.Tests.Unit.RequestFixture.Should_value_on_file_extracted_from_multipart_form_data_body()", span="301-301"];
m13_75 [cluster="string.ShouldNotBeEmpty()", file="RequestFixture.cs", label="Entry string.ShouldNotBeEmpty()", span="21-21"];
m14_21 [cluster="System.Text.StringBuilder.AppendLine(string)", file="RequestHeaders.cs", label="Entry System.Text.StringBuilder.AppendLine(string)", span="0-0"];
m14_20 [cluster="System.Text.StringBuilder.StringBuilder()", file="RequestHeaders.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m14_0 [cluster="Nancy.Demo.ModelBinding.XmlModule.XmlModule()", file="RequestHeaders.cs", label="Entry Nancy.Demo.ModelBinding.XmlModule.XmlModule()", span="8-8"];
m14_3 [cluster="Nancy.Demo.ModelBinding.XmlModule.XmlModule()", file="RequestHeaders.cs", label="Exit Nancy.Demo.ModelBinding.XmlModule.XmlModule()", span="8-8"];
m14_24 [cluster="System.Text.StringBuilder.ToString()", file="RequestHeaders.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m14_22 [cluster="System.Text.StringBuilder.Append(string)", file="RequestHeaders.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m14_19 [cluster="Nancy.INancyModule.Bind<TModel>(params System.Linq.Expressions.Expression<System.Func<TModel, object>>[])", file="RequestHeaders.cs", label="Entry Nancy.INancyModule.Bind<TModel>(params System.Linq.Expressions.Expression<System.Func<TModel, object>>[])", span="76-76"];
m14_23 [cluster="object.GetType()", file="RequestHeaders.cs", label="Entry object.GetType()", span="0-0"];
m14_25 [cluster="lambda expression", file="RequestHeaders.cs", label="Entry lambda expression", span="17-17"];
m14_4 [cluster="lambda expression", file="RequestHeaders.cs", label="Entry lambda expression", span="10-13"];
m14_6 [cluster="lambda expression", file="RequestHeaders.cs", label="Exit lambda expression", span="10-13"];
m14_7 [cluster="lambda expression", file="RequestHeaders.cs", label="Entry lambda expression", span="15-30"];
m14_18 [cluster="lambda expression", file="RequestHeaders.cs", label="Exit lambda expression", span="15-30"];
m14_27 [cluster="lambda expression", file="RequestHeaders.cs", label="Exit lambda expression", span="17-17"];
m14_28 [file="RequestHeaders.cs", label="Nancy.Demo.ModelBinding.XmlModule", span=""];
m15_13 [cluster="Unk.NotNull", file="RequestHeadersFixture.cs", label="Entry Unk.NotNull", span=""];
m15_12 [cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="RequestHeadersFixture.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0"];
m15_14 [cluster="Unk.Same", file="RequestHeadersFixture.cs", label="Entry Unk.Same", span=""];
m15_0 [cluster="Nancy.Testing.Tests.QueryWrapperTests.Should_use_cq_find_when_indexer_invoked()", file="RequestHeadersFixture.cs", label="Entry Nancy.Testing.Tests.QueryWrapperTests.Should_use_cq_find_when_indexer_invoked()", span="11-11"];
m15_7 [cluster="Nancy.Testing.Tests.QueryWrapperTests.Should_use_cq_find_when_indexer_invoked()", file="RequestHeadersFixture.cs", label="Exit Nancy.Testing.Tests.QueryWrapperTests.Should_use_cq_find_when_indexer_invoked()", span="11-11"];
m15_11 [cluster="QueryWrapper.cstr", file="RequestHeadersFixture.cs", label="Entry QueryWrapper.cstr", span=""];
m15_10 [cluster="Unk.FirstOrDefault", file="RequestHeadersFixture.cs", label="Entry Unk.FirstOrDefault", span=""];
m15_9 [cluster="Unk.Find", file="RequestHeadersFixture.cs", label="Entry Unk.Find", span=""];
n127 -> n2  [color=darkseagreen4, key=1, label="Nancy.Testing.Tests.AssertExtensionsTests", style=dashed];
n127 -> n13  [color=darkseagreen4, key=1, label="Nancy.Testing.Tests.AssertExtensionsTests", style=dashed];
n127 -> n22  [color=darkseagreen4, key=1, label="Nancy.Testing.Tests.AssertExtensionsTests", style=dashed];
n127 -> n29  [color=darkseagreen4, key=1, label="Nancy.Testing.Tests.AssertExtensionsTests", style=dashed];
n127 -> n41  [color=darkseagreen4, key=1, label="Nancy.Testing.Tests.AssertExtensionsTests", style=dashed];
n127 -> n48  [color=darkseagreen4, key=1, label="Nancy.Testing.Tests.AssertExtensionsTests", style=dashed];
n128 -> n57  [color=darkseagreen4, key=1, label=htmlNode, style=dashed];
n129 -> n66  [color=darkseagreen4, key=1, label=htmlNode, style=dashed];
n130 -> n74  [color=darkseagreen4, key=1, label=htmlNodes, style=dashed];
n131 -> n83  [color=darkseagreen4, key=1, label=htmlNodes, style=dashed];
n132 -> n91  [color=darkseagreen4, key=1, label=htmlNode, style=dashed];
n133 -> n100  [color=darkseagreen4, key=1, label=htmlNode, style=dashed];
n134 -> n108  [color=darkseagreen4, key=1, label=htmlNode, style=dashed];
n135 -> n116  [color=darkseagreen4, key=1, label=htmlNodes, style=dashed];
n136 -> n125  [color=darkseagreen4, key=1, label=htmlNodes, style=dashed];
n7 -> n12  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n17 -> n21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n25 -> n28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n37 -> n40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n44 -> n47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n51 -> n57  [color=darkseagreen4, key=1, label=htmlNode, style=dashed];
n52 -> n56  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n61 -> n66  [color=darkseagreen4, key=1, label=htmlNode, style=dashed];
n62 -> n65  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n69 -> n74  [color=darkseagreen4, key=1, label=htmlNodes, style=dashed];
n70 -> n73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n78 -> n83  [color=darkseagreen4, key=1, label=htmlNodes, style=dashed];
n79 -> n82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n86 -> n91  [color=darkseagreen4, key=1, label=htmlNode, style=dashed];
n87 -> n90  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n95 -> n100  [color=darkseagreen4, key=1, label=htmlNode, style=dashed];
n96 -> n99  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n103 -> n108  [color=darkseagreen4, key=1, label=htmlNode, style=dashed];
n104 -> n107  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n111 -> n116  [color=darkseagreen4, key=1, label=htmlNodes, style=dashed];
n112 -> n115  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n120 -> n125  [color=darkseagreen4, key=1, label=htmlNodes, style=dashed];
n121 -> n124  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d46 -> d49  [color=green, key=1, label=authorization, style=dashed];
d39 -> d41  [color=darkseagreen4, key=1, label=credentials, style=dashed];
d25 -> d28  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
d31 -> d41  [color=darkseagreen4, key=1, label="Nancy.Authentication.Basic.BasicAuthenticationConfiguration", style=dashed];
d9 -> d25  [color=darkseagreen4, key=1, label="Nancy.Authentication.Basic.BasicAuthenticationConfiguration", style=dashed];
d9 -> d28  [color=darkseagreen4, key=1, label="Nancy.Authentication.Basic.BasicAuthenticationConfiguration", style=dashed];
d0 -> d5  [color=darkseagreen4, key=1, label="Nancy.Bootstrapper.IApplicationPipelines", style=dashed];
d0 -> d3  [color=darkseagreen4, key=1, label="Nancy.Authentication.Basic.BasicAuthenticationConfiguration", style=dashed];
d0 -> d6  [color=darkseagreen4, key=1, label="Nancy.Bootstrapper.IApplicationPipelines", style=dashed];
d13 -> d19  [color=darkseagreen4, key=1, label="Nancy.NancyModule", style=dashed];
d13 -> d16  [color=darkseagreen4, key=1, label="Nancy.Authentication.Basic.BasicAuthenticationConfiguration", style=dashed];
d13 -> d18  [color=darkseagreen4, key=1, label="Nancy.NancyModule", style=dashed];
d13 -> d20  [color=darkseagreen4, key=1, label="Nancy.NancyModule", style=dashed];
d65 -> d28  [color=darkseagreen4, key=1, label="Nancy.Authentication.Basic.BasicAuthenticationConfiguration", style=dashed];
d32 -> d35  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m0_4 -> m0_6  [color=darkseagreen4, key=1, label="System.Action<System.Text.StringBuilder>", style=dashed];
m0_13 -> m0_5  [color=darkseagreen4, key=1, label="Nancy.Diagnostics.TraceLog", style=dashed];
m0_13 -> m0_6  [color=darkseagreen4, key=1, label="Nancy.Diagnostics.TraceLog", style=dashed];
m0_13 -> m0_10  [color=darkseagreen4, key=1, label="Nancy.Diagnostics.TraceLog", style=dashed];
m1_56 -> m1_61  [color=darkseagreen4, key=1, label=bool, style=dashed];
m1_33 -> m1_36  [color=darkseagreen4, key=1, label=comparer, style=dashed];
m1_34 -> m1_36  [color=darkseagreen4, key=1, label=actual, style=dashed];
m1_34 -> m1_37  [color=darkseagreen4, key=1, label=actual, style=dashed];
m1_35 -> m1_37  [color=darkseagreen4, key=1, label=expected, style=dashed];
m1_49 -> m1_52  [color=darkseagreen4, key=1, label=comparer, style=dashed];
m1_50 -> m1_52  [color=darkseagreen4, key=1, label=actual, style=dashed];
m1_50 -> m1_53  [color=darkseagreen4, key=1, label=actual, style=dashed];
m1_51 -> m1_53  [color=darkseagreen4, key=1, label=expected, style=dashed];
m1_16 -> m1_19  [color=darkseagreen4, key=1, label=actual, style=dashed];
m1_17 -> m1_19  [color=darkseagreen4, key=1, label=expected, style=dashed];
m1_23 -> m1_28  [color=darkseagreen4, key=1, label=bool, style=dashed];
m1_40 -> m1_45  [color=darkseagreen4, key=1, label=bool, style=dashed];
m1_85 -> m1_69  [color=darkseagreen4, key=1, label="Nancy.Testing.Tests.AssertEqualityComparerFixture.EquatableModel", style=dashed];
m1_86 -> m1_76  [color=darkseagreen4, key=1, label="Nancy.Testing.Tests.AssertEqualityComparerFixture.GenericCompareableModel", style=dashed];
m1_87 -> m1_83  [color=darkseagreen4, key=1, label="Nancy.Testing.Tests.AssertEqualityComparerFixture.CompareableModel", style=dashed];
m2_1 -> m2_7  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBoostrapperConfigurator", style=dashed];
m2_23 -> m2_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_11 -> m2_18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_0 -> m3_2  [color=darkseagreen4, key=1, label="Nancy.Conventions.StaticContentsConventions", style=dashed];
m3_2 -> m3_12  [color=green, key=1, label="lambda expression", style=dashed];
m3_2 -> m3_16  [color=green, key=1, label="lambda expression", style=dashed];
m3_99 -> m3_101  [color=green, key=1, label="lambda expression", style=dashed];
m3_95 -> m3_99  [color=green, key=1, label=deserializer, style=dashed];
m3_95 -> m3_102  [color=green, key=1, label=deserializer, style=dashed];
m3_96 -> m3_98  [color=darkseagreen4, key=1, label=binder, style=dashed];
m3_52 -> m3_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_243 -> m3_256  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_244 -> m3_246  [color=darkseagreen4, key=1, label=binder, style=dashed];
m3_239 -> m3_251  [color=darkseagreen4, key=1, label=userDeserializer, style=dashed];
m3_239 -> m3_247  [color=darkseagreen4, key=1, label=userDeserializer, style=dashed];
m3_239 -> m3_260  [color=darkseagreen4, key=1, label=userDeserializer, style=dashed];
m3_241 -> m3_243  [color=darkseagreen4, key=1, label=defaultDeserializer, style=dashed];
m3_241 -> m3_254  [color=darkseagreen4, key=1, label=defaultDeserializer, style=dashed];
m3_241 -> m3_248  [color=darkseagreen4, key=1, label=defaultDeserializer, style=dashed];
m3_241 -> m3_263  [color=darkseagreen4, key=1, label=defaultDeserializer, style=dashed];
m3_240 -> m3_250  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_247 -> m3_259  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_242 -> m3_253  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_248 -> m3_262  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_193 -> m3_195  [color=darkseagreen4, key=1, label=result, style=dashed];
m3_178 -> m3_182  [color=green, key=1, label=binder, style=dashed];
m3_179 -> m3_182  [color=green, key=1, label=context, style=dashed];
m3_183 -> m3_185  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_303 -> m3_305  [color=darkseagreen4, key=1, label=converter, style=dashed];
m3_302 -> m3_305  [color=darkseagreen4, key=1, label=deserializers, style=dashed];
m3_301 -> m3_305  [color=darkseagreen4, key=1, label=converters, style=dashed];
m3_44 -> m3_47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_26 -> m3_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_4 -> m3_19  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_4 -> m3_6  [color=darkseagreen4, key=1, label="Nancy.Bootstrapper.IPipelines", style=dashed];
m3_201 -> m3_203  [color=green, key=1, label=binder, style=dashed];
m3_204 -> m3_212  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_200 -> m3_209  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_198 -> m3_204  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m3_198 -> m3_200  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m3_198 -> m3_207  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m3_198 -> m3_213  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m3_199 -> m3_206  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_146 -> m3_149  [color=darkseagreen4, key=1, label=binder, style=dashed];
m3_143 -> m3_153  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
m3_143 -> m3_145  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
m3_143 -> m3_156  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
m3_143 -> m3_150  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
m3_143 -> m3_160  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
m3_144 -> m3_152  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_145 -> m3_155  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_150 -> m3_159  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_147 -> m3_149  [color=darkseagreen4, key=1, label=context, style=dashed];
m3_85 -> m3_91  [color=green, key=1, label="lambda expression", style=dashed];
m3_80 -> m3_85  [color=green, key=1, label=deserializer, style=dashed];
m3_80 -> m3_92  [color=green, key=1, label=deserializer, style=dashed];
m3_80 -> m3_89  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m3_82 -> m3_84  [color=darkseagreen4, key=1, label=binder, style=dashed];
m3_81 -> m3_88  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_125 -> m3_129  [color=darkseagreen4, key=1, label=binder, style=dashed];
m3_123 -> m3_136  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
m3_123 -> m3_130  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
m3_123 -> m3_140  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
m3_124 -> m3_135  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_130 -> m3_139  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_126 -> m3_129  [color=darkseagreen4, key=1, label=context, style=dashed];
m3_37 -> m3_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_168 -> m3_170  [color=darkseagreen4, key=1, label=result, style=dashed];
m3_168 -> m3_171  [color=darkseagreen4, key=1, label=result, style=dashed];
m3_11 -> m3_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_11 -> m3_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_10 -> m3_16  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m3_23 -> m3_2  [color=darkseagreen4, key=1, label="Nancy.StaticContentStartup", style=dashed];
m3_23 -> m3_11  [color=darkseagreen4, key=1, label="Nancy.StaticContentStartup", style=dashed];
m3_23 -> m3_16  [color=darkseagreen4, key=1, label="Nancy.StaticContentStartup", style=dashed];
m3_24 -> m3_16  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m3_61 -> m3_63  [color=darkseagreen4, key=1, label=binder, style=dashed];
m3_59 -> m3_72  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m3_59 -> m3_64  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m3_59 -> m3_76  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m3_60 -> m3_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_64 -> m3_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_272 -> m3_292  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_273 -> m3_276  [color=darkseagreen4, key=1, label=binder, style=dashed];
m3_266 -> m3_281  [color=darkseagreen4, key=1, label=userTypeConverter, style=dashed];
m3_266 -> m3_268  [color=darkseagreen4, key=1, label=userTypeConverter, style=dashed];
m3_266 -> m3_284  [color=darkseagreen4, key=1, label=userTypeConverter, style=dashed];
m3_266 -> m3_277  [color=darkseagreen4, key=1, label=userTypeConverter, style=dashed];
m3_266 -> m3_296  [color=darkseagreen4, key=1, label=userTypeConverter, style=dashed];
m3_269 -> m3_272  [color=darkseagreen4, key=1, label=defaultTypeConverter, style=dashed];
m3_269 -> m3_287  [color=darkseagreen4, key=1, label=defaultTypeConverter, style=dashed];
m3_269 -> m3_271  [color=darkseagreen4, key=1, label=defaultTypeConverter, style=dashed];
m3_269 -> m3_290  [color=darkseagreen4, key=1, label=defaultTypeConverter, style=dashed];
m3_269 -> m3_278  [color=darkseagreen4, key=1, label=defaultTypeConverter, style=dashed];
m3_269 -> m3_299  [color=darkseagreen4, key=1, label=defaultTypeConverter, style=dashed];
m3_267 -> m3_280  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_268 -> m3_283  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_277 -> m3_295  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_270 -> m3_286  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_271 -> m3_289  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_278 -> m3_298  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_274 -> m3_276  [color=darkseagreen4, key=1, label=context, style=dashed];
m3_220 -> m3_223  [color=green, key=1, label=binder, style=dashed];
m3_221 -> m3_223  [color=green, key=1, label=context, style=dashed];
m3_224 -> m3_235  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_219 -> m3_232  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_216 -> m3_224  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
m3_216 -> m3_219  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
m3_216 -> m3_227  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
m3_216 -> m3_218  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
m3_216 -> m3_230  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
m3_216 -> m3_236  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
m3_217 -> m3_226  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_218 -> m3_229  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_106 -> m3_117  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m3_106 -> m3_108  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m3_106 -> m3_120  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m3_108 -> m3_119  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_107 -> m3_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_105 -> m3_108  [color=darkseagreen4, key=1, label=modelObject, style=dashed];
m3_105 -> m3_112  [color=darkseagreen4, key=1, label=modelObject, style=dashed];
m3_312 -> m3_2  [color=green, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m3_312 -> m3_13  [color=green, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m3_312 -> m3_203  [color=green, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m3_312 -> m3_4  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m3_312 -> m3_20  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m3_312 -> m3_23  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m3_312 -> m3_63  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m3_312 -> m3_84  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m3_312 -> m3_98  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m3_312 -> m3_183  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m3_312 -> m3_186  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m3_312 -> m3_200  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m3_312 -> m3_210  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m3_312 -> m3_219  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m3_312 -> m3_233  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m3_312 -> m3_243  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m3_312 -> m3_257  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m3_312 -> m3_246  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m3_312 -> m3_272  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m3_312 -> m3_293  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m3_314 -> m3_92  [color=green, key=1, label=deserializer, style=dashed];
m3_314 -> m3_89  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m3_315 -> m3_102  [color=green, key=1, label=deserializer, style=dashed];
m3_313 -> m3_76  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m3_313 -> m3_72  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m3_316 -> m3_120  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m3_316 -> m3_117  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m3_319 -> m3_213  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m3_319 -> m3_207  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m3_321 -> m3_260  [color=darkseagreen4, key=1, label=userDeserializer, style=dashed];
m3_321 -> m3_251  [color=darkseagreen4, key=1, label=userDeserializer, style=dashed];
m3_322 -> m3_263  [color=darkseagreen4, key=1, label=defaultDeserializer, style=dashed];
m3_322 -> m3_254  [color=darkseagreen4, key=1, label=defaultDeserializer, style=dashed];
m3_317 -> m3_136  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
m3_317 -> m3_140  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
m3_318 -> m3_153  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
m3_318 -> m3_156  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
m3_318 -> m3_160  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
m3_320 -> m3_227  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
m3_320 -> m3_230  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
m3_320 -> m3_236  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
m3_323 -> m3_281  [color=darkseagreen4, key=1, label=userTypeConverter, style=dashed];
m3_323 -> m3_284  [color=darkseagreen4, key=1, label=userTypeConverter, style=dashed];
m3_323 -> m3_296  [color=darkseagreen4, key=1, label=userTypeConverter, style=dashed];
m3_324 -> m3_287  [color=darkseagreen4, key=1, label=defaultTypeConverter, style=dashed];
m3_324 -> m3_290  [color=darkseagreen4, key=1, label=defaultTypeConverter, style=dashed];
m3_324 -> m3_299  [color=darkseagreen4, key=1, label=defaultTypeConverter, style=dashed];
m4_11 -> m4_34  [color=darkseagreen4, key=1, label="System.Text.RegularExpressions.GroupCollection", style=dashed];
m4_32 -> m4_37  [color=darkseagreen4, key=1, label=data, style=dashed];
m4_33 -> m4_36  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_36 -> m4_36  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_0 -> m4_13  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_1 -> m4_12  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1 -> m4_4  [color=darkseagreen4, key=1, label=routePathPattern, style=dashed];
m4_7 -> m4_18  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_43 -> m4_47  [color=green, key=1, label=current, style=dashed];
m4_54 -> m4_13  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_32 -> m5_34  [color=darkseagreen4, key=1, label=results, style=dashed];
m5_42 -> m5_44  [color=darkseagreen4, key=1, label=results, style=dashed];
m5_42 -> m5_45  [color=darkseagreen4, key=1, label=results, style=dashed];
m6_28 -> m6_31  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_28 -> m6_33  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_12 -> m6_15  [color=darkseagreen4, key=1, label="out object", style=dashed];
m6_13 -> m6_15  [color=darkseagreen4, key=1, label="out object", style=dashed];
m6_21 -> m6_24  [color=darkseagreen4, key=1, label="Nancy.DynamicDictionary", style=dashed];
m6_44 -> m6_12  [color=darkseagreen4, key=1, label="Nancy.DynamicDictionary", style=dashed];
m6_44 -> m6_19  [color=darkseagreen4, key=1, label="Nancy.DynamicDictionary", style=dashed];
m6_44 -> m6_24  [color=darkseagreen4, key=1, label="Nancy.DynamicDictionary", style=dashed];
m6_44 -> m6_31  [color=darkseagreen4, key=1, label="Nancy.DynamicDictionary", style=dashed];
m6_44 -> m6_33  [color=darkseagreen4, key=1, label="Nancy.DynamicDictionary", style=dashed];
m6_44 -> m6_37  [color=darkseagreen4, key=1, label="Nancy.DynamicDictionary", style=dashed];
m7_104 -> m7_40  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture", style=dashed];
m7_104 -> m7_49  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture", style=dashed];
m7_104 -> m7_50  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture", style=dashed];
m7_104 -> m7_55  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture", style=dashed];
m7_104 -> m7_63  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture", style=dashed];
m7_104 -> m7_69  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture", style=dashed];
m7_104 -> m7_75  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture", style=dashed];
m7_104 -> m7_81  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture", style=dashed];
m7_104 -> m7_87  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture", style=dashed];
m7_104 -> m7_93  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture", style=dashed];
m7_104 -> m7_99  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture", style=dashed];
m8_11 -> m8_14  [color=darkseagreen4, key=1, label=expected, style=dashed];
m8_17 -> m8_20  [color=darkseagreen4, key=1, label="Nancy.Response", style=dashed];
m8_19 -> m8_21  [color=darkseagreen4, key=1, label=ms, style=dashed];
m8_19 -> m8_22  [color=darkseagreen4, key=1, label=ms, style=dashed];
m10_4 -> m10_13  [color=green, key=1, label="Nancy.Url", style=dashed];
m10_4 -> m10_7  [color=darkseagreen4, key=1, label="Nancy.Url", style=dashed];
m10_4 -> m10_9  [color=darkseagreen4, key=1, label="Nancy.Url", style=dashed];
m10_4 -> m10_11  [color=darkseagreen4, key=1, label="Nancy.Url", style=dashed];
m10_4 -> m10_15  [color=darkseagreen4, key=1, label="Nancy.Url", style=dashed];
m10_4 -> m10_16  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_4 -> m10_17  [color=darkseagreen4, key=1, label="Nancy.Url", style=dashed];
m10_4 -> m10_18  [color=darkseagreen4, key=1, label="Nancy.IO.RequestStream", style=dashed];
m10_57 -> m10_61  [color=darkseagreen4, key=1, label=mimeType, style=dashed];
m10_65 -> m10_69  [color=darkseagreen4, key=1, label=httpMultipartBoundary, style=dashed];
m10_2 -> m10_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_2 -> m10_6  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_2 -> m10_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_2 -> m10_9  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_2 -> m10_10  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_2 -> m10_11  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>", style=dashed];
m10_2 -> m10_13  [color=darkseagreen4, key=1, label="Nancy.IO.RequestStream", style=dashed];
m10_2 -> m10_15  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_2 -> m10_17  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_2 -> m10_18  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_84 -> m10_15  [color=darkseagreen4, key=1, label="Nancy.Request", style=dashed];
m10_84 -> m10_37  [color=darkseagreen4, key=1, label="Nancy.Request", style=dashed];
m10_84 -> m10_16  [color=darkseagreen4, key=1, label="Nancy.Request", style=dashed];
m10_84 -> m10_17  [color=darkseagreen4, key=1, label="Nancy.Request", style=dashed];
m10_84 -> m10_18  [color=darkseagreen4, key=1, label="Nancy.Request", style=dashed];
m10_84 -> m10_53  [color=darkseagreen4, key=1, label="Nancy.Request", style=dashed];
m10_84 -> m10_69  [color=darkseagreen4, key=1, label="Nancy.Request", style=dashed];
m10_84 -> m10_80  [color=darkseagreen4, key=1, label="Nancy.Request", style=dashed];
m10_84 -> m10_82  [color=darkseagreen4, key=1, label="Nancy.Request", style=dashed];
m10_84 -> m10_84  [color=darkseagreen4, key=1, label="Nancy.Request", style=dashed];
m10_36 -> m10_42  [color=green, key=1, label=cookieDictionary, style=dashed];
m10_37 -> m10_39  [color=darkseagreen4, key=1, label=cookieDictionary, style=dashed];
m10_37 -> m10_42  [color=darkseagreen4, key=1, label=cookieDictionary, style=dashed];
m10_37 -> m10_43  [color=darkseagreen4, key=1, label=cookieDictionary, style=dashed];
m10_41 -> m10_51  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_86 -> m10_25  [color=darkseagreen4, key=1, label="Nancy.Request", style=dashed];
m10_86 -> m10_26  [color=darkseagreen4, key=1, label="Nancy.Request", style=dashed];
m10_86 -> m10_27  [color=darkseagreen4, key=1, label="Nancy.Request", style=dashed];
m10_86 -> m10_69  [color=darkseagreen4, key=1, label="Nancy.Request", style=dashed];
m10_86 -> m10_80  [color=darkseagreen4, key=1, label="Nancy.Request", style=dashed];
m10_86 -> m10_82  [color=darkseagreen4, key=1, label="Nancy.Request", style=dashed];
m10_86 -> m10_84  [color=darkseagreen4, key=1, label="Nancy.Request", style=dashed];
m11_0 -> m11_3  [color=green, key=1, label="Nancy.Request", style=dashed];
m11_1 -> m11_3  [color=green, key=1, label=ajaxRequestHeaderKey, style=dashed];
m12_92 -> m12_94  [color=darkseagreen4, key=1, label=host, style=dashed];
m12_92 -> m12_97  [color=darkseagreen4, key=1, label=host, style=dashed];
m12_2 -> m12_4  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_67 -> m12_82  [color=darkseagreen4, key=1, label=fakeEngine, style=dashed];
m12_67 -> m12_70  [color=darkseagreen4, key=1, label=fakeEngine, style=dashed];
m12_68 -> m12_70  [color=darkseagreen4, key=1, label=fakeBootstrapper, style=dashed];
m12_68 -> m12_88  [color=darkseagreen4, key=1, label=fakeBootstrapper, style=dashed];
m12_68 -> m12_71  [color=darkseagreen4, key=1, label=fakeBootstrapper, style=dashed];
m12_69 -> m12_81  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_69 -> m12_84  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_69 -> m12_76  [color=darkseagreen4, key=1, label=nancyRequest, style=dashed];
m12_69 -> m12_77  [color=darkseagreen4, key=1, label=nancyRequest, style=dashed];
m12_69 -> m12_78  [color=darkseagreen4, key=1, label=nancyRequest, style=dashed];
m12_70 -> m12_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_72 -> m12_74  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_54 -> m12_58  [color=darkseagreen4, key=1, label=testBody, style=dashed];
m12_54 -> m12_60  [color=darkseagreen4, key=1, label=testBody, style=dashed];
m12_13 -> m12_33  [color=darkseagreen4, key=1, label=fakeEngine, style=dashed];
m12_13 -> m12_16  [color=darkseagreen4, key=1, label=fakeEngine, style=dashed];
m12_14 -> m12_32  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_14 -> m12_36  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_14 -> m12_22  [color=darkseagreen4, key=1, label=nancyRequest, style=dashed];
m12_14 -> m12_23  [color=darkseagreen4, key=1, label=nancyRequest, style=dashed];
m12_14 -> m12_24  [color=darkseagreen4, key=1, label=nancyRequest, style=dashed];
m12_16 -> m12_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_15 -> m12_40  [color=darkseagreen4, key=1, label=fakeBootstrapper, style=dashed];
m12_15 -> m12_17  [color=darkseagreen4, key=1, label=fakeBootstrapper, style=dashed];
m12_18 -> m12_20  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_106 -> m12_17  [color=darkseagreen4, key=1, label="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture", style=dashed];
m12_106 -> m12_71  [color=darkseagreen4, key=1, label="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture", style=dashed];
m12_107 -> m12_33  [color=darkseagreen4, key=1, label=fakeEngine, style=dashed];
m12_108 -> m12_40  [color=darkseagreen4, key=1, label=fakeBootstrapper, style=dashed];
m12_109 -> m12_82  [color=darkseagreen4, key=1, label=fakeEngine, style=dashed];
m12_110 -> m12_88  [color=darkseagreen4, key=1, label=fakeBootstrapper, style=dashed];
m13_61 -> m13_63  [color=darkseagreen4, key=1, label=method, style=dashed];
m13_47 -> m13_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_107 -> m13_109  [color=darkseagreen4, key=1, label=request, style=dashed];
m13_121 -> m13_213  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>", style=dashed];
m13_121 -> m13_223  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>", style=dashed];
m13_121 -> m13_228  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>", style=dashed];
m13_212 -> m13_214  [color=darkseagreen4, key=1, label=boundaryBuilder, style=dashed];
m13_212 -> m13_215  [color=darkseagreen4, key=1, label=boundaryBuilder, style=dashed];
m13_212 -> m13_216  [color=darkseagreen4, key=1, label=boundaryBuilder, style=dashed];
m13_212 -> m13_217  [color=darkseagreen4, key=1, label=boundaryBuilder, style=dashed];
m13_212 -> m13_218  [color=darkseagreen4, key=1, label=boundaryBuilder, style=dashed];
m13_212 -> m13_219  [color=darkseagreen4, key=1, label=boundaryBuilder, style=dashed];
m13_212 -> m13_220  [color=darkseagreen4, key=1, label=boundaryBuilder, style=dashed];
m13_212 -> m13_221  [color=darkseagreen4, key=1, label=boundaryBuilder, style=dashed];
m13_212 -> m13_222  [color=darkseagreen4, key=1, label=boundaryBuilder, style=dashed];
m13_212 -> m13_223  [color=darkseagreen4, key=1, label=boundaryBuilder, style=dashed];
m13_212 -> m13_224  [color=darkseagreen4, key=1, label=boundaryBuilder, style=dashed];
m13_212 -> m13_225  [color=darkseagreen4, key=1, label=boundaryBuilder, style=dashed];
m13_212 -> m13_226  [color=darkseagreen4, key=1, label=boundaryBuilder, style=dashed];
m13_212 -> m13_227  [color=darkseagreen4, key=1, label=boundaryBuilder, style=dashed];
m13_212 -> m13_228  [color=darkseagreen4, key=1, label=boundaryBuilder, style=dashed];
m13_212 -> m13_229  [color=darkseagreen4, key=1, label=boundaryBuilder, style=dashed];
m13_212 -> m13_230  [color=darkseagreen4, key=1, label=boundaryBuilder, style=dashed];
m13_212 -> m13_231  [color=darkseagreen4, key=1, label=boundaryBuilder, style=dashed];
m13_212 -> m13_232  [color=darkseagreen4, key=1, label=boundaryBuilder, style=dashed];
m13_213 -> m13_220  [color=darkseagreen4, key=1, label=key, style=dashed];
m13_213 -> m13_223  [color=darkseagreen4, key=1, label=key, style=dashed];
m13_213 -> m13_228  [color=darkseagreen4, key=1, label=key, style=dashed];
m13_163 -> m13_166  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_94 -> m13_97  [color=darkseagreen4, key=1, label=bodyContent, style=dashed];
m13_96 -> m13_98  [color=darkseagreen4, key=1, label=writer, style=dashed];
m13_77 -> m13_79  [color=darkseagreen4, key=1, label=body, style=dashed];
m13_30 -> m13_35  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_177 -> m13_179  [color=darkseagreen4, key=1, label=protocol, style=dashed];
m13_170 -> m13_173  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_3 -> m13_5  [color=darkseagreen4, key=1, label=writer, style=dashed];
m13_1 -> m13_4  [color=darkseagreen4, key=1, label=bodyContent, style=dashed];
m13_112 -> m13_187  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m13_112 -> m13_199  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m13_186 -> m13_188  [color=darkseagreen4, key=1, label=boundaryBuilder, style=dashed];
m13_186 -> m13_189  [color=darkseagreen4, key=1, label=boundaryBuilder, style=dashed];
m13_186 -> m13_190  [color=darkseagreen4, key=1, label=boundaryBuilder, style=dashed];
m13_186 -> m13_191  [color=darkseagreen4, key=1, label=boundaryBuilder, style=dashed];
m13_186 -> m13_192  [color=darkseagreen4, key=1, label=boundaryBuilder, style=dashed];
m13_186 -> m13_193  [color=darkseagreen4, key=1, label=boundaryBuilder, style=dashed];
m13_186 -> m13_194  [color=darkseagreen4, key=1, label=boundaryBuilder, style=dashed];
m13_186 -> m13_195  [color=darkseagreen4, key=1, label=boundaryBuilder, style=dashed];
m13_186 -> m13_196  [color=darkseagreen4, key=1, label=boundaryBuilder, style=dashed];
m13_186 -> m13_197  [color=darkseagreen4, key=1, label=boundaryBuilder, style=dashed];
m13_186 -> m13_198  [color=darkseagreen4, key=1, label=boundaryBuilder, style=dashed];
m13_186 -> m13_199  [color=darkseagreen4, key=1, label=boundaryBuilder, style=dashed];
m13_186 -> m13_200  [color=darkseagreen4, key=1, label=boundaryBuilder, style=dashed];
m13_186 -> m13_201  [color=darkseagreen4, key=1, label=boundaryBuilder, style=dashed];
m13_186 -> m13_202  [color=darkseagreen4, key=1, label=boundaryBuilder, style=dashed];
m13_186 -> m13_203  [color=darkseagreen4, key=1, label=boundaryBuilder, style=dashed];
m13_187 -> m13_194  [color=darkseagreen4, key=1, label=key, style=dashed];
m13_187 -> m13_199  [color=darkseagreen4, key=1, label=key, style=dashed];
m13_40 -> m13_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_54 -> m13_57  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_66 -> m13_68  [color=darkseagreen4, key=1, label=path, style=dashed];
m13_18 -> m13_27  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_21 -> m13_23  [color=darkseagreen4, key=1, label=writer, style=dashed];
m13_19 -> m13_22  [color=darkseagreen4, key=1, label=bodyContent, style=dashed];
m13_83 -> m13_86  [color=darkseagreen4, key=1, label=bodyContent, style=dashed];
m13_85 -> m13_87  [color=darkseagreen4, key=1, label=writer, style=dashed];
m13_149 -> m13_152  [color=darkseagreen4, key=1, label=bodyContent, style=dashed];
m13_151 -> m13_153  [color=darkseagreen4, key=1, label=writer, style=dashed];
m13_156 -> m13_158  [color=darkseagreen4, key=1, label=request, style=dashed];
}
