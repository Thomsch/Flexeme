digraph  {
n127 [label="Nancy.Testing.Tests.AssertExtensionsTests", span=""];
n128 [label=htmlNode, span=""];
n129 [label=htmlNode, span=""];
n130 [label=htmlNodes, span=""];
n131 [label=htmlNodes, span=""];
n132 [label=htmlNode, span=""];
n133 [label=htmlNode, span=""];
n134 [label=htmlNode, span=""];
n135 [label=htmlNodes, span=""];
n136 [label=htmlNodes, span=""];
n0 [label="Entry Nancy.Testing.Tests.AssertExtensionsTests.AssertExtensionsTests()", span="15-15", cluster="Nancy.Testing.Tests.AssertExtensionsTests.AssertExtensionsTests()"];
n1 [label="var document =\r\n                CQ.Create(@''<html><head></head><body><div id='testId' class='myClass'>Test</div><div class='anotherClass'>Tes</div><span class='class'>some contents</span><span class='class'>This has contents</span></body></html>'')", span="17-18", cluster="Nancy.Testing.Tests.AssertExtensionsTests.AssertExtensionsTests()"];
n2 [label="this.query =\r\n                new QueryWrapper(document)", span="20-21", cluster="Nancy.Testing.Tests.AssertExtensionsTests.AssertExtensionsTests()"];
n4 [label="Entry Unk.Create", span="", cluster="Unk.Create"];
n3 [label="Exit Nancy.Testing.Tests.AssertExtensionsTests.AssertExtensionsTests()", span="15-15", cluster="Nancy.Testing.Tests.AssertExtensionsTests.AssertExtensionsTests()"];
n5 [label="Entry QueryWrapper.cstr", span="", cluster="QueryWrapper.cstr"];
n6 [label="Entry Nancy.Testing.Tests.AssertExtensionsTests.Should_throw_assertexception_when_id_does_not_exist()", span="25-25", cluster="Nancy.Testing.Tests.AssertExtensionsTests.Should_throw_assertexception_when_id_does_not_exist()"];
n7 [label="var result = Record.Exception(() => this.query[''#notThere''].ShouldExist())", span="28-28", cluster="Nancy.Testing.Tests.AssertExtensionsTests.Should_throw_assertexception_when_id_does_not_exist()"];
n8 [label="Assert.IsAssignableFrom<AssertException>(result)", span="31-31", cluster="Nancy.Testing.Tests.AssertExtensionsTests.Should_throw_assertexception_when_id_does_not_exist()"];
n10 [label="Entry Unk.Exception", span="", cluster="Unk.Exception"];
n12 [label="Entry lambda expression", span="28-28", cluster="lambda expression"];
n9 [label="Exit Nancy.Testing.Tests.AssertExtensionsTests.Should_throw_assertexception_when_id_does_not_exist()", span="25-25", cluster="Nancy.Testing.Tests.AssertExtensionsTests.Should_throw_assertexception_when_id_does_not_exist()"];
n11 [label="Entry Unk.>", span="", cluster="Unk.>"];
n13 [label="this.query[''#notThere''].ShouldExist()", span="28-28", cluster="lambda expression"];
n14 [label="Exit lambda expression", span="28-28", cluster="lambda expression"];
n15 [label="Entry Nancy.Testing.QueryWrapper.ShouldExist()", span="25-25", cluster="Nancy.Testing.QueryWrapper.ShouldExist()"];
n16 [label="Entry Nancy.Testing.Tests.AssertExtensionsTests.Should_not_throw_exception_when_id_does_exist()", span="35-35", cluster="Nancy.Testing.Tests.AssertExtensionsTests.Should_not_throw_exception_when_id_does_exist()"];
n17 [label="var result = Record.Exception(() => this.query[''#testId''].ShouldExist())", span="38-38", cluster="Nancy.Testing.Tests.AssertExtensionsTests.Should_not_throw_exception_when_id_does_exist()"];
n18 [label="Assert.Null(result)", span="41-41", cluster="Nancy.Testing.Tests.AssertExtensionsTests.Should_not_throw_exception_when_id_does_exist()"];
n21 [label="Entry lambda expression", span="38-38", cluster="lambda expression"];
n19 [label="Exit Nancy.Testing.Tests.AssertExtensionsTests.Should_not_throw_exception_when_id_does_exist()", span="35-35", cluster="Nancy.Testing.Tests.AssertExtensionsTests.Should_not_throw_exception_when_id_does_exist()"];
n20 [label="Entry Unk.Null", span="", cluster="Unk.Null"];
n22 [label="this.query[''#testId''].ShouldExist()", span="38-38", cluster="lambda expression"];
n23 [label="Exit lambda expression", span="38-38", cluster="lambda expression"];
n24 [label="Entry Nancy.Testing.Tests.AssertExtensionsTests.Should_not_throw_exception_when_id_that_should_only_exists_once_only_exists_once()", span="45-45", cluster="Nancy.Testing.Tests.AssertExtensionsTests.Should_not_throw_exception_when_id_that_should_only_exists_once_only_exists_once()"];
n25 [label="var result = Record.Exception(() => this.query[''#testId''].ShouldExistOnce())", span="48-48", cluster="Nancy.Testing.Tests.AssertExtensionsTests.Should_not_throw_exception_when_id_that_should_only_exists_once_only_exists_once()"];
n26 [label="Assert.Null(result)", span="51-51", cluster="Nancy.Testing.Tests.AssertExtensionsTests.Should_not_throw_exception_when_id_that_should_only_exists_once_only_exists_once()"];
n28 [label="Entry lambda expression", span="48-48", cluster="lambda expression"];
n27 [label="Exit Nancy.Testing.Tests.AssertExtensionsTests.Should_not_throw_exception_when_id_that_should_only_exists_once_only_exists_once()", span="45-45", cluster="Nancy.Testing.Tests.AssertExtensionsTests.Should_not_throw_exception_when_id_that_should_only_exists_once_only_exists_once()"];
n29 [label="this.query[''#testId''].ShouldExistOnce()", span="48-48", cluster="lambda expression"];
n30 [label="Exit lambda expression", span="48-48", cluster="lambda expression"];
n31 [label="Entry Nancy.Testing.QueryWrapper.ShouldExistOnce()", span="35-35", cluster="Nancy.Testing.QueryWrapper.ShouldExistOnce()"];
n32 [label="Entry Nancy.Testing.Tests.AssertExtensionsTests.ShouldExistOnce_ExistsOnce_ReturnsSingleItemAndConnector()", span="55-55", cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldExistOnce_ExistsOnce_ReturnsSingleItemAndConnector()"];
n33 [label="var result = this.query[''#testId''].ShouldExistOnce()", span="58-58", cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldExistOnce_ExistsOnce_ReturnsSingleItemAndConnector()"];
n34 [label="Assert.IsType<AndConnector<NodeWrapper>>(result)", span="61-61", cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldExistOnce_ExistsOnce_ReturnsSingleItemAndConnector()"];
n35 [label="Exit Nancy.Testing.Tests.AssertExtensionsTests.ShouldExistOnce_ExistsOnce_ReturnsSingleItemAndConnector()", span="55-55", cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldExistOnce_ExistsOnce_ReturnsSingleItemAndConnector()"];
n36 [label="Entry Nancy.Testing.Tests.AssertExtensionsTests.ShouldExistOnce_DoesNotExist_ShouldThrowAssert()", span="65-65", cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldExistOnce_DoesNotExist_ShouldThrowAssert()"];
n37 [label="var result = Record.Exception(() => this.query[''#notHere''].ShouldExistOnce())", span="68-68", cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldExistOnce_DoesNotExist_ShouldThrowAssert()"];
n38 [label="Assert.IsAssignableFrom<AssertException>(result)", span="71-71", cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldExistOnce_DoesNotExist_ShouldThrowAssert()"];
n40 [label="Entry lambda expression", span="68-68", cluster="lambda expression"];
n39 [label="Exit Nancy.Testing.Tests.AssertExtensionsTests.ShouldExistOnce_DoesNotExist_ShouldThrowAssert()", span="65-65", cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldExistOnce_DoesNotExist_ShouldThrowAssert()"];
n41 [label="this.query[''#notHere''].ShouldExistOnce()", span="68-68", cluster="lambda expression"];
n42 [label="Exit lambda expression", span="68-68", cluster="lambda expression"];
n43 [label="Entry Nancy.Testing.Tests.AssertExtensionsTests.ShouldExistOnce_ExistsMoreThanOnce_ShouldThrowAssert()", span="75-75", cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldExistOnce_ExistsMoreThanOnce_ShouldThrowAssert()"];
n44 [label="var result = Record.Exception(() => this.query[''div''].ShouldExistOnce())", span="78-78", cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldExistOnce_ExistsMoreThanOnce_ShouldThrowAssert()"];
n45 [label="Assert.IsAssignableFrom<AssertException>(result)", span="81-81", cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldExistOnce_ExistsMoreThanOnce_ShouldThrowAssert()"];
n47 [label="Entry lambda expression", span="78-78", cluster="lambda expression"];
n46 [label="Exit Nancy.Testing.Tests.AssertExtensionsTests.ShouldExistOnce_ExistsMoreThanOnce_ShouldThrowAssert()", span="75-75", cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldExistOnce_ExistsMoreThanOnce_ShouldThrowAssert()"];
n48 [label="this.query[''div''].ShouldExistOnce()", span="78-78", cluster="lambda expression"];
n49 [label="Exit lambda expression", span="78-78", cluster="lambda expression"];
n50 [label="Entry Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_SingleElementNotThatClass_ShouldThrowAssert()", span="85-85", cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_SingleElementNotThatClass_ShouldThrowAssert()"];
n51 [label="var htmlNode = this.query[''#testId''].First()", span="88-88", cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_SingleElementNotThatClass_ShouldThrowAssert()"];
n52 [label="var result = Record.Exception(() => htmlNode.ShouldBeOfClass(''nope''))", span="91-91", cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_SingleElementNotThatClass_ShouldThrowAssert()"];
n55 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()"];
n57 [label="htmlNode.ShouldBeOfClass(''nope'')", span="91-91", cluster="lambda expression"];
n53 [label="Assert.IsAssignableFrom<AssertException>(result)", span="94-94", cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_SingleElementNotThatClass_ShouldThrowAssert()"];
n56 [label="Entry lambda expression", span="91-91", cluster="lambda expression"];
n54 [label="Exit Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_SingleElementNotThatClass_ShouldThrowAssert()", span="85-85", cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_SingleElementNotThatClass_ShouldThrowAssert()"];
n58 [label="Exit lambda expression", span="91-91", cluster="lambda expression"];
n59 [label="Entry Nancy.Testing.NodeWrapper.ShouldBeOfClass(string)", span="43-43", cluster="Nancy.Testing.NodeWrapper.ShouldBeOfClass(string)"];
n60 [label="Entry Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_SingleElementWithThatClass_ShouldNotThrowAssert()", span="98-98", cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_SingleElementWithThatClass_ShouldNotThrowAssert()"];
n61 [label="var htmlNode = this.query[''#testId''].First()", span="101-101", cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_SingleElementWithThatClass_ShouldNotThrowAssert()"];
n62 [label="var result = Record.Exception(() => htmlNode.ShouldBeOfClass(''myClass''))", span="104-104", cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_SingleElementWithThatClass_ShouldNotThrowAssert()"];
n66 [label="htmlNode.ShouldBeOfClass(''myClass'')", span="104-104", cluster="lambda expression"];
n63 [label="Assert.Null(result)", span="107-107", cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_SingleElementWithThatClass_ShouldNotThrowAssert()"];
n65 [label="Entry lambda expression", span="104-104", cluster="lambda expression"];
n64 [label="Exit Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_SingleElementWithThatClass_ShouldNotThrowAssert()", span="98-98", cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_SingleElementWithThatClass_ShouldNotThrowAssert()"];
n67 [label="Exit lambda expression", span="104-104", cluster="lambda expression"];
n68 [label="Entry Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_MultipleElementsOneNotThatClass_ShouldThrowAssert()", span="111-111", cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_MultipleElementsOneNotThatClass_ShouldThrowAssert()"];
n69 [label="var htmlNodes = this.query[''div'']", span="114-114", cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_MultipleElementsOneNotThatClass_ShouldThrowAssert()"];
n70 [label="var result = Record.Exception(() => htmlNodes.ShouldBeOfClass(''myClass''))", span="117-117", cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_MultipleElementsOneNotThatClass_ShouldThrowAssert()"];
n74 [label="htmlNodes.ShouldBeOfClass(''myClass'')", span="117-117", cluster="lambda expression"];
n71 [label="Assert.IsAssignableFrom<AssertException>(result)", span="120-120", cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_MultipleElementsOneNotThatClass_ShouldThrowAssert()"];
n73 [label="Entry lambda expression", span="117-117", cluster="lambda expression"];
n72 [label="Exit Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_MultipleElementsOneNotThatClass_ShouldThrowAssert()", span="111-111", cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_MultipleElementsOneNotThatClass_ShouldThrowAssert()"];
n75 [label="Exit lambda expression", span="117-117", cluster="lambda expression"];
n76 [label="Entry Nancy.Testing.QueryWrapper.ShouldBeOfClass(string)", span="53-53", cluster="Nancy.Testing.QueryWrapper.ShouldBeOfClass(string)"];
n77 [label="Entry Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_MultipleElementsAllThatClass_ShouldNotThrowAssert()", span="124-124", cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_MultipleElementsAllThatClass_ShouldNotThrowAssert()"];
n78 [label="var htmlNodes = this.query[''span'']", span="127-127", cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_MultipleElementsAllThatClass_ShouldNotThrowAssert()"];
n79 [label="var result = Record.Exception(() => htmlNodes.ShouldBeOfClass(''class''))", span="130-130", cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_MultipleElementsAllThatClass_ShouldNotThrowAssert()"];
n83 [label="htmlNodes.ShouldBeOfClass(''class'')", span="130-130", cluster="lambda expression"];
n80 [label="Assert.Null(result)", span="133-133", cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_MultipleElementsAllThatClass_ShouldNotThrowAssert()"];
n82 [label="Entry lambda expression", span="130-130", cluster="lambda expression"];
n81 [label="Exit Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_MultipleElementsAllThatClass_ShouldNotThrowAssert()", span="124-124", cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_MultipleElementsAllThatClass_ShouldNotThrowAssert()"];
n84 [label="Exit lambda expression", span="130-130", cluster="lambda expression"];
n85 [label="Entry Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementThatContainsText_ShouldNotThrowAssert()", span="137-137", cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementThatContainsText_ShouldNotThrowAssert()"];
n86 [label="var htmlNode = this.query[''#testId''].First()", span="140-140", cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementThatContainsText_ShouldNotThrowAssert()"];
n87 [label="var result = Record.Exception(() => htmlNode.ShouldContain(''Test''))", span="143-143", cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementThatContainsText_ShouldNotThrowAssert()"];
n91 [label="htmlNode.ShouldContain(''Test'')", span="143-143", cluster="lambda expression"];
n88 [label="Assert.Null(result)", span="146-146", cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementThatContainsText_ShouldNotThrowAssert()"];
n90 [label="Entry lambda expression", span="143-143", cluster="lambda expression"];
n89 [label="Exit Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementThatContainsText_ShouldNotThrowAssert()", span="137-137", cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementThatContainsText_ShouldNotThrowAssert()"];
n92 [label="Exit lambda expression", span="143-143", cluster="lambda expression"];
n93 [label="Entry Nancy.Testing.NodeWrapper.ShouldContain(string, System.StringComparison)", span="66-66", cluster="Nancy.Testing.NodeWrapper.ShouldContain(string, System.StringComparison)"];
n94 [label="Entry Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementWithTextInDifferentCase_ShouldHonorCompareType()", span="150-150", cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementWithTextInDifferentCase_ShouldHonorCompareType()"];
n95 [label="var htmlNode = this.query[''#testId''].First()", span="153-153", cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementWithTextInDifferentCase_ShouldHonorCompareType()"];
n96 [label="var result = Record.Exception(() => htmlNode.ShouldContain(''test'', StringComparison.InvariantCultureIgnoreCase))", span="156-156", cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementWithTextInDifferentCase_ShouldHonorCompareType()"];
n100 [label="htmlNode.ShouldContain(''test'', StringComparison.InvariantCultureIgnoreCase)", span="156-156", cluster="lambda expression"];
n97 [label="Assert.Null(result)", span="159-159", cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementWithTextInDifferentCase_ShouldHonorCompareType()"];
n99 [label="Entry lambda expression", span="156-156", cluster="lambda expression"];
n98 [label="Exit Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementWithTextInDifferentCase_ShouldHonorCompareType()", span="150-150", cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementWithTextInDifferentCase_ShouldHonorCompareType()"];
n101 [label="Exit lambda expression", span="156-156", cluster="lambda expression"];
n102 [label="Entry Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementDoesntContainText_ShouldThrowAssert()", span="163-163", cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementDoesntContainText_ShouldThrowAssert()"];
n103 [label="var htmlNode = this.query[''#testId''].First()", span="166-166", cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementDoesntContainText_ShouldThrowAssert()"];
n104 [label="var result = Record.Exception(() => htmlNode.ShouldContain(''nope''))", span="169-169", cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementDoesntContainText_ShouldThrowAssert()"];
n108 [label="htmlNode.ShouldContain(''nope'')", span="169-169", cluster="lambda expression"];
n105 [label="Assert.IsAssignableFrom<AssertException>(result)", span="172-172", cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementDoesntContainText_ShouldThrowAssert()"];
n107 [label="Entry lambda expression", span="169-169", cluster="lambda expression"];
n106 [label="Exit Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementDoesntContainText_ShouldThrowAssert()", span="163-163", cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementDoesntContainText_ShouldThrowAssert()"];
n109 [label="Exit lambda expression", span="169-169", cluster="lambda expression"];
n110 [label="Entry Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_MultipleElementsAllContainingText_ShouldntThrowAssert()", span="176-176", cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_MultipleElementsAllContainingText_ShouldntThrowAssert()"];
n111 [label="var htmlNodes = this.query[''span'']", span="179-179", cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_MultipleElementsAllContainingText_ShouldntThrowAssert()"];
n112 [label="var result = Record.Exception(() => htmlNodes.ShouldContain(''contents''))", span="182-182", cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_MultipleElementsAllContainingText_ShouldntThrowAssert()"];
n116 [label="htmlNodes.ShouldContain(''contents'')", span="182-182", cluster="lambda expression"];
n113 [label="Assert.Null(result)", span="185-185", cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_MultipleElementsAllContainingText_ShouldntThrowAssert()"];
n115 [label="Entry lambda expression", span="182-182", cluster="lambda expression"];
n114 [label="Exit Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_MultipleElementsAllContainingText_ShouldntThrowAssert()", span="176-176", cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_MultipleElementsAllContainingText_ShouldntThrowAssert()"];
n117 [label="Exit lambda expression", span="182-182", cluster="lambda expression"];
n118 [label="Entry Nancy.Testing.QueryWrapper.ShouldContain(string, System.StringComparison)", span="76-76", cluster="Nancy.Testing.QueryWrapper.ShouldContain(string, System.StringComparison)"];
n119 [label="Entry Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_MultipleElementsOneNotContainingText_ShouldThrowAssert()", span="189-189", cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_MultipleElementsOneNotContainingText_ShouldThrowAssert()"];
n120 [label="var htmlNodes = this.query[''div'']", span="192-192", cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_MultipleElementsOneNotContainingText_ShouldThrowAssert()"];
n121 [label="var result = Record.Exception(() => htmlNodes.ShouldContain(''Test''))", span="195-195", cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_MultipleElementsOneNotContainingText_ShouldThrowAssert()"];
n125 [label="htmlNodes.ShouldContain(''Test'')", span="195-195", cluster="lambda expression"];
n122 [label="Assert.IsAssignableFrom<AssertException>(result)", span="198-198", cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_MultipleElementsOneNotContainingText_ShouldThrowAssert()"];
n124 [label="Entry lambda expression", span="195-195", cluster="lambda expression"];
n123 [label="Exit Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_MultipleElementsOneNotContainingText_ShouldThrowAssert()", span="189-189", cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_MultipleElementsOneNotContainingText_ShouldThrowAssert()"];
n126 [label="Exit lambda expression", span="195-195", cluster="lambda expression"];
d46 [label="var authorization =\r\n                request.Headers.Authorization", span="105-106", cluster="Nancy.Authentication.Basic.BasicAuthentication.ExtractCredentialsFromHeaders(Nancy.Request)", color=green, community=0];
d44 [label="Entry Nancy.Authentication.Basic.BasicAuthentication.ExtractCredentialsFromHeaders(Nancy.Request)", span="103-103", cluster="Nancy.Authentication.Basic.BasicAuthentication.ExtractCredentialsFromHeaders(Nancy.Request)"];
d47 [label="string.IsNullOrEmpty(authorization)", span="108-108", cluster="Nancy.Authentication.Basic.BasicAuthentication.ExtractCredentialsFromHeaders(Nancy.Request)"];
d49 [label="!authorization.StartsWith(SCHEME)", span="113-113", cluster="Nancy.Authentication.Basic.BasicAuthentication.ExtractCredentialsFromHeaders(Nancy.Request)", color=green, community=0];
d51 [label="var encodedUserPass = authorization.Substring(SCHEME.Length).Trim()", span="120-120", cluster="Nancy.Authentication.Basic.BasicAuthentication.ExtractCredentialsFromHeaders(Nancy.Request)"];
d50 [label="return null;", span="115-115", cluster="Nancy.Authentication.Basic.BasicAuthentication.ExtractCredentialsFromHeaders(Nancy.Request)"];
d58 [label="Entry string.StartsWith(string)", span="0-0", cluster="string.StartsWith(string)"];
d39 [label="var credentials = ExtractCredentialsFromHeaders(context.Request)", span="92-92", cluster="Nancy.Authentication.Basic.BasicAuthentication.RetrieveCredentials(Nancy.NancyContext, Nancy.Authentication.Basic.BasicAuthenticationConfiguration)"];
d56 [label="Exit Nancy.Authentication.Basic.BasicAuthentication.ExtractCredentialsFromHeaders(Nancy.Request)", span="103-103", cluster="Nancy.Authentication.Basic.BasicAuthentication.ExtractCredentialsFromHeaders(Nancy.Request)"];
d25 [label="return context =>\r\n                {\r\n                    RetrieveCredentials(context, configuration);\r\n                    return null;\r\n                };", span="72-76", cluster="Nancy.Authentication.Basic.BasicAuthentication.GetCredentialRetrievalHook(Nancy.Authentication.Basic.BasicAuthenticationConfiguration)"];
d48 [label="return null;", span="110-110", cluster="Nancy.Authentication.Basic.BasicAuthentication.ExtractCredentialsFromHeaders(Nancy.Request)"];
d57 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)"];
d52 [label="var userPass = Encoding.UTF8.GetString(Convert.FromBase64String(encodedUserPass))", span="121-121", cluster="Nancy.Authentication.Basic.BasicAuthentication.ExtractCredentialsFromHeaders(Nancy.Request)"];
d59 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)"];
d60 [label="Entry string.Trim()", span="0-0", cluster="string.Trim()"];
d31 [label="Entry Nancy.Authentication.Basic.BasicAuthentication.RetrieveCredentials(Nancy.NancyContext, Nancy.Authentication.Basic.BasicAuthenticationConfiguration)", span="90-90", cluster="Nancy.Authentication.Basic.BasicAuthentication.RetrieveCredentials(Nancy.NancyContext, Nancy.Authentication.Basic.BasicAuthenticationConfiguration)"];
d40 [label="credentials != null && credentials.Length == 2", span="94-94", cluster="Nancy.Authentication.Basic.BasicAuthentication.RetrieveCredentials(Nancy.NancyContext, Nancy.Authentication.Basic.BasicAuthenticationConfiguration)"];
d41 [label="configuration.UserValidator.Validate(credentials[0], credentials[1])", span="96-96", cluster="Nancy.Authentication.Basic.BasicAuthentication.RetrieveCredentials(Nancy.NancyContext, Nancy.Authentication.Basic.BasicAuthenticationConfiguration)"];
d42 [label="context.Items[SecurityConventions.AuthenticatedUsernameKey] = credentials[0]", span="98-98", cluster="Nancy.Authentication.Basic.BasicAuthentication.RetrieveCredentials(Nancy.NancyContext, Nancy.Authentication.Basic.BasicAuthenticationConfiguration)"];
d53 [label="return String.IsNullOrWhiteSpace(userPass) ? null : userPass.Split(':');", span="123-123", cluster="Nancy.Authentication.Basic.BasicAuthentication.ExtractCredentialsFromHeaders(Nancy.Request)"];
d55 [label="return null;", span="127-127", cluster="Nancy.Authentication.Basic.BasicAuthentication.ExtractCredentialsFromHeaders(Nancy.Request)"];
d9 [label="Entry Nancy.Authentication.Basic.BasicAuthentication.GetCredentialRetrievalHook(Nancy.Authentication.Basic.BasicAuthenticationConfiguration)", span="65-65", cluster="Nancy.Authentication.Basic.BasicAuthentication.GetCredentialRetrievalHook(Nancy.Authentication.Basic.BasicAuthenticationConfiguration)"];
d23 [label="configuration == null", span="67-67", cluster="Nancy.Authentication.Basic.BasicAuthentication.GetCredentialRetrievalHook(Nancy.Authentication.Basic.BasicAuthenticationConfiguration)"];
d26 [label="Exit Nancy.Authentication.Basic.BasicAuthentication.GetCredentialRetrievalHook(Nancy.Authentication.Basic.BasicAuthenticationConfiguration)", span="65-65", cluster="Nancy.Authentication.Basic.BasicAuthentication.GetCredentialRetrievalHook(Nancy.Authentication.Basic.BasicAuthenticationConfiguration)"];
d28 [label="RetrieveCredentials(context, configuration)", span="74-74", cluster="lambda expression"];
d61 [label="Entry System.Convert.FromBase64String(string)", span="0-0", cluster="System.Convert.FromBase64String(string)"];
d62 [label="Entry System.Text.Encoding.GetString(byte[])", span="0-0", cluster="System.Text.Encoding.GetString(byte[])"];
d43 [label="Exit Nancy.Authentication.Basic.BasicAuthentication.RetrieveCredentials(Nancy.NancyContext, Nancy.Authentication.Basic.BasicAuthenticationConfiguration)", span="90-90", cluster="Nancy.Authentication.Basic.BasicAuthentication.RetrieveCredentials(Nancy.NancyContext, Nancy.Authentication.Basic.BasicAuthenticationConfiguration)"];
d45 [label="Entry Nancy.Authentication.Basic.IUserValidator.Validate(string, string)", span="18-18", cluster="Nancy.Authentication.Basic.IUserValidator.Validate(string, string)"];
d63 [label="Entry string.IsNullOrWhiteSpace(string)", span="0-0", cluster="string.IsNullOrWhiteSpace(string)"];
d64 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])"];
d54 [label=FormatException, span="125-125", cluster="Nancy.Authentication.Basic.BasicAuthentication.ExtractCredentialsFromHeaders(Nancy.Request)"];
d5 [label="applicationPipelines.BeforeRequest.AddItemToStartOfPipeline(GetCredentialRetrievalHook(configuration))", span="33-33", cluster="Nancy.Authentication.Basic.BasicAuthentication.Enable(Nancy.Bootstrapper.IApplicationPipelines, Nancy.Authentication.Basic.BasicAuthenticationConfiguration)"];
d19 [label="module.Before.AddItemToStartOfPipeline(GetCredentialRetrievalHook(configuration))", span="55-55", cluster="Nancy.Authentication.Basic.BasicAuthentication.Enable(Nancy.NancyModule, Nancy.Authentication.Basic.BasicAuthenticationConfiguration)"];
d0 [label="Entry Nancy.Authentication.Basic.BasicAuthentication.Enable(Nancy.Bootstrapper.IApplicationPipelines, Nancy.Authentication.Basic.BasicAuthenticationConfiguration)", span="21-21", cluster="Nancy.Authentication.Basic.BasicAuthentication.Enable(Nancy.Bootstrapper.IApplicationPipelines, Nancy.Authentication.Basic.BasicAuthenticationConfiguration)"];
d13 [label="Entry Nancy.Authentication.Basic.BasicAuthentication.Enable(Nancy.NancyModule, Nancy.Authentication.Basic.BasicAuthenticationConfiguration)", span="42-42", cluster="Nancy.Authentication.Basic.BasicAuthentication.Enable(Nancy.NancyModule, Nancy.Authentication.Basic.BasicAuthenticationConfiguration)"];
d24 [label="throw new ArgumentNullException(''configuration'');", span="69-69", cluster="Nancy.Authentication.Basic.BasicAuthentication.GetCredentialRetrievalHook(Nancy.Authentication.Basic.BasicAuthenticationConfiguration)"];
d65 [label="Nancy.Authentication.Basic.BasicAuthenticationConfiguration", span=""];
d27 [label="Entry lambda expression", span="72-76", cluster="lambda expression"];
d29 [label="return null;", span="75-75", cluster="lambda expression"];
d3 [label="configuration == null", span="28-28", cluster="Nancy.Authentication.Basic.BasicAuthentication.Enable(Nancy.Bootstrapper.IApplicationPipelines, Nancy.Authentication.Basic.BasicAuthenticationConfiguration)"];
d6 [label="applicationPipelines.AfterRequest.AddItemToEndOfPipeline(GetAuthenticationPromptHook(configuration))", span="34-34", cluster="Nancy.Authentication.Basic.BasicAuthentication.Enable(Nancy.Bootstrapper.IApplicationPipelines, Nancy.Authentication.Basic.BasicAuthenticationConfiguration)"];
d10 [label="Entry Nancy.BeforePipeline.AddItemToStartOfPipeline(System.Func<Nancy.NancyContext, Nancy.Response>)", span="96-96", cluster="Nancy.BeforePipeline.AddItemToStartOfPipeline(System.Func<Nancy.NancyContext, Nancy.Response>)"];
d18 [label="module.RequiresAuthentication()", span="54-54", cluster="Nancy.Authentication.Basic.BasicAuthentication.Enable(Nancy.NancyModule, Nancy.Authentication.Basic.BasicAuthenticationConfiguration)"];
d20 [label="module.After.AddItemToEndOfPipeline(GetAuthenticationPromptHook(configuration))", span="56-56", cluster="Nancy.Authentication.Basic.BasicAuthentication.Enable(Nancy.NancyModule, Nancy.Authentication.Basic.BasicAuthenticationConfiguration)"];
d7 [label="Exit Nancy.Authentication.Basic.BasicAuthentication.Enable(Nancy.Bootstrapper.IApplicationPipelines, Nancy.Authentication.Basic.BasicAuthenticationConfiguration)", span="21-21", cluster="Nancy.Authentication.Basic.BasicAuthentication.Enable(Nancy.Bootstrapper.IApplicationPipelines, Nancy.Authentication.Basic.BasicAuthenticationConfiguration)"];
d11 [label="Entry Nancy.Authentication.Basic.BasicAuthentication.GetAuthenticationPromptHook(Nancy.Authentication.Basic.BasicAuthenticationConfiguration)", span="79-79", cluster="Nancy.Authentication.Basic.BasicAuthentication.GetAuthenticationPromptHook(Nancy.Authentication.Basic.BasicAuthenticationConfiguration)"];
d1 [label="applicationPipelines == null", span="23-23", cluster="Nancy.Authentication.Basic.BasicAuthentication.Enable(Nancy.Bootstrapper.IApplicationPipelines, Nancy.Authentication.Basic.BasicAuthenticationConfiguration)"];
d21 [label="Exit Nancy.Authentication.Basic.BasicAuthentication.Enable(Nancy.NancyModule, Nancy.Authentication.Basic.BasicAuthenticationConfiguration)", span="42-42", cluster="Nancy.Authentication.Basic.BasicAuthentication.Enable(Nancy.NancyModule, Nancy.Authentication.Basic.BasicAuthenticationConfiguration)"];
d14 [label="module == null", span="44-44", cluster="Nancy.Authentication.Basic.BasicAuthentication.Enable(Nancy.NancyModule, Nancy.Authentication.Basic.BasicAuthenticationConfiguration)"];
d16 [label="configuration == null", span="49-49", cluster="Nancy.Authentication.Basic.BasicAuthentication.Enable(Nancy.NancyModule, Nancy.Authentication.Basic.BasicAuthenticationConfiguration)"];
d8 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)"];
d30 [label="Exit lambda expression", span="72-76", cluster="lambda expression"];
d4 [label="throw new ArgumentNullException(''configuration'');", span="30-30", cluster="Nancy.Authentication.Basic.BasicAuthentication.Enable(Nancy.Bootstrapper.IApplicationPipelines, Nancy.Authentication.Basic.BasicAuthenticationConfiguration)"];
d12 [label="Entry Nancy.AfterPipeline.AddItemToEndOfPipeline(System.Action<Nancy.NancyContext>)", span="86-86", cluster="Nancy.AfterPipeline.AddItemToEndOfPipeline(System.Action<Nancy.NancyContext>)"];
d22 [label="Entry Nancy.NancyModule.RequiresAuthentication()", span="15-15", cluster="Nancy.NancyModule.RequiresAuthentication()"];
d2 [label="throw new ArgumentNullException(''applicationPipelines'');", span="25-25", cluster="Nancy.Authentication.Basic.BasicAuthentication.Enable(Nancy.Bootstrapper.IApplicationPipelines, Nancy.Authentication.Basic.BasicAuthenticationConfiguration)"];
d33 [label="Exit Nancy.Authentication.Basic.BasicAuthentication.GetAuthenticationPromptHook(Nancy.Authentication.Basic.BasicAuthenticationConfiguration)", span="79-79", cluster="Nancy.Authentication.Basic.BasicAuthentication.GetAuthenticationPromptHook(Nancy.Authentication.Basic.BasicAuthenticationConfiguration)"];
d32 [label="return context =>\r\n                {\r\n                    if (context.Response.StatusCode == HttpStatusCode.Unauthorized)\r\n                    {\r\n                        context.Response.Headers[''WWW-Authenticate''] = String.Format(''{0} realm=\''{1}\'''', SCHEME, configuration.Realm);\r\n                    }\r\n                };", span="81-87", cluster="Nancy.Authentication.Basic.BasicAuthentication.GetAuthenticationPromptHook(Nancy.Authentication.Basic.BasicAuthenticationConfiguration)"];
d36 [label="context.Response.Headers[''WWW-Authenticate''] = String.Format(''{0} realm=\''{1}\'''', SCHEME, configuration.Realm)", span="85-85", cluster="lambda expression"];
d15 [label="throw new ArgumentNullException(''module'');", span="46-46", cluster="Nancy.Authentication.Basic.BasicAuthentication.Enable(Nancy.NancyModule, Nancy.Authentication.Basic.BasicAuthenticationConfiguration)"];
d17 [label="throw new ArgumentNullException(''configuration'');", span="51-51", cluster="Nancy.Authentication.Basic.BasicAuthentication.Enable(Nancy.NancyModule, Nancy.Authentication.Basic.BasicAuthenticationConfiguration)"];
d35 [label="context.Response.StatusCode == HttpStatusCode.Unauthorized", span="83-83", cluster="lambda expression"];
d66 [label="Nancy.Authentication.Basic.BasicAuthenticationConfiguration", span=""];
d34 [label="Entry lambda expression", span="81-87", cluster="lambda expression"];
d37 [label="Exit lambda expression", span="81-87", cluster="lambda expression"];
d38 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)"];
m0_0 [label="Entry Nancy.Diagnostics.TraceLog.TraceLog()", span="9-9", cluster="Nancy.Diagnostics.TraceLog.TraceLog()", file="BasicAuthenticationFixture.cs"];
m0_1 [label="this.log = new StringBuilder()", span="11-11", cluster="Nancy.Diagnostics.TraceLog.TraceLog()", file="BasicAuthenticationFixture.cs"];
m0_2 [label="Exit Nancy.Diagnostics.TraceLog.TraceLog()", span="9-9", cluster="Nancy.Diagnostics.TraceLog.TraceLog()", file="BasicAuthenticationFixture.cs"];
m0_4 [label="Entry Nancy.Diagnostics.TraceLog.WriteLog(System.Action<System.Text.StringBuilder>)", span="14-14", cluster="Nancy.Diagnostics.TraceLog.WriteLog(System.Action<System.Text.StringBuilder>)", file="BasicAuthenticationFixture.cs"];
m0_5 [label="this.log != null", span="16-16", cluster="Nancy.Diagnostics.TraceLog.WriteLog(System.Action<System.Text.StringBuilder>)", file="BasicAuthenticationFixture.cs"];
m0_6 [label="logDelegate.Invoke(this.log)", span="18-18", cluster="Nancy.Diagnostics.TraceLog.WriteLog(System.Action<System.Text.StringBuilder>)", file="BasicAuthenticationFixture.cs"];
m0_7 [label="Exit Nancy.Diagnostics.TraceLog.WriteLog(System.Action<System.Text.StringBuilder>)", span="14-14", cluster="Nancy.Diagnostics.TraceLog.WriteLog(System.Action<System.Text.StringBuilder>)", file="BasicAuthenticationFixture.cs"];
m0_3 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()", file="BasicAuthenticationFixture.cs"];
m0_12 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="BasicAuthenticationFixture.cs"];
m0_9 [label="Entry Nancy.Diagnostics.TraceLog.ToString()", span="22-22", cluster="Nancy.Diagnostics.TraceLog.ToString()", file="BasicAuthenticationFixture.cs"];
m0_10 [label="return this.log != null ? this.log.ToString() : string.Empty;", span="24-24", cluster="Nancy.Diagnostics.TraceLog.ToString()", file="BasicAuthenticationFixture.cs"];
m0_11 [label="Exit Nancy.Diagnostics.TraceLog.ToString()", span="22-22", cluster="Nancy.Diagnostics.TraceLog.ToString()", file="BasicAuthenticationFixture.cs"];
m0_8 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="BasicAuthenticationFixture.cs"];
m0_13 [label="Nancy.Diagnostics.TraceLog", span="", file="BasicAuthenticationFixture.cs"];
m1_7 [label="Entry Nancy.Testing.DocumentWrapper.DocumentWrapper(System.Collections.Generic.IEnumerable<byte>)", span="18-18", cluster="Nancy.Testing.DocumentWrapper.DocumentWrapper(System.Collections.Generic.IEnumerable<byte>)", file="CookieBasedSessionsFixture.cs"];
m1_22 [label="Entry object.ShouldBeSameAs(object)", span="130-130", cluster="object.ShouldBeSameAs(object)", file="CookieBasedSessionsFixture.cs"];
m1_21 [label="Exit lambda expression", span="31-43", cluster="lambda expression", file="CookieBasedSessionsFixture.cs"];
m1_64 [label="Exit Nancy.Testing.Tests.AssertEqualityComparerFixture.EquatableModel.EquatableModel()", span="137-137", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.EquatableModel.EquatableModel()", file="CookieBasedSessionsFixture.cs"];
m1_56 [label="Entry Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_result_from_comparing_comparables(int, bool)", span="119-119", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_result_from_comparing_comparables(int, bool)", file="CookieBasedSessionsFixture.cs"];
m1_60 [label="var result = comparer.Equals(expected, actual)", span="127-127", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_result_from_comparing_comparables(int, bool)", file="CookieBasedSessionsFixture.cs"];
m1_57 [label="var comparer = new AssertEqualityComparer<CompareableModel>()", span="122-122", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_result_from_comparing_comparables(int, bool)", file="CookieBasedSessionsFixture.cs"];
m1_58 [label="var actual = new CompareableModel(compareResult)", span="123-123", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_result_from_comparing_comparables(int, bool)", file="CookieBasedSessionsFixture.cs"];
m1_59 [label="var expected = new CompareableModel()", span="124-124", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_result_from_comparing_comparables(int, bool)", file="CookieBasedSessionsFixture.cs"];
m1_61 [label="result.ShouldEqual(expectedResult)", span="130-130", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_result_from_comparing_comparables(int, bool)", file="CookieBasedSessionsFixture.cs"];
m1_62 [label="Exit Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_result_from_comparing_comparables(int, bool)", span="119-119", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_result_from_comparing_comparables(int, bool)", file="CookieBasedSessionsFixture.cs"];
m1_63 [label="Entry Nancy.Testing.Tests.AssertEqualityComparerFixture.CompareableModel.CompareableModel(int)", span="188-188", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.CompareableModel.CompareableModel(int)", file="CookieBasedSessionsFixture.cs"];
m1_79 [label="this.returnValue = returnValue", span="190-190", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.CompareableModel.CompareableModel(int)", file="CookieBasedSessionsFixture.cs"];
m1_80 [label="Exit Nancy.Testing.Tests.AssertEqualityComparerFixture.CompareableModel.CompareableModel(int)", span="188-188", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.CompareableModel.CompareableModel(int)", file="CookieBasedSessionsFixture.cs"];
m1_31 [label="Entry object.ShouldEqual(object)", span="95-95", cluster="object.ShouldEqual(object)", file="CookieBasedSessionsFixture.cs"];
m1_15 [label="var comparer = new AssertEqualityComparer<EquatableModel>()", span="39-39", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_invoke_equals_with_expected_value_when_actual_is_equatable()", file="CookieBasedSessionsFixture.cs"];
m1_30 [label="Entry Nancy.Testing.Tests.AssertEqualityComparerFixture.EquatableModel.EquatableModel(bool)", span="142-142", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.EquatableModel.EquatableModel(bool)", file="CookieBasedSessionsFixture.cs"];
m1_65 [label="this.returnValue = returnValue", span="144-144", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.EquatableModel.EquatableModel(bool)", file="CookieBasedSessionsFixture.cs"];
m1_66 [label="Exit Nancy.Testing.Tests.AssertEqualityComparerFixture.EquatableModel.EquatableModel(bool)", span="142-142", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.EquatableModel.EquatableModel(bool)", file="CookieBasedSessionsFixture.cs"];
m1_8 [label="Entry Nancy.Testing.QueryWrapper.ShouldExist()", span="25-25", cluster="Nancy.Testing.QueryWrapper.ShouldExist()", file="CookieBasedSessionsFixture.cs"];
m1_10 [label="var comparer = new AssertEqualityComparer<object>()", span="26-26", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_false_if_expected_is_null_when_comparing_equality()", file="CookieBasedSessionsFixture.cs"];
m1_11 [label="var results = comparer.Equals(null, new object())", span="29-29", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_false_if_expected_is_null_when_comparing_equality()", color=red, community=0, file="CookieBasedSessionsFixture.cs"];
m1_12 [label="results.ShouldBeFalse()", span="32-32", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_false_if_expected_is_null_when_comparing_equality()", file="CookieBasedSessionsFixture.cs"];
m1_13 [label="Exit Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_false_if_expected_is_null_when_comparing_equality()", span="23-23", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_false_if_expected_is_null_when_comparing_equality()", file="CookieBasedSessionsFixture.cs"];
m1_32 [label="Entry Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_invoke_compareto_with_expected_value_when_actual_is_generic_comparable()", span="68-68", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_invoke_compareto_with_expected_value_when_actual_is_generic_comparable()", file="CookieBasedSessionsFixture.cs"];
m1_36 [label="comparer.Equals(expected, actual)", span="76-76", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_invoke_compareto_with_expected_value_when_actual_is_generic_comparable()", file="CookieBasedSessionsFixture.cs"];
m1_33 [label="var comparer = new AssertEqualityComparer<GenericCompareableModel>()", span="71-71", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_invoke_compareto_with_expected_value_when_actual_is_generic_comparable()", file="CookieBasedSessionsFixture.cs"];
m1_34 [label="var actual = new GenericCompareableModel()", span="72-72", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_invoke_compareto_with_expected_value_when_actual_is_generic_comparable()", file="CookieBasedSessionsFixture.cs"];
m1_35 [label="var expected = new GenericCompareableModel()", span="73-73", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_invoke_compareto_with_expected_value_when_actual_is_generic_comparable()", file="CookieBasedSessionsFixture.cs"];
m1_37 [label="actual.ExpectedValueThatWasPassedIn.ShouldBeSameAs(expected)", span="79-79", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_invoke_compareto_with_expected_value_when_actual_is_generic_comparable()", file="CookieBasedSessionsFixture.cs"];
m1_38 [label="Exit Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_invoke_compareto_with_expected_value_when_actual_is_generic_comparable()", span="68-68", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_invoke_compareto_with_expected_value_when_actual_is_generic_comparable()", file="CookieBasedSessionsFixture.cs"];
m1_6 [label="Entry System.Text.Encoding.GetBytes(string)", span="0-0", cluster="System.Text.Encoding.GetBytes(string)", file="CookieBasedSessionsFixture.cs"];
m1_48 [label="Entry Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_invoke_compareto_with_expected_value_when_actual_is_comparable()", span="101-101", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_invoke_compareto_with_expected_value_when_actual_is_comparable()", file="CookieBasedSessionsFixture.cs"];
m1_52 [label="comparer.Equals(expected, actual)", span="109-109", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_invoke_compareto_with_expected_value_when_actual_is_comparable()", file="CookieBasedSessionsFixture.cs"];
m1_49 [label="var comparer = new AssertEqualityComparer<CompareableModel>()", span="104-104", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_invoke_compareto_with_expected_value_when_actual_is_comparable()", file="CookieBasedSessionsFixture.cs"];
m1_50 [label="var actual = new CompareableModel()", span="105-105", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_invoke_compareto_with_expected_value_when_actual_is_comparable()", file="CookieBasedSessionsFixture.cs"];
m1_51 [label="var expected = new CompareableModel()", span="106-106", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_invoke_compareto_with_expected_value_when_actual_is_comparable()", file="CookieBasedSessionsFixture.cs"];
m1_53 [label="actual.ExpectedValueThatWasPassedIn.ShouldBeSameAs(expected)", span="112-112", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_invoke_compareto_with_expected_value_when_actual_is_comparable()", file="CookieBasedSessionsFixture.cs"];
m1_54 [label="Exit Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_invoke_compareto_with_expected_value_when_actual_is_comparable()", span="101-101", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_invoke_compareto_with_expected_value_when_actual_is_comparable()", file="CookieBasedSessionsFixture.cs"];
m1_74 [label="Entry Nancy.Testing.Tests.AssertEqualityComparerFixture.GenericCompareableModel.CompareTo(Nancy.Testing.Tests.AssertEqualityComparerFixture.GenericCompareableModel)", span="172-172", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.GenericCompareableModel.CompareTo(Nancy.Testing.Tests.AssertEqualityComparerFixture.GenericCompareableModel)", file="CookieBasedSessionsFixture.cs"];
m1_75 [label="this.ExpectedValueThatWasPassedIn = comparable", span="174-174", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.GenericCompareableModel.CompareTo(Nancy.Testing.Tests.AssertEqualityComparerFixture.GenericCompareableModel)", file="CookieBasedSessionsFixture.cs"];
m1_76 [label="return this.returnValue;", span="175-175", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.GenericCompareableModel.CompareTo(Nancy.Testing.Tests.AssertEqualityComparerFixture.GenericCompareableModel)", file="CookieBasedSessionsFixture.cs"];
m1_77 [label="Exit Nancy.Testing.Tests.AssertEqualityComparerFixture.GenericCompareableModel.CompareTo(Nancy.Testing.Tests.AssertEqualityComparerFixture.GenericCompareableModel)", span="172-172", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.GenericCompareableModel.CompareTo(Nancy.Testing.Tests.AssertEqualityComparerFixture.GenericCompareableModel)", file="CookieBasedSessionsFixture.cs"];
m1_5 [label="Exit Nancy.Testing.Tests.AndConnectorTests.Should_allow_chaining_of_asserts_and_still_pass()", span="10-10", cluster="Nancy.Testing.Tests.AndConnectorTests.Should_allow_chaining_of_asserts_and_still_pass()", file="CookieBasedSessionsFixture.cs"];
m1_47 [label="Entry Nancy.Testing.Tests.AssertEqualityComparerFixture.GenericCompareableModel.GenericCompareableModel(int)", span="165-165", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.GenericCompareableModel.GenericCompareableModel(int)", file="CookieBasedSessionsFixture.cs"];
m1_72 [label="this.returnValue = returnValue", span="167-167", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.GenericCompareableModel.GenericCompareableModel(int)", file="CookieBasedSessionsFixture.cs"];
m1_73 [label="Exit Nancy.Testing.Tests.AssertEqualityComparerFixture.GenericCompareableModel.GenericCompareableModel(int)", span="165-165", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.GenericCompareableModel.GenericCompareableModel(int)", file="CookieBasedSessionsFixture.cs"];
m1_16 [label="var actual = new EquatableModel()", span="40-40", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_invoke_equals_with_expected_value_when_actual_is_equatable()", file="CookieBasedSessionsFixture.cs"];
m1_17 [label="var expected = new EquatableModel()", span="41-41", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_invoke_equals_with_expected_value_when_actual_is_equatable()", file="CookieBasedSessionsFixture.cs"];
m1_18 [label="comparer.Equals(expected, actual)", span="44-44", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_invoke_equals_with_expected_value_when_actual_is_equatable()", color=red, community=0, file="CookieBasedSessionsFixture.cs"];
m1_19 [label="actual.ExpectedValueThatWasPassedIn.ShouldBeSameAs(expected)", span="47-47", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_invoke_equals_with_expected_value_when_actual_is_equatable()", file="CookieBasedSessionsFixture.cs"];
m1_20 [label="Exit Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_invoke_equals_with_expected_value_when_actual_is_equatable()", span="36-36", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_invoke_equals_with_expected_value_when_actual_is_equatable()", file="CookieBasedSessionsFixture.cs"];
m1_14 [label="Entry Unk.Exception", span="", cluster="Unk.Exception", file="CookieBasedSessionsFixture.cs"];
m1_67 [label="Entry Nancy.Testing.Tests.AssertEqualityComparerFixture.EquatableModel.Equals(Nancy.Testing.Tests.AssertEqualityComparerFixture.EquatableModel)", span="149-149", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.EquatableModel.Equals(Nancy.Testing.Tests.AssertEqualityComparerFixture.EquatableModel)", file="CookieBasedSessionsFixture.cs"];
m1_68 [label="this.ExpectedValueThatWasPassedIn = expected", span="151-151", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.EquatableModel.Equals(Nancy.Testing.Tests.AssertEqualityComparerFixture.EquatableModel)", file="CookieBasedSessionsFixture.cs"];
m1_69 [label="return this.returnValue;", span="152-152", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.EquatableModel.Equals(Nancy.Testing.Tests.AssertEqualityComparerFixture.EquatableModel)", file="CookieBasedSessionsFixture.cs"];
m1_70 [label="Exit Nancy.Testing.Tests.AssertEqualityComparerFixture.EquatableModel.Equals(Nancy.Testing.Tests.AssertEqualityComparerFixture.EquatableModel)", span="149-149", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.EquatableModel.Equals(Nancy.Testing.Tests.AssertEqualityComparerFixture.EquatableModel)", file="CookieBasedSessionsFixture.cs"];
m1_9 [label="Entry Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_false_if_expected_is_null_when_comparing_equality()", span="23-23", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_false_if_expected_is_null_when_comparing_equality()", file="CookieBasedSessionsFixture.cs"];
m1_55 [label="Entry Nancy.Testing.Tests.AssertEqualityComparerFixture.CompareableModel.CompareableModel()", span="183-183", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.CompareableModel.CompareableModel()", file="CookieBasedSessionsFixture.cs"];
m1_78 [label="Exit Nancy.Testing.Tests.AssertEqualityComparerFixture.CompareableModel.CompareableModel()", span="183-183", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.CompareableModel.CompareableModel()", file="CookieBasedSessionsFixture.cs"];
m1_23 [label="Entry Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_result_from_comparing_equatables(bool)", span="53-53", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_result_from_comparing_equatables(bool)", file="CookieBasedSessionsFixture.cs"];
m1_27 [label="var result = comparer.Equals(expected, actual)", span="61-61", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_result_from_comparing_equatables(bool)", file="CookieBasedSessionsFixture.cs"];
m1_24 [label="var comparer = new AssertEqualityComparer<EquatableModel>()", span="56-56", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_result_from_comparing_equatables(bool)", file="CookieBasedSessionsFixture.cs"];
m1_25 [label="var actual = new EquatableModel(expectedReturnValue)", span="57-57", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_result_from_comparing_equatables(bool)", file="CookieBasedSessionsFixture.cs"];
m1_26 [label="var expected = new EquatableModel()", span="58-58", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_result_from_comparing_equatables(bool)", file="CookieBasedSessionsFixture.cs"];
m1_28 [label="result.ShouldEqual(expectedReturnValue)", span="64-64", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_result_from_comparing_equatables(bool)", file="CookieBasedSessionsFixture.cs"];
m1_29 [label="Exit Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_result_from_comparing_equatables(bool)", span="53-53", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_result_from_comparing_equatables(bool)", file="CookieBasedSessionsFixture.cs"];
m1_81 [label="Entry Nancy.Testing.Tests.AssertEqualityComparerFixture.CompareableModel.CompareTo(object)", span="195-195", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.CompareableModel.CompareTo(object)", file="CookieBasedSessionsFixture.cs"];
m1_82 [label="this.ExpectedValueThatWasPassedIn = comparable", span="197-197", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.CompareableModel.CompareTo(object)", file="CookieBasedSessionsFixture.cs"];
m1_83 [label="return this.returnValue;", span="198-198", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.CompareableModel.CompareTo(object)", file="CookieBasedSessionsFixture.cs"];
m1_84 [label="Exit Nancy.Testing.Tests.AssertEqualityComparerFixture.CompareableModel.CompareTo(object)", span="195-195", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.CompareableModel.CompareTo(object)", file="CookieBasedSessionsFixture.cs"];
m1_39 [label="Entry Nancy.Testing.Tests.AssertEqualityComparerFixture.GenericCompareableModel.GenericCompareableModel()", span="160-160", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.GenericCompareableModel.GenericCompareableModel()", file="CookieBasedSessionsFixture.cs"];
m1_71 [label="Exit Nancy.Testing.Tests.AssertEqualityComparerFixture.GenericCompareableModel.GenericCompareableModel()", span="160-160", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.GenericCompareableModel.GenericCompareableModel()", file="CookieBasedSessionsFixture.cs"];
m1_0 [label="Entry Nancy.Testing.Tests.AndConnectorTests.Should_allow_chaining_of_asserts_and_still_pass()", span="10-10", cluster="Nancy.Testing.Tests.AndConnectorTests.Should_allow_chaining_of_asserts_and_still_pass()", file="CookieBasedSessionsFixture.cs"];
m1_3 [label="var document = new DocumentWrapper(buffer)", span="19-19", cluster="Nancy.Testing.Tests.AndConnectorTests.Should_allow_chaining_of_asserts_and_still_pass()", color=red, community=0, file="CookieBasedSessionsFixture.cs"];
m1_2 [label="var buffer =\r\n                Encoding.UTF8.GetBytes(input)", span="15-16", cluster="Nancy.Testing.Tests.AndConnectorTests.Should_allow_chaining_of_asserts_and_still_pass()", file="CookieBasedSessionsFixture.cs"];
m1_1 [label="string input = @''<html><head></head><body><div id='testId' class='myClass'>Test</div></body></html>''", span="13-13", cluster="Nancy.Testing.Tests.AndConnectorTests.Should_allow_chaining_of_asserts_and_still_pass()", file="CookieBasedSessionsFixture.cs"];
m1_4 [label="document[''#testId''].ShouldExist().And.ShouldBeOfClass(''myClass'')", span="22-22", cluster="Nancy.Testing.Tests.AndConnectorTests.Should_allow_chaining_of_asserts_and_still_pass()", file="CookieBasedSessionsFixture.cs"];
m1_40 [label="Entry Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_result_from_comparing_generic_comparables(int, bool)", span="86-86", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_result_from_comparing_generic_comparables(int, bool)", file="CookieBasedSessionsFixture.cs"];
m1_44 [label="var result = comparer.Equals(expected, actual)", span="94-94", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_result_from_comparing_generic_comparables(int, bool)", file="CookieBasedSessionsFixture.cs"];
m1_41 [label="var comparer = new AssertEqualityComparer<GenericCompareableModel>()", span="89-89", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_result_from_comparing_generic_comparables(int, bool)", file="CookieBasedSessionsFixture.cs"];
m1_42 [label="var actual = new GenericCompareableModel(compareResult)", span="90-90", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_result_from_comparing_generic_comparables(int, bool)", file="CookieBasedSessionsFixture.cs"];
m1_43 [label="var expected = new GenericCompareableModel()", span="91-91", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_result_from_comparing_generic_comparables(int, bool)", file="CookieBasedSessionsFixture.cs"];
m1_45 [label="result.ShouldEqual(expectedResult)", span="97-97", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_result_from_comparing_generic_comparables(int, bool)", file="CookieBasedSessionsFixture.cs"];
m1_46 [label="Exit Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_result_from_comparing_generic_comparables(int, bool)", span="86-86", cluster="Nancy.Testing.Tests.AssertEqualityComparerFixture.Should_return_result_from_comparing_generic_comparables(int, bool)", file="CookieBasedSessionsFixture.cs"];
m1_85 [label="Nancy.Testing.Tests.AssertEqualityComparerFixture.EquatableModel", span="", file="CookieBasedSessionsFixture.cs"];
m1_86 [label="Nancy.Testing.Tests.AssertEqualityComparerFixture.GenericCompareableModel", span="", file="CookieBasedSessionsFixture.cs"];
m1_87 [label="Nancy.Testing.Tests.AssertEqualityComparerFixture.CompareableModel", span="", file="CookieBasedSessionsFixture.cs"];
m2_16 [label="Entry string.Contains(string)", span="0-0", cluster="string.Contains(string)", file="DefaultBinder.cs"];
m2_14 [label="Entry Nancy.Testing.Browser.Get(string, System.Action<Nancy.Testing.BrowserContext>)", span="49-49", cluster="Nancy.Testing.Browser.Get(string, System.Action<Nancy.Testing.BrowserContext>)", file="DefaultBinder.cs"];
m2_17 [label="Entry Unk.True", span="", cluster="Unk.True", file="DefaultBinder.cs"];
m2_15 [label="Entry Nancy.Testing.BrowserResponseBodyWrapper.AsString()", span="30-30", cluster="Nancy.Testing.BrowserResponseBodyWrapper.AsString()", file="DefaultBinder.cs"];
m2_0 [label="Entry Nancy.Tests.Functional.Tests.ViewBagTests.ViewBagTests()", span="14-14", cluster="Nancy.Tests.Functional.Tests.ViewBagTests.ViewBagTests()", file="DefaultBinder.cs"];
m2_1 [label="this.bootstrapper = new ConfigurableBootstrapper(\r\n                    configuration => configuration.Modules(new Type[] { typeof(RazorTestModule) }))", span="16-17", cluster="Nancy.Tests.Functional.Tests.ViewBagTests.ViewBagTests()", file="DefaultBinder.cs"];
m2_2 [label="this.browser = new Browser(bootstrapper)", span="19-19", cluster="Nancy.Tests.Functional.Tests.ViewBagTests.ViewBagTests()", file="DefaultBinder.cs"];
m2_3 [label="Exit Nancy.Tests.Functional.Tests.ViewBagTests.ViewBagTests()", span="14-14", cluster="Nancy.Tests.Functional.Tests.ViewBagTests.ViewBagTests()", file="DefaultBinder.cs"];
m2_4 [label="Entry Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapper(System.Action<Nancy.Testing.ConfigurableBootstrapper.ConfigurableBoostrapperConfigurator>)", span="42-42", cluster="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapper(System.Action<Nancy.Testing.ConfigurableBootstrapper.ConfigurableBoostrapperConfigurator>)", file="DefaultBinder.cs"];
m2_9 [label="Entry Nancy.Testing.ConfigurableBootstrapper.ConfigurableBoostrapperConfigurator.Modules(params System.Type[])", span="649-649", cluster="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBoostrapperConfigurator.Modules(params System.Type[])", file="DefaultBinder.cs"];
m2_21 [label="Entry Nancy.Testing.BrowserContext.HttpRequest()", span="116-116", cluster="Nancy.Testing.BrowserContext.HttpRequest()", file="DefaultBinder.cs"];
m2_22 [label="Entry Nancy.Tests.Functional.Tests.ViewBagTests.Should_render_content_from_viewbags()", span="39-39", cluster="Nancy.Tests.Functional.Tests.ViewBagTests.Should_render_content_from_viewbags()", file="DefaultBinder.cs"];
m2_23 [label="var response = browser.Get(\r\n                @''/razor-viewbag'',\r\n                with =>\r\n                {\r\n                    with.HttpRequest();\r\n                })", span="43-48", cluster="Nancy.Tests.Functional.Tests.ViewBagTests.Should_render_content_from_viewbags()", file="DefaultBinder.cs"];
m2_24 [label="Assert.True(response.Body.AsString().Contains(@''Hello Bob''))", span="51-51", cluster="Nancy.Tests.Functional.Tests.ViewBagTests.Should_render_content_from_viewbags()", file="DefaultBinder.cs"];
m2_25 [label="Exit Nancy.Tests.Functional.Tests.ViewBagTests.Should_render_content_from_viewbags()", span="39-39", cluster="Nancy.Tests.Functional.Tests.ViewBagTests.Should_render_content_from_viewbags()", file="DefaultBinder.cs"];
m2_26 [label="Entry lambda expression", span="45-48", cluster="lambda expression", file="DefaultBinder.cs"];
m2_7 [label="configuration.Modules(new Type[] { typeof(RazorTestModule) })", span="17-17", cluster="lambda expression", file="DefaultBinder.cs"];
m2_6 [label="Entry lambda expression", span="17-17", cluster="lambda expression", file="DefaultBinder.cs"];
m2_8 [label="Exit lambda expression", span="17-17", cluster="lambda expression", file="DefaultBinder.cs"];
m2_18 [label="Entry lambda expression", span="29-32", cluster="lambda expression", file="DefaultBinder.cs"];
m2_19 [label="with.HttpRequest()", span="31-31", cluster="lambda expression", file="DefaultBinder.cs"];
m2_20 [label="Exit lambda expression", span="29-32", cluster="lambda expression", file="DefaultBinder.cs"];
m2_27 [label="with.HttpRequest()", span="47-47", cluster="lambda expression", file="DefaultBinder.cs"];
m2_28 [label="Exit lambda expression", span="45-48", cluster="lambda expression", file="DefaultBinder.cs"];
m2_10 [label="Entry Nancy.Tests.Functional.Tests.ViewBagTests.Should_render_content_from_viewbag()", span="23-23", cluster="Nancy.Tests.Functional.Tests.ViewBagTests.Should_render_content_from_viewbag()", file="DefaultBinder.cs"];
m2_11 [label="var response = browser.Get(\r\n                @''/razor-viewbag'',\r\n                with =>\r\n                {\r\n                    with.HttpRequest();\r\n                })", span="27-32", cluster="Nancy.Tests.Functional.Tests.ViewBagTests.Should_render_content_from_viewbag()", file="DefaultBinder.cs"];
m2_12 [label="Assert.True(response.Body.AsString().Contains(@''Hello Bob''))", span="35-35", cluster="Nancy.Tests.Functional.Tests.ViewBagTests.Should_render_content_from_viewbag()", file="DefaultBinder.cs"];
m2_13 [label="Exit Nancy.Tests.Functional.Tests.ViewBagTests.Should_render_content_from_viewbag()", span="23-23", cluster="Nancy.Tests.Functional.Tests.ViewBagTests.Should_render_content_from_viewbag()", file="DefaultBinder.cs"];
m2_5 [label="Entry Nancy.Testing.Browser.Browser(Nancy.Bootstrapper.INancyBootstrapper)", span="25-25", cluster="Nancy.Testing.Browser.Browser(Nancy.Bootstrapper.INancyBootstrapper)", file="DefaultBinder.cs"];
m2_29 [label="Nancy.Tests.Functional.Tests.ViewBagTests", span="", file="DefaultBinder.cs"];
m3_0 [label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.DefaultBinderFixture()", span="15-15", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.DefaultBinderFixture()", file="DefaultBinderFixture.cs"];
m3_1 [label="this.passthroughNameConverter = A.Fake<IFieldNameConverter>()", span="17-17", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.DefaultBinderFixture()", file="DefaultBinderFixture.cs", color=green, community=0];
m3_2 [label="A.CallTo(() => this.passthroughNameConverter.Convert(null)).WithAnyArguments()\r\n                .ReturnsLazily(f => (string)f.Arguments[0])", span="18-19", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.DefaultBinderFixture()", file="DefaultBinderFixture.cs", color=green, community=0];
m3_3 [label="this.emptyDefaults = A.Fake<BindingDefaults>()", span="21-21", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.DefaultBinderFixture()", file="DefaultBinderFixture.cs"];
m3_70 [label="Entry Unk.MustHaveHappened", span="", cluster="Unk.MustHaveHappened", file="DefaultBinderFixture.cs"];
m3_78 [label="Entry Unk.Deserialize", span="", cluster="Unk.Deserialize", file="DefaultBinderFixture.cs"];
m3_94 [label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_request_content_type_to_can_deserialize()", span="103-103", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_request_content_type_to_can_deserialize()", file="DefaultBinderFixture.cs"];
m3_99 [label="A.CallTo(() => deserializer.CanDeserialize(''application/xml''))\r\n                .MustHaveHappened(Repeated.Exactly.Once)", span="115-116", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_request_content_type_to_can_deserialize()", color=green, community=0, file="DefaultBinderFixture.cs"];
m3_95 [label="var deserializer = A.Fake<IBodyDeserializer>()", span="106-106", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_request_content_type_to_can_deserialize()", file="DefaultBinderFixture.cs"];
m3_98 [label="binder.Bind(context, this.GetType())", span="112-112", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_request_content_type_to_can_deserialize()", file="DefaultBinderFixture.cs"];
m3_96 [label="var binder = this.GetBinder(bodyDeserializers: new[] { deserializer })", span="107-107", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_request_content_type_to_can_deserialize()", file="DefaultBinderFixture.cs"];
m3_97 [label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="109-109", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_request_content_type_to_can_deserialize()", file="DefaultBinderFixture.cs"];
m3_100 [label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_request_content_type_to_can_deserialize()", span="103-103", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_request_content_type_to_can_deserialize()", file="DefaultBinderFixture.cs"];
m3_15 [label="Entry lambda expression", span="54-54", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_69 [label="Entry Nancy.ModelBinding.IBinder.Bind(Nancy.NancyContext, System.Type, params string[])", span="16-16", cluster="Nancy.ModelBinding.IBinder.Bind(Nancy.NancyContext, System.Type, params string[])", file="DefaultBinderFixture.cs"];
m3_51 [label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_defaults_is_null()", span="57-57", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_defaults_is_null()", file="DefaultBinderFixture.cs"];
m3_52 [label="var result = Record.Exception(() => new DefaultBinder(new ITypeConverter[] { }, new IBodyDeserializer[] { }, A.Fake<IFieldNameConverter>(), null))", span="60-60", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_defaults_is_null()", file="DefaultBinderFixture.cs"];
m3_53 [label="result.ShouldBeOfType(typeof(ArgumentNullException))", span="63-63", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_defaults_is_null()", file="DefaultBinderFixture.cs"];
m3_54 [label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_defaults_is_null()", span="57-57", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_defaults_is_null()", file="DefaultBinderFixture.cs"];
m3_68 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="DefaultBinderFixture.cs"];
m3_115 [label="Entry object.ShouldBeSameAs(object)", span="115-115", cluster="object.ShouldBeSameAs(object)", file="DefaultBinderFixture.cs"];
m3_238 [label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_body_serializer_should_take_precedence_over_default_one()", span="269-269", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_body_serializer_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs"];
m3_243 [label="A.CallTo(() => this.emptyDefaults.DefaultBodyDeserializers).Returns(new[] { defaultDeserializer })", span="278-278", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_body_serializer_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs"];
m3_244 [label="var binder = this.GetBinder(bodyDeserializers: new[] { userDeserializer })", span="279-279", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_body_serializer_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs"];
m3_246 [label="binder.Bind(context, this.GetType())", span="284-284", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_body_serializer_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs"];
m3_239 [label="var userDeserializer = A.Fake<IBodyDeserializer>()", span="272-272", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_body_serializer_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs"];
m3_241 [label="var defaultDeserializer = A.Fake<IBodyDeserializer>()", span="275-275", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_body_serializer_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs"];
m3_240 [label="A.CallTo(() => userDeserializer.CanDeserialize(null)).WithAnyArguments().Returns(true)", span="273-273", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_body_serializer_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs"];
m3_247 [label="A.CallTo(() => userDeserializer.Deserialize(null, null, null)).WithAnyArguments()\r\n                .MustHaveHappened(Repeated.Exactly.Once)", span="287-288", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_body_serializer_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs"];
m3_242 [label="A.CallTo(() => defaultDeserializer.CanDeserialize(null)).WithAnyArguments().Returns(true)", span="276-276", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_body_serializer_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs"];
m3_248 [label="A.CallTo(() => defaultDeserializer.Deserialize(null, null, null)).WithAnyArguments()\r\n                .MustNotHaveHappened()", span="289-290", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_body_serializer_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs"];
m3_245 [label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="281-281", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_body_serializer_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs"];
m3_249 [label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_body_serializer_should_take_precedence_over_default_one()", span="269-269", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_body_serializer_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs"];
m3_30 [label="Entry Unk.ShouldBeOfType", span="", cluster="Unk.ShouldBeOfType", file="DefaultBinderFixture.cs"];
m3_188 [label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist()", span="213-213", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist()", file="DefaultBinderFixture.cs"];
m3_189 [label="var binder = this.GetBinder(typeConverters: new[] { new FallbackConverter() })", span="216-216", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist()", file="DefaultBinderFixture.cs"];
m3_193 [label="var result = (TestModel)binder.Bind(context, typeof(TestModel), ''IntProperty'')", span="222-222", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist()", file="DefaultBinderFixture.cs"];
m3_190 [label="var context = new NancyContext { Request = new FakeRequest(''GET'', ''/'') }", span="217-217", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist()", file="DefaultBinderFixture.cs"];
m3_192 [label="context.Request.Form[''IntProperty''] = ''12''", span="219-219", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist()", file="DefaultBinderFixture.cs"];
m3_194 [label="result.StringProperty.ShouldEqual(''Test'')", span="225-225", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist()", file="DefaultBinderFixture.cs"];
m3_195 [label="result.IntProperty.ShouldEqual(0)", span="226-226", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist()", file="DefaultBinderFixture.cs"];
m3_191 [label="context.Request.Form[''StringProperty''] = ''Test''", span="218-218", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist()", file="DefaultBinderFixture.cs"];
m3_196 [label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist()", span="213-213", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist()", file="DefaultBinderFixture.cs"];
m3_177 [label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_field_name_converter_for_each_field()", span="196-196", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_field_name_converter_for_each_field()", file="DefaultBinderFixture.cs"];
m3_182 [label="binder.Bind(context, typeof(TestModel))", span="205-205", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_field_name_converter_for_each_field()", color=green, community=0, file="DefaultBinderFixture.cs"];
m3_178 [label="var binder = this.GetBinder()", span="199-199", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_field_name_converter_for_each_field()", file="DefaultBinderFixture.cs"];
m3_179 [label="var context = new NancyContext { Request = new FakeRequest(''GET'', ''/'') }", span="200-200", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_field_name_converter_for_each_field()", file="DefaultBinderFixture.cs"];
m3_181 [label="context.Request.Form[''IntProperty''] = ''12''", span="202-202", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_field_name_converter_for_each_field()", file="DefaultBinderFixture.cs"];
m3_183 [label="A.CallTo(() => this.passthroughNameConverter.Convert(null)).WithAnyArguments()\r\n                .MustHaveHappened(Repeated.Exactly.Times(2))", span="208-209", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_field_name_converter_for_each_field()", file="DefaultBinderFixture.cs"];
m3_180 [label="context.Request.Form[''StringProperty''] = ''Test''", span="201-201", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_field_name_converter_for_each_field()", file="DefaultBinderFixture.cs"];
m3_184 [label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_field_name_converter_for_each_field()", span="196-196", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_field_name_converter_for_each_field()", file="DefaultBinderFixture.cs"];
m3_174 [label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.GetBinder(System.Collections.Generic.IEnumerable<Nancy.ModelBinding.ITypeConverter>, System.Collections.Generic.IEnumerable<Nancy.ModelBinding.IBodyDeserializer>, Nancy.ModelBinding.IFieldNameConverter, Nancy.ModelBinding.BindingDefaults)", span="318-318", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.GetBinder(System.Collections.Generic.IEnumerable<Nancy.ModelBinding.ITypeConverter>, System.Collections.Generic.IEnumerable<Nancy.ModelBinding.IBodyDeserializer>, Nancy.ModelBinding.IFieldNameConverter, Nancy.ModelBinding.BindingDefaults)", file="DefaultBinderFixture.cs"];
m3_303 [label="var converter = nameConverter ?? this.passthroughNameConverter", span="322-322", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.GetBinder(System.Collections.Generic.IEnumerable<Nancy.ModelBinding.ITypeConverter>, System.Collections.Generic.IEnumerable<Nancy.ModelBinding.IBodyDeserializer>, Nancy.ModelBinding.IFieldNameConverter, Nancy.ModelBinding.BindingDefaults)", file="DefaultBinderFixture.cs"];
m3_304 [label="var defaults = bindingDefaults ?? this.emptyDefaults", span="323-323", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.GetBinder(System.Collections.Generic.IEnumerable<Nancy.ModelBinding.ITypeConverter>, System.Collections.Generic.IEnumerable<Nancy.ModelBinding.IBodyDeserializer>, Nancy.ModelBinding.IFieldNameConverter, Nancy.ModelBinding.BindingDefaults)", file="DefaultBinderFixture.cs"];
m3_302 [label="var deserializers = bodyDeserializers ?? new IBodyDeserializer[] { }", span="321-321", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.GetBinder(System.Collections.Generic.IEnumerable<Nancy.ModelBinding.ITypeConverter>, System.Collections.Generic.IEnumerable<Nancy.ModelBinding.IBodyDeserializer>, Nancy.ModelBinding.IFieldNameConverter, Nancy.ModelBinding.BindingDefaults)", file="DefaultBinderFixture.cs"];
m3_305 [label="return new DefaultBinder(converters, deserializers, converter, defaults);", span="325-325", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.GetBinder(System.Collections.Generic.IEnumerable<Nancy.ModelBinding.ITypeConverter>, System.Collections.Generic.IEnumerable<Nancy.ModelBinding.IBodyDeserializer>, Nancy.ModelBinding.IFieldNameConverter, Nancy.ModelBinding.BindingDefaults)", file="DefaultBinderFixture.cs"];
m3_301 [label="var converters = typeConverters ?? new ITypeConverter[] { }", span="320-320", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.GetBinder(System.Collections.Generic.IEnumerable<Nancy.ModelBinding.ITypeConverter>, System.Collections.Generic.IEnumerable<Nancy.ModelBinding.IBodyDeserializer>, Nancy.ModelBinding.IFieldNameConverter, Nancy.ModelBinding.BindingDefaults)", file="DefaultBinderFixture.cs"];
m3_306 [label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.GetBinder(System.Collections.Generic.IEnumerable<Nancy.ModelBinding.ITypeConverter>, System.Collections.Generic.IEnumerable<Nancy.ModelBinding.IBodyDeserializer>, Nancy.ModelBinding.IFieldNameConverter, Nancy.ModelBinding.BindingDefaults)", span="318-318", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.GetBinder(System.Collections.Generic.IEnumerable<Nancy.ModelBinding.ITypeConverter>, System.Collections.Generic.IEnumerable<Nancy.ModelBinding.IBodyDeserializer>, Nancy.ModelBinding.IFieldNameConverter, Nancy.ModelBinding.BindingDefaults)", file="DefaultBinderFixture.cs"];
m3_311 [label="Entry Nancy.Tests.Fakes.FakeRequest.FakeRequest(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", span="13-13", cluster="Nancy.Tests.Fakes.FakeRequest.FakeRequest(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="DefaultBinderFixture.cs"];
m3_43 [label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_field_name_converter_is_null()", span="47-47", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_field_name_converter_is_null()", file="DefaultBinderFixture.cs"];
m3_44 [label="var result = Record.Exception(() => new DefaultBinder(new ITypeConverter[] { }, new IBodyDeserializer[] { }, null, new BindingDefaults()))", span="50-50", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_field_name_converter_is_null()", file="DefaultBinderFixture.cs"];
m3_45 [label="result.ShouldBeOfType(typeof(ArgumentNullException))", span="53-53", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_field_name_converter_is_null()", file="DefaultBinderFixture.cs"];
m3_46 [label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_field_name_converter_is_null()", span="47-47", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_field_name_converter_is_null()", file="DefaultBinderFixture.cs"];
m3_25 [label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_type_converters_is_null()", span="27-27", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_type_converters_is_null()", file="DefaultBinderFixture.cs"];
m3_26 [label="var result = Record.Exception(() => new DefaultBinder(null, new IBodyDeserializer[] { }, A.Fake<IFieldNameConverter>(), new BindingDefaults()))", span="30-30", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_type_converters_is_null()", file="DefaultBinderFixture.cs"];
m3_27 [label="result.ShouldBeOfType(typeof(ArgumentNullException))", span="33-33", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_type_converters_is_null()", file="DefaultBinderFixture.cs"];
m3_28 [label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_type_converters_is_null()", span="27-27", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_type_converters_is_null()", file="DefaultBinderFixture.cs"];
m3_175 [label="Entry object.ShouldEqual(object)", span="80-80", cluster="object.ShouldEqual(object)", file="DefaultBinderFixture.cs"];
m3_4 [label="Entry Nancy.StaticContentStartup.Initialize(Nancy.Bootstrapper.IPipelines)", span="49-49", cluster="Nancy.StaticContentStartup.Initialize(Nancy.Bootstrapper.IPipelines)", file="DefaultBinderFixture.cs"];
m3_5 [label="var item = new PipelineItem<Func<NancyContext, Response>>(''Static content'', ctx =>\r\n            {\r\n                return conventions\r\n                    .Select(convention => convention.Invoke(ctx, rootPathProvider.GetRootPath()))\r\n                    .FirstOrDefault(response => response != null);\r\n            })", span="51-56", cluster="Nancy.StaticContentStartup.Initialize(Nancy.Bootstrapper.IPipelines)", file="DefaultBinderFixture.cs", color=red, community=0];
m3_6 [label="pipelines.BeforeRequest.AddItemToStartOfPipeline(item)", span="58-58", cluster="Nancy.StaticContentStartup.Initialize(Nancy.Bootstrapper.IPipelines)", file="DefaultBinderFixture.cs"];
m3_34 [label="Entry DefaultBinder.cstr", span="", cluster="DefaultBinder.cstr", file="DefaultBinderFixture.cs"];
m3_197 [label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_body_deserializer_if_one_found()", span="230-230", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_body_deserializer_if_one_found()", file="DefaultBinderFixture.cs"];
m3_203 [label="binder.Bind(context, this.GetType())", span="241-241", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_body_deserializer_if_one_found()", color=green, community=0, file="DefaultBinderFixture.cs"];
m3_201 [label="var binder = this.GetBinder()", span="236-236", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_body_deserializer_if_one_found()", file="DefaultBinderFixture.cs"];
m3_202 [label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="238-238", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_body_deserializer_if_one_found()", file="DefaultBinderFixture.cs"];
m3_204 [label="A.CallTo(() => deserializer.Deserialize(null, null, null)).WithAnyArguments()\r\n                .MustHaveHappened(Repeated.Exactly.Once)", span="244-245", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_body_deserializer_if_one_found()", file="DefaultBinderFixture.cs"];
m3_200 [label="A.CallTo(() => this.emptyDefaults.DefaultBodyDeserializers).Returns(new[] { deserializer })", span="235-235", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_body_deserializer_if_one_found()", file="DefaultBinderFixture.cs"];
m3_198 [label="var deserializer = A.Fake<IBodyDeserializer>()", span="233-233", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_body_deserializer_if_one_found()", file="DefaultBinderFixture.cs"];
m3_199 [label="A.CallTo(() => deserializer.CanDeserialize(null)).WithAnyArguments().Returns(true)", span="234-234", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_body_deserializer_if_one_found()", file="DefaultBinderFixture.cs"];
m3_205 [label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_body_deserializer_if_one_found()", span="230-230", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_body_deserializer_if_one_found()", file="DefaultBinderFixture.cs"];
m3_18 [label="Exit lambda expression", span="19-19", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_9 [label="Entry Unk.WithAnyArguments", span="", cluster="Unk.WithAnyArguments", file="DefaultBinderFixture.cs"];
m3_87 [label="Entry Unk.MustNotHaveHappened", span="", cluster="Unk.MustNotHaveHappened", file="DefaultBinderFixture.cs"];
m3_142 [label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_convert_on_type_converter_if_available()", span="158-158", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_convert_on_type_converter_if_available()", file="DefaultBinderFixture.cs"];
m3_146 [label="var binder = this.GetBinder(typeConverters: new[] { typeConverter })", span="164-164", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_convert_on_type_converter_if_available()", file="DefaultBinderFixture.cs"];
m3_143 [label="var typeConverter = A.Fake<ITypeConverter>()", span="161-161", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_convert_on_type_converter_if_available()", file="DefaultBinderFixture.cs"];
m3_144 [label="A.CallTo(() => typeConverter.CanConvertTo(typeof(string))).WithAnyArguments().Returns(true)", span="162-162", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_convert_on_type_converter_if_available()", file="DefaultBinderFixture.cs"];
m3_145 [label="A.CallTo(() => typeConverter.Convert(null, null, null)).WithAnyArguments().Returns(null)", span="163-163", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_convert_on_type_converter_if_available()", file="DefaultBinderFixture.cs"];
m3_150 [label="A.CallTo(() => typeConverter.Convert(null, null, null)).WithAnyArguments()\r\n                .MustHaveHappened(Repeated.Exactly.Once)", span="172-173", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_convert_on_type_converter_if_available()", file="DefaultBinderFixture.cs"];
m3_149 [label="binder.Bind(context, typeof(TestModel))", span="169-169", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_convert_on_type_converter_if_available()", file="DefaultBinderFixture.cs"];
m3_147 [label="var context = new NancyContext { Request = new FakeRequest(''GET'', ''/'') }", span="165-165", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_convert_on_type_converter_if_available()", file="DefaultBinderFixture.cs"];
m3_148 [label="context.Request.Form[''StringProperty''] = ''Test''", span="166-166", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_convert_on_type_converter_if_available()", file="DefaultBinderFixture.cs"];
m3_151 [label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_convert_on_type_converter_if_available()", span="158-158", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_convert_on_type_converter_if_available()", file="DefaultBinderFixture.cs"];
m3_134 [label="Entry Unk.Times", span="", cluster="Unk.Times", file="DefaultBinderFixture.cs"];
m3_66 [label="Entry Unk.GetBinder", span="", cluster="Unk.GetBinder", file="DefaultBinderFixture.cs"];
m3_158 [label="Entry Unk.Convert", span="", cluster="Unk.Convert", file="DefaultBinderFixture.cs"];
m3_133 [label="Entry Nancy.Tests.Fakes.FakeRequest.FakeRequest(string, string)", span="8-8", cluster="Nancy.Tests.Fakes.FakeRequest.FakeRequest(string, string)", file="DefaultBinderFixture.cs"];
m3_310 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="DefaultBinderFixture.cs"];
m3_8 [label="Entry Unk.CallTo", span="", cluster="Unk.CallTo", file="DefaultBinderFixture.cs"];
m3_114 [label="Entry object.Object()", span="0-0", cluster="object.Object()", file="DefaultBinderFixture.cs"];
m3_79 [label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_call_body_deserializer_if_doesnt_match()", span="85-85", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_call_body_deserializer_if_doesnt_match()", file="DefaultBinderFixture.cs"];
m3_85 [label="A.CallTo(() => deserializer.Deserialize(null, null, null)).WithAnyArguments()\r\n                .MustNotHaveHappened()", span="98-99", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_call_body_deserializer_if_doesnt_match()", color=green, community=0, file="DefaultBinderFixture.cs"];
m3_80 [label="var deserializer = A.Fake<IBodyDeserializer>()", span="88-88", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_call_body_deserializer_if_doesnt_match()", file="DefaultBinderFixture.cs"];
m3_84 [label="binder.Bind(context, this.GetType())", span="95-95", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_call_body_deserializer_if_doesnt_match()", file="DefaultBinderFixture.cs"];
m3_82 [label="var binder = this.GetBinder(bodyDeserializers: new[] { deserializer })", span="90-90", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_call_body_deserializer_if_doesnt_match()", file="DefaultBinderFixture.cs"];
m3_81 [label="A.CallTo(() => deserializer.CanDeserialize(null)).WithAnyArguments().Returns(false)", span="89-89", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_call_body_deserializer_if_doesnt_match()", file="DefaultBinderFixture.cs"];
m3_83 [label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="92-92", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_call_body_deserializer_if_doesnt_match()", file="DefaultBinderFixture.cs"];
m3_86 [label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_call_body_deserializer_if_doesnt_match()", span="85-85", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_call_body_deserializer_if_doesnt_match()", file="DefaultBinderFixture.cs"];
m3_7 [label="Exit Nancy.StaticContentStartup.Initialize(Nancy.Bootstrapper.IPipelines)", span="49-49", cluster="Nancy.StaticContentStartup.Initialize(Nancy.Bootstrapper.IPipelines)", file="DefaultBinderFixture.cs"];
m3_122 [label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_see_if_a_type_converter_is_available_for_each_property_on_the_model_where_incoming_value_exists()", span="139-139", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_see_if_a_type_converter_is_available_for_each_property_on_the_model_where_incoming_value_exists()", file="DefaultBinderFixture.cs"];
m3_125 [label="var binder = this.GetBinder(typeConverters: new[] { typeConverter })", span="144-144", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_see_if_a_type_converter_is_available_for_each_property_on_the_model_where_incoming_value_exists()", file="DefaultBinderFixture.cs"];
m3_123 [label="var typeConverter = A.Fake<ITypeConverter>()", span="142-142", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_see_if_a_type_converter_is_available_for_each_property_on_the_model_where_incoming_value_exists()", file="DefaultBinderFixture.cs"];
m3_124 [label="A.CallTo(() => typeConverter.CanConvertTo(null)).WithAnyArguments().Returns(false)", span="143-143", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_see_if_a_type_converter_is_available_for_each_property_on_the_model_where_incoming_value_exists()", file="DefaultBinderFixture.cs"];
m3_130 [label="A.CallTo(() => typeConverter.CanConvertTo(null)).WithAnyArguments()\r\n                .MustHaveHappened(Repeated.Exactly.Times(2))", span="153-154", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_see_if_a_type_converter_is_available_for_each_property_on_the_model_where_incoming_value_exists()", file="DefaultBinderFixture.cs"];
m3_129 [label="binder.Bind(context, typeof(TestModel))", span="150-150", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_see_if_a_type_converter_is_available_for_each_property_on_the_model_where_incoming_value_exists()", file="DefaultBinderFixture.cs"];
m3_126 [label="var context = new NancyContext { Request = new FakeRequest(''GET'', ''/'') }", span="145-145", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_see_if_a_type_converter_is_available_for_each_property_on_the_model_where_incoming_value_exists()", file="DefaultBinderFixture.cs"];
m3_128 [label="context.Request.Form[''IntProperty''] = ''12''", span="147-147", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_see_if_a_type_converter_is_available_for_each_property_on_the_model_where_incoming_value_exists()", file="DefaultBinderFixture.cs"];
m3_127 [label="context.Request.Form[''StringProperty''] = ''Test''", span="146-146", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_see_if_a_type_converter_is_available_for_each_property_on_the_model_where_incoming_value_exists()", file="DefaultBinderFixture.cs"];
m3_131 [label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_see_if_a_type_converter_is_available_for_each_property_on_the_model_where_incoming_value_exists()", span="139-139", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_see_if_a_type_converter_is_available_for_each_property_on_the_model_where_incoming_value_exists()", file="DefaultBinderFixture.cs"];
m3_132 [label="Entry Nancy.NancyContext.NancyContext()", span="14-14", cluster="Nancy.NancyContext.NancyContext()", file="DefaultBinderFixture.cs"];
m3_36 [label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_body_deserializers_is_null()", span="37-37", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_body_deserializers_is_null()", file="DefaultBinderFixture.cs"];
m3_37 [label="var result = Record.Exception(() => new DefaultBinder(new ITypeConverter[] { }, null, A.Fake<IFieldNameConverter>(), new BindingDefaults()))", span="40-40", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_body_deserializers_is_null()", file="DefaultBinderFixture.cs"];
m3_38 [label="result.ShouldBeOfType(typeof(ArgumentNullException))", span="43-43", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_body_deserializers_is_null()", file="DefaultBinderFixture.cs"];
m3_39 [label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_body_deserializers_is_null()", span="37-37", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_body_deserializers_is_null()", file="DefaultBinderFixture.cs"];
m3_162 [label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_properties_that_cannot_be_converted()", span="177-177", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_properties_that_cannot_be_converted()", file="DefaultBinderFixture.cs"];
m3_163 [label="var binder = this.GetBinder(typeConverters: new[] { new FallbackConverter() })", span="180-180", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_properties_that_cannot_be_converted()", file="DefaultBinderFixture.cs"];
m3_168 [label="var result = (TestModel)binder.Bind(context, typeof(TestModel))", span="187-187", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_properties_that_cannot_be_converted()", file="DefaultBinderFixture.cs"];
m3_164 [label="var context = new NancyContext { Request = new FakeRequest(''GET'', ''/'') }", span="181-181", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_properties_that_cannot_be_converted()", file="DefaultBinderFixture.cs"];
m3_167 [label="context.Request.Form[''DateProperty''] = ''Broken''", span="184-184", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_properties_that_cannot_be_converted()", file="DefaultBinderFixture.cs"];
m3_169 [label="result.StringProperty.ShouldEqual(''Test'')", span="190-190", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_properties_that_cannot_be_converted()", file="DefaultBinderFixture.cs"];
m3_170 [label="result.IntProperty.ShouldEqual(12)", span="191-191", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_properties_that_cannot_be_converted()", file="DefaultBinderFixture.cs"];
m3_171 [label="result.DateProperty.ShouldEqual(default(DateTime))", span="192-192", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_properties_that_cannot_be_converted()", file="DefaultBinderFixture.cs"];
m3_165 [label="context.Request.Form[''StringProperty''] = ''Test''", span="182-182", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_properties_that_cannot_be_converted()", file="DefaultBinderFixture.cs"];
m3_166 [label="context.Request.Form[''IntProperty''] = ''12''", span="183-183", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_properties_that_cannot_be_converted()", file="DefaultBinderFixture.cs"];
m3_172 [label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_properties_that_cannot_be_converted()", span="177-177", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_properties_that_cannot_be_converted()", file="DefaultBinderFixture.cs"];
m3_47 [label="Entry lambda expression", span="50-50", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_11 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="DefaultBinderFixture.cs"];
m3_16 [label="Entry lambda expression", span="19-19", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_10 [label="Entry Unk.ReturnsLazily", span="", cluster="Unk.ReturnsLazily", file="DefaultBinderFixture.cs"];
m3_12 [label="Entry lambda expression", span="18-18", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_20 [label="this.emptyDefaults.DefaultBodyDeserializers", span="22-22", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_17 [label="(string)f.Arguments[0]", span="19-19", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_21 [label="Exit lambda expression", span="22-22", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_22 [label="Entry lambda expression", span="23-23", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_13 [label="Entry Unk.Select", span="", cluster="Unk.Select", color=green, community=0, file="DefaultBinderFixture.cs"];
m3_91 [label="Entry lambda expression", span="98-98", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_92 [label="deserializer.Deserialize(null, null, null)", span="98-98", cluster="lambda expression", color=green, community=0, file="DefaultBinderFixture.cs"];
m3_93 [label="Exit lambda expression", span="98-98", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_101 [label="Entry lambda expression", span="115-115", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_102 [label="deserializer.CanDeserialize(''application/xml'')", span="115-115", cluster="lambda expression", color=green, community=0, file="DefaultBinderFixture.cs"];
m3_103 [label="Exit lambda expression", span="115-115", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_23 [label="Nancy.StaticContentStartup", span="", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_186 [label="this.passthroughNameConverter.Convert(null)", span="208-208", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_210 [label="this.emptyDefaults.DefaultBodyDeserializers", span="235-235", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_233 [label="this.emptyDefaults.DefaultTypeConverters", span="255-255", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_257 [label="this.emptyDefaults.DefaultBodyDeserializers", span="278-278", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_293 [label="this.emptyDefaults.DefaultTypeConverters", span="303-303", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_32 [label="new DefaultBinder(null, new IBodyDeserializer[] { }, A.Fake<IFieldNameConverter>(), new BindingDefaults())", span="30-30", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_41 [label="new DefaultBinder(new ITypeConverter[] { }, null, A.Fake<IFieldNameConverter>(), new BindingDefaults())", span="40-40", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_56 [label="new DefaultBinder(new ITypeConverter[] { }, new IBodyDeserializer[] { }, A.Fake<IFieldNameConverter>(), null)", span="60-60", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_89 [label="deserializer.CanDeserialize(null)", span="89-89", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_76 [label="deserializer.Deserialize(null, null, null)", span="80-80", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_120 [label="deserializer.Deserialize(null, null, null)", span="126-126", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_213 [label="deserializer.Deserialize(null, null, null)", span="244-244", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_260 [label="userDeserializer.Deserialize(null, null, null)", span="287-287", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_263 [label="defaultDeserializer.Deserialize(null, null, null)", span="289-289", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_72 [label="deserializer.CanDeserialize(null)", span="71-71", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_117 [label="deserializer.CanDeserialize(null)", span="125-125", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_207 [label="deserializer.CanDeserialize(null)", span="234-234", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_251 [label="userDeserializer.CanDeserialize(null)", span="273-273", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_254 [label="defaultDeserializer.CanDeserialize(null)", span="276-276", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_185 [label="Entry lambda expression", span="208-208", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_212 [label="Entry lambda expression", span="244-244", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_235 [label="Entry lambda expression", span="264-264", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_19 [label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0", cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="DefaultBinderFixture.cs"];
m3_24 [label="Nancy.NancyContext", span="", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_187 [label="Exit lambda expression", span="208-208", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_209 [label="Entry lambda expression", span="235-235", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_211 [label="Exit lambda expression", span="235-235", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_232 [label="Entry lambda expression", span="255-255", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_234 [label="Exit lambda expression", span="255-255", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_256 [label="Entry lambda expression", span="278-278", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_258 [label="Exit lambda expression", span="278-278", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_292 [label="Entry lambda expression", span="303-303", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_294 [label="Exit lambda expression", span="303-303", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_31 [label="Entry lambda expression", span="30-30", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_33 [label="Exit lambda expression", span="30-30", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_40 [label="Entry lambda expression", span="40-40", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_42 [label="Exit lambda expression", span="40-40", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_55 [label="Entry lambda expression", span="60-60", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_57 [label="Exit lambda expression", span="60-60", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_136 [label="typeConverter.CanConvertTo(null)", span="143-143", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_140 [label="typeConverter.CanConvertTo(null)", span="153-153", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_153 [label="typeConverter.CanConvertTo(typeof(string))", span="162-162", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_156 [label="typeConverter.Convert(null, null, null)", span="163-163", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_160 [label="typeConverter.Convert(null, null, null)", span="172-172", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_227 [label="typeConverter.CanConvertTo(typeof(string))", span="253-253", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_230 [label="typeConverter.Convert(null, null, null)", span="254-254", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_236 [label="typeConverter.Convert(null, null, null)", span="264-264", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_281 [label="userTypeConverter.CanConvertTo(typeof(string))", span="298-298", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_284 [label="userTypeConverter.Convert(null, null, null)", span="299-299", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_296 [label="userTypeConverter.Convert(null, null, null)", span="312-312", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_287 [label="defaultTypeConverter.CanConvertTo(typeof(string))", span="301-301", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_290 [label="defaultTypeConverter.Convert(null, null, null)", span="302-302", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_299 [label="defaultTypeConverter.Convert(null, null, null)", span="314-314", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_71 [label="Entry lambda expression", span="71-71", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_75 [label="Entry lambda expression", span="80-80", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_88 [label="Entry lambda expression", span="89-89", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_119 [label="Entry lambda expression", span="126-126", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_116 [label="Entry lambda expression", span="125-125", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_135 [label="Entry lambda expression", span="143-143", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_139 [label="Entry lambda expression", span="153-153", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_152 [label="Entry lambda expression", span="162-162", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_155 [label="Entry lambda expression", span="163-163", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_159 [label="Entry lambda expression", span="172-172", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_206 [label="Entry lambda expression", span="234-234", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_226 [label="Entry lambda expression", span="253-253", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_229 [label="Entry lambda expression", span="254-254", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_250 [label="Entry lambda expression", span="273-273", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_259 [label="Entry lambda expression", span="287-287", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_253 [label="Entry lambda expression", span="276-276", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_262 [label="Entry lambda expression", span="289-289", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_280 [label="Entry lambda expression", span="298-298", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_283 [label="Entry lambda expression", span="299-299", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_295 [label="Entry lambda expression", span="312-312", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_286 [label="Entry lambda expression", span="301-301", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_289 [label="Entry lambda expression", span="302-302", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_298 [label="Entry lambda expression", span="314-314", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_90 [label="Exit lambda expression", span="89-89", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_77 [label="Exit lambda expression", span="80-80", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_121 [label="Exit lambda expression", span="126-126", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_214 [label="Exit lambda expression", span="244-244", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_261 [label="Exit lambda expression", span="287-287", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_264 [label="Exit lambda expression", span="289-289", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_73 [label="Exit lambda expression", span="71-71", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_118 [label="Exit lambda expression", span="125-125", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_208 [label="Exit lambda expression", span="234-234", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_252 [label="Exit lambda expression", span="273-273", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_255 [label="Exit lambda expression", span="276-276", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_237 [label="Exit lambda expression", span="264-264", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_48 [label="new DefaultBinder(new ITypeConverter[] { }, new IBodyDeserializer[] { }, null, new BindingDefaults())", span="50-50", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_137 [label="Exit lambda expression", span="143-143", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_141 [label="Exit lambda expression", span="153-153", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_154 [label="Exit lambda expression", span="162-162", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_157 [label="Exit lambda expression", span="163-163", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_161 [label="Exit lambda expression", span="172-172", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_228 [label="Exit lambda expression", span="253-253", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_231 [label="Exit lambda expression", span="254-254", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_282 [label="Exit lambda expression", span="298-298", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_285 [label="Exit lambda expression", span="299-299", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_297 [label="Exit lambda expression", span="312-312", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_288 [label="Exit lambda expression", span="301-301", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_291 [label="Exit lambda expression", span="302-302", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_300 [label="Exit lambda expression", span="314-314", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_49 [label="Exit lambda expression", span="50-50", cluster="lambda expression", file="DefaultBinderFixture.cs"];
m3_67 [label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.CreateContextWithHeader(string, System.Collections.Generic.IEnumerable<string>)", span="328-328", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.CreateContextWithHeader(string, System.Collections.Generic.IEnumerable<string>)", file="DefaultBinderFixture.cs"];
m3_308 [label="return new NancyContext()\r\n            {\r\n                Request = new FakeRequest(''GET'', ''/'', header)\r\n            };", span="335-338", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.CreateContextWithHeader(string, System.Collections.Generic.IEnumerable<string>)", file="DefaultBinderFixture.cs"];
m3_307 [label="var header = new Dictionary<string, IEnumerable<string>>\r\n            {\r\n                { name, values }\r\n            }", span="330-333", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.CreateContextWithHeader(string, System.Collections.Generic.IEnumerable<string>)", file="DefaultBinderFixture.cs"];
m3_309 [label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.CreateContextWithHeader(string, System.Collections.Generic.IEnumerable<string>)", span="328-328", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.CreateContextWithHeader(string, System.Collections.Generic.IEnumerable<string>)", file="DefaultBinderFixture.cs"];
m3_74 [label="Entry Unk.CanDeserialize", span="", cluster="Unk.CanDeserialize", file="DefaultBinderFixture.cs"];
m3_14 [label="Entry Unk.FirstOrDefault", span="", cluster="Unk.FirstOrDefault", file="DefaultBinderFixture.cs"];
m3_58 [label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_body_deserializer_if_one_matches()", span="67-67", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_body_deserializer_if_one_matches()", file="DefaultBinderFixture.cs"];
m3_61 [label="var binder = this.GetBinder(bodyDeserializers: new[] { deserializer })", span="72-72", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_body_deserializer_if_one_matches()", file="DefaultBinderFixture.cs"];
m3_63 [label="binder.Bind(context, this.GetType())", span="77-77", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_body_deserializer_if_one_matches()", file="DefaultBinderFixture.cs"];
m3_59 [label="var deserializer = A.Fake<IBodyDeserializer>()", span="70-70", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_body_deserializer_if_one_matches()", file="DefaultBinderFixture.cs"];
m3_60 [label="A.CallTo(() => deserializer.CanDeserialize(null)).WithAnyArguments().Returns(true)", span="71-71", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_body_deserializer_if_one_matches()", file="DefaultBinderFixture.cs"];
m3_64 [label="A.CallTo(() => deserializer.Deserialize(null, null, null)).WithAnyArguments()\r\n                .MustHaveHappened(Repeated.Exactly.Once)", span="80-81", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_body_deserializer_if_one_matches()", file="DefaultBinderFixture.cs"];
m3_62 [label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="74-74", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_body_deserializer_if_one_matches()", file="DefaultBinderFixture.cs"];
m3_65 [label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_body_deserializer_if_one_matches()", span="67-67", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_body_deserializer_if_one_matches()", file="DefaultBinderFixture.cs"];
m3_173 [label="Entry Nancy.ModelBinding.DefaultConverters.FallbackConverter.FallbackConverter()", span="9-9", cluster="Nancy.ModelBinding.DefaultConverters.FallbackConverter.FallbackConverter()", file="DefaultBinderFixture.cs"];
m3_138 [label="Entry Unk.CanConvertTo", span="", cluster="Unk.CanConvertTo", file="DefaultBinderFixture.cs"];
m3_29 [label="Entry Unk.Exception", span="", cluster="Unk.Exception", file="DefaultBinderFixture.cs"];
m3_35 [label="Entry Nancy.ModelBinding.BindingDefaults.BindingDefaults()", span="20-20", cluster="Nancy.ModelBinding.BindingDefaults.BindingDefaults()", file="DefaultBinderFixture.cs"];
m3_50 [label="Entry Nancy.ModelBinding.DefaultBinder.DefaultBinder(System.Collections.Generic.IEnumerable<Nancy.ModelBinding.ITypeConverter>, System.Collections.Generic.IEnumerable<Nancy.ModelBinding.IBodyDeserializer>, Nancy.ModelBinding.IFieldNameConverter, Nancy.ModelBinding.BindingDefaults)", span="21-21", cluster="Nancy.ModelBinding.DefaultBinder.DefaultBinder(System.Collections.Generic.IEnumerable<Nancy.ModelBinding.ITypeConverter>, System.Collections.Generic.IEnumerable<Nancy.ModelBinding.IBodyDeserializer>, Nancy.ModelBinding.IFieldNameConverter, Nancy.ModelBinding.BindingDefaults)", file="DefaultBinderFixture.cs"];
m3_265 [label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", span="294-294", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs"];
m3_272 [label="A.CallTo(() => this.emptyDefaults.DefaultTypeConverters).Returns(new[] { defaultTypeConverter })", span="303-303", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs"];
m3_273 [label="var binder = this.GetBinder(new[] { userTypeConverter })", span="304-304", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs"];
m3_266 [label="var userTypeConverter = A.Fake<ITypeConverter>()", span="297-297", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs"];
m3_269 [label="var defaultTypeConverter = A.Fake<ITypeConverter>()", span="300-300", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs"];
m3_267 [label="A.CallTo(() => userTypeConverter.CanConvertTo(typeof(string))).WithAnyArguments().Returns(true)", span="298-298", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs"];
m3_268 [label="A.CallTo(() => userTypeConverter.Convert(null, null, null)).WithAnyArguments().Returns(null)", span="299-299", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs"];
m3_277 [label="A.CallTo(() => userTypeConverter.Convert(null, null, null)).WithAnyArguments()\r\n                .MustHaveHappened(Repeated.Exactly.Once)", span="312-313", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs"];
m3_270 [label="A.CallTo(() => defaultTypeConverter.CanConvertTo(typeof(string))).WithAnyArguments().Returns(true)", span="301-301", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs"];
m3_271 [label="A.CallTo(() => defaultTypeConverter.Convert(null, null, null)).WithAnyArguments().Returns(null)", span="302-302", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs"];
m3_278 [label="A.CallTo(() => defaultTypeConverter.Convert(null, null, null)).WithAnyArguments()\r\n                .MustNotHaveHappened()", span="314-315", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs"];
m3_276 [label="binder.Bind(context, typeof(TestModel))", span="309-309", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs"];
m3_274 [label="var context = new NancyContext { Request = new FakeRequest(''GET'', ''/'') }", span="305-305", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs"];
m3_275 [label="context.Request.Form[''StringProperty''] = ''Test''", span="306-306", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs"];
m3_279 [label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", span="294-294", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs"];
m3_215 [label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_type_converter_if_one_found()", span="249-249", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_type_converter_if_one_found()", file="DefaultBinderFixture.cs"];
m3_223 [label="binder.Bind(context, typeof(TestModel))", span="261-261", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_type_converter_if_one_found()", color=green, community=0, file="DefaultBinderFixture.cs"];
m3_220 [label="var binder = this.GetBinder()", span="256-256", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_type_converter_if_one_found()", file="DefaultBinderFixture.cs"];
m3_221 [label="var context = new NancyContext { Request = new FakeRequest(''GET'', ''/'') }", span="257-257", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_type_converter_if_one_found()", file="DefaultBinderFixture.cs"];
m3_222 [label="context.Request.Form[''StringProperty''] = ''Test''", span="258-258", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_type_converter_if_one_found()", file="DefaultBinderFixture.cs"];
m3_224 [label="A.CallTo(() => typeConverter.Convert(null, null, null)).WithAnyArguments()\r\n                .MustHaveHappened(Repeated.Exactly.Once)", span="264-265", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_type_converter_if_one_found()", file="DefaultBinderFixture.cs"];
m3_219 [label="A.CallTo(() => this.emptyDefaults.DefaultTypeConverters).Returns(new[] { typeConverter })", span="255-255", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_type_converter_if_one_found()", file="DefaultBinderFixture.cs"];
m3_216 [label="var typeConverter = A.Fake<ITypeConverter>()", span="252-252", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_type_converter_if_one_found()", file="DefaultBinderFixture.cs"];
m3_217 [label="A.CallTo(() => typeConverter.CanConvertTo(typeof(string))).WithAnyArguments().Returns(true)", span="253-253", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_type_converter_if_one_found()", file="DefaultBinderFixture.cs"];
m3_218 [label="A.CallTo(() => typeConverter.Convert(null, null, null)).WithAnyArguments().Returns(null)", span="254-254", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_type_converter_if_one_found()", file="DefaultBinderFixture.cs"];
m3_225 [label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_type_converter_if_one_found()", span="249-249", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_type_converter_if_one_found()", file="DefaultBinderFixture.cs"];
m3_176 [label="Entry System.DateTime.ShouldEqual(System.DateTime)", span="85-85", cluster="System.DateTime.ShouldEqual(System.DateTime)", file="DefaultBinderFixture.cs"];
m3_104 [label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_return_object_from_deserializer_if_one_returned()", span="120-120", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_return_object_from_deserializer_if_one_returned()", file="DefaultBinderFixture.cs"];
m3_109 [label="var binder = this.GetBinder(bodyDeserializers: new[] { deserializer })", span="127-127", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_return_object_from_deserializer_if_one_returned()", file="DefaultBinderFixture.cs"];
m3_111 [label="var result = binder.Bind(context, this.GetType())", span="132-132", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_return_object_from_deserializer_if_one_returned()", file="DefaultBinderFixture.cs"];
m3_106 [label="var deserializer = A.Fake<IBodyDeserializer>()", span="124-124", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_return_object_from_deserializer_if_one_returned()", file="DefaultBinderFixture.cs"];
m3_108 [label="A.CallTo(() => deserializer.Deserialize(null, null, null)).WithAnyArguments().Returns(modelObject)", span="126-126", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_return_object_from_deserializer_if_one_returned()", file="DefaultBinderFixture.cs"];
m3_107 [label="A.CallTo(() => deserializer.CanDeserialize(null)).WithAnyArguments().Returns(true)", span="125-125", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_return_object_from_deserializer_if_one_returned()", file="DefaultBinderFixture.cs"];
m3_110 [label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="129-129", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_return_object_from_deserializer_if_one_returned()", file="DefaultBinderFixture.cs"];
m3_112 [label="result.ShouldBeSameAs(modelObject)", span="135-135", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_return_object_from_deserializer_if_one_returned()", file="DefaultBinderFixture.cs"];
m3_105 [label="var modelObject = new object()", span="123-123", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_return_object_from_deserializer_if_one_returned()", file="DefaultBinderFixture.cs"];
m3_113 [label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_return_object_from_deserializer_if_one_returned()", span="120-120", cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_return_object_from_deserializer_if_one_returned()", file="DefaultBinderFixture.cs"];
m3_312 [label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", span="", file="DefaultBinderFixture.cs"];
m3_314 [label=deserializer, span="", file="DefaultBinderFixture.cs"];
m3_315 [label=deserializer, span="", file="DefaultBinderFixture.cs"];
m3_313 [label=deserializer, span="", file="DefaultBinderFixture.cs"];
m3_316 [label=deserializer, span="", file="DefaultBinderFixture.cs"];
m3_319 [label=deserializer, span="", file="DefaultBinderFixture.cs"];
m3_321 [label=userDeserializer, span="", file="DefaultBinderFixture.cs"];
m3_322 [label=defaultDeserializer, span="", file="DefaultBinderFixture.cs"];
m3_317 [label=typeConverter, span="", file="DefaultBinderFixture.cs"];
m3_318 [label=typeConverter, span="", file="DefaultBinderFixture.cs"];
m3_320 [label=typeConverter, span="", file="DefaultBinderFixture.cs"];
m3_323 [label=userTypeConverter, span="", file="DefaultBinderFixture.cs"];
m3_324 [label=defaultTypeConverter, span="", file="DefaultBinderFixture.cs"];
m4_9 [label="Entry System.Text.RegularExpressions.Regex.Match(string)", span="0-0", cluster="System.Text.RegularExpressions.Regex.Match(string)", file="DefaultRoutePatternMatcher.cs"];
m4_6 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.GetOrAdd(TKey, System.Func<TKey, TValue>)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.GetOrAdd(TKey, System.Func<TKey, TValue>)", file="DefaultRoutePatternMatcher.cs"];
m4_51 [label="Entry string.Format(System.IFormatProvider, string, object)", span="0-0", cluster="string.Format(System.IFormatProvider, string, object)", file="DefaultRoutePatternMatcher.cs"];
m4_49 [label="Entry string.IsParameterized()", span="44-44", cluster="string.IsParameterized()", file="DefaultRoutePatternMatcher.cs"];
m4_15 [label="Entry Nancy.Routing.DefaultRoutePatternMatcher.BuildRegexMatcher(string)", span="39-39", cluster="Nancy.Routing.DefaultRoutePatternMatcher.BuildRegexMatcher(string)", file="DefaultRoutePatternMatcher.cs"];
m4_22 [label="var segments =\r\n                path.Split(new[] { ''/'' }, StringSplitOptions.RemoveEmptyEntries)", span="41-42", cluster="Nancy.Routing.DefaultRoutePatternMatcher.BuildRegexMatcher(string)", file="DefaultRoutePatternMatcher.cs"];
m4_23 [label="var parameterizedSegments =\r\n                GetParameterizedSegments(segments)", span="44-45", cluster="Nancy.Routing.DefaultRoutePatternMatcher.BuildRegexMatcher(string)", file="DefaultRoutePatternMatcher.cs"];
m4_24 [label="var pattern =\r\n                string.Concat(@''^/'', string.Join(''/'', parameterizedSegments), @''$'')", span="47-48", cluster="Nancy.Routing.DefaultRoutePatternMatcher.BuildRegexMatcher(string)", file="DefaultRoutePatternMatcher.cs"];
m4_25 [label="return new Regex(pattern, RegexOptions.Compiled | RegexOptions.IgnoreCase);", span="50-50", cluster="Nancy.Routing.DefaultRoutePatternMatcher.BuildRegexMatcher(string)", file="DefaultRoutePatternMatcher.cs"];
m4_26 [label="Exit Nancy.Routing.DefaultRoutePatternMatcher.BuildRegexMatcher(string)", span="39-39", cluster="Nancy.Routing.DefaultRoutePatternMatcher.BuildRegexMatcher(string)", file="DefaultRoutePatternMatcher.cs"];
m4_11 [label="Entry Nancy.Routing.DefaultRoutePatternMatcher.GetParameters(System.Text.RegularExpressions.Regex, System.Text.RegularExpressions.GroupCollection)", span="53-53", cluster="Nancy.Routing.DefaultRoutePatternMatcher.GetParameters(System.Text.RegularExpressions.Regex, System.Text.RegularExpressions.GroupCollection)", file="DefaultRoutePatternMatcher.cs"];
m4_32 [label="dynamic data = new DynamicDictionary()", span="55-55", cluster="Nancy.Routing.DefaultRoutePatternMatcher.GetParameters(System.Text.RegularExpressions.Regex, System.Text.RegularExpressions.GroupCollection)", file="DefaultRoutePatternMatcher.cs"];
m4_34 [label="i <= groups.Count", span="57-57", cluster="Nancy.Routing.DefaultRoutePatternMatcher.GetParameters(System.Text.RegularExpressions.Regex, System.Text.RegularExpressions.GroupCollection)", file="DefaultRoutePatternMatcher.cs"];
m4_35 [label="data[regex.GroupNameFromNumber(i)] = Uri.UnescapeDataString(groups[i].Value)", span="59-59", cluster="Nancy.Routing.DefaultRoutePatternMatcher.GetParameters(System.Text.RegularExpressions.Regex, System.Text.RegularExpressions.GroupCollection)", file="DefaultRoutePatternMatcher.cs"];
m4_33 [label="int i = 1", span="57-57", cluster="Nancy.Routing.DefaultRoutePatternMatcher.GetParameters(System.Text.RegularExpressions.Regex, System.Text.RegularExpressions.GroupCollection)", file="DefaultRoutePatternMatcher.cs"];
m4_37 [label="return data;", span="62-62", cluster="Nancy.Routing.DefaultRoutePatternMatcher.GetParameters(System.Text.RegularExpressions.Regex, System.Text.RegularExpressions.GroupCollection)", file="DefaultRoutePatternMatcher.cs"];
m4_36 [label="i++", span="57-57", cluster="Nancy.Routing.DefaultRoutePatternMatcher.GetParameters(System.Text.RegularExpressions.Regex, System.Text.RegularExpressions.GroupCollection)", file="DefaultRoutePatternMatcher.cs"];
m4_38 [label="Exit Nancy.Routing.DefaultRoutePatternMatcher.GetParameters(System.Text.RegularExpressions.Regex, System.Text.RegularExpressions.GroupCollection)", span="53-53", cluster="Nancy.Routing.DefaultRoutePatternMatcher.GetParameters(System.Text.RegularExpressions.Regex, System.Text.RegularExpressions.GroupCollection)", file="DefaultRoutePatternMatcher.cs"];
m4_8 [label="Entry Nancy.Helpers.HttpUtility.UrlDecode(string)", span="103-103", cluster="Nancy.Helpers.HttpUtility.UrlDecode(string)", file="DefaultRoutePatternMatcher.cs"];
m4_20 [label="Entry string.Equals(string)", span="0-0", cluster="string.Equals(string)", file="DefaultRoutePatternMatcher.cs"];
m4_41 [label="Entry System.Uri.UnescapeDataString(string)", span="0-0", cluster="System.Uri.UnescapeDataString(string)", file="DefaultRoutePatternMatcher.cs"];
m4_52 [label="Entry string.Replace(string, string)", span="0-0", cluster="string.Replace(string, string)", file="DefaultRoutePatternMatcher.cs"];
m4_27 [label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0", cluster="string.Split(string[], System.StringSplitOptions)", file="DefaultRoutePatternMatcher.cs"];
m4_21 [label="Entry string.TrimEnd(params char[])", span="0-0", cluster="string.TrimEnd(params char[])", file="DefaultRoutePatternMatcher.cs"];
m4_29 [label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0", cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="DefaultRoutePatternMatcher.cs"];
m4_50 [label="Entry string.GetParameterName()", span="24-24", cluster="string.GetParameterName()", file="DefaultRoutePatternMatcher.cs"];
m4_40 [label="Entry System.Text.RegularExpressions.Regex.GroupNameFromNumber(int)", span="0-0", cluster="System.Text.RegularExpressions.Regex.GroupNameFromNumber(int)", file="DefaultRoutePatternMatcher.cs"];
m4_10 [label="Entry Nancy.Routing.RoutePatternMatchResult.RoutePatternMatchResult(bool, Nancy.DynamicDictionary)", span="12-12", cluster="Nancy.Routing.RoutePatternMatchResult.RoutePatternMatchResult(bool, Nancy.DynamicDictionary)", file="DefaultRoutePatternMatcher.cs"];
m4_12 [label="Entry lambda expression", span="19-19", cluster="lambda expression", file="DefaultRoutePatternMatcher.cs"];
m4_13 [label="BuildRegexMatcher(routePath)", span="19-19", cluster="lambda expression", file="DefaultRoutePatternMatcher.cs"];
m4_14 [label="Exit lambda expression", span="19-19", cluster="lambda expression", file="DefaultRoutePatternMatcher.cs"];
m4_31 [label="Entry System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", span="0-0", cluster="System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", file="DefaultRoutePatternMatcher.cs"];
m4_30 [label="Entry string.Concat(string, string, string)", span="0-0", cluster="string.Concat(string, string, string)", file="DefaultRoutePatternMatcher.cs"];
m4_0 [label="Entry Nancy.Routing.DefaultRoutePatternMatcher.Match(string, string)", span="17-17", cluster="Nancy.Routing.DefaultRoutePatternMatcher.Match(string, string)", file="DefaultRoutePatternMatcher.cs"];
m4_1 [label="var routePathPattern = this.matcherCache.GetOrAdd(routePath, (s) => BuildRegexMatcher(routePath))", span="19-19", cluster="Nancy.Routing.DefaultRoutePatternMatcher.Match(string, string)", file="DefaultRoutePatternMatcher.cs"];
m4_2 [label="requestedPath = TrimTrailingSlashFromRequestedPath(requestedPath)", span="21-21", cluster="Nancy.Routing.DefaultRoutePatternMatcher.Match(string, string)", file="DefaultRoutePatternMatcher.cs"];
m4_3 [label="var match = routePathPattern.Match(HttpUtility.UrlDecode(requestedPath))", span="22-22", cluster="Nancy.Routing.DefaultRoutePatternMatcher.Match(string, string)", color=red, community=0, file="DefaultRoutePatternMatcher.cs"];
m4_4 [label="return new RoutePatternMatchResult(\r\n                match.Success,\r\n                GetParameters(routePathPattern, match.Groups));", span="24-26", cluster="Nancy.Routing.DefaultRoutePatternMatcher.Match(string, string)", file="DefaultRoutePatternMatcher.cs"];
m4_5 [label="Exit Nancy.Routing.DefaultRoutePatternMatcher.Match(string, string)", span="17-17", cluster="Nancy.Routing.DefaultRoutePatternMatcher.Match(string, string)", file="DefaultRoutePatternMatcher.cs"];
m4_39 [label="Entry Nancy.DynamicDictionary.DynamicDictionary()", span="6-6", cluster="Nancy.DynamicDictionary.DynamicDictionary()", file="DefaultRoutePatternMatcher.cs"];
m4_7 [label="Entry Nancy.Routing.DefaultRoutePatternMatcher.TrimTrailingSlashFromRequestedPath(string)", span="29-29", cluster="Nancy.Routing.DefaultRoutePatternMatcher.TrimTrailingSlashFromRequestedPath(string)", file="DefaultRoutePatternMatcher.cs"];
m4_16 [label="!requestedPath.Equals(''/'')", span="31-31", cluster="Nancy.Routing.DefaultRoutePatternMatcher.TrimTrailingSlashFromRequestedPath(string)", file="DefaultRoutePatternMatcher.cs"];
m4_17 [label="requestedPath = requestedPath.TrimEnd('/')", span="33-33", cluster="Nancy.Routing.DefaultRoutePatternMatcher.TrimTrailingSlashFromRequestedPath(string)", file="DefaultRoutePatternMatcher.cs"];
m4_18 [label="return requestedPath;", span="36-36", cluster="Nancy.Routing.DefaultRoutePatternMatcher.TrimTrailingSlashFromRequestedPath(string)", file="DefaultRoutePatternMatcher.cs"];
m4_19 [label="Exit Nancy.Routing.DefaultRoutePatternMatcher.TrimTrailingSlashFromRequestedPath(string)", span="29-29", cluster="Nancy.Routing.DefaultRoutePatternMatcher.TrimTrailingSlashFromRequestedPath(string)", file="DefaultRoutePatternMatcher.cs"];
m4_28 [label="Entry Nancy.Routing.DefaultRoutePatternMatcher.GetParameterizedSegments(System.Collections.Generic.IEnumerable<string>)", span="65-65", cluster="Nancy.Routing.DefaultRoutePatternMatcher.GetParameterizedSegments(System.Collections.Generic.IEnumerable<string>)", file="DefaultRoutePatternMatcher.cs"];
m4_42 [label=segments, span="67-67", cluster="Nancy.Routing.DefaultRoutePatternMatcher.GetParameterizedSegments(System.Collections.Generic.IEnumerable<string>)", file="DefaultRoutePatternMatcher.cs"];
m4_47 [label="yield return current;", span="78-78", cluster="Nancy.Routing.DefaultRoutePatternMatcher.GetParameterizedSegments(System.Collections.Generic.IEnumerable<string>)", file="DefaultRoutePatternMatcher.cs"];
m4_43 [label="var current = segment", span="69-69", cluster="Nancy.Routing.DefaultRoutePatternMatcher.GetParameterizedSegments(System.Collections.Generic.IEnumerable<string>)", file="DefaultRoutePatternMatcher.cs", color=green, community=0];
m4_45 [label="var replacement =\r\n                        string.Format(CultureInfo.InvariantCulture, @''(?<{0}>(.+?))'', segment.GetParameterName())", span="72-73", cluster="Nancy.Routing.DefaultRoutePatternMatcher.GetParameterizedSegments(System.Collections.Generic.IEnumerable<string>)", color=red, community=0, file="DefaultRoutePatternMatcher.cs"];
m4_46 [label="current = segment.Replace(segment, replacement)", span="75-75", cluster="Nancy.Routing.DefaultRoutePatternMatcher.GetParameterizedSegments(System.Collections.Generic.IEnumerable<string>)", file="DefaultRoutePatternMatcher.cs"];
m4_44 [label="current.IsParameterized()", span="70-70", cluster="Nancy.Routing.DefaultRoutePatternMatcher.GetParameterizedSegments(System.Collections.Generic.IEnumerable<string>)", file="DefaultRoutePatternMatcher.cs"];
m4_48 [label="Exit Nancy.Routing.DefaultRoutePatternMatcher.GetParameterizedSegments(System.Collections.Generic.IEnumerable<string>)", span="65-65", cluster="Nancy.Routing.DefaultRoutePatternMatcher.GetParameterizedSegments(System.Collections.Generic.IEnumerable<string>)", file="DefaultRoutePatternMatcher.cs"];
m4_53 [label="Nancy.Routing.DefaultRoutePatternMatcher", span="", file="DefaultRoutePatternMatcher.cs"];
m4_54 [label=string, span="", file="DefaultRoutePatternMatcher.cs"];
m5_18 [label="Entry Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_return_match_result_when_paths_matched()", span="47-47", cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_return_match_result_when_paths_matched()", file="DefaultRoutePatternMatcherFixture.cs"];
m5_19 [label="var results = this.matcher.Match(''/foo/bar'', ''/foo/bar'')", span="50-50", cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_return_match_result_when_paths_matched()", file="DefaultRoutePatternMatcherFixture.cs"];
m5_20 [label="results.IsMatch.ShouldBeTrue()", span="53-53", cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_return_match_result_when_paths_matched()", file="DefaultRoutePatternMatcherFixture.cs"];
m5_21 [label="Exit Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_return_match_result_when_paths_matched()", span="47-47", cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_return_match_result_when_paths_matched()", file="DefaultRoutePatternMatcherFixture.cs"];
m5_14 [label="Entry Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_ignore_trailing_slash_on_request_uri()", span="37-37", cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_ignore_trailing_slash_on_request_uri()", file="DefaultRoutePatternMatcherFixture.cs"];
m5_15 [label="var results = this.matcher.Match(''/foo/bar/'', ''/foo/bar'')", span="40-40", cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_ignore_trailing_slash_on_request_uri()", file="DefaultRoutePatternMatcherFixture.cs"];
m5_16 [label="results.IsMatch.ShouldBeTrue()", span="43-43", cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_ignore_trailing_slash_on_request_uri()", file="DefaultRoutePatternMatcherFixture.cs"];
m5_17 [label="Exit Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_ignore_trailing_slash_on_request_uri()", span="37-37", cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_ignore_trailing_slash_on_request_uri()", file="DefaultRoutePatternMatcherFixture.cs"];
m5_9 [label="Entry bool.ShouldBeTrue()", span="70-70", cluster="bool.ShouldBeTrue()", file="DefaultRoutePatternMatcherFixture.cs"];
m5_36 [label="Entry object.ShouldEqual(object)", span="80-80", cluster="object.ShouldEqual(object)", file="DefaultRoutePatternMatcherFixture.cs"];
m5_27 [label="Entry Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_be_case_insensitive_when_checking_for_match()", span="67-67", cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_be_case_insensitive_when_checking_for_match()", file="DefaultRoutePatternMatcherFixture.cs"];
m5_28 [label="var results = this.matcher.Match(''/FoO/baR'', ''/fOO/bAr'')", span="70-70", cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_be_case_insensitive_when_checking_for_match()", file="DefaultRoutePatternMatcherFixture.cs"];
m5_29 [label="results.IsMatch.ShouldBeTrue()", span="73-73", cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_be_case_insensitive_when_checking_for_match()", file="DefaultRoutePatternMatcherFixture.cs"];
m5_30 [label="Exit Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_be_case_insensitive_when_checking_for_match()", span="67-67", cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_be_case_insensitive_when_checking_for_match()", file="DefaultRoutePatternMatcherFixture.cs"];
m5_37 [label="Entry Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_treat_parameters_as_greedy()", span="88-88", cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_treat_parameters_as_greedy()", file="DefaultRoutePatternMatcherFixture.cs"];
m5_38 [label="var results = this.matcher.Match(''/foo/bar/baz'', ''/foo/{bar}'')", span="91-91", cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_treat_parameters_as_greedy()", file="DefaultRoutePatternMatcherFixture.cs"];
m5_39 [label="((string)results.Parameters[''bar'']).ShouldEqual(''bar/baz'')", span="94-94", cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_treat_parameters_as_greedy()", file="DefaultRoutePatternMatcherFixture.cs"];
m5_40 [label="Exit Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_treat_parameters_as_greedy()", span="88-88", cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_treat_parameters_as_greedy()", file="DefaultRoutePatternMatcherFixture.cs"];
m5_47 [label="Entry Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_allow_regex_in_route_definition_and_return_negative_result_when_it_does_not_match()", span="110-110", cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_allow_regex_in_route_definition_and_return_negative_result_when_it_does_not_match()", file="DefaultRoutePatternMatcherFixture.cs"];
m5_48 [label="var results = this.matcher.Match(''/foo/bar'', @''/foo/(?<bar>[0-9]*)'')", span="113-113", cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_allow_regex_in_route_definition_and_return_negative_result_when_it_does_not_match()", file="DefaultRoutePatternMatcherFixture.cs"];
m5_49 [label="results.IsMatch.ShouldBeFalse()", span="116-116", cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_allow_regex_in_route_definition_and_return_negative_result_when_it_does_not_match()", file="DefaultRoutePatternMatcherFixture.cs"];
m5_50 [label="Exit Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_allow_regex_in_route_definition_and_return_negative_result_when_it_does_not_match()", span="110-110", cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_allow_regex_in_route_definition_and_return_negative_result_when_it_does_not_match()", file="DefaultRoutePatternMatcherFixture.cs"];
m5_58 [label="Entry Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_allow_all_of_the_unreserved_rfc_1738_characters_in_the_uri()", span="134-134", cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_allow_all_of_the_unreserved_rfc_1738_characters_in_the_uri()", file="DefaultRoutePatternMatcherFixture.cs"];
m5_59 [label="string parameter = ''0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_.!*'()''", span="137-137", cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_allow_all_of_the_unreserved_rfc_1738_characters_in_the_uri()", color=red, community=0, file="DefaultRoutePatternMatcherFixture.cs"];
m5_60 [label="var results = this.matcher.Match(''/foo/'' + parameter, ''/foo/{bar}'')", span="140-140", cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_allow_all_of_the_unreserved_rfc_1738_characters_in_the_uri()", file="DefaultRoutePatternMatcherFixture.cs"];
m5_61 [label="((string)results.Parameters[''bar'']).ShouldEqual(parameter)", span="143-143", cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_allow_all_of_the_unreserved_rfc_1738_characters_in_the_uri()", file="DefaultRoutePatternMatcherFixture.cs"];
m5_62 [label="Exit Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_allow_all_of_the_unreserved_rfc_1738_characters_in_the_uri()", span="134-134", cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_allow_all_of_the_unreserved_rfc_1738_characters_in_the_uri()", file="DefaultRoutePatternMatcherFixture.cs"];
m5_0 [label="Entry Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.DefaultRoutePatternMatcherFixture()", span="11-11", cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.DefaultRoutePatternMatcherFixture()", file="DefaultRoutePatternMatcherFixture.cs"];
m5_1 [label="this.matcher = new DefaultRoutePatternMatcher()", span="13-13", cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.DefaultRoutePatternMatcherFixture()", file="DefaultRoutePatternMatcherFixture.cs"];
m5_2 [label="Exit Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.DefaultRoutePatternMatcherFixture()", span="11-11", cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.DefaultRoutePatternMatcherFixture()", file="DefaultRoutePatternMatcherFixture.cs"];
m5_8 [label="Entry Nancy.Routing.DefaultRoutePatternMatcher.Match(string, string)", span="17-17", cluster="Nancy.Routing.DefaultRoutePatternMatcher.Match(string, string)", file="DefaultRoutePatternMatcherFixture.cs"];
m5_26 [label="Entry bool.ShouldBeFalse()", span="75-75", cluster="bool.ShouldBeFalse()", file="DefaultRoutePatternMatcherFixture.cs"];
m5_51 [label="Entry Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_properly_handle_uri_escaped_route_parameters_that_were_matched()", span="120-120", cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_properly_handle_uri_escaped_route_parameters_that_were_matched()", file="DefaultRoutePatternMatcherFixture.cs"];
m5_52 [label="string parameter = ''baa ram ewe{}''", span="123-123", cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_properly_handle_uri_escaped_route_parameters_that_were_matched()", color=red, community=0, file="DefaultRoutePatternMatcherFixture.cs"];
m5_53 [label="var escapedParameter = Uri.EscapeUriString(parameter)", span="124-124", cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_properly_handle_uri_escaped_route_parameters_that_were_matched()", file="DefaultRoutePatternMatcherFixture.cs"];
m5_55 [label="((string)results.Parameters[''bar'']).ShouldEqual(parameter)", span="130-130", cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_properly_handle_uri_escaped_route_parameters_that_were_matched()", file="DefaultRoutePatternMatcherFixture.cs"];
m5_54 [label="var results = this.matcher.Match(''/foo/'' + escapedParameter, ''/foo/{bar}'')", span="127-127", cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_properly_handle_uri_escaped_route_parameters_that_were_matched()", file="DefaultRoutePatternMatcherFixture.cs"];
m5_56 [label="Exit Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_properly_handle_uri_escaped_route_parameters_that_were_matched()", span="120-120", cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_properly_handle_uri_escaped_route_parameters_that_were_matched()", file="DefaultRoutePatternMatcherFixture.cs"];
m5_57 [label="Entry System.Uri.EscapeUriString(string)", span="0-0", cluster="System.Uri.EscapeUriString(string)", file="DefaultRoutePatternMatcherFixture.cs"];
m5_10 [label="Entry Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_ignore_trailing_slash_on_route_path()", span="27-27", cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_ignore_trailing_slash_on_route_path()", file="DefaultRoutePatternMatcherFixture.cs"];
m5_11 [label="var results = this.matcher.Match(''/foo/bar'', ''/foo/bar/'')", span="30-30", cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_ignore_trailing_slash_on_route_path()", file="DefaultRoutePatternMatcherFixture.cs"];
m5_12 [label="results.IsMatch.ShouldBeTrue()", span="33-33", cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_ignore_trailing_slash_on_route_path()", file="DefaultRoutePatternMatcherFixture.cs"];
m5_13 [label="Exit Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_ignore_trailing_slash_on_route_path()", span="27-27", cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_ignore_trailing_slash_on_route_path()", file="DefaultRoutePatternMatcherFixture.cs"];
m5_31 [label="Entry Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_capture_parameters()", span="77-77", cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_capture_parameters()", file="DefaultRoutePatternMatcherFixture.cs"];
m5_32 [label="var results = this.matcher.Match(''/foo/bar/baz'', ''/foo/{bar}/{baz}'')", span="80-80", cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_capture_parameters()", file="DefaultRoutePatternMatcherFixture.cs"];
m5_33 [label="((string)results.Parameters[''bar'']).ShouldEqual(''bar'')", span="83-83", cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_capture_parameters()", file="DefaultRoutePatternMatcherFixture.cs"];
m5_34 [label="((string)results.Parameters[''baz'']).ShouldEqual(''baz'')", span="84-84", cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_capture_parameters()", file="DefaultRoutePatternMatcherFixture.cs"];
m5_35 [label="Exit Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_capture_parameters()", span="77-77", cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_capture_parameters()", file="DefaultRoutePatternMatcherFixture.cs"];
m5_3 [label="Entry Nancy.Routing.DefaultRoutePatternMatcher.DefaultRoutePatternMatcher()", span="13-13", cluster="Nancy.Routing.DefaultRoutePatternMatcher.DefaultRoutePatternMatcher()", file="DefaultRoutePatternMatcherFixture.cs"];
m5_41 [label="Entry Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_allow_regex_in_route_definition_and_capture_specified_parameters()", span="98-98", cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_allow_regex_in_route_definition_and_capture_specified_parameters()", file="DefaultRoutePatternMatcherFixture.cs"];
m5_42 [label="var results = this.matcher.Match(''/foo/1234'', @''/(?<foo>foo)/(?<bar>\d{4})/'')", span="101-101", cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_allow_regex_in_route_definition_and_capture_specified_parameters()", file="DefaultRoutePatternMatcherFixture.cs"];
m5_43 [label="results.IsMatch.ShouldBeTrue()", span="104-104", cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_allow_regex_in_route_definition_and_capture_specified_parameters()", file="DefaultRoutePatternMatcherFixture.cs"];
m5_44 [label="((string)results.Parameters[''foo'']).ShouldEqual(''foo'')", span="105-105", cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_allow_regex_in_route_definition_and_capture_specified_parameters()", file="DefaultRoutePatternMatcherFixture.cs"];
m5_45 [label="((string)results.Parameters[''bar'']).ShouldEqual(''1234'')", span="106-106", cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_allow_regex_in_route_definition_and_capture_specified_parameters()", file="DefaultRoutePatternMatcherFixture.cs"];
m5_46 [label="Exit Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_allow_regex_in_route_definition_and_capture_specified_parameters()", span="98-98", cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_allow_regex_in_route_definition_and_capture_specified_parameters()", file="DefaultRoutePatternMatcherFixture.cs"];
m5_22 [label="Entry Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_return_negative_match_result_when_paths_does_not_match()", span="57-57", cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_return_negative_match_result_when_paths_does_not_match()", file="DefaultRoutePatternMatcherFixture.cs"];
m5_23 [label="var results = this.matcher.Match(''/foo/bar'', ''/bar/foo'')", span="60-60", cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_return_negative_match_result_when_paths_does_not_match()", file="DefaultRoutePatternMatcherFixture.cs"];
m5_24 [label="results.IsMatch.ShouldBeFalse()", span="63-63", cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_return_negative_match_result_when_paths_does_not_match()", file="DefaultRoutePatternMatcherFixture.cs"];
m5_25 [label="Exit Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_return_negative_match_result_when_paths_does_not_match()", span="57-57", cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_return_negative_match_result_when_paths_does_not_match()", file="DefaultRoutePatternMatcherFixture.cs"];
m5_4 [label="Entry Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_not_trim_trailing_slash_if_requesting_root()", span="17-17", cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_not_trim_trailing_slash_if_requesting_root()", file="DefaultRoutePatternMatcherFixture.cs"];
m5_5 [label="var results = this.matcher.Match(''/'', ''/'')", span="20-20", cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_not_trim_trailing_slash_if_requesting_root()", file="DefaultRoutePatternMatcherFixture.cs"];
m5_6 [label="results.IsMatch.ShouldBeTrue()", span="23-23", cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_not_trim_trailing_slash_if_requesting_root()", file="DefaultRoutePatternMatcherFixture.cs"];
m5_7 [label="Exit Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_not_trim_trailing_slash_if_requesting_root()", span="17-17", cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_not_trim_trailing_slash_if_requesting_root()", file="DefaultRoutePatternMatcherFixture.cs"];
m5_63 [label="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture", span="", file="DefaultRoutePatternMatcherFixture.cs"];
m6_43 [label="Entry string.Replace(string, string)", span="0-0", cluster="string.Replace(string, string)", file="DynamicDictionary.cs"];
m6_28 [label="Entry Nancy.DynamicDictionary.Equals(object)", span="119-119", cluster="Nancy.DynamicDictionary.Equals(object)", file="DynamicDictionary.cs"];
m6_29 [label="ReferenceEquals(null, obj)", span="121-121", cluster="Nancy.DynamicDictionary.Equals(object)", file="DynamicDictionary.cs"];
m6_31 [label="ReferenceEquals(this, obj)", span="126-126", cluster="Nancy.DynamicDictionary.Equals(object)", file="DynamicDictionary.cs"];
m6_33 [label="return obj.GetType() == typeof (DynamicDictionary) && this.Equals((DynamicDictionary) obj);", span="131-131", cluster="Nancy.DynamicDictionary.Equals(object)", file="DynamicDictionary.cs"];
m6_30 [label="return false;", span="123-123", cluster="Nancy.DynamicDictionary.Equals(object)", file="DynamicDictionary.cs"];
m6_32 [label="return true;", span="128-128", cluster="Nancy.DynamicDictionary.Equals(object)", file="DynamicDictionary.cs"];
m6_34 [label="Exit Nancy.DynamicDictionary.Equals(object)", span="119-119", cluster="Nancy.DynamicDictionary.Equals(object)", file="DynamicDictionary.cs"];
m6_17 [label="Entry Nancy.DynamicDictionaryValue.DynamicDictionaryValue(object)", span="15-15", cluster="Nancy.DynamicDictionaryValue.DynamicDictionaryValue(object)", file="DynamicDictionary.cs"];
m6_16 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="DynamicDictionary.cs"];
m6_11 [label="Entry Nancy.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder, out object)", span="55-55", cluster="Nancy.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder, out object)", file="DynamicDictionary.cs"];
m6_12 [label="!dictionary.TryGetValue(binder.Name, out result)", span="57-57", cluster="Nancy.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder, out object)", file="DynamicDictionary.cs"];
m6_13 [label="result = new DynamicDictionaryValue(null)", span="59-59", cluster="Nancy.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder, out object)", file="DynamicDictionary.cs"];
m6_14 [label="return true;", span="62-62", cluster="Nancy.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder, out object)", file="DynamicDictionary.cs"];
m6_15 [label="Exit Nancy.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder, out object)", span="55-55", cluster="Nancy.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder, out object)", file="DynamicDictionary.cs"];
m6_21 [label="Entry Nancy.DynamicDictionary.Equals(Nancy.DynamicDictionary)", span="104-104", cluster="Nancy.DynamicDictionary.Equals(Nancy.DynamicDictionary)", file="DynamicDictionary.cs"];
m6_22 [label="ReferenceEquals(null, other)", span="106-106", cluster="Nancy.DynamicDictionary.Equals(Nancy.DynamicDictionary)", file="DynamicDictionary.cs"];
m6_24 [label="return ReferenceEquals(this, other) || Equals(other.dictionary, this.dictionary);", span="111-111", cluster="Nancy.DynamicDictionary.Equals(Nancy.DynamicDictionary)", file="DynamicDictionary.cs"];
m6_23 [label="return false;", span="108-108", cluster="Nancy.DynamicDictionary.Equals(Nancy.DynamicDictionary)", file="DynamicDictionary.cs"];
m6_25 [label="Exit Nancy.DynamicDictionary.Equals(Nancy.DynamicDictionary)", span="104-104", cluster="Nancy.DynamicDictionary.Equals(Nancy.DynamicDictionary)", file="DynamicDictionary.cs"];
m6_7 [label="Entry Nancy.DynamicDictionary.TrySetMember(System.Dynamic.SetMemberBinder, object)", span="44-44", cluster="Nancy.DynamicDictionary.TrySetMember(System.Dynamic.SetMemberBinder, object)", file="DynamicDictionary.cs"];
m6_8 [label="this[binder.Name] = value", span="46-46", cluster="Nancy.DynamicDictionary.TrySetMember(System.Dynamic.SetMemberBinder, object)", file="DynamicDictionary.cs"];
m6_9 [label="return true;", span="47-47", cluster="Nancy.DynamicDictionary.TrySetMember(System.Dynamic.SetMemberBinder, object)", file="DynamicDictionary.cs"];
m6_10 [label="Exit Nancy.DynamicDictionary.TrySetMember(System.Dynamic.SetMemberBinder, object)", span="44-44", cluster="Nancy.DynamicDictionary.TrySetMember(System.Dynamic.SetMemberBinder, object)", file="DynamicDictionary.cs"];
m6_40 [label="Entry Nancy.DynamicDictionary.GetNeutralKey(string)", span="143-143", cluster="Nancy.DynamicDictionary.GetNeutralKey(string)", file="DynamicDictionary.cs"];
m6_41 [label="return key.Replace(''-'', string.Empty);", span="145-145", cluster="Nancy.DynamicDictionary.GetNeutralKey(string)", color=red, community=0, file="DynamicDictionary.cs"];
m6_42 [label="Exit Nancy.DynamicDictionary.GetNeutralKey(string)", span="143-143", cluster="Nancy.DynamicDictionary.GetNeutralKey(string)", file="DynamicDictionary.cs"];
m6_18 [label="Entry Nancy.DynamicDictionary.GetDynamicMemberNames()", span="68-68", cluster="Nancy.DynamicDictionary.GetDynamicMemberNames()", file="DynamicDictionary.cs"];
m6_19 [label="return dictionary.Keys;", span="70-70", cluster="Nancy.DynamicDictionary.GetDynamicMemberNames()", file="DynamicDictionary.cs"];
m6_20 [label="Exit Nancy.DynamicDictionary.GetDynamicMemberNames()", span="68-68", cluster="Nancy.DynamicDictionary.GetDynamicMemberNames()", file="DynamicDictionary.cs"];
m6_0 [label="Entry Nancy.DynamicDictionary.Create(System.Collections.Generic.IDictionary<string, object>)", span="27-27", cluster="Nancy.DynamicDictionary.Create(System.Collections.Generic.IDictionary<string, object>)", file="DynamicDictionary.cs"];
m6_1 [label="var instance = new DynamicDictionary()", span="29-29", cluster="Nancy.DynamicDictionary.Create(System.Collections.Generic.IDictionary<string, object>)", color=red, community=0, file="DynamicDictionary.cs"];
m6_2 [label="values.Keys", span="31-31", cluster="Nancy.DynamicDictionary.Create(System.Collections.Generic.IDictionary<string, object>)", color=red, community=0, file="DynamicDictionary.cs"];
m6_3 [label="instance[key] = values[key]", span="33-33", cluster="Nancy.DynamicDictionary.Create(System.Collections.Generic.IDictionary<string, object>)", color=red, community=0, file="DynamicDictionary.cs"];
m6_4 [label="return instance;", span="36-36", cluster="Nancy.DynamicDictionary.Create(System.Collections.Generic.IDictionary<string, object>)", color=red, community=0, file="DynamicDictionary.cs"];
m6_5 [label="Exit Nancy.DynamicDictionary.Create(System.Collections.Generic.IDictionary<string, object>)", span="27-27", cluster="Nancy.DynamicDictionary.Create(System.Collections.Generic.IDictionary<string, object>)", file="DynamicDictionary.cs"];
m6_27 [label="Entry object.Equals(object, object)", span="0-0", cluster="object.Equals(object, object)", file="DynamicDictionary.cs"];
m6_39 [label="Entry object.GetHashCode()", span="0-0", cluster="object.GetHashCode()", file="DynamicDictionary.cs"];
m6_6 [label="Entry Nancy.DynamicDictionary.DynamicDictionary()", span="6-6", cluster="Nancy.DynamicDictionary.DynamicDictionary()", file="DynamicDictionary.cs"];
m6_35 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="DynamicDictionary.cs"];
m6_26 [label="Entry object.ReferenceEquals(object, object)", span="0-0", cluster="object.ReferenceEquals(object, object)", file="DynamicDictionary.cs"];
m6_36 [label="Entry Nancy.DynamicDictionary.GetHashCode()", span="138-138", cluster="Nancy.DynamicDictionary.GetHashCode()", file="DynamicDictionary.cs"];
m6_37 [label="return (dictionary != null ? dictionary.GetHashCode() : 0);", span="140-140", cluster="Nancy.DynamicDictionary.GetHashCode()", file="DynamicDictionary.cs"];
m6_38 [label="Exit Nancy.DynamicDictionary.GetHashCode()", span="138-138", cluster="Nancy.DynamicDictionary.GetHashCode()", file="DynamicDictionary.cs"];
m6_44 [label="Nancy.DynamicDictionary", span="", file="DynamicDictionary.cs"];
m7_52 [label="Entry Nancy.Conventions.DefaultViewLocationConventions.Initialise(Nancy.Conventions.NancyConventions)", span="15-15", cluster="Nancy.Conventions.DefaultViewLocationConventions.Initialise(Nancy.Conventions.NancyConventions)", file="DynamicDictionaryFixture.cs"];
m7_24 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="DynamicDictionaryFixture.cs"];
m7_61 [label="Entry System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", span="0-0", cluster="System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", file="DynamicDictionaryFixture.cs"];
m7_0 [label="Entry Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.DefaultViewLocationConventionsFixture()", span="13-13", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.DefaultViewLocationConventionsFixture()", file="DynamicDictionaryFixture.cs"];
m7_1 [label="this.conventions = new NancyConventions()", span="15-15", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.DefaultViewLocationConventionsFixture()", file="DynamicDictionaryFixture.cs"];
m7_2 [label="this.viewLocationConventions = new DefaultViewLocationConventions()", span="16-16", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.DefaultViewLocationConventionsFixture()", file="DynamicDictionaryFixture.cs"];
m7_3 [label="Exit Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.DefaultViewLocationConventionsFixture()", span="13-13", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.DefaultViewLocationConventionsFixture()", file="DynamicDictionaryFixture.cs"];
m7_62 [label="Entry Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_views_folder()", span="137-137", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_views_folder()", file="DynamicDictionaryFixture.cs"];
m7_63 [label="this.viewLocationConventions.Initialise(this.conventions)", span="140-140", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_views_folder()", file="DynamicDictionaryFixture.cs"];
m7_64 [label="var convention = this.conventions.ViewLocationConventions[1]", span="141-141", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_views_folder()", file="DynamicDictionaryFixture.cs"];
m7_65 [label="var result = convention.Invoke(\r\n                ''viewname'',\r\n                null,\r\n                new ViewLocationContext { ModulePath = string.Empty })", span="144-147", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_views_folder()", file="DynamicDictionaryFixture.cs"];
m7_66 [label="result.ShouldEqual(''views/viewname'')", span="150-150", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_views_folder()", file="DynamicDictionaryFixture.cs"];
m7_67 [label="Exit Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_views_folder()", span="137-137", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_views_folder()", file="DynamicDictionaryFixture.cs"];
m7_54 [label="Entry Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname()", span="120-120", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname()", file="DynamicDictionaryFixture.cs"];
m7_55 [label="this.viewLocationConventions.Initialise(this.conventions)", span="123-123", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname()", file="DynamicDictionaryFixture.cs"];
m7_56 [label="var convention = this.conventions.ViewLocationConventions[0]", span="124-124", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname()", file="DynamicDictionaryFixture.cs"];
m7_57 [label="var result = convention.Invoke(\r\n                ''viewname'', \r\n                null, \r\n                new ViewLocationContext { ModulePath = string.Empty })", span="127-130", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname()", file="DynamicDictionaryFixture.cs"];
m7_58 [label="result.ShouldEqual(''viewname'')", span="133-133", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname()", file="DynamicDictionaryFixture.cs"];
m7_59 [label="Exit Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname()", span="120-120", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname()", file="DynamicDictionaryFixture.cs"];
m7_60 [label="Entry Nancy.ViewEngines.ViewLocationContext.ViewLocationContext()", span="5-5", cluster="Nancy.ViewEngines.ViewLocationContext.ViewLocationContext()", file="DynamicDictionaryFixture.cs"];
m7_86 [label="Entry Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_folder_when_modulepath_contains_leading_slash()", span="205-205", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_folder_when_modulepath_contains_leading_slash()", file="DynamicDictionaryFixture.cs"];
m7_87 [label="this.viewLocationConventions.Initialise(this.conventions)", span="208-208", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_folder_when_modulepath_contains_leading_slash()", file="DynamicDictionaryFixture.cs"];
m7_88 [label="var convention = this.conventions.ViewLocationConventions[3]", span="209-209", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_folder_when_modulepath_contains_leading_slash()", file="DynamicDictionaryFixture.cs"];
m7_89 [label="var result = convention.Invoke(\r\n                ''viewname'',\r\n                null,\r\n                new ViewLocationContext { ModulePath = ''/modulepath'' })", span="212-215", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_folder_when_modulepath_contains_leading_slash()", file="DynamicDictionaryFixture.cs"];
m7_90 [label="result.ShouldEqual(''modulepath/viewname'')", span="218-218", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_folder_when_modulepath_contains_leading_slash()", file="DynamicDictionaryFixture.cs"];
m7_91 [label="Exit Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_folder_when_modulepath_contains_leading_slash()", span="205-205", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_folder_when_modulepath_contains_leading_slash()", file="DynamicDictionaryFixture.cs"];
m7_44 [label="Entry string.ShouldBeEmpty()", span="26-26", cluster="string.ShouldBeEmpty()", file="DynamicDictionaryFixture.cs"];
m7_18 [label="Entry object.ShouldEqual(object)", span="95-95", cluster="object.ShouldEqual(object)", file="DynamicDictionaryFixture.cs"];
m7_53 [label="Entry int.ShouldBeGreaterThan(int)", span="115-115", cluster="int.ShouldBeGreaterThan(int)", file="DynamicDictionaryFixture.cs"];
m7_25 [label="Entry Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_return_correct_error_message_when_not_valid_because_view_location_conventions_is_empty()", span="59-59", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_return_correct_error_message_when_not_valid_because_view_location_conventions_is_empty()", file="DynamicDictionaryFixture.cs"];
m7_26 [label="this.conventions.ViewLocationConventions = new List<Func<string, dynamic, ViewLocationContext, string>>()", span="62-62", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_return_correct_error_message_when_not_valid_because_view_location_conventions_is_empty()", color=red, community=0, file="DynamicDictionaryFixture.cs"];
m7_27 [label="var result = this.viewLocationConventions.Validate(this.conventions)", span="65-65", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_return_correct_error_message_when_not_valid_because_view_location_conventions_is_empty()", color=red, community=0, file="DynamicDictionaryFixture.cs"];
m7_28 [label="result.Item2.ShouldEqual(''The view conventions cannot be empty.'')", span="68-68", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_return_correct_error_message_when_not_valid_because_view_location_conventions_is_empty()", color=red, community=0, file="DynamicDictionaryFixture.cs"];
m7_29 [label="Exit Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_return_correct_error_message_when_not_valid_because_view_location_conventions_is_empty()", span="59-59", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_return_correct_error_message_when_not_valid_because_view_location_conventions_is_empty()", file="DynamicDictionaryFixture.cs"];
m7_12 [label="Entry bool.ShouldBeFalse()", span="90-90", cluster="bool.ShouldBeFalse()", file="DynamicDictionaryFixture.cs"];
m7_68 [label="Entry Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_subfolder_of_views_folder()", span="154-154", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_subfolder_of_views_folder()", file="DynamicDictionaryFixture.cs"];
m7_69 [label="this.viewLocationConventions.Initialise(this.conventions)", span="157-157", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_subfolder_of_views_folder()", file="DynamicDictionaryFixture.cs"];
m7_70 [label="var convention = this.conventions.ViewLocationConventions[2]", span="158-158", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_subfolder_of_views_folder()", file="DynamicDictionaryFixture.cs"];
m7_71 [label="var result = convention.Invoke(\r\n                ''viewname'',\r\n                null,\r\n                new ViewLocationContext { ModulePath = ''modulepath'' })", span="161-164", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_subfolder_of_views_folder()", file="DynamicDictionaryFixture.cs"];
m7_72 [label="result.ShouldEqual(''views/modulepath/viewname'')", span="167-167", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_subfolder_of_views_folder()", file="DynamicDictionaryFixture.cs"];
m7_73 [label="Exit Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_subfolder_of_views_folder()", span="154-154", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_subfolder_of_views_folder()", file="DynamicDictionaryFixture.cs"];
m7_39 [label="Entry Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_return_empty_error_message_when_valid()", span="91-91", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_return_empty_error_message_when_valid()", file="DynamicDictionaryFixture.cs"];
m7_40 [label="this.conventions.ViewLocationConventions =\r\n                new List<Func<string, dynamic, ViewLocationContext, string>>\r\n                {\r\n                    (viewName, model, viewLocationContext) => {\r\n                        return string.Empty;\r\n                    }\r\n                }", span="94-100", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_return_empty_error_message_when_valid()", file="DynamicDictionaryFixture.cs"];
m7_41 [label="var result = this.viewLocationConventions.Validate(this.conventions)", span="103-103", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_return_empty_error_message_when_valid()", file="DynamicDictionaryFixture.cs"];
m7_42 [label="result.Item2.ShouldBeEmpty()", span="106-106", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_return_empty_error_message_when_valid()", file="DynamicDictionaryFixture.cs"];
m7_43 [label="Exit Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_return_empty_error_message_when_valid()", span="91-91", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_return_empty_error_message_when_valid()", file="DynamicDictionaryFixture.cs"];
m7_92 [label="Entry Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulename_subfolder_of_views_folder()", span="222-222", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulename_subfolder_of_views_folder()", file="DynamicDictionaryFixture.cs"];
m7_93 [label="this.viewLocationConventions.Initialise(this.conventions)", span="225-225", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulename_subfolder_of_views_folder()", file="DynamicDictionaryFixture.cs"];
m7_94 [label="var convention = this.conventions.ViewLocationConventions[4]", span="226-226", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulename_subfolder_of_views_folder()", file="DynamicDictionaryFixture.cs"];
m7_95 [label="var result = convention.Invoke(\r\n                ''viewname'',\r\n                null,\r\n                new ViewLocationContext { ModuleName = ''modulename'' })", span="229-232", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulename_subfolder_of_views_folder()", file="DynamicDictionaryFixture.cs"];
m7_96 [label="result.ShouldEqual(''views/modulename/viewname'')", span="235-235", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulename_subfolder_of_views_folder()", file="DynamicDictionaryFixture.cs"];
m7_97 [label="Exit Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulename_subfolder_of_views_folder()", span="222-222", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulename_subfolder_of_views_folder()", file="DynamicDictionaryFixture.cs"];
m7_35 [label="Entry bool.ShouldBeTrue()", span="85-85", cluster="bool.ShouldBeTrue()", file="DynamicDictionaryFixture.cs"];
m7_98 [label="Entry Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulename_folder()", span="239-239", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulename_folder()", file="DynamicDictionaryFixture.cs"];
m7_99 [label="this.viewLocationConventions.Initialise(this.conventions)", span="242-242", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulename_folder()", file="DynamicDictionaryFixture.cs"];
m7_100 [label="var convention = this.conventions.ViewLocationConventions[5]", span="243-243", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulename_folder()", file="DynamicDictionaryFixture.cs"];
m7_101 [label="var result = convention.Invoke(\r\n                ''viewname'',\r\n                null,\r\n                new ViewLocationContext { ModuleName = ''modulename'' })", span="246-249", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulename_folder()", file="DynamicDictionaryFixture.cs"];
m7_102 [label="result.ShouldEqual(''modulename/viewname'')", span="252-252", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulename_folder()", file="DynamicDictionaryFixture.cs"];
m7_103 [label="Exit Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulename_folder()", span="239-239", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulename_folder()", file="DynamicDictionaryFixture.cs"];
m7_6 [label="Entry Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_not_be_valid_when_view_location_conventions_is_null()", span="20-20", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_not_be_valid_when_view_location_conventions_is_null()", file="DynamicDictionaryFixture.cs"];
m7_7 [label="this.conventions.ViewLocationConventions = null", span="23-23", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_not_be_valid_when_view_location_conventions_is_null()", color=red, community=0, file="DynamicDictionaryFixture.cs"];
m7_8 [label="var result = this.viewLocationConventions.Validate(this.conventions)", span="26-26", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_not_be_valid_when_view_location_conventions_is_null()", color=red, community=0, file="DynamicDictionaryFixture.cs"];
m7_9 [label="result.Item1.ShouldBeFalse()", span="29-29", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_not_be_valid_when_view_location_conventions_is_null()", color=red, community=0, file="DynamicDictionaryFixture.cs"];
m7_10 [label="Exit Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_not_be_valid_when_view_location_conventions_is_null()", span="20-20", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_not_be_valid_when_view_location_conventions_is_null()", file="DynamicDictionaryFixture.cs"];
m7_45 [label="Entry lambda expression", span="97-99", cluster="lambda expression", file="DynamicDictionaryFixture.cs"];
m7_36 [label="Entry lambda expression", span="78-80", cluster="lambda expression", file="DynamicDictionaryFixture.cs"];
m7_37 [label="return string.Empty;", span="79-79", cluster="lambda expression", color=red, community=0, file="DynamicDictionaryFixture.cs"];
m7_38 [label="Exit lambda expression", span="78-80", cluster="lambda expression", file="DynamicDictionaryFixture.cs"];
m7_46 [label="return string.Empty;", span="98-98", cluster="lambda expression", file="DynamicDictionaryFixture.cs"];
m7_47 [label="Exit lambda expression", span="97-99", cluster="lambda expression", file="DynamicDictionaryFixture.cs"];
m7_5 [label="Entry Nancy.Conventions.DefaultViewLocationConventions.DefaultViewLocationConventions()", span="9-9", cluster="Nancy.Conventions.DefaultViewLocationConventions.DefaultViewLocationConventions()", file="DynamicDictionaryFixture.cs"];
m7_13 [label="Entry Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_return_correct_error_message_when_not_valid_because_view_location_conventions_is_null()", span="33-33", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_return_correct_error_message_when_not_valid_because_view_location_conventions_is_null()", file="DynamicDictionaryFixture.cs"];
m7_14 [label="this.conventions.ViewLocationConventions = null", span="36-36", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_return_correct_error_message_when_not_valid_because_view_location_conventions_is_null()", color=red, community=0, file="DynamicDictionaryFixture.cs"];
m7_15 [label="var result = this.viewLocationConventions.Validate(this.conventions)", span="39-39", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_return_correct_error_message_when_not_valid_because_view_location_conventions_is_null()", color=red, community=0, file="DynamicDictionaryFixture.cs"];
m7_16 [label="result.Item2.ShouldEqual(''The view conventions cannot be null.'')", span="42-42", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_return_correct_error_message_when_not_valid_because_view_location_conventions_is_null()", color=red, community=0, file="DynamicDictionaryFixture.cs"];
m7_17 [label="Exit Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_return_correct_error_message_when_not_valid_because_view_location_conventions_is_null()", span="33-33", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_return_correct_error_message_when_not_valid_because_view_location_conventions_is_null()", file="DynamicDictionaryFixture.cs"];
m7_74 [label="Entry Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_subfolder_of_views_folder_when_modulepath_contains_leading_slash()", span="171-171", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_subfolder_of_views_folder_when_modulepath_contains_leading_slash()", file="DynamicDictionaryFixture.cs"];
m7_75 [label="this.viewLocationConventions.Initialise(this.conventions)", span="174-174", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_subfolder_of_views_folder_when_modulepath_contains_leading_slash()", file="DynamicDictionaryFixture.cs"];
m7_76 [label="var convention = this.conventions.ViewLocationConventions[2]", span="175-175", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_subfolder_of_views_folder_when_modulepath_contains_leading_slash()", file="DynamicDictionaryFixture.cs"];
m7_77 [label="var result = convention.Invoke(\r\n                ''viewname'',\r\n                null,\r\n                new ViewLocationContext { ModulePath = ''/modulepath'' })", span="178-181", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_subfolder_of_views_folder_when_modulepath_contains_leading_slash()", file="DynamicDictionaryFixture.cs"];
m7_78 [label="result.ShouldEqual(''views/modulepath/viewname'')", span="184-184", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_subfolder_of_views_folder_when_modulepath_contains_leading_slash()", file="DynamicDictionaryFixture.cs"];
m7_79 [label="Exit Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_subfolder_of_views_folder_when_modulepath_contains_leading_slash()", span="171-171", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_subfolder_of_views_folder_when_modulepath_contains_leading_slash()", file="DynamicDictionaryFixture.cs"];
m7_11 [label="Entry Nancy.Conventions.DefaultViewLocationConventions.Validate(Nancy.Conventions.NancyConventions)", span="25-25", cluster="Nancy.Conventions.DefaultViewLocationConventions.Validate(Nancy.Conventions.NancyConventions)", file="DynamicDictionaryFixture.cs"];
m7_48 [label="Entry Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_add_conventions_when_initialised()", span="110-110", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_add_conventions_when_initialised()", file="DynamicDictionaryFixture.cs"];
m7_49 [label="this.viewLocationConventions.Initialise(this.conventions)", span="113-113", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_add_conventions_when_initialised()", file="DynamicDictionaryFixture.cs"];
m7_50 [label="this.conventions.ViewLocationConventions.Count.ShouldBeGreaterThan(0)", span="116-116", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_add_conventions_when_initialised()", file="DynamicDictionaryFixture.cs"];
m7_51 [label="Exit Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_add_conventions_when_initialised()", span="110-110", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_add_conventions_when_initialised()", file="DynamicDictionaryFixture.cs"];
m7_19 [label="Entry Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_not_be_valid_when_view_location_conventions_is_empty()", span="46-46", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_not_be_valid_when_view_location_conventions_is_empty()", file="DynamicDictionaryFixture.cs"];
m7_20 [label="this.conventions.ViewLocationConventions = new List<Func<string, dynamic, ViewLocationContext, string>>()", span="49-49", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_not_be_valid_when_view_location_conventions_is_empty()", color=red, community=0, file="DynamicDictionaryFixture.cs"];
m7_21 [label="var result = this.viewLocationConventions.Validate(this.conventions)", span="52-52", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_not_be_valid_when_view_location_conventions_is_empty()", color=red, community=0, file="DynamicDictionaryFixture.cs"];
m7_22 [label="result.Item1.ShouldBeFalse()", span="55-55", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_not_be_valid_when_view_location_conventions_is_empty()", color=red, community=0, file="DynamicDictionaryFixture.cs"];
m7_23 [label="Exit Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_not_be_valid_when_view_location_conventions_is_empty()", span="46-46", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_not_be_valid_when_view_location_conventions_is_empty()", file="DynamicDictionaryFixture.cs"];
m7_80 [label="Entry Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_folder()", span="188-188", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_folder()", file="DynamicDictionaryFixture.cs"];
m7_81 [label="this.viewLocationConventions.Initialise(this.conventions)", span="191-191", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_folder()", file="DynamicDictionaryFixture.cs"];
m7_82 [label="var convention = this.conventions.ViewLocationConventions[3]", span="192-192", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_folder()", file="DynamicDictionaryFixture.cs"];
m7_83 [label="var result = convention.Invoke(\r\n                ''viewname'',\r\n                null,\r\n                new ViewLocationContext { ModulePath = ''modulepath'' })", span="195-198", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_folder()", file="DynamicDictionaryFixture.cs"];
m7_84 [label="result.ShouldEqual(''modulepath/viewname'')", span="201-201", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_folder()", file="DynamicDictionaryFixture.cs"];
m7_85 [label="Exit Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_folder()", span="188-188", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_define_convention_that_returns_viewname_in_modulepath_folder()", file="DynamicDictionaryFixture.cs"];
m7_4 [label="Entry Nancy.Conventions.NancyConventions.NancyConventions()", span="23-23", cluster="Nancy.Conventions.NancyConventions.NancyConventions()", file="DynamicDictionaryFixture.cs"];
m7_30 [label="Entry Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_be_valid_when_view_conventions_is_not_empty()", span="72-72", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_be_valid_when_view_conventions_is_not_empty()", file="DynamicDictionaryFixture.cs"];
m7_31 [label="this.conventions.ViewLocationConventions = \r\n                new List<Func<string, dynamic, ViewLocationContext, string>>\r\n                {\r\n                    (viewName, model, viewLocationContext) => {\r\n                        return string.Empty;\r\n                    }\r\n                }", span="75-81", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_be_valid_when_view_conventions_is_not_empty()", color=red, community=0, file="DynamicDictionaryFixture.cs"];
m7_32 [label="var result = this.viewLocationConventions.Validate(this.conventions)", span="84-84", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_be_valid_when_view_conventions_is_not_empty()", color=red, community=0, file="DynamicDictionaryFixture.cs"];
m7_33 [label="result.Item1.ShouldBeTrue()", span="87-87", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_be_valid_when_view_conventions_is_not_empty()", color=red, community=0, file="DynamicDictionaryFixture.cs"];
m7_34 [label="Exit Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_be_valid_when_view_conventions_is_not_empty()", span="72-72", cluster="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture.Should_be_valid_when_view_conventions_is_not_empty()", file="DynamicDictionaryFixture.cs"];
m7_104 [label="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture", span="", file="DynamicDictionaryFixture.cs"];
m8_4 [label="Entry Nancy.Tests.Unit.Responses.GenericFileResponseFixture.Should_set_status_code_to_ok()", span="18-18", cluster="Nancy.Tests.Unit.Responses.GenericFileResponseFixture.Should_set_status_code_to_ok()", file="GenericFileResponseFixture.cs"];
m8_5 [label="var response = new GenericFileResponse(this.imagePath, imageContentType)", span="21-21", cluster="Nancy.Tests.Unit.Responses.GenericFileResponseFixture.Should_set_status_code_to_ok()", file="GenericFileResponseFixture.cs"];
m8_6 [label="response.StatusCode.ShouldEqual(HttpStatusCode.OK)", span="24-24", cluster="Nancy.Tests.Unit.Responses.GenericFileResponseFixture.Should_set_status_code_to_ok()", file="GenericFileResponseFixture.cs"];
m8_7 [label="Exit Nancy.Tests.Unit.Responses.GenericFileResponseFixture.Should_set_status_code_to_ok()", span="18-18", cluster="Nancy.Tests.Unit.Responses.GenericFileResponseFixture.Should_set_status_code_to_ok()", file="GenericFileResponseFixture.cs"];
m8_9 [label="Entry object.ShouldEqual(object)", span="80-80", cluster="object.ShouldEqual(object)", file="GenericFileResponseFixture.cs"];
m8_26 [label="Entry System.IO.MemoryStream.Flush()", span="0-0", cluster="System.IO.MemoryStream.Flush()", file="GenericFileResponseFixture.cs"];
m8_18 [label="Entry System.Collections.Generic.IEnumerable<T>.ShouldEqualSequence<T>(System.Collections.Generic.IEnumerable<T>)", span="95-95", cluster="System.Collections.Generic.IEnumerable<T>.ShouldEqualSequence<T>(System.Collections.Generic.IEnumerable<T>)", file="GenericFileResponseFixture.cs"];
m8_16 [label="Entry System.IO.File.ReadAllBytes(string)", span="0-0", cluster="System.IO.File.ReadAllBytes(string)", file="GenericFileResponseFixture.cs"];
m8_0 [label="Entry Nancy.Tests.Unit.Responses.GenericFileResponseFixture.GenericFileResponseFixture()", span="12-12", cluster="Nancy.Tests.Unit.Responses.GenericFileResponseFixture.GenericFileResponseFixture()", file="GenericFileResponseFixture.cs"];
m8_1 [label="this.imagePath = Path.Combine(@''..'', @''..'', ''Resources'', ''zip.png'')", span="14-14", cluster="Nancy.Tests.Unit.Responses.GenericFileResponseFixture.GenericFileResponseFixture()", color=green, community=0, file="GenericFileResponseFixture.cs"];
m8_2 [label="Exit Nancy.Tests.Unit.Responses.GenericFileResponseFixture.GenericFileResponseFixture()", span="12-12", cluster="Nancy.Tests.Unit.Responses.GenericFileResponseFixture.GenericFileResponseFixture()", file="GenericFileResponseFixture.cs"];
m8_8 [label="Entry Nancy.Responses.GenericFileResponse.GenericFileResponse(string, string)", span="12-12", cluster="Nancy.Responses.GenericFileResponse.GenericFileResponse(string, string)", file="GenericFileResponseFixture.cs"];
m8_25 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="GenericFileResponseFixture.cs"];
m8_27 [label="Entry System.IO.MemoryStream.ToArray()", span="0-0", cluster="System.IO.MemoryStream.ToArray()", file="GenericFileResponseFixture.cs"];
m8_10 [label="Entry Nancy.Tests.Unit.Responses.GenericFileResponseFixture.Should_return_file_unchanged()", span="28-28", cluster="Nancy.Tests.Unit.Responses.GenericFileResponseFixture.Should_return_file_unchanged()", file="GenericFileResponseFixture.cs"];
m8_11 [label="var expected = File.ReadAllBytes(this.imagePath)", span="31-31", cluster="Nancy.Tests.Unit.Responses.GenericFileResponseFixture.Should_return_file_unchanged()", file="GenericFileResponseFixture.cs"];
m8_12 [label="var response = new GenericFileResponse(this.imagePath, imageContentType)", span="32-32", cluster="Nancy.Tests.Unit.Responses.GenericFileResponseFixture.Should_return_file_unchanged()", file="GenericFileResponseFixture.cs"];
m8_14 [label="result.ShouldEqualSequence(expected)", span="38-38", cluster="Nancy.Tests.Unit.Responses.GenericFileResponseFixture.Should_return_file_unchanged()", file="GenericFileResponseFixture.cs"];
m8_13 [label="var result = GetResponseContents(response)", span="35-35", cluster="Nancy.Tests.Unit.Responses.GenericFileResponseFixture.Should_return_file_unchanged()", file="GenericFileResponseFixture.cs"];
m8_15 [label="Exit Nancy.Tests.Unit.Responses.GenericFileResponseFixture.Should_return_file_unchanged()", span="28-28", cluster="Nancy.Tests.Unit.Responses.GenericFileResponseFixture.Should_return_file_unchanged()", file="GenericFileResponseFixture.cs"];
m8_17 [label="Entry Nancy.Tests.Unit.Responses.GenericFileResponseFixture.GetResponseContents(Nancy.Response)", span="41-41", cluster="Nancy.Tests.Unit.Responses.GenericFileResponseFixture.GetResponseContents(Nancy.Response)", file="GenericFileResponseFixture.cs"];
m8_19 [label="var ms = new MemoryStream()", span="43-43", cluster="Nancy.Tests.Unit.Responses.GenericFileResponseFixture.GetResponseContents(Nancy.Response)", file="GenericFileResponseFixture.cs"];
m8_20 [label="response.Contents(ms)", span="44-44", cluster="Nancy.Tests.Unit.Responses.GenericFileResponseFixture.GetResponseContents(Nancy.Response)", file="GenericFileResponseFixture.cs"];
m8_21 [label="ms.Flush()", span="45-45", cluster="Nancy.Tests.Unit.Responses.GenericFileResponseFixture.GetResponseContents(Nancy.Response)", file="GenericFileResponseFixture.cs"];
m8_22 [label="return ms.ToArray();", span="47-47", cluster="Nancy.Tests.Unit.Responses.GenericFileResponseFixture.GetResponseContents(Nancy.Response)", file="GenericFileResponseFixture.cs"];
m8_23 [label="Exit Nancy.Tests.Unit.Responses.GenericFileResponseFixture.GetResponseContents(Nancy.Response)", span="41-41", cluster="Nancy.Tests.Unit.Responses.GenericFileResponseFixture.GetResponseContents(Nancy.Response)", file="GenericFileResponseFixture.cs"];
m8_3 [label="Entry System.IO.Path.Combine(string, string, string, string)", span="0-0", cluster="System.IO.Path.Combine(string, string, string, string)", file="GenericFileResponseFixture.cs"];
m8_24 [label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0", cluster="System.IO.MemoryStream.MemoryStream()", file="GenericFileResponseFixture.cs"];
m8_28 [label="Nancy.Tests.Unit.Responses.GenericFileResponseFixture", span="", file="GenericFileResponseFixture.cs"];
m9_0 [label="Entry Nancy.Routing.IRoutePatternMatcher.Match(string, string)", span="14-14", cluster="Nancy.Routing.IRoutePatternMatcher.Match(string, string)", file="IRoutePatternMatcher.cs"];
m9_1 [label="Exit Nancy.Routing.IRoutePatternMatcher.Match(string, string)", span="14-14", cluster="Nancy.Routing.IRoutePatternMatcher.Match(string, string)", file="IRoutePatternMatcher.cs"];
m10_0 [label="Entry Nancy.Request.Request(string, string, string)", span="27-27", cluster="Nancy.Request.Request(string, string, string)", file="Request.cs"];
m10_1 [label="Exit Nancy.Request.Request(string, string, string)", span="27-27", cluster="Nancy.Request.Request(string, string, string)", file="Request.cs"];
m10_4 [label="throw new ArgumentNullException(''method'', ''The value of the method parameter cannot be null.'');", span="44-44", cluster="Nancy.Request.Request(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, Nancy.IO.RequestStream, string, string)", file="Request.cs"];
m10_13 [label="body == null", span="58-58", cluster="Nancy.Request.Request(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, Nancy.IO.RequestStream, string, string)", color=green, community=0, file="Request.cs"];
m10_11 [label="headers == null", span="55-55", cluster="Nancy.Request.Request(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, Nancy.IO.RequestStream, string, string)", file="Request.cs"];
m10_14 [label="throw new ArgumentNullException(''body'', ''The value of the body parameter cannot be null.'');", span="59-59", cluster="Nancy.Request.Request(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, Nancy.IO.RequestStream, string, string)", file="Request.cs"];
m10_15 [label="protocol == null", span="61-61", cluster="Nancy.Request.Request(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, Nancy.IO.RequestStream, string, string)", file="Request.cs"];
m10_5 [label="method.Length == 0", span="46-46", cluster="Nancy.Request.Request(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, Nancy.IO.RequestStream, string, string)", file="Request.cs"];
m10_7 [label="uri == null", span="49-49", cluster="Nancy.Request.Request(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, Nancy.IO.RequestStream, string, string)", file="Request.cs"];
m10_9 [label="uri.Length == 0", span="52-52", cluster="Nancy.Request.Request(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, Nancy.IO.RequestStream, string, string)", file="Request.cs"];
m10_16 [label="throw new ArgumentNullException(''protocol'', ''The value of the protocol parameter cannot be null.'');", span="62-62", cluster="Nancy.Request.Request(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, Nancy.IO.RequestStream, string, string)", file="Request.cs"];
m10_17 [label="protocol.Length == 0", span="64-64", cluster="Nancy.Request.Request(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, Nancy.IO.RequestStream, string, string)", file="Request.cs"];
m10_18 [label="throw new ArgumentOutOfRangeException(''protocol'', protocol, ''The value of the protocol parameter cannot be empty.'');", span="65-65", cluster="Nancy.Request.Request(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, Nancy.IO.RequestStream, string, string)", file="Request.cs"];
m10_19 [label="this.Body = body", span="67-67", cluster="Nancy.Request.Request(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, Nancy.IO.RequestStream, string, string)", file="Request.cs"];
m10_12 [label="throw new ArgumentNullException(''headers'', ''The value of the headers parameter cannot be null.'');", span="56-56", cluster="Nancy.Request.Request(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, Nancy.IO.RequestStream, string, string)", file="Request.cs"];
m10_6 [label="throw new ArgumentOutOfRangeException(''method'', method, ''The value of the method parameter cannot be empty.'');", span="47-47", cluster="Nancy.Request.Request(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, Nancy.IO.RequestStream, string, string)", file="Request.cs"];
m10_8 [label="throw new ArgumentNullException(''uri'', ''The value of the uri parameter cannot be null.'');", span="50-50", cluster="Nancy.Request.Request(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, Nancy.IO.RequestStream, string, string)", file="Request.cs"];
m10_10 [label="throw new ArgumentOutOfRangeException(''uri'', uri, ''The value of the uri parameter cannot be empty.'');", span="53-53", cluster="Nancy.Request.Request(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, Nancy.IO.RequestStream, string, string)", file="Request.cs"];
m10_22 [label="this.Uri = uri", span="70-70", cluster="Nancy.Request.Request(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, Nancy.IO.RequestStream, string, string)", file="Request.cs"];
m10_20 [label="this.Headers = new RequestHeaders(headers)", span="68-68", cluster="Nancy.Request.Request(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, Nancy.IO.RequestStream, string, string)", file="Request.cs", color=red, community=0];
m10_21 [label="this.Method = method", span="69-69", cluster="Nancy.Request.Request(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, Nancy.IO.RequestStream, string, string)", file="Request.cs"];
m10_23 [label="this.Protocol = protocol", span="71-71", cluster="Nancy.Request.Request(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, Nancy.IO.RequestStream, string, string)", file="Request.cs"];
m10_34 [label="Entry Nancy.Request.ParseFormData()", span="170-170", cluster="Nancy.Request.ParseFormData()", file="Request.cs"];
m10_54 [label="string.IsNullOrEmpty(this.Headers.ContentType)", span="172-172", cluster="Nancy.Request.ParseFormData()", color=red, community=0, file="Request.cs"];
m10_55 [label="return;", span="174-174", cluster="Nancy.Request.ParseFormData()", file="Request.cs"];
m10_56 [label="var contentType = this.Headers[''content-type''].First()", span="177-177", cluster="Nancy.Request.ParseFormData()", file="Request.cs"];
m10_57 [label="var mimeType = contentType.Split(';').First()", span="178-178", cluster="Nancy.Request.ParseFormData()", file="Request.cs"];
m10_63 [label="var boundary = Regex.Match(contentType, @''boundary=(?<token>[^\n\; ]*)'').Groups[''token''].Value", span="190-190", cluster="Nancy.Request.ParseFormData()", file="Request.cs"];
m10_58 [label="mimeType.Equals(''application/x-www-form-urlencoded'', StringComparison.OrdinalIgnoreCase)", span="179-179", cluster="Nancy.Request.ParseFormData()", file="Request.cs"];
m10_61 [label="!mimeType.Equals(''multipart/form-data'', StringComparison.OrdinalIgnoreCase)", span="185-185", cluster="Nancy.Request.ParseFormData()", file="Request.cs"];
m10_59 [label="var reader = new StreamReader(this.Body)", span="181-181", cluster="Nancy.Request.ParseFormData()", file="Request.cs"];
m10_60 [label="this.form = reader.ReadToEnd().AsQueryDictionary()", span="182-182", cluster="Nancy.Request.ParseFormData()", file="Request.cs"];
m10_62 [label="return;", span="187-187", cluster="Nancy.Request.ParseFormData()", file="Request.cs"];
m10_64 [label="var multipart = new HttpMultipart(this.Body, boundary)", span="191-191", cluster="Nancy.Request.ParseFormData()", file="Request.cs"];
m10_65 [label="multipart.GetBoundaries()", span="193-193", cluster="Nancy.Request.ParseFormData()", file="Request.cs"];
m10_66 [label="string.IsNullOrEmpty(httpMultipartBoundary.Filename)", span="195-195", cluster="Nancy.Request.ParseFormData()", file="Request.cs"];
m10_67 [label="var reader = new StreamReader(httpMultipartBoundary.Value)", span="197-197", cluster="Nancy.Request.ParseFormData()", file="Request.cs"];
m10_68 [label="this.form[httpMultipartBoundary.Name] = reader.ReadToEnd()", span="198-198", cluster="Nancy.Request.ParseFormData()", file="Request.cs"];
m10_69 [label="this.files.Add(new HttpFile(\r\n                                       httpMultipartBoundary.ContentType,\r\n                                       httpMultipartBoundary.Filename,\r\n                                       httpMultipartBoundary.Value\r\n                                       ))", span="202-206", cluster="Nancy.Request.ParseFormData()", file="Request.cs"];
m10_53 [label="Exit lambda expression", span="111-111", cluster="lambda expression", file="Request.cs"];
m10_70 [label="Exit Nancy.Request.ParseFormData()", span="170-170", cluster="Nancy.Request.ParseFormData()", file="Request.cs"];
m10_2 [label="Entry Nancy.Request.Request(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, Nancy.IO.RequestStream, string, string)", span="41-41", cluster="Nancy.Request.Request(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, Nancy.IO.RequestStream, string, string)", file="Request.cs"];
m10_3 [label="method == null", span="43-43", cluster="Nancy.Request.Request(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, Nancy.IO.RequestStream, string, string)", file="Request.cs"];
m10_24 [label="this.Query = query.AsQueryDictionary()", span="72-72", cluster="Nancy.Request.Request(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, Nancy.IO.RequestStream, string, string)", file="Request.cs"];
m10_25 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="Request.cs"];
m10_26 [label="this.ParseFormData()", span="74-74", cluster="Nancy.Request.Request(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, Nancy.IO.RequestStream, string, string)", file="Request.cs"];
m10_27 [label="Entry string.AsQueryDictionary()", span="57-57", cluster="string.AsQueryDictionary()", file="Request.cs"];
m10_28 [label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0", cluster="System.IO.MemoryStream.MemoryStream()", file="Request.cs"];
m10_29 [label="Entry Nancy.IO.RequestStream.FromStream(System.IO.Stream)", span="209-209", cluster="Nancy.IO.RequestStream.FromStream(System.IO.Stream)", file="Request.cs"];
m10_45 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IEqualityComparer<TKey>)", file="Request.cs"];
m10_77 [label="Entry Nancy.HttpMultipart.GetBoundaries()", span="33-33", cluster="Nancy.HttpMultipart.GetBoundaries()", file="Request.cs"];
m10_46 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="Request.cs"];
m10_50 [label="Entry Unk.Trim", span="", cluster="Unk.Trim", file="Request.cs"];
m10_78 [label="Entry Nancy.HttpFile.HttpFile(string, string, System.IO.Stream)", span="9-9", cluster="Nancy.HttpFile.HttpFile(string, string, System.IO.Stream)", file="Request.cs"];
m10_33 [label="Entry Nancy.Session.NullSessionProvider.NullSessionProvider()", span="6-6", cluster="Nancy.Session.NullSessionProvider.NullSessionProvider()", file="Request.cs"];
m10_35 [label="Entry Nancy.Request.GetCookieData()", span="141-141", cluster="Nancy.Request.GetCookieData()", file="Request.cs"];
m10_80 [label="!this.Method.Equals(''POST'', StringComparison.OrdinalIgnoreCase)", span="213-213", cluster="Nancy.Request.RewriteMethod()", file="Request.cs"];
m10_81 [label="return;", span="215-215", cluster="Nancy.Request.RewriteMethod()", file="Request.cs"];
m10_82 [label="!this.Form[''_method''].HasValue", span="218-218", cluster="Nancy.Request.RewriteMethod()", file="Request.cs"];
m10_83 [label="return;", span="220-220", cluster="Nancy.Request.RewriteMethod()", file="Request.cs"];
m10_84 [label="Nancy.Request", span="", cluster="Nancy.Request.RewriteMethod()", file="Request.cs"];
m10_85 [label="Exit Nancy.Request.RewriteMethod()", span="211-211", cluster="Nancy.Request.RewriteMethod()", file="Request.cs"];
m10_76 [label="Entry Nancy.HttpMultipart.HttpMultipart(System.IO.Stream, string)", span="22-22", cluster="Nancy.HttpMultipart.HttpMultipart(System.IO.Stream, string)", file="Request.cs"];
m10_32 [label="Entry string.AsQueryDictionary()", span="57-57", cluster="string.AsQueryDictionary()", file="Request.cs"];
m10_31 [label="Entry Nancy.RequestHeaders.RequestHeaders(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", span="20-20", cluster="Nancy.RequestHeaders.RequestHeaders(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="Request.cs"];
m10_30 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, object, string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, object, string)", file="Request.cs"];
m10_71 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="Request.cs"];
m10_75 [label="Entry System.Text.RegularExpressions.Regex.Match(string, string)", span="0-0", cluster="System.Text.RegularExpressions.Regex.Match(string, string)", file="Request.cs"];
m10_47 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="Request.cs"];
m10_72 [label="Entry string.Equals(string, System.StringComparison)", span="0-0", cluster="string.Equals(string, System.StringComparison)", file="Request.cs"];
m10_51 [label="Entry lambda expression", span="111-111", cluster="lambda expression", file="Request.cs"];
m10_52 [label="c.Split('=')", span="111-111", cluster="lambda expression", file="Request.cs"];
m10_49 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="Request.cs"];
m10_48 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])", file="Request.cs"];
m10_73 [label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0", cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="Request.cs"];
m10_79 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="Request.cs"];
m10_74 [label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0", cluster="System.IO.StreamReader.ReadToEnd()", file="Request.cs"];
m10_36 [label="var cookieDictionary = new Dictionary<string, string>(StringComparer.OrdinalIgnoreCase)", span="143-143", cluster="Nancy.Request.GetCookieData()", file="Request.cs", color=green, community=0];
m10_37 [label="!this.Headers.Cookie.Any()", span="145-145", cluster="Nancy.Request.GetCookieData()", file="Request.cs"];
m10_38 [label="return cookieDictionary;", span="147-147", cluster="Nancy.Request.GetCookieData()", color=red, community=0, file="Request.cs"];
m10_39 [label="return cookieDictionary;", span="107-107", cluster="Nancy.Request.GetCookieData()", file="Request.cs"];
m10_42 [label="return cookieDictionary;", span="156-156", cluster="Nancy.Request.GetCookieData()", file="Request.cs"];
m10_43 [label="return cookieDictionary;", span="116-116", cluster="Nancy.Request.GetCookieData()", file="Request.cs"];
m10_40 [label="var cookies = this.Headers[''cookie''].First().Split(';')", span="110-110", cluster="Nancy.Request.GetCookieData()", file="Request.cs"];
m10_41 [label="cookieDictionary[parts[0].Trim()] = parts[1]", span="153-153", cluster="Nancy.Request.GetCookieData()", file="Request.cs"];
m10_44 [label="Exit Nancy.Request.GetCookieData()", span="101-101", cluster="Nancy.Request.GetCookieData()", file="Request.cs"];
m10_86 [label="Nancy.Request", span="", file="Request.cs"];
m11_5 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="RequestExtensions.cs"];
m11_0 [label="Entry Nancy.Extensions.RequestExtensions.IsAjaxRequest(Nancy.Request)", span="15-15", cluster="Nancy.Extensions.RequestExtensions.IsAjaxRequest(Nancy.Request)", file="RequestExtensions.cs"];
m11_1 [label="string ajaxRequestHeaderKey = ''X-Requested-With''", span="17-17", cluster="Nancy.Extensions.RequestExtensions.IsAjaxRequest(Nancy.Request)", file="RequestExtensions.cs"];
m11_3 [label="return request.Headers[ajaxRequestHeaderKey].Contains(ajaxRequestHeaderValue);", span="20-20", cluster="Nancy.Extensions.RequestExtensions.IsAjaxRequest(Nancy.Request)", color=green, community=0, file="RequestExtensions.cs"];
m11_2 [label="string ajaxRequestHeaderValue = ''XMLHttpRequest''", span="18-18", cluster="Nancy.Extensions.RequestExtensions.IsAjaxRequest(Nancy.Request)", file="RequestExtensions.cs"];
m11_4 [label="Exit Nancy.Extensions.RequestExtensions.IsAjaxRequest(Nancy.Request)", span="15-15", cluster="Nancy.Extensions.RequestExtensions.IsAjaxRequest(Nancy.Request)", file="RequestExtensions.cs"];
m12_50 [label="Entry System.Net.WebResponse.GetResponseStream()", span="0-0", cluster="System.Net.WebResponse.GetResponseStream()", file="RequestExtensionsFixture.cs"];
m12_80 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="RequestExtensionsFixture.cs"];
m12_105 [label="Entry Nancy.Tests.xUnitExtensions.SkipException.SkipException(string)", span="9-9", cluster="Nancy.Tests.xUnitExtensions.SkipException.SkipException(string)", file="RequestExtensionsFixture.cs"];
m12_28 [label="Entry Unk.Invokes", span="", cluster="Unk.Invokes", file="RequestExtensionsFixture.cs"];
m12_30 [label="Entry Unk.CreateAndOpenWebServiceHost", span="", cluster="Unk.CreateAndOpenWebServiceHost", file="RequestExtensionsFixture.cs"];
m12_6 [label="Entry Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.CreateAndOpenWebServiceHost(Nancy.Bootstrapper.INancyBootstrapper)", span="136-136", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.CreateAndOpenWebServiceHost(Nancy.Bootstrapper.INancyBootstrapper)", file="RequestExtensionsFixture.cs"];
m12_90 [label="nancyBootstrapper == null", span="138-138", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.CreateAndOpenWebServiceHost(Nancy.Bootstrapper.INancyBootstrapper)", file="RequestExtensionsFixture.cs"];
m12_92 [label="var host = new WebServiceHost(\r\n                new NancyWcfGenericService(nancyBootstrapper),\r\n                BaseUri)", span="143-145", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.CreateAndOpenWebServiceHost(Nancy.Bootstrapper.INancyBootstrapper)", file="RequestExtensionsFixture.cs"];
m12_91 [label="nancyBootstrapper = new DefaultNancyBootstrapper()", span="140-140", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.CreateAndOpenWebServiceHost(Nancy.Bootstrapper.INancyBootstrapper)", file="RequestExtensionsFixture.cs"];
m12_93 [label="host.AddServiceEndpoint(typeof (NancyWcfGenericService), new WebHttpBinding(), '''')", span="147-147", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.CreateAndOpenWebServiceHost(Nancy.Bootstrapper.INancyBootstrapper)", file="RequestExtensionsFixture.cs"];
m12_94 [label="host.Open()", span="150-150", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.CreateAndOpenWebServiceHost(Nancy.Bootstrapper.INancyBootstrapper)", file="RequestExtensionsFixture.cs"];
m12_97 [label="return host;", span="157-157", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.CreateAndOpenWebServiceHost(Nancy.Bootstrapper.INancyBootstrapper)", file="RequestExtensionsFixture.cs"];
m12_95 [label="System.ServiceModel.AddressAccessDeniedException", span="152-152", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.CreateAndOpenWebServiceHost(Nancy.Bootstrapper.INancyBootstrapper)", file="RequestExtensionsFixture.cs"];
m12_96 [label="throw new SkipException(''Skipped due to no Administrator access - please see test fixture for more information.'');", span="154-154", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.CreateAndOpenWebServiceHost(Nancy.Bootstrapper.INancyBootstrapper)", file="RequestExtensionsFixture.cs"];
m12_98 [label="Exit Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.CreateAndOpenWebServiceHost(Nancy.Bootstrapper.INancyBootstrapper)", span="136-136", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.CreateAndOpenWebServiceHost(Nancy.Bootstrapper.INancyBootstrapper)", file="RequestExtensionsFixture.cs"];
m12_9 [label="Entry System.Net.WebRequest.GetResponse()", span="0-0", cluster="System.Net.WebRequest.GetResponse()", file="RequestExtensionsFixture.cs"];
m12_100 [label="Entry WebServiceHost.cstr", span="", cluster="WebServiceHost.cstr", file="RequestExtensionsFixture.cs"];
m12_10 [label="Entry object.ShouldEqual(object)", span="95-95", cluster="object.ShouldEqual(object)", file="RequestExtensionsFixture.cs"];
m12_63 [label="Entry System.Net.WebRequest.GetRequestStream()", span="0-0", cluster="System.Net.WebRequest.GetRequestStream()", file="RequestExtensionsFixture.cs"];
m12_104 [label="Entry Unk.Open", span="", cluster="Unk.Open", file="RequestExtensionsFixture.cs"];
m12_35 [label="Entry Unk.HandleRequest", span="", cluster="Unk.HandleRequest", file="RequestExtensionsFixture.cs"];
m12_102 [label="Entry WebHttpBinding.cstr", span="", cluster="WebHttpBinding.cstr", file="RequestExtensionsFixture.cs"];
m12_62 [label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0", cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", file="RequestExtensionsFixture.cs"];
m12_103 [label="Entry Unk.AddServiceEndpoint", span="", cluster="Unk.AddServiceEndpoint", file="RequestExtensionsFixture.cs"];
m12_27 [label="Entry Unk.CallTo", span="", cluster="Unk.CallTo", file="RequestExtensionsFixture.cs"];
m12_0 [label="Entry Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_get_any_header_from_selfhost()", span="25-25", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_get_any_header_from_selfhost()", file="RequestExtensionsFixture.cs"];
m12_1 [label="CreateAndOpenWebServiceHost()", span="27-27", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_get_any_header_from_selfhost()", file="RequestExtensionsFixture.cs"];
m12_2 [label="var request = WebRequest.Create(new Uri(BaseUri, ''rel/header/?query=value''))", span="29-29", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_get_any_header_from_selfhost()", file="RequestExtensionsFixture.cs"];
m12_3 [label="request.Method = ''GET''", span="30-30", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_get_any_header_from_selfhost()", file="RequestExtensionsFixture.cs"];
m12_4 [label="request.GetResponse().Headers[''X-Some-Header''].ShouldEqual(''Some value'')", span="32-32", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_get_any_header_from_selfhost()", file="RequestExtensionsFixture.cs"];
m12_5 [label="Exit Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_get_any_header_from_selfhost()", span="25-25", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_get_any_header_from_selfhost()", file="RequestExtensionsFixture.cs"];
m12_42 [label="Entry Unk.GetEngine", span="", cluster="Unk.GetEngine", file="RequestExtensionsFixture.cs"];
m12_99 [label="Entry Nancy.DefaultNancyBootstrapper.DefaultNancyBootstrapper()", span="16-16", cluster="Nancy.DefaultNancyBootstrapper.DefaultNancyBootstrapper()", file="RequestExtensionsFixture.cs"];
m12_87 [label="Entry lambda expression", span="112-112", cluster="lambda expression", file="RequestExtensionsFixture.cs"];
m12_33 [label="fakeEngine.HandleRequest(A<Request>.Ignored)", span="41-41", cluster="lambda expression", file="RequestExtensionsFixture.cs"];
m12_32 [label="Entry lambda expression", span="41-41", cluster="lambda expression", file="RequestExtensionsFixture.cs"];
m12_36 [label="Entry lambda expression", span="42-42", cluster="lambda expression", file="RequestExtensionsFixture.cs"];
m12_40 [label="fakeBootstrapper.GetEngine()", span="44-44", cluster="lambda expression", file="RequestExtensionsFixture.cs"];
m12_39 [label="Entry lambda expression", span="44-44", cluster="lambda expression", file="RequestExtensionsFixture.cs"];
m12_34 [label="Exit lambda expression", span="41-41", cluster="lambda expression", file="RequestExtensionsFixture.cs"];
m12_37 [label="nancyRequest = (Request)f.Arguments[0]", span="42-42", cluster="lambda expression", file="RequestExtensionsFixture.cs"];
m12_38 [label="Exit lambda expression", span="42-42", cluster="lambda expression", file="RequestExtensionsFixture.cs"];
m12_41 [label="Exit lambda expression", span="44-44", cluster="lambda expression", file="RequestExtensionsFixture.cs"];
m12_82 [label="fakeEngine.HandleRequest(A<Request>.Ignored)", span="110-110", cluster="lambda expression", file="RequestExtensionsFixture.cs"];
m12_88 [label="fakeBootstrapper.GetEngine()", span="112-112", cluster="lambda expression", file="RequestExtensionsFixture.cs"];
m12_81 [label="Entry lambda expression", span="110-110", cluster="lambda expression", file="RequestExtensionsFixture.cs"];
m12_84 [label="Entry lambda expression", span="111-111", cluster="lambda expression", file="RequestExtensionsFixture.cs"];
m12_83 [label="Exit lambda expression", span="110-110", cluster="lambda expression", file="RequestExtensionsFixture.cs"];
m12_85 [label="nancyRequest = (Request)f.Arguments[0]", span="111-111", cluster="lambda expression", file="RequestExtensionsFixture.cs"];
m12_86 [label="Exit lambda expression", span="111-111", cluster="lambda expression", file="RequestExtensionsFixture.cs"];
m12_89 [label="Exit lambda expression", span="112-112", cluster="lambda expression", file="RequestExtensionsFixture.cs"];
m12_43 [label="Entry Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_get_from_selfhost()", span="67-67", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_get_from_selfhost()", file="RequestExtensionsFixture.cs"];
m12_44 [label="CreateAndOpenWebServiceHost()", span="69-69", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_get_from_selfhost()", file="RequestExtensionsFixture.cs"];
m12_45 [label="var reader =\r\n                    new StreamReader(WebRequest.Create(new Uri(BaseUri, ''rel'')).GetResponse().GetResponseStream())", span="71-72", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_get_from_selfhost()", file="RequestExtensionsFixture.cs"];
m12_46 [label="var response = reader.ReadToEnd()", span="74-74", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_get_from_selfhost()", file="RequestExtensionsFixture.cs"];
m12_47 [label="response.ShouldEqual(''This is the site route'')", span="76-76", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_get_from_selfhost()", file="RequestExtensionsFixture.cs"];
m12_48 [label="Exit Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_get_from_selfhost()", span="67-67", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_get_from_selfhost()", file="RequestExtensionsFixture.cs"];
m12_64 [label="Entry System.IO.StreamWriter.Write(string)", span="0-0", cluster="System.IO.StreamWriter.Write(string)", file="RequestExtensionsFixture.cs"];
m12_65 [label="Entry Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_nancyrequest_contain_hostname_port_and_scheme()", span="103-103", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_nancyrequest_contain_hostname_port_and_scheme()", file="RequestExtensionsFixture.cs"];
m12_66 [label="Request nancyRequest = null", span="106-106", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_nancyrequest_contain_hostname_port_and_scheme()", file="RequestExtensionsFixture.cs"];
m12_67 [label="var fakeEngine = A.Fake<INancyEngine>()", span="107-107", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_nancyrequest_contain_hostname_port_and_scheme()", file="RequestExtensionsFixture.cs"];
m12_68 [label="var fakeBootstrapper = A.Fake<INancyBootstrapper>()", span="108-108", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_nancyrequest_contain_hostname_port_and_scheme()", file="RequestExtensionsFixture.cs"];
m12_69 [label="A.CallTo(() => fakeEngine.HandleRequest(A<Request>.Ignored))\r\n                .Invokes((f) => nancyRequest = (Request)f.Arguments[0])", span="110-111", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_nancyrequest_contain_hostname_port_and_scheme()", file="RequestExtensionsFixture.cs"];
m12_70 [label="A.CallTo(() => fakeBootstrapper.GetEngine()).Returns(fakeEngine)", span="112-112", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_nancyrequest_contain_hostname_port_and_scheme()", file="RequestExtensionsFixture.cs"];
m12_71 [label="CreateAndOpenWebServiceHost(fakeBootstrapper)", span="115-115", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_nancyrequest_contain_hostname_port_and_scheme()", file="RequestExtensionsFixture.cs"];
m12_76 [label="Assert.Equal(1234, nancyRequest.Url.Port)", span="131-131", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_nancyrequest_contain_hostname_port_and_scheme()", file="RequestExtensionsFixture.cs"];
m12_77 [label="Assert.Equal(''localhost'', nancyRequest.Url.HostName)", span="132-132", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_nancyrequest_contain_hostname_port_and_scheme()", file="RequestExtensionsFixture.cs"];
m12_78 [label="Assert.Equal(''http'', nancyRequest.Url.Scheme)", span="133-133", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_nancyrequest_contain_hostname_port_and_scheme()", file="RequestExtensionsFixture.cs"];
m12_72 [label="var request = WebRequest.Create(BaseUri)", span="117-117", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_nancyrequest_contain_hostname_port_and_scheme()", file="RequestExtensionsFixture.cs"];
m12_73 [label="request.Method = ''GET''", span="118-118", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_nancyrequest_contain_hostname_port_and_scheme()", file="RequestExtensionsFixture.cs"];
m12_74 [label="request.GetResponse()", span="122-122", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_nancyrequest_contain_hostname_port_and_scheme()", file="RequestExtensionsFixture.cs"];
m12_75 [label=WebException, span="124-124", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_nancyrequest_contain_hostname_port_and_scheme()", file="RequestExtensionsFixture.cs"];
m12_79 [label="Exit Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_nancyrequest_contain_hostname_port_and_scheme()", span="103-103", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_nancyrequest_contain_hostname_port_and_scheme()", file="RequestExtensionsFixture.cs"];
m12_49 [label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0", cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="RequestExtensionsFixture.cs"];
m12_31 [label="Entry Unk.True", span="", cluster="Unk.True", file="RequestExtensionsFixture.cs"];
m12_8 [label="Entry System.Net.WebRequest.Create(System.Uri)", span="0-0", cluster="System.Net.WebRequest.Create(System.Uri)", file="RequestExtensionsFixture.cs"];
m12_52 [label="Entry Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_post_body_to_selfhost()", span="81-81", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_post_body_to_selfhost()", file="RequestExtensionsFixture.cs"];
m12_53 [label="CreateAndOpenWebServiceHost()", span="83-83", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_post_body_to_selfhost()", file="RequestExtensionsFixture.cs"];
m12_54 [label="string testBody = ''This is the body of the request''", span="85-85", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_post_body_to_selfhost()", file="RequestExtensionsFixture.cs"];
m12_55 [label="var request = \r\n                    WebRequest.Create(new Uri(BaseUri, ''rel''))", span="87-88", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_post_body_to_selfhost()", file="RequestExtensionsFixture.cs"];
m12_58 [label="writer.Write(testBody)", span="93-93", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_post_body_to_selfhost()", file="RequestExtensionsFixture.cs"];
m12_60 [label="responseBody.ShouldEqual(testBody)", span="98-98", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_post_body_to_selfhost()", file="RequestExtensionsFixture.cs"];
m12_56 [label="request.Method = ''POST''", span="89-89", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_post_body_to_selfhost()", file="RequestExtensionsFixture.cs"];
m12_57 [label="var writer = \r\n                    new StreamWriter(request.GetRequestStream()) {AutoFlush = true}", span="91-92", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_post_body_to_selfhost()", file="RequestExtensionsFixture.cs"];
m12_59 [label="var responseBody = \r\n                    new StreamReader(request.GetResponse().GetResponseStream()).ReadToEnd()", span="95-96", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_post_body_to_selfhost()", file="RequestExtensionsFixture.cs"];
m12_61 [label="Exit Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_post_body_to_selfhost()", span="81-81", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_be_able_to_post_body_to_selfhost()", file="RequestExtensionsFixture.cs"];
m12_101 [label="Entry Nancy.Hosting.Wcf.NancyWcfGenericService.NancyWcfGenericService(Nancy.Bootstrapper.INancyBootstrapper)", span="37-37", cluster="Nancy.Hosting.Wcf.NancyWcfGenericService.NancyWcfGenericService(Nancy.Bootstrapper.INancyBootstrapper)", file="RequestExtensionsFixture.cs"];
m12_7 [label="Entry System.Uri.Uri(System.Uri, string)", span="0-0", cluster="System.Uri.Uri(System.Uri, string)", file="RequestExtensionsFixture.cs"];
m12_29 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="RequestExtensionsFixture.cs"];
m12_51 [label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0", cluster="System.IO.StreamReader.ReadToEnd()", file="RequestExtensionsFixture.cs"];
m12_11 [label="Entry Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_query_string_and_uri_correctly()", span="37-37", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_query_string_and_uri_correctly()", file="RequestExtensionsFixture.cs"];
m12_12 [label="Request nancyRequest = null", span="39-39", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_query_string_and_uri_correctly()", file="RequestExtensionsFixture.cs"];
m12_13 [label="var fakeEngine = A.Fake<INancyEngine>()", span="40-40", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_query_string_and_uri_correctly()", file="RequestExtensionsFixture.cs"];
m12_14 [label="A.CallTo(() => fakeEngine.HandleRequest(A<Request>.Ignored))\r\n                .Invokes((f) => nancyRequest = (Request)f.Arguments[0])", span="41-42", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_query_string_and_uri_correctly()", file="RequestExtensionsFixture.cs"];
m12_16 [label="A.CallTo(() => fakeBootstrapper.GetEngine()).Returns(fakeEngine)", span="44-44", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_query_string_and_uri_correctly()", file="RequestExtensionsFixture.cs"];
m12_15 [label="var fakeBootstrapper = A.Fake<INancyBootstrapper>()", span="43-43", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_query_string_and_uri_correctly()", file="RequestExtensionsFixture.cs"];
m12_22 [label="nancyRequest.Path.ShouldEqual(''/test/stuff'')", span="61-61", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_query_string_and_uri_correctly()", file="RequestExtensionsFixture.cs"];
m12_23 [label="Assert.True(nancyRequest.Query.query.HasValue)", span="62-62", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_query_string_and_uri_correctly()", file="RequestExtensionsFixture.cs"];
m12_24 [label="Assert.True(nancyRequest.Query.query2.HasValue)", span="63-63", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_query_string_and_uri_correctly()", file="RequestExtensionsFixture.cs"];
m12_17 [label="CreateAndOpenWebServiceHost(fakeBootstrapper)", span="46-46", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_query_string_and_uri_correctly()", file="RequestExtensionsFixture.cs"];
m12_18 [label="var request = WebRequest.Create(new Uri(BaseUri, ''test/stuff?query=value&query2=value2''))", span="48-48", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_query_string_and_uri_correctly()", file="RequestExtensionsFixture.cs"];
m12_19 [label="request.Method = ''GET''", span="49-49", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_query_string_and_uri_correctly()", file="RequestExtensionsFixture.cs"];
m12_20 [label="request.GetResponse()", span="53-53", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_query_string_and_uri_correctly()", file="RequestExtensionsFixture.cs"];
m12_21 [label=WebException, span="55-55", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_query_string_and_uri_correctly()", file="RequestExtensionsFixture.cs"];
m12_25 [label="Exit Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_query_string_and_uri_correctly()", span="37-37", cluster="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture.Should_set_query_string_and_uri_correctly()", file="RequestExtensionsFixture.cs"];
m12_106 [label="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture", span="", file="RequestExtensionsFixture.cs"];
m12_107 [label=fakeEngine, span="", file="RequestExtensionsFixture.cs"];
m12_108 [label=fakeBootstrapper, span="", file="RequestExtensionsFixture.cs"];
m12_109 [label=fakeEngine, span="", file="RequestExtensionsFixture.cs"];
m12_110 [label=fakeBootstrapper, span="", file="RequestExtensionsFixture.cs"];
m13_60 [label="Entry Nancy.Tests.Unit.RequestFixture.Should_set_method_parameter_value_to_method_property_when_initialized()", span="104-104", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_method_parameter_value_to_method_property_when_initialized()", file="RequestFixture.cs"];
m13_63 [label="request.Method.ShouldEqual(method)", span="113-113", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_method_parameter_value_to_method_property_when_initialized()", file="RequestFixture.cs"];
m13_61 [label="string method = ''GET''", span="107-107", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_method_parameter_value_to_method_property_when_initialized()", file="RequestFixture.cs"];
m13_62 [label="var request = new Request(method, ''/'', ''http'')", span="110-110", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_method_parameter_value_to_method_property_when_initialized()", file="RequestFixture.cs"];
m13_64 [label="Exit Nancy.Tests.Unit.RequestFixture.Should_set_method_parameter_value_to_method_property_when_initialized()", span="104-104", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_method_parameter_value_to_method_property_when_initialized()", file="RequestFixture.cs"];
m13_38 [label="Entry Nancy.Request.Request(string, string, string)", span="27-27", cluster="Nancy.Request.Request(string, string, string)", file="RequestFixture.cs"];
m13_46 [label="Entry Nancy.Tests.Unit.RequestFixture.Should_throw_argumentnullexception_when_initialized_with_null_uri()", span="82-82", cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentnullexception_when_initialized_with_null_uri()", file="RequestFixture.cs"];
m13_47 [label="var exception =\r\n                Record.Exception(() => new Request(''GET'', null, ''http''))", span="85-86", cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentnullexception_when_initialized_with_null_uri()", file="RequestFixture.cs"];
m13_48 [label="exception.ShouldBeOfType<ArgumentNullException>()", span="89-89", cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentnullexception_when_initialized_with_null_uri()", file="RequestFixture.cs"];
m13_49 [label="Exit Nancy.Tests.Unit.RequestFixture.Should_throw_argumentnullexception_when_initialized_with_null_uri()", span="82-82", cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentnullexception_when_initialized_with_null_uri()", file="RequestFixture.cs"];
m13_130 [label="Entry Nancy.Tests.Unit.RequestFixture.Should_set_name_on_file_extracted_from_multipart_form_data_body()", span="278-278", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_name_on_file_extracted_from_multipart_form_data_body()", file="RequestFixture.cs"];
m13_131 [label="var memory =\r\n                new MemoryStream(BuildMultipartFileValues(new Dictionary<string, Tuple<string, string>>\r\n                {\r\n                    { ''sample.txt'', new Tuple<string, string>(''content/type'', ''some test content'')}\r\n                }))", span="281-285", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_name_on_file_extracted_from_multipart_form_data_body()", file="RequestFixture.cs"];
m13_132 [label="var headers =\r\n                new Dictionary<string, IEnumerable<string>>\r\n                {\r\n                    { ''content-type'', new[] { ''multipart/form-data; boundary=----NancyFormBoundary'' } }\r\n                }", span="287-291", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_name_on_file_extracted_from_multipart_form_data_body()", file="RequestFixture.cs"];
m13_133 [label="var request = new Request(''POST'', ''/'', headers, CreateRequestStream(memory), ''http'')", span="294-294", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_name_on_file_extracted_from_multipart_form_data_body()", file="RequestFixture.cs"];
m13_134 [label="request.Files.First().Name.ShouldEqual(''sample.txt'')", span="297-297", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_name_on_file_extracted_from_multipart_form_data_body()", file="RequestFixture.cs"];
m13_135 [label="Exit Nancy.Tests.Unit.RequestFixture.Should_set_name_on_file_extracted_from_multipart_form_data_body()", span="278-278", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_name_on_file_extracted_from_multipart_form_data_body()", file="RequestFixture.cs"];
m13_208 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)", file="RequestFixture.cs"];
m13_16 [label="Entry Nancy.Request.Request(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, Nancy.IO.RequestStream, string, string)", span="41-41", cluster="Nancy.Request.Request(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, Nancy.IO.RequestStream, string, string)", file="RequestFixture.cs"];
m13_114 [label="Entry Nancy.Tests.Unit.RequestFixture.Should_set_extracted_files_to_files_collection_when_body_content_type_is_multipart_form_data()", span="232-232", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extracted_files_to_files_collection_when_body_content_type_is_multipart_form_data()", file="RequestFixture.cs"];
m13_115 [label="var memory =\r\n                new MemoryStream(BuildMultipartFileValues(new Dictionary<string, Tuple<string, string>>\r\n                {\r\n                    { ''test'', new Tuple<string, string>(''content/type'', ''some test content'')}\r\n                }))", span="235-239", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extracted_files_to_files_collection_when_body_content_type_is_multipart_form_data()", file="RequestFixture.cs"];
m13_116 [label="var headers =\r\n                new Dictionary<string, IEnumerable<string>>\r\n                {\r\n                    { ''content-type'', new[] { ''multipart/form-data; boundary=----NancyFormBoundary'' } }\r\n                }", span="241-245", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extracted_files_to_files_collection_when_body_content_type_is_multipart_form_data()", file="RequestFixture.cs"];
m13_117 [label="var request = new Request(''POST'', ''/'', headers, CreateRequestStream(memory), ''http'')", span="248-248", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extracted_files_to_files_collection_when_body_content_type_is_multipart_form_data()", file="RequestFixture.cs"];
m13_118 [label="request.Files.ShouldHaveCount(1)", span="251-251", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extracted_files_to_files_collection_when_body_content_type_is_multipart_form_data()", file="RequestFixture.cs"];
m13_119 [label="Exit Nancy.Tests.Unit.RequestFixture.Should_set_extracted_files_to_files_collection_when_body_content_type_is_multipart_form_data()", span="232-232", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extracted_files_to_files_collection_when_body_content_type_is_multipart_form_data()", file="RequestFixture.cs"];
m13_81 [label="Entry object.ShouldBeSameAs(object)", span="115-115", cluster="object.ShouldBeSameAs(object)", file="RequestFixture.cs"];
m13_104 [label="Entry Nancy.Tests.Unit.RequestFixture.Should_set_extracted_form_data_from_body_when_content_type_is_multipart_form_data()", span="207-207", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extracted_form_data_from_body_when_content_type_is_multipart_form_data()", file="RequestFixture.cs"];
m13_105 [label="var memory =\r\n                new MemoryStream(BuildMultipartFormValues(new Dictionary<string, string>\r\n                {\r\n                    { ''name'', ''John Doe''},\r\n                    { ''age'', ''42''}\r\n                }))", span="210-215", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extracted_form_data_from_body_when_content_type_is_multipart_form_data()", file="RequestFixture.cs"];
m13_106 [label="var headers =\r\n                new Dictionary<string, IEnumerable<string>>\r\n                {\r\n                    { ''content-type'', new[] { ''multipart/form-data; boundary=----NancyFormBoundary'' } }\r\n                }", span="217-221", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extracted_form_data_from_body_when_content_type_is_multipart_form_data()", file="RequestFixture.cs"];
m13_107 [label="var request = new Request(''POST'', ''/'', headers, CreateRequestStream(memory), ''http'')", span="224-224", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extracted_form_data_from_body_when_content_type_is_multipart_form_data()", file="RequestFixture.cs"];
m13_108 [label="((string)request.Form.name).ShouldEqual(''John Doe'')", span="227-227", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extracted_form_data_from_body_when_content_type_is_multipart_form_data()", file="RequestFixture.cs"];
m13_109 [label="((string)request.Form.age).ShouldEqual(''42'')", span="228-228", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extracted_form_data_from_body_when_content_type_is_multipart_form_data()", file="RequestFixture.cs"];
m13_110 [label="Exit Nancy.Tests.Unit.RequestFixture.Should_set_extracted_form_data_from_body_when_content_type_is_multipart_form_data()", span="207-207", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extracted_form_data_from_body_when_content_type_is_multipart_form_data()", file="RequestFixture.cs"];
m13_111 [label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0", cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="RequestFixture.cs"];
m13_121 [label="Entry Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", span="427-427", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="RequestFixture.cs"];
m13_212 [label="var boundaryBuilder = new StringBuilder()", span="429-429", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="RequestFixture.cs"];
m13_213 [label="formValues.Keys", span="431-431", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="RequestFixture.cs"];
m13_223 [label="boundaryBuilder.AppendFormat(''Content-Type: {0}'', formValues[key].Item1)", span="442-442", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="RequestFixture.cs"];
m13_228 [label="boundaryBuilder.Append(formValues[key].Item2)", span="447-447", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="RequestFixture.cs"];
m13_232 [label="var bytes =\r\n                Encoding.ASCII.GetBytes(boundaryBuilder.ToString())", span="454-455", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="RequestFixture.cs"];
m13_233 [label="return bytes;", span="457-457", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="RequestFixture.cs"];
m13_214 [label="boundaryBuilder.Append('\r')", span="433-433", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="RequestFixture.cs"];
m13_215 [label="boundaryBuilder.Append('\n')", span="434-434", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="RequestFixture.cs"];
m13_216 [label="boundaryBuilder.Append(''--'')", span="435-435", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="RequestFixture.cs"];
m13_217 [label="boundaryBuilder.Append(''----NancyFormBoundary'')", span="436-436", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="RequestFixture.cs"];
m13_218 [label="boundaryBuilder.Append('\r')", span="437-437", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="RequestFixture.cs"];
m13_219 [label="boundaryBuilder.Append('\n')", span="438-438", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="RequestFixture.cs"];
m13_220 [label="boundaryBuilder.AppendFormat(''Content-Disposition: form-data; name=\''whatever\''; filename=\''{0}\'''', key)", span="439-439", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="RequestFixture.cs"];
m13_221 [label="boundaryBuilder.Append('\r')", span="440-440", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="RequestFixture.cs"];
m13_222 [label="boundaryBuilder.Append('\n')", span="441-441", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="RequestFixture.cs"];
m13_224 [label="boundaryBuilder.Append('\r')", span="443-443", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="RequestFixture.cs"];
m13_225 [label="boundaryBuilder.Append('\n')", span="444-444", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="RequestFixture.cs"];
m13_226 [label="boundaryBuilder.Append('\r')", span="445-445", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="RequestFixture.cs"];
m13_227 [label="boundaryBuilder.Append('\n')", span="446-446", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="RequestFixture.cs"];
m13_229 [label="boundaryBuilder.Append('\r')", span="450-450", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="RequestFixture.cs"];
m13_230 [label="boundaryBuilder.Append('\n')", span="451-451", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="RequestFixture.cs"];
m13_231 [label="boundaryBuilder.Append(''------NancyFormBoundary--'')", span="452-452", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="RequestFixture.cs"];
m13_234 [label="Exit Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", span="427-427", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="RequestFixture.cs"];
m13_17 [label="Entry object.ShouldEqual(object)", span="80-80", cluster="object.ShouldEqual(object)", file="RequestFixture.cs"];
m13_162 [label="Entry Nancy.Tests.Unit.RequestFixture.Should_throw_argumentnullexception_when_initialized_with_null_protocol()", span="353-353", cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentnullexception_when_initialized_with_null_protocol()", file="RequestFixture.cs"];
m13_163 [label="var exception =\r\n                Record.Exception(() => new Request(''GET'', ''/'', null))", span="356-357", cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentnullexception_when_initialized_with_null_protocol()", file="RequestFixture.cs"];
m13_164 [label="exception.ShouldBeOfType<ArgumentNullException>()", span="360-360", cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentnullexception_when_initialized_with_null_protocol()", file="RequestFixture.cs"];
m13_165 [label="Exit Nancy.Tests.Unit.RequestFixture.Should_throw_argumentnullexception_when_initialized_with_null_protocol()", span="353-353", cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentnullexception_when_initialized_with_null_protocol()", file="RequestFixture.cs"];
m13_206 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()", file="RequestFixture.cs"];
m13_11 [label="Entry Nancy.Tests.Unit.RequestFixture.CreateRequestStream()", span="387-387", cluster="Nancy.Tests.Unit.RequestFixture.CreateRequestStream()", file="RequestFixture.cs"];
m13_181 [label="return CreateRequestStream(new MemoryStream());", span="389-389", cluster="Nancy.Tests.Unit.RequestFixture.CreateRequestStream()", file="RequestFixture.cs"];
m13_182 [label="Exit Nancy.Tests.Unit.RequestFixture.CreateRequestStream()", span="387-387", cluster="Nancy.Tests.Unit.RequestFixture.CreateRequestStream()", file="RequestFixture.cs"];
m13_122 [label="Entry System.Collections.Generic.IEnumerable<T>.ShouldHaveCount<T>(int)", span="65-65", cluster="System.Collections.Generic.IEnumerable<T>.ShouldHaveCount<T>(int)", file="RequestFixture.cs"];
m13_142 [label="Entry Nancy.Tests.Unit.RequestFixture.GetStringValue(System.IO.Stream)", span="323-323", cluster="Nancy.Tests.Unit.RequestFixture.GetStringValue(System.IO.Stream)", file="RequestFixture.cs"];
m13_143 [label="var reader = new StreamReader(stream)", span="325-325", cluster="Nancy.Tests.Unit.RequestFixture.GetStringValue(System.IO.Stream)", file="RequestFixture.cs"];
m13_144 [label="return reader.ReadToEnd();", span="326-326", cluster="Nancy.Tests.Unit.RequestFixture.GetStringValue(System.IO.Stream)", file="RequestFixture.cs"];
m13_145 [label="Exit Nancy.Tests.Unit.RequestFixture.GetStringValue(System.IO.Stream)", span="323-323", cluster="Nancy.Tests.Unit.RequestFixture.GetStringValue(System.IO.Stream)", file="RequestFixture.cs"];
m13_210 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="RequestFixture.cs"];
m13_93 [label="Entry Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded_with_character_set()", span="183-183", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded_with_character_set()", file="RequestFixture.cs"];
m13_94 [label="string bodyContent = ''name=John+Doe&gender=male&family=5&city=kent&city=miami&other=abc%0D%0Adef&nickname=J%26D''", span="186-186", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded_with_character_set()", file="RequestFixture.cs"];
m13_95 [label="var memory = CreateRequestStream()", span="187-187", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded_with_character_set()", file="RequestFixture.cs"];
m13_98 [label="writer.Flush()", span="190-190", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded_with_character_set()", file="RequestFixture.cs"];
m13_100 [label="var headers =\r\n                new Dictionary<string, IEnumerable<string>>\r\n                {\r\n                    { ''content-type'', new[] { ''application/x-www-form-urlencoded; charset=UTF-8'' } }\r\n                }", span="193-197", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded_with_character_set()", file="RequestFixture.cs"];
m13_97 [label="writer.Write(bodyContent)", span="189-189", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded_with_character_set()", file="RequestFixture.cs"];
m13_96 [label="var writer = new StreamWriter(memory)", span="188-188", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded_with_character_set()", file="RequestFixture.cs"];
m13_99 [label="memory.Position = 0", span="191-191", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded_with_character_set()", file="RequestFixture.cs"];
m13_101 [label="var request = new Request(''POST'', ''/'', headers, memory, ''http'')", span="200-200", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded_with_character_set()", file="RequestFixture.cs"];
m13_102 [label="((string)request.Form.name).ShouldEqual(''John Doe'')", span="203-203", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded_with_character_set()", file="RequestFixture.cs"];
m13_103 [label="Exit Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded_with_character_set()", span="183-183", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded_with_character_set()", file="RequestFixture.cs"];
m13_76 [label="Entry Nancy.Tests.Unit.RequestFixture.Should_set_body_parameter_value_to_body_property_when_initialized()", span="146-146", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_body_parameter_value_to_body_property_when_initialized()", file="RequestFixture.cs"];
m13_77 [label="var body = CreateRequestStream()", span="149-149", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_body_parameter_value_to_body_property_when_initialized()", file="RequestFixture.cs"];
m13_78 [label="var request = new Request(''GET'', ''/'', new Dictionary<string, IEnumerable<string>>(), body, ''http'')", span="152-152", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_body_parameter_value_to_body_property_when_initialized()", file="RequestFixture.cs"];
m13_79 [label="request.Body.ShouldBeSameAs(body)", span="155-155", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_body_parameter_value_to_body_property_when_initialized()", file="RequestFixture.cs"];
m13_80 [label="Exit Nancy.Tests.Unit.RequestFixture.Should_set_body_parameter_value_to_body_property_when_initialized()", span="146-146", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_body_parameter_value_to_body_property_when_initialized()", file="RequestFixture.cs"];
m13_209 [label="Entry System.Text.StringBuilder.AppendFormat(string, object)", span="0-0", cluster="System.Text.StringBuilder.AppendFormat(string, object)", file="RequestFixture.cs"];
m13_161 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="RequestFixture.cs"];
m13_29 [label="Entry Nancy.Tests.Unit.RequestFixture.Should_throw_argumentnullexception_when_initialized_with_null_method()", span="60-60", cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentnullexception_when_initialized_with_null_method()", file="RequestFixture.cs"];
m13_30 [label="var exception =\r\n                Record.Exception(() => new Request(null, ''/'', ''http''))", span="63-64", cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentnullexception_when_initialized_with_null_method()", file="RequestFixture.cs"];
m13_31 [label="exception.ShouldBeOfType<ArgumentNullException>()", span="67-67", cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentnullexception_when_initialized_with_null_method()", file="RequestFixture.cs"];
m13_32 [label="Exit Nancy.Tests.Unit.RequestFixture.Should_throw_argumentnullexception_when_initialized_with_null_method()", span="60-60", cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentnullexception_when_initialized_with_null_method()", file="RequestFixture.cs"];
m13_12 [label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0", cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", file="RequestFixture.cs"];
m13_70 [label="Entry Nancy.Tests.Unit.RequestFixture.Should_set_header_parameter_value_to_header_property_when_initialized()", span="130-130", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_header_parameter_value_to_header_property_when_initialized()", file="RequestFixture.cs"];
m13_72 [label="var request = new Request(''GET'', ''/'', headers, CreateRequestStream(), ''http'')", span="139-139", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_header_parameter_value_to_header_property_when_initialized()", file="RequestFixture.cs"];
m13_71 [label="var headers = new Dictionary<string, IEnumerable<string>>()\r\n                {\r\n                    { ''content-type'', new[] {''foo''} }\r\n                }", span="133-136", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_header_parameter_value_to_header_property_when_initialized()", file="RequestFixture.cs"];
m13_73 [label="request.Headers.ContentType.ShouldNotBeEmpty()", span="142-142", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_header_parameter_value_to_header_property_when_initialized()", file="RequestFixture.cs"];
m13_74 [label="Exit Nancy.Tests.Unit.RequestFixture.Should_set_header_parameter_value_to_header_property_when_initialized()", span="130-130", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_header_parameter_value_to_header_property_when_initialized()", file="RequestFixture.cs"];
m13_176 [label="Entry Nancy.Tests.Unit.RequestFixture.Should_set_protocol_parameter_value_to_protocol_property_when_initialized()", span="375-375", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_protocol_parameter_value_to_protocol_property_when_initialized()", file="RequestFixture.cs"];
m13_179 [label="request.Url.Scheme.ShouldEqual(protocol)", span="384-384", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_protocol_parameter_value_to_protocol_property_when_initialized()", file="RequestFixture.cs"];
m13_177 [label="string protocol = ''http''", span="378-378", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_protocol_parameter_value_to_protocol_property_when_initialized()", file="RequestFixture.cs"];
m13_178 [label="var request = new Request(''GET'', ''/'', protocol)", span="381-381", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_protocol_parameter_value_to_protocol_property_when_initialized()", file="RequestFixture.cs"];
m13_180 [label="Exit Nancy.Tests.Unit.RequestFixture.Should_set_protocol_parameter_value_to_protocol_property_when_initialized()", span="375-375", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_protocol_parameter_value_to_protocol_property_when_initialized()", file="RequestFixture.cs"];
m13_15 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RequestFixture.cs"];
m13_169 [label="Entry Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_an_empty_protocol()", span="364-364", cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_an_empty_protocol()", file="RequestFixture.cs"];
m13_170 [label="var exception =\r\n                Record.Exception(() => new Request(''GET'', ''/'', string.Empty))", span="367-368", cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_an_empty_protocol()", file="RequestFixture.cs"];
m13_171 [label="exception.ShouldBeOfType<ArgumentOutOfRangeException>()", span="371-371", cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_an_empty_protocol()", file="RequestFixture.cs"];
m13_172 [label="Exit Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_an_empty_protocol()", span="364-364", cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_an_empty_protocol()", file="RequestFixture.cs"];
m13_120 [label="Entry System.Tuple<T1, T2>.Tuple(T1, T2)", span="0-0", cluster="System.Tuple<T1, T2>.Tuple(T1, T2)", file="RequestFixture.cs"];
m13_207 [label="Entry System.Text.StringBuilder.Append(char)", span="0-0", cluster="System.Text.StringBuilder.Append(char)", file="RequestFixture.cs"];
m13_0 [label="Entry Nancy.Bootstrapper.IStartup.Initialize(Nancy.Bootstrapper.IPipelines)", span="28-28", cluster="Nancy.Bootstrapper.IStartup.Initialize(Nancy.Bootstrapper.IPipelines)", file="RequestFixture.cs"];
m13_2 [label="var memory = CreateRequestStream()", span="18-18", cluster="Nancy.Tests.Unit.RequestFixture.Should_override_request_method_on_post()", file="RequestFixture.cs"];
m13_5 [label="writer.Flush()", span="21-21", cluster="Nancy.Tests.Unit.RequestFixture.Should_override_request_method_on_post()", file="RequestFixture.cs"];
m13_7 [label="var headers =\r\n                new Dictionary<string, IEnumerable<string>> { { ''content-type'', new[] { ''application/x-www-form-urlencoded'' } } }", span="24-25", cluster="Nancy.Tests.Unit.RequestFixture.Should_override_request_method_on_post()", file="RequestFixture.cs"];
m13_3 [label="var writer = new StreamWriter(memory)", span="19-19", cluster="Nancy.Tests.Unit.RequestFixture.Should_override_request_method_on_post()", file="RequestFixture.cs"];
m13_1 [label="Exit Nancy.Bootstrapper.IStartup.Initialize(Nancy.Bootstrapper.IPipelines)", span="28-28", cluster="Nancy.Bootstrapper.IStartup.Initialize(Nancy.Bootstrapper.IPipelines)", file="RequestFixture.cs"];
m13_6 [label="memory.Position = 0", span="22-22", cluster="Nancy.Tests.Unit.RequestFixture.Should_override_request_method_on_post()", file="RequestFixture.cs"];
m13_8 [label="var request = new Request(''POST'', ''/'', headers, memory, ''http'')", span="28-28", cluster="Nancy.Tests.Unit.RequestFixture.Should_override_request_method_on_post()", file="RequestFixture.cs"];
m13_4 [label="writer.Write(bodyContent)", span="20-20", cluster="Nancy.Tests.Unit.RequestFixture.Should_override_request_method_on_post()", file="RequestFixture.cs"];
m13_9 [label="request.Method.ShouldEqual(''GET'')", span="31-31", cluster="Nancy.Tests.Unit.RequestFixture.Should_override_request_method_on_post()", file="RequestFixture.cs"];
m13_10 [label="Exit Nancy.Tests.Unit.RequestFixture.Should_override_request_method_on_post()", span="14-14", cluster="Nancy.Tests.Unit.RequestFixture.Should_override_request_method_on_post()", file="RequestFixture.cs"];
m13_113 [label="Entry Nancy.Tests.Unit.RequestFixture.CreateRequestStream(System.IO.Stream)", span="392-392", cluster="Nancy.Tests.Unit.RequestFixture.CreateRequestStream(System.IO.Stream)", file="RequestFixture.cs"];
m13_183 [label="return RequestStream.FromStream(stream);", span="394-394", cluster="Nancy.Tests.Unit.RequestFixture.CreateRequestStream(System.IO.Stream)", file="RequestFixture.cs"];
m13_184 [label="Exit Nancy.Tests.Unit.RequestFixture.CreateRequestStream(System.IO.Stream)", span="392-392", cluster="Nancy.Tests.Unit.RequestFixture.CreateRequestStream(System.IO.Stream)", file="RequestFixture.cs"];
m13_112 [label="Entry Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", span="397-397", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="RequestFixture.cs"];
m13_186 [label="var boundaryBuilder = new StringBuilder()", span="399-399", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="RequestFixture.cs"];
m13_187 [label="formValues.Keys", span="401-401", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="RequestFixture.cs"];
m13_199 [label="boundaryBuilder.Append(formValues[key])", span="414-414", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="RequestFixture.cs"];
m13_203 [label="var bytes =\r\n                Encoding.ASCII.GetBytes(boundaryBuilder.ToString())", span="421-422", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="RequestFixture.cs"];
m13_204 [label="return bytes;", span="424-424", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="RequestFixture.cs"];
m13_188 [label="boundaryBuilder.Append('\r')", span="403-403", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="RequestFixture.cs"];
m13_189 [label="boundaryBuilder.Append('\n')", span="404-404", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="RequestFixture.cs"];
m13_190 [label="boundaryBuilder.Append(''--'')", span="405-405", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="RequestFixture.cs"];
m13_191 [label="boundaryBuilder.Append(''----NancyFormBoundary'')", span="406-406", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="RequestFixture.cs"];
m13_192 [label="boundaryBuilder.Append('\r')", span="407-407", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="RequestFixture.cs"];
m13_193 [label="boundaryBuilder.Append('\n')", span="408-408", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="RequestFixture.cs"];
m13_194 [label="boundaryBuilder.AppendFormat(''Content-Disposition: form-data; name=\''{0}\'''', key)", span="409-409", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="RequestFixture.cs"];
m13_195 [label="boundaryBuilder.Append('\r')", span="410-410", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="RequestFixture.cs"];
m13_196 [label="boundaryBuilder.Append('\n')", span="411-411", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="RequestFixture.cs"];
m13_197 [label="boundaryBuilder.Append('\r')", span="412-412", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="RequestFixture.cs"];
m13_198 [label="boundaryBuilder.Append('\n')", span="413-413", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="RequestFixture.cs"];
m13_200 [label="boundaryBuilder.Append('\r')", span="417-417", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="RequestFixture.cs"];
m13_201 [label="boundaryBuilder.Append('\n')", span="418-418", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="RequestFixture.cs"];
m13_202 [label="boundaryBuilder.Append(''------NancyFormBoundary--'')", span="419-419", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="RequestFixture.cs"];
m13_205 [label="Exit Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", span="397-397", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="RequestFixture.cs"];
m13_129 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="RequestFixture.cs"];
m13_39 [label="Entry Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_empty_method()", span="71-71", cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_empty_method()", file="RequestFixture.cs"];
m13_40 [label="var exception =\r\n                Record.Exception(() => new Request(string.Empty, ''/'', ''http''))", span="74-75", cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_empty_method()", file="RequestFixture.cs"];
m13_41 [label="exception.ShouldBeOfType<ArgumentOutOfRangeException>()", span="78-78", cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_empty_method()", file="RequestFixture.cs"];
m13_42 [label="Exit Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_empty_method()", span="71-71", cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_empty_method()", file="RequestFixture.cs"];
m13_173 [label="Entry lambda expression", span="368-368", cluster="lambda expression", file="RequestFixture.cs"];
m13_36 [label="new Request(null, ''/'', ''http'')", span="64-64", cluster="lambda expression", file="RequestFixture.cs"];
m13_44 [label="new Request(string.Empty, ''/'', ''http'')", span="75-75", cluster="lambda expression", file="RequestFixture.cs"];
m13_51 [label="new Request(''GET'', null, ''http'')", span="86-86", cluster="lambda expression", file="RequestFixture.cs"];
m13_58 [label="new Request(''GET'', string.Empty, ''http'')", span="97-97", cluster="lambda expression", file="RequestFixture.cs"];
m13_167 [label="new Request(''GET'', ''/'', null)", span="357-357", cluster="lambda expression", file="RequestFixture.cs"];
m13_174 [label="new Request(''GET'', ''/'', string.Empty)", span="368-368", cluster="lambda expression", file="RequestFixture.cs"];
m13_35 [label="Entry lambda expression", span="64-64", cluster="lambda expression", file="RequestFixture.cs"];
m13_37 [label="Exit lambda expression", span="64-64", cluster="lambda expression", file="RequestFixture.cs"];
m13_43 [label="Entry lambda expression", span="75-75", cluster="lambda expression", file="RequestFixture.cs"];
m13_45 [label="Exit lambda expression", span="75-75", cluster="lambda expression", file="RequestFixture.cs"];
m13_50 [label="Entry lambda expression", span="86-86", cluster="lambda expression", file="RequestFixture.cs"];
m13_52 [label="Exit lambda expression", span="86-86", cluster="lambda expression", file="RequestFixture.cs"];
m13_57 [label="Entry lambda expression", span="97-97", cluster="lambda expression", file="RequestFixture.cs"];
m13_59 [label="Exit lambda expression", span="97-97", cluster="lambda expression", file="RequestFixture.cs"];
m13_166 [label="Entry lambda expression", span="357-357", cluster="lambda expression", file="RequestFixture.cs"];
m13_168 [label="Exit lambda expression", span="357-357", cluster="lambda expression", file="RequestFixture.cs"];
m13_175 [label="Exit lambda expression", span="368-368", cluster="lambda expression", file="RequestFixture.cs"];
m13_53 [label="Entry Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_empty_uri()", span="93-93", cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_empty_uri()", file="RequestFixture.cs"];
m13_54 [label="var exception =\r\n                Record.Exception(() => new Request(''GET'', string.Empty, ''http''))", span="96-97", cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_empty_uri()", file="RequestFixture.cs"];
m13_55 [label="exception.ShouldBeOfType<ArgumentOutOfRangeException>()", span="100-100", cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_empty_uri()", file="RequestFixture.cs"];
m13_56 [label="Exit Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_empty_uri()", span="93-93", cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_empty_uri()", file="RequestFixture.cs"];
m13_65 [label="Entry Nancy.Tests.Unit.RequestFixture.Should_set_uri_parameter_value_to_uri_property_when_initialized()", span="117-117", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_uri_parameter_value_to_uri_property_when_initialized()", file="RequestFixture.cs"];
m13_68 [label="request.Path.ShouldEqual(path)", span="126-126", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_uri_parameter_value_to_uri_property_when_initialized()", file="RequestFixture.cs"];
m13_66 [label="string path = ''/''", span="120-120", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_uri_parameter_value_to_uri_property_when_initialized()", file="RequestFixture.cs"];
m13_67 [label="var request = new Request(''GET'', path, ''http'')", span="123-123", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_uri_parameter_value_to_uri_property_when_initialized()", file="RequestFixture.cs"];
m13_69 [label="Exit Nancy.Tests.Unit.RequestFixture.Should_set_uri_parameter_value_to_uri_property_when_initialized()", span="117-117", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_uri_parameter_value_to_uri_property_when_initialized()", file="RequestFixture.cs"];
m13_160 [label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0", cluster="System.IO.MemoryStream.MemoryStream()", file="RequestFixture.cs"];
m13_18 [label="Entry Nancy.Tests.Unit.RequestFixture.Should_only_override_method_on_post(string)", span="39-39", cluster="Nancy.Tests.Unit.RequestFixture.Should_only_override_method_on_post(string)", file="RequestFixture.cs"];
m13_20 [label="var memory = CreateRequestStream()", span="43-43", cluster="Nancy.Tests.Unit.RequestFixture.Should_only_override_method_on_post(string)", file="RequestFixture.cs"];
m13_23 [label="writer.Flush()", span="46-46", cluster="Nancy.Tests.Unit.RequestFixture.Should_only_override_method_on_post(string)", file="RequestFixture.cs"];
m13_25 [label="var headers =\r\n                new Dictionary<string, IEnumerable<string>> { { ''content-type'', new[] { ''application/x-www-form-urlencoded'' } } }", span="49-50", cluster="Nancy.Tests.Unit.RequestFixture.Should_only_override_method_on_post(string)", file="RequestFixture.cs"];
m13_21 [label="var writer = new StreamWriter(memory)", span="44-44", cluster="Nancy.Tests.Unit.RequestFixture.Should_only_override_method_on_post(string)", file="RequestFixture.cs"];
m13_19 [label="string bodyContent = ''_method=TEST''", span="42-42", cluster="Nancy.Tests.Unit.RequestFixture.Should_only_override_method_on_post(string)", file="RequestFixture.cs"];
m13_24 [label="memory.Position = 0", span="47-47", cluster="Nancy.Tests.Unit.RequestFixture.Should_only_override_method_on_post(string)", file="RequestFixture.cs"];
m13_26 [label="var request = new Request(method, ''/'', headers, memory, ''http'')", span="53-53", cluster="Nancy.Tests.Unit.RequestFixture.Should_only_override_method_on_post(string)", file="RequestFixture.cs"];
m13_22 [label="writer.Write(bodyContent)", span="45-45", cluster="Nancy.Tests.Unit.RequestFixture.Should_only_override_method_on_post(string)", file="RequestFixture.cs"];
m13_27 [label="request.Method.ShouldEqual(method)", span="56-56", cluster="Nancy.Tests.Unit.RequestFixture.Should_only_override_method_on_post(string)", file="RequestFixture.cs"];
m13_28 [label="Exit Nancy.Tests.Unit.RequestFixture.Should_only_override_method_on_post(string)", span="39-39", cluster="Nancy.Tests.Unit.RequestFixture.Should_only_override_method_on_post(string)", file="RequestFixture.cs"];
m13_82 [label="Entry Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded()", span="159-159", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded()", file="RequestFixture.cs"];
m13_88 [label="memory.Position = 0", span="167-167", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded()", color=green, community=0, file="RequestFixture.cs"];
m13_84 [label="var memory = CreateRequestStream()", span="163-163", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded()", file="RequestFixture.cs"];
m13_87 [label="writer.Flush()", span="166-166", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded()", file="RequestFixture.cs"];
m13_89 [label="var headers = \r\n                new Dictionary<string, IEnumerable<string>>\r\n                {\r\n                    { ''content-type'', new[] { ''application/x-www-form-urlencoded'' } }\r\n                }", span="169-173", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded()", file="RequestFixture.cs"];
m13_83 [label="string bodyContent = ''name=John+Doe&gender=male&family=5&city=kent&city=miami&other=abc%0D%0Adef&nickname=J%26D''", span="162-162", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded()", file="RequestFixture.cs"];
m13_85 [label="var writer = new StreamWriter(memory)", span="164-164", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded()", file="RequestFixture.cs"];
m13_90 [label="var request = new Request(''POST'', ''/'', headers, memory, ''http'')", span="176-176", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded()", file="RequestFixture.cs"];
m13_86 [label="writer.Write(bodyContent)", span="165-165", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded()", file="RequestFixture.cs"];
m13_91 [label="((string)request.Form.name).ShouldEqual(''John Doe'')", span="179-179", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded()", file="RequestFixture.cs"];
m13_92 [label="Exit Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded()", span="159-159", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded()", file="RequestFixture.cs"];
m13_13 [label="Entry System.IO.StreamWriter.Write(string)", span="0-0", cluster="System.IO.StreamWriter.Write(string)", file="RequestFixture.cs"];
m13_33 [label="Entry Unk.Exception", span="", cluster="Unk.Exception", file="RequestFixture.cs"];
m13_146 [label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0", cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="RequestFixture.cs"];
m13_148 [label="Entry Nancy.Tests.Unit.RequestFixture.Should_be_able_to_invoke_form_repeatedly()", span="330-330", cluster="Nancy.Tests.Unit.RequestFixture.Should_be_able_to_invoke_form_repeatedly()", file="RequestFixture.cs"];
m13_149 [label="string bodyContent = ''name=John+Doe&gender=male&family=5&city=kent&city=miami&other=abc%0D%0Adef&nickname=J%26D''", span="332-332", cluster="Nancy.Tests.Unit.RequestFixture.Should_be_able_to_invoke_form_repeatedly()", file="RequestFixture.cs"];
m13_153 [label="writer.Flush()", span="336-336", cluster="Nancy.Tests.Unit.RequestFixture.Should_be_able_to_invoke_form_repeatedly()", file="RequestFixture.cs"];
m13_155 [label="var headers =\r\n				new Dictionary<string, IEnumerable<string>>\r\n                {\r\n                    { ''content-type'', new[] { ''application/x-www-form-urlencoded'' } }\r\n                }", span="339-343", cluster="Nancy.Tests.Unit.RequestFixture.Should_be_able_to_invoke_form_repeatedly()", file="RequestFixture.cs"];
m13_150 [label="var memory = new MemoryStream()", span="333-333", cluster="Nancy.Tests.Unit.RequestFixture.Should_be_able_to_invoke_form_repeatedly()", file="RequestFixture.cs"];
m13_152 [label="writer.Write(bodyContent)", span="335-335", cluster="Nancy.Tests.Unit.RequestFixture.Should_be_able_to_invoke_form_repeatedly()", file="RequestFixture.cs"];
m13_151 [label="var writer = new StreamWriter(memory)", span="334-334", cluster="Nancy.Tests.Unit.RequestFixture.Should_be_able_to_invoke_form_repeatedly()", file="RequestFixture.cs"];
m13_156 [label="var request = new Request(''POST'', ''/'', headers, CreateRequestStream(memory), ''http'')", span="346-346", cluster="Nancy.Tests.Unit.RequestFixture.Should_be_able_to_invoke_form_repeatedly()", file="RequestFixture.cs"];
m13_154 [label="memory.Position = 0", span="337-337", cluster="Nancy.Tests.Unit.RequestFixture.Should_be_able_to_invoke_form_repeatedly()", file="RequestFixture.cs"];
m13_157 [label="request.Form.ToString()", span="347-347", cluster="Nancy.Tests.Unit.RequestFixture.Should_be_able_to_invoke_form_repeatedly()", file="RequestFixture.cs"];
m13_158 [label="((string)request.Form.name).ShouldEqual(''John Doe'')", span="349-349", cluster="Nancy.Tests.Unit.RequestFixture.Should_be_able_to_invoke_form_repeatedly()", file="RequestFixture.cs"];
m13_159 [label="Exit Nancy.Tests.Unit.RequestFixture.Should_be_able_to_invoke_form_repeatedly()", span="330-330", cluster="Nancy.Tests.Unit.RequestFixture.Should_be_able_to_invoke_form_repeatedly()", file="RequestFixture.cs"];
m13_14 [label="Entry System.IO.StreamWriter.Flush()", span="0-0", cluster="System.IO.StreamWriter.Flush()", file="RequestFixture.cs"];
m13_123 [label="Entry Nancy.Tests.Unit.RequestFixture.Should_set_content_type_on_file_extracted_from_multipart_form_data_body()", span="255-255", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_content_type_on_file_extracted_from_multipart_form_data_body()", file="RequestFixture.cs"];
m13_124 [label="var memory =\r\n                new MemoryStream(BuildMultipartFileValues(new Dictionary<string, Tuple<string, string>>\r\n                {\r\n                    { ''sample.txt'', new Tuple<string, string>(''content/type'', ''some test content'')}\r\n                }))", span="258-262", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_content_type_on_file_extracted_from_multipart_form_data_body()", file="RequestFixture.cs"];
m13_125 [label="var headers =\r\n                new Dictionary<string, IEnumerable<string>>\r\n                {\r\n                    { ''content-type'', new[] { ''multipart/form-data; boundary=----NancyFormBoundary'' } }\r\n                }", span="264-268", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_content_type_on_file_extracted_from_multipart_form_data_body()", file="RequestFixture.cs"];
m13_126 [label="var request = new Request(''POST'', ''/'', headers, CreateRequestStream(memory), ''http'')", span="271-271", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_content_type_on_file_extracted_from_multipart_form_data_body()", file="RequestFixture.cs"];
m13_127 [label="request.Files.First().ContentType.ShouldEqual(''content/type'')", span="274-274", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_content_type_on_file_extracted_from_multipart_form_data_body()", file="RequestFixture.cs"];
m13_128 [label="Exit Nancy.Tests.Unit.RequestFixture.Should_set_content_type_on_file_extracted_from_multipart_form_data_body()", span="255-255", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_content_type_on_file_extracted_from_multipart_form_data_body()", file="RequestFixture.cs"];
m13_211 [label="Entry System.Text.Encoding.GetBytes(string)", span="0-0", cluster="System.Text.Encoding.GetBytes(string)", file="RequestFixture.cs"];
m13_147 [label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0", cluster="System.IO.StreamReader.ReadToEnd()", file="RequestFixture.cs"];
m13_185 [label="Entry Nancy.IO.RequestStream.FromStream(System.IO.Stream)", span="209-209", cluster="Nancy.IO.RequestStream.FromStream(System.IO.Stream)", file="RequestFixture.cs"];
m13_136 [label="Entry Nancy.Tests.Unit.RequestFixture.Should_value_on_file_extracted_from_multipart_form_data_body()", span="301-301", cluster="Nancy.Tests.Unit.RequestFixture.Should_value_on_file_extracted_from_multipart_form_data_body()", file="RequestFixture.cs"];
m13_137 [label="var memory =\r\n                new MemoryStream(BuildMultipartFileValues(new Dictionary<string, Tuple<string, string>>\r\n                {\r\n                    { ''sample.txt'', new Tuple<string, string>(''content/type'', ''some test content'')}\r\n                }))", span="304-308", cluster="Nancy.Tests.Unit.RequestFixture.Should_value_on_file_extracted_from_multipart_form_data_body()", file="RequestFixture.cs"];
m13_138 [label="var headers =\r\n                new Dictionary<string, IEnumerable<string>>\r\n                {\r\n                    { ''content-type'', new[] { ''multipart/form-data; boundary=----NancyFormBoundary'' } }\r\n                }", span="310-314", cluster="Nancy.Tests.Unit.RequestFixture.Should_value_on_file_extracted_from_multipart_form_data_body()", file="RequestFixture.cs"];
m13_139 [label="var request = new Request(''POST'', ''/'', headers, CreateRequestStream(memory), ''http'')", span="317-317", cluster="Nancy.Tests.Unit.RequestFixture.Should_value_on_file_extracted_from_multipart_form_data_body()", file="RequestFixture.cs"];
m13_140 [label="GetStringValue(request.Files.First().Value).ShouldEqual(''some test content'')", span="320-320", cluster="Nancy.Tests.Unit.RequestFixture.Should_value_on_file_extracted_from_multipart_form_data_body()", file="RequestFixture.cs"];
m13_141 [label="Exit Nancy.Tests.Unit.RequestFixture.Should_value_on_file_extracted_from_multipart_form_data_body()", span="301-301", cluster="Nancy.Tests.Unit.RequestFixture.Should_value_on_file_extracted_from_multipart_form_data_body()", file="RequestFixture.cs"];
m13_75 [label="Entry string.ShouldNotBeEmpty()", span="21-21", cluster="string.ShouldNotBeEmpty()", file="RequestFixture.cs"];
m14_21 [label="Entry System.Text.StringBuilder.AppendLine(string)", span="0-0", cluster="System.Text.StringBuilder.AppendLine(string)", file="RequestHeaders.cs"];
m14_20 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()", file="RequestHeaders.cs"];
m14_0 [label="Entry Nancy.Demo.ModelBinding.XmlModule.XmlModule()", span="8-8", cluster="Nancy.Demo.ModelBinding.XmlModule.XmlModule()", file="RequestHeaders.cs"];
m14_1 [label="Get[''/bindxml''] = x =>\r\n            {\r\n                return View[''PostXml''];\r\n            }", span="10-13", cluster="Nancy.Demo.ModelBinding.XmlModule.XmlModule()", color=red, community=0, file="RequestHeaders.cs"];
m14_2 [label="Post[''/bindxml''] = x =>\r\n            {\r\n                var model = this.Bind<User>(u => u.Name);\r\n\r\n                var sb = new StringBuilder();\r\n\r\n                sb.AppendLine(''Bound Model:'');\r\n                sb.Append(''Type: '');\r\n                sb.AppendLine(model.GetType().FullName);\r\n                sb.Append(''Name: (which will be empty because it's ignored)'');\r\n                sb.AppendLine(model.Name);\r\n                sb.Append(''Address: '');\r\n                sb.AppendLine(model.Address);\r\n\r\n                return sb.ToString();\r\n            }", span="15-30", cluster="Nancy.Demo.ModelBinding.XmlModule.XmlModule()", color=red, community=0, file="RequestHeaders.cs"];
m14_3 [label="Exit Nancy.Demo.ModelBinding.XmlModule.XmlModule()", span="8-8", cluster="Nancy.Demo.ModelBinding.XmlModule.XmlModule()", file="RequestHeaders.cs"];
m14_24 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="RequestHeaders.cs"];
m14_22 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)", file="RequestHeaders.cs"];
m14_19 [label="Entry Nancy.INancyModule.Bind<TModel>(params System.Linq.Expressions.Expression<System.Func<TModel, object>>[])", span="76-76", cluster="Nancy.INancyModule.Bind<TModel>(params System.Linq.Expressions.Expression<System.Func<TModel, object>>[])", file="RequestHeaders.cs"];
m14_23 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="RequestHeaders.cs"];
m14_25 [label="Entry lambda expression", span="17-17", cluster="lambda expression", file="RequestHeaders.cs"];
m14_4 [label="Entry lambda expression", span="10-13", cluster="lambda expression", file="RequestHeaders.cs"];
m14_5 [label="return View[''PostXml''];", span="12-12", cluster="lambda expression", color=red, community=0, file="RequestHeaders.cs"];
m14_6 [label="Exit lambda expression", span="10-13", cluster="lambda expression", file="RequestHeaders.cs"];
m14_7 [label="Entry lambda expression", span="15-30", cluster="lambda expression", file="RequestHeaders.cs"];
m14_8 [label="var model = this.Bind<User>(u => u.Name)", span="17-17", cluster="lambda expression", color=red, community=0, file="RequestHeaders.cs"];
m14_9 [label="var sb = new StringBuilder()", span="19-19", cluster="lambda expression", color=red, community=0, file="RequestHeaders.cs"];
m14_12 [label="sb.AppendLine(model.GetType().FullName)", span="23-23", cluster="lambda expression", color=red, community=0, file="RequestHeaders.cs"];
m14_14 [label="sb.AppendLine(model.Name)", span="25-25", cluster="lambda expression", color=red, community=0, file="RequestHeaders.cs"];
m14_16 [label="sb.AppendLine(model.Address)", span="27-27", cluster="lambda expression", color=red, community=0, file="RequestHeaders.cs"];
m14_10 [label="sb.AppendLine(''Bound Model:'')", span="21-21", cluster="lambda expression", color=red, community=0, file="RequestHeaders.cs"];
m14_11 [label="sb.Append(''Type: '')", span="22-22", cluster="lambda expression", color=red, community=0, file="RequestHeaders.cs"];
m14_13 [label="sb.Append(''Name: (which will be empty because it's ignored)'')", span="24-24", cluster="lambda expression", color=red, community=0, file="RequestHeaders.cs"];
m14_15 [label="sb.Append(''Address: '')", span="26-26", cluster="lambda expression", color=red, community=0, file="RequestHeaders.cs"];
m14_17 [label="return sb.ToString();", span="29-29", cluster="lambda expression", color=red, community=0, file="RequestHeaders.cs"];
m14_18 [label="Exit lambda expression", span="15-30", cluster="lambda expression", file="RequestHeaders.cs"];
m14_26 [label="u.Name", span="17-17", cluster="lambda expression", color=red, community=0, file="RequestHeaders.cs"];
m14_27 [label="Exit lambda expression", span="17-17", cluster="lambda expression", file="RequestHeaders.cs"];
m14_28 [label="Nancy.Demo.ModelBinding.XmlModule", span="", file="RequestHeaders.cs"];
m15_13 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="RequestHeadersFixture.cs"];
m15_12 [label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="RequestHeadersFixture.cs"];
m15_14 [label="Entry Unk.Same", span="", cluster="Unk.Same", file="RequestHeadersFixture.cs"];
m15_0 [label="Entry Nancy.Testing.Tests.QueryWrapperTests.Should_use_cq_find_when_indexer_invoked()", span="11-11", cluster="Nancy.Testing.Tests.QueryWrapperTests.Should_use_cq_find_when_indexer_invoked()", file="RequestHeadersFixture.cs"];
m15_1 [label="var document = \r\n                CQ.Create(@''<html><head></head><body><div id='testId' class='myClass'>Test</div></body></html>'')", span="14-15", cluster="Nancy.Testing.Tests.QueryWrapperTests.Should_use_cq_find_when_indexer_invoked()", color=red, community=0, file="RequestHeadersFixture.cs"];
m15_2 [label="var queryResult =\r\n                document.Find(''#testId'').FirstOrDefault()", span="17-18", cluster="Nancy.Testing.Tests.QueryWrapperTests.Should_use_cq_find_when_indexer_invoked()", color=red, community=0, file="RequestHeadersFixture.cs"];
m15_3 [label="var wrapper = \r\n                new QueryWrapper(document)", span="20-21", cluster="Nancy.Testing.Tests.QueryWrapperTests.Should_use_cq_find_when_indexer_invoked()", color=red, community=0, file="RequestHeadersFixture.cs"];
m15_6 [label="Assert.Same(queryResult, result)", span="28-28", cluster="Nancy.Testing.Tests.QueryWrapperTests.Should_use_cq_find_when_indexer_invoked()", color=red, community=0, file="RequestHeadersFixture.cs"];
m15_4 [label="var result = (DomElement)wrapper[''#testId''].FirstOrDefault()", span="24-24", cluster="Nancy.Testing.Tests.QueryWrapperTests.Should_use_cq_find_when_indexer_invoked()", color=red, community=0, file="RequestHeadersFixture.cs"];
m15_5 [label="Assert.NotNull(result)", span="27-27", cluster="Nancy.Testing.Tests.QueryWrapperTests.Should_use_cq_find_when_indexer_invoked()", color=red, community=0, file="RequestHeadersFixture.cs"];
m15_7 [label="Exit Nancy.Testing.Tests.QueryWrapperTests.Should_use_cq_find_when_indexer_invoked()", span="11-11", cluster="Nancy.Testing.Tests.QueryWrapperTests.Should_use_cq_find_when_indexer_invoked()", file="RequestHeadersFixture.cs"];
m15_11 [label="Entry QueryWrapper.cstr", span="", cluster="QueryWrapper.cstr", file="RequestHeadersFixture.cs"];
m15_10 [label="Entry Unk.FirstOrDefault", span="", cluster="Unk.FirstOrDefault", file="RequestHeadersFixture.cs"];
m15_9 [label="Entry Unk.Find", span="", cluster="Unk.Find", file="RequestHeadersFixture.cs"];
n127 -> n2  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.Tests.AssertExtensionsTests"];
n127 -> n7  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.Tests.AssertExtensionsTests"];
n127 -> n13  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.Tests.AssertExtensionsTests"];
n127 -> n17  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.Tests.AssertExtensionsTests"];
n127 -> n22  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.Tests.AssertExtensionsTests"];
n127 -> n25  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.Tests.AssertExtensionsTests"];
n127 -> n29  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.Tests.AssertExtensionsTests"];
n127 -> n33  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.Tests.AssertExtensionsTests"];
n127 -> n37  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.Tests.AssertExtensionsTests"];
n127 -> n41  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.Tests.AssertExtensionsTests"];
n127 -> n44  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.Tests.AssertExtensionsTests"];
n127 -> n48  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.Tests.AssertExtensionsTests"];
n127 -> n51  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.Tests.AssertExtensionsTests"];
n127 -> n61  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.Tests.AssertExtensionsTests"];
n127 -> n69  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.Tests.AssertExtensionsTests"];
n127 -> n78  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.Tests.AssertExtensionsTests"];
n127 -> n86  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.Tests.AssertExtensionsTests"];
n127 -> n95  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.Tests.AssertExtensionsTests"];
n127 -> n103  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.Tests.AssertExtensionsTests"];
n127 -> n111  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.Tests.AssertExtensionsTests"];
n127 -> n120  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.Tests.AssertExtensionsTests"];
n128 -> n57  [key=1, style=dashed, color=darkseagreen4, label=htmlNode];
n129 -> n66  [key=1, style=dashed, color=darkseagreen4, label=htmlNode];
n130 -> n74  [key=1, style=dashed, color=darkseagreen4, label=htmlNodes];
n131 -> n83  [key=1, style=dashed, color=darkseagreen4, label=htmlNodes];
n132 -> n91  [key=1, style=dashed, color=darkseagreen4, label=htmlNode];
n133 -> n100  [key=1, style=dashed, color=darkseagreen4, label=htmlNode];
n134 -> n108  [key=1, style=dashed, color=darkseagreen4, label=htmlNode];
n135 -> n116  [key=1, style=dashed, color=darkseagreen4, label=htmlNodes];
n136 -> n125  [key=1, style=dashed, color=darkseagreen4, label=htmlNodes];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n4  [key=2, style=dotted];
n2 -> n3  [key=0, style=solid];
n2 -> n5  [key=2, style=dotted];
n3 -> n0  [key=0, style=bold, color=blue];
n6 -> n7  [key=0, style=solid];
n7 -> n8  [key=0, style=solid];
n7 -> n10  [key=2, style=dotted];
n7 -> n12  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n8 -> n9  [key=0, style=solid];
n8 -> n11  [key=2, style=dotted];
n12 -> n13  [key=0, style=solid];
n9 -> n6  [key=0, style=bold, color=blue];
n13 -> n14  [key=0, style=solid];
n13 -> n15  [key=2, style=dotted];
n14 -> n12  [key=0, style=bold, color=blue];
n16 -> n17  [key=0, style=solid];
n17 -> n18  [key=0, style=solid];
n17 -> n10  [key=2, style=dotted];
n17 -> n21  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n18 -> n19  [key=0, style=solid];
n18 -> n20  [key=2, style=dotted];
n21 -> n22  [key=0, style=solid];
n19 -> n16  [key=0, style=bold, color=blue];
n22 -> n23  [key=0, style=solid];
n22 -> n15  [key=2, style=dotted];
n23 -> n21  [key=0, style=bold, color=blue];
n24 -> n25  [key=0, style=solid];
n25 -> n26  [key=0, style=solid];
n25 -> n10  [key=2, style=dotted];
n25 -> n28  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n26 -> n27  [key=0, style=solid];
n26 -> n20  [key=2, style=dotted];
n28 -> n29  [key=0, style=solid];
n27 -> n24  [key=0, style=bold, color=blue];
n29 -> n30  [key=0, style=solid];
n29 -> n31  [key=2, style=dotted];
n30 -> n28  [key=0, style=bold, color=blue];
n32 -> n33  [key=0, style=solid];
n33 -> n34  [key=0, style=solid];
n33 -> n31  [key=2, style=dotted];
n34 -> n35  [key=0, style=solid];
n34 -> n11  [key=2, style=dotted];
n35 -> n32  [key=0, style=bold, color=blue];
n36 -> n37  [key=0, style=solid];
n37 -> n38  [key=0, style=solid];
n37 -> n10  [key=2, style=dotted];
n37 -> n40  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n38 -> n39  [key=0, style=solid];
n38 -> n11  [key=2, style=dotted];
n40 -> n41  [key=0, style=solid];
n39 -> n36  [key=0, style=bold, color=blue];
n41 -> n42  [key=0, style=solid];
n41 -> n31  [key=2, style=dotted];
n42 -> n40  [key=0, style=bold, color=blue];
n43 -> n44  [key=0, style=solid];
n44 -> n45  [key=0, style=solid];
n44 -> n10  [key=2, style=dotted];
n44 -> n47  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n45 -> n46  [key=0, style=solid];
n45 -> n11  [key=2, style=dotted];
n47 -> n48  [key=0, style=solid];
n46 -> n43  [key=0, style=bold, color=blue];
n48 -> n49  [key=0, style=solid];
n48 -> n31  [key=2, style=dotted];
n49 -> n47  [key=0, style=bold, color=blue];
n50 -> n51  [key=0, style=solid];
n51 -> n52  [key=0, style=solid];
n51 -> n55  [key=2, style=dotted];
n51 -> n57  [key=1, style=dashed, color=darkseagreen4, label=htmlNode];
n52 -> n53  [key=0, style=solid];
n52 -> n10  [key=2, style=dotted];
n52 -> n56  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n57 -> n58  [key=0, style=solid];
n57 -> n59  [key=2, style=dotted];
n53 -> n54  [key=0, style=solid];
n53 -> n11  [key=2, style=dotted];
n56 -> n57  [key=0, style=solid];
n54 -> n50  [key=0, style=bold, color=blue];
n58 -> n56  [key=0, style=bold, color=blue];
n60 -> n61  [key=0, style=solid];
n61 -> n62  [key=0, style=solid];
n61 -> n55  [key=2, style=dotted];
n61 -> n66  [key=1, style=dashed, color=darkseagreen4, label=htmlNode];
n62 -> n63  [key=0, style=solid];
n62 -> n10  [key=2, style=dotted];
n62 -> n65  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n66 -> n67  [key=0, style=solid];
n66 -> n59  [key=2, style=dotted];
n63 -> n64  [key=0, style=solid];
n63 -> n20  [key=2, style=dotted];
n65 -> n66  [key=0, style=solid];
n64 -> n60  [key=0, style=bold, color=blue];
n67 -> n65  [key=0, style=bold, color=blue];
n68 -> n69  [key=0, style=solid];
n69 -> n70  [key=0, style=solid];
n69 -> n74  [key=1, style=dashed, color=darkseagreen4, label=htmlNodes];
n70 -> n71  [key=0, style=solid];
n70 -> n10  [key=2, style=dotted];
n70 -> n73  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n74 -> n75  [key=0, style=solid];
n74 -> n76  [key=2, style=dotted];
n71 -> n72  [key=0, style=solid];
n71 -> n11  [key=2, style=dotted];
n73 -> n74  [key=0, style=solid];
n72 -> n68  [key=0, style=bold, color=blue];
n75 -> n73  [key=0, style=bold, color=blue];
n77 -> n78  [key=0, style=solid];
n78 -> n79  [key=0, style=solid];
n78 -> n83  [key=1, style=dashed, color=darkseagreen4, label=htmlNodes];
n79 -> n80  [key=0, style=solid];
n79 -> n10  [key=2, style=dotted];
n79 -> n82  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n83 -> n84  [key=0, style=solid];
n83 -> n76  [key=2, style=dotted];
n80 -> n81  [key=0, style=solid];
n80 -> n20  [key=2, style=dotted];
n82 -> n83  [key=0, style=solid];
n81 -> n77  [key=0, style=bold, color=blue];
n84 -> n82  [key=0, style=bold, color=blue];
n85 -> n86  [key=0, style=solid];
n86 -> n87  [key=0, style=solid];
n86 -> n55  [key=2, style=dotted];
n86 -> n91  [key=1, style=dashed, color=darkseagreen4, label=htmlNode];
n87 -> n88  [key=0, style=solid];
n87 -> n10  [key=2, style=dotted];
n87 -> n90  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n91 -> n92  [key=0, style=solid];
n91 -> n93  [key=2, style=dotted];
n88 -> n89  [key=0, style=solid];
n88 -> n20  [key=2, style=dotted];
n90 -> n91  [key=0, style=solid];
n89 -> n85  [key=0, style=bold, color=blue];
n92 -> n90  [key=0, style=bold, color=blue];
n94 -> n95  [key=0, style=solid];
n95 -> n96  [key=0, style=solid];
n95 -> n55  [key=2, style=dotted];
n95 -> n100  [key=1, style=dashed, color=darkseagreen4, label=htmlNode];
n96 -> n97  [key=0, style=solid];
n96 -> n10  [key=2, style=dotted];
n96 -> n99  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n100 -> n101  [key=0, style=solid];
n100 -> n93  [key=2, style=dotted];
n97 -> n98  [key=0, style=solid];
n97 -> n20  [key=2, style=dotted];
n99 -> n100  [key=0, style=solid];
n98 -> n94  [key=0, style=bold, color=blue];
n101 -> n99  [key=0, style=bold, color=blue];
n102 -> n103  [key=0, style=solid];
n103 -> n104  [key=0, style=solid];
n103 -> n55  [key=2, style=dotted];
n103 -> n108  [key=1, style=dashed, color=darkseagreen4, label=htmlNode];
n104 -> n105  [key=0, style=solid];
n104 -> n10  [key=2, style=dotted];
n104 -> n107  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n108 -> n109  [key=0, style=solid];
n108 -> n93  [key=2, style=dotted];
n105 -> n106  [key=0, style=solid];
n105 -> n11  [key=2, style=dotted];
n107 -> n108  [key=0, style=solid];
n106 -> n102  [key=0, style=bold, color=blue];
n109 -> n107  [key=0, style=bold, color=blue];
n110 -> n111  [key=0, style=solid];
n111 -> n112  [key=0, style=solid];
n111 -> n116  [key=1, style=dashed, color=darkseagreen4, label=htmlNodes];
n112 -> n113  [key=0, style=solid];
n112 -> n10  [key=2, style=dotted];
n112 -> n115  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n116 -> n117  [key=0, style=solid];
n116 -> n118  [key=2, style=dotted];
n113 -> n114  [key=0, style=solid];
n113 -> n20  [key=2, style=dotted];
n115 -> n116  [key=0, style=solid];
n114 -> n110  [key=0, style=bold, color=blue];
n117 -> n115  [key=0, style=bold, color=blue];
n119 -> n120  [key=0, style=solid];
n120 -> n121  [key=0, style=solid];
n120 -> n125  [key=1, style=dashed, color=darkseagreen4, label=htmlNodes];
n121 -> n122  [key=0, style=solid];
n121 -> n10  [key=2, style=dotted];
n121 -> n124  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n125 -> n126  [key=0, style=solid];
n125 -> n118  [key=2, style=dotted];
n122 -> n123  [key=0, style=solid];
n122 -> n11  [key=2, style=dotted];
n124 -> n125  [key=0, style=solid];
n123 -> n119  [key=0, style=bold, color=blue];
n126 -> n124  [key=0, style=bold, color=blue];
d46 -> d47  [key=0, style=solid, color=green];
d46 -> d49  [key=1, style=dashed, color=green, label=authorization];
d46 -> d51  [key=1, style=dashed, color=green, label=authorization];
d44 -> d46  [key=0, style=solid, color=green];
d44 -> d25  [key=3, color=darkorchid, style=bold, label="method methodReturn string[] ExtractCredentialsFromHeaders"];
d47 -> d49  [key=0, style=solid, color=green];
d47 -> d48  [key=0, style=solid];
d47 -> d57  [key=2, style=dotted];
d49 -> d50  [key=0, style=solid, color=green];
d49 -> d51  [key=0, style=solid, color=green];
d49 -> d58  [key=2, style=dotted, color=green];
d51 -> d52  [key=0, style=solid];
d51 -> d59  [key=2, style=dotted];
d51 -> d60  [key=2, style=dotted];
d50 -> d56  [key=0, style=solid];
d39 -> d44  [key=2, style=dotted];
d39 -> d40  [key=0, style=solid];
d39 -> d41  [key=1, style=dashed, color=darkseagreen4, label=credentials];
d39 -> d42  [key=1, style=dashed, color=darkseagreen4, label=credentials];
d56 -> d44  [key=0, style=bold, color=blue];
d25 -> d25  [key=3, color=darkorchid, style=bold, label="method methodReturn Nancy.Response "];
d25 -> d26  [key=0, style=solid];
d25 -> d28  [key=1, style=dashed, color=darkseagreen4, label="Nancy.NancyContext"];
d48 -> d56  [key=0, style=solid];
d52 -> d53  [key=0, style=solid];
d52 -> d61  [key=2, style=dotted];
d52 -> d62  [key=2, style=dotted];
d31 -> d39  [key=0, style=solid];
d31 -> d25  [key=3, color=darkorchid, style=bold, label="Parameter variable Nancy.NancyContext context"];
d31 -> d41  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Authentication.Basic.BasicAuthenticationConfiguration"];
d31 -> d42  [key=1, style=dashed, color=darkseagreen4, label="Nancy.NancyContext"];
d31 -> d9  [key=3, color=darkorchid, style=bold, label="Parameter variable Nancy.Authentication.Basic.BasicAuthenticationConfiguration configuration"];
d40 -> d41  [key=0, style=solid];
d40 -> d43  [key=0, style=solid];
d41 -> d42  [key=0, style=solid];
d41 -> d43  [key=0, style=solid];
d41 -> d45  [key=2, style=dotted];
d42 -> d43  [key=0, style=solid];
d53 -> d56  [key=0, style=solid];
d53 -> d63  [key=2, style=dotted];
d53 -> d64  [key=2, style=dotted];
d55 -> d56  [key=0, style=solid];
d9 -> d25  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Authentication.Basic.BasicAuthenticationConfiguration"];
d9 -> d23  [key=0, style=solid];
d9 -> d28  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Authentication.Basic.BasicAuthenticationConfiguration"];
d9 -> d0  [key=3, color=darkorchid, style=bold, label="Parameter variable Nancy.Authentication.Basic.BasicAuthenticationConfiguration configuration"];
d9 -> d13  [key=3, color=darkorchid, style=bold, label="Parameter variable Nancy.Authentication.Basic.BasicAuthenticationConfiguration configuration"];
d23 -> d25  [key=0, style=solid];
d23 -> d24  [key=0, style=solid];
d26 -> d9  [key=0, style=bold, color=blue];
d28 -> d31  [key=2, style=dotted];
d28 -> d29  [key=0, style=solid];
d43 -> d31  [key=0, style=bold, color=blue];
d54 -> d55  [key=0, style=solid];
d5 -> d9  [key=2, style=dotted];
d5 -> d6  [key=0, style=solid];
d5 -> d10  [key=2, style=dotted];
d19 -> d9  [key=2, style=dotted];
d19 -> d20  [key=0, style=solid];
d19 -> d10  [key=2, style=dotted];
d0 -> d5  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Bootstrapper.IApplicationPipelines"];
d0 -> d1  [key=0, style=solid];
d0 -> d3  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Authentication.Basic.BasicAuthenticationConfiguration"];
d0 -> d6  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Bootstrapper.IApplicationPipelines"];
d13 -> d19  [key=1, style=dashed, color=darkseagreen4, label="Nancy.NancyModule"];
d13 -> d14  [key=0, style=solid];
d13 -> d16  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Authentication.Basic.BasicAuthenticationConfiguration"];
d13 -> d18  [key=1, style=dashed, color=darkseagreen4, label="Nancy.NancyModule"];
d13 -> d20  [key=1, style=dashed, color=darkseagreen4, label="Nancy.NancyModule"];
d24 -> d26  [key=0, style=solid];
d24 -> d8  [key=2, style=dotted];
d65 -> d28  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Authentication.Basic.BasicAuthenticationConfiguration"];
d27 -> d28  [key=0, style=solid];
d29 -> d30  [key=0, style=solid];
d3 -> d5  [key=0, style=solid];
d3 -> d4  [key=0, style=solid];
d6 -> d7  [key=0, style=solid];
d6 -> d11  [key=2, style=dotted];
d6 -> d12  [key=2, style=dotted];
d18 -> d19  [key=0, style=solid];
d18 -> d22  [key=2, style=dotted];
d20 -> d21  [key=0, style=solid];
d20 -> d11  [key=2, style=dotted];
d20 -> d12  [key=2, style=dotted];
d7 -> d0  [key=0, style=bold, color=blue];
d11 -> d0  [key=3, color=darkorchid, style=bold, label="Parameter variable Nancy.Authentication.Basic.BasicAuthenticationConfiguration configuration"];
d11 -> d13  [key=3, color=darkorchid, style=bold, label="Parameter variable Nancy.Authentication.Basic.BasicAuthenticationConfiguration configuration"];
d11 -> d32  [key=0, style=solid];
d11 -> d36  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Authentication.Basic.BasicAuthenticationConfiguration"];
d1 -> d3  [key=0, style=solid];
d1 -> d2  [key=0, style=solid];
d21 -> d13  [key=0, style=bold, color=blue];
d14 -> d15  [key=0, style=solid];
d14 -> d16  [key=0, style=solid];
d16 -> d18  [key=0, style=solid];
d16 -> d17  [key=0, style=solid];
d30 -> d27  [key=0, style=bold, color=blue];
d4 -> d7  [key=0, style=solid];
d4 -> d8  [key=2, style=dotted];
d2 -> d7  [key=0, style=solid];
d2 -> d8  [key=2, style=dotted];
d33 -> d11  [key=0, style=bold, color=blue];
d32 -> d33  [key=0, style=solid];
d32 -> d35  [key=1, style=dashed, color=darkseagreen4, label="Nancy.NancyContext"];
d32 -> d36  [key=1, style=dashed, color=darkseagreen4, label="Nancy.NancyContext"];
d36 -> d37  [key=0, style=solid];
d36 -> d38  [key=2, style=dotted];
d15 -> d21  [key=0, style=solid];
d15 -> d8  [key=2, style=dotted];
d17 -> d21  [key=0, style=solid];
d17 -> d8  [key=2, style=dotted];
d35 -> d36  [key=0, style=solid];
d35 -> d37  [key=0, style=solid];
d66 -> d36  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Authentication.Basic.BasicAuthenticationConfiguration"];
d34 -> d36  [key=1, style=dashed, color=darkseagreen4, label="Nancy.NancyContext"];
d34 -> d35  [key=0, style=solid];
d37 -> d34  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_3  [key=2, style=dotted];
m0_2 -> m0_0  [key=0, style=bold, color=blue];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label="System.Action<System.Text.StringBuilder>"];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_7  [key=0, style=solid];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_8  [key=2, style=dotted];
m0_7 -> m0_4  [key=0, style=bold, color=blue];
m0_9 -> m0_10  [key=0, style=solid];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_12  [key=2, style=dotted];
m0_11 -> m0_9  [key=0, style=bold, color=blue];
m0_13 -> m0_1  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Diagnostics.TraceLog"];
m0_13 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Diagnostics.TraceLog"];
m0_13 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Diagnostics.TraceLog"];
m0_13 -> m0_10  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Diagnostics.TraceLog"];
m1_21 -> m1_64  [key=0, style=solid];
m1_21 -> m1_16  [key=0, style=bold, color=blue];
m1_64 -> m1_21  [key=0, style=bold, color=blue];
m1_56 -> m1_57  [key=0, style=solid];
m1_56 -> m1_58  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_56 -> m1_61  [key=1, style=dashed, color=darkseagreen4, label=bool];
m1_60 -> m1_7  [key=2, style=dotted];
m1_60 -> m1_61  [key=0, style=solid];
m1_57 -> m1_5  [key=2, style=dotted];
m1_57 -> m1_60  [key=1, style=dashed, color=darkseagreen4, label=comparer];
m1_57 -> m1_58  [key=0, style=solid];
m1_58 -> m1_60  [key=1, style=dashed, color=darkseagreen4, label=actual];
m1_58 -> m1_59  [key=0, style=solid];
m1_58 -> m1_63  [key=2, style=dotted];
m1_59 -> m1_60  [key=0, style=solid];
m1_59 -> m1_55  [key=2, style=dotted];
m1_61 -> m1_62  [key=0, style=solid];
m1_61 -> m1_31  [key=2, style=dotted];
m1_62 -> m1_56  [key=0, style=bold, color=blue];
m1_63 -> m1_79  [key=0, style=solid];
m1_79 -> m1_80  [key=0, style=solid];
m1_80 -> m1_63  [key=0, style=bold, color=blue];
m1_15 -> m1_5  [key=2, style=dotted];
m1_15 -> m1_18  [key=1, style=dashed, color=darkseagreen4, label=comparer];
m1_15 -> m1_16  [key=0, style=solid];
m1_30 -> m1_65  [key=0, style=solid];
m1_65 -> m1_66  [key=0, style=solid];
m1_66 -> m1_30  [key=0, style=bold, color=blue];
m1_10 -> m1_11  [key=0, style=solid, color=red];
m1_10 -> m1_5  [key=2, style=dotted];
m1_11 -> m1_12  [key=0, style=solid, color=red];
m1_11 -> m1_14  [key=2, style=dotted, color=red];
m1_11 -> m1_16  [key=1, style=dashed, color=red, label="lambda expression"];
m1_11 -> m1_11  [key=3, color=red, style=bold, label="Local variable string input"];
m1_11 -> m1_6  [key=2, style=dotted];
m1_11 -> m1_7  [key=2, style=dotted];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_15  [key=2, style=dotted];
m1_12 -> m1_8  [key=2, style=dotted];
m1_13 -> m1_10  [key=0, style=bold, color=blue];
m1_13 -> m1_9  [key=0, style=bold, color=blue];
m1_32 -> m1_33  [key=0, style=solid];
m1_36 -> m1_7  [key=2, style=dotted];
m1_36 -> m1_37  [key=0, style=solid];
m1_33 -> m1_5  [key=2, style=dotted];
m1_33 -> m1_36  [key=1, style=dashed, color=darkseagreen4, label=comparer];
m1_33 -> m1_34  [key=0, style=solid];
m1_34 -> m1_36  [key=1, style=dashed, color=darkseagreen4, label=actual];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_39  [key=2, style=dotted];
m1_34 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label=actual];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_39  [key=2, style=dotted];
m1_35 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label=expected];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_22  [key=2, style=dotted];
m1_38 -> m1_32  [key=0, style=bold, color=blue];
m1_48 -> m1_49  [key=0, style=solid];
m1_52 -> m1_7  [key=2, style=dotted];
m1_52 -> m1_53  [key=0, style=solid];
m1_49 -> m1_5  [key=2, style=dotted];
m1_49 -> m1_52  [key=1, style=dashed, color=darkseagreen4, label=comparer];
m1_49 -> m1_50  [key=0, style=solid];
m1_50 -> m1_52  [key=1, style=dashed, color=darkseagreen4, label=actual];
m1_50 -> m1_51  [key=0, style=solid];
m1_50 -> m1_55  [key=2, style=dotted];
m1_50 -> m1_53  [key=1, style=dashed, color=darkseagreen4, label=actual];
m1_51 -> m1_52  [key=0, style=solid];
m1_51 -> m1_55  [key=2, style=dotted];
m1_51 -> m1_53  [key=1, style=dashed, color=darkseagreen4, label=expected];
m1_53 -> m1_54  [key=0, style=solid];
m1_53 -> m1_22  [key=2, style=dotted];
m1_54 -> m1_48  [key=0, style=bold, color=blue];
m1_74 -> m1_75  [key=0, style=solid];
m1_75 -> m1_76  [key=0, style=solid];
m1_76 -> m1_77  [key=0, style=solid];
m1_77 -> m1_74  [key=0, style=bold, color=blue];
m1_5 -> m1_0  [key=0, style=bold, color=blue];
m1_47 -> m1_72  [key=0, style=solid];
m1_72 -> m1_73  [key=0, style=solid];
m1_73 -> m1_47  [key=0, style=bold, color=blue];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_18  [key=1, style=dashed, color=darkseagreen4, label=actual];
m1_16 -> m1_21  [key=2, style=dotted];
m1_16 -> m1_19  [key=1, style=dashed, color=darkseagreen4, label=actual];
m1_17 -> m1_18  [key=0, style=solid, color=red];
m1_17 -> m1_21  [key=2, style=dotted];
m1_17 -> m1_19  [key=1, style=dashed, color=darkseagreen4, label=expected];
m1_18 -> m1_19  [key=0, style=solid, color=red];
m1_18 -> m1_6  [key=2, style=dotted, color=red];
m1_18 -> m1_7  [key=2, style=dotted];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_7  [key=2, style=dotted];
m1_19 -> m1_22  [key=2, style=dotted];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_8  [key=2, style=dotted];
m1_20 -> n76  [key=2, style=dotted];
m1_20 -> m1_14  [key=0, style=bold, color=blue];
m1_14 -> m1_15  [key=0, style=solid];
m1_67 -> m1_68  [key=0, style=solid];
m1_68 -> m1_69  [key=0, style=solid];
m1_69 -> m1_70  [key=0, style=solid];
m1_70 -> m1_67  [key=0, style=bold, color=blue];
m1_9 -> m1_10  [key=0, style=solid];
m1_55 -> m1_78  [key=0, style=solid];
m1_78 -> m1_55  [key=0, style=bold, color=blue];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_25  [key=1, style=dashed, color=darkseagreen4, label=bool];
m1_23 -> m1_28  [key=1, style=dashed, color=darkseagreen4, label=bool];
m1_27 -> m1_7  [key=2, style=dotted];
m1_27 -> m1_28  [key=0, style=solid];
m1_24 -> m1_5  [key=2, style=dotted];
m1_24 -> m1_27  [key=1, style=dashed, color=darkseagreen4, label=comparer];
m1_24 -> m1_25  [key=0, style=solid];
m1_25 -> m1_27  [key=1, style=dashed, color=darkseagreen4, label=actual];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_30  [key=2, style=dotted];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_21  [key=2, style=dotted];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_31  [key=2, style=dotted];
m1_29 -> m1_23  [key=0, style=bold, color=blue];
m1_81 -> m1_82  [key=0, style=solid];
m1_82 -> m1_83  [key=0, style=solid];
m1_83 -> m1_84  [key=0, style=solid];
m1_84 -> m1_81  [key=0, style=bold, color=blue];
m1_39 -> m1_71  [key=0, style=solid];
m1_71 -> m1_39  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_3 -> m1_3  [key=3, color=red, style=bold, label="Field variable string ValidData"];
m1_3 -> m1_4  [key=0, style=solid, color=red];
m1_3 -> m1_8  [key=2, style=dotted, color=green];
m1_3 -> m1_7  [key=2, style=dotted, color=red];
m1_2 -> m1_3  [key=0, style=solid, color=red];
m1_2 -> m1_6  [key=2, style=dotted];
m1_2 -> m1_7  [key=2, style=dotted];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_5  [key=2, style=dotted];
m1_1 -> m1_1  [key=3, color=darkorchid, style=bold, label="Local variable string input"];
m1_4 -> m1_0  [key=0, style=bold, color=blue];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_8  [key=2, style=dotted];
m1_4 -> n76  [key=2, style=dotted];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_42  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_40 -> m1_45  [key=1, style=dashed, color=darkseagreen4, label=bool];
m1_44 -> m1_7  [key=2, style=dotted];
m1_44 -> m1_45  [key=0, style=solid];
m1_41 -> m1_5  [key=2, style=dotted];
m1_41 -> m1_44  [key=1, style=dashed, color=darkseagreen4, label=comparer];
m1_41 -> m1_42  [key=0, style=solid];
m1_42 -> m1_44  [key=1, style=dashed, color=darkseagreen4, label=actual];
m1_42 -> m1_43  [key=0, style=solid];
m1_42 -> m1_47  [key=2, style=dotted];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_39  [key=2, style=dotted];
m1_45 -> m1_46  [key=0, style=solid];
m1_45 -> m1_31  [key=2, style=dotted];
m1_46 -> m1_40  [key=0, style=bold, color=blue];
m1_85 -> m1_65  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.Tests.AssertEqualityComparerFixture.EquatableModel"];
m1_85 -> m1_68  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.Tests.AssertEqualityComparerFixture.EquatableModel"];
m1_85 -> m1_69  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.Tests.AssertEqualityComparerFixture.EquatableModel"];
m1_86 -> m1_72  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.Tests.AssertEqualityComparerFixture.GenericCompareableModel"];
m1_86 -> m1_75  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.Tests.AssertEqualityComparerFixture.GenericCompareableModel"];
m1_86 -> m1_76  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.Tests.AssertEqualityComparerFixture.GenericCompareableModel"];
m1_87 -> m1_79  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.Tests.AssertEqualityComparerFixture.CompareableModel"];
m1_87 -> m1_82  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.Tests.AssertEqualityComparerFixture.CompareableModel"];
m1_87 -> m1_83  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.Tests.AssertEqualityComparerFixture.CompareableModel"];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_4  [key=2, style=dotted];
m2_1 -> m2_7  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBoostrapperConfigurator"];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_5  [key=2, style=dotted];
m2_3 -> m2_0  [key=0, style=bold, color=blue];
m2_22 -> m2_23  [key=0, style=solid];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_14  [key=2, style=dotted];
m2_23 -> m2_26  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_15  [key=2, style=dotted];
m2_24 -> m2_16  [key=2, style=dotted];
m2_24 -> m2_17  [key=2, style=dotted];
m2_25 -> m2_22  [key=0, style=bold, color=blue];
m2_26 -> m2_27  [key=0, style=solid];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> m2_9  [key=2, style=dotted];
m2_6 -> m2_7  [key=0, style=solid];
m2_8 -> m2_6  [key=0, style=bold, color=blue];
m2_18 -> m2_19  [key=0, style=solid];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_21  [key=2, style=dotted];
m2_20 -> m2_18  [key=0, style=bold, color=blue];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> m2_21  [key=2, style=dotted];
m2_28 -> m2_26  [key=0, style=bold, color=blue];
m2_10 -> m2_11  [key=0, style=solid];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_14  [key=2, style=dotted];
m2_11 -> m2_18  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_15  [key=2, style=dotted];
m2_12 -> m2_16  [key=2, style=dotted];
m2_12 -> m2_17  [key=2, style=dotted];
m2_13 -> m2_10  [key=0, style=bold, color=blue];
m2_29 -> m2_1  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Functional.Tests.ViewBagTests"];
m2_29 -> m2_2  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Functional.Tests.ViewBagTests"];
m2_29 -> m2_11  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Functional.Tests.ViewBagTests"];
m2_29 -> m2_23  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Functional.Tests.ViewBagTests"];
m3_0 -> m3_1  [key=0, style=solid, color=green];
m3_0 -> m3_2  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Conventions.StaticContentsConventions"];
m3_1 -> m3_2  [key=0, style=solid, color=green];
m3_1 -> n11  [key=2, style=dotted, color=green];
m3_2 -> m3_3  [key=0, style=solid, color=green];
m3_2 -> m3_8  [key=2, style=dotted, color=green];
m3_2 -> m3_9  [key=2, style=dotted, color=green];
m3_2 -> m3_10  [key=2, style=dotted, color=green];
m3_2 -> m3_12  [key=1, style=dashed, color=green, label="lambda expression"];
m3_2 -> m3_16  [key=1, style=dashed, color=green, label="lambda expression"];
m3_3 -> m3_0  [key=0, style=bold, color=blue];
m3_3 -> n11  [key=2, style=dotted];
m3_3 -> m3_4  [key=0, style=solid];
m3_94 -> m3_95  [key=0, style=solid];
m3_99 -> m3_100  [key=0, style=solid, color=green];
m3_99 -> m3_8  [key=2, style=dotted, color=green];
m3_99 -> m3_70  [key=2, style=dotted, color=green];
m3_99 -> m3_101  [key=1, style=dashed, color=green, label="lambda expression"];
m3_95 -> m3_99  [key=1, style=dashed, color=green, label=deserializer];
m3_95 -> m3_102  [key=1, style=dashed, color=green, label=deserializer];
m3_95 -> n11  [key=2, style=dotted];
m3_95 -> m3_96  [key=0, style=solid];
m3_98 -> m3_99  [key=0, style=solid, color=green];
m3_98 -> m3_68  [key=2, style=dotted];
m3_98 -> m3_69  [key=2, style=dotted];
m3_96 -> m3_98  [key=1, style=dashed, color=darkseagreen4, label=binder];
m3_96 -> m3_97  [key=0, style=solid];
m3_96 -> m3_66  [key=2, style=dotted];
m3_97 -> m3_98  [key=0, style=solid];
m3_97 -> m3_67  [key=2, style=dotted];
m3_100 -> m3_94  [key=0, style=bold, color=blue];
m3_15 -> m3_16  [key=0, style=solid];
m3_51 -> m3_52  [key=0, style=solid];
m3_52 -> m3_55  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_52 -> m3_53  [key=0, style=solid];
m3_52 -> m3_29  [key=2, style=dotted];
m3_53 -> m3_54  [key=0, style=solid];
m3_53 -> m3_30  [key=2, style=dotted];
m3_54 -> m3_51  [key=0, style=bold, color=blue];
m3_238 -> m3_239  [key=0, style=solid];
m3_243 -> m3_8  [key=2, style=dotted];
m3_243 -> m3_244  [key=0, style=solid];
m3_243 -> m3_11  [key=2, style=dotted];
m3_243 -> m3_256  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_244 -> m3_245  [key=0, style=solid];
m3_244 -> m3_66  [key=2, style=dotted];
m3_244 -> m3_246  [key=1, style=dashed, color=darkseagreen4, label=binder];
m3_246 -> m3_69  [key=2, style=dotted];
m3_246 -> m3_68  [key=2, style=dotted];
m3_246 -> m3_247  [key=0, style=solid];
m3_239 -> n11  [key=2, style=dotted];
m3_239 -> m3_244  [key=1, style=dashed, color=darkseagreen4, label=userDeserializer];
m3_239 -> m3_240  [key=0, style=solid];
m3_239 -> m3_251  [key=1, style=dashed, color=darkseagreen4, label=userDeserializer];
m3_239 -> m3_247  [key=1, style=dashed, color=darkseagreen4, label=userDeserializer];
m3_239 -> m3_260  [key=1, style=dashed, color=darkseagreen4, label=userDeserializer];
m3_241 -> n11  [key=2, style=dotted];
m3_241 -> m3_243  [key=1, style=dashed, color=darkseagreen4, label=defaultDeserializer];
m3_241 -> m3_242  [key=0, style=solid];
m3_241 -> m3_254  [key=1, style=dashed, color=darkseagreen4, label=defaultDeserializer];
m3_241 -> m3_248  [key=1, style=dashed, color=darkseagreen4, label=defaultDeserializer];
m3_241 -> m3_263  [key=1, style=dashed, color=darkseagreen4, label=defaultDeserializer];
m3_240 -> m3_8  [key=2, style=dotted];
m3_240 -> m3_9  [key=2, style=dotted];
m3_240 -> m3_241  [key=0, style=solid];
m3_240 -> m3_11  [key=2, style=dotted];
m3_240 -> m3_250  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_247 -> m3_8  [key=2, style=dotted];
m3_247 -> m3_9  [key=2, style=dotted];
m3_247 -> m3_70  [key=2, style=dotted];
m3_247 -> m3_248  [key=0, style=solid];
m3_247 -> m3_259  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_242 -> m3_8  [key=2, style=dotted];
m3_242 -> m3_9  [key=2, style=dotted];
m3_242 -> m3_243  [key=0, style=solid];
m3_242 -> m3_11  [key=2, style=dotted];
m3_242 -> m3_253  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_248 -> m3_8  [key=2, style=dotted];
m3_248 -> m3_9  [key=2, style=dotted];
m3_248 -> m3_87  [key=2, style=dotted];
m3_248 -> m3_249  [key=0, style=solid];
m3_248 -> m3_262  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_245 -> m3_246  [key=0, style=solid];
m3_245 -> m3_67  [key=2, style=dotted];
m3_249 -> m3_238  [key=0, style=bold, color=blue];
m3_188 -> m3_189  [key=0, style=solid];
m3_189 -> m3_190  [key=0, style=solid];
m3_189 -> m3_173  [key=2, style=dotted];
m3_189 -> m3_174  [key=2, style=dotted];
m3_189 -> m3_193  [key=1, style=dashed, color=darkseagreen4, label=binder];
m3_193 -> m3_69  [key=2, style=dotted];
m3_193 -> m3_194  [key=0, style=solid];
m3_193 -> m3_195  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_190 -> m3_132  [key=2, style=dotted];
m3_190 -> m3_133  [key=2, style=dotted];
m3_190 -> m3_193  [key=1, style=dashed, color=darkseagreen4, label=context];
m3_190 -> m3_191  [key=0, style=solid];
m3_190 -> m3_192  [key=1, style=dashed, color=darkseagreen4, label=context];
m3_192 -> m3_193  [key=0, style=solid];
m3_194 -> m3_195  [key=0, style=solid];
m3_194 -> m3_175  [key=2, style=dotted];
m3_195 -> m3_196  [key=0, style=solid];
m3_195 -> m3_175  [key=2, style=dotted];
m3_191 -> m3_192  [key=0, style=solid];
m3_196 -> m3_188  [key=0, style=bold, color=blue];
m3_177 -> m3_178  [key=0, style=solid];
m3_182 -> m3_183  [key=0, style=solid, color=green];
m3_182 -> m3_69  [key=2, style=dotted, color=green];
m3_178 -> m3_182  [key=1, style=dashed, color=green, label=binder];
m3_178 -> m3_179  [key=0, style=solid];
m3_178 -> m3_174  [key=2, style=dotted];
m3_179 -> m3_182  [key=1, style=dashed, color=green, label=context];
m3_179 -> m3_180  [key=0, style=solid];
m3_179 -> m3_132  [key=2, style=dotted];
m3_179 -> m3_133  [key=2, style=dotted];
m3_179 -> m3_181  [key=1, style=dashed, color=darkseagreen4, label=context];
m3_181 -> m3_182  [key=0, style=solid, color=green];
m3_183 -> m3_8  [key=2, style=dotted];
m3_183 -> m3_9  [key=2, style=dotted];
m3_183 -> m3_70  [key=2, style=dotted];
m3_183 -> m3_184  [key=0, style=solid];
m3_183 -> m3_134  [key=2, style=dotted];
m3_183 -> m3_185  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_180 -> m3_181  [key=0, style=solid];
m3_184 -> m3_177  [key=0, style=bold, color=blue];
m3_174 -> m3_303  [key=1, style=dashed, color=darkseagreen4, label="Nancy.ModelBinding.IFieldNameConverter"];
m3_174 -> m3_304  [key=1, style=dashed, color=darkseagreen4, label="Nancy.ModelBinding.BindingDefaults"];
m3_174 -> m3_301  [key=0, style=solid];
m3_174 -> m3_302  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<Nancy.ModelBinding.IBodyDeserializer>"];
m3_303 -> m3_304  [key=0, style=solid];
m3_303 -> m3_305  [key=1, style=dashed, color=darkseagreen4, label=converter];
m3_304 -> m3_305  [key=0, style=solid];
m3_302 -> m3_303  [key=0, style=solid];
m3_302 -> m3_305  [key=1, style=dashed, color=darkseagreen4, label=deserializers];
m3_305 -> m3_306  [key=0, style=solid];
m3_305 -> m3_50  [key=2, style=dotted];
m3_301 -> m3_302  [key=0, style=solid];
m3_301 -> m3_305  [key=1, style=dashed, color=darkseagreen4, label=converters];
m3_306 -> m3_174  [key=0, style=bold, color=blue];
m3_43 -> m3_44  [key=0, style=solid];
m3_44 -> m3_29  [key=2, style=dotted];
m3_44 -> m3_47  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_44 -> m3_45  [key=0, style=solid];
m3_45 -> m3_30  [key=2, style=dotted];
m3_45 -> m3_46  [key=0, style=solid];
m3_46 -> m3_43  [key=0, style=bold, color=blue];
m3_25 -> m3_26  [key=0, style=solid];
m3_26 -> m3_31  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_26 -> m3_27  [key=0, style=solid];
m3_26 -> m3_29  [key=2, style=dotted];
m3_27 -> m3_28  [key=0, style=solid];
m3_27 -> m3_30  [key=2, style=dotted];
m3_28 -> m3_25  [key=0, style=bold, color=blue];
m3_4 -> m3_8  [key=2, style=dotted];
m3_4 -> m3_5  [key=0, style=solid, color=red];
m3_4 -> m3_11  [key=2, style=dotted];
m3_4 -> m3_19  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_4 -> m3_6  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Bootstrapper.IPipelines"];
m3_5 -> m3_8  [key=2, style=dotted, color=red];
m3_5 -> m3_6  [key=0, style=solid, color=red];
m3_5 -> m3_11  [key=2, style=dotted];
m3_5 -> m3_22  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_5 -> m3_16  [key=1, style=dashed, color=red, label="Nancy.NancyContext"];
m3_6 -> m3_0  [key=0, style=bold, color=blue];
m3_6 -> m3_7  [key=0, style=solid];
m3_6 -> m3_9  [key=2, style=dotted];
m3_197 -> m3_198  [key=0, style=solid];
m3_203 -> m3_204  [key=0, style=solid, color=green];
m3_203 -> m3_68  [key=2, style=dotted, color=green];
m3_203 -> m3_69  [key=2, style=dotted, color=green];
m3_201 -> m3_203  [key=1, style=dashed, color=green, label=binder];
m3_201 -> m3_202  [key=0, style=solid];
m3_201 -> m3_174  [key=2, style=dotted];
m3_202 -> m3_203  [key=0, style=solid, color=green];
m3_202 -> m3_67  [key=2, style=dotted];
m3_204 -> m3_8  [key=2, style=dotted];
m3_204 -> m3_9  [key=2, style=dotted];
m3_204 -> m3_70  [key=2, style=dotted];
m3_204 -> m3_205  [key=0, style=solid];
m3_204 -> m3_212  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_200 -> m3_8  [key=2, style=dotted];
m3_200 -> m3_201  [key=0, style=solid];
m3_200 -> m3_11  [key=2, style=dotted];
m3_200 -> m3_209  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_198 -> n11  [key=2, style=dotted];
m3_198 -> m3_204  [key=1, style=dashed, color=darkseagreen4, label=deserializer];
m3_198 -> m3_200  [key=1, style=dashed, color=darkseagreen4, label=deserializer];
m3_198 -> m3_199  [key=0, style=solid];
m3_198 -> m3_207  [key=1, style=dashed, color=darkseagreen4, label=deserializer];
m3_198 -> m3_213  [key=1, style=dashed, color=darkseagreen4, label=deserializer];
m3_199 -> m3_8  [key=2, style=dotted];
m3_199 -> m3_9  [key=2, style=dotted];
m3_199 -> m3_200  [key=0, style=solid];
m3_199 -> m3_11  [key=2, style=dotted];
m3_199 -> m3_206  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_205 -> m3_197  [key=0, style=bold, color=blue];
m3_18 -> m3_0  [key=3, color=darkorchid, style=bold, label="Field variable Nancy.IRootPathProvider rootPathProvider"];
m3_18 -> m3_16  [key=0, style=bold, color=blue];
m3_142 -> m3_143  [key=0, style=solid];
m3_146 -> m3_147  [key=0, style=solid];
m3_146 -> m3_66  [key=2, style=dotted];
m3_146 -> m3_149  [key=1, style=dashed, color=darkseagreen4, label=binder];
m3_143 -> n11  [key=2, style=dotted];
m3_143 -> m3_146  [key=1, style=dashed, color=darkseagreen4, label=typeConverter];
m3_143 -> m3_144  [key=0, style=solid];
m3_143 -> m3_153  [key=1, style=dashed, color=darkseagreen4, label=typeConverter];
m3_143 -> m3_145  [key=1, style=dashed, color=darkseagreen4, label=typeConverter];
m3_143 -> m3_156  [key=1, style=dashed, color=darkseagreen4, label=typeConverter];
m3_143 -> m3_150  [key=1, style=dashed, color=darkseagreen4, label=typeConverter];
m3_143 -> m3_160  [key=1, style=dashed, color=darkseagreen4, label=typeConverter];
m3_144 -> m3_8  [key=2, style=dotted];
m3_144 -> m3_9  [key=2, style=dotted];
m3_144 -> m3_145  [key=0, style=solid];
m3_144 -> m3_11  [key=2, style=dotted];
m3_144 -> m3_152  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_145 -> m3_8  [key=2, style=dotted];
m3_145 -> m3_9  [key=2, style=dotted];
m3_145 -> m3_146  [key=0, style=solid];
m3_145 -> m3_11  [key=2, style=dotted];
m3_145 -> m3_155  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_150 -> m3_8  [key=2, style=dotted];
m3_150 -> m3_9  [key=2, style=dotted];
m3_150 -> m3_70  [key=2, style=dotted];
m3_150 -> m3_151  [key=0, style=solid];
m3_150 -> m3_159  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_149 -> m3_69  [key=2, style=dotted];
m3_149 -> m3_150  [key=0, style=solid];
m3_147 -> m3_132  [key=2, style=dotted];
m3_147 -> m3_133  [key=2, style=dotted];
m3_147 -> m3_149  [key=1, style=dashed, color=darkseagreen4, label=context];
m3_147 -> m3_148  [key=0, style=solid];
m3_148 -> m3_149  [key=0, style=solid];
m3_151 -> m3_142  [key=0, style=bold, color=blue];
m3_79 -> m3_80  [key=0, style=solid];
m3_85 -> m3_86  [key=0, style=solid, color=green];
m3_85 -> m3_8  [key=2, style=dotted, color=green];
m3_85 -> m3_9  [key=2, style=dotted, color=green];
m3_85 -> m3_87  [key=2, style=dotted, color=green];
m3_85 -> m3_91  [key=1, style=dashed, color=green, label="lambda expression"];
m3_80 -> m3_85  [key=1, style=dashed, color=green, label=deserializer];
m3_80 -> m3_92  [key=1, style=dashed, color=green, label=deserializer];
m3_80 -> n11  [key=2, style=dotted];
m3_80 -> m3_81  [key=0, style=solid];
m3_80 -> m3_89  [key=1, style=dashed, color=darkseagreen4, label=deserializer];
m3_80 -> m3_82  [key=1, style=dashed, color=darkseagreen4, label=deserializer];
m3_84 -> m3_85  [key=0, style=solid, color=green];
m3_84 -> m3_68  [key=2, style=dotted];
m3_84 -> m3_69  [key=2, style=dotted];
m3_82 -> m3_84  [key=1, style=dashed, color=darkseagreen4, label=binder];
m3_82 -> m3_83  [key=0, style=solid];
m3_82 -> m3_66  [key=2, style=dotted];
m3_81 -> m3_8  [key=2, style=dotted];
m3_81 -> m3_9  [key=2, style=dotted];
m3_81 -> m3_82  [key=0, style=solid];
m3_81 -> m3_11  [key=2, style=dotted];
m3_81 -> m3_88  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_83 -> m3_84  [key=0, style=solid];
m3_83 -> m3_67  [key=2, style=dotted];
m3_86 -> m3_79  [key=0, style=bold, color=blue];
m3_7 -> m3_4  [key=0, style=bold, color=blue];
m3_122 -> m3_123  [key=0, style=solid];
m3_125 -> m3_126  [key=0, style=solid];
m3_125 -> m3_66  [key=2, style=dotted];
m3_125 -> m3_129  [key=1, style=dashed, color=darkseagreen4, label=binder];
m3_123 -> n11  [key=2, style=dotted];
m3_123 -> m3_125  [key=1, style=dashed, color=darkseagreen4, label=typeConverter];
m3_123 -> m3_124  [key=0, style=solid];
m3_123 -> m3_136  [key=1, style=dashed, color=darkseagreen4, label=typeConverter];
m3_123 -> m3_130  [key=1, style=dashed, color=darkseagreen4, label=typeConverter];
m3_123 -> m3_140  [key=1, style=dashed, color=darkseagreen4, label=typeConverter];
m3_124 -> m3_8  [key=2, style=dotted];
m3_124 -> m3_9  [key=2, style=dotted];
m3_124 -> m3_125  [key=0, style=solid];
m3_124 -> m3_11  [key=2, style=dotted];
m3_124 -> m3_135  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_130 -> m3_8  [key=2, style=dotted];
m3_130 -> m3_9  [key=2, style=dotted];
m3_130 -> m3_70  [key=2, style=dotted];
m3_130 -> m3_131  [key=0, style=solid];
m3_130 -> m3_134  [key=2, style=dotted];
m3_130 -> m3_139  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_129 -> m3_69  [key=2, style=dotted];
m3_129 -> m3_130  [key=0, style=solid];
m3_126 -> m3_132  [key=2, style=dotted];
m3_126 -> m3_133  [key=2, style=dotted];
m3_126 -> m3_129  [key=1, style=dashed, color=darkseagreen4, label=context];
m3_126 -> m3_127  [key=0, style=solid];
m3_126 -> m3_128  [key=1, style=dashed, color=darkseagreen4, label=context];
m3_128 -> m3_129  [key=0, style=solid];
m3_127 -> m3_128  [key=0, style=solid];
m3_131 -> m3_122  [key=0, style=bold, color=blue];
m3_36 -> m3_37  [key=0, style=solid];
m3_37 -> m3_40  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_37 -> m3_38  [key=0, style=solid];
m3_37 -> m3_29  [key=2, style=dotted];
m3_38 -> m3_39  [key=0, style=solid];
m3_38 -> m3_30  [key=2, style=dotted];
m3_39 -> m3_36  [key=0, style=bold, color=blue];
m3_162 -> m3_163  [key=0, style=solid];
m3_163 -> m3_164  [key=0, style=solid];
m3_163 -> m3_173  [key=2, style=dotted];
m3_163 -> m3_174  [key=2, style=dotted];
m3_163 -> m3_168  [key=1, style=dashed, color=darkseagreen4, label=binder];
m3_168 -> m3_69  [key=2, style=dotted];
m3_168 -> m3_169  [key=0, style=solid];
m3_168 -> m3_170  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_168 -> m3_171  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_164 -> m3_132  [key=2, style=dotted];
m3_164 -> m3_133  [key=2, style=dotted];
m3_164 -> m3_168  [key=1, style=dashed, color=darkseagreen4, label=context];
m3_164 -> m3_165  [key=0, style=solid];
m3_164 -> m3_166  [key=1, style=dashed, color=darkseagreen4, label=context];
m3_164 -> m3_167  [key=1, style=dashed, color=darkseagreen4, label=context];
m3_167 -> m3_168  [key=0, style=solid];
m3_169 -> m3_170  [key=0, style=solid];
m3_169 -> m3_175  [key=2, style=dotted];
m3_170 -> m3_171  [key=0, style=solid];
m3_170 -> m3_175  [key=2, style=dotted];
m3_171 -> m3_172  [key=0, style=solid];
m3_171 -> m3_176  [key=2, style=dotted];
m3_165 -> m3_166  [key=0, style=solid];
m3_166 -> m3_167  [key=0, style=solid];
m3_172 -> m3_162  [key=0, style=bold, color=blue];
m3_47 -> m3_48  [key=0, style=solid];
m3_11 -> m3_12  [key=0, style=solid];
m3_11 -> m3_13  [key=2, style=dotted];
m3_11 -> m3_14  [key=2, style=dotted];
m3_11 -> m3_15  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_11 -> m3_20  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_16 -> m3_17  [key=0, style=solid];
m3_16 -> m3_18  [key=2, style=dotted];
m3_16 -> m3_19  [key=2, style=dotted];
m3_10 -> m3_11  [key=0, style=solid];
m3_10 -> m3_16  [key=1, style=dashed, color=darkseagreen4, label="Nancy.NancyContext"];
m3_12 -> m3_10  [key=0, style=bold, color=blue];
m3_12 -> m3_13  [key=0, style=solid, color=green];
m3_20 -> m3_21  [key=0, style=solid];
m3_17 -> m3_15  [key=0, style=bold, color=blue];
m3_17 -> m3_18  [key=0, style=solid];
m3_21 -> m3_22  [key=0, style=solid];
m3_21 -> m3_19  [key=0, style=bold, color=blue];
m3_22 -> m3_20  [key=0, style=bold, color=blue];
m3_22 -> m3_12  [key=0, style=bold, color=blue];
m3_22 -> m3_23  [key=0, style=solid];
m3_13 -> m3_22  [key=0, style=solid, color=green];
m3_13 -> m3_15  [key=2, style=dotted, color=green];
m3_91 -> m3_92  [key=0, style=solid, color=green];
m3_92 -> m3_93  [key=0, style=solid, color=green];
m3_92 -> m3_78  [key=2, style=dotted, color=green];
m3_93 -> m3_91  [key=0, style=bold, color=blue];
m3_101 -> m3_102  [key=0, style=solid, color=green];
m3_102 -> m3_103  [key=0, style=solid, color=green];
m3_102 -> m3_74  [key=2, style=dotted, color=green];
m3_103 -> m3_101  [key=0, style=bold, color=blue];
m3_23 -> m3_24  [key=0, style=solid];
m3_23 -> m3_1  [key=1, style=dashed, color=darkseagreen4, label="Nancy.StaticContentStartup"];
m3_23 -> m3_2  [key=1, style=dashed, color=darkseagreen4, label="Nancy.StaticContentStartup"];
m3_23 -> m3_5  [key=1, style=dashed, color=red, label="Nancy.StaticContentStartup"];
m3_23 -> m3_11  [key=1, style=dashed, color=darkseagreen4, label="Nancy.StaticContentStartup"];
m3_23 -> m3_16  [key=1, style=dashed, color=darkseagreen4, label="Nancy.StaticContentStartup"];
m3_186 -> m3_15  [key=2, style=dotted];
m3_186 -> m3_187  [key=0, style=solid];
m3_210 -> m3_211  [key=0, style=solid];
m3_233 -> m3_234  [key=0, style=solid];
m3_257 -> m3_258  [key=0, style=solid];
m3_293 -> m3_294  [key=0, style=solid];
m3_32 -> n11  [key=2, style=dotted];
m3_32 -> m3_33  [key=0, style=solid];
m3_32 -> m3_34  [key=2, style=dotted];
m3_32 -> m3_35  [key=2, style=dotted];
m3_41 -> n11  [key=2, style=dotted];
m3_41 -> m3_42  [key=0, style=solid];
m3_41 -> m3_34  [key=2, style=dotted];
m3_41 -> m3_35  [key=2, style=dotted];
m3_56 -> n11  [key=2, style=dotted];
m3_56 -> m3_57  [key=0, style=solid];
m3_56 -> m3_34  [key=2, style=dotted];
m3_89 -> m3_74  [key=2, style=dotted];
m3_89 -> m3_90  [key=0, style=solid];
m3_76 -> m3_78  [key=2, style=dotted];
m3_76 -> m3_77  [key=0, style=solid];
m3_120 -> m3_78  [key=2, style=dotted];
m3_120 -> m3_121  [key=0, style=solid];
m3_213 -> m3_78  [key=2, style=dotted];
m3_213 -> m3_214  [key=0, style=solid];
m3_260 -> m3_78  [key=2, style=dotted];
m3_260 -> m3_261  [key=0, style=solid];
m3_263 -> m3_78  [key=2, style=dotted];
m3_263 -> m3_264  [key=0, style=solid];
m3_72 -> m3_74  [key=2, style=dotted];
m3_72 -> m3_73  [key=0, style=solid];
m3_117 -> m3_74  [key=2, style=dotted];
m3_117 -> m3_118  [key=0, style=solid];
m3_207 -> m3_74  [key=2, style=dotted];
m3_207 -> m3_208  [key=0, style=solid];
m3_251 -> m3_74  [key=2, style=dotted];
m3_251 -> m3_252  [key=0, style=solid];
m3_254 -> m3_74  [key=2, style=dotted];
m3_254 -> m3_255  [key=0, style=solid];
m3_185 -> m3_186  [key=0, style=solid];
m3_212 -> m3_213  [key=0, style=solid];
m3_235 -> m3_236  [key=0, style=solid];
m3_19 -> m3_20  [key=0, style=solid];
m3_24 -> m3_22  [key=0, style=bold, color=blue];
m3_24 -> m3_16  [key=1, style=dashed, color=darkseagreen4, label="Nancy.NancyContext"];
m3_187 -> m3_185  [key=0, style=bold, color=blue];
m3_209 -> m3_210  [key=0, style=solid];
m3_211 -> m3_209  [key=0, style=bold, color=blue];
m3_232 -> m3_233  [key=0, style=solid];
m3_234 -> m3_232  [key=0, style=bold, color=blue];
m3_256 -> m3_257  [key=0, style=solid];
m3_258 -> m3_256  [key=0, style=bold, color=blue];
m3_292 -> m3_293  [key=0, style=solid];
m3_294 -> m3_292  [key=0, style=bold, color=blue];
m3_31 -> m3_32  [key=0, style=solid];
m3_33 -> m3_31  [key=0, style=bold, color=blue];
m3_40 -> m3_41  [key=0, style=solid];
m3_42 -> m3_40  [key=0, style=bold, color=blue];
m3_55 -> m3_56  [key=0, style=solid];
m3_57 -> m3_55  [key=0, style=bold, color=blue];
m3_136 -> m3_137  [key=0, style=solid];
m3_136 -> m3_138  [key=2, style=dotted];
m3_140 -> m3_141  [key=0, style=solid];
m3_140 -> m3_138  [key=2, style=dotted];
m3_153 -> m3_154  [key=0, style=solid];
m3_153 -> m3_138  [key=2, style=dotted];
m3_156 -> m3_157  [key=0, style=solid];
m3_156 -> m3_158  [key=2, style=dotted];
m3_160 -> m3_161  [key=0, style=solid];
m3_160 -> m3_158  [key=2, style=dotted];
m3_227 -> m3_228  [key=0, style=solid];
m3_227 -> m3_138  [key=2, style=dotted];
m3_230 -> m3_231  [key=0, style=solid];
m3_230 -> m3_158  [key=2, style=dotted];
m3_236 -> m3_237  [key=0, style=solid];
m3_236 -> m3_158  [key=2, style=dotted];
m3_281 -> m3_282  [key=0, style=solid];
m3_281 -> m3_138  [key=2, style=dotted];
m3_284 -> m3_285  [key=0, style=solid];
m3_284 -> m3_158  [key=2, style=dotted];
m3_296 -> m3_297  [key=0, style=solid];
m3_296 -> m3_158  [key=2, style=dotted];
m3_287 -> m3_288  [key=0, style=solid];
m3_287 -> m3_138  [key=2, style=dotted];
m3_290 -> m3_291  [key=0, style=solid];
m3_290 -> m3_158  [key=2, style=dotted];
m3_299 -> m3_300  [key=0, style=solid];
m3_299 -> m3_158  [key=2, style=dotted];
m3_71 -> m3_72  [key=0, style=solid];
m3_75 -> m3_76  [key=0, style=solid];
m3_88 -> m3_89  [key=0, style=solid];
m3_119 -> m3_120  [key=0, style=solid];
m3_116 -> m3_117  [key=0, style=solid];
m3_135 -> m3_136  [key=0, style=solid];
m3_139 -> m3_140  [key=0, style=solid];
m3_152 -> m3_153  [key=0, style=solid];
m3_155 -> m3_156  [key=0, style=solid];
m3_159 -> m3_160  [key=0, style=solid];
m3_206 -> m3_207  [key=0, style=solid];
m3_226 -> m3_227  [key=0, style=solid];
m3_229 -> m3_230  [key=0, style=solid];
m3_250 -> m3_251  [key=0, style=solid];
m3_259 -> m3_260  [key=0, style=solid];
m3_253 -> m3_254  [key=0, style=solid];
m3_262 -> m3_263  [key=0, style=solid];
m3_280 -> m3_281  [key=0, style=solid];
m3_283 -> m3_284  [key=0, style=solid];
m3_295 -> m3_296  [key=0, style=solid];
m3_286 -> m3_287  [key=0, style=solid];
m3_289 -> m3_290  [key=0, style=solid];
m3_298 -> m3_299  [key=0, style=solid];
m3_90 -> m3_88  [key=0, style=bold, color=blue];
m3_77 -> m3_75  [key=0, style=bold, color=blue];
m3_121 -> m3_119  [key=0, style=bold, color=blue];
m3_214 -> m3_212  [key=0, style=bold, color=blue];
m3_261 -> m3_259  [key=0, style=bold, color=blue];
m3_264 -> m3_262  [key=0, style=bold, color=blue];
m3_73 -> m3_71  [key=0, style=bold, color=blue];
m3_118 -> m3_116  [key=0, style=bold, color=blue];
m3_208 -> m3_206  [key=0, style=bold, color=blue];
m3_252 -> m3_250  [key=0, style=bold, color=blue];
m3_255 -> m3_253  [key=0, style=bold, color=blue];
m3_237 -> m3_235  [key=0, style=bold, color=blue];
m3_48 -> m3_35  [key=2, style=dotted];
m3_48 -> m3_50  [key=2, style=dotted];
m3_48 -> m3_49  [key=0, style=solid];
m3_137 -> m3_135  [key=0, style=bold, color=blue];
m3_141 -> m3_139  [key=0, style=bold, color=blue];
m3_154 -> m3_152  [key=0, style=bold, color=blue];
m3_157 -> m3_155  [key=0, style=bold, color=blue];
m3_161 -> m3_159  [key=0, style=bold, color=blue];
m3_228 -> m3_226  [key=0, style=bold, color=blue];
m3_231 -> m3_229  [key=0, style=bold, color=blue];
m3_282 -> m3_280  [key=0, style=bold, color=blue];
m3_285 -> m3_283  [key=0, style=bold, color=blue];
m3_297 -> m3_295  [key=0, style=bold, color=blue];
m3_288 -> m3_286  [key=0, style=bold, color=blue];
m3_291 -> m3_289  [key=0, style=bold, color=blue];
m3_300 -> m3_298  [key=0, style=bold, color=blue];
m3_49 -> m3_47  [key=0, style=bold, color=blue];
m3_67 -> m3_307  [key=0, style=solid];
m3_67 -> m3_62  [key=3, color=darkorchid, style=bold, label="Parameter variable string name"];
m3_308 -> m3_132  [key=2, style=dotted];
m3_308 -> m3_309  [key=0, style=solid];
m3_308 -> m3_311  [key=2, style=dotted];
m3_307 -> m3_308  [key=0, style=solid];
m3_307 -> m3_310  [key=2, style=dotted];
m3_309 -> m3_67  [key=0, style=bold, color=blue];
m3_58 -> m3_59  [key=0, style=solid];
m3_61 -> m3_62  [key=0, style=solid];
m3_61 -> m3_66  [key=2, style=dotted];
m3_61 -> m3_63  [key=1, style=dashed, color=darkseagreen4, label=binder];
m3_63 -> m3_69  [key=2, style=dotted];
m3_63 -> m3_68  [key=2, style=dotted];
m3_63 -> m3_64  [key=0, style=solid];
m3_59 -> n11  [key=2, style=dotted];
m3_59 -> m3_61  [key=1, style=dashed, color=darkseagreen4, label=deserializer];
m3_59 -> m3_60  [key=0, style=solid];
m3_59 -> m3_72  [key=1, style=dashed, color=darkseagreen4, label=deserializer];
m3_59 -> m3_64  [key=1, style=dashed, color=darkseagreen4, label=deserializer];
m3_59 -> m3_76  [key=1, style=dashed, color=darkseagreen4, label=deserializer];
m3_60 -> m3_8  [key=2, style=dotted];
m3_60 -> m3_9  [key=2, style=dotted];
m3_60 -> m3_61  [key=0, style=solid];
m3_60 -> m3_11  [key=2, style=dotted];
m3_60 -> m3_71  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_64 -> m3_8  [key=2, style=dotted];
m3_64 -> m3_9  [key=2, style=dotted];
m3_64 -> m3_70  [key=2, style=dotted];
m3_64 -> m3_65  [key=0, style=solid];
m3_64 -> m3_75  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_62 -> m3_63  [key=0, style=solid];
m3_62 -> m3_67  [key=2, style=dotted];
m3_65 -> m3_58  [key=0, style=bold, color=blue];
m3_265 -> m3_266  [key=0, style=solid];
m3_272 -> m3_8  [key=2, style=dotted];
m3_272 -> m3_273  [key=0, style=solid];
m3_272 -> m3_11  [key=2, style=dotted];
m3_272 -> m3_292  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_273 -> m3_274  [key=0, style=solid];
m3_273 -> m3_66  [key=2, style=dotted];
m3_273 -> m3_276  [key=1, style=dashed, color=darkseagreen4, label=binder];
m3_266 -> n11  [key=2, style=dotted];
m3_266 -> m3_273  [key=1, style=dashed, color=darkseagreen4, label=userTypeConverter];
m3_266 -> m3_267  [key=0, style=solid];
m3_266 -> m3_281  [key=1, style=dashed, color=darkseagreen4, label=userTypeConverter];
m3_266 -> m3_268  [key=1, style=dashed, color=darkseagreen4, label=userTypeConverter];
m3_266 -> m3_284  [key=1, style=dashed, color=darkseagreen4, label=userTypeConverter];
m3_266 -> m3_277  [key=1, style=dashed, color=darkseagreen4, label=userTypeConverter];
m3_266 -> m3_296  [key=1, style=dashed, color=darkseagreen4, label=userTypeConverter];
m3_269 -> n11  [key=2, style=dotted];
m3_269 -> m3_272  [key=1, style=dashed, color=darkseagreen4, label=defaultTypeConverter];
m3_269 -> m3_270  [key=0, style=solid];
m3_269 -> m3_287  [key=1, style=dashed, color=darkseagreen4, label=defaultTypeConverter];
m3_269 -> m3_271  [key=1, style=dashed, color=darkseagreen4, label=defaultTypeConverter];
m3_269 -> m3_290  [key=1, style=dashed, color=darkseagreen4, label=defaultTypeConverter];
m3_269 -> m3_278  [key=1, style=dashed, color=darkseagreen4, label=defaultTypeConverter];
m3_269 -> m3_299  [key=1, style=dashed, color=darkseagreen4, label=defaultTypeConverter];
m3_267 -> m3_8  [key=2, style=dotted];
m3_267 -> m3_9  [key=2, style=dotted];
m3_267 -> m3_268  [key=0, style=solid];
m3_267 -> m3_11  [key=2, style=dotted];
m3_267 -> m3_280  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_268 -> m3_8  [key=2, style=dotted];
m3_268 -> m3_9  [key=2, style=dotted];
m3_268 -> m3_269  [key=0, style=solid];
m3_268 -> m3_11  [key=2, style=dotted];
m3_268 -> m3_283  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_277 -> m3_8  [key=2, style=dotted];
m3_277 -> m3_9  [key=2, style=dotted];
m3_277 -> m3_70  [key=2, style=dotted];
m3_277 -> m3_278  [key=0, style=solid];
m3_277 -> m3_295  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_270 -> m3_8  [key=2, style=dotted];
m3_270 -> m3_9  [key=2, style=dotted];
m3_270 -> m3_271  [key=0, style=solid];
m3_270 -> m3_11  [key=2, style=dotted];
m3_270 -> m3_286  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_271 -> m3_8  [key=2, style=dotted];
m3_271 -> m3_9  [key=2, style=dotted];
m3_271 -> m3_272  [key=0, style=solid];
m3_271 -> m3_11  [key=2, style=dotted];
m3_271 -> m3_289  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_278 -> m3_8  [key=2, style=dotted];
m3_278 -> m3_9  [key=2, style=dotted];
m3_278 -> m3_87  [key=2, style=dotted];
m3_278 -> m3_279  [key=0, style=solid];
m3_278 -> m3_298  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_276 -> m3_69  [key=2, style=dotted];
m3_276 -> m3_277  [key=0, style=solid];
m3_274 -> m3_132  [key=2, style=dotted];
m3_274 -> m3_133  [key=2, style=dotted];
m3_274 -> m3_276  [key=1, style=dashed, color=darkseagreen4, label=context];
m3_274 -> m3_275  [key=0, style=solid];
m3_275 -> m3_276  [key=0, style=solid];
m3_279 -> m3_265  [key=0, style=bold, color=blue];
m3_215 -> m3_216  [key=0, style=solid];
m3_223 -> m3_224  [key=0, style=solid, color=green];
m3_223 -> m3_69  [key=2, style=dotted, color=green];
m3_220 -> m3_223  [key=1, style=dashed, color=green, label=binder];
m3_220 -> m3_221  [key=0, style=solid];
m3_220 -> m3_174  [key=2, style=dotted];
m3_221 -> m3_223  [key=1, style=dashed, color=green, label=context];
m3_221 -> m3_222  [key=0, style=solid];
m3_221 -> m3_132  [key=2, style=dotted];
m3_221 -> m3_133  [key=2, style=dotted];
m3_222 -> m3_223  [key=0, style=solid, color=green];
m3_224 -> m3_8  [key=2, style=dotted];
m3_224 -> m3_9  [key=2, style=dotted];
m3_224 -> m3_70  [key=2, style=dotted];
m3_224 -> m3_225  [key=0, style=solid];
m3_224 -> m3_235  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_219 -> m3_8  [key=2, style=dotted];
m3_219 -> m3_220  [key=0, style=solid];
m3_219 -> m3_11  [key=2, style=dotted];
m3_219 -> m3_232  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_216 -> n11  [key=2, style=dotted];
m3_216 -> m3_224  [key=1, style=dashed, color=darkseagreen4, label=typeConverter];
m3_216 -> m3_219  [key=1, style=dashed, color=darkseagreen4, label=typeConverter];
m3_216 -> m3_217  [key=0, style=solid];
m3_216 -> m3_227  [key=1, style=dashed, color=darkseagreen4, label=typeConverter];
m3_216 -> m3_218  [key=1, style=dashed, color=darkseagreen4, label=typeConverter];
m3_216 -> m3_230  [key=1, style=dashed, color=darkseagreen4, label=typeConverter];
m3_216 -> m3_236  [key=1, style=dashed, color=darkseagreen4, label=typeConverter];
m3_217 -> m3_8  [key=2, style=dotted];
m3_217 -> m3_9  [key=2, style=dotted];
m3_217 -> m3_218  [key=0, style=solid];
m3_217 -> m3_11  [key=2, style=dotted];
m3_217 -> m3_226  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_218 -> m3_8  [key=2, style=dotted];
m3_218 -> m3_9  [key=2, style=dotted];
m3_218 -> m3_219  [key=0, style=solid];
m3_218 -> m3_11  [key=2, style=dotted];
m3_218 -> m3_229  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_225 -> m3_215  [key=0, style=bold, color=blue];
m3_104 -> m3_105  [key=0, style=solid];
m3_109 -> m3_110  [key=0, style=solid];
m3_109 -> m3_66  [key=2, style=dotted];
m3_109 -> m3_111  [key=1, style=dashed, color=darkseagreen4, label=binder];
m3_111 -> m3_69  [key=2, style=dotted];
m3_111 -> m3_68  [key=2, style=dotted];
m3_111 -> m3_112  [key=0, style=solid];
m3_106 -> n11  [key=2, style=dotted];
m3_106 -> m3_109  [key=1, style=dashed, color=darkseagreen4, label=deserializer];
m3_106 -> m3_107  [key=0, style=solid];
m3_106 -> m3_117  [key=1, style=dashed, color=darkseagreen4, label=deserializer];
m3_106 -> m3_108  [key=1, style=dashed, color=darkseagreen4, label=deserializer];
m3_106 -> m3_120  [key=1, style=dashed, color=darkseagreen4, label=deserializer];
m3_108 -> m3_8  [key=2, style=dotted];
m3_108 -> m3_9  [key=2, style=dotted];
m3_108 -> m3_109  [key=0, style=solid];
m3_108 -> m3_11  [key=2, style=dotted];
m3_108 -> m3_119  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_107 -> m3_8  [key=2, style=dotted];
m3_107 -> m3_9  [key=2, style=dotted];
m3_107 -> m3_108  [key=0, style=solid];
m3_107 -> m3_11  [key=2, style=dotted];
m3_107 -> m3_116  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_110 -> m3_111  [key=0, style=solid];
m3_110 -> m3_67  [key=2, style=dotted];
m3_112 -> m3_113  [key=0, style=solid];
m3_112 -> m3_115  [key=2, style=dotted];
m3_105 -> m3_106  [key=0, style=solid];
m3_105 -> m3_108  [key=1, style=dashed, color=darkseagreen4, label=modelObject];
m3_105 -> m3_112  [key=1, style=dashed, color=darkseagreen4, label=modelObject];
m3_105 -> m3_114  [key=2, style=dotted];
m3_113 -> m3_104  [key=0, style=bold, color=blue];
m3_312 -> m3_1  [key=1, style=dashed, color=green, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture"];
m3_312 -> m3_2  [key=1, style=dashed, color=green, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture"];
m3_312 -> m3_13  [key=1, style=dashed, color=green, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture"];
m3_312 -> m3_203  [key=1, style=dashed, color=green, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture"];
m3_312 -> m3_3  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture"];
m3_312 -> m3_4  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture"];
m3_312 -> m3_20  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture"];
m3_312 -> m3_5  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture"];
m3_312 -> m3_23  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture"];
m3_312 -> m3_61  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture"];
m3_312 -> m3_63  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture"];
m3_312 -> m3_82  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture"];
m3_312 -> m3_84  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture"];
m3_312 -> m3_96  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture"];
m3_312 -> m3_98  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture"];
m3_312 -> m3_109  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture"];
m3_312 -> m3_111  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture"];
m3_312 -> m3_125  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture"];
m3_312 -> m3_146  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture"];
m3_312 -> m3_163  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture"];
m3_312 -> m3_178  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture"];
m3_312 -> m3_183  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture"];
m3_312 -> m3_186  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture"];
m3_312 -> m3_189  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture"];
m3_312 -> m3_200  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture"];
m3_312 -> m3_210  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture"];
m3_312 -> m3_201  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture"];
m3_312 -> m3_219  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture"];
m3_312 -> m3_233  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture"];
m3_312 -> m3_220  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture"];
m3_312 -> m3_243  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture"];
m3_312 -> m3_257  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture"];
m3_312 -> m3_244  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture"];
m3_312 -> m3_246  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture"];
m3_312 -> m3_272  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture"];
m3_312 -> m3_293  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture"];
m3_312 -> m3_273  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture"];
m3_312 -> m3_303  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture"];
m3_312 -> m3_304  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture"];
m3_314 -> m3_92  [key=1, style=dashed, color=green, label=deserializer];
m3_314 -> m3_89  [key=1, style=dashed, color=darkseagreen4, label=deserializer];
m3_315 -> m3_102  [key=1, style=dashed, color=green, label=deserializer];
m3_313 -> m3_76  [key=1, style=dashed, color=darkseagreen4, label=deserializer];
m3_313 -> m3_72  [key=1, style=dashed, color=darkseagreen4, label=deserializer];
m3_316 -> m3_120  [key=1, style=dashed, color=darkseagreen4, label=deserializer];
m3_316 -> m3_117  [key=1, style=dashed, color=darkseagreen4, label=deserializer];
m3_319 -> m3_213  [key=1, style=dashed, color=darkseagreen4, label=deserializer];
m3_319 -> m3_207  [key=1, style=dashed, color=darkseagreen4, label=deserializer];
m3_321 -> m3_260  [key=1, style=dashed, color=darkseagreen4, label=userDeserializer];
m3_321 -> m3_251  [key=1, style=dashed, color=darkseagreen4, label=userDeserializer];
m3_322 -> m3_263  [key=1, style=dashed, color=darkseagreen4, label=defaultDeserializer];
m3_322 -> m3_254  [key=1, style=dashed, color=darkseagreen4, label=defaultDeserializer];
m3_317 -> m3_136  [key=1, style=dashed, color=darkseagreen4, label=typeConverter];
m3_317 -> m3_140  [key=1, style=dashed, color=darkseagreen4, label=typeConverter];
m3_318 -> m3_153  [key=1, style=dashed, color=darkseagreen4, label=typeConverter];
m3_318 -> m3_156  [key=1, style=dashed, color=darkseagreen4, label=typeConverter];
m3_318 -> m3_160  [key=1, style=dashed, color=darkseagreen4, label=typeConverter];
m3_320 -> m3_227  [key=1, style=dashed, color=darkseagreen4, label=typeConverter];
m3_320 -> m3_230  [key=1, style=dashed, color=darkseagreen4, label=typeConverter];
m3_320 -> m3_236  [key=1, style=dashed, color=darkseagreen4, label=typeConverter];
m3_323 -> m3_281  [key=1, style=dashed, color=darkseagreen4, label=userTypeConverter];
m3_323 -> m3_284  [key=1, style=dashed, color=darkseagreen4, label=userTypeConverter];
m3_323 -> m3_296  [key=1, style=dashed, color=darkseagreen4, label=userTypeConverter];
m3_324 -> m3_287  [key=1, style=dashed, color=darkseagreen4, label=defaultTypeConverter];
m3_324 -> m3_290  [key=1, style=dashed, color=darkseagreen4, label=defaultTypeConverter];
m3_324 -> m3_299  [key=1, style=dashed, color=darkseagreen4, label=defaultTypeConverter];
m4_15 -> m4_22  [key=0, style=solid];
m4_15 -> m4_0  [key=3, color=darkorchid, style=bold, label="Parameter variable string path"];
m4_22 -> m4_23  [key=0, style=solid];
m4_22 -> m4_27  [key=2, style=dotted];
m4_23 -> m4_24  [key=0, style=solid];
m4_23 -> m4_28  [key=2, style=dotted];
m4_24 -> m4_25  [key=0, style=solid];
m4_24 -> m4_29  [key=2, style=dotted];
m4_24 -> m4_30  [key=2, style=dotted];
m4_25 -> m4_26  [key=0, style=solid];
m4_25 -> m4_31  [key=2, style=dotted];
m4_26 -> m4_15  [key=0, style=bold, color=blue];
m4_11 -> m4_32  [key=0, style=solid];
m4_11 -> m4_34  [key=1, style=dashed, color=darkseagreen4, label="System.Text.RegularExpressions.GroupCollection"];
m4_11 -> m4_35  [key=1, style=dashed, color=darkseagreen4, label="System.Text.RegularExpressions.Regex"];
m4_11 -> m4_1  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Text.RegularExpressions.Regex regex"];
m4_32 -> m4_33  [key=0, style=solid];
m4_32 -> m4_39  [key=2, style=dotted];
m4_32 -> m4_35  [key=1, style=dashed, color=darkseagreen4, label=data];
m4_32 -> m4_37  [key=1, style=dashed, color=darkseagreen4, label=data];
m4_34 -> m4_35  [key=0, style=solid];
m4_34 -> m4_37  [key=0, style=solid];
m4_34 -> m4_34  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m4_35 -> m4_36  [key=0, style=solid];
m4_35 -> m4_40  [key=2, style=dotted];
m4_35 -> m4_41  [key=2, style=dotted];
m4_33 -> m4_34  [key=0, style=solid];
m4_33 -> m4_35  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_33 -> m4_36  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_37 -> m4_38  [key=0, style=solid];
m4_36 -> m4_34  [key=0, style=solid];
m4_36 -> m4_36  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_38 -> m4_11  [key=0, style=bold, color=blue];
m4_12 -> m4_13  [key=0, style=solid];
m4_13 -> m4_14  [key=0, style=solid];
m4_13 -> m4_15  [key=2, style=dotted];
m4_14 -> m4_12  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid];
m4_0 -> m4_13  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_0 -> m4_2  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_0 -> m4_7  [key=3, color=darkorchid, style=bold, label="Parameter variable string requestedPath"];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_6  [key=2, style=dotted];
m4_1 -> m4_12  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_1 -> m4_3  [key=1, style=dashed, color=red, label=routePathPattern];
m4_1 -> m4_4  [key=1, style=dashed, color=darkseagreen4, label=routePathPattern];
m4_2 -> m4_3  [key=0, style=solid, color=red];
m4_2 -> m4_7  [key=2, style=dotted];
m4_2 -> m4_2  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_3 -> m4_4  [key=0, style=solid, color=red];
m4_3 -> m4_8  [key=2, style=dotted, color=red];
m4_3 -> m4_9  [key=2, style=dotted, color=red];
m4_4 -> m4_5  [key=0, style=solid];
m4_4 -> m4_10  [key=2, style=dotted];
m4_4 -> m4_11  [key=2, style=dotted];
m4_5 -> m4_0  [key=0, style=bold, color=blue];
m4_7 -> m4_16  [key=0, style=solid];
m4_7 -> m4_17  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_7 -> m4_18  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_7 -> m4_0  [key=3, color=darkorchid, style=bold, label="Parameter variable string requestedPath"];
m4_7 -> m4_7  [key=3, color=darkorchid, style=bold, label="method methodReturn string TrimTrailingSlashFromRequestedPath"];
m4_16 -> m4_17  [key=0, style=solid];
m4_16 -> m4_18  [key=0, style=solid];
m4_16 -> m4_20  [key=2, style=dotted];
m4_17 -> m4_18  [key=0, style=solid];
m4_17 -> m4_21  [key=2, style=dotted];
m4_17 -> m4_17  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_18 -> m4_19  [key=0, style=solid];
m4_19 -> m4_7  [key=0, style=bold, color=blue];
m4_28 -> m4_42  [key=0, style=solid];
m4_28 -> m4_47  [key=0, style=bold, color=crimson];
m4_28 -> m4_22  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<string> segments"];
m4_42 -> m4_43  [key=0, style=solid, color=green];
m4_42 -> m4_48  [key=0, style=solid];
m4_42 -> m4_45  [key=1, style=dashed, color=darkseagreen4, label=segment];
m4_42 -> m4_46  [key=1, style=dashed, color=darkseagreen4, label=segment];
m4_47 -> m4_42  [key=0, style=solid];
m4_43 -> m4_44  [key=0, style=solid, color=green];
m4_43 -> m4_47  [key=1, style=dashed, color=green, label=current];
m4_43 -> m4_42  [key=3, color=green, style=bold, label="Local variable string current"];
m4_45 -> m4_46  [key=0, style=solid, color=red];
m4_45 -> m4_50  [key=2, style=dotted, color=red];
m4_45 -> m4_51  [key=2, style=dotted, color=red];
m4_46 -> m4_47  [key=0, style=solid];
m4_46 -> m4_52  [key=2, style=dotted];
m4_44 -> m4_45  [key=0, style=solid, color=red];
m4_44 -> m4_47  [key=0, style=solid];
m4_44 -> m4_49  [key=2, style=dotted];
m4_48 -> m4_28  [key=0, style=bold, color=blue];
m4_53 -> m4_1  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Routing.DefaultRoutePatternMatcher"];
m4_54 -> m4_13  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_18 -> m5_19  [key=0, style=solid];
m5_19 -> m5_20  [key=0, style=solid];
m5_19 -> m5_8  [key=2, style=dotted];
m5_20 -> m5_21  [key=0, style=solid];
m5_20 -> m5_9  [key=2, style=dotted];
m5_21 -> m5_18  [key=0, style=bold, color=blue];
m5_14 -> m5_15  [key=0, style=solid];
m5_15 -> m5_16  [key=0, style=solid];
m5_15 -> m5_8  [key=2, style=dotted];
m5_16 -> m5_17  [key=0, style=solid];
m5_16 -> m5_9  [key=2, style=dotted];
m5_17 -> m5_14  [key=0, style=bold, color=blue];
m5_27 -> m5_28  [key=0, style=solid];
m5_28 -> m5_29  [key=0, style=solid];
m5_28 -> m5_8  [key=2, style=dotted];
m5_29 -> m5_30  [key=0, style=solid];
m5_29 -> m5_9  [key=2, style=dotted];
m5_30 -> m5_27  [key=0, style=bold, color=blue];
m5_37 -> m5_38  [key=0, style=solid];
m5_38 -> m5_39  [key=0, style=solid];
m5_38 -> m5_8  [key=2, style=dotted];
m5_39 -> m5_40  [key=0, style=solid];
m5_39 -> m5_36  [key=2, style=dotted];
m5_40 -> m5_37  [key=0, style=bold, color=blue];
m5_47 -> m5_48  [key=0, style=solid];
m5_48 -> m5_49  [key=0, style=solid];
m5_48 -> m5_8  [key=2, style=dotted];
m5_49 -> m5_50  [key=0, style=solid];
m5_49 -> m5_26  [key=2, style=dotted];
m5_50 -> m5_47  [key=0, style=bold, color=blue];
m5_58 -> m5_59  [key=0, style=solid, color=red];
m5_59 -> m5_60  [key=0, style=solid, color=red];
m5_59 -> m5_61  [key=1, style=dashed, color=red, label=parameter];
m5_59 -> m5_59  [key=3, color=red, style=bold, label="Local variable string parameter"];
m5_60 -> m5_61  [key=0, style=solid];
m5_60 -> m5_8  [key=2, style=dotted];
m5_61 -> m5_62  [key=0, style=solid];
m5_61 -> m5_36  [key=2, style=dotted];
m5_62 -> m5_58  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_3  [key=2, style=dotted];
m5_2 -> m5_0  [key=0, style=bold, color=blue];
m5_51 -> m5_52  [key=0, style=solid, color=red];
m5_52 -> m5_53  [key=0, style=solid, color=red];
m5_52 -> m5_55  [key=1, style=dashed, color=red, label=parameter];
m5_52 -> m5_52  [key=3, color=red, style=bold, label="Local variable string parameter"];
m5_53 -> m5_54  [key=0, style=solid];
m5_53 -> m5_57  [key=2, style=dotted];
m5_55 -> m5_56  [key=0, style=solid];
m5_55 -> m5_36  [key=2, style=dotted];
m5_54 -> m5_55  [key=0, style=solid];
m5_54 -> m5_8  [key=2, style=dotted];
m5_56 -> m5_51  [key=0, style=bold, color=blue];
m5_10 -> m5_11  [key=0, style=solid];
m5_11 -> m5_12  [key=0, style=solid];
m5_11 -> m5_8  [key=2, style=dotted];
m5_12 -> m5_13  [key=0, style=solid];
m5_12 -> m5_9  [key=2, style=dotted];
m5_13 -> m5_10  [key=0, style=bold, color=blue];
m5_31 -> m5_32  [key=0, style=solid];
m5_32 -> m5_33  [key=0, style=solid];
m5_32 -> m5_8  [key=2, style=dotted];
m5_32 -> m5_34  [key=1, style=dashed, color=darkseagreen4, label=results];
m5_33 -> m5_34  [key=0, style=solid];
m5_33 -> m5_36  [key=2, style=dotted];
m5_34 -> m5_35  [key=0, style=solid];
m5_34 -> m5_36  [key=2, style=dotted];
m5_35 -> m5_31  [key=0, style=bold, color=blue];
m5_41 -> m5_42  [key=0, style=solid];
m5_42 -> m5_43  [key=0, style=solid];
m5_42 -> m5_8  [key=2, style=dotted];
m5_42 -> m5_44  [key=1, style=dashed, color=darkseagreen4, label=results];
m5_42 -> m5_45  [key=1, style=dashed, color=darkseagreen4, label=results];
m5_43 -> m5_44  [key=0, style=solid];
m5_43 -> m5_9  [key=2, style=dotted];
m5_44 -> m5_45  [key=0, style=solid];
m5_44 -> m5_36  [key=2, style=dotted];
m5_45 -> m5_46  [key=0, style=solid];
m5_45 -> m5_36  [key=2, style=dotted];
m5_46 -> m5_41  [key=0, style=bold, color=blue];
m5_22 -> m5_23  [key=0, style=solid];
m5_23 -> m5_24  [key=0, style=solid];
m5_23 -> m5_8  [key=2, style=dotted];
m5_24 -> m5_25  [key=0, style=solid];
m5_24 -> m5_26  [key=2, style=dotted];
m5_25 -> m5_22  [key=0, style=bold, color=blue];
m5_4 -> m5_5  [key=0, style=solid];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_8  [key=2, style=dotted];
m5_6 -> m5_7  [key=0, style=solid];
m5_6 -> m5_9  [key=2, style=dotted];
m5_7 -> m5_4  [key=0, style=bold, color=blue];
m5_63 -> m5_1  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture"];
m5_63 -> m5_5  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture"];
m5_63 -> m5_11  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture"];
m5_63 -> m5_15  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture"];
m5_63 -> m5_19  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture"];
m5_63 -> m5_23  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture"];
m5_63 -> m5_28  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture"];
m5_63 -> m5_32  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture"];
m5_63 -> m5_38  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture"];
m5_63 -> m5_42  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture"];
m5_63 -> m5_48  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture"];
m5_63 -> m5_54  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture"];
m5_63 -> m5_60  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture"];
m6_28 -> m6_29  [key=0, style=solid];
m6_28 -> m6_31  [key=1, style=dashed, color=darkseagreen4, label=object];
m6_28 -> m6_33  [key=1, style=dashed, color=darkseagreen4, label=object];
m6_28 -> m6_23  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Equals"];
m6_28 -> m6_9  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Equals"];
m6_29 -> m6_30  [key=0, style=solid];
m6_29 -> m6_31  [key=0, style=solid];
m6_29 -> m6_26  [key=2, style=dotted];
m6_31 -> m6_32  [key=0, style=solid];
m6_31 -> m6_33  [key=0, style=solid];
m6_31 -> m6_26  [key=2, style=dotted];
m6_33 -> m6_34  [key=0, style=solid];
m6_33 -> m6_35  [key=2, style=dotted];
m6_33 -> m6_21  [key=2, style=dotted];
m6_30 -> m6_34  [key=0, style=solid];
m6_32 -> m6_34  [key=0, style=solid];
m6_34 -> m6_28  [key=0, style=bold, color=blue];
m6_11 -> m6_12  [key=0, style=solid];
m6_11 -> m6_9  [key=3, color=darkorchid, style=bold, label="method methodReturn bool TryGetMember"];
m6_12 -> m6_13  [key=0, style=solid];
m6_12 -> m6_14  [key=0, style=solid];
m6_12 -> m6_16  [key=2, style=dotted];
m6_12 -> m6_15  [key=1, style=dashed, color=darkseagreen4, label="out object"];
m6_13 -> m6_14  [key=0, style=solid];
m6_13 -> m6_17  [key=2, style=dotted];
m6_13 -> m6_15  [key=1, style=dashed, color=darkseagreen4, label="out object"];
m6_14 -> m6_15  [key=0, style=solid];
m6_15 -> m6_11  [key=0, style=bold, color=blue];
m6_21 -> m6_22  [key=0, style=solid];
m6_21 -> m6_24  [key=1, style=dashed, color=darkseagreen4, label="Nancy.DynamicDictionary"];
m6_21 -> m6_23  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Equals"];
m6_21 -> m6_28  [key=3, color=darkorchid, style=bold, label="Parameter variable Nancy.DynamicDictionary other"];
m6_22 -> m6_23  [key=0, style=solid];
m6_22 -> m6_24  [key=0, style=solid];
m6_22 -> m6_26  [key=2, style=dotted];
m6_24 -> m6_25  [key=0, style=solid];
m6_24 -> m6_26  [key=2, style=dotted];
m6_24 -> m6_27  [key=2, style=dotted];
m6_23 -> m6_25  [key=0, style=solid];
m6_25 -> m6_21  [key=0, style=bold, color=blue];
m6_7 -> m6_8  [key=0, style=solid];
m6_7 -> m6_9  [key=3, color=darkorchid, style=bold, label="method methodReturn bool TrySetMember"];
m6_8 -> m6_9  [key=0, style=solid];
m6_9 -> m6_10  [key=0, style=solid];
m6_10 -> m6_7  [key=0, style=bold, color=blue];
m6_40 -> m6_41  [key=0, style=solid, color=red];
m6_41 -> m6_42  [key=0, style=solid, color=red];
m6_41 -> m6_43  [key=2, style=dotted, color=red];
m6_42 -> m6_40  [key=0, style=bold, color=blue];
m6_18 -> m6_19  [key=0, style=solid];
m6_19 -> m6_20  [key=0, style=solid];
m6_20 -> m6_18  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid, color=red];
m6_0 -> m6_2  [key=1, style=dashed, color=red, label="System.Collections.Generic.IDictionary<string, object>"];
m6_0 -> m6_3  [key=1, style=dashed, color=red, label="System.Collections.Generic.IDictionary<string, object>"];
m6_1 -> m6_2  [key=0, style=solid, color=red];
m6_1 -> m6_6  [key=2, style=dotted, color=red];
m6_1 -> m6_3  [key=1, style=dashed, color=red, label=instance];
m6_1 -> m6_4  [key=1, style=dashed, color=red, label=instance];
m6_2 -> m6_3  [key=0, style=solid, color=red];
m6_2 -> m6_4  [key=0, style=solid, color=red];
m6_3 -> m6_2  [key=0, style=solid, color=red];
m6_4 -> m6_5  [key=0, style=solid, color=red];
m6_5 -> m6_0  [key=0, style=bold, color=blue];
m6_36 -> m6_37  [key=0, style=solid];
m6_37 -> m6_38  [key=0, style=solid];
m6_37 -> m6_39  [key=2, style=dotted];
m6_38 -> m6_36  [key=0, style=bold, color=blue];
m6_44 -> m6_8  [key=1, style=dashed, color=darkseagreen4, label="Nancy.DynamicDictionary"];
m6_44 -> m6_12  [key=1, style=dashed, color=darkseagreen4, label="Nancy.DynamicDictionary"];
m6_44 -> m6_19  [key=1, style=dashed, color=darkseagreen4, label="Nancy.DynamicDictionary"];
m6_44 -> m6_24  [key=1, style=dashed, color=darkseagreen4, label="Nancy.DynamicDictionary"];
m6_44 -> m6_31  [key=1, style=dashed, color=darkseagreen4, label="Nancy.DynamicDictionary"];
m6_44 -> m6_33  [key=1, style=dashed, color=darkseagreen4, label="Nancy.DynamicDictionary"];
m6_44 -> m6_37  [key=1, style=dashed, color=darkseagreen4, label="Nancy.DynamicDictionary"];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_4  [key=2, style=dotted];
m7_2 -> m7_3  [key=0, style=solid];
m7_2 -> m7_5  [key=2, style=dotted];
m7_3 -> m7_0  [key=0, style=bold, color=blue];
m7_62 -> m7_63  [key=0, style=solid];
m7_63 -> m7_64  [key=0, style=solid];
m7_63 -> m7_52  [key=2, style=dotted];
m7_64 -> m7_65  [key=0, style=solid];
m7_65 -> m7_66  [key=0, style=solid];
m7_65 -> m7_60  [key=2, style=dotted];
m7_65 -> m7_61  [key=2, style=dotted];
m7_66 -> m7_67  [key=0, style=solid];
m7_66 -> m7_18  [key=2, style=dotted];
m7_67 -> m7_62  [key=0, style=bold, color=blue];
m7_54 -> m7_55  [key=0, style=solid];
m7_55 -> m7_56  [key=0, style=solid];
m7_55 -> m7_52  [key=2, style=dotted];
m7_56 -> m7_57  [key=0, style=solid];
m7_57 -> m7_58  [key=0, style=solid];
m7_57 -> m7_60  [key=2, style=dotted];
m7_57 -> m7_61  [key=2, style=dotted];
m7_58 -> m7_59  [key=0, style=solid];
m7_58 -> m7_18  [key=2, style=dotted];
m7_59 -> m7_54  [key=0, style=bold, color=blue];
m7_86 -> m7_87  [key=0, style=solid];
m7_87 -> m7_88  [key=0, style=solid];
m7_87 -> m7_52  [key=2, style=dotted];
m7_88 -> m7_89  [key=0, style=solid];
m7_89 -> m7_90  [key=0, style=solid];
m7_89 -> m7_60  [key=2, style=dotted];
m7_89 -> m7_61  [key=2, style=dotted];
m7_90 -> m7_91  [key=0, style=solid];
m7_90 -> m7_18  [key=2, style=dotted];
m7_91 -> m7_86  [key=0, style=bold, color=blue];
m7_25 -> m7_26  [key=0, style=solid, color=red];
m7_26 -> m7_27  [key=0, style=solid, color=red];
m7_26 -> m7_24  [key=2, style=dotted, color=red];
m7_27 -> m7_28  [key=0, style=solid, color=red];
m7_27 -> m7_11  [key=2, style=dotted, color=red];
m7_28 -> m7_29  [key=0, style=solid, color=red];
m7_28 -> m7_18  [key=2, style=dotted, color=red];
m7_29 -> m7_25  [key=0, style=bold, color=blue];
m7_68 -> m7_69  [key=0, style=solid];
m7_69 -> m7_70  [key=0, style=solid];
m7_69 -> m7_52  [key=2, style=dotted];
m7_70 -> m7_71  [key=0, style=solid];
m7_71 -> m7_72  [key=0, style=solid];
m7_71 -> m7_60  [key=2, style=dotted];
m7_71 -> m7_61  [key=2, style=dotted];
m7_72 -> m7_73  [key=0, style=solid];
m7_72 -> m7_18  [key=2, style=dotted];
m7_73 -> m7_68  [key=0, style=bold, color=blue];
m7_39 -> m7_40  [key=0, style=solid];
m7_40 -> m7_41  [key=0, style=solid];
m7_40 -> m7_24  [key=2, style=dotted];
m7_41 -> m7_42  [key=0, style=solid];
m7_41 -> m7_11  [key=2, style=dotted];
m7_42 -> m7_43  [key=0, style=solid];
m7_42 -> m7_44  [key=2, style=dotted];
m7_43 -> m7_39  [key=0, style=bold, color=blue];
m7_92 -> m7_93  [key=0, style=solid];
m7_93 -> m7_94  [key=0, style=solid];
m7_93 -> m7_52  [key=2, style=dotted];
m7_94 -> m7_95  [key=0, style=solid];
m7_95 -> m7_96  [key=0, style=solid];
m7_95 -> m7_60  [key=2, style=dotted];
m7_95 -> m7_61  [key=2, style=dotted];
m7_96 -> m7_97  [key=0, style=solid];
m7_96 -> m7_18  [key=2, style=dotted];
m7_97 -> m7_92  [key=0, style=bold, color=blue];
m7_98 -> m7_99  [key=0, style=solid];
m7_99 -> m7_100  [key=0, style=solid];
m7_99 -> m7_52  [key=2, style=dotted];
m7_100 -> m7_101  [key=0, style=solid];
m7_101 -> m7_102  [key=0, style=solid];
m7_101 -> m7_60  [key=2, style=dotted];
m7_101 -> m7_61  [key=2, style=dotted];
m7_102 -> m7_103  [key=0, style=solid];
m7_102 -> m7_18  [key=2, style=dotted];
m7_103 -> m7_98  [key=0, style=bold, color=blue];
m7_6 -> m7_7  [key=0, style=solid, color=red];
m7_7 -> m7_8  [key=0, style=solid, color=red];
m7_8 -> m7_9  [key=0, style=solid, color=red];
m7_8 -> m7_11  [key=2, style=dotted, color=red];
m7_9 -> m7_10  [key=0, style=solid, color=red];
m7_9 -> m7_12  [key=2, style=dotted, color=red];
m7_10 -> m7_6  [key=0, style=bold, color=blue];
m7_45 -> m7_46  [key=0, style=solid];
m7_36 -> m7_37  [key=0, style=solid, color=red];
m7_37 -> m7_38  [key=0, style=solid, color=red];
m7_38 -> m7_36  [key=0, style=bold, color=blue];
m7_46 -> m7_47  [key=0, style=solid];
m7_47 -> m7_45  [key=0, style=bold, color=blue];
m7_13 -> m7_14  [key=0, style=solid, color=red];
m7_14 -> m7_15  [key=0, style=solid, color=red];
m7_15 -> m7_16  [key=0, style=solid, color=red];
m7_15 -> m7_11  [key=2, style=dotted, color=red];
m7_16 -> m7_17  [key=0, style=solid, color=red];
m7_16 -> m7_18  [key=2, style=dotted, color=red];
m7_17 -> m7_13  [key=0, style=bold, color=blue];
m7_74 -> m7_75  [key=0, style=solid];
m7_75 -> m7_76  [key=0, style=solid];
m7_75 -> m7_52  [key=2, style=dotted];
m7_76 -> m7_77  [key=0, style=solid];
m7_77 -> m7_78  [key=0, style=solid];
m7_77 -> m7_60  [key=2, style=dotted];
m7_77 -> m7_61  [key=2, style=dotted];
m7_78 -> m7_79  [key=0, style=solid];
m7_78 -> m7_18  [key=2, style=dotted];
m7_79 -> m7_74  [key=0, style=bold, color=blue];
m7_48 -> m7_49  [key=0, style=solid];
m7_49 -> m7_50  [key=0, style=solid];
m7_49 -> m7_52  [key=2, style=dotted];
m7_50 -> m7_51  [key=0, style=solid];
m7_50 -> m7_53  [key=2, style=dotted];
m7_51 -> m7_48  [key=0, style=bold, color=blue];
m7_19 -> m7_20  [key=0, style=solid, color=red];
m7_20 -> m7_21  [key=0, style=solid, color=red];
m7_20 -> m7_24  [key=2, style=dotted, color=red];
m7_21 -> m7_22  [key=0, style=solid, color=red];
m7_21 -> m7_11  [key=2, style=dotted, color=red];
m7_22 -> m7_23  [key=0, style=solid, color=red];
m7_22 -> m7_12  [key=2, style=dotted, color=red];
m7_23 -> m7_19  [key=0, style=bold, color=blue];
m7_80 -> m7_81  [key=0, style=solid];
m7_81 -> m7_82  [key=0, style=solid];
m7_81 -> m7_52  [key=2, style=dotted];
m7_82 -> m7_83  [key=0, style=solid];
m7_83 -> m7_84  [key=0, style=solid];
m7_83 -> m7_60  [key=2, style=dotted];
m7_83 -> m7_61  [key=2, style=dotted];
m7_84 -> m7_85  [key=0, style=solid];
m7_84 -> m7_18  [key=2, style=dotted];
m7_85 -> m7_80  [key=0, style=bold, color=blue];
m7_30 -> m7_31  [key=0, style=solid, color=red];
m7_31 -> m7_32  [key=0, style=solid, color=red];
m7_31 -> m7_24  [key=2, style=dotted, color=red];
m7_32 -> m7_33  [key=0, style=solid, color=red];
m7_32 -> m7_11  [key=2, style=dotted, color=red];
m7_33 -> m7_34  [key=0, style=solid, color=red];
m7_33 -> m7_35  [key=2, style=dotted, color=red];
m7_34 -> m7_30  [key=0, style=bold, color=blue];
m7_104 -> m7_1  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture"];
m7_104 -> m7_2  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture"];
m7_104 -> m7_7  [key=1, style=dashed, color=red, label="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture"];
m7_104 -> m7_8  [key=1, style=dashed, color=red, label="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture"];
m7_104 -> m7_14  [key=1, style=dashed, color=red, label="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture"];
m7_104 -> m7_15  [key=1, style=dashed, color=red, label="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture"];
m7_104 -> m7_20  [key=1, style=dashed, color=red, label="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture"];
m7_104 -> m7_21  [key=1, style=dashed, color=red, label="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture"];
m7_104 -> m7_26  [key=1, style=dashed, color=red, label="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture"];
m7_104 -> m7_27  [key=1, style=dashed, color=red, label="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture"];
m7_104 -> m7_31  [key=1, style=dashed, color=red, label="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture"];
m7_104 -> m7_32  [key=1, style=dashed, color=red, label="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture"];
m7_104 -> m7_40  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture"];
m7_104 -> m7_41  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture"];
m7_104 -> m7_49  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture"];
m7_104 -> m7_50  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture"];
m7_104 -> m7_55  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture"];
m7_104 -> m7_56  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture"];
m7_104 -> m7_63  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture"];
m7_104 -> m7_64  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture"];
m7_104 -> m7_69  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture"];
m7_104 -> m7_70  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture"];
m7_104 -> m7_75  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture"];
m7_104 -> m7_76  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture"];
m7_104 -> m7_81  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture"];
m7_104 -> m7_82  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture"];
m7_104 -> m7_87  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture"];
m7_104 -> m7_88  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture"];
m7_104 -> m7_93  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture"];
m7_104 -> m7_94  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture"];
m7_104 -> m7_99  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture"];
m7_104 -> m7_100  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Conventions.DefaultViewLocationConventionsFixture"];
m8_4 -> m8_5  [key=0, style=solid];
m8_5 -> m8_6  [key=0, style=solid];
m8_5 -> m8_8  [key=2, style=dotted];
m8_6 -> m8_7  [key=0, style=solid];
m8_6 -> m8_9  [key=2, style=dotted];
m8_7 -> m8_4  [key=0, style=bold, color=blue];
m8_0 -> m8_1  [key=0, style=solid, color=green];
m8_1 -> m8_2  [key=0, style=solid, color=green];
m8_1 -> m8_3  [key=2, style=dotted, color=green];
m8_2 -> m8_0  [key=0, style=bold, color=blue];
m8_10 -> m8_11  [key=0, style=solid];
m8_11 -> m8_12  [key=0, style=solid];
m8_11 -> m8_16  [key=2, style=dotted];
m8_11 -> m8_14  [key=1, style=dashed, color=darkseagreen4, label=expected];
m8_12 -> m8_13  [key=0, style=solid];
m8_12 -> m8_8  [key=2, style=dotted];
m8_14 -> m8_15  [key=0, style=solid];
m8_14 -> m8_18  [key=2, style=dotted];
m8_13 -> m8_14  [key=0, style=solid];
m8_13 -> m8_17  [key=2, style=dotted];
m8_15 -> m8_10  [key=0, style=bold, color=blue];
m8_17 -> m8_19  [key=0, style=solid];
m8_17 -> m8_20  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Response"];
m8_17 -> m8_12  [key=3, color=darkorchid, style=bold, label="Parameter variable Nancy.Response response"];
m8_19 -> m8_20  [key=0, style=solid];
m8_19 -> m8_24  [key=2, style=dotted];
m8_19 -> m8_21  [key=1, style=dashed, color=darkseagreen4, label=ms];
m8_19 -> m8_22  [key=1, style=dashed, color=darkseagreen4, label=ms];
m8_20 -> m8_21  [key=0, style=solid];
m8_20 -> m8_25  [key=2, style=dotted];
m8_21 -> m8_22  [key=0, style=solid];
m8_21 -> m8_26  [key=2, style=dotted];
m8_22 -> m8_23  [key=0, style=solid];
m8_22 -> m8_27  [key=2, style=dotted];
m8_23 -> m8_17  [key=0, style=bold, color=blue];
m8_28 -> m8_1  [key=1, style=dashed, color=green, label="Nancy.Tests.Unit.Responses.GenericFileResponseFixture"];
m8_28 -> m8_5  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Responses.GenericFileResponseFixture"];
m8_28 -> m8_11  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Responses.GenericFileResponseFixture"];
m8_28 -> m8_12  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Responses.GenericFileResponseFixture"];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_0  [key=0, style=bold, color=blue];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_0  [key=0, style=bold, color=blue];
m10_4 -> m10_13  [key=1, style=dashed, color=green, label="Nancy.Url"];
m10_4 -> m10_5  [key=0, style=solid];
m10_4 -> m10_7  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Url"];
m10_4 -> m10_9  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Url"];
m10_4 -> m10_11  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Url"];
m10_4 -> m10_15  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Url"];
m10_4 -> m10_16  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_4 -> m10_17  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Url"];
m10_4 -> m10_18  [key=1, style=dashed, color=darkseagreen4, label="Nancy.IO.RequestStream"];
m10_4 -> m10_19  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>"];
m10_4 -> m10_28  [key=0, style=solid];
m10_4 -> m10_29  [key=2, style=dotted];
m10_13 -> m10_14  [key=0, style=solid, color=green];
m10_13 -> m10_15  [key=0, style=solid, color=green];
m10_13 -> m10_71  [key=2, style=dotted, color=green];
m10_11 -> m10_13  [key=0, style=solid, color=green];
m10_11 -> m10_12  [key=0, style=solid];
m10_14 -> m10_23  [key=0, style=solid];
m10_14 -> m10_25  [key=2, style=dotted];
m10_14 -> m10_28  [key=0, style=solid];
m10_14 -> m10_29  [key=2, style=dotted];
m10_15 -> m10_16  [key=0, style=solid];
m10_15 -> m10_17  [key=0, style=solid];
m10_5 -> m10_6  [key=0, style=solid];
m10_5 -> m10_7  [key=0, style=solid];
m10_5 -> m10_71  [key=2, style=dotted];
m10_7 -> m10_8  [key=0, style=solid];
m10_7 -> m10_9  [key=0, style=solid];
m10_9 -> m10_11  [key=0, style=solid];
m10_9 -> m10_10  [key=0, style=solid];
m10_9 -> m10_71  [key=2, style=dotted];
m10_16 -> m10_17  [key=0, style=solid];
m10_16 -> m10_28  [key=0, style=solid];
m10_16 -> m10_29  [key=2, style=dotted];
m10_17 -> m10_18  [key=0, style=solid];
m10_17 -> m10_27  [key=2, style=dotted];
m10_17 -> m10_19  [key=0, style=solid];
m10_18 -> m10_19  [key=0, style=solid];
m10_18 -> m10_28  [key=2, style=dotted];
m10_18 -> m10_29  [key=2, style=dotted];
m10_18 -> m10_30  [key=2, style=dotted];
m10_19 -> m10_20  [key=0, style=solid, color=red];
m10_19 -> m10_31  [key=2, style=dotted];
m10_12 -> m10_23  [key=0, style=solid];
m10_12 -> d8  [key=2, style=dotted];
m10_12 -> m10_28  [key=0, style=solid];
m10_12 -> m10_29  [key=2, style=dotted];
m10_6 -> m10_23  [key=0, style=solid];
m10_6 -> m10_25  [key=2, style=dotted];
m10_6 -> m10_28  [key=0, style=solid];
m10_6 -> m10_30  [key=2, style=dotted];
m10_8 -> m10_23  [key=0, style=solid];
m10_8 -> d8  [key=2, style=dotted];
m10_8 -> m10_28  [key=0, style=solid];
m10_8 -> m10_29  [key=2, style=dotted];
m10_10 -> m10_23  [key=0, style=solid];
m10_10 -> m10_25  [key=2, style=dotted];
m10_10 -> m10_28  [key=0, style=solid];
m10_10 -> m10_30  [key=2, style=dotted];
m10_22 -> m10_23  [key=0, style=solid];
m10_22 -> m10_35  [key=2, style=dotted];
m10_20 -> m10_21  [key=0, style=solid, color=red];
m10_20 -> m10_33  [key=2, style=dotted];
m10_20 -> m10_31  [key=2, style=dotted, color=red];
m10_21 -> m10_22  [key=0, style=solid];
m10_21 -> m10_34  [key=2, style=dotted];
m10_23 -> m10_4  [key=0, style=bold, color=blue];
m10_23 -> m10_24  [key=0, style=solid];
m10_34 -> m10_54  [key=0, style=solid, color=red];
m10_34 -> m10_53  [key=0, style=solid];
m10_54 -> m10_55  [key=0, style=solid, color=red];
m10_54 -> m10_56  [key=0, style=solid, color=red];
m10_54 -> m10_71  [key=2, style=dotted, color=red];
m10_55 -> m10_70  [key=0, style=solid];
m10_56 -> m10_57  [key=0, style=solid];
m10_56 -> m10_47  [key=2, style=dotted];
m10_56 -> m10_63  [key=1, style=dashed, color=darkseagreen4, label=contentType];
m10_57 -> m10_58  [key=0, style=solid];
m10_57 -> m10_48  [key=2, style=dotted];
m10_57 -> m10_47  [key=2, style=dotted];
m10_57 -> m10_61  [key=1, style=dashed, color=darkseagreen4, label=mimeType];
m10_63 -> m10_64  [key=0, style=solid];
m10_63 -> m10_75  [key=2, style=dotted];
m10_58 -> m10_59  [key=0, style=solid];
m10_58 -> m10_61  [key=0, style=solid];
m10_58 -> m10_72  [key=2, style=dotted];
m10_61 -> m10_62  [key=0, style=solid];
m10_61 -> m10_63  [key=0, style=solid];
m10_61 -> m10_72  [key=2, style=dotted];
m10_59 -> m10_60  [key=0, style=solid];
m10_59 -> m10_73  [key=2, style=dotted];
m10_60 -> m10_61  [key=0, style=solid];
m10_60 -> m10_74  [key=2, style=dotted];
m10_60 -> m10_32  [key=2, style=dotted];
m10_60 -> m10_27  [key=2, style=dotted];
m10_62 -> m10_70  [key=0, style=solid];
m10_64 -> m10_65  [key=0, style=solid];
m10_64 -> m10_76  [key=2, style=dotted];
m10_65 -> m10_66  [key=0, style=solid];
m10_65 -> m10_70  [key=0, style=solid];
m10_65 -> m10_77  [key=2, style=dotted];
m10_65 -> m10_67  [key=1, style=dashed, color=darkseagreen4, label=httpMultipartBoundary];
m10_65 -> m10_68  [key=1, style=dashed, color=darkseagreen4, label=httpMultipartBoundary];
m10_65 -> m10_69  [key=1, style=dashed, color=darkseagreen4, label=httpMultipartBoundary];
m10_66 -> m10_67  [key=0, style=solid];
m10_66 -> m10_69  [key=0, style=solid];
m10_66 -> m10_71  [key=2, style=dotted];
m10_67 -> m10_68  [key=0, style=solid];
m10_67 -> m10_73  [key=2, style=dotted];
m10_68 -> m10_65  [key=0, style=solid];
m10_68 -> m10_74  [key=2, style=dotted];
m10_69 -> m10_65  [key=0, style=solid];
m10_69 -> m10_78  [key=2, style=dotted];
m10_69 -> m10_79  [key=2, style=dotted];
m10_53 -> m10_55  [key=0, style=solid];
m10_53 -> m10_56  [key=0, style=solid];
m10_53 -> m10_71  [key=2, style=dotted];
m10_53 -> m10_51  [key=0, style=bold, color=blue];
m10_70 -> m10_34  [key=0, style=bold, color=blue];
m10_2 -> m10_3  [key=0, style=solid];
m10_2 -> m10_5  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_2 -> m10_6  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_2 -> m10_7  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_2 -> m10_9  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_2 -> m10_10  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_2 -> m10_11  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>"];
m10_2 -> m10_13  [key=1, style=dashed, color=darkseagreen4, label="Nancy.IO.RequestStream"];
m10_2 -> m10_15  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_2 -> m10_17  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_2 -> m10_18  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_2 -> m10_19  [key=1, style=dashed, color=darkseagreen4, label="Nancy.IO.RequestStream"];
m10_2 -> m10_20  [key=1, style=dashed, color=red, label="System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>"];
m10_2 -> m10_21  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_2 -> m10_22  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_2 -> m10_23  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_2 -> m10_24  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_3 -> m10_4  [key=0, style=solid];
m10_3 -> m10_5  [key=0, style=solid];
m10_24 -> m10_25  [key=0, style=solid];
m10_24 -> m10_32  [key=2, style=dotted];
m10_25 -> m10_26  [key=0, style=solid];
m10_25 -> m10_33  [key=2, style=dotted];
m10_26 -> m10_27  [key=0, style=solid];
m10_26 -> m10_34  [key=2, style=dotted];
m10_27 -> m10_28  [key=0, style=solid];
m10_27 -> m10_35  [key=2, style=dotted];
m10_28 -> m10_2  [key=0, style=bold, color=blue];
m10_35 -> m10_80  [key=0, style=solid];
m10_35 -> m10_36  [key=0, style=solid, color=green];
m10_80 -> m10_81  [key=0, style=solid];
m10_80 -> m10_82  [key=0, style=solid];
m10_80 -> m10_72  [key=2, style=dotted];
m10_81 -> m10_85  [key=0, style=solid];
m10_82 -> m10_83  [key=0, style=solid];
m10_82 -> m10_84  [key=0, style=solid];
m10_83 -> m10_85  [key=0, style=solid];
m10_84 -> m10_85  [key=0, style=solid];
m10_84 -> m10_15  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Request"];
m10_84 -> m10_37  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Request"];
m10_84 -> m10_16  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Request"];
m10_84 -> m10_17  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Request"];
m10_84 -> m10_18  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Request"];
m10_84 -> m10_19  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Request"];
m10_84 -> m10_20  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Request"];
m10_84 -> m10_21  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Request"];
m10_84 -> m10_22  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Request"];
m10_84 -> m10_40  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Request"];
m10_84 -> m10_53  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Request"];
m10_84 -> m10_56  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Request"];
m10_84 -> m10_59  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Request"];
m10_84 -> m10_60  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Request"];
m10_84 -> m10_64  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Request"];
m10_84 -> m10_68  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Request"];
m10_84 -> m10_69  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Request"];
m10_84 -> m10_80  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Request"];
m10_84 -> m10_82  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Request"];
m10_84 -> m10_84  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Request"];
m10_85 -> m10_35  [key=0, style=bold, color=blue];
m10_51 -> m10_52  [key=0, style=solid];
m10_52 -> m10_53  [key=0, style=solid];
m10_52 -> m10_48  [key=2, style=dotted];
m10_36 -> m10_37  [key=0, style=solid, color=green];
m10_36 -> m10_45  [key=2, style=dotted, color=green];
m10_36 -> m10_38  [key=1, style=dashed, color=green, label=cookieDictionary];
m10_36 -> m10_41  [key=1, style=dashed, color=green, label=cookieDictionary];
m10_36 -> m10_42  [key=1, style=dashed, color=green, label=cookieDictionary];
m10_37 -> m10_38  [key=0, style=solid, color=red];
m10_37 -> m10_45  [key=2, style=dotted];
m10_37 -> m10_39  [key=1, style=dashed, color=darkseagreen4, label=cookieDictionary];
m10_37 -> m10_42  [key=1, style=dashed, color=darkseagreen4, label=cookieDictionary];
m10_37 -> m10_43  [key=1, style=dashed, color=darkseagreen4, label=cookieDictionary];
m10_37 -> m10_40  [key=0, style=solid];
m10_37 -> m10_46  [key=2, style=dotted];
m10_38 -> m10_39  [key=0, style=solid, color=red];
m10_38 -> m10_40  [key=0, style=solid, color=red];
m10_38 -> m10_46  [key=2, style=dotted, color=red];
m10_38 -> m10_44  [key=0, style=solid];
m10_39 -> m10_44  [key=0, style=solid];
m10_42 -> m10_41  [key=0, style=solid];
m10_42 -> m10_50  [key=2, style=dotted];
m10_42 -> m10_44  [key=0, style=solid];
m10_43 -> m10_44  [key=0, style=solid];
m10_40 -> m10_41  [key=0, style=solid];
m10_40 -> m10_47  [key=2, style=dotted];
m10_40 -> m10_48  [key=2, style=dotted];
m10_41 -> m10_42  [key=0, style=solid];
m10_41 -> m10_43  [key=0, style=solid];
m10_41 -> m10_49  [key=2, style=dotted];
m10_41 -> m10_51  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_41 -> m10_41  [key=0, style=solid];
m10_41 -> m10_50  [key=2, style=dotted];
m10_44 -> m10_36  [key=0, style=bold, color=blue];
m10_44 -> m10_35  [key=0, style=bold, color=blue];
m10_86 -> m10_19  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Request"];
m10_86 -> m10_20  [key=1, style=dashed, color=red, label="Nancy.Request"];
m10_86 -> m10_21  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Request"];
m10_86 -> m10_22  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Request"];
m10_86 -> m10_23  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Request"];
m10_86 -> m10_24  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Request"];
m10_86 -> m10_25  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Request"];
m10_86 -> m10_26  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Request"];
m10_86 -> m10_27  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Request"];
m10_86 -> m10_38  [key=1, style=dashed, color=red, label="Nancy.Request"];
m10_86 -> m10_40  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Request"];
m10_86 -> m10_54  [key=1, style=dashed, color=red, label="Nancy.Request"];
m10_86 -> m10_56  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Request"];
m10_86 -> m10_59  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Request"];
m10_86 -> m10_60  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Request"];
m10_86 -> m10_64  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Request"];
m10_86 -> m10_68  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Request"];
m10_86 -> m10_69  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Request"];
m10_86 -> m10_80  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Request"];
m10_86 -> m10_82  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Request"];
m10_86 -> m10_84  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Request"];
m11_0 -> m11_1  [key=0, style=solid];
m11_0 -> m11_3  [key=1, style=dashed, color=green, label="Nancy.Request"];
m11_1 -> m11_2  [key=0, style=solid];
m11_1 -> m11_3  [key=1, style=dashed, color=green, label=ajaxRequestHeaderKey];
m11_1 -> m11_1  [key=3, color=darkorchid, style=bold, label="Local variable string ajaxRequestHeaderKey"];
m11_3 -> m11_4  [key=0, style=solid, color=green];
m11_3 -> m11_5  [key=2, style=dotted, color=green];
m11_2 -> m11_3  [key=0, style=solid, color=green];
m11_2 -> m11_2  [key=3, color=darkorchid, style=bold, label="Local variable string ajaxRequestHeaderValue"];
m11_4 -> m11_0  [key=0, style=bold, color=blue];
m12_6 -> m12_90  [key=0, style=solid];
m12_6 -> m12_92  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Bootstrapper.INancyBootstrapper"];
m12_90 -> m12_91  [key=0, style=solid];
m12_90 -> m12_92  [key=0, style=solid];
m12_92 -> m12_93  [key=0, style=solid];
m12_92 -> m12_100  [key=2, style=dotted];
m12_92 -> m12_101  [key=2, style=dotted];
m12_92 -> m12_94  [key=1, style=dashed, color=darkseagreen4, label=host];
m12_92 -> m12_97  [key=1, style=dashed, color=darkseagreen4, label=host];
m12_91 -> m12_92  [key=0, style=solid];
m12_91 -> m12_99  [key=2, style=dotted];
m12_93 -> m12_94  [key=0, style=solid];
m12_93 -> m12_102  [key=2, style=dotted];
m12_93 -> m12_103  [key=2, style=dotted];
m12_94 -> m12_95  [key=0, style=solid];
m12_94 -> m12_97  [key=0, style=solid];
m12_94 -> m12_104  [key=2, style=dotted];
m12_97 -> m12_98  [key=0, style=solid];
m12_95 -> m12_96  [key=0, style=solid];
m12_96 -> m12_98  [key=0, style=solid];
m12_96 -> m12_105  [key=2, style=dotted];
m12_98 -> m12_6  [key=0, style=bold, color=blue];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_2  [key=0, style=solid];
m12_1 -> m12_6  [key=2, style=dotted];
m12_2 -> m12_3  [key=0, style=solid];
m12_2 -> m12_7  [key=2, style=dotted];
m12_2 -> m12_8  [key=2, style=dotted];
m12_2 -> m12_4  [key=1, style=dashed, color=darkseagreen4, label=request];
m12_3 -> m12_4  [key=0, style=solid];
m12_4 -> m12_5  [key=0, style=solid];
m12_4 -> m12_9  [key=2, style=dotted];
m12_4 -> m12_10  [key=2, style=dotted];
m12_5 -> m12_0  [key=0, style=bold, color=blue];
m12_87 -> m12_88  [key=0, style=solid];
m12_33 -> m12_34  [key=0, style=solid];
m12_33 -> m12_35  [key=2, style=dotted];
m12_32 -> m12_33  [key=0, style=solid];
m12_36 -> m12_37  [key=0, style=solid];
m12_40 -> m12_41  [key=0, style=solid];
m12_40 -> m12_42  [key=2, style=dotted];
m12_39 -> m12_40  [key=0, style=solid];
m12_34 -> m12_32  [key=0, style=bold, color=blue];
m12_37 -> m12_38  [key=0, style=solid];
m12_38 -> m12_36  [key=0, style=bold, color=blue];
m12_41 -> m12_39  [key=0, style=bold, color=blue];
m12_82 -> m12_83  [key=0, style=solid];
m12_82 -> m12_35  [key=2, style=dotted];
m12_88 -> m12_89  [key=0, style=solid];
m12_88 -> m12_42  [key=2, style=dotted];
m12_81 -> m12_82  [key=0, style=solid];
m12_84 -> m12_85  [key=0, style=solid];
m12_83 -> m12_81  [key=0, style=bold, color=blue];
m12_85 -> m12_86  [key=0, style=solid];
m12_86 -> m12_84  [key=0, style=bold, color=blue];
m12_89 -> m12_87  [key=0, style=bold, color=blue];
m12_43 -> m12_44  [key=0, style=solid];
m12_44 -> m12_45  [key=0, style=solid];
m12_44 -> m12_6  [key=2, style=dotted];
m12_45 -> m12_46  [key=0, style=solid];
m12_45 -> m12_49  [key=2, style=dotted];
m12_45 -> m12_7  [key=2, style=dotted];
m12_45 -> m12_8  [key=2, style=dotted];
m12_45 -> m12_9  [key=2, style=dotted];
m12_45 -> m12_50  [key=2, style=dotted];
m12_46 -> m12_47  [key=0, style=solid];
m12_46 -> m12_51  [key=2, style=dotted];
m12_47 -> m12_48  [key=0, style=solid];
m12_47 -> m12_10  [key=2, style=dotted];
m12_48 -> m12_43  [key=0, style=bold, color=blue];
m12_65 -> m12_66  [key=0, style=solid];
m12_66 -> m12_67  [key=0, style=solid];
m12_67 -> m12_68  [key=0, style=solid];
m12_67 -> n11  [key=2, style=dotted];
m12_67 -> m12_69  [key=1, style=dashed, color=darkseagreen4, label=fakeEngine];
m12_67 -> m12_82  [key=1, style=dashed, color=darkseagreen4, label=fakeEngine];
m12_67 -> m12_70  [key=1, style=dashed, color=darkseagreen4, label=fakeEngine];
m12_68 -> m12_69  [key=0, style=solid];
m12_68 -> n11  [key=2, style=dotted];
m12_68 -> m12_70  [key=1, style=dashed, color=darkseagreen4, label=fakeBootstrapper];
m12_68 -> m12_88  [key=1, style=dashed, color=darkseagreen4, label=fakeBootstrapper];
m12_68 -> m12_71  [key=1, style=dashed, color=darkseagreen4, label=fakeBootstrapper];
m12_69 -> m12_70  [key=0, style=solid];
m12_69 -> m12_27  [key=2, style=dotted];
m12_69 -> m12_28  [key=2, style=dotted];
m12_69 -> m12_81  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_69 -> m12_84  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_69 -> m12_76  [key=1, style=dashed, color=darkseagreen4, label=nancyRequest];
m12_69 -> m12_77  [key=1, style=dashed, color=darkseagreen4, label=nancyRequest];
m12_69 -> m12_78  [key=1, style=dashed, color=darkseagreen4, label=nancyRequest];
m12_70 -> m12_71  [key=0, style=solid];
m12_70 -> m12_27  [key=2, style=dotted];
m12_70 -> m12_29  [key=2, style=dotted];
m12_70 -> m12_87  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_71 -> m12_72  [key=0, style=solid];
m12_71 -> m12_30  [key=2, style=dotted];
m12_76 -> m12_77  [key=0, style=solid];
m12_76 -> m12_80  [key=2, style=dotted];
m12_77 -> m12_78  [key=0, style=solid];
m12_77 -> m12_80  [key=2, style=dotted];
m12_78 -> m12_79  [key=0, style=solid];
m12_78 -> m12_80  [key=2, style=dotted];
m12_72 -> m12_73  [key=0, style=solid];
m12_72 -> m12_8  [key=2, style=dotted];
m12_72 -> m12_74  [key=1, style=dashed, color=darkseagreen4, label=request];
m12_73 -> m12_74  [key=0, style=solid];
m12_74 -> m12_75  [key=0, style=solid];
m12_74 -> m12_76  [key=0, style=solid];
m12_74 -> m12_9  [key=2, style=dotted];
m12_75 -> m12_76  [key=0, style=solid];
m12_79 -> m12_65  [key=0, style=bold, color=blue];
m12_52 -> m12_53  [key=0, style=solid];
m12_53 -> m12_54  [key=0, style=solid];
m12_53 -> m12_6  [key=2, style=dotted];
m12_54 -> m12_55  [key=0, style=solid];
m12_54 -> m12_58  [key=1, style=dashed, color=darkseagreen4, label=testBody];
m12_54 -> m12_60  [key=1, style=dashed, color=darkseagreen4, label=testBody];
m12_55 -> m12_56  [key=0, style=solid];
m12_55 -> m12_7  [key=2, style=dotted];
m12_55 -> m12_8  [key=2, style=dotted];
m12_55 -> m12_57  [key=1, style=dashed, color=darkseagreen4, label=request];
m12_55 -> m12_59  [key=1, style=dashed, color=darkseagreen4, label=request];
m12_58 -> m12_59  [key=0, style=solid];
m12_58 -> m12_64  [key=2, style=dotted];
m12_60 -> m12_61  [key=0, style=solid];
m12_60 -> m12_10  [key=2, style=dotted];
m12_56 -> m12_57  [key=0, style=solid];
m12_57 -> m12_58  [key=0, style=solid];
m12_57 -> m12_62  [key=2, style=dotted];
m12_57 -> m12_63  [key=2, style=dotted];
m12_59 -> m12_60  [key=0, style=solid];
m12_59 -> m12_49  [key=2, style=dotted];
m12_59 -> m12_9  [key=2, style=dotted];
m12_59 -> m12_50  [key=2, style=dotted];
m12_59 -> m12_51  [key=2, style=dotted];
m12_61 -> m12_52  [key=0, style=bold, color=blue];
m12_11 -> m12_12  [key=0, style=solid];
m12_12 -> m12_13  [key=0, style=solid];
m12_13 -> m12_14  [key=0, style=solid];
m12_13 -> n11  [key=2, style=dotted];
m12_13 -> m12_33  [key=1, style=dashed, color=darkseagreen4, label=fakeEngine];
m12_13 -> m12_16  [key=1, style=dashed, color=darkseagreen4, label=fakeEngine];
m12_14 -> m12_15  [key=0, style=solid];
m12_14 -> m12_27  [key=2, style=dotted];
m12_14 -> m12_28  [key=2, style=dotted];
m12_14 -> m12_32  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_14 -> m12_36  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_14 -> m12_22  [key=1, style=dashed, color=darkseagreen4, label=nancyRequest];
m12_14 -> m12_23  [key=1, style=dashed, color=darkseagreen4, label=nancyRequest];
m12_14 -> m12_24  [key=1, style=dashed, color=darkseagreen4, label=nancyRequest];
m12_16 -> m12_17  [key=0, style=solid];
m12_16 -> m12_27  [key=2, style=dotted];
m12_16 -> m12_29  [key=2, style=dotted];
m12_16 -> m12_39  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_15 -> m12_16  [key=0, style=solid];
m12_15 -> n11  [key=2, style=dotted];
m12_15 -> m12_40  [key=1, style=dashed, color=darkseagreen4, label=fakeBootstrapper];
m12_15 -> m12_17  [key=1, style=dashed, color=darkseagreen4, label=fakeBootstrapper];
m12_22 -> m12_23  [key=0, style=solid];
m12_22 -> m12_10  [key=2, style=dotted];
m12_23 -> m12_24  [key=0, style=solid];
m12_23 -> m12_31  [key=2, style=dotted];
m12_24 -> m12_25  [key=0, style=solid];
m12_24 -> m12_31  [key=2, style=dotted];
m12_17 -> m12_18  [key=0, style=solid];
m12_17 -> m12_30  [key=2, style=dotted];
m12_18 -> m12_19  [key=0, style=solid];
m12_18 -> m12_7  [key=2, style=dotted];
m12_18 -> m12_8  [key=2, style=dotted];
m12_18 -> m12_20  [key=1, style=dashed, color=darkseagreen4, label=request];
m12_19 -> m12_20  [key=0, style=solid];
m12_20 -> m12_21  [key=0, style=solid];
m12_20 -> m12_22  [key=0, style=solid];
m12_20 -> m12_9  [key=2, style=dotted];
m12_21 -> m12_22  [key=0, style=solid];
m12_25 -> m12_11  [key=0, style=bold, color=blue];
m12_106 -> m12_17  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture"];
m12_106 -> m12_71  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Hosting.Wcf.Tests.NancyWcfGenericServiceFixture"];
m12_107 -> m12_33  [key=1, style=dashed, color=darkseagreen4, label=fakeEngine];
m12_108 -> m12_40  [key=1, style=dashed, color=darkseagreen4, label=fakeBootstrapper];
m12_109 -> m12_82  [key=1, style=dashed, color=darkseagreen4, label=fakeEngine];
m12_110 -> m12_88  [key=1, style=dashed, color=darkseagreen4, label=fakeBootstrapper];
m13_60 -> m13_61  [key=0, style=solid];
m13_63 -> m13_17  [key=2, style=dotted];
m13_63 -> m13_64  [key=0, style=solid];
m13_61 -> m13_9  [key=3, color=darkorchid, style=bold, label="Local variable string method"];
m13_61 -> m13_63  [key=1, style=dashed, color=darkseagreen4, label=method];
m13_61 -> m13_62  [key=0, style=solid];
m13_62 -> m13_63  [key=0, style=solid];
m13_62 -> m13_38  [key=2, style=dotted];
m13_64 -> m13_60  [key=0, style=bold, color=blue];
m13_46 -> m13_47  [key=0, style=solid];
m13_47 -> m13_50  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_47 -> m13_48  [key=0, style=solid];
m13_47 -> m13_33  [key=2, style=dotted];
m13_48 -> m13_49  [key=0, style=solid];
m13_48 -> n11  [key=2, style=dotted];
m13_49 -> m13_46  [key=0, style=bold, color=blue];
m13_130 -> m13_131  [key=0, style=solid];
m13_131 -> m13_15  [key=2, style=dotted];
m13_131 -> m13_132  [key=0, style=solid];
m13_131 -> m13_111  [key=2, style=dotted];
m13_131 -> m13_120  [key=2, style=dotted];
m13_131 -> m13_121  [key=2, style=dotted];
m13_131 -> m13_133  [key=1, style=dashed, color=darkseagreen4, label=memory];
m13_132 -> m13_15  [key=2, style=dotted];
m13_132 -> m13_133  [key=0, style=solid];
m13_133 -> m13_113  [key=2, style=dotted];
m13_133 -> m13_16  [key=2, style=dotted];
m13_133 -> m13_134  [key=0, style=solid];
m13_134 -> m13_17  [key=2, style=dotted];
m13_134 -> m13_135  [key=0, style=solid];
m13_134 -> m13_129  [key=2, style=dotted];
m13_135 -> m13_130  [key=0, style=bold, color=blue];
m13_114 -> m13_115  [key=0, style=solid];
m13_115 -> m13_15  [key=2, style=dotted];
m13_115 -> m13_116  [key=0, style=solid];
m13_115 -> m13_111  [key=2, style=dotted];
m13_115 -> m13_120  [key=2, style=dotted];
m13_115 -> m13_121  [key=2, style=dotted];
m13_115 -> m13_117  [key=1, style=dashed, color=darkseagreen4, label=memory];
m13_116 -> m13_15  [key=2, style=dotted];
m13_116 -> m13_117  [key=0, style=solid];
m13_117 -> m13_113  [key=2, style=dotted];
m13_117 -> m13_16  [key=2, style=dotted];
m13_117 -> m13_118  [key=0, style=solid];
m13_118 -> m13_119  [key=0, style=solid];
m13_118 -> m13_122  [key=2, style=dotted];
m13_119 -> m13_114  [key=0, style=bold, color=blue];
m13_104 -> m13_105  [key=0, style=solid];
m13_105 -> m13_15  [key=2, style=dotted];
m13_105 -> m13_106  [key=0, style=solid];
m13_105 -> m13_111  [key=2, style=dotted];
m13_105 -> m13_112  [key=2, style=dotted];
m13_105 -> m13_107  [key=1, style=dashed, color=darkseagreen4, label=memory];
m13_106 -> m13_15  [key=2, style=dotted];
m13_106 -> m13_107  [key=0, style=solid];
m13_107 -> m13_113  [key=2, style=dotted];
m13_107 -> m13_16  [key=2, style=dotted];
m13_107 -> m13_108  [key=0, style=solid];
m13_107 -> m13_109  [key=1, style=dashed, color=darkseagreen4, label=request];
m13_108 -> m13_17  [key=2, style=dotted];
m13_108 -> m13_109  [key=0, style=solid];
m13_109 -> m13_17  [key=2, style=dotted];
m13_109 -> m13_110  [key=0, style=solid];
m13_110 -> m13_104  [key=0, style=bold, color=blue];
m13_121 -> m13_212  [key=0, style=solid];
m13_121 -> m13_213  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>"];
m13_121 -> m13_223  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>"];
m13_121 -> m13_228  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>"];
m13_121 -> m13_232  [key=3, color=darkorchid, style=bold, label="method methodReturn byte[] BuildMultipartFileValues"];
m13_212 -> m13_213  [key=0, style=solid];
m13_212 -> m13_206  [key=2, style=dotted];
m13_212 -> m13_214  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m13_212 -> m13_215  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m13_212 -> m13_216  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m13_212 -> m13_217  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m13_212 -> m13_218  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m13_212 -> m13_219  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m13_212 -> m13_220  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m13_212 -> m13_221  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m13_212 -> m13_222  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m13_212 -> m13_223  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m13_212 -> m13_224  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m13_212 -> m13_225  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m13_212 -> m13_226  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m13_212 -> m13_227  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m13_212 -> m13_228  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m13_212 -> m13_229  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m13_212 -> m13_230  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m13_212 -> m13_231  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m13_212 -> m13_232  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m13_213 -> m13_214  [key=0, style=solid];
m13_213 -> m13_229  [key=0, style=solid];
m13_213 -> m13_220  [key=1, style=dashed, color=darkseagreen4, label=key];
m13_213 -> m13_223  [key=1, style=dashed, color=darkseagreen4, label=key];
m13_213 -> m13_228  [key=1, style=dashed, color=darkseagreen4, label=key];
m13_223 -> m13_224  [key=0, style=solid];
m13_223 -> m13_209  [key=2, style=dotted];
m13_228 -> m13_213  [key=0, style=solid];
m13_228 -> m13_208  [key=2, style=dotted];
m13_232 -> m13_233  [key=0, style=solid];
m13_232 -> m13_210  [key=2, style=dotted];
m13_232 -> m13_211  [key=2, style=dotted];
m13_233 -> m13_234  [key=0, style=solid];
m13_214 -> m13_215  [key=0, style=solid];
m13_214 -> m13_207  [key=2, style=dotted];
m13_215 -> m13_216  [key=0, style=solid];
m13_215 -> m13_207  [key=2, style=dotted];
m13_216 -> m13_208  [key=2, style=dotted];
m13_216 -> m13_217  [key=0, style=solid];
m13_217 -> m13_208  [key=2, style=dotted];
m13_217 -> m13_218  [key=0, style=solid];
m13_218 -> m13_219  [key=0, style=solid];
m13_218 -> m13_207  [key=2, style=dotted];
m13_219 -> m13_220  [key=0, style=solid];
m13_219 -> m13_207  [key=2, style=dotted];
m13_220 -> m13_221  [key=0, style=solid];
m13_220 -> m13_209  [key=2, style=dotted];
m13_221 -> m13_222  [key=0, style=solid];
m13_221 -> m13_207  [key=2, style=dotted];
m13_222 -> m13_223  [key=0, style=solid];
m13_222 -> m13_207  [key=2, style=dotted];
m13_224 -> m13_225  [key=0, style=solid];
m13_224 -> m13_207  [key=2, style=dotted];
m13_225 -> m13_226  [key=0, style=solid];
m13_225 -> m13_207  [key=2, style=dotted];
m13_226 -> m13_227  [key=0, style=solid];
m13_226 -> m13_207  [key=2, style=dotted];
m13_227 -> m13_228  [key=0, style=solid];
m13_227 -> m13_207  [key=2, style=dotted];
m13_229 -> m13_230  [key=0, style=solid];
m13_229 -> m13_207  [key=2, style=dotted];
m13_230 -> m13_231  [key=0, style=solid];
m13_230 -> m13_207  [key=2, style=dotted];
m13_231 -> m13_232  [key=0, style=solid];
m13_231 -> m13_208  [key=2, style=dotted];
m13_234 -> m13_121  [key=0, style=bold, color=blue];
m13_162 -> m13_163  [key=0, style=solid];
m13_163 -> m13_166  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_163 -> m13_164  [key=0, style=solid];
m13_163 -> m13_33  [key=2, style=dotted];
m13_164 -> m13_165  [key=0, style=solid];
m13_164 -> n11  [key=2, style=dotted];
m13_165 -> m13_162  [key=0, style=bold, color=blue];
m13_11 -> m13_181  [key=0, style=solid];
m13_11 -> m13_113  [key=3, color=darkorchid, style=bold, label="method methodReturn Nancy.IO.RequestStream CreateRequestStream"];
m13_181 -> m13_182  [key=0, style=solid];
m13_181 -> m13_160  [key=2, style=dotted];
m13_181 -> m13_113  [key=2, style=dotted];
m13_182 -> m13_11  [key=0, style=bold, color=blue];
m13_142 -> m13_143  [key=0, style=solid];
m13_143 -> m13_144  [key=0, style=solid];
m13_143 -> m13_146  [key=2, style=dotted];
m13_144 -> m13_145  [key=0, style=solid];
m13_144 -> m13_147  [key=2, style=dotted];
m13_145 -> m13_142  [key=0, style=bold, color=blue];
m13_93 -> m13_94  [key=0, style=solid];
m13_94 -> m13_83  [key=3, color=darkorchid, style=bold, label="Local variable string bodyContent"];
m13_94 -> m13_95  [key=0, style=solid];
m13_94 -> m13_97  [key=1, style=dashed, color=darkseagreen4, label=bodyContent];
m13_95 -> m13_11  [key=2, style=dotted];
m13_95 -> m13_96  [key=0, style=solid];
m13_95 -> m13_99  [key=1, style=dashed, color=darkseagreen4, label=memory];
m13_95 -> m13_101  [key=1, style=dashed, color=darkseagreen4, label=memory];
m13_98 -> m13_14  [key=2, style=dotted];
m13_98 -> m13_99  [key=0, style=solid];
m13_100 -> m13_15  [key=2, style=dotted];
m13_100 -> m13_101  [key=0, style=solid];
m13_97 -> m13_13  [key=2, style=dotted];
m13_97 -> m13_98  [key=0, style=solid];
m13_96 -> m13_12  [key=2, style=dotted];
m13_96 -> m13_98  [key=1, style=dashed, color=darkseagreen4, label=writer];
m13_96 -> m13_97  [key=0, style=solid];
m13_99 -> m13_100  [key=0, style=solid];
m13_101 -> m13_16  [key=2, style=dotted];
m13_101 -> m13_102  [key=0, style=solid];
m13_102 -> m13_17  [key=2, style=dotted];
m13_102 -> m13_103  [key=0, style=solid];
m13_103 -> m13_93  [key=0, style=bold, color=blue];
m13_76 -> m13_77  [key=0, style=solid];
m13_77 -> m13_11  [key=2, style=dotted];
m13_77 -> m13_78  [key=0, style=solid];
m13_77 -> m13_79  [key=1, style=dashed, color=darkseagreen4, label=body];
m13_78 -> m13_15  [key=2, style=dotted];
m13_78 -> m13_16  [key=2, style=dotted];
m13_78 -> m13_79  [key=0, style=solid];
m13_79 -> m13_80  [key=0, style=solid];
m13_79 -> m13_81  [key=2, style=dotted];
m13_80 -> m13_76  [key=0, style=bold, color=blue];
m13_29 -> m13_30  [key=0, style=solid];
m13_30 -> m13_35  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_30 -> m13_31  [key=0, style=solid];
m13_30 -> m13_33  [key=2, style=dotted];
m13_31 -> m13_32  [key=0, style=solid];
m13_31 -> n11  [key=2, style=dotted];
m13_32 -> m13_29  [key=0, style=bold, color=blue];
m13_70 -> m13_71  [key=0, style=solid];
m13_72 -> m13_11  [key=2, style=dotted];
m13_72 -> m13_73  [key=0, style=solid];
m13_72 -> m13_16  [key=2, style=dotted];
m13_71 -> m13_15  [key=2, style=dotted];
m13_71 -> m13_72  [key=0, style=solid];
m13_73 -> m13_74  [key=0, style=solid];
m13_73 -> m13_75  [key=2, style=dotted];
m13_74 -> m13_70  [key=0, style=bold, color=blue];
m13_176 -> m13_177  [key=0, style=solid];
m13_179 -> m13_17  [key=2, style=dotted];
m13_179 -> m13_180  [key=0, style=solid];
m13_177 -> m13_179  [key=1, style=dashed, color=darkseagreen4, label=protocol];
m13_177 -> m13_177  [key=3, color=darkorchid, style=bold, label="Local variable string protocol"];
m13_177 -> m13_178  [key=0, style=solid];
m13_178 -> m13_179  [key=0, style=solid];
m13_178 -> m13_38  [key=2, style=dotted];
m13_180 -> m13_176  [key=0, style=bold, color=blue];
m13_169 -> m13_170  [key=0, style=solid];
m13_170 -> m13_173  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_170 -> m13_171  [key=0, style=solid];
m13_170 -> m13_33  [key=2, style=dotted];
m13_171 -> m13_172  [key=0, style=solid];
m13_171 -> n11  [key=2, style=dotted];
m13_172 -> m13_169  [key=0, style=bold, color=blue];
m13_0 -> m13_1  [key=0, style=solid];
m13_2 -> m13_11  [key=2, style=dotted];
m13_2 -> m13_3  [key=0, style=solid];
m13_2 -> m13_6  [key=1, style=dashed, color=darkseagreen4, label=memory];
m13_2 -> m13_8  [key=1, style=dashed, color=darkseagreen4, label=memory];
m13_5 -> m13_14  [key=2, style=dotted];
m13_5 -> m13_6  [key=0, style=solid];
m13_7 -> m13_15  [key=2, style=dotted];
m13_7 -> m13_8  [key=0, style=solid];
m13_3 -> m13_12  [key=2, style=dotted];
m13_3 -> m13_5  [key=1, style=dashed, color=darkseagreen4, label=writer];
m13_3 -> m13_4  [key=0, style=solid];
m13_1 -> m13_2  [key=0, style=solid];
m13_1 -> m13_1  [key=3, color=darkorchid, style=bold, label="Local variable string bodyContent"];
m13_1 -> m13_4  [key=1, style=dashed, color=darkseagreen4, label=bodyContent];
m13_1 -> m13_0  [key=0, style=bold, color=blue];
m13_6 -> m13_7  [key=0, style=solid];
m13_8 -> m13_16  [key=2, style=dotted];
m13_8 -> m13_9  [key=0, style=solid];
m13_4 -> m13_13  [key=2, style=dotted];
m13_4 -> m13_5  [key=0, style=solid];
m13_9 -> m13_17  [key=2, style=dotted];
m13_9 -> m13_10  [key=0, style=solid];
m13_10 -> m13_0  [key=0, style=bold, color=blue];
m13_113 -> m13_183  [key=0, style=solid];
m13_113 -> m13_105  [key=3, color=darkorchid, style=bold, label="Parameter variable System.IO.Stream stream"];
m13_113 -> m13_115  [key=3, color=darkorchid, style=bold, label="Parameter variable System.IO.Stream stream"];
m13_113 -> m13_124  [key=3, color=darkorchid, style=bold, label="Parameter variable System.IO.Stream stream"];
m13_113 -> m13_131  [key=3, color=darkorchid, style=bold, label="Parameter variable System.IO.Stream stream"];
m13_113 -> m13_137  [key=3, color=darkorchid, style=bold, label="Parameter variable System.IO.Stream stream"];
m13_113 -> m13_150  [key=3, color=darkorchid, style=bold, label="Parameter variable System.IO.Stream stream"];
m13_183 -> m13_184  [key=0, style=solid];
m13_183 -> m13_185  [key=2, style=dotted];
m13_184 -> m13_113  [key=0, style=bold, color=blue];
m13_112 -> m13_186  [key=0, style=solid];
m13_112 -> m13_187  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, string>"];
m13_112 -> m13_199  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, string>"];
m13_112 -> m13_203  [key=3, color=darkorchid, style=bold, label="method methodReturn byte[] BuildMultipartFormValues"];
m13_186 -> m13_187  [key=0, style=solid];
m13_186 -> m13_206  [key=2, style=dotted];
m13_186 -> m13_188  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m13_186 -> m13_189  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m13_186 -> m13_190  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m13_186 -> m13_191  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m13_186 -> m13_192  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m13_186 -> m13_193  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m13_186 -> m13_194  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m13_186 -> m13_195  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m13_186 -> m13_196  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m13_186 -> m13_197  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m13_186 -> m13_198  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m13_186 -> m13_199  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m13_186 -> m13_200  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m13_186 -> m13_201  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m13_186 -> m13_202  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m13_186 -> m13_203  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m13_187 -> m13_188  [key=0, style=solid];
m13_187 -> m13_200  [key=0, style=solid];
m13_187 -> m13_194  [key=1, style=dashed, color=darkseagreen4, label=key];
m13_187 -> m13_199  [key=1, style=dashed, color=darkseagreen4, label=key];
m13_199 -> m13_187  [key=0, style=solid];
m13_199 -> m13_208  [key=2, style=dotted];
m13_203 -> m13_204  [key=0, style=solid];
m13_203 -> m13_210  [key=2, style=dotted];
m13_203 -> m13_211  [key=2, style=dotted];
m13_204 -> m13_205  [key=0, style=solid];
m13_188 -> m13_189  [key=0, style=solid];
m13_188 -> m13_207  [key=2, style=dotted];
m13_189 -> m13_190  [key=0, style=solid];
m13_189 -> m13_207  [key=2, style=dotted];
m13_190 -> m13_191  [key=0, style=solid];
m13_190 -> m13_208  [key=2, style=dotted];
m13_191 -> m13_192  [key=0, style=solid];
m13_191 -> m13_208  [key=2, style=dotted];
m13_192 -> m13_193  [key=0, style=solid];
m13_192 -> m13_207  [key=2, style=dotted];
m13_193 -> m13_194  [key=0, style=solid];
m13_193 -> m13_207  [key=2, style=dotted];
m13_194 -> m13_195  [key=0, style=solid];
m13_194 -> m13_209  [key=2, style=dotted];
m13_195 -> m13_196  [key=0, style=solid];
m13_195 -> m13_207  [key=2, style=dotted];
m13_196 -> m13_197  [key=0, style=solid];
m13_196 -> m13_207  [key=2, style=dotted];
m13_197 -> m13_198  [key=0, style=solid];
m13_197 -> m13_207  [key=2, style=dotted];
m13_198 -> m13_199  [key=0, style=solid];
m13_198 -> m13_207  [key=2, style=dotted];
m13_200 -> m13_201  [key=0, style=solid];
m13_200 -> m13_207  [key=2, style=dotted];
m13_201 -> m13_202  [key=0, style=solid];
m13_201 -> m13_207  [key=2, style=dotted];
m13_202 -> m13_203  [key=0, style=solid];
m13_202 -> m13_208  [key=2, style=dotted];
m13_205 -> m13_112  [key=0, style=bold, color=blue];
m13_39 -> m13_40  [key=0, style=solid];
m13_40 -> m13_43  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_40 -> m13_41  [key=0, style=solid];
m13_40 -> m13_33  [key=2, style=dotted];
m13_41 -> m13_42  [key=0, style=solid];
m13_41 -> n11  [key=2, style=dotted];
m13_42 -> m13_39  [key=0, style=bold, color=blue];
m13_173 -> m13_174  [key=0, style=solid];
m13_36 -> m13_38  [key=2, style=dotted];
m13_36 -> m13_37  [key=0, style=solid];
m13_44 -> m13_38  [key=2, style=dotted];
m13_44 -> m13_45  [key=0, style=solid];
m13_51 -> m13_38  [key=2, style=dotted];
m13_51 -> m13_52  [key=0, style=solid];
m13_58 -> m13_38  [key=2, style=dotted];
m13_58 -> m13_59  [key=0, style=solid];
m13_167 -> m13_38  [key=2, style=dotted];
m13_167 -> m13_168  [key=0, style=solid];
m13_174 -> m13_38  [key=2, style=dotted];
m13_174 -> m13_175  [key=0, style=solid];
m13_35 -> m13_36  [key=0, style=solid];
m13_37 -> m13_35  [key=0, style=bold, color=blue];
m13_43 -> m13_44  [key=0, style=solid];
m13_45 -> m13_43  [key=0, style=bold, color=blue];
m13_50 -> m13_51  [key=0, style=solid];
m13_52 -> m13_50  [key=0, style=bold, color=blue];
m13_57 -> m13_58  [key=0, style=solid];
m13_59 -> m13_57  [key=0, style=bold, color=blue];
m13_166 -> m13_167  [key=0, style=solid];
m13_168 -> m13_166  [key=0, style=bold, color=blue];
m13_175 -> m13_173  [key=0, style=bold, color=blue];
m13_53 -> m13_54  [key=0, style=solid];
m13_54 -> m13_57  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_54 -> m13_55  [key=0, style=solid];
m13_54 -> m13_33  [key=2, style=dotted];
m13_55 -> m13_56  [key=0, style=solid];
m13_55 -> n11  [key=2, style=dotted];
m13_56 -> m13_53  [key=0, style=bold, color=blue];
m13_65 -> m13_66  [key=0, style=solid];
m13_68 -> m13_17  [key=2, style=dotted];
m13_68 -> m13_69  [key=0, style=solid];
m13_66 -> m13_68  [key=1, style=dashed, color=darkseagreen4, label=path];
m13_66 -> m13_66  [key=3, color=darkorchid, style=bold, label="Local variable string path"];
m13_66 -> m13_67  [key=0, style=solid];
m13_67 -> m13_68  [key=0, style=solid];
m13_67 -> m13_38  [key=2, style=dotted];
m13_69 -> m13_65  [key=0, style=bold, color=blue];
m13_18 -> m13_19  [key=0, style=solid];
m13_18 -> m13_26  [key=1, style=dashed, color=darkseagreen4, label=string];
m13_18 -> m13_27  [key=1, style=dashed, color=darkseagreen4, label=string];
m13_20 -> m13_11  [key=2, style=dotted];
m13_20 -> m13_21  [key=0, style=solid];
m13_20 -> m13_24  [key=1, style=dashed, color=darkseagreen4, label=memory];
m13_20 -> m13_26  [key=1, style=dashed, color=darkseagreen4, label=memory];
m13_23 -> m13_14  [key=2, style=dotted];
m13_23 -> m13_24  [key=0, style=solid];
m13_25 -> m13_15  [key=2, style=dotted];
m13_25 -> m13_26  [key=0, style=solid];
m13_21 -> m13_12  [key=2, style=dotted];
m13_21 -> m13_23  [key=1, style=dashed, color=darkseagreen4, label=writer];
m13_21 -> m13_22  [key=0, style=solid];
m13_19 -> m13_20  [key=0, style=solid];
m13_19 -> m13_19  [key=3, color=darkorchid, style=bold, label="Local variable string bodyContent"];
m13_19 -> m13_22  [key=1, style=dashed, color=darkseagreen4, label=bodyContent];
m13_24 -> m13_25  [key=0, style=solid];
m13_26 -> m13_16  [key=2, style=dotted];
m13_26 -> m13_27  [key=0, style=solid];
m13_22 -> m13_13  [key=2, style=dotted];
m13_22 -> m13_23  [key=0, style=solid];
m13_27 -> m13_17  [key=2, style=dotted];
m13_27 -> m13_28  [key=0, style=solid];
m13_28 -> m13_18  [key=0, style=bold, color=blue];
m13_82 -> m13_83  [key=0, style=solid];
m13_88 -> m13_89  [key=0, style=solid, color=green];
m13_84 -> m13_88  [key=1, style=dashed, color=green, label=memory];
m13_84 -> m13_85  [key=0, style=solid];
m13_84 -> m13_11  [key=2, style=dotted];
m13_84 -> m13_90  [key=1, style=dashed, color=darkseagreen4, label=memory];
m13_87 -> m13_88  [key=0, style=solid, color=green];
m13_87 -> m13_14  [key=2, style=dotted];
m13_89 -> m13_90  [key=0, style=solid];
m13_89 -> m13_15  [key=2, style=dotted];
m13_83 -> m13_84  [key=0, style=solid];
m13_83 -> m13_83  [key=3, color=darkorchid, style=bold, label="Local variable string bodyContent"];
m13_83 -> m13_86  [key=1, style=dashed, color=darkseagreen4, label=bodyContent];
m13_85 -> m13_87  [key=1, style=dashed, color=darkseagreen4, label=writer];
m13_85 -> m13_86  [key=0, style=solid];
m13_85 -> m13_12  [key=2, style=dotted];
m13_90 -> m13_91  [key=0, style=solid];
m13_90 -> m13_16  [key=2, style=dotted];
m13_86 -> m13_87  [key=0, style=solid];
m13_86 -> m13_13  [key=2, style=dotted];
m13_91 -> m13_92  [key=0, style=solid];
m13_91 -> m13_17  [key=2, style=dotted];
m13_92 -> m13_82  [key=0, style=bold, color=blue];
m13_148 -> m13_149  [key=0, style=solid];
m13_149 -> m13_83  [key=3, color=darkorchid, style=bold, label="Local variable string bodyContent"];
m13_149 -> m13_150  [key=0, style=solid];
m13_149 -> m13_152  [key=1, style=dashed, color=darkseagreen4, label=bodyContent];
m13_153 -> m13_14  [key=2, style=dotted];
m13_153 -> m13_154  [key=0, style=solid];
m13_155 -> m13_15  [key=2, style=dotted];
m13_155 -> m13_156  [key=0, style=solid];
m13_150 -> m13_151  [key=0, style=solid];
m13_150 -> m13_160  [key=2, style=dotted];
m13_150 -> m13_154  [key=1, style=dashed, color=darkseagreen4, label=memory];
m13_150 -> m13_156  [key=1, style=dashed, color=darkseagreen4, label=memory];
m13_152 -> m13_13  [key=2, style=dotted];
m13_152 -> m13_153  [key=0, style=solid];
m13_151 -> m13_12  [key=2, style=dotted];
m13_151 -> m13_153  [key=1, style=dashed, color=darkseagreen4, label=writer];
m13_151 -> m13_152  [key=0, style=solid];
m13_156 -> m13_113  [key=2, style=dotted];
m13_156 -> m13_16  [key=2, style=dotted];
m13_156 -> m13_157  [key=0, style=solid];
m13_156 -> m13_158  [key=1, style=dashed, color=darkseagreen4, label=request];
m13_154 -> m13_155  [key=0, style=solid];
m13_157 -> m13_158  [key=0, style=solid];
m13_157 -> m13_161  [key=2, style=dotted];
m13_158 -> m13_17  [key=2, style=dotted];
m13_158 -> m13_159  [key=0, style=solid];
m13_159 -> m13_148  [key=0, style=bold, color=blue];
m13_123 -> m13_124  [key=0, style=solid];
m13_124 -> m13_15  [key=2, style=dotted];
m13_124 -> m13_125  [key=0, style=solid];
m13_124 -> m13_111  [key=2, style=dotted];
m13_124 -> m13_120  [key=2, style=dotted];
m13_124 -> m13_121  [key=2, style=dotted];
m13_124 -> m13_126  [key=1, style=dashed, color=darkseagreen4, label=memory];
m13_125 -> m13_15  [key=2, style=dotted];
m13_125 -> m13_126  [key=0, style=solid];
m13_126 -> m13_113  [key=2, style=dotted];
m13_126 -> m13_16  [key=2, style=dotted];
m13_126 -> m13_127  [key=0, style=solid];
m13_127 -> m13_17  [key=2, style=dotted];
m13_127 -> m13_128  [key=0, style=solid];
m13_127 -> m13_129  [key=2, style=dotted];
m13_128 -> m13_123  [key=0, style=bold, color=blue];
m13_136 -> m13_137  [key=0, style=solid];
m13_137 -> m13_15  [key=2, style=dotted];
m13_137 -> m13_138  [key=0, style=solid];
m13_137 -> m13_111  [key=2, style=dotted];
m13_137 -> m13_120  [key=2, style=dotted];
m13_137 -> m13_121  [key=2, style=dotted];
m13_137 -> m13_139  [key=1, style=dashed, color=darkseagreen4, label=memory];
m13_138 -> m13_15  [key=2, style=dotted];
m13_138 -> m13_139  [key=0, style=solid];
m13_139 -> m13_113  [key=2, style=dotted];
m13_139 -> m13_16  [key=2, style=dotted];
m13_139 -> m13_140  [key=0, style=solid];
m13_140 -> m13_17  [key=2, style=dotted];
m13_140 -> m13_141  [key=0, style=solid];
m13_140 -> m13_129  [key=2, style=dotted];
m13_140 -> m13_142  [key=2, style=dotted];
m13_141 -> m13_136  [key=0, style=bold, color=blue];
m14_0 -> m14_1  [key=0, style=solid, color=red];
m14_1 -> m14_2  [key=0, style=solid, color=red];
m14_2 -> m14_3  [key=0, style=solid, color=red];
m14_3 -> m14_0  [key=0, style=bold, color=blue];
m14_25 -> m14_26  [key=0, style=solid, color=red];
m14_4 -> m14_5  [key=0, style=solid, color=red];
m14_5 -> m14_6  [key=0, style=solid, color=red];
m14_6 -> m14_4  [key=0, style=bold, color=blue];
m14_7 -> m14_8  [key=0, style=solid, color=red];
m14_8 -> m14_9  [key=0, style=solid, color=red];
m14_8 -> m14_19  [key=2, style=dotted, color=red];
m14_8 -> m14_25  [key=1, style=dashed, color=red, label="lambda expression"];
m14_8 -> m14_12  [key=1, style=dashed, color=red, label=model];
m14_8 -> m14_14  [key=1, style=dashed, color=red, label=model];
m14_8 -> m14_16  [key=1, style=dashed, color=red, label=model];
m14_9 -> m14_10  [key=0, style=solid, color=red];
m14_9 -> m14_20  [key=2, style=dotted, color=red];
m14_9 -> m14_11  [key=1, style=dashed, color=red, label=sb];
m14_9 -> m14_12  [key=1, style=dashed, color=red, label=sb];
m14_9 -> m14_13  [key=1, style=dashed, color=red, label=sb];
m14_9 -> m14_14  [key=1, style=dashed, color=red, label=sb];
m14_9 -> m14_15  [key=1, style=dashed, color=red, label=sb];
m14_9 -> m14_16  [key=1, style=dashed, color=red, label=sb];
m14_9 -> m14_17  [key=1, style=dashed, color=red, label=sb];
m14_12 -> m14_13  [key=0, style=solid, color=red];
m14_12 -> m14_23  [key=2, style=dotted, color=red];
m14_12 -> m14_21  [key=2, style=dotted, color=red];
m14_14 -> m14_15  [key=0, style=solid, color=red];
m14_14 -> m14_21  [key=2, style=dotted, color=red];
m14_16 -> m14_17  [key=0, style=solid, color=red];
m14_16 -> m14_21  [key=2, style=dotted, color=red];
m14_10 -> m14_11  [key=0, style=solid, color=red];
m14_10 -> m14_21  [key=2, style=dotted, color=red];
m14_11 -> m14_12  [key=0, style=solid, color=red];
m14_11 -> m14_22  [key=2, style=dotted, color=red];
m14_13 -> m14_14  [key=0, style=solid, color=red];
m14_13 -> m14_22  [key=2, style=dotted, color=red];
m14_15 -> m14_16  [key=0, style=solid, color=red];
m14_15 -> m14_22  [key=2, style=dotted, color=red];
m14_17 -> m14_18  [key=0, style=solid, color=red];
m14_17 -> m14_24  [key=2, style=dotted, color=red];
m14_18 -> m14_7  [key=0, style=bold, color=blue];
m14_26 -> m14_27  [key=0, style=solid, color=red];
m14_27 -> m14_25  [key=0, style=bold, color=blue];
m14_28 -> m14_1  [key=1, style=dashed, color=red, label="Nancy.Demo.ModelBinding.XmlModule"];
m14_28 -> m14_5  [key=1, style=dashed, color=red, label="Nancy.Demo.ModelBinding.XmlModule"];
m14_28 -> m14_2  [key=1, style=dashed, color=red, label="Nancy.Demo.ModelBinding.XmlModule"];
m14_28 -> m14_8  [key=1, style=dashed, color=red, label="Nancy.Demo.ModelBinding.XmlModule"];
m15_0 -> m15_1  [key=0, style=solid, color=red];
m15_1 -> m15_2  [key=0, style=solid, color=red];
m15_1 -> n4  [key=2, style=dotted, color=red];
m15_1 -> m15_3  [key=1, style=dashed, color=red, label=document];
m15_2 -> m15_3  [key=0, style=solid, color=red];
m15_2 -> m15_9  [key=2, style=dotted, color=red];
m15_2 -> m15_10  [key=2, style=dotted, color=red];
m15_2 -> m15_6  [key=1, style=dashed, color=red, label=queryResult];
m15_3 -> m15_4  [key=0, style=solid, color=red];
m15_3 -> m15_11  [key=2, style=dotted, color=red];
m15_6 -> m15_7  [key=0, style=solid, color=red];
m15_6 -> m15_14  [key=2, style=dotted, color=red];
m15_4 -> m15_5  [key=0, style=solid, color=red];
m15_4 -> m15_12  [key=2, style=dotted, color=red];
m15_4 -> m15_6  [key=1, style=dashed, color=red, label=result];
m15_5 -> m15_6  [key=0, style=solid, color=red];
m15_5 -> m15_13  [key=2, style=dotted, color=red];
m15_7 -> m15_0  [key=0, style=bold, color=blue];
}
