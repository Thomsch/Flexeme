digraph  {
n23 [label="Nancy.Routing.Trie.Nodes.CaptureNodeWithLiteral", span=""];
n0 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithLiteral.CaptureNodeWithLiteral(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory)", label="Entry Nancy.Routing.Trie.Nodes.CaptureNodeWithLiteral.CaptureNodeWithLiteral(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory)", span="26-26"];
n2 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithLiteral.CaptureNodeWithLiteral(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory)", label="Exit Nancy.Routing.Trie.Nodes.CaptureNodeWithLiteral.CaptureNodeWithLiteral(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory)", span="26-26"];
n3 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithLiteral.ExtractParameterName()", label="Entry Nancy.Routing.Trie.Nodes.CaptureNodeWithLiteral.ExtractParameterName()", span="51-51"];
n4 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithLiteral.Match(string)", label="Entry Nancy.Routing.Trie.Nodes.CaptureNodeWithLiteral.Match(string)", span="37-37"];
n11 [cluster="string.StartsWith(string)", label="Entry string.StartsWith(string)", span="0-0"];
n12 [cluster="string.EndsWith(string)", label="Entry string.EndsWith(string)", span="0-0"];
n13 [cluster="Nancy.Routing.Trie.SegmentMatch.SegmentMatch(bool)", label="Entry Nancy.Routing.Trie.SegmentMatch.SegmentMatch(bool)", span="26-26"];
n14 [cluster="string.Substring(int, int)", label="Entry string.Substring(int, int)", span="0-0"];
n15 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
n10 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithLiteral.Match(string)", label="Exit Nancy.Routing.Trie.Nodes.CaptureNodeWithLiteral.Match(string)", span="37-37"];
n21 [cluster="System.Text.RegularExpressions.Regex.Match(string)", label="Entry System.Text.RegularExpressions.Regex.Match(string)", span="0-0"];
n22 [cluster="string.Trim(params char[])", label="Entry string.Trim(params char[])", span="0-0"];
n20 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithLiteral.ExtractParameterName()", label="Exit Nancy.Routing.Trie.Nodes.CaptureNodeWithLiteral.ExtractParameterName()", span="51-51"];
m0_13 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.Match(string)", file="CaptureNodeWithMultipleParameters.cs", label="Entry Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.Match(string)", span="57-57"];
m0_14 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.Match(string)", color=green, community=0, file="CaptureNodeWithMultipleParameters.cs", label="var match = SegmentMatch.NoMatch", prediction=0, span="59-59"];
m0_15 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.Match(string)", color=green, community=0, file="CaptureNodeWithMultipleParameters.cs", label="var regex = new Regex(builtRegex)", prediction=1, span="60-60"];
m0_23 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.Match(string)", color=green, community=0, file="CaptureNodeWithMultipleParameters.cs", label="return match;", prediction=0, span="71-71"];
m0_16 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.Match(string)", color=green, community=0, file="CaptureNodeWithMultipleParameters.cs", label="regex.IsMatch(segment)", prediction=3, span="62-62"];
m0_17 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.Match(string)", color=green, community=0, file="CaptureNodeWithMultipleParameters.cs", label="match = new SegmentMatch(true)", prediction=0, span="64-64"];
m0_18 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.Match(string)", color=green, community=0, file="CaptureNodeWithMultipleParameters.cs", label="var regexMatch = regex.Match(segment)", prediction=0, span="65-65"];
m0_19 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.Match(string)", color=green, community=0, file="CaptureNodeWithMultipleParameters.cs", label="int i = 1", prediction=0, span="66-66"];
m0_20 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.Match(string)", color=green, community=0, file="CaptureNodeWithMultipleParameters.cs", label="i < regexMatch.Groups.Count", prediction=0, span="66-66"];
m0_21 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.Match(string)", color=green, community=0, file="CaptureNodeWithMultipleParameters.cs", label="match.CapturedParameters.Add(parameterNames[i - 1], regexMatch.Groups[i].Value)", prediction=0, span="68-68"];
m0_22 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.Match(string)", color=green, community=0, file="CaptureNodeWithMultipleParameters.cs", label="i++", prediction=0, span="66-66"];
m0_24 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.Match(string)", file="CaptureNodeWithMultipleParameters.cs", label="Exit Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.Match(string)", span="57-57"];
m0_3 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.ExtractParameterNames()", file="CaptureNodeWithMultipleParameters.cs", label="Entry Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.ExtractParameterNames()", span="77-77"];
m0_30 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.ExtractParameterNames()", color=green, community=0, file="CaptureNodeWithMultipleParameters.cs", label="var matches = MatchRegex.Matches(this.RouteDefinitionSegment)", prediction=0, span="79-79"];
m0_31 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.ExtractParameterNames()", color=green, community=0, file="CaptureNodeWithMultipleParameters.cs", label="builtRegex += ''^''", prediction=11, span="80-80"];
m0_32 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.ExtractParameterNames()", color=green, community=0, file="CaptureNodeWithMultipleParameters.cs", label=matches, prediction=0, span="81-81"];
m0_36 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.ExtractParameterNames()", color=green, community=0, file="CaptureNodeWithMultipleParameters.cs", label="builtRegex += Regex.Escape(match.Value)", prediction=13, span="90-90"];
m0_35 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.ExtractParameterNames()", color=green, community=0, file="CaptureNodeWithMultipleParameters.cs", label="builtRegex += ''(.+)''", prediction=14, span="86-86"];
m0_33 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.ExtractParameterNames()", color=green, community=0, file="CaptureNodeWithMultipleParameters.cs", label="match.Value.StartsWith(''{'') && match.Value.EndsWith(''}'')", prediction=15, span="83-83"];
m0_37 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.ExtractParameterNames()", color=green, community=0, file="CaptureNodeWithMultipleParameters.cs", label="builtRegex += ''$''", prediction=16, span="93-93"];
m0_34 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.ExtractParameterNames()", color=green, community=0, file="CaptureNodeWithMultipleParameters.cs", label="parameterNames.Add(match.Value.Trim('{', '}'))", prediction=0, span="85-85"];
m0_38 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.ExtractParameterNames()", file="CaptureNodeWithMultipleParameters.cs", label="Exit Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.ExtractParameterNames()", span="77-77"];
m0_26 [cluster="System.Text.RegularExpressions.Regex.IsMatch(string)", file="CaptureNodeWithMultipleParameters.cs", label="Entry System.Text.RegularExpressions.Regex.IsMatch(string)", span="0-0"];
m0_40 [cluster="string.EndsWith(string)", file="CaptureNodeWithMultipleParameters.cs", label="Entry string.EndsWith(string)", span="0-0"];
m0_28 [cluster="System.Text.RegularExpressions.Regex.Match(string)", file="CaptureNodeWithMultipleParameters.cs", label="Entry System.Text.RegularExpressions.Regex.Match(string)", span="0-0"];
m0_42 [cluster="System.Collections.Generic.List<T>.Add(T)", file="CaptureNodeWithMultipleParameters.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m0_39 [cluster="string.StartsWith(string)", file="CaptureNodeWithMultipleParameters.cs", label="Entry string.StartsWith(string)", span="0-0"];
m0_43 [cluster="System.Text.RegularExpressions.Regex.Escape(string)", file="CaptureNodeWithMultipleParameters.cs", label="Entry System.Text.RegularExpressions.Regex.Escape(string)", span="0-0"];
m0_9 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>(System.Func<TSource, bool>)", file="CaptureNodeWithMultipleParameters.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>(System.Func<TSource, bool>)", span="0-0"];
m0_0 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.CaptureNodeWithMultipleParameters(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory)", file="CaptureNodeWithMultipleParameters.cs", label="Entry Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.CaptureNodeWithMultipleParameters(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory)", span="22-22"];
m0_1 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.CaptureNodeWithMultipleParameters(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory)", color=green, community=0, file="CaptureNodeWithMultipleParameters.cs", label="this.ExtractParameterNames()", prediction=0, span="25-25"];
m0_2 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.CaptureNodeWithMultipleParameters(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory)", file="CaptureNodeWithMultipleParameters.cs", label="Exit Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.CaptureNodeWithMultipleParameters(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory)", span="22-22"];
m0_25 [cluster="System.Text.RegularExpressions.Regex.Regex(string)", file="CaptureNodeWithMultipleParameters.cs", label="Entry System.Text.RegularExpressions.Regex.Regex(string)", span="0-0"];
m0_8 [cluster="System.Collections.IEnumerable.Cast<TResult>()", file="CaptureNodeWithMultipleParameters.cs", label="Entry System.Collections.IEnumerable.Cast<TResult>()", span="0-0"];
m0_29 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="CaptureNodeWithMultipleParameters.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m0_27 [cluster="Nancy.Routing.Trie.SegmentMatch.SegmentMatch(bool)", file="CaptureNodeWithMultipleParameters.cs", label="Entry Nancy.Routing.Trie.SegmentMatch.SegmentMatch(bool)", span="26-26"];
m0_10 [cluster="lambda expression", file="CaptureNodeWithMultipleParameters.cs", label="Entry lambda expression", span="41-41"];
m0_11 [cluster="lambda expression", color=green, community=0, file="CaptureNodeWithMultipleParameters.cs", label="g.Value != ''''", prediction=19, span="41-41"];
m0_12 [cluster="lambda expression", file="CaptureNodeWithMultipleParameters.cs", label="Exit lambda expression", span="41-41"];
m0_4 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.IsMatch(string)", file="CaptureNodeWithMultipleParameters.cs", label="Entry Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.IsMatch(string)", span="39-39"];
m0_5 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.IsMatch(string)", color=green, community=0, file="CaptureNodeWithMultipleParameters.cs", label="return MatchRegex.Matches(segment).Cast<Group>().Count(g => g.Value != '''') > 1;", prediction=20, span="41-41"];
m0_6 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.IsMatch(string)", file="CaptureNodeWithMultipleParameters.cs", label="Exit Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.IsMatch(string)", span="39-39"];
m0_7 [cluster="System.Text.RegularExpressions.Regex.Matches(string)", file="CaptureNodeWithMultipleParameters.cs", label="Entry System.Text.RegularExpressions.Regex.Matches(string)", span="0-0"];
m0_44 [file="CaptureNodeWithMultipleParameters.cs", label="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters", span=""];
m1_0 [cluster="Nancy.Responses.Negotiation.IResponseProcessor.CanProcess(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", file="DefaultRoutePatternMatcherFixture.cs", label="Entry Nancy.Responses.Negotiation.IResponseProcessor.CanProcess(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", span="23-23"];
m1_1 [cluster="Nancy.Responses.Negotiation.IResponseProcessor.CanProcess(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", file="DefaultRoutePatternMatcherFixture.cs", label="Exit Nancy.Responses.Negotiation.IResponseProcessor.CanProcess(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", span="23-23"];
m1_2 [cluster="Nancy.Responses.Negotiation.IResponseProcessor.Process(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", file="DefaultRoutePatternMatcherFixture.cs", label="Entry Nancy.Responses.Negotiation.IResponseProcessor.Process(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", span="32-32"];
m1_3 [cluster="Nancy.Responses.Negotiation.IResponseProcessor.Process(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", file="DefaultRoutePatternMatcherFixture.cs", label="Exit Nancy.Responses.Negotiation.IResponseProcessor.Process(Nancy.Responses.Negotiation.MediaRange, dynamic, Nancy.NancyContext)", span="32-32"];
m2_28 [cluster="object.ShouldBeSameAs(object)", file="DefaultRouteResolverFixture.cs", label="Entry object.ShouldBeSameAs(object)", span="130-130"];
m2_29 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_return_match_result_with_context_of_current_request_when_paths_do_not_match()", file="DefaultRouteResolverFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_return_match_result_with_context_of_current_request_when_paths_do_not_match()", span="70-70"];
m2_32 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_return_match_result_with_context_of_current_request_when_paths_do_not_match()", file="DefaultRouteResolverFixture.cs", label="results.Context.ShouldBeSameAs(context)", span="79-79"];
m2_68 [cluster="System.Uri.EscapeUriString(string)", file="DefaultRouteResolverFixture.cs", label="Entry System.Uri.EscapeUriString(string)", span="0-0"];
m2_74 [cluster="Unk.AddRange", file="DefaultRouteResolverFixture.cs", label="Entry Unk.AddRange", span=""];
m2_75 [cluster="System.Collections.Generic.List<T>.Add(T)", file="DefaultRouteResolverFixture.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m2_76 [cluster="System.CodeDom.Compiler.CompilerParameters.CompilerParameters(string[], string)", file="DefaultRouteResolverFixture.cs", label="Entry System.CodeDom.Compiler.CompilerParameters.CompilerParameters(string[], string)", span="0-0"];
m2_78 [cluster="Unk.CompileAssemblyFromDom", file="DefaultRouteResolverFixture.cs", label="Entry Unk.CompileAssemblyFromDom", span=""];
m2_116 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_support_non_optional_parameters_after_optional_parameter()", file="DefaultRouteResolverFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_support_non_optional_parameters_after_optional_parameter()", span="276-276"];
m2_22 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_return_match_result_with_context_of_current_request_when_paths_matched()", file="DefaultRouteResolverFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_return_match_result_with_context_of_current_request_when_paths_matched()", span="57-57"];
m2_65 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_not_url_decode_captured_parameters()", file="DefaultRouteResolverFixture.cs", label="var results = this.matcher.Match(''/foo/'' + parameter, ''/foo/{bar}'', new[] { ''foo'', @''{bar}'' }, null)", span="152-152"];
m2_33 [cluster="Unk.GenerateCode", file="DefaultRouteResolverFixture.cs", label="Entry Unk.GenerateCode", span=""];
m2_35 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_return_negative_match_result_when_paths_does_not_match()", file="DefaultRouteResolverFixture.cs", label="var results = this.matcher.Match(''/foo/bar'', ''/bar/foo'', new[] { ''bar'', ''foo'' }, null)", span="86-86"];
m2_36 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_return_negative_match_result_when_paths_does_not_match()", color=green, community=0, file="DefaultRouteResolverFixture.cs", label="results.IsMatch.ShouldBeFalse()", prediction=21, span="89-89"];
m2_37 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_return_negative_match_result_when_paths_does_not_match()", color=green, community=0, file="DefaultRouteResolverFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_return_negative_match_result_when_paths_does_not_match()", prediction=22, span="83-83"];
m2_43 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_capture_parameters()", file="DefaultRouteResolverFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_capture_parameters()", span="103-103"];
m2_38 [cluster="bool.ShouldBeFalse()", color=green, community=0, file="DefaultRouteResolverFixture.cs", label="Entry bool.ShouldBeFalse()", prediction=23, span="90-90"];
m2_41 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_be_case_insensitive_when_checking_for_match()", file="DefaultRouteResolverFixture.cs", label="results.IsMatch.ShouldBeTrue()", span="99-99"];
m2_39 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_be_case_insensitive_when_checking_for_match()", file="DefaultRouteResolverFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_be_case_insensitive_when_checking_for_match()", span="93-93"];
m2_42 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_be_case_insensitive_when_checking_for_match()", file="DefaultRouteResolverFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_be_case_insensitive_when_checking_for_match()", span="93-93"];
m2_40 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_be_case_insensitive_when_checking_for_match()", color=green, community=0, file="DefaultRouteResolverFixture.cs", label="var results = this.matcher.Match(''/FoO/baR'', ''/fOO/bAr'', new[] { ''fOO'', ''bAr'' }, null)", prediction=24, span="96-96"];
m2_48 [cluster="object.ShouldEqual(object)", color=green, community=0, file="DefaultRouteResolverFixture.cs", label="Entry object.ShouldEqual(object)", prediction=25, span="95-95"];
m2_46 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_capture_parameters()", file="DefaultRouteResolverFixture.cs", label="((string)results.Parameters[''baz'']).ShouldEqual(''baz'')", span="110-110"];
m2_47 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_capture_parameters()", file="DefaultRouteResolverFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_capture_parameters()", span="103-103"];
m2_49 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_treat_parameters_as_greedy()", file="DefaultRouteResolverFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_treat_parameters_as_greedy()", span="114-114"];
m2_58 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_allow_regex_in_route_definition_and_capture_specified_parameters()", color=green, community=0, file="DefaultRouteResolverFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_allow_regex_in_route_definition_and_capture_specified_parameters()", prediction=26, span="124-124"];
m2_55 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_allow_regex_in_route_definition_and_capture_specified_parameters()", file="DefaultRouteResolverFixture.cs", label="results.IsMatch.ShouldBeTrue()", span="130-130"];
m2_59 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_allow_regex_in_route_definition_and_return_negative_result_when_it_does_not_match()", file="DefaultRouteResolverFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_allow_regex_in_route_definition_and_return_negative_result_when_it_does_not_match()", span="136-136"];
m2_57 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_allow_regex_in_route_definition_and_capture_specified_parameters()", color=green, community=0, file="DefaultRouteResolverFixture.cs", label="((string)results.Parameters[''bar'']).ShouldEqual(''1234'')", prediction=27, span="132-132"];
m2_53 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_allow_regex_in_route_definition_and_capture_specified_parameters()", file="DefaultRouteResolverFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_allow_regex_in_route_definition_and_capture_specified_parameters()", span="124-124"];
m2_52 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_treat_parameters_as_greedy()", file="DefaultRouteResolverFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_treat_parameters_as_greedy()", span="114-114"];
m2_62 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_allow_regex_in_route_definition_and_return_negative_result_when_it_does_not_match()", file="DefaultRouteResolverFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_allow_regex_in_route_definition_and_return_negative_result_when_it_does_not_match()", span="136-136"];
m2_170 [cluster="Nancy.ViewEngines.Razor.HtmlHelpers.HtmlHelpers(Nancy.ViewEngines.IViewEngine, Nancy.ViewEngines.IRenderContext)", file="DefaultRouteResolverFixture.cs", label="Entry Nancy.ViewEngines.Razor.HtmlHelpers.HtmlHelpers(Nancy.ViewEngines.IViewEngine, Nancy.ViewEngines.IRenderContext)", span="16-16"];
m2_81 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_allow_underscore_in_parameter_key()", file="DefaultRouteResolverFixture.cs", label="var results = this.matcher.Match(''/foo/'' + parameter, ''/foo/{b_ar}'', new[] { ''foo'', ''{b_ar}'' }, null)", span="191-191"];
m2_89 [cluster="lambda expression", color=green, community=0, file="DefaultRouteResolverFixture.cs", label="String.Format(''Error Compiling Template: ({0}, {1}) {2})'', error.Line, error.Column, error.ErrorText)", prediction=28, span="125-125"];
m2_90 [cluster="lambda expression", file="DefaultRouteResolverFixture.cs", label="Exit lambda expression", span="125-125"];
m2_91 [cluster="Unk.Format", file="DefaultRouteResolverFixture.cs", label="Entry Unk.Format", span=""];
m2_92 [cluster="lambda expression", file="DefaultRouteResolverFixture.cs", label="Entry lambda expression", span="126-126"];
m2_93 [cluster="lambda expression", color=green, community=0, file="DefaultRouteResolverFixture.cs", label="s1 + ''<br/>'' + s2", prediction=29, span="126-126"];
m2_8 [cluster="Nancy.Routing.DefaultRoutePatternMatcher.Match(string, string, System.Collections.Generic.IEnumerable<string>, Nancy.NancyContext)", file="DefaultRouteResolverFixture.cs", label="Entry Nancy.Routing.DefaultRoutePatternMatcher.Match(string, string, System.Collections.Generic.IEnumerable<string>, Nancy.NancyContext)", span="26-26"];
m2_104 [cluster="lambda expression", color=green, community=0, file="DefaultRouteResolverFixture.cs", label="new NancyRazorErrorView(error)", prediction=30, span="143-143"];
m2_105 [cluster="lambda expression", file="DefaultRouteResolverFixture.cs", label="Exit lambda expression", span="143-143"];
m2_106 [cluster="lambda expression", file="DefaultRouteResolverFixture.cs", label="Entry lambda expression", span="149-149"];
m2_107 [cluster="lambda expression", file="DefaultRouteResolverFixture.cs", label="new NancyRazorErrorView(error)", span="149-149"];
m2_64 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_not_url_decode_captured_parameters()", file="DefaultRouteResolverFixture.cs", label="var parameter = Uri.EscapeUriString(''baa ram ewe{}'')", span="149-149"];
m2_67 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_not_url_decode_captured_parameters()", file="DefaultRouteResolverFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_not_url_decode_captured_parameters()", span="146-146"];
m2_0 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.DefaultRoutePatternMatcherFixture()", file="DefaultRouteResolverFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.DefaultRoutePatternMatcherFixture()", span="11-11"];
m2_1 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.DefaultRoutePatternMatcherFixture()", file="DefaultRouteResolverFixture.cs", label="this.matcher = new DefaultRoutePatternMatcher()", span="13-13"];
m2_2 [cluster="Nancy.ViewEngines.Razor.RazorViewEngine.RazorViewEngine(Nancy.ViewEngines.Razor.IRazorConfiguration)", file="DefaultRouteResolverFixture.cs", label="Entry Nancy.ViewEngines.Razor.RazorViewEngine.RazorViewEngine(Nancy.ViewEngines.Razor.IRazorConfiguration)", span="34-34"];
m2_139 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_support_single_default_value_parameter_when_segment_contains_multiple_optional_parameters()", file="DefaultRouteResolverFixture.cs", label="((string)results.Parameters[''format'']).ShouldEqual(''cshtml'')", span="327-327"];
m2_23 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_return_match_result_with_context_of_current_request_when_paths_matched()", file="DefaultRouteResolverFixture.cs", label="var context = new NancyContext()", span="60-60"];
m2_34 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_return_negative_match_result_when_paths_does_not_match()", file="DefaultRouteResolverFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_return_negative_match_result_when_paths_does_not_match()", span="83-83"];
m2_150 [cluster="lambda expression", file="DefaultRouteResolverFixture.cs", label="view = this.GetViewInstance(renderContext.LocateView(layout, model), renderContext, referencingAssembly, model)", span="225-225"];
m2_151 [cluster="lambda expression", file="DefaultRouteResolverFixture.cs", label="view.ExecuteView(body, sectionContents)", span="226-226"];
m2_152 [cluster="lambda expression", file="DefaultRouteResolverFixture.cs", label="body = view.Body", span="228-228"];
m2_153 [cluster="lambda expression", file="DefaultRouteResolverFixture.cs", label="sectionContents = view.SectionContents", span="229-229"];
m2_102 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_capture_multiple_parameters_that_are_surrounded_by_characters()", file="DefaultRouteResolverFixture.cs", label="((string)results.Parameters[''format'']).ShouldEqual(''cshtml'')", span="242-242"];
m2_117 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_support_non_optional_parameters_after_optional_parameter()", file="DefaultRouteResolverFixture.cs", label="var results = this.matcher.Match(''/foo/andreas'', ''/foo/{bar?hiya}/{name}'', new[] { ''foo'', ''{bar?hiya}'', ''{name}'' }, null)", span="279-279"];
m2_118 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_support_non_optional_parameters_after_optional_parameter()", color=green, community=0, file="DefaultRouteResolverFixture.cs", label="((string)results.Parameters[''bar'']).ShouldEqual(''hiya'')", prediction=23, span="282-282"];
m2_119 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_support_non_optional_parameters_after_optional_parameter()", file="DefaultRouteResolverFixture.cs", label="((string)results.Parameters[''name'']).ShouldEqual(''andreas'')", span="283-283"];
m2_120 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_support_non_optional_parameters_after_optional_parameter()", file="DefaultRouteResolverFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_support_non_optional_parameters_after_optional_parameter()", span="276-276"];
m2_121 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_use_captured_value_for_optional_parameter_when_value_was_supplied_and_route_contains_additional_parameters()", file="DefaultRouteResolverFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_use_captured_value_for_optional_parameter_when_value_was_supplied_and_route_contains_additional_parameters()", span="287-287"];
m2_122 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_use_captured_value_for_optional_parameter_when_value_was_supplied_and_route_contains_additional_parameters()", file="DefaultRouteResolverFixture.cs", label="var results = this.matcher.Match(''/foo/bye/andreas'', ''/foo/{bar?hiya}/{name}'', new[] { ''foo'', ''{bar?hiya}'', ''{name}'' }, null)", span="290-290"];
m2_159 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_support_literals_before_optional_parameter_when_value_was_not_supplied()", file="DefaultRouteResolverFixture.cs", label="var results = this.matcher.Match(''/foo/bar'', ''/foo/bar{format?cshtml}'', new[] { ''foo'', ''bar{format?cshtml}'' }, null)", span="375-375"];
m2_164 [cluster="Nancy.ViewEngines.Razor.RazorViewEngine.GetViewInstance(Nancy.ViewEngines.ViewLocationResult, Nancy.ViewEngines.IRenderContext, System.Reflection.Assembly, dynamic)", file="DefaultRouteResolverFixture.cs", label="var view = this.GetOrCompileView(viewLocationResult, renderContext, referencingAssembly)", span="240-240"];
m2_165 [cluster="Nancy.ViewEngines.Razor.RazorViewEngine.GetViewInstance(Nancy.ViewEngines.ViewLocationResult, Nancy.ViewEngines.IRenderContext, System.Reflection.Assembly, dynamic)", file="DefaultRouteResolverFixture.cs", label="view.Html = new HtmlHelpers(this, renderContext)", span="241-241"];
m2_166 [cluster="Nancy.ViewEngines.Razor.RazorViewEngine.GetViewInstance(Nancy.ViewEngines.ViewLocationResult, Nancy.ViewEngines.IRenderContext, System.Reflection.Assembly, dynamic)", file="DefaultRouteResolverFixture.cs", label="view.Url = new UrlHelpers(this, renderContext)", span="242-242"];
m2_167 [cluster="Nancy.ViewEngines.Razor.RazorViewEngine.GetViewInstance(Nancy.ViewEngines.ViewLocationResult, Nancy.ViewEngines.IRenderContext, System.Reflection.Assembly, dynamic)", file="DefaultRouteResolverFixture.cs", label="view.Model = model", span="243-243"];
m2_168 [cluster="Nancy.ViewEngines.Razor.RazorViewEngine.GetViewInstance(Nancy.ViewEngines.ViewLocationResult, Nancy.ViewEngines.IRenderContext, System.Reflection.Assembly, dynamic)", file="DefaultRouteResolverFixture.cs", label="return view;", span="244-244"];
m2_169 [cluster="Nancy.ViewEngines.Razor.RazorViewEngine.GetViewInstance(Nancy.ViewEngines.ViewLocationResult, Nancy.ViewEngines.IRenderContext, System.Reflection.Assembly, dynamic)", file="DefaultRouteResolverFixture.cs", label="Exit Nancy.ViewEngines.Razor.RazorViewEngine.GetViewInstance(Nancy.ViewEngines.ViewLocationResult, Nancy.ViewEngines.IRenderContext, System.Reflection.Assembly, dynamic)", span="238-238"];
m2_4 [cluster="Nancy.ViewEngines.Razor.RazorViewEngine.RazorViewEngine(Nancy.ViewEngines.Razor.IRazorConfiguration)", color=green, community=0, file="DefaultRouteResolverFixture.cs", label="this.engine = this.GetRazorTemplateEngine()", prediction=32, span="37-37"];
m2_5 [cluster="Nancy.ViewEngines.Razor.RazorViewEngine.RazorViewEngine(Nancy.ViewEngines.Razor.IRazorConfiguration)", color=green, community=0, file="DefaultRouteResolverFixture.cs", label="this.codeDomProvider = new CSharpCodeProvider()", prediction=33, span="38-38"];
m2_6 [cluster="Nancy.ViewEngines.Razor.RazorViewEngine.RazorViewEngine(Nancy.ViewEngines.Razor.IRazorConfiguration)", file="DefaultRouteResolverFixture.cs", label="Exit Nancy.ViewEngines.Razor.RazorViewEngine.RazorViewEngine(Nancy.ViewEngines.Razor.IRazorConfiguration)", span="34-34"];
m2_7 [cluster="Nancy.ViewEngines.Razor.RazorViewEngine.GetRazorTemplateEngine()", file="DefaultRouteResolverFixture.cs", label="Entry Nancy.ViewEngines.Razor.RazorViewEngine.GetRazorTemplateEngine()", span="41-41"];
m2_26 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_return_match_result_with_context_of_current_request_when_paths_matched()", file="DefaultRouteResolverFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_return_match_result_with_context_of_current_request_when_paths_matched()", span="57-57"];
m2_18 [cluster="Nancy.ViewEngines.Razor.RazorViewEngine.GetRazorTemplateEngine()", color=green, community=0, file="DefaultRouteResolverFixture.cs", label=namespaces, prediction=34, span="63-63"];
m2_20 [cluster="Nancy.ViewEngines.Razor.RazorViewEngine.GetRazorTemplateEngine()", color=green, community=0, file="DefaultRouteResolverFixture.cs", label="return new RazorTemplateEngine(host);", prediction=35, span="70-70"];
m2_21 [cluster="Nancy.ViewEngines.Razor.RazorViewEngine.GetRazorTemplateEngine()", file="DefaultRouteResolverFixture.cs", label="Exit Nancy.ViewEngines.Razor.RazorViewEngine.GetRazorTemplateEngine()", span="41-41"];
m2_112 [cluster="Nancy.ViewEngines.Razor.RazorViewEngine.GetAssemblyPath(System.Type)", color=green, community=0, file="DefaultRouteResolverFixture.cs", label="return GetAssemblyPath(type.Assembly);", prediction=36, span="156-156"];
m2_113 [cluster="Nancy.ViewEngines.Razor.RazorViewEngine.GetAssemblyPath(System.Type)", file="DefaultRouteResolverFixture.cs", label="Exit Nancy.ViewEngines.Razor.RazorViewEngine.GetAssemblyPath(System.Type)", span="155-155"];
m2_114 [cluster="Nancy.ViewEngines.Razor.RazorViewEngine.GetAssemblyPath(System.Reflection.Assembly)", file="DefaultRouteResolverFixture.cs", label="return new Uri(assembly.EscapedCodeBase).LocalPath;", span="160-160"];
m2_115 [cluster="Nancy.ViewEngines.Razor.RazorViewEngine.GetAssemblyPath(System.Reflection.Assembly)", file="DefaultRouteResolverFixture.cs", label="Exit Nancy.ViewEngines.Razor.RazorViewEngine.GetAssemblyPath(System.Reflection.Assembly)", span="159-159"];
m2_27 [cluster="Nancy.NancyContext.NancyContext()", file="DefaultRouteResolverFixture.cs", label="Entry Nancy.NancyContext.NancyContext()", span="25-25"];
m2_123 [cluster="Nancy.ViewEngines.IViewCache.GetOrAdd<TCompiledView>(Nancy.ViewEngines.ViewLocationResult, System.Func<Nancy.ViewEngines.ViewLocationResult, TCompiledView>)", file="DefaultRouteResolverFixture.cs", label="Entry Nancy.ViewEngines.IViewCache.GetOrAdd<TCompiledView>(Nancy.ViewEngines.ViewLocationResult, System.Func<Nancy.ViewEngines.ViewLocationResult, TCompiledView>)", span="16-16"];
m2_124 [cluster="System.Func<TResult>.Invoke()", file="DefaultRouteResolverFixture.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m2_125 [cluster="lambda expression", file="DefaultRouteResolverFixture.cs", label="Entry lambda expression", span="167-167"];
m2_80 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_allow_underscore_in_parameter_key()", file="DefaultRouteResolverFixture.cs", label="string parameter = ''lol''", span="188-188"];
m2_63 [cluster="System.IO.Path.GetTempPath()", file="DefaultRouteResolverFixture.cs", label="Entry System.IO.Path.GetTempPath()", span="0-0"];
m2_66 [cluster="string.Format(string, object)", file="DefaultRouteResolverFixture.cs", label="Entry string.Format(string, object)", span="0-0"];
m2_141 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_support_default_values_for_all_parametes_when_segment_contains_multiple_parameters()", file="DefaultRouteResolverFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_support_default_values_for_all_parametes_when_segment_contains_multiple_parameters()", span="331-331"];
m2_85 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_capture_parameters_when_the_segment_contains_more_characters_after_parameter_declaration()", file="DefaultRouteResolverFixture.cs", label="string parameter = ''filename''", span="201-201"];
m2_88 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_capture_parameters_when_the_segment_contains_more_characters_after_parameter_declaration()", file="DefaultRouteResolverFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_capture_parameters_when_the_segment_contains_more_characters_after_parameter_declaration()", span="198-198"];
m2_96 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_capture_multiple_parameters()", file="DefaultRouteResolverFixture.cs", label="((string)results.Parameters[''name'']).ShouldEqual(''filename'')", span="230-230"];
m2_110 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_support_default_values_for_optional_parameters()", color=green, community=0, file="DefaultRouteResolverFixture.cs", label="((string)results.Parameters[''bar'']).ShouldEqual(''hiya'')", prediction=37, span="262-262"];
m2_109 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_support_default_values_for_optional_parameters()", file="DefaultRouteResolverFixture.cs", label="var results = this.matcher.Match(''/foo'', ''/foo/{bar?hiya}'', new[] { ''foo'', ''{bar?hiya}'' }, null)", span="259-259"];
m2_111 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_support_default_values_for_optional_parameters()", file="DefaultRouteResolverFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_support_default_values_for_optional_parameters()", span="256-256"];
m2_103 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_capture_multiple_parameters_that_are_surrounded_by_characters()", file="DefaultRouteResolverFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_capture_multiple_parameters_that_are_surrounded_by_characters()", span="235-235"];
m2_94 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_capture_multiple_parameters()", file="DefaultRouteResolverFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_capture_multiple_parameters()", span="224-224"];
m2_126 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_support_combination_of_optional_and_required_parameters_in_same_segment()", color=green, community=0, file="DefaultRouteResolverFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_support_combination_of_optional_and_required_parameters_in_same_segment()", prediction=23, span="298-298"];
m2_127 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_support_combination_of_optional_and_required_parameters_in_same_segment()", file="DefaultRouteResolverFixture.cs", label="var results = this.matcher.Match(''/foo/filename.cshtml'', ''/foo/{name?}.{format}'', new[] { ''foo'', ''{name?}.{format}'' }, null)", span="301-301"];
m2_143 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_support_default_values_for_all_parametes_when_segment_contains_multiple_parameters()", file="DefaultRouteResolverFixture.cs", label="((string)results.Parameters[''name'']).ShouldEqual(''filename'')", span="337-337"];
m2_87 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_capture_parameters_when_the_segment_contains_more_characters_after_parameter_declaration()", file="DefaultRouteResolverFixture.cs", label="((string)results.Parameters[''name'']).ShouldEqual(parameter)", span="207-207"];
m2_86 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_capture_parameters_when_the_segment_contains_more_characters_after_parameter_declaration()", file="DefaultRouteResolverFixture.cs", label="var results = this.matcher.Match(''/foo/'' + parameter + ''.cshtml'', ''/foo/{name}.cshtml'', new[] { ''foo'', ''{name}.cshtml'' }, null)", span="204-204"];
m2_95 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_capture_multiple_parameters()", file="DefaultRouteResolverFixture.cs", label="var results = this.matcher.Match(''/foo/filename.cshtml'', ''/foo/{name}.{format}'', new[] { ''foo'', ''{name}.{format}'' }, null)", span="227-227"];
m2_97 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_capture_multiple_parameters()", file="DefaultRouteResolverFixture.cs", label="((string)results.Parameters[''format'']).ShouldEqual(''cshtml'')", span="231-231"];
m2_100 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_capture_multiple_parameters_that_are_surrounded_by_characters()", file="DefaultRouteResolverFixture.cs", label="var results = this.matcher.Match(''/foo/barfilename.cshtmlbaz'', ''/foo/bar{name}.{format}baz'', new[] { ''foo'', ''bar{name}.{format}baz'' }, null)", span="238-238"];
m2_142 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_support_default_values_for_all_parametes_when_segment_contains_multiple_parameters()", file="DefaultRouteResolverFixture.cs", label="var results = this.matcher.Match(''/foo/filename.cshtml'', ''/foo/{name?stuff}.{format?}'', new[] { ''foo'', ''{name?stuff}.{format?}'' }, null)", span="334-334"];
m2_144 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_support_default_values_for_all_parametes_when_segment_contains_multiple_parameters()", file="DefaultRouteResolverFixture.cs", label="((string)results.Parameters[''format'']).ShouldEqual(''cshtml'')", span="338-338"];
m2_145 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_support_default_values_for_all_parametes_when_segment_contains_multiple_parameters()", file="DefaultRouteResolverFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_support_default_values_for_all_parametes_when_segment_contains_multiple_parameters()", span="331-331"];
m2_146 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_support_literals_after_optional_parameter_when_value_was_supplied()", file="DefaultRouteResolverFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_support_literals_after_optional_parameter_when_value_was_supplied()", span="342-342"];
m2_147 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_support_literals_after_optional_parameter_when_value_was_supplied()", file="DefaultRouteResolverFixture.cs", label="var results = this.matcher.Match(''/foo/cshtmlbaz'', ''/foo/{format?}baz'', new[] { ''foo'', ''{format?}baz'' }, null)", span="345-345"];
m2_148 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_support_literals_after_optional_parameter_when_value_was_supplied()", file="DefaultRouteResolverFixture.cs", label="((string)results.Parameters[''format'']).ShouldEqual(''cshtml'')", span="348-348"];
m2_149 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_support_literals_after_optional_parameter_when_value_was_supplied()", file="DefaultRouteResolverFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_support_literals_after_optional_parameter_when_value_was_supplied()", span="342-342"];
m2_154 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_support_literals_before_optional_parameter_when_value_was_supplied()", file="DefaultRouteResolverFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_support_literals_before_optional_parameter_when_value_was_supplied()", span="362-362"];
m2_108 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_support_default_values_for_optional_parameters()", file="DefaultRouteResolverFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_support_default_values_for_optional_parameters()", span="256-256"];
m2_99 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_capture_multiple_parameters_that_are_surrounded_by_characters()", file="DefaultRouteResolverFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_capture_multiple_parameters_that_are_surrounded_by_characters()", span="235-235"];
m2_101 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_capture_multiple_parameters_that_are_surrounded_by_characters()", file="DefaultRouteResolverFixture.cs", label="((string)results.Parameters[''name'']).ShouldEqual(''filename'')", span="241-241"];
m2_155 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_support_literals_before_optional_parameter_when_value_was_supplied()", file="DefaultRouteResolverFixture.cs", label="var results = this.matcher.Match(''/foo/barcshtml'', ''/foo/bar{format}'', new[] { ''foo'', ''bar{format?cshtml}'' }, null)", span="365-365"];
m2_156 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_support_literals_before_optional_parameter_when_value_was_supplied()", file="DefaultRouteResolverFixture.cs", label="((string)results.Parameters[''format'']).ShouldEqual(''cshtml'')", span="368-368"];
m2_157 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_support_literals_before_optional_parameter_when_value_was_supplied()", file="DefaultRouteResolverFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_support_literals_before_optional_parameter_when_value_was_supplied()", span="362-362"];
m2_138 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_support_single_default_value_parameter_when_segment_contains_multiple_optional_parameters()", file="DefaultRouteResolverFixture.cs", label="((string)results.Parameters[''name'']).ShouldEqual(''filename'')", span="326-326"];
m2_162 [cluster="System.IO.StreamWriter.Write(string)", file="DefaultRouteResolverFixture.cs", label="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture", span=""];
m2_98 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_capture_multiple_parameters()", file="DefaultRouteResolverFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_capture_multiple_parameters()", span="224-224"];
m2_136 [cluster="Nancy.ViewEngines.Razor.RazorViewEngine.RenderView(Nancy.ViewEngines.ViewLocationResult, dynamic, Nancy.ViewEngines.IRenderContext)", file="DefaultRouteResolverFixture.cs", label="return new HtmlResponse(contents: stream =>\r\n            {\r\n                var writer =\r\n                    new StreamWriter(stream);\r\n\r\n                NancyRazorViewBase view = this.GetViewInstance(viewLocationResult, renderContext, referencingAssembly, model);\r\n                view.ExecuteView(null, null);\r\n                var body = view.Body;\r\n                var sectionContents = view.SectionContents;\r\n                var root = !view.HasLayout;\r\n                var layout = view.Layout;\r\n                \r\n                while (!root)\r\n                {\r\n                    view = this.GetViewInstance(renderContext.LocateView(layout, model), renderContext, referencingAssembly, model);\r\n                    view.ExecuteView(body, sectionContents);\r\n\r\n                    body = view.Body;\r\n                    sectionContents = view.SectionContents;\r\n                    root = !view.HasLayout;\r\n                }\r\n\r\n                writer.Write(body);\r\n                writer.Flush();\r\n            });", span="211-235"];
m2_137 [cluster="Nancy.ViewEngines.Razor.RazorViewEngine.RenderView(Nancy.ViewEngines.ViewLocationResult, dynamic, Nancy.ViewEngines.IRenderContext)", file="DefaultRouteResolverFixture.cs", label="Exit Nancy.ViewEngines.Razor.RazorViewEngine.RenderView(Nancy.ViewEngines.ViewLocationResult, dynamic, Nancy.ViewEngines.IRenderContext)", span="197-197"];
m2_140 [cluster="Nancy.Responses.HtmlResponse.HtmlResponse(Nancy.HttpStatusCode, System.Action<System.IO.Stream>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IEnumerable<Nancy.Cookies.INancyCookie>)", file="DefaultRouteResolverFixture.cs", label="Entry Nancy.Responses.HtmlResponse.HtmlResponse(Nancy.HttpStatusCode, System.Action<System.IO.Stream>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IEnumerable<Nancy.Cookies.INancyCookie>)", span="19-19"];
m2_3 [cluster="Nancy.Routing.DefaultRoutePatternMatcher.DefaultRoutePatternMatcher()", file="DefaultRouteResolverFixture.cs", label="Entry Nancy.Routing.DefaultRoutePatternMatcher.DefaultRoutePatternMatcher()", span="13-13"];
m2_83 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_allow_underscore_in_parameter_key()", file="DefaultRouteResolverFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_allow_underscore_in_parameter_key()", span="185-185"];
m2_130 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_support_combination_of_optional_and_required_parameters_in_same_segment()", file="DefaultRouteResolverFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_support_combination_of_optional_and_required_parameters_in_same_segment()", span="298-298"];
m2_131 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_support_multiple_optional_parameters_in_same_segment()", color=green, community=0, file="DefaultRouteResolverFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_support_multiple_optional_parameters_in_same_segment()", prediction=39, span="309-309"];
m2_132 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_support_multiple_optional_parameters_in_same_segment()", color=green, community=0, file="DefaultRouteResolverFixture.cs", label="var results = this.matcher.Match(''/foo/filename.cshtml'', ''/foo/{name?}.{format?}'', new[] { ''foo'', ''{name?}.{format?}'' }, null)", prediction=40, span="312-312"];
m2_133 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_support_multiple_optional_parameters_in_same_segment()", file="DefaultRouteResolverFixture.cs", label="((string)results.Parameters[''name'']).ShouldEqual(''filename'')", span="315-315"];
m2_134 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_support_multiple_optional_parameters_in_same_segment()", color=green, community=0, file="DefaultRouteResolverFixture.cs", label="((string)results.Parameters[''format'']).ShouldEqual(''cshtml'')", prediction=40, span="316-316"];
m2_135 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_support_multiple_optional_parameters_in_same_segment()", file="DefaultRouteResolverFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_support_multiple_optional_parameters_in_same_segment()", span="309-309"];
m2_70 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_allow_all_of_the_unreserved_rfc_1738_characters_in_the_capture_segments()", file="DefaultRouteResolverFixture.cs", label="string parameter = ''0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_.!*'()''", span="162-162"];
m2_160 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_support_literals_before_optional_parameter_when_value_was_not_supplied()", file="DefaultRouteResolverFixture.cs", label="((string)results.Parameters[''format'']).ShouldEqual(''cshtml'')", span="378-378"];
m2_24 [cluster="GeneratedClassContext.cstr", file="DefaultRouteResolverFixture.cs", label="Entry GeneratedClassContext.cstr", span=""];
m2_25 [cluster="Unk.Add", file="DefaultRouteResolverFixture.cs", label="Entry Unk.Add", span=""];
m2_69 [cluster="Nancy.ViewEngines.Razor.RazorViewEngine.GetAssemblyPath(System.Type)", file="DefaultRouteResolverFixture.cs", label="Entry Nancy.ViewEngines.Razor.RazorViewEngine.GetAssemblyPath(System.Type)", span="155-155"];
m2_71 [cluster="Nancy.ViewEngines.Razor.RazorViewEngine.GetAssemblyPath(System.Reflection.Assembly)", file="DefaultRouteResolverFixture.cs", label="Entry Nancy.ViewEngines.Razor.RazorViewEngine.GetAssemblyPath(System.Reflection.Assembly)", span="159-159"];
m2_73 [cluster="Unk.Select", file="DefaultRouteResolverFixture.cs", label="Entry Unk.Select", span=""];
m2_82 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_allow_underscore_in_parameter_key()", file="DefaultRouteResolverFixture.cs", label="((string)results.Parameters[''b_ar'']).ShouldEqual(parameter)", span="194-194"];
m2_158 [cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", file="DefaultRouteResolverFixture.cs", label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0"];
m2_161 [cluster="Nancy.ViewEngines.IRenderContext.LocateView(string, dynamic)", file="DefaultRouteResolverFixture.cs", label="Entry Nancy.ViewEngines.IRenderContext.LocateView(string, dynamic)", span="34-34"];
m2_171 [cluster="Nancy.ViewEngines.Razor.UrlHelpers.UrlHelpers(Nancy.ViewEngines.Razor.RazorViewEngine, Nancy.ViewEngines.IRenderContext)", file="DefaultRouteResolverFixture.cs", label="Entry Nancy.ViewEngines.Razor.UrlHelpers.UrlHelpers(Nancy.ViewEngines.Razor.RazorViewEngine, Nancy.ViewEngines.IRenderContext)", span="7-7"];
m2_79 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="DefaultRouteResolverFixture.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m2_128 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_support_combination_of_optional_and_required_parameters_in_same_segment()", file="DefaultRouteResolverFixture.cs", label="((string)results.Parameters[''name'']).ShouldEqual(''filename'')", span="304-304"];
m2_129 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_support_combination_of_optional_and_required_parameters_in_same_segment()", file="DefaultRouteResolverFixture.cs", label="((string)results.Parameters[''format'']).ShouldEqual(''cshtml'')", span="305-305"];
m2_84 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_capture_parameters_when_the_segment_contains_more_characters_after_parameter_declaration()", file="DefaultRouteResolverFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_capture_parameters_when_the_segment_contains_more_characters_after_parameter_declaration()", span="198-198"];
m2_9 [cluster="Nancy.ViewEngines.Razor.RazorViewEngine.GetRazorTemplateEngine()", color=green, community=0, file="DefaultRouteResolverFixture.cs", label="var host = \r\n                new RazorEngineHost(new CSharpRazorCodeLanguage())\r\n                {\r\n                    DefaultBaseClass = typeof(NancyRazorViewBase).FullName,\r\n                    DefaultNamespace = ''RazorOutput'',\r\n                    DefaultClassName = ''RazorView''\r\n                }", prediction=42, span="43-49"];
m2_10 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_ignore_trailing_slash_on_route_path()", file="DefaultRouteResolverFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_ignore_trailing_slash_on_route_path()", span="27-27"];
m2_17 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_ignore_trailing_slash_on_request_uri()", file="DefaultRouteResolverFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_ignore_trailing_slash_on_request_uri()", span="37-37"];
m2_11 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_ignore_trailing_slash_on_route_path()", file="DefaultRouteResolverFixture.cs", label="var results = this.matcher.Match(''/foo/bar'', ''/foo/bar/'', new[] { ''foo'', ''bar'' }, null)", span="30-30"];
m2_12 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_ignore_trailing_slash_on_route_path()", file="DefaultRouteResolverFixture.cs", label="results.IsMatch.ShouldBeTrue()", span="33-33"];
m2_13 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_ignore_trailing_slash_on_route_path()", file="DefaultRouteResolverFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_ignore_trailing_slash_on_route_path()", span="27-27"];
m2_14 [cluster="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_ignore_trailing_slash_on_request_uri()", file="DefaultRouteResolverFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture.Should_ignore_trailing_slash_on_request_uri()", span="37-37"];
m2_163 [cluster="System.IO.StreamWriter.Flush()", file="DefaultRouteResolverFixture.cs", label="Entry System.IO.StreamWriter.Flush()", span="0-0"];
m2_172 [file="DefaultRouteResolverFixture.cs", label="Nancy.ViewEngines.Razor.RazorViewEngine", span=""];
m2_177 [file="DefaultRouteResolverFixture.cs", label=type, span=""];
m2_175 [file="DefaultRouteResolverFixture.cs", label=error, span=""];
m2_178 [file="DefaultRouteResolverFixture.cs", label="System.Reflection.Assembly", span=""];
m2_173 [file="DefaultRouteResolverFixture.cs", label=err, span=""];
m2_179 [file="DefaultRouteResolverFixture.cs", label="Nancy.ViewEngines.ViewLocationResult", span=""];
m2_180 [file="DefaultRouteResolverFixture.cs", label=dynamic, span=""];
m2_181 [file="DefaultRouteResolverFixture.cs", label="Nancy.ViewEngines.IRenderContext", span=""];
m2_182 [file="DefaultRouteResolverFixture.cs", label=referencingAssembly, span=""];
m2_176 [file="DefaultRouteResolverFixture.cs", label=error, span=""];
m2_174 [file="DefaultRouteResolverFixture.cs", label=error, span=""];
m3_13 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetNodeForSegment(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="TrieNodeFactory.cs", label="Exit Nancy.Routing.Trie.TrieNodeFactory.GetNodeForSegment(Nancy.Routing.Trie.Nodes.TrieNode, string)", span="16-16"];
m3_14 [cluster="Nancy.Routing.Trie.Nodes.RootNode.RootNode(Nancy.Routing.Trie.ITrieNodeFactory)", file="TrieNodeFactory.cs", label="Entry Nancy.Routing.Trie.Nodes.RootNode.RootNode(Nancy.Routing.Trie.ITrieNodeFactory)", span="21-21"];
m3_16 [cluster="string.StartsWith(string)", file="TrieNodeFactory.cs", label="Entry string.StartsWith(string)", span="0-0"];
m3_18 [cluster="Nancy.Routing.Trie.Nodes.RegExNode.RegExNode(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory)", file="TrieNodeFactory.cs", label="Entry Nancy.Routing.Trie.Nodes.RegExNode.RegExNode(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory)", span="21-21"];
m3_15 [cluster="string.ToCharArray()", file="TrieNodeFactory.cs", label="Entry string.ToCharArray()", span="0-0"];
m3_23 [cluster="Nancy.Routing.Trie.Nodes.GreedyRegExCaptureNode.GreedyRegExCaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory)", file="TrieNodeFactory.cs", label="Entry Nancy.Routing.Trie.Nodes.GreedyRegExCaptureNode.GreedyRegExCaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory)", span="27-27"];
m3_17 [cluster="string.EndsWith(string)", file="TrieNodeFactory.cs", label="Entry string.EndsWith(string)", span="0-0"];
m3_21 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.Match(string)", file="TrieNodeFactory.cs", label="match.CapturedParameters.Add(parameterNames[i - 1], regexMatch.Groups[i].Value)", span="68-68"];
m3_19 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="TrieNodeFactory.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m3_20 [cluster="System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", file="TrieNodeFactory.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", span="0-0"];
m3_22 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetCaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="TrieNodeFactory.cs", label="Entry Nancy.Routing.Trie.TrieNodeFactory.GetCaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string)", span="48-48"];
m3_24 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.Match(string)", file="TrieNodeFactory.cs", label="Exit Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.Match(string)", span="57-57"];
m3_3 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetNodeForSegment(Nancy.Routing.Trie.Nodes.TrieNode, string)", color=green, community=0, file="TrieNodeFactory.cs", label="var chars = segment.ToCharArray()", prediction=43, span="23-23"];
m3_30 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetCaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="TrieNodeFactory.cs", label="segment.Contains('':'')", span="50-50"];
m3_31 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetCaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="TrieNodeFactory.cs", label="return new CaptureNodeWithConstraint(parent, segment, this);", span="52-52"];
m3_32 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetCaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="TrieNodeFactory.cs", label="segment.EndsWith(''?}'')", span="55-55"];
m3_33 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetCaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="TrieNodeFactory.cs", label="return new OptionalCaptureNode(parent, segment, this);", span="57-57"];
m3_37 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetCaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="TrieNodeFactory.cs", label="return new CaptureNodeWithDefaultValue(parent, segment, this);", span="67-67"];
m3_34 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetCaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="TrieNodeFactory.cs", label="segment.EndsWith(''*}'')", span="60-60"];
m3_36 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetCaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="TrieNodeFactory.cs", label="segment.Contains(''?'')", span="65-65"];
m3_35 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetCaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="TrieNodeFactory.cs", label="return new GreedyCaptureNode(parent, segment, this);", span="62-62"];
m3_38 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetCaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="TrieNodeFactory.cs", label="return new CaptureNode(parent, segment, this);", span="70-70"];
m3_28 [cluster="lambda expression", color=green, community=0, file="TrieNodeFactory.cs", label="c == '{' || c == '}'", prediction=44, span="30-30"];
m3_26 [cluster="System.Text.RegularExpressions.Regex.IsMatch(string)", file="TrieNodeFactory.cs", label="Entry System.Text.RegularExpressions.Regex.IsMatch(string)", span="0-0"];
m3_40 [cluster="string.EndsWith(string)", file="TrieNodeFactory.cs", label="Entry string.EndsWith(string)", span="0-0"];
m3_39 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetCaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="TrieNodeFactory.cs", label="Exit Nancy.Routing.Trie.TrieNodeFactory.GetCaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string)", span="48-48"];
m3_9 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetNodeForSegment(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="TrieNodeFactory.cs", label="return new GreedyRegExCaptureNode(parent, segment, this);", span="37-37"];
m3_8 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetNodeForSegment(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="TrieNodeFactory.cs", label="segment.StartsWith(''^('') && (segment.EndsWith('')'') || segment.EndsWith('')$''))", span="35-35"];
m3_0 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetNodeForSegment(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="TrieNodeFactory.cs", label="Entry Nancy.Routing.Trie.TrieNodeFactory.GetNodeForSegment(Nancy.Routing.Trie.Nodes.TrieNode, string)", span="16-16"];
m3_1 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetNodeForSegment(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="TrieNodeFactory.cs", label="parent == null", span="18-18"];
m3_2 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetNodeForSegment(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="TrieNodeFactory.cs", label="return new RootNode(this);", span="20-20"];
m3_27 [cluster="lambda expression", file="TrieNodeFactory.cs", label="Entry lambda expression", span="30-30"];
m3_4 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetNodeForSegment(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="TrieNodeFactory.cs", label="segment.StartsWith(''('') && segment.EndsWith('')'')", span="25-25"];
m3_5 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetNodeForSegment(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="TrieNodeFactory.cs", label="return new RegExNode(parent, segment, this);", span="27-27"];
m3_6 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetNodeForSegment(Nancy.Routing.Trie.Nodes.TrieNode, string)", color=green, community=0, file="TrieNodeFactory.cs", label="chars.First() == '{' && chars.Last() == '}' && chars.Count(c => c == '{' || c == '}') == 2", prediction=43, span="30-30"];
m3_7 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetNodeForSegment(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="TrieNodeFactory.cs", label="return this.GetCaptureNode(parent, segment);", span="32-32"];
m3_45 [cluster="Nancy.Routing.Trie.Nodes.CaptureNode.CaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory)", file="TrieNodeFactory.cs", label="Entry Nancy.Routing.Trie.Nodes.CaptureNode.CaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory)", span="17-17"];
m3_42 [cluster="System.Collections.Generic.List<T>.Add(T)", file="TrieNodeFactory.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m3_10 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetNodeForSegment(Nancy.Routing.Trie.Nodes.TrieNode, string)", color=green, community=0, file="TrieNodeFactory.cs", label="CaptureNodeWithMultipleParameters.IsMatch(segment)", prediction=46, span="40-40"];
m3_11 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetNodeForSegment(Nancy.Routing.Trie.Nodes.TrieNode, string)", color=green, community=0, file="TrieNodeFactory.cs", label="return new CaptureNodeWithMultipleParameters(parent, segment, this);", prediction=46, span="42-42"];
m3_12 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetNodeForSegment(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="TrieNodeFactory.cs", label="return new LiteralNode(parent, segment, this);", span="45-45"];
m3_29 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="TrieNodeFactory.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m3_41 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithConstraint.CaptureNodeWithConstraint(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory)", file="TrieNodeFactory.cs", label="Entry Nancy.Routing.Trie.Nodes.CaptureNodeWithConstraint.CaptureNodeWithConstraint(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory)", span="23-23"];
m3_43 [cluster="Nancy.Routing.Trie.Nodes.GreedyCaptureNode.GreedyCaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory)", file="TrieNodeFactory.cs", label="Entry Nancy.Routing.Trie.Nodes.GreedyCaptureNode.GreedyCaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory)", span="25-25"];
m3_25 [cluster="System.Text.RegularExpressions.Regex.Regex(string)", file="TrieNodeFactory.cs", label="Entry System.Text.RegularExpressions.Regex.Regex(string)", span="0-0"];
m3_44 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithDefaultValue.CaptureNodeWithDefaultValue(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory)", file="TrieNodeFactory.cs", label="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters", span=""];
m3_46 [file="TrieNodeFactory.cs", label="Nancy.Routing.Trie.TrieNodeFactory", span=""];
m0_13 -> m0_16  [color=green, key=1, label=string, style=dashed];
m0_14 -> m0_23  [color=green, key=1, label=match, style=dashed];
m0_17 -> m0_23  [color=green, key=1, label=match, style=dashed];
m0_17 -> m0_21  [color=green, key=1, label=match, style=dashed];
m0_18 -> m0_20  [color=green, key=1, label=regexMatch, style=dashed];
m0_18 -> m0_21  [color=green, key=1, label=regexMatch, style=dashed];
m0_19 -> m0_21  [color=green, key=1, label=i, style=dashed];
m0_19 -> m0_22  [color=green, key=1, label=i, style=dashed];
m0_22 -> m0_22  [color=green, key=1, label=i, style=dashed];
m0_30 -> m0_32  [color=green, key=1, label=matches, style=dashed];
m0_32 -> m0_34  [color=green, key=1, label=match, style=dashed];
m0_5 -> m0_10  [color=green, key=1, label="lambda expression", style=dashed];
m0_44 -> m0_1  [color=green, key=1, label="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters", style=dashed];
m0_44 -> m0_21  [color=green, key=1, label="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters", style=dashed];
m0_44 -> m0_34  [color=green, key=1, label="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters", style=dashed];
m2_35 -> m2_43  [color=darkseagreen4, key=1, label="System.Reflection.Assembly", style=dashed];
m2_35 -> m2_46  [color=darkseagreen4, key=1, label="System.CodeDom.Compiler.CodeDomProvider", style=dashed];
m2_37 -> m2_41  [color=green, key=1, label=assemblies, style=dashed];
m2_39 -> m2_41  [color=darkseagreen4, key=1, label=assemblyNames, style=dashed];
m2_48 -> m2_88  [color=green, key=1, label="lambda expression", style=dashed];
m2_48 -> m2_92  [color=green, key=1, label="lambda expression", style=dashed];
m2_48 -> m2_96  [color=green, key=1, label=err, style=dashed];
m2_46 -> m2_48  [color=green, key=1, label=results, style=dashed];
m2_59 -> m2_107  [color=darkseagreen4, key=1, label=error, style=dashed];
m2_90 -> m2_92  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m2_64 -> m2_66  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m2_23 -> m2_25  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_150 -> m2_154  [color=darkseagreen4, key=1, label=view, style=dashed];
m2_117 -> m2_126  [color=green, key=1, label="System.Reflection.Assembly", style=dashed];
m2_118 -> m2_125  [color=green, key=1, label="lambda expression", style=dashed];
m2_119 -> m2_121  [color=darkseagreen4, key=1, label=view, style=dashed];
m2_122 -> m2_124  [color=darkseagreen4, key=1, label=results, style=dashed];
m2_164 -> m2_168  [color=darkseagreen4, key=1, label=view, style=dashed];
m2_80 -> m2_82  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m2_85 -> m2_87  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m2_127 -> m2_129  [color=darkseagreen4, key=1, label=results, style=dashed];
m2_143 -> m2_145  [color=darkseagreen4, key=1, label=view, style=dashed];
m2_143 -> m2_146  [color=darkseagreen4, key=1, label=view, style=dashed];
m2_143 -> m2_148  [color=darkseagreen4, key=1, label=view, style=dashed];
m2_95 -> m2_97  [color=darkseagreen4, key=1, label=results, style=dashed];
m2_142 -> m2_156  [color=darkseagreen4, key=1, label=writer, style=dashed];
m2_142 -> m2_144  [color=darkseagreen4, key=1, label=results, style=dashed];
m2_145 -> m2_151  [color=darkseagreen4, key=1, label=body, style=dashed];
m2_146 -> m2_151  [color=darkseagreen4, key=1, label=sectionContents, style=dashed];
m2_147 -> m2_149  [color=darkseagreen4, key=1, label=root, style=dashed];
m2_162 -> m2_24  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture", style=dashed];
m2_162 -> m2_71  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture", style=dashed];
m2_162 -> m2_76  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture", style=dashed];
m2_162 -> m2_91  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture", style=dashed];
m2_162 -> m2_105  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture", style=dashed];
m2_162 -> m2_113  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture", style=dashed];
m2_162 -> m2_137  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture", style=dashed];
m2_162 -> m2_151  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRoutePatternMatcherFixture", style=dashed];
m2_137 -> m2_139  [color=darkseagreen4, key=1, label=results, style=dashed];
m2_130 -> m2_133  [color=darkseagreen4, key=1, label=dynamic, style=dashed];
m2_130 -> m2_143  [color=darkseagreen4, key=1, label="Nancy.ViewEngines.ViewLocationResult", style=dashed];
m2_131 -> m2_143  [color=green, key=1, label=referencingAssembly, style=dashed];
m2_132 -> m2_134  [color=darkseagreen4, key=1, label=results, style=dashed];
m2_133 -> m2_135  [color=darkseagreen4, key=1, label=underlyingSystemType, style=dashed];
m2_135 -> m2_143  [color=darkseagreen4, key=1, label=referencingAssembly, style=dashed];
m2_10 -> m2_20  [color=green, key=1, label=host, style=dashed];
m2_10 -> m2_10  [color=darkseagreen4, key=1, label=host, style=dashed];
m2_10 -> m2_12  [color=darkseagreen4, key=1, label=host, style=dashed];
m2_10 -> m2_13  [color=darkseagreen4, key=1, label=host, style=dashed];
m2_10 -> m2_14  [color=darkseagreen4, key=1, label=host, style=dashed];
m2_172 -> m2_38  [color=green, key=1, label="Nancy.ViewEngines.Razor.RazorViewEngine", style=dashed];
m2_172 -> m2_118  [color=green, key=1, label="Nancy.ViewEngines.Razor.RazorViewEngine", style=dashed];
m2_172 -> m2_126  [color=green, key=1, label="Nancy.ViewEngines.Razor.RazorViewEngine", style=dashed];
m2_172 -> m2_3  [color=darkseagreen4, key=1, label="Nancy.ViewEngines.Razor.RazorViewEngine", style=dashed];
m2_172 -> m2_29  [color=darkseagreen4, key=1, label="Nancy.ViewEngines.Razor.RazorViewEngine", style=dashed];
m2_172 -> m2_39  [color=darkseagreen4, key=1, label="Nancy.ViewEngines.Razor.RazorViewEngine", style=dashed];
m2_172 -> m2_41  [color=darkseagreen4, key=1, label="Nancy.ViewEngines.Razor.RazorViewEngine", style=dashed];
m2_172 -> m2_42  [color=darkseagreen4, key=1, label="Nancy.ViewEngines.Razor.RazorViewEngine", style=dashed];
m2_172 -> m2_143  [color=darkseagreen4, key=1, label="Nancy.ViewEngines.Razor.RazorViewEngine", style=dashed];
m2_177 -> m2_110  [color=green, key=1, label=type, style=dashed];
m2_175 -> m2_104  [color=green, key=1, label=error, style=dashed];
m2_178 -> m2_126  [color=green, key=1, label="System.Reflection.Assembly", style=dashed];
m2_173 -> m2_96  [color=darkseagreen4, key=1, label=err, style=dashed];
m2_179 -> m2_143  [color=darkseagreen4, key=1, label="Nancy.ViewEngines.ViewLocationResult", style=dashed];
m2_180 -> m2_143  [color=darkseagreen4, key=1, label=dynamic, style=dashed];
m2_181 -> m2_143  [color=darkseagreen4, key=1, label="Nancy.ViewEngines.IRenderContext", style=dashed];
m2_182 -> m2_143  [color=darkseagreen4, key=1, label=referencingAssembly, style=dashed];
m2_176 -> m2_107  [color=darkseagreen4, key=1, label=error, style=dashed];
m3_13 -> m3_16  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_13 -> m3_18  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_14 -> m3_23  [color=darkseagreen4, key=1, label=match, style=dashed];
m3_18 -> m3_20  [color=darkseagreen4, key=1, label=regexMatch, style=dashed];
m3_18 -> m3_21  [color=darkseagreen4, key=1, label=regexMatch, style=dashed];
m3_15 -> m3_18  [color=darkseagreen4, key=1, label=regex, style=dashed];
m3_17 -> m3_21  [color=darkseagreen4, key=1, label=match, style=dashed];
m3_17 -> m3_23  [color=darkseagreen4, key=1, label=match, style=dashed];
m3_19 -> m3_21  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_19 -> m3_22  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_22 -> m3_22  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_22 -> m3_31  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.Nodes.TrieNode", style=dashed];
m3_22 -> m3_32  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_22 -> m3_33  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.Nodes.TrieNode", style=dashed];
m3_22 -> m3_34  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_22 -> m3_35  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.Nodes.TrieNode", style=dashed];
m3_22 -> m3_36  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_22 -> m3_37  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.Nodes.TrieNode", style=dashed];
m3_22 -> m3_38  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.Nodes.TrieNode", style=dashed];
m3_3 -> m3_6  [color=green, key=1, label=chars, style=dashed];
m3_30 -> m3_32  [color=darkseagreen4, key=1, label=matches, style=dashed];
m3_32 -> m3_34  [color=darkseagreen4, key=1, label=match, style=dashed];
m3_32 -> m3_36  [color=darkseagreen4, key=1, label=match, style=dashed];
m3_0 -> m3_10  [color=green, key=1, label=string, style=dashed];
m3_0 -> m3_11  [color=green, key=1, label="Nancy.Routing.Trie.Nodes.TrieNode", style=dashed];
m3_0 -> m3_4  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_0 -> m3_5  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.Nodes.TrieNode", style=dashed];
m3_0 -> m3_7  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.Nodes.TrieNode", style=dashed];
m3_0 -> m3_8  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_0 -> m3_9  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.Nodes.TrieNode", style=dashed];
m3_0 -> m3_12  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.Nodes.TrieNode", style=dashed];
m3_5 -> m3_10  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_6 -> m3_27  [color=green, key=1, label="lambda expression", style=dashed];
m3_44 -> m3_1  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters", style=dashed];
m3_44 -> m3_15  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters", style=dashed];
m3_44 -> m3_21  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters", style=dashed];
m3_44 -> m3_30  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters", style=dashed];
m3_44 -> m3_31  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters", style=dashed];
m3_44 -> m3_34  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters", style=dashed];
m3_44 -> m3_35  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters", style=dashed];
m3_44 -> m3_36  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters", style=dashed];
m3_44 -> m3_37  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters", style=dashed];
m3_46 -> m3_11  [color=green, key=1, label="Nancy.Routing.Trie.TrieNodeFactory", style=dashed];
m3_46 -> m3_12  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.TrieNodeFactory", style=dashed];
m3_46 -> m3_2  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.TrieNodeFactory", style=dashed];
m3_46 -> m3_5  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.TrieNodeFactory", style=dashed];
m3_46 -> m3_7  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.TrieNodeFactory", style=dashed];
m3_46 -> m3_9  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.TrieNodeFactory", style=dashed];
m3_46 -> m3_31  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.TrieNodeFactory", style=dashed];
m3_46 -> m3_33  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.TrieNodeFactory", style=dashed];
m3_46 -> m3_35  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.TrieNodeFactory", style=dashed];
m3_46 -> m3_37  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.TrieNodeFactory", style=dashed];
m3_46 -> m3_38  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.TrieNodeFactory", style=dashed];
}
