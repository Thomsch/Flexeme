digraph  {
n11 [label="Nancy.Authentication.Basic.BasicAuthenticationConfiguration", span=""];
n0 [cluster="Nancy.Authentication.Basic.BasicAuthenticationConfiguration.BasicAuthenticationConfiguration(Nancy.Authentication.Basic.IUserValidator, string)", label="Entry Nancy.Authentication.Basic.BasicAuthenticationConfiguration.BasicAuthenticationConfiguration(Nancy.Authentication.Basic.IUserValidator, string)", span="17-17"];
n1 [cluster="Nancy.Authentication.Basic.BasicAuthenticationConfiguration.BasicAuthenticationConfiguration(Nancy.Authentication.Basic.IUserValidator, string)", label="userValidator == null", span="19-19"];
n3 [cluster="Nancy.Authentication.Basic.BasicAuthenticationConfiguration.BasicAuthenticationConfiguration(Nancy.Authentication.Basic.IUserValidator, string)", label="string.IsNullOrEmpty(realm)", span="22-22"];
n5 [cluster="Nancy.Authentication.Basic.BasicAuthenticationConfiguration.BasicAuthenticationConfiguration(Nancy.Authentication.Basic.IUserValidator, string)", label="this.UserValidator = userValidator", span="25-25"];
n6 [cluster="Nancy.Authentication.Basic.BasicAuthenticationConfiguration.BasicAuthenticationConfiguration(Nancy.Authentication.Basic.IUserValidator, string)", label="this.Realm = realm", span="26-26"];
n2 [cluster="Nancy.Authentication.Basic.BasicAuthenticationConfiguration.BasicAuthenticationConfiguration(Nancy.Authentication.Basic.IUserValidator, string)", label="throw new ArgumentNullException(''userValidator'');", span="20-20"];
n4 [cluster="Nancy.Authentication.Basic.BasicAuthenticationConfiguration.BasicAuthenticationConfiguration(Nancy.Authentication.Basic.IUserValidator, string)", label="throw new ArgumentException(''realm'');", span="23-23"];
n9 [cluster="string.IsNullOrEmpty(string)", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
n7 [cluster="Nancy.Authentication.Basic.BasicAuthenticationConfiguration.BasicAuthenticationConfiguration(Nancy.Authentication.Basic.IUserValidator, string)", label="Exit Nancy.Authentication.Basic.BasicAuthenticationConfiguration.BasicAuthenticationConfiguration(Nancy.Authentication.Basic.IUserValidator, string)", span="17-17"];
n10 [cluster="System.ArgumentException.ArgumentException(string)", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
n8 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
d235 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_ModelBindingException_if_convertion_of_a_property_fails()", color=green, community=1, label="Assert.Throws<ModelBindingException>(() => binder.Bind(context, modelType, null, BindingConfig.Default))\r\n                .ShouldMatch(exception =>\r\n                             exception.BoundType == modelType\r\n                             && exception.PropertyBindingExceptions.Any(pe =>\r\n                                                                        pe.PropertyName == ''IntProperty''\r\n                                                                        && pe.AttemptedValue == ''badint'')\r\n                             && exception.PropertyBindingExceptions.Any(pe =>\r\n                                                                        pe.PropertyName == ''AnotherIntProperty''\r\n                                                                        && pe.AttemptedValue == ''morebad'')\r\n                             && exception.PropertyBindingExceptions.All(pe =>\r\n                                                                        pe.InnerException.Message.Contains(pe.AttemptedValue)\r\n                                                                        && pe.InnerException.Message.Contains(modelType.GetProperty(pe.PropertyName).PropertyType.Name)))", prediction=0, span="281-292"];
d230 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_ModelBindingException_if_convertion_of_a_property_fails()", label="var binder = this.GetBinder(typeConverters: new[] { new FallbackConverter() })", span="274-274"];
d231 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_ModelBindingException_if_convertion_of_a_property_fails()", label="var context = new NancyContext { Request = new FakeRequest(''GET'', ''/'') }", span="275-275"];
d234 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_ModelBindingException_if_convertion_of_a_property_fails()", color=green, community=0, label="Type modelType = typeof(TestModel)", prediction=0, span="280-280"];
d236 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_ModelBindingException_if_convertion_of_a_property_fails()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_ModelBindingException_if_convertion_of_a_property_fails()", span="271-271"];
d11 [cluster="Unk.>", label="Entry Unk.>", span=""];
d237 [cluster="Unk.ShouldMatch", label="Entry Unk.ShouldMatch", span=""];
d238 [cluster="lambda expression", label="Entry lambda expression", span="281-281"];
d241 [cluster="lambda expression", label="Entry lambda expression", span="282-292"];
d239 [cluster="lambda expression", color=green, community=0, label="binder.Bind(context, modelType, null, BindingConfig.Default)", prediction=0, span="281-281"];
d970 [label=binder, span=""];
d971 [label=context, span=""];
d972 [label=modelType, span=""];
d240 [cluster="lambda expression", label="Exit lambda expression", span="281-281"];
d75 [cluster="Nancy.ModelBinding.IBinder.Bind(Nancy.NancyContext, System.Type, object, Nancy.ModelBinding.BindingConfig, params string[])", label="Entry Nancy.ModelBinding.IBinder.Bind(Nancy.NancyContext, System.Type, object, Nancy.ModelBinding.BindingConfig, params string[])", span="18-18"];
d233 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_ModelBindingException_if_convertion_of_a_property_fails()", label="context.Request.Form[''AnotherIntProperty''] = ''morebad''", span="277-277"];
d242 [cluster="lambda expression", color=green, community=1, label="exception.BoundType == modelType\r\n                             && exception.PropertyBindingExceptions.Any(pe =>\r\n                                                                        pe.PropertyName == ''IntProperty''\r\n                                                                        && pe.AttemptedValue == ''badint'')\r\n                             && exception.PropertyBindingExceptions.Any(pe =>\r\n                                                                        pe.PropertyName == ''AnotherIntProperty''\r\n                                                                        && pe.AttemptedValue == ''morebad'')\r\n                             && exception.PropertyBindingExceptions.All(pe =>\r\n                                                                        pe.InnerException.Message.Contains(pe.AttemptedValue)\r\n                                                                        && pe.InnerException.Message.Contains(modelType.GetProperty(pe.PropertyName).PropertyType.Name))", prediction=0, span="283-292"];
d253 [cluster="lambda expression", color=green, community=1, label="pe.InnerException.Message.Contains(pe.AttemptedValue)\r\n                                                                        && pe.InnerException.Message.Contains(modelType.GetProperty(pe.PropertyName).PropertyType.Name)", prediction=0, span="291-292"];
d243 [cluster="lambda expression", label="Exit lambda expression", span="282-292"];
d244 [cluster="Unk.Any", label="Entry Unk.Any", span=""];
d245 [cluster="Unk.All", label="Entry Unk.All", span=""];
d246 [cluster="lambda expression", label="Entry lambda expression", span="284-286"];
d249 [cluster="lambda expression", label="Entry lambda expression", span="287-289"];
d252 [cluster="lambda expression", label="Entry lambda expression", span="290-292"];
d254 [cluster="lambda expression", label="Exit lambda expression", span="290-292"];
d255 [cluster="Unk.Contains", label="Entry Unk.Contains", span=""];
d256 [cluster="Unk.GetProperty", label="Entry Unk.GetProperty", span=""];
d247 [cluster="lambda expression", color=green, community=0, label="pe.PropertyName == ''IntProperty''\r\n                                                                        && pe.AttemptedValue == ''badint''", prediction=5, span="285-286"];
d248 [cluster="lambda expression", label="Exit lambda expression", span="284-286"];
d250 [cluster="lambda expression", color=green, community=0, label="pe.PropertyName == ''AnotherIntProperty''\r\n                                                                        && pe.AttemptedValue == ''morebad''", prediction=6, span="288-289"];
d251 [cluster="lambda expression", label="Exit lambda expression", span="287-289"];
d960 [label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", span=""];
d229 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_ModelBindingException_if_convertion_of_a_property_fails()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_ModelBindingException_if_convertion_of_a_property_fails()", span="271-271"];
d226 [cluster="Nancy.ModelBinding.DefaultConverters.FallbackConverter.FallbackConverter()", label="Entry Nancy.ModelBinding.DefaultConverters.FallbackConverter.FallbackConverter()", span="9-9"];
d227 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.GetBinder(System.Collections.Generic.IEnumerable<Nancy.ModelBinding.ITypeConverter>, System.Collections.Generic.IEnumerable<Nancy.ModelBinding.IBodyDeserializer>, Nancy.ModelBinding.IFieldNameConverter, Nancy.ModelBinding.BindingDefaults)", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.GetBinder(System.Collections.Generic.IEnumerable<Nancy.ModelBinding.ITypeConverter>, System.Collections.Generic.IEnumerable<Nancy.ModelBinding.IBodyDeserializer>, Nancy.ModelBinding.IFieldNameConverter, Nancy.ModelBinding.BindingDefaults)", span="1343-1343"];
d232 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_ModelBindingException_if_convertion_of_a_property_fails()", label="context.Request.Form[''IntProperty''] = ''badint''", span="276-276"];
d185 [cluster="Nancy.NancyContext.NancyContext()", label="Entry Nancy.NancyContext.NancyContext()", span="25-25"];
d186 [cluster="Nancy.Tests.Fakes.FakeRequest.FakeRequest(string, string)", label="Entry Nancy.Tests.Fakes.FakeRequest.FakeRequest(string, string)", span="8-8"];
d2 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.DefaultBinderFixture()", label="this.passthroughNameConverter = A.Fake<IFieldNameConverter>()", span="31-31"];
d4 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.DefaultBinderFixture()", label="this.emptyDefaults = A.Fake<BindingDefaults>()", span="35-35"];
d38 [cluster="lambda expression", label="new DefaultBinder(null, new IBodyDeserializer[] { }, A.Fake<IFieldNameConverter>(), new BindingDefaults())", span="47-47"];
d47 [cluster="lambda expression", label="new DefaultBinder(new ITypeConverter[] { }, null, A.Fake<IFieldNameConverter>(), new BindingDefaults())", span="57-57"];
d62 [cluster="lambda expression", label="new DefaultBinder(new ITypeConverter[] { }, new IBodyDeserializer[] { }, A.Fake<IFieldNameConverter>(), null)", span="77-77"];
d65 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_body_deserializer_if_one_matches()", label="var deserializer = A.Fake<IBodyDeserializer>()", span="87-87"];
d86 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_call_body_deserializer_if_doesnt_match()", label="var deserializer = A.Fake<IBodyDeserializer>()", span="105-105"];
d101 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_request_content_type_to_can_deserialize()", label="var deserializer = A.Fake<IBodyDeserializer>()", span="123-123"];
d111 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_binding_context_to_can_deserialize()", label="var deserializer = A.Fake<IBodyDeserializer>()", span="140-140"];
d123 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned()", label="var deserializer = A.Fake<IBodyDeserializer>()", span="158-158"];
d143 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned_and_overwrite_when_allowed()", label="var deserializer = A.Fake<IBodyDeserializer>()", span="178-178"];
d160 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned_and_not_overwrite_when_not_allowed()", label="var deserializer = A.Fake<IBodyDeserializer>()", span="198-198"];
d176 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_see_if_a_type_converter_is_available_for_each_property_on_the_model_where_incoming_value_exists()", label="var typeConverter = A.Fake<ITypeConverter>()", span="217-217"];
d196 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_convert_on_type_converter_if_available()", label="var typeConverter = A.Fake<ITypeConverter>()", span="236-236"];
d283 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_indexer_properties()", label="var deserializer = A.Fake<IBodyDeserializer>()", span="337-337"];
d298 [cluster="lambda expression", label="validProperties = f.Arguments.Get<BindingContext>(2).ValidModelProperties.Count()", span="342-342"];
d305 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_binding_context_to_default_deserializer()", label="var deserializer = A.Fake<IBodyDeserializer>()", span="359-359"];
d343 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist_when_the_blacklist_is_specified_by_expressions()", label="var fakeModule = A.Fake<INancyModule>()", span="416-416"];
d344 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist_when_the_blacklist_is_specified_by_expressions()", label="var fakeModelBinderLocator = A.Fake<IModelBinderLocator>()", span="417-417"];
d348 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist_when_the_blacklist_is_specified_by_expressions()", label="var result = fakeModule.Bind<TestModel>(tm => tm.IntProperty)", span="423-423"];
d366 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_body_deserializer_if_one_found()", label="var deserializer = A.Fake<IBodyDeserializer>()", span="434-434"];
d384 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_type_converter_if_one_found()", label="var typeConverter = A.Fake<ITypeConverter>()", span="453-453"];
d407 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_body_serializer_should_take_precedence_over_default_one()", label="var userDeserializer = A.Fake<IBodyDeserializer>()", span="473-473"];
d409 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_body_serializer_should_take_precedence_over_default_one()", label="var defaultDeserializer = A.Fake<IBodyDeserializer>()", span="476-476"];
d434 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", label="var userTypeConverter = A.Fake<ITypeConverter>()", span="498-498"];
d437 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", label="var defaultTypeConverter = A.Fake<ITypeConverter>()", span="501-501"];
d69 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_body_deserializer_if_one_matches()", label="binder.Bind(context, this.GetType(), null, BindingConfig.Default)", span="94-94"];
d90 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_call_body_deserializer_if_doesnt_match()", label="binder.Bind(context, this.GetType(), null, BindingConfig.Default)", span="112-112"];
d104 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_request_content_type_to_can_deserialize()", label="binder.Bind(context, this.GetType(), null, BindingConfig.Default)", span="129-129"];
d114 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_binding_context_to_can_deserialize()", label="binder.Bind(context, this.GetType(), null, BindingConfig.Default)", span="146-146"];
d128 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned()", label="var result = binder.Bind(context, typeof(TestModel), null, BindingConfig.Default)", span="166-166"];
d148 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned_and_overwrite_when_allowed()", label="var result = binder.Bind(context, typeof(TestModel), null, BindingConfig.Default)", span="186-186"];
d165 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned_and_not_overwrite_when_not_allowed()", label="var result = binder.Bind(context, typeof(TestModel), null, BindingConfig.NoOverwrite)", span="206-206"];
d182 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_see_if_a_type_converter_is_available_for_each_property_on_the_model_where_incoming_value_exists()", label="binder.Bind(context, typeof(TestModel), null, BindingConfig.Default)", span="225-225"];
d202 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_convert_on_type_converter_if_available()", label="binder.Bind(context, typeof(TestModel), null, BindingConfig.Default)", span="244-244"];
d221 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_properties_that_cannot_be_converted()", label="var result = (TestModel)binder.Bind(context, typeof(TestModel), null, BindingConfig.Default)", span="262-262"];
d268 [cluster="lambda expression", label="binder.Bind(context, typeof(TestModel), null, config)", span="308-308"];
d276 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_set_remaining_properties_when_one_fails_and_ignore_error_is_enabled()", label="var model = binder.Bind(context, typeof(TestModel), null, config) as TestModel", span="323-323"];
d287 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_indexer_properties()", label="binder.Bind(context, typeof(TestModel), null, BindingConfig.Default)", span="349-349"];
d309 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_binding_context_to_default_deserializer()", label="binder.Bind(context, this.GetType(), null, BindingConfig.Default)", span="366-366"];
d323 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_field_name_converter_for_each_field()", label="binder.Bind(context, typeof(TestModel), null, BindingConfig.Default)", span="383-383"];
d334 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist()", label="var result = (TestModel)binder.Bind(context, typeof(TestModel), null, BindingConfig.Default, ''IntProperty'')", span="400-400"];
d371 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_body_deserializer_if_one_found()", label="binder.Bind(context, this.GetType(), null, BindingConfig.Default)", span="442-442"];
d391 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_type_converter_if_one_found()", label="binder.Bind(context, typeof(TestModel), null, BindingConfig.Default)", span="462-462"];
d414 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_body_serializer_should_take_precedence_over_default_one()", label="binder.Bind(context, this.GetType(), null, BindingConfig.Default)", span="485-485"];
d444 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", label="binder.Bind(context, typeof(TestModel), null, BindingConfig.Default)", span="510-510"];
d474 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_request()", label="var result = (TestModel)binder.Bind(context, typeof(TestModel), null, BindingConfig.Default)", span="529-529"];
d483 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_context_parameters()", label="var result = (TestModel)binder.Bind(context, typeof(TestModel), null, BindingConfig.Default)", span="546-546"];
d494 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_properties_should_take_precendence_over_request_properties()", label="var result = (TestModel)binder.Bind(context, typeof(TestModel), null, BindingConfig.Default)", span="565-565"];
d506 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_multiple_Form_properties_to_list()", label="var result = (List<TestModel>)binder.Bind(context, typeof(List<TestModel>), null, BindingConfig.Default)", span="586-586"];
d532 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list()", label="var result = (List<TestModel>)binder.Bind(context, typeof(List<TestModel>), null, BindingConfig.Default)", span="618-618"];
d555 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_should_work_with_padded_zeros()", label="var result = (List<TestModel>)binder.Bind(context, typeof(List<TestModel>), null, BindingConfig.Default)", span="649-649"];
d575 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_counting_from_1()", label="var result = (List<TestModel>)binder.Bind(context, typeof(List<TestModel>), null, BindingConfig.Default)", span="678-678"];
d589 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_more_than_once_should_ignore_non_list_properties_when_binding_to_a_list()", label="var result = (TestModel)binder.Bind(context, typeof(TestModel), null, BindingConfig.Default)", span="705-705"];
d590 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_more_than_once_should_ignore_non_list_properties_when_binding_to_a_list()", label="var result2 = (List<AnotherTestModel>)binder.Bind(context, typeof(List<AnotherTestModel>), null, BindingConfig.Default)", span="706-706"];
d615 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_with_jagged_ids()", label="var result = (List<TestModel>)binder.Bind(context, typeof(List<TestModel>), null, BindingConfig.Default)", span="741-741"];
d625 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form()", label="var result = (TestModel)binder.Bind(context, typeof(TestModel), null, BindingConfig.Default)", span="761-761"];
d635 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs()", label="var result = (List<TestModel>)binder.Bind(context, typeof(List<TestModel>), null, BindingConfig.Default)", span="780-780"];
d648 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs_using_brackets_and_specifying_an_instance()", label="var result = (List<TestModel>)binder.Bind(context, typeof(List<TestModel>), new List<TestModel> { new TestModel {AnotherStringProprety = ''Test''} }, new BindingConfig { Overwrite = false})", span="803-803"];
d662 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs_using_brackets()", label="var result = (List<TestModel>)binder.Bind(context, typeof(List<TestModel>), null, BindingConfig.Default)", span="826-826"];
d677 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_properties_should_take_precendence_over_request_properties_and_context_properties()", label="var result = (TestModel)binder.Bind(context, typeof(TestModel), null, BindingConfig.Default)", span="850-850"];
d688 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Request_properties_should_take_precendence_over_context_properties()", label="var result = (TestModel)binder.Bind(context, typeof(TestModel), null, BindingConfig.Default)", span="870-870"];
d697 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_from_form_and_request_simultaneously()", label="var result = (TestModel)binder.Bind(context, typeof(TestModel), null, BindingConfig.Default)", span="887-887"];
d706 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_culturally_aware_form_properties_if_numeric(string, double)", label="var result = (TestModel)binder.Bind(context, typeof(TestModel), null, BindingConfig.Default)", span="911-911"];
d715 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_culturally_aware_form_properties_if_datetime(string, int, int, int, string)", label="var result = (TestModel)binder.Bind(context, typeof(TestModel), null, BindingConfig.Default)", span="936-936"];
d725 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_from_request_and_context_simultaneously()", label="var result = (TestModel)binder.Bind(context, typeof(TestModel), null, BindingConfig.Default)", span="955-955"];
d737 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_overwrite_nullable_property_if_already_set_and_overwriting_is_not_allowed()", label="var result = (TestModel)binder.Bind(context, typeof(TestModel), existing, BindingConfig.NoOverwrite)", span="977-977"];
d749 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_overwrite_non_nullable_property_if_already_set_and_overwriting_is_not_allowed()", label="var result = (TestModel)binder.Bind(context, typeof(TestModel), existing, BindingConfig.NoOverwrite)", span="999-999"];
d759 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_overwrite_nullable_property_if_already_set_and_overwriting_is_allowed()", label="var result = (TestModel)binder.Bind(context, typeof(TestModel), existing, BindingConfig.Default)", span="1019-1019"];
d769 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_overwrite_non_nullable_property_if_already_set_and_overwriting_is_allowed()", label="var result = (TestModel)binder.Bind(context, typeof(TestModel), existing, BindingConfig.Default)", span="1039-1039"];
d777 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_list_model_from_body()", label="var result = (List<TestModel>)binder.Bind(context, typeof(List<TestModel>), null, BindingConfig.Default)", span="1056-1056"];
d789 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_array_model_from_body()", label="var result = (TestModel[])binder.Bind(context, typeof(TestModel[]), null, BindingConfig.Default)", span="1074-1074"];
d797 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_string_array_model_from_body()", label="var result = (string[])binder.Bind(context, typeof(string[]), null, BindingConfig.Default)", span="1091-1091"];
d807 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_ienumerable_model_from_body()", label="var result = (IEnumerable<TestModel>)binder.Bind(context, typeof(IEnumerable<TestModel>), null, BindingConfig.Default)", span="1108-1108"];
d817 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_ienumerable_model_with_instance_from_body()", label="var result = (IEnumerable<TestModel>)binder.Bind(context, typeof(IEnumerable<TestModel>), instance, new BindingConfig{Overwrite = false})", span="1129-1129"];
d830 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_with_instance_from_body()", label="var result = (TestModel)binder.Bind(context, typeof(TestModel), instance, new BindingConfig { Overwrite = false })", span="1152-1152"];
d841 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_body_that_contains_an_array()", label="var result = (TestModel)binder.Bind(context, typeof(TestModel), null, BindingConfig.Default)", span="1172-1172"];
d849 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_array_model_from_body_that_contains_an_array()", label="var result = (TestModel[])binder.Bind(context, typeof(TestModel[]), null, BindingConfig.Default, ''SomeStrings'')", span="1195-1195"];
d863 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_take_precedence_over_body_properties()", label="var result = (TestModel)binder.Bind(context, typeof(TestModel), null, BindingConfig.Default)", span="1219-1219"];
d877 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_be_ignored_in_body_only_mode_when_there_is_a_body()", label="var result = (TestModel)binder.Bind(context, typeof(TestModel), null, new BindingConfig { BodyOnly = true })", span="1243-1243"];
d889 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_NOT_be_used_in_body_only_mode_if_there_is_no_body()", label="var result = (TestModel)binder.Bind(context, typeof(TestModel), null, new BindingConfig { BodyOnly = true })", span="1264-1264"];
d901 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_body_request_form_and_context_properties()", label="var result = (TestModel)binder.Bind(context, typeof(TestModel), null, BindingConfig.Default)", span="1287-1287"];
d912 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_existing_instance_if_type_doesnt_match()", label="var result = (TestModel)binder.Bind(context, typeof(TestModel), existing, BindingConfig.Default)", span="1305-1305"];
d921 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_valuetype_from_body()", label="var result = (int)binder.Bind(context, typeof(int), null, BindingConfig.Default)", span="1321-1321"];
d928 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_ienumerable_model__of_valuetype_from_body()", label="var result = (IEnumerable<int>)binder.Bind(context, typeof(IEnumerable<int>), null, BindingConfig.Default)", span="1337-1337"];
d1 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.DefaultBinderFixture()", label="this.defaultBindingContext = new BindingContext()", span="29-29"];
d3 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.DefaultBinderFixture()", label="A.CallTo(() => this.passthroughNameConverter.Convert(null)).WithAnyArguments()\r\n                .ReturnsLazily(f => (string)f.Arguments[0])", span="32-33"];
d19 [cluster="lambda expression", label="this.passthroughNameConverter.Convert(null)", span="32-32"];
d5 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.DefaultBinderFixture()", label="A.CallTo(() => this.emptyDefaults.DefaultBodyDeserializers).Returns(new IBodyDeserializer[] { })", span="36-36"];
d26 [cluster="lambda expression", label="this.emptyDefaults.DefaultBodyDeserializers", span="36-36"];
d6 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.DefaultBinderFixture()", label="A.CallTo(() => this.emptyDefaults.DefaultTypeConverters).Returns(new ITypeConverter[] { })", span="37-37"];
d29 [cluster="lambda expression", label="this.emptyDefaults.DefaultTypeConverters", span="37-37"];
d7 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.DefaultBinderFixture()", label="this.serializer = new JavaScriptSerializer()", span="39-39"];
d8 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.DefaultBinderFixture()", label="this.serializer.RegisterConverters(JsonSettings.Converters)", span="40-40"];
d67 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_body_deserializer_if_one_matches()", label="var binder = this.GetBinder(bodyDeserializers: new[] { deserializer })", span="89-89"];
d88 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_call_body_deserializer_if_doesnt_match()", label="var binder = this.GetBinder(bodyDeserializers: new[] { deserializer })", span="107-107"];
d102 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_request_content_type_to_can_deserialize()", label="var binder = this.GetBinder(bodyDeserializers: new[] { deserializer })", span="124-124"];
d112 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_binding_context_to_can_deserialize()", label="var binder = this.GetBinder(bodyDeserializers: new[] { deserializer })", span="141-141"];
d126 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned()", label="var binder = this.GetBinder(bodyDeserializers: new[] { deserializer })", span="161-161"];
d146 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned_and_overwrite_when_allowed()", label="var binder = this.GetBinder(bodyDeserializers: new[] { deserializer })", span="181-181"];
d163 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned_and_not_overwrite_when_not_allowed()", label="var binder = this.GetBinder(bodyDeserializers: new[] { deserializer })", span="201-201"];
d178 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_see_if_a_type_converter_is_available_for_each_property_on_the_model_where_incoming_value_exists()", label="var binder = this.GetBinder(typeConverters: new[] { typeConverter })", span="219-219"];
d199 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_convert_on_type_converter_if_available()", label="var binder = this.GetBinder(typeConverters: new[] { typeConverter })", span="239-239"];
d216 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_properties_that_cannot_be_converted()", label="var binder = this.GetBinder(typeConverters: new[] { new FallbackConverter() })", span="255-255"];
d258 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_throw_ModelBindingException_if_convertion_of_property_fails_and_ignore_error_is_true()", label="var binder = this.GetBinder(typeConverters: new[] { new FallbackConverter() })", span="299-299"];
d271 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_set_remaining_properties_when_one_fails_and_ignore_error_is_enabled()", label="var binder = this.GetBinder(typeConverters: new[] { new FallbackConverter() })", span="315-315"];
d280 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_indexer_properties()", label="var binder = this.GetBinder(typeConverters: new[] { new FallbackConverter() })", span="333-333"];
d286 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_indexer_properties()", label="A.CallTo(() => this.emptyDefaults.DefaultBodyDeserializers).Returns(new[] { deserializer })", span="346-346"];
d302 [cluster="lambda expression", label="this.emptyDefaults.DefaultBodyDeserializers", span="346-346"];
d306 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_binding_context_to_default_deserializer()", label="var binder = this.GetBinder()", span="360-360"];
d308 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_binding_context_to_default_deserializer()", label="A.CallTo(() => this.emptyDefaults.DefaultBodyDeserializers).Returns(new[] { deserializer })", span="363-363"];
d313 [cluster="lambda expression", label="this.emptyDefaults.DefaultBodyDeserializers", span="363-363"];
d319 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_field_name_converter_for_each_field()", label="var binder = this.GetBinder()", span="377-377"];
d324 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_field_name_converter_for_each_field()", label="A.CallTo(() => this.passthroughNameConverter.Convert(null)).WithAnyArguments()\r\n                .MustHaveHappened(Repeated.Exactly.Times(2))", span="386-387"];
d327 [cluster="lambda expression", label="this.passthroughNameConverter.Convert(null)", span="386-386"];
d330 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist()", label="var binder = this.GetBinder(typeConverters: new[] { new FallbackConverter() })", span="394-394"];
d339 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist_when_the_blacklist_is_specified_by_expressions()", label="var binder = this.GetBinder(typeConverters: new[] { new FallbackConverter() })", span="411-411"];
d368 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_body_deserializer_if_one_found()", label="A.CallTo(() => this.emptyDefaults.DefaultBodyDeserializers).Returns(new[] { deserializer })", span="436-436"];
d378 [cluster="lambda expression", label="this.emptyDefaults.DefaultBodyDeserializers", span="436-436"];
d369 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_body_deserializer_if_one_found()", label="var binder = this.GetBinder()", span="437-437"];
d387 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_type_converter_if_one_found()", label="A.CallTo(() => this.emptyDefaults.DefaultTypeConverters).Returns(new[] { typeConverter })", span="456-456"];
d401 [cluster="lambda expression", label="this.emptyDefaults.DefaultTypeConverters", span="456-456"];
d388 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_type_converter_if_one_found()", label="var binder = this.GetBinder(new ITypeConverter[] { })", span="457-457"];
d411 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_body_serializer_should_take_precedence_over_default_one()", label="A.CallTo(() => this.emptyDefaults.DefaultBodyDeserializers).Returns(new[] { defaultDeserializer })", span="479-479"];
d425 [cluster="lambda expression", label="this.emptyDefaults.DefaultBodyDeserializers", span="479-479"];
d412 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_body_serializer_should_take_precedence_over_default_one()", label="var binder = this.GetBinder(bodyDeserializers: new[] { userDeserializer })", span="480-480"];
d440 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", label="A.CallTo(() => this.emptyDefaults.DefaultTypeConverters).Returns(new[] { defaultTypeConverter })", span="504-504"];
d461 [cluster="lambda expression", label="this.emptyDefaults.DefaultTypeConverters", span="504-504"];
d441 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", label="var binder = this.GetBinder(new[] { userTypeConverter })", span="505-505"];
d470 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_request()", label="var binder = this.GetBinder()", span="523-523"];
d479 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_context_parameters()", label="var binder = this.GetBinder()", span="540-540"];
d488 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_properties_should_take_precendence_over_request_properties()", label="var binder = this.GetBinder()", span="557-557"];
d500 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_multiple_Form_properties_to_list()", label="var binder = this.GetBinder(typeConverters)", span="577-577"];
d517 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list()", label="var binder = this.GetBinder(typeConverters)", span="600-600"];
d540 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_should_work_with_padded_zeros()", label="var binder = this.GetBinder(typeConverters)", span="631-631"];
d561 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_counting_from_1()", label="var binder = this.GetBinder(typeConverters)", span="661-661"];
d581 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_more_than_once_should_ignore_non_list_properties_when_binding_to_a_list()", label="var binder = this.GetBinder(typeConverters)", span="691-691"];
d600 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_with_jagged_ids()", label="var binder = this.GetBinder(typeConverters)", span="723-723"];
d622 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form()", label="var binder = this.GetBinder(typeConverters)", span="754-754"];
d631 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs()", label="var binder = this.GetBinder(typeConverters)", span="772-772"];
d644 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs_using_brackets_and_specifying_an_instance()", label="var binder = this.GetBinder(typeConverters)", span="795-795"];
d658 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs_using_brackets()", label="var binder = this.GetBinder(typeConverters)", span="818-818"];
d669 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_properties_should_take_precendence_over_request_properties_and_context_properties()", label="var binder = this.GetBinder()", span="839-839"];
d682 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Request_properties_should_take_precendence_over_context_properties()", label="var binder = this.GetBinder()", span="860-860"];
d693 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_from_form_and_request_simultaneously()", label="var binder = this.GetBinder()", span="880-880"];
d702 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_culturally_aware_form_properties_if_numeric(string, double)", label="var binder = this.GetBinder()", span="904-904"];
d711 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_culturally_aware_form_properties_if_datetime(string, int, int, int, string)", label="var binder = this.GetBinder()", span="929-929"];
d721 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_from_request_and_context_simultaneously()", label="var binder = this.GetBinder()", span="948-948"];
d730 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_overwrite_nullable_property_if_already_set_and_overwriting_is_not_allowed()", label="var binder = this.GetBinder()", span="966-966"];
d742 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_overwrite_non_nullable_property_if_already_set_and_overwriting_is_not_allowed()", label="var binder = this.GetBinder()", span="988-988"];
d754 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_overwrite_nullable_property_if_already_set_and_overwriting_is_allowed()", label="var binder = this.GetBinder()", span="1010-1010"];
d764 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_overwrite_non_nullable_property_if_already_set_and_overwriting_is_allowed()", label="var binder = this.GetBinder()", span="1030-1030"];
d774 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_list_model_from_body()", label="var binder = this.GetBinder(null, new List<IBodyDeserializer> { new XmlBodyDeserializer() })", span="1050-1050"];
d786 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_array_model_from_body()", label="var binder = this.GetBinder(null, new List<IBodyDeserializer> { new XmlBodyDeserializer() })", span="1068-1068"];
d794 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_string_array_model_from_body()", label="var binder = this.GetBinder(null, new List<IBodyDeserializer> { new JsonBodyDeserializer() })", span="1085-1085"];
d795 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_string_array_model_from_body()", label="var body = serializer.Serialize(new[] { ''Test'',''AnotherTest''})", span="1086-1086"];
d804 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_ienumerable_model_from_body()", label="var binder = this.GetBinder(null, new List<IBodyDeserializer> { new JsonBodyDeserializer() })", span="1102-1102"];
d805 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_ienumerable_model_from_body()", label="var body = serializer.Serialize(new List<TestModel>(new[] { new TestModel { StringProperty = ''Test'' }, new TestModel { StringProperty = ''AnotherTest'' } }))", span="1103-1103"];
d812 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_ienumerable_model_with_instance_from_body()", label="var binder = this.GetBinder(null, new List<IBodyDeserializer> { new JsonBodyDeserializer() })", span="1120-1120"];
d813 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_ienumerable_model_with_instance_from_body()", label="var body = serializer.Serialize(new List<TestModel>(new[] { new TestModel { StringProperty = ''Test'' }, new TestModel { StringProperty = ''AnotherTest'' } }))", span="1121-1121"];
d825 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_with_instance_from_body()", label="var binder = this.GetBinder(null, new List<IBodyDeserializer> { new XmlBodyDeserializer() })", span="1143-1143"];
d838 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_body_that_contains_an_array()", label="var binder = this.GetBinder(typeConverters, new List<IBodyDeserializer> { new JsonBodyDeserializer() })", span="1166-1166"];
d839 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_body_that_contains_an_array()", label="var body = serializer.Serialize(new TestModel {StringProperty = ''Test'', SomeStrings = new[] {''E'', ''A'', ''D'', ''G'', ''B'', ''E''}})", span="1167-1167"];
d846 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_array_model_from_body_that_contains_an_array()", label="var binder = this.GetBinder(null, new List<IBodyDeserializer> { new JsonBodyDeserializer() })", span="1184-1184"];
d847 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_array_model_from_body_that_contains_an_array()", label="var body =\r\n                serializer.Serialize(new[]\r\n                {\r\n                    new TestModel {StringProperty = ''Test'', SomeStrings = new[] {''E'', ''A'', ''D'', ''G'', ''B'', ''E''}},\r\n                    new TestModel {StringProperty = ''AnotherTest'', SomeStrings = new[] {''E'', ''A'', ''D'', ''G'', ''B'', ''E''}}\r\n                })", span="1185-1190"];
d857 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_take_precedence_over_body_properties()", label="var binder = this.GetBinder(typeConverters, bodyDeserializers)", span="1209-1209"];
d871 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_be_ignored_in_body_only_mode_when_there_is_a_body()", label="var binder = GetBinder(typeConverters, bodyDeserializers)", span="1233-1233"];
d884 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_NOT_be_used_in_body_only_mode_if_there_is_no_body()", label="var binder = GetBinder(typeConverters)", span="1256-1256"];
d895 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_body_request_form_and_context_properties()", label="var binder = this.GetBinder(null, new List<IBodyDeserializer> { new XmlBodyDeserializer() })", span="1277-1277"];
d909 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_existing_instance_if_type_doesnt_match()", label="var binder = this.GetBinder()", span="1300-1300"];
d918 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_valuetype_from_body()", label="var binder = this.GetBinder(null, new List<IBodyDeserializer> { new JsonBodyDeserializer() })", span="1315-1315"];
d919 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_valuetype_from_body()", label="var body = serializer.Serialize(1)", span="1316-1316"];
d925 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_ienumerable_model__of_valuetype_from_body()", label="var binder = this.GetBinder(null, new List<IBodyDeserializer> { new JsonBodyDeserializer() })", span="1331-1331"];
d926 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_ienumerable_model__of_valuetype_from_body()", label="var body = serializer.Serialize(new[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 })", span="1332-1332"];
d933 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.GetBinder(System.Collections.Generic.IEnumerable<Nancy.ModelBinding.ITypeConverter>, System.Collections.Generic.IEnumerable<Nancy.ModelBinding.IBodyDeserializer>, Nancy.ModelBinding.IFieldNameConverter, Nancy.ModelBinding.BindingDefaults)", label="var converter = nameConverter ?? this.passthroughNameConverter", span="1347-1347"];
d934 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.GetBinder(System.Collections.Generic.IEnumerable<Nancy.ModelBinding.ITypeConverter>, System.Collections.Generic.IEnumerable<Nancy.ModelBinding.IBodyDeserializer>, Nancy.ModelBinding.IFieldNameConverter, Nancy.ModelBinding.BindingDefaults)", label="var defaults = bindingDefaults ?? this.emptyDefaults", span="1348-1348"];
d499 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_multiple_Form_properties_to_list()", label="var typeConverters = new ITypeConverter[] { new CollectionConverter(), new FallbackConverter() }", span="576-576"];
d516 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list()", label="var typeConverters = new ITypeConverter[] { new CollectionConverter(), new FallbackConverter() }", span="599-599"];
d539 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_should_work_with_padded_zeros()", label="var typeConverters = new ITypeConverter[] { new CollectionConverter(), new FallbackConverter() }", span="630-630"];
d560 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_counting_from_1()", label="var typeConverters = new ITypeConverter[] { new CollectionConverter(), new FallbackConverter() }", span="660-660"];
d580 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_more_than_once_should_ignore_non_list_properties_when_binding_to_a_list()", label="var typeConverters = new ITypeConverter[] { new CollectionConverter(), new FallbackConverter() }", span="690-690"];
d599 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_with_jagged_ids()", label="var typeConverters = new ITypeConverter[] { new CollectionConverter(), new FallbackConverter() }", span="722-722"];
d621 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form()", label="var typeConverters = new ITypeConverter[] { new CollectionConverter(), new FallbackConverter() }", span="753-753"];
d630 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs()", label="var typeConverters = new ITypeConverter[] { new CollectionConverter(), new FallbackConverter() }", span="771-771"];
d643 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs_using_brackets_and_specifying_an_instance()", label="var typeConverters = new ITypeConverter[] { new CollectionConverter(), new FallbackConverter() }", span="794-794"];
d657 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs_using_brackets()", label="var typeConverters = new ITypeConverter[] { new CollectionConverter(), new FallbackConverter() }", span="817-817"];
d837 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_body_that_contains_an_array()", label="var typeConverters = new ITypeConverter[] { new CollectionConverter(), new FallbackConverter() }", span="1165-1165"];
d855 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_take_precedence_over_body_properties()", label="var typeConverters = new ITypeConverter[] { new CollectionConverter(), new FallbackConverter() }", span="1207-1207"];
d869 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_be_ignored_in_body_only_mode_when_there_is_a_body()", label="var typeConverters = new ITypeConverter[] { new CollectionConverter(), new FallbackConverter() }", span="1231-1231"];
d883 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_NOT_be_used_in_body_only_mode_if_there_is_no_body()", label="var typeConverters = new ITypeConverter[] { new CollectionConverter(), new FallbackConverter() }", span="1255-1255"];
d931 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.GetBinder(System.Collections.Generic.IEnumerable<Nancy.ModelBinding.ITypeConverter>, System.Collections.Generic.IEnumerable<Nancy.ModelBinding.IBodyDeserializer>, Nancy.ModelBinding.IFieldNameConverter, Nancy.ModelBinding.BindingDefaults)", label="var converters = typeConverters ?? new ITypeConverter[] { new DateTimeConverter(), new NumericConverter(), new FallbackConverter() }", span="1345-1345"];
d936 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.GetBinder(System.Collections.Generic.IEnumerable<Nancy.ModelBinding.ITypeConverter>, System.Collections.Generic.IEnumerable<Nancy.ModelBinding.IBodyDeserializer>, Nancy.ModelBinding.IFieldNameConverter, Nancy.ModelBinding.BindingDefaults)", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.GetBinder(System.Collections.Generic.IEnumerable<Nancy.ModelBinding.ITypeConverter>, System.Collections.Generic.IEnumerable<Nancy.ModelBinding.IBodyDeserializer>, Nancy.ModelBinding.IFieldNameConverter, Nancy.ModelBinding.BindingDefaults)", span="1343-1343"];
d932 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.GetBinder(System.Collections.Generic.IEnumerable<Nancy.ModelBinding.ITypeConverter>, System.Collections.Generic.IEnumerable<Nancy.ModelBinding.IBodyDeserializer>, Nancy.ModelBinding.IFieldNameConverter, Nancy.ModelBinding.BindingDefaults)", label="var deserializers = bodyDeserializers ?? new IBodyDeserializer[] { }", span="1346-1346"];
d856 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_take_precedence_over_body_properties()", label="var bodyDeserializers = new IBodyDeserializer[] { new XmlBodyDeserializer() }", span="1208-1208"];
d870 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_be_ignored_in_body_only_mode_when_there_is_a_body()", label="var bodyDeserializers = new IBodyDeserializer[] { new XmlBodyDeserializer() }", span="1232-1232"];
d179 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_see_if_a_type_converter_is_available_for_each_property_on_the_model_where_incoming_value_exists()", label="var context = new NancyContext { Request = new FakeRequest(''GET'', ''/'') }", span="220-220"];
d200 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_convert_on_type_converter_if_available()", label="var context = new NancyContext { Request = new FakeRequest(''GET'', ''/'') }", span="240-240"];
d217 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_properties_that_cannot_be_converted()", label="var context = new NancyContext { Request = new FakeRequest(''GET'', ''/'') }", span="256-256"];
d259 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_throw_ModelBindingException_if_convertion_of_property_fails_and_ignore_error_is_true()", label="var context = new NancyContext { Request = new FakeRequest(''GET'', ''/'') }", span="300-300"];
d272 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_set_remaining_properties_when_one_fails_and_ignore_error_is_enabled()", label="var context = new NancyContext { Request = new FakeRequest(''GET'', ''/'') }", span="316-316"];
d320 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_field_name_converter_for_each_field()", label="var context = new NancyContext { Request = new FakeRequest(''GET'', ''/'') }", span="378-378"];
d331 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist()", label="var context = new NancyContext { Request = new FakeRequest(''GET'', ''/'') }", span="395-395"];
d340 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist_when_the_blacklist_is_specified_by_expressions()", label="var context = new NancyContext { Request = new FakeRequest(''GET'', ''/'') }", span="412-412"];
d389 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_type_converter_if_one_found()", label="var context = new NancyContext { Request = new FakeRequest(''GET'', ''/'') }", span="458-458"];
d442 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", label="var context = new NancyContext { Request = new FakeRequest(''GET'', ''/'') }", span="506-506"];
d940 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.CreateContextWithHeader(string, System.Collections.Generic.IEnumerable<string>)", label="return new NancyContext\r\n            {\r\n                Request = new FakeRequest(''GET'', ''/'', header),\r\n                Parameters = DynamicDictionary.Empty\r\n            };", span="1360-1364"];
d947 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.CreateContextWithHeaderAndBody(string, System.Collections.Generic.IEnumerable<string>, string)", label="return new NancyContext\r\n            {\r\n                Request = new FakeRequest(''GET'', ''/'', header, bodyStream, ''http'', string.Empty),\r\n                Parameters = DynamicDictionary.Empty\r\n            };", span="1377-1381"];
d37 [cluster="lambda expression", label="Entry lambda expression", span="47-47"];
d39 [cluster="lambda expression", label="Exit lambda expression", span="47-47"];
d40 [cluster="DefaultBinder.cstr", label="Entry DefaultBinder.cstr", span=""];
d41 [cluster="Nancy.ModelBinding.BindingDefaults.BindingDefaults()", label="Entry Nancy.ModelBinding.BindingDefaults.BindingDefaults()", span="20-20"];
d46 [cluster="lambda expression", label="Entry lambda expression", span="57-57"];
d48 [cluster="lambda expression", label="Exit lambda expression", span="57-57"];
d61 [cluster="lambda expression", label="Entry lambda expression", span="77-77"];
d63 [cluster="lambda expression", label="Exit lambda expression", span="77-77"];
d64 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_body_deserializer_if_one_matches()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_body_deserializer_if_one_matches()", span="84-84"];
d66 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_body_deserializer_if_one_matches()", label="A.CallTo(() => deserializer.CanDeserialize(null, A<BindingContext>._)).WithAnyArguments().Returns(true)", span="88-88"];
d78 [cluster="lambda expression", label="deserializer.CanDeserialize(null, A<BindingContext>._)", span="88-88"];
d70 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_body_deserializer_if_one_matches()", label="A.CallTo(() => deserializer.Deserialize(null, null, null)).WithAnyArguments()\r\n                .MustHaveHappened(Repeated.Exactly.Once)", span="97-98"];
d82 [cluster="lambda expression", label="deserializer.Deserialize(null, null, null)", span="97-97"];
d85 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_call_body_deserializer_if_doesnt_match()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_call_body_deserializer_if_doesnt_match()", span="102-102"];
d87 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_call_body_deserializer_if_doesnt_match()", label="A.CallTo(() => deserializer.CanDeserialize(null, A<BindingContext>._)).WithAnyArguments().Returns(false)", span="106-106"];
d95 [cluster="lambda expression", label="deserializer.CanDeserialize(null, A<BindingContext>._)", span="106-106"];
d91 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_call_body_deserializer_if_doesnt_match()", label="A.CallTo(() => deserializer.Deserialize(null, null, null)).WithAnyArguments()\r\n                .MustNotHaveHappened()", span="115-116"];
d98 [cluster="lambda expression", label="deserializer.Deserialize(null, null, null)", span="115-115"];
d100 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_request_content_type_to_can_deserialize()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_request_content_type_to_can_deserialize()", span="120-120"];
d105 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_request_content_type_to_can_deserialize()", label="A.CallTo(() => deserializer.CanDeserialize(''application/xml'', A<BindingContext>._))\r\n                .MustHaveHappened(Repeated.Exactly.Once)", span="132-133"];
d108 [cluster="lambda expression", label="deserializer.CanDeserialize(''application/xml'', A<BindingContext>._)", span="132-132"];
d110 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_binding_context_to_can_deserialize()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_binding_context_to_can_deserialize()", span="137-137"];
d115 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_binding_context_to_can_deserialize()", label="A.CallTo(() => deserializer.CanDeserialize(''application/xml'', A<BindingContext>.That.Not.IsNull()))\r\n                .MustHaveHappened(Repeated.Exactly.Once)", span="149-150"];
d118 [cluster="lambda expression", label="deserializer.CanDeserialize(''application/xml'', A<BindingContext>.That.Not.IsNull())", span="149-149"];
d122 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned()", label="var modelObject = new TestModel { StringProperty = ''Hello!'' }", span="157-157"];
d124 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned()", label="A.CallTo(() => deserializer.CanDeserialize(null, A<BindingContext>._)).WithAnyArguments().Returns(true)", span="159-159"];
d136 [cluster="lambda expression", label="deserializer.CanDeserialize(null, A<BindingContext>._)", span="159-159"];
d125 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned()", label="A.CallTo(() => deserializer.Deserialize(null, null, null)).WithAnyArguments().Returns(modelObject)", span="160-160"];
d139 [cluster="lambda expression", label="deserializer.Deserialize(null, null, null)", span="160-160"];
d142 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned_and_overwrite_when_allowed()", label="var modelObject = new TestModel { StringPropertyWithDefaultValue = ''Hello!'' }", span="177-177"];
d144 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned_and_overwrite_when_allowed()", label="A.CallTo(() => deserializer.CanDeserialize(null, A<BindingContext>._)).WithAnyArguments().Returns(true)", span="179-179"];
d153 [cluster="lambda expression", label="deserializer.CanDeserialize(null, A<BindingContext>._)", span="179-179"];
d145 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned_and_overwrite_when_allowed()", label="A.CallTo(() => deserializer.Deserialize(null, null, null)).WithAnyArguments().Returns(modelObject)", span="180-180"];
d156 [cluster="lambda expression", label="deserializer.Deserialize(null, null, null)", span="180-180"];
d159 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned_and_not_overwrite_when_not_allowed()", label="var modelObject = new TestModel { StringPropertyWithDefaultValue = ''Hello!'' }", span="197-197"];
d161 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned_and_not_overwrite_when_not_allowed()", label="A.CallTo(() => deserializer.CanDeserialize(null, A<BindingContext>._)).WithAnyArguments().Returns(true)", span="199-199"];
d170 [cluster="lambda expression", label="deserializer.CanDeserialize(null, A<BindingContext>._)", span="199-199"];
d162 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned_and_not_overwrite_when_not_allowed()", label="A.CallTo(() => deserializer.Deserialize(null, null, null)).WithAnyArguments().Returns(modelObject)", span="200-200"];
d173 [cluster="lambda expression", label="deserializer.Deserialize(null, null, null)", span="200-200"];
d175 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_see_if_a_type_converter_is_available_for_each_property_on_the_model_where_incoming_value_exists()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_see_if_a_type_converter_is_available_for_each_property_on_the_model_where_incoming_value_exists()", span="214-214"];
d177 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_see_if_a_type_converter_is_available_for_each_property_on_the_model_where_incoming_value_exists()", label="A.CallTo(() => typeConverter.CanConvertTo(null, null)).WithAnyArguments().Returns(false)", span="218-218"];
d189 [cluster="lambda expression", label="typeConverter.CanConvertTo(null, null)", span="218-218"];
d183 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_see_if_a_type_converter_is_available_for_each_property_on_the_model_where_incoming_value_exists()", label="A.CallTo(() => typeConverter.CanConvertTo(null, null)).WithAnyArguments()\r\n                .MustHaveHappened(Repeated.Exactly.Times(2))", span="228-229"];
d193 [cluster="lambda expression", label="typeConverter.CanConvertTo(null, null)", span="228-228"];
d195 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_convert_on_type_converter_if_available()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_convert_on_type_converter_if_available()", span="233-233"];
d197 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_convert_on_type_converter_if_available()", label="A.CallTo(() => typeConverter.CanConvertTo(typeof(string), null)).WithAnyArguments().Returns(true)", span="237-237"];
d206 [cluster="lambda expression", label="typeConverter.CanConvertTo(typeof(string), null)", span="237-237"];
d198 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_convert_on_type_converter_if_available()", label="A.CallTo(() => typeConverter.Convert(null, null, null)).WithAnyArguments().Returns(null)", span="238-238"];
d209 [cluster="lambda expression", label="typeConverter.Convert(null, null, null)", span="238-238"];
d203 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_convert_on_type_converter_if_available()", label="A.CallTo(() => typeConverter.Convert(null, null, null)).WithAnyArguments()\r\n                .MustHaveHappened(Repeated.Exactly.Once)", span="247-248"];
d213 [cluster="lambda expression", label="typeConverter.Convert(null, null, null)", span="247-247"];
d282 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_indexer_properties()", label="var validProperties = 0", span="336-336"];
d284 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_indexer_properties()", label="A.CallTo(() => deserializer.CanDeserialize(A<string>.Ignored, A<BindingContext>._)).Returns(true)", span="338-338"];
d292 [cluster="lambda expression", label="deserializer.CanDeserialize(A<string>.Ignored, A<BindingContext>._)", span="338-338"];
d285 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_indexer_properties()", label="A.CallTo(() => deserializer.Deserialize(A<string>.Ignored, A<Stream>.Ignored, A<BindingContext>.Ignored))\r\n                                       .Invokes(f =>\r\n                                           {\r\n                                               validProperties = f.Arguments.Get<BindingContext>(2).ValidModelProperties.Count();\r\n                                           })\r\n                                       .Returns(new TestModel())", span="339-344"];
d295 [cluster="lambda expression", label="deserializer.Deserialize(A<string>.Ignored, A<Stream>.Ignored, A<BindingContext>.Ignored)", span="339-339"];
d297 [cluster="lambda expression", label="Entry lambda expression", span="340-343"];
d299 [cluster="lambda expression", label="Exit lambda expression", span="340-343"];
d300 [cluster="Unk.Count", label="Entry Unk.Count", span=""];
d304 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_binding_context_to_default_deserializer()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_binding_context_to_default_deserializer()", span="356-356"];
d310 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_binding_context_to_default_deserializer()", label="A.CallTo(() => deserializer.CanDeserialize(''application/xml'', A<BindingContext>.That.Not.IsNull()))\r\n                .MustHaveHappened(Repeated.Exactly.Once)", span="369-370"];
d316 [cluster="lambda expression", label="deserializer.CanDeserialize(''application/xml'', A<BindingContext>.That.Not.IsNull())", span="369-369"];
d342 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist_when_the_blacklist_is_specified_by_expressions()", label="context.Request.Form[''IntProperty''] = ''12''", span="414-414"];
d345 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist_when_the_blacklist_is_specified_by_expressions()", label="A.CallTo(() => fakeModule.Context).Returns(context)", span="418-418"];
d353 [cluster="lambda expression", label="fakeModule.Context", span="418-418"];
d346 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist_when_the_blacklist_is_specified_by_expressions()", label="A.CallTo(() => fakeModule.ModelBinderLocator).Returns(fakeModelBinderLocator)", span="419-419"];
d356 [cluster="lambda expression", label="fakeModule.ModelBinderLocator", span="419-419"];
d347 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist_when_the_blacklist_is_specified_by_expressions()", label="A.CallTo(() => fakeModelBinderLocator.GetBinderForType(typeof (TestModel), context)).Returns(binder)", span="420-420"];
d359 [cluster="lambda expression", label="fakeModelBinderLocator.GetBinderForType(typeof (TestModel), context)", span="420-420"];
d349 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist_when_the_blacklist_is_specified_by_expressions()", label="result.StringProperty.ShouldEqual(''Test'')", span="426-426"];
d362 [cluster="lambda expression", label="Entry lambda expression", span="423-423"];
d350 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist_when_the_blacklist_is_specified_by_expressions()", label="result.IntProperty.ShouldEqual(0)", span="427-427"];
d365 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_body_deserializer_if_one_found()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_body_deserializer_if_one_found()", span="431-431"];
d367 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_body_deserializer_if_one_found()", label="A.CallTo(() => deserializer.CanDeserialize(null, A<BindingContext>._)).WithAnyArguments().Returns(true)", span="435-435"];
d375 [cluster="lambda expression", label="deserializer.CanDeserialize(null, A<BindingContext>._)", span="435-435"];
d372 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_body_deserializer_if_one_found()", label="A.CallTo(() => deserializer.Deserialize(null, null, null)).WithAnyArguments()\r\n                .MustHaveHappened(Repeated.Exactly.Once)", span="445-446"];
d381 [cluster="lambda expression", label="deserializer.Deserialize(null, null, null)", span="445-445"];
d383 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_type_converter_if_one_found()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_type_converter_if_one_found()", span="450-450"];
d385 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_type_converter_if_one_found()", label="A.CallTo(() => typeConverter.CanConvertTo(typeof(string), null)).WithAnyArguments().Returns(true)", span="454-454"];
d395 [cluster="lambda expression", label="typeConverter.CanConvertTo(typeof(string), null)", span="454-454"];
d386 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_type_converter_if_one_found()", label="A.CallTo(() => typeConverter.Convert(null, null, null)).WithAnyArguments().Returns(null)", span="455-455"];
d398 [cluster="lambda expression", label="typeConverter.Convert(null, null, null)", span="455-455"];
d392 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_type_converter_if_one_found()", label="A.CallTo(() => typeConverter.Convert(null, null, null)).WithAnyArguments()\r\n                .MustHaveHappened(Repeated.Exactly.Once)", span="465-466"];
d404 [cluster="lambda expression", label="typeConverter.Convert(null, null, null)", span="465-465"];
d406 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_body_serializer_should_take_precedence_over_default_one()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_body_serializer_should_take_precedence_over_default_one()", span="470-470"];
d408 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_body_serializer_should_take_precedence_over_default_one()", label="A.CallTo(() => userDeserializer.CanDeserialize(null, A<BindingContext>._)).WithAnyArguments().Returns(true)", span="474-474"];
d419 [cluster="lambda expression", label="userDeserializer.CanDeserialize(null, A<BindingContext>._)", span="474-474"];
d415 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_body_serializer_should_take_precedence_over_default_one()", label="A.CallTo(() => userDeserializer.Deserialize(null, null, null)).WithAnyArguments()\r\n                .MustHaveHappened(Repeated.Exactly.Once)", span="488-489"];
d428 [cluster="lambda expression", label="userDeserializer.Deserialize(null, null, null)", span="488-488"];
d410 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_body_serializer_should_take_precedence_over_default_one()", label="A.CallTo(() => defaultDeserializer.CanDeserialize(null, A<BindingContext>._)).WithAnyArguments().Returns(true)", span="477-477"];
d422 [cluster="lambda expression", label="defaultDeserializer.CanDeserialize(null, A<BindingContext>._)", span="477-477"];
d416 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_body_serializer_should_take_precedence_over_default_one()", label="A.CallTo(() => defaultDeserializer.Deserialize(null, null, null)).WithAnyArguments()\r\n                .MustNotHaveHappened()", span="490-491"];
d431 [cluster="lambda expression", label="defaultDeserializer.Deserialize(null, null, null)", span="490-490"];
d433 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", span="495-495"];
d435 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", label="A.CallTo(() => userTypeConverter.CanConvertTo(typeof(string), null)).WithAnyArguments().Returns(true)", span="499-499"];
d449 [cluster="lambda expression", label="userTypeConverter.CanConvertTo(typeof(string), null)", span="499-499"];
d436 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", label="A.CallTo(() => userTypeConverter.Convert(null, null, null)).WithAnyArguments().Returns(null)", span="500-500"];
d452 [cluster="lambda expression", label="userTypeConverter.Convert(null, null, null)", span="500-500"];
d445 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", label="A.CallTo(() => userTypeConverter.Convert(null, null, null)).WithAnyArguments()\r\n                .MustHaveHappened(Repeated.Exactly.Once)", span="513-514"];
d464 [cluster="lambda expression", label="userTypeConverter.Convert(null, null, null)", span="513-513"];
d438 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", label="A.CallTo(() => defaultTypeConverter.CanConvertTo(typeof(string), null)).WithAnyArguments().Returns(true)", span="502-502"];
d455 [cluster="lambda expression", label="defaultTypeConverter.CanConvertTo(typeof(string), null)", span="502-502"];
d439 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", label="A.CallTo(() => defaultTypeConverter.Convert(null, null, null)).WithAnyArguments().Returns(null)", span="503-503"];
d458 [cluster="lambda expression", label="defaultTypeConverter.Convert(null, null, null)", span="503-503"];
d446 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", label="A.CallTo(() => defaultTypeConverter.Convert(null, null, null)).WithAnyArguments()\r\n                .MustNotHaveHappened()", span="515-516"];
d467 [cluster="lambda expression", label="defaultTypeConverter.Convert(null, null, null)", span="515-515"];
d68 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_body_deserializer_if_one_matches()", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="91-91"];
d74 [cluster="object.GetType()", label="Entry object.GetType()", span="0-0"];
d89 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_call_body_deserializer_if_doesnt_match()", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="109-109"];
d103 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_request_content_type_to_can_deserialize()", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="126-126"];
d113 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_binding_context_to_can_deserialize()", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="143-143"];
d127 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned()", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="163-163"];
d129 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned()", label="result.ShouldBeOfType<TestModel>()", span="169-169"];
d130 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned()", label="((TestModel)result).StringProperty.ShouldEqual(''Hello!'')", span="170-170"];
d147 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned_and_overwrite_when_allowed()", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="183-183"];
d149 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned_and_overwrite_when_allowed()", label="result.ShouldBeOfType<TestModel>()", span="189-189"];
d150 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned_and_overwrite_when_allowed()", label="((TestModel)result).StringPropertyWithDefaultValue.ShouldEqual(''Hello!'')", span="190-190"];
d164 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned_and_not_overwrite_when_not_allowed()", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="203-203"];
d166 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned_and_not_overwrite_when_not_allowed()", label="result.ShouldBeOfType<TestModel>()", span="209-209"];
d167 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned_and_not_overwrite_when_not_allowed()", label="((TestModel)result).StringPropertyWithDefaultValue.ShouldEqual(''Default Value'')", span="210-210"];
d181 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_see_if_a_type_converter_is_available_for_each_property_on_the_model_where_incoming_value_exists()", label="context.Request.Form[''IntProperty''] = ''12''", span="222-222"];
d201 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_convert_on_type_converter_if_available()", label="context.Request.Form[''StringProperty''] = ''Test''", span="241-241"];
d220 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_properties_that_cannot_be_converted()", label="context.Request.Form[''DateProperty''] = ''Broken''", span="259-259"];
d222 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_properties_that_cannot_be_converted()", label="result.StringProperty.ShouldEqual(''Test'')", span="265-265"];
d223 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_properties_that_cannot_be_converted()", label="result.IntProperty.ShouldEqual(12)", span="266-266"];
d224 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_properties_that_cannot_be_converted()", label="result.DateProperty.ShouldEqual(default(DateTime))", span="267-267"];
d973 [label=binder, span=""];
d974 [label=context, span=""];
d975 [label=config, span=""];
d262 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_throw_ModelBindingException_if_convertion_of_property_fails_and_ignore_error_is_true()", label="var config = new BindingConfig {IgnoreErrors = true}", span="304-304"];
d267 [cluster="lambda expression", label="Entry lambda expression", span="308-308"];
d269 [cluster="lambda expression", label="Exit lambda expression", span="308-308"];
d275 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_set_remaining_properties_when_one_fails_and_ignore_error_is_enabled()", label="var config = new BindingConfig { IgnoreErrors = true }", span="320-320"];
d277 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_set_remaining_properties_when_one_fails_and_ignore_error_is_enabled()", label="model.AnotherIntProperty.ShouldEqual(10)", span="326-326"];
d281 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_indexer_properties()", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="334-334"];
d288 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_indexer_properties()", label="validProperties.ShouldEqual(10)", span="352-352"];
d307 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_binding_context_to_default_deserializer()", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="362-362"];
d322 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_field_name_converter_for_each_field()", label="context.Request.Form[''IntProperty''] = ''12''", span="380-380"];
d333 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist()", label="context.Request.Form[''IntProperty''] = ''12''", span="397-397"];
d335 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist()", label="result.StringProperty.ShouldEqual(''Test'')", span="403-403"];
d336 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist()", label="result.IntProperty.ShouldEqual(0)", span="404-404"];
d370 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_body_deserializer_if_one_found()", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="439-439"];
d390 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_type_converter_if_one_found()", label="context.Request.Form[''StringProperty''] = ''Test''", span="459-459"];
d413 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_body_serializer_should_take_precedence_over_default_one()", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="482-482"];
d443 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", label="context.Request.Form[''StringProperty''] = ''Test''", span="507-507"];
d471 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_request()", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="524-524"];
d473 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_request()", label="context.Request.Query[''IntProperty''] = ''3''", span="526-526"];
d475 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_request()", label="result.StringProperty.ShouldEqual(''Test'')", span="532-532"];
d476 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_request()", label="result.IntProperty.ShouldEqual(3)", span="533-533"];
d480 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_context_parameters()", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="541-541"];
d482 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_context_parameters()", label="context.Parameters[''IntProperty''] = ''3''", span="543-543"];
d484 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_context_parameters()", label="result.StringProperty.ShouldEqual(''Test'')", span="549-549"];
d485 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_context_parameters()", label="result.IntProperty.ShouldEqual(3)", span="550-550"];
d489 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_properties_should_take_precendence_over_request_properties()", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="558-558"];
d493 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_properties_should_take_precendence_over_request_properties()", label="context.Request.Query[''IntProperty''] = ''1''", span="562-562"];
d495 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_properties_should_take_precendence_over_request_properties()", label="result.StringProperty.ShouldEqual(''Test'')", span="568-568"];
d496 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_properties_should_take_precendence_over_request_properties()", label="result.IntProperty.ShouldEqual(3)", span="569-569"];
d501 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_multiple_Form_properties_to_list()", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/x-www-form-urlencoded'' })", span="579-579"];
d505 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_multiple_Form_properties_to_list()", label="context.Request.Form[''IntProperty_1''] = ''2''", span="583-583"];
d507 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_multiple_Form_properties_to_list()", label="result.First().StringProperty.ShouldEqual(''Test'')", span="589-589"];
d508 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_multiple_Form_properties_to_list()", label="result.First().IntProperty.ShouldEqual(1)", span="590-590"];
d509 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_multiple_Form_properties_to_list()", label="result.Last().StringProperty.ShouldEqual(''Test2'')", span="591-591"];
d510 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_multiple_Form_properties_to_list()", label="result.Last().IntProperty.ShouldEqual(2)", span="592-592"];
d518 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list()", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/x-www-form-urlencoded'' })", span="602-602"];
d531 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list()", label="context.Request.Form[''IntProperty_12''] = ''13''", span="615-615"];
d533 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list()", label="result.First().IntProperty.ShouldEqual(1)", span="621-621"];
d534 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list()", label="result.ElementAt(1).IntProperty.ShouldEqual(2)", span="622-622"];
d535 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list()", label="result.Last().IntProperty.ShouldEqual(13)", span="623-623"];
d541 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_should_work_with_padded_zeros()", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/x-www-form-urlencoded'' })", span="633-633"];
d554 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_should_work_with_padded_zeros()", label="context.Request.Form[''IntProperty_12''] = ''13''", span="646-646"];
d556 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_should_work_with_padded_zeros()", label="result.First().IntProperty.ShouldEqual(1)", span="652-652"];
d557 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_should_work_with_padded_zeros()", label="result.Last().IntProperty.ShouldEqual(13)", span="653-653"];
d562 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_counting_from_1()", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/x-www-form-urlencoded'' })", span="663-663"];
d574 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_counting_from_1()", label="context.Request.Form[''IntProperty_12''] = ''12''", span="675-675"];
d576 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_counting_from_1()", label="result.First().IntProperty.ShouldEqual(1)", span="681-681"];
d577 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_counting_from_1()", label="result.Last().IntProperty.ShouldEqual(12)", span="682-682"];
d582 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_more_than_once_should_ignore_non_list_properties_when_binding_to_a_list()", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/x-www-form-urlencoded'' })", span="693-693"];
d588 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_more_than_once_should_ignore_non_list_properties_when_binding_to_a_list()", label="context.Request.Form[''NestedStringProperty[1]''] = ''two''", span="702-702"];
d591 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_more_than_once_should_ignore_non_list_properties_when_binding_to_a_list()", label="result.StringProperty.ShouldEqual(''Test'')", span="709-709"];
d592 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_more_than_once_should_ignore_non_list_properties_when_binding_to_a_list()", label="result.IntProperty.ShouldEqual(3)", span="710-710"];
d593 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_more_than_once_should_ignore_non_list_properties_when_binding_to_a_list()", label="result2.First().NestedIntProperty.ShouldEqual(1)", span="712-712"];
d594 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_more_than_once_should_ignore_non_list_properties_when_binding_to_a_list()", label="result2.First().NestedStringProperty.ShouldEqual(''one'')", span="713-713"];
d595 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_more_than_once_should_ignore_non_list_properties_when_binding_to_a_list()", label="result2.Last().NestedIntProperty.ShouldEqual(2)", span="714-714"];
d596 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_more_than_once_should_ignore_non_list_properties_when_binding_to_a_list()", label="result2.Last().NestedStringProperty.ShouldEqual(''two'')", span="715-715"];
d601 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_with_jagged_ids()", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/x-www-form-urlencoded'' })", span="725-725"];
d614 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_with_jagged_ids()", label="context.Request.Form[''IntProperty_12''] = ''12''", span="738-738"];
d616 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_with_jagged_ids()", label="result.First().IntProperty.ShouldEqual(1)", span="744-744"];
d617 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_with_jagged_ids()", label="result.Last().IntProperty.ShouldEqual(9)", span="745-745"];
d618 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_with_jagged_ids()", label="result.Last().StringProperty.ShouldEqual(''nine'')", span="746-746"];
d623 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form()", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/x-www-form-urlencoded'' })", span="756-756"];
d624 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form()", label="context.Request.Form[''IntValues''] = ''1,2,3,4''", span="758-758"];
d626 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form()", label="result.IntValues.ShouldHaveCount(4)", span="764-764"];
d632 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs()", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/x-www-form-urlencoded'' })", span="774-774"];
d634 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs()", label="context.Request.Form[''IntValues_1''] = ''5,6,7,8''", span="777-777"];
d636 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs()", label="result.First().IntValues.ShouldHaveCount(4)", span="783-783"];
d637 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs()", label="result.First().IntValues.ShouldEqualSequence(new[] { 1, 2, 3, 4 })", span="784-784"];
d638 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs()", label="result.Last().IntValues.ShouldHaveCount(4)", span="785-785"];
d639 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs()", label="result.Last().IntValues.ShouldEqualSequence(new[] { 5, 6, 7, 8 })", span="786-786"];
d645 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs_using_brackets_and_specifying_an_instance()", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/x-www-form-urlencoded'' })", span="797-797"];
d647 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs_using_brackets_and_specifying_an_instance()", label="context.Request.Form[''IntValues[1]''] = ''5,6,7,8''", span="800-800"];
d649 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs_using_brackets_and_specifying_an_instance()", label="result.First().AnotherStringProprety.ShouldEqual(''Test'')", span="806-806"];
d655 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
d132 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.TestModel.TestModel()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.TestModel.TestModel()", span="1386-1386"];
d265 [cluster="Nancy.ModelBinding.BindingConfig.BindingConfig()", label="Entry Nancy.ModelBinding.BindingConfig.BindingConfig()", span="10-10"];
d650 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs_using_brackets_and_specifying_an_instance()", label="result.First().IntValues.ShouldHaveCount(4)", span="807-807"];
d651 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs_using_brackets_and_specifying_an_instance()", label="result.First().IntValues.ShouldEqualSequence(new[] { 1, 2, 3, 4 })", span="808-808"];
d652 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs_using_brackets_and_specifying_an_instance()", label="result.Last().IntValues.ShouldHaveCount(4)", span="809-809"];
d653 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs_using_brackets_and_specifying_an_instance()", label="result.Last().IntValues.ShouldEqualSequence(new[] { 5, 6, 7, 8 })", span="810-810"];
d659 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs_using_brackets()", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/x-www-form-urlencoded'' })", span="820-820"];
d661 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs_using_brackets()", label="context.Request.Form[''IntValues[1]''] = ''5,6,7,8''", span="823-823"];
d663 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs_using_brackets()", label="result.First().IntValues.ShouldHaveCount(4)", span="829-829"];
d664 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs_using_brackets()", label="result.First().IntValues.ShouldEqualSequence(new[] { 1, 2, 3, 4 })", span="830-830"];
d665 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs_using_brackets()", label="result.Last().IntValues.ShouldHaveCount(4)", span="831-831"];
d666 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs_using_brackets()", label="result.Last().IntValues.ShouldEqualSequence(new[] { 5, 6, 7, 8 })", span="832-832"];
d670 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_properties_should_take_precendence_over_request_properties_and_context_properties()", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="841-841"];
d676 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_properties_should_take_precendence_over_request_properties_and_context_properties()", label="context.Parameters[''IntProperty''] = ''2''", span="847-847"];
d678 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_properties_should_take_precendence_over_request_properties_and_context_properties()", label="result.StringProperty.ShouldEqual(''Test'')", span="852-852"];
d679 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_properties_should_take_precendence_over_request_properties_and_context_properties()", label="result.IntProperty.ShouldEqual(3)", span="853-853"];
d683 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Request_properties_should_take_precendence_over_context_properties()", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="862-862"];
d687 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Request_properties_should_take_precendence_over_context_properties()", label="context.Parameters[''IntProperty''] = ''13''", span="867-867"];
d689 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Request_properties_should_take_precendence_over_context_properties()", label="result.StringProperty.ShouldEqual(''Test'')", span="872-872"];
d690 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Request_properties_should_take_precendence_over_context_properties()", label="result.IntProperty.ShouldEqual(12)", span="873-873"];
d694 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_from_form_and_request_simultaneously()", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="882-882"];
d696 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_from_form_and_request_simultaneously()", label="context.Request.Query[''IntProperty''] = ''12''", span="884-884"];
d698 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_from_form_and_request_simultaneously()", label="result.StringProperty.ShouldEqual(''Test'')", span="890-890"];
d699 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_from_form_and_request_simultaneously()", label="result.IntProperty.ShouldEqual(12)", span="891-891"];
d703 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_culturally_aware_form_properties_if_numeric(string, double)", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="906-906"];
d705 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_culturally_aware_form_properties_if_numeric(string, double)", label="context.Request.Form[''DoubleProperty''] = ''4,50''", span="908-908"];
d707 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_culturally_aware_form_properties_if_numeric(string, double)", label="result.DoubleProperty.ShouldEqual(expected)", span="914-914"];
d714 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_culturally_aware_form_properties_if_datetime(string, int, int, int, string)", label="context.Request.Form[''DateProperty''] = date", span="933-933"];
d712 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_culturally_aware_form_properties_if_datetime(string, int, int, int, string)", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="931-931"];
d716 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_culturally_aware_form_properties_if_datetime(string, int, int, int, string)", label="result.DateProperty.Date.Month.ShouldEqual(month)", span="939-939"];
d717 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_culturally_aware_form_properties_if_datetime(string, int, int, int, string)", label="result.DateProperty.Date.Day.ShouldEqual(day)", span="940-940"];
d718 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_culturally_aware_form_properties_if_datetime(string, int, int, int, string)", label="result.DateProperty.Date.Year.ShouldEqual(year)", span="941-941"];
d722 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_from_request_and_context_simultaneously()", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="950-950"];
d724 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_from_request_and_context_simultaneously()", label="context.Parameters[''IntProperty''] = ''12''", span="952-952"];
d726 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_from_request_and_context_simultaneously()", label="result.StringProperty.ShouldEqual(''Test'')", span="958-958"];
d727 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_from_request_and_context_simultaneously()", label="result.IntProperty.ShouldEqual(12)", span="959-959"];
d731 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_overwrite_nullable_property_if_already_set_and_overwriting_is_not_allowed()", label="var existing = new TestModel { StringProperty = ''Existing Value'' }", span="967-967"];
d732 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_overwrite_nullable_property_if_already_set_and_overwriting_is_not_allowed()", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="969-969"];
d736 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_overwrite_nullable_property_if_already_set_and_overwriting_is_not_allowed()", label="context.Parameters[''IntProperty''] = ''1''", span="974-974"];
d738 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_overwrite_nullable_property_if_already_set_and_overwriting_is_not_allowed()", label="result.StringProperty.ShouldEqual(''Existing Value'')", span="980-980"];
d739 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_overwrite_nullable_property_if_already_set_and_overwriting_is_not_allowed()", label="result.IntProperty.ShouldEqual(12)", span="981-981"];
d743 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_overwrite_non_nullable_property_if_already_set_and_overwriting_is_not_allowed()", label="var existing = new TestModel { IntProperty = 27 }", span="989-989"];
d744 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_overwrite_non_nullable_property_if_already_set_and_overwriting_is_not_allowed()", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="991-991"];
d748 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_overwrite_non_nullable_property_if_already_set_and_overwriting_is_not_allowed()", label="context.Parameters[''IntProperty''] = ''1''", span="996-996"];
d750 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_overwrite_non_nullable_property_if_already_set_and_overwriting_is_not_allowed()", label="result.StringProperty.ShouldEqual(''Test'')", span="1002-1002"];
d751 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_overwrite_non_nullable_property_if_already_set_and_overwriting_is_not_allowed()", label="result.IntProperty.ShouldEqual(27)", span="1003-1003"];
d755 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_overwrite_nullable_property_if_already_set_and_overwriting_is_allowed()", label="var existing = new TestModel { StringProperty = ''Existing Value'' }", span="1011-1011"];
d756 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_overwrite_nullable_property_if_already_set_and_overwriting_is_allowed()", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="1013-1013"];
d758 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_overwrite_nullable_property_if_already_set_and_overwriting_is_allowed()", label="context.Parameters[''IntProperty''] = ''1''", span="1016-1016"];
d760 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_overwrite_nullable_property_if_already_set_and_overwriting_is_allowed()", label="result.StringProperty.ShouldEqual(''Test2'')", span="1022-1022"];
d761 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_overwrite_nullable_property_if_already_set_and_overwriting_is_allowed()", label="result.IntProperty.ShouldEqual(1)", span="1023-1023"];
d765 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_overwrite_non_nullable_property_if_already_set_and_overwriting_is_allowed()", label="var existing = new TestModel { IntProperty = 27 }", span="1031-1031"];
d766 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_overwrite_non_nullable_property_if_already_set_and_overwriting_is_allowed()", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="1033-1033"];
d768 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_overwrite_non_nullable_property_if_already_set_and_overwriting_is_allowed()", label="context.Parameters[''IntProperty''] = ''1''", span="1036-1036"];
d770 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_overwrite_non_nullable_property_if_already_set_and_overwriting_is_allowed()", label="result.StringProperty.ShouldEqual(''Test2'')", span="1042-1042"];
d771 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_overwrite_non_nullable_property_if_already_set_and_overwriting_is_allowed()", label="result.IntProperty.ShouldEqual(1)", span="1043-1043"];
d776 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_list_model_from_body()", label="var context = CreateContextWithHeaderAndBody(''Content-Type'', new[] { ''application/xml'' }, body)", span="1053-1053"];
d778 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_list_model_from_body()", label="result.First().StringProperty.ShouldEqual(''Test'')", span="1059-1059"];
d779 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_list_model_from_body()", label="result.Last().StringProperty.ShouldEqual(''AnotherTest'')", span="1060-1060"];
d788 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_array_model_from_body()", label="var context = CreateContextWithHeaderAndBody(''Content-Type'', new[] { ''application/xml'' }, body)", span="1071-1071"];
d790 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_array_model_from_body()", label="result.First().StringProperty.ShouldEqual(''Test'')", span="1077-1077"];
d791 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_array_model_from_body()", label="result.Last().StringProperty.ShouldEqual(''AnotherTest'')", span="1078-1078"];
d796 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_string_array_model_from_body()", label="var context = CreateContextWithHeaderAndBody(''Content-Type'', new[] { ''application/json'' }, body)", span="1088-1088"];
d798 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_string_array_model_from_body()", label="result.First().ShouldEqual(''Test'')", span="1094-1094"];
d799 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_string_array_model_from_body()", label="result.Last().ShouldEqual(''AnotherTest'')", span="1095-1095"];
d806 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_ienumerable_model_from_body()", label="var context = CreateContextWithHeaderAndBody(''Content-Type'', new[] { ''application/json'' }, body)", span="1105-1105"];
d808 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_ienumerable_model_from_body()", label="result.First().StringProperty.ShouldEqual(''Test'')", span="1111-1111"];
d809 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_ienumerable_model_from_body()", label="result.Last().StringProperty.ShouldEqual(''AnotherTest'')", span="1112-1112"];
d814 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_ienumerable_model_with_instance_from_body()", label="var context = CreateContextWithHeaderAndBody(''Content-Type'', new[] { ''application/json'' }, body)", span="1123-1123"];
d816 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_ienumerable_model_with_instance_from_body()", label="var instance = new List<TestModel> { new TestModel{ DateProperty = then }, new TestModel { IntProperty = 9, AnotherStringProprety = ''Bananas'' } }", span="1126-1126"];
d818 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_ienumerable_model_with_instance_from_body()", label="result.First().StringProperty.ShouldEqual(''Test'')", span="1132-1132"];
d819 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_ienumerable_model_with_instance_from_body()", label="result.First().DateProperty.ShouldEqual(then)", span="1133-1133"];
d820 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_ienumerable_model_with_instance_from_body()", label="result.Last().StringProperty.ShouldEqual(''AnotherTest'')", span="1134-1134"];
d821 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_ienumerable_model_with_instance_from_body()", label="result.Last().IntProperty.ShouldEqual(9)", span="1135-1135"];
d822 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_ienumerable_model_with_instance_from_body()", label="result.Last().AnotherStringProprety.ShouldEqual(''Bananas'')", span="1136-1136"];
d827 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_with_instance_from_body()", label="var context = CreateContextWithHeaderAndBody(''Content-Type'', new[] { ''application/xml'' }, body)", span="1146-1146"];
d829 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_with_instance_from_body()", label="var instance = new TestModel { DateProperty = then, IntProperty = 6, AnotherStringProprety = ''Beers'' }", span="1149-1149"];
d831 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_with_instance_from_body()", label="result.StringProperty.ShouldEqual(''Test'')", span="1155-1155"];
d832 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_with_instance_from_body()", label="result.DateProperty.ShouldEqual(then)", span="1156-1156"];
d833 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_with_instance_from_body()", label="result.IntProperty.ShouldEqual(6)", span="1157-1157"];
d834 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_with_instance_from_body()", label="result.AnotherStringProprety.ShouldEqual(''Beers'')", span="1158-1158"];
d840 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_body_that_contains_an_array()", label="var context = CreateContextWithHeaderAndBody(''Content-Type'', new[] { ''application/json'' }, body)", span="1169-1169"];
d842 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_body_that_contains_an_array()", label="result.SomeStrings.ShouldHaveCount(6)", span="1175-1175"];
d843 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_body_that_contains_an_array()", label="result.SomeStrings.ShouldEqualSequence(new[] { ''E'', ''A'', ''D'', ''G'', ''B'', ''E'' })", span="1176-1176"];
d848 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_array_model_from_body_that_contains_an_array()", label="var context = CreateContextWithHeaderAndBody(''Content-Type'', new[] { ''application/json'' }, body)", span="1192-1192"];
d850 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_array_model_from_body_that_contains_an_array()", label="result.First().SomeStrings.ShouldBeNull()", span="1198-1198"];
d851 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_array_model_from_body_that_contains_an_array()", label="result.Last().SomeStrings.ShouldBeNull()", span="1199-1199"];
d859 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_take_precedence_over_body_properties()", label="var context = CreateContextWithHeaderAndBody(''Content-Type'', new[] { ''application/xml'' }, body)", span="1212-1212"];
d862 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_take_precedence_over_body_properties()", label="context.Parameters[''AnotherStringProprety''] = ''From context''", span="1216-1216"];
d864 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_take_precedence_over_body_properties()", label="result.StringProperty.ShouldEqual(''From form'')", span="1222-1222"];
d865 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_take_precedence_over_body_properties()", label="result.AnotherStringProprety.ShouldEqual(''From context'')", span="1223-1223"];
d866 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_take_precedence_over_body_properties()", label="result.IntProperty.ShouldEqual(1)", span="1224-1224"];
d873 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_be_ignored_in_body_only_mode_when_there_is_a_body()", label="var context = CreateContextWithHeaderAndBody(''Content-Type'', new[] { ''application/xml'' }, body)", span="1236-1236"];
d876 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_be_ignored_in_body_only_mode_when_there_is_a_body()", label="context.Parameters[''AnotherStringProprety''] = ''From context''", span="1240-1240"];
d878 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_be_ignored_in_body_only_mode_when_there_is_a_body()", label="result.StringProperty.ShouldEqual(''From body'')", span="1246-1246"];
d879 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_be_ignored_in_body_only_mode_when_there_is_a_body()", label="result.AnotherStringProprety.ShouldBeNull()", span="1247-1247"];
d880 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_be_ignored_in_body_only_mode_when_there_is_a_body()", label="result.IntProperty.ShouldEqual(2)", span="1248-1248"];
d885 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_NOT_be_used_in_body_only_mode_if_there_is_no_body()", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="1258-1258"];
d888 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_NOT_be_used_in_body_only_mode_if_there_is_no_body()", label="context.Parameters[''AnotherStringProprety''] = ''From context''", span="1261-1261"];
d890 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_NOT_be_used_in_body_only_mode_if_there_is_no_body()", label="result.StringProperty.ShouldEqual(null)", span="1267-1267"];
d891 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_NOT_be_used_in_body_only_mode_if_there_is_no_body()", label="result.AnotherStringProprety.ShouldEqual(null)", span="1268-1268"];
d892 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_NOT_be_used_in_body_only_mode_if_there_is_no_body()", label="result.IntProperty.ShouldEqual(0)", span="1269-1269"];
d897 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_body_request_form_and_context_properties()", label="var context = CreateContextWithHeaderAndBody(''Content-Type'', new[] { ''application/xml'' }, body)", span="1280-1280"];
d900 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_body_request_form_and_context_properties()", label="context.Parameters[''AnotherStringProprety''] = ''From Context''", span="1284-1284"];
d902 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_body_request_form_and_context_properties()", label="result.StringProperty.ShouldEqual(''From Query'')", span="1290-1290"];
d903 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_body_request_form_and_context_properties()", label="result.IntProperty.ShouldEqual(0)", span="1291-1291"];
d904 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_body_request_form_and_context_properties()", label="result.DateProperty.ShouldEqual(new DateTime(2012, 8, 16))", span="1292-1292"];
d905 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_body_request_form_and_context_properties()", label="result.AnotherStringProprety.ShouldEqual(''From Context'')", span="1293-1293"];
d910 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_existing_instance_if_type_doesnt_match()", label="var existing = new object()", span="1301-1301"];
d911 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_existing_instance_if_type_doesnt_match()", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="1302-1302"];
d913 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_existing_instance_if_type_doesnt_match()", label="result.ShouldNotBeSameAs(existing)", span="1308-1308"];
d920 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_valuetype_from_body()", label="var context = CreateContextWithHeaderAndBody(''Content-Type'', new[] { ''application/json'' }, body)", span="1318-1318"];
d922 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_valuetype_from_body()", label="result.ShouldEqual(1)", span="1324-1324"];
d927 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_ienumerable_model__of_valuetype_from_body()", label="var context = CreateContextWithHeaderAndBody(''Content-Type'', new[] { ''application/json'' }, body)", span="1334-1334"];
d929 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_ienumerable_model__of_valuetype_from_body()", label="result.ShouldEqualSequence(new[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 })", span="1340-1340"];
d0 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.DefaultBinderFixture()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.DefaultBinderFixture()", span="27-27"];
d10 [cluster="Nancy.ModelBinding.BindingContext.BindingContext()", label="Entry Nancy.ModelBinding.BindingContext.BindingContext()", span="9-9"];
d12 [cluster="Unk.CallTo", label="Entry Unk.CallTo", span=""];
d13 [cluster="Unk.WithAnyArguments", label="Entry Unk.WithAnyArguments", span=""];
d14 [cluster="Unk.ReturnsLazily", label="Entry Unk.ReturnsLazily", span=""];
d18 [cluster="lambda expression", label="Entry lambda expression", span="32-32"];
d22 [cluster="lambda expression", label="Entry lambda expression", span="33-33"];
d20 [cluster="lambda expression", label="Exit lambda expression", span="32-32"];
d21 [cluster="Nancy.ModelBinding.IFieldNameConverter.Convert(string)", label="Entry Nancy.ModelBinding.IFieldNameConverter.Convert(string)", span="13-13"];
d15 [cluster="Unk.Returns", label="Entry Unk.Returns", span=""];
d25 [cluster="lambda expression", label="Entry lambda expression", span="36-36"];
d27 [cluster="lambda expression", label="Exit lambda expression", span="36-36"];
d28 [cluster="lambda expression", label="Entry lambda expression", span="37-37"];
d30 [cluster="lambda expression", label="Exit lambda expression", span="37-37"];
d16 [cluster="Nancy.Json.JavaScriptSerializer.JavaScriptSerializer()", label="Entry Nancy.Json.JavaScriptSerializer.JavaScriptSerializer()", span="66-66"];
d9 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.DefaultBinderFixture()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.DefaultBinderFixture()", span="27-27"];
d17 [cluster="Nancy.Json.JavaScriptSerializer.RegisterConverters(System.Collections.Generic.IEnumerable<Nancy.Json.JavaScriptConverter>)", label="Entry Nancy.Json.JavaScriptSerializer.RegisterConverters(System.Collections.Generic.IEnumerable<Nancy.Json.JavaScriptConverter>)", span="452-452"];
d72 [cluster="Unk.GetBinder", label="Entry Unk.GetBinder", span=""];
d215 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_properties_that_cannot_be_converted()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_properties_that_cannot_be_converted()", span="252-252"];
d257 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_throw_ModelBindingException_if_convertion_of_property_fails_and_ignore_error_is_true()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_throw_ModelBindingException_if_convertion_of_property_fails_and_ignore_error_is_true()", span="296-296"];
d263 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_throw_ModelBindingException_if_convertion_of_property_fails_and_ignore_error_is_true()", label="Assert.DoesNotThrow(() => binder.Bind(context, typeof(TestModel), null, config))", span="308-308"];
d270 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_set_remaining_properties_when_one_fails_and_ignore_error_is_enabled()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_set_remaining_properties_when_one_fails_and_ignore_error_is_enabled()", span="312-312"];
d279 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_indexer_properties()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_indexer_properties()", span="330-330"];
d301 [cluster="lambda expression", label="Entry lambda expression", span="346-346"];
d303 [cluster="lambda expression", label="Exit lambda expression", span="346-346"];
d312 [cluster="lambda expression", label="Entry lambda expression", span="363-363"];
d314 [cluster="lambda expression", label="Exit lambda expression", span="363-363"];
d318 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_field_name_converter_for_each_field()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_field_name_converter_for_each_field()", span="374-374"];
d325 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_field_name_converter_for_each_field()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_field_name_converter_for_each_field()", span="374-374"];
d187 [cluster="Unk.Times", label="Entry Unk.Times", span=""];
d76 [cluster="Unk.MustHaveHappened", label="Entry Unk.MustHaveHappened", span=""];
d326 [cluster="lambda expression", label="Entry lambda expression", span="386-386"];
d328 [cluster="lambda expression", label="Exit lambda expression", span="386-386"];
d329 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist()", span="391-391"];
d338 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist_when_the_blacklist_is_specified_by_expressions()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist_when_the_blacklist_is_specified_by_expressions()", span="408-408"];
d377 [cluster="lambda expression", label="Entry lambda expression", span="436-436"];
d379 [cluster="lambda expression", label="Exit lambda expression", span="436-436"];
d400 [cluster="lambda expression", label="Entry lambda expression", span="456-456"];
d402 [cluster="lambda expression", label="Exit lambda expression", span="456-456"];
d424 [cluster="lambda expression", label="Entry lambda expression", span="479-479"];
d426 [cluster="lambda expression", label="Exit lambda expression", span="479-479"];
d460 [cluster="lambda expression", label="Entry lambda expression", span="504-504"];
d462 [cluster="lambda expression", label="Exit lambda expression", span="504-504"];
d469 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_request()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_request()", span="520-520"];
d478 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_context_parameters()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_context_parameters()", span="537-537"];
d487 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_properties_should_take_precendence_over_request_properties()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_properties_should_take_precendence_over_request_properties()", span="554-554"];
d668 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_properties_should_take_precendence_over_request_properties_and_context_properties()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_properties_should_take_precendence_over_request_properties_and_context_properties()", span="836-836"];
d681 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Request_properties_should_take_precendence_over_context_properties()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Request_properties_should_take_precendence_over_context_properties()", span="857-857"];
d692 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_from_form_and_request_simultaneously()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_from_form_and_request_simultaneously()", span="877-877"];
d701 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_culturally_aware_form_properties_if_numeric(string, double)", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_culturally_aware_form_properties_if_numeric(string, double)", span="901-901"];
d710 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_culturally_aware_form_properties_if_datetime(string, int, int, int, string)", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_culturally_aware_form_properties_if_datetime(string, int, int, int, string)", span="926-926"];
d720 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_from_request_and_context_simultaneously()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_from_request_and_context_simultaneously()", span="945-945"];
d729 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_overwrite_nullable_property_if_already_set_and_overwriting_is_not_allowed()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_overwrite_nullable_property_if_already_set_and_overwriting_is_not_allowed()", span="963-963"];
d741 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_overwrite_non_nullable_property_if_already_set_and_overwriting_is_not_allowed()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_overwrite_non_nullable_property_if_already_set_and_overwriting_is_not_allowed()", span="985-985"];
d753 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_overwrite_nullable_property_if_already_set_and_overwriting_is_allowed()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_overwrite_nullable_property_if_already_set_and_overwriting_is_allowed()", span="1007-1007"];
d763 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_overwrite_non_nullable_property_if_already_set_and_overwriting_is_allowed()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_overwrite_non_nullable_property_if_already_set_and_overwriting_is_allowed()", span="1027-1027"];
d773 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_list_model_from_body()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_list_model_from_body()", span="1047-1047"];
d775 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_list_model_from_body()", label="var body = XmlBodyDeserializerFixture.ToXmlString(new List<TestModel>(new[] { new TestModel { StringProperty = ''Test'' }, new TestModel { StringProperty = ''AnotherTest'' } }))", span="1051-1051"];
d781 [cluster="Nancy.ModelBinding.DefaultBodyDeserializers.XmlBodyDeserializer.XmlBodyDeserializer()", label="Entry Nancy.ModelBinding.DefaultBodyDeserializers.XmlBodyDeserializer.XmlBodyDeserializer()", span="9-9"];
d785 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_array_model_from_body()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_array_model_from_body()", span="1065-1065"];
d787 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_array_model_from_body()", label="var body = XmlBodyDeserializerFixture.ToXmlString(new List<TestModel>(new[] { new TestModel { StringProperty = ''Test'' }, new TestModel { StringProperty = ''AnotherTest'' } }))", span="1069-1069"];
d793 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_string_array_model_from_body()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_string_array_model_from_body()", span="1082-1082"];
d801 [cluster="Nancy.ModelBinding.DefaultBodyDeserializers.JsonBodyDeserializer.JsonBodyDeserializer()", label="Entry Nancy.ModelBinding.DefaultBodyDeserializers.JsonBodyDeserializer.JsonBodyDeserializer()", span="12-12"];
d784 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.CreateContextWithHeaderAndBody(string, System.Collections.Generic.IEnumerable<string>, string)", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.CreateContextWithHeaderAndBody(string, System.Collections.Generic.IEnumerable<string>, string)", span="1367-1367"];
d802 [cluster="Nancy.Json.JavaScriptSerializer.Serialize(object)", label="Entry Nancy.Json.JavaScriptSerializer.Serialize(object)", span="476-476"];
d803 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_ienumerable_model_from_body()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_ienumerable_model_from_body()", span="1099-1099"];
d782 [cluster="System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", label="Entry System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
d811 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_ienumerable_model_with_instance_from_body()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_ienumerable_model_with_instance_from_body()", span="1117-1117"];
d824 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_with_instance_from_body()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_with_instance_from_body()", span="1140-1140"];
d826 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_with_instance_from_body()", label="var body = XmlBodyDeserializerFixture.ToXmlString(new TestModel { StringProperty = ''Test'' })", span="1144-1144"];
d845 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_array_model_from_body_that_contains_an_array()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_array_model_from_body_that_contains_an_array()", span="1181-1181"];
d858 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_take_precedence_over_body_properties()", label="var body = XmlBodyDeserializerFixture.ToXmlString(new TestModel { IntProperty = 0, StringProperty = ''From body'' })", span="1210-1210"];
d872 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_be_ignored_in_body_only_mode_when_there_is_a_body()", label="var body = XmlBodyDeserializerFixture.ToXmlString(new TestModel { IntProperty = 2, StringProperty = ''From body'' })", span="1234-1234"];
d894 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_body_request_form_and_context_properties()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_body_request_form_and_context_properties()", span="1274-1274"];
d896 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_body_request_form_and_context_properties()", label="var body = XmlBodyDeserializerFixture.ToXmlString(new TestModel { DateProperty = new DateTime(2012, 8, 16) })", span="1278-1278"];
d908 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_existing_instance_if_type_doesnt_match()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_existing_instance_if_type_doesnt_match()", span="1297-1297"];
d917 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_valuetype_from_body()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_valuetype_from_body()", span="1312-1312"];
d924 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_ienumerable_model__of_valuetype_from_body()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_ienumerable_model__of_valuetype_from_body()", span="1328-1328"];
d935 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.GetBinder(System.Collections.Generic.IEnumerable<Nancy.ModelBinding.ITypeConverter>, System.Collections.Generic.IEnumerable<Nancy.ModelBinding.IBodyDeserializer>, Nancy.ModelBinding.IFieldNameConverter, Nancy.ModelBinding.BindingDefaults)", label="return new DefaultBinder(converters, deserializers, converter, defaults);", span="1350-1350"];
d498 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_multiple_Form_properties_to_list()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_multiple_Form_properties_to_list()", span="573-573"];
d512 [cluster="Nancy.ModelBinding.DefaultConverters.CollectionConverter.CollectionConverter()", label="Entry Nancy.ModelBinding.DefaultConverters.CollectionConverter.CollectionConverter()", span="10-10"];
d515 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list()", span="596-596"];
d538 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_should_work_with_padded_zeros()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_should_work_with_padded_zeros()", span="627-627"];
d559 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_counting_from_1()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_counting_from_1()", span="657-657"];
d579 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_more_than_once_should_ignore_non_list_properties_when_binding_to_a_list()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_more_than_once_should_ignore_non_list_properties_when_binding_to_a_list()", span="687-687"];
d598 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_with_jagged_ids()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_with_jagged_ids()", span="719-719"];
d620 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form()", span="750-750"];
d629 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs()", span="768-768"];
d642 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs_using_brackets_and_specifying_an_instance()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs_using_brackets_and_specifying_an_instance()", span="791-791"];
d656 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs_using_brackets()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs_using_brackets()", span="814-814"];
d836 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_body_that_contains_an_array()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_body_that_contains_an_array()", span="1162-1162"];
d854 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_take_precedence_over_body_properties()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_take_precedence_over_body_properties()", span="1204-1204"];
d868 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_be_ignored_in_body_only_mode_when_there_is_a_body()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_be_ignored_in_body_only_mode_when_there_is_a_body()", span="1228-1228"];
d882 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_NOT_be_used_in_body_only_mode_if_there_is_no_body()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_NOT_be_used_in_body_only_mode_if_there_is_no_body()", span="1252-1252"];
d937 [cluster="Nancy.ModelBinding.DefaultConverters.DateTimeConverter.DateTimeConverter()", label="Entry Nancy.ModelBinding.DefaultConverters.DateTimeConverter.DateTimeConverter()", span="7-7"];
d938 [cluster="Nancy.ModelBinding.DefaultConverters.NumericConverter.NumericConverter()", label="Entry Nancy.ModelBinding.DefaultConverters.NumericConverter.NumericConverter()", span="8-8"];
d180 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_see_if_a_type_converter_is_available_for_each_property_on_the_model_where_incoming_value_exists()", label="context.Request.Form[''StringProperty''] = ''Test''", span="221-221"];
d218 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_properties_that_cannot_be_converted()", label="context.Request.Form[''StringProperty''] = ''Test''", span="257-257"];
d219 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_properties_that_cannot_be_converted()", label="context.Request.Form[''IntProperty''] = ''12''", span="258-258"];
d260 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_throw_ModelBindingException_if_convertion_of_property_fails_and_ignore_error_is_true()", label="context.Request.Form[''IntProperty''] = ''badint''", span="301-301"];
d261 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_throw_ModelBindingException_if_convertion_of_property_fails_and_ignore_error_is_true()", label="context.Request.Form[''AnotherIntProperty''] = ''morebad''", span="302-302"];
d273 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_set_remaining_properties_when_one_fails_and_ignore_error_is_enabled()", label="context.Request.Form[''IntProperty''] = ''badint''", span="317-317"];
d274 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_set_remaining_properties_when_one_fails_and_ignore_error_is_enabled()", label="context.Request.Form[''AnotherIntProperty''] = 10", span="318-318"];
d321 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_field_name_converter_for_each_field()", label="context.Request.Form[''StringProperty''] = ''Test''", span="379-379"];
d332 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist()", label="context.Request.Form[''StringProperty''] = ''Test''", span="396-396"];
d341 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist_when_the_blacklist_is_specified_by_expressions()", label="context.Request.Form[''StringProperty''] = ''Test''", span="413-413"];
d939 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.CreateContextWithHeader(string, System.Collections.Generic.IEnumerable<string>)", label="var header = new Dictionary<string, IEnumerable<string>>\r\n            {\r\n                { name, values }\r\n            }", span="1355-1358"];
d941 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.CreateContextWithHeader(string, System.Collections.Generic.IEnumerable<string>)", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.CreateContextWithHeader(string, System.Collections.Generic.IEnumerable<string>)", span="1353-1353"];
d943 [cluster="Nancy.Tests.Fakes.FakeRequest.FakeRequest(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", label="Entry Nancy.Tests.Fakes.FakeRequest.FakeRequest(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", span="13-13"];
d944 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.CreateContextWithHeaderAndBody(string, System.Collections.Generic.IEnumerable<string>, string)", label="var header = new Dictionary<string, IEnumerable<string>>\r\n            {\r\n                { name, values }\r\n            }", span="1369-1372"];
d946 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.CreateContextWithHeaderAndBody(string, System.Collections.Generic.IEnumerable<string>, string)", label="var bodyStream = RequestStream.FromStream(new MemoryStream(byteArray))", span="1375-1375"];
d948 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.CreateContextWithHeaderAndBody(string, System.Collections.Generic.IEnumerable<string>, string)", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.CreateContextWithHeaderAndBody(string, System.Collections.Generic.IEnumerable<string>, string)", span="1367-1367"];
d952 [cluster="Nancy.Tests.Fakes.FakeRequest.FakeRequest(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, Nancy.IO.RequestStream, string, string, string)", label="Entry Nancy.Tests.Fakes.FakeRequest.FakeRequest(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, Nancy.IO.RequestStream, string, string, string)", span="23-23"];
d32 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_type_converters_is_null()", label="var result = Record.Exception(() => new DefaultBinder(null, new IBodyDeserializer[] { }, A.Fake<IFieldNameConverter>(), new BindingDefaults()))", span="47-47"];
d54 [cluster="lambda expression", label="new DefaultBinder(new ITypeConverter[] { }, new IBodyDeserializer[] { }, null, new BindingDefaults())", span="67-67"];
d43 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_body_deserializers_is_null()", label="var result = Record.Exception(() => new DefaultBinder(new ITypeConverter[] { }, null, A.Fake<IFieldNameConverter>(), new BindingDefaults()))", span="57-57"];
d58 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_defaults_is_null()", label="var result = Record.Exception(() => new DefaultBinder(new ITypeConverter[] { }, new IBodyDeserializer[] { }, A.Fake<IFieldNameConverter>(), null))", span="77-77"];
d71 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_body_deserializer_if_one_matches()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_body_deserializer_if_one_matches()", span="84-84"];
d77 [cluster="lambda expression", label="Entry lambda expression", span="88-88"];
d961 [label=deserializer, span=""];
d79 [cluster="lambda expression", label="Exit lambda expression", span="88-88"];
d80 [cluster="Unk.CanDeserialize", label="Entry Unk.CanDeserialize", span=""];
d81 [cluster="lambda expression", label="Entry lambda expression", span="97-97"];
d83 [cluster="lambda expression", label="Exit lambda expression", span="97-97"];
d84 [cluster="Unk.Deserialize", label="Entry Unk.Deserialize", span=""];
d92 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_call_body_deserializer_if_doesnt_match()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_call_body_deserializer_if_doesnt_match()", span="102-102"];
d94 [cluster="lambda expression", label="Entry lambda expression", span="106-106"];
d962 [label=deserializer, span=""];
d96 [cluster="lambda expression", label="Exit lambda expression", span="106-106"];
d93 [cluster="Unk.MustNotHaveHappened", label="Entry Unk.MustNotHaveHappened", span=""];
d97 [cluster="lambda expression", label="Entry lambda expression", span="115-115"];
d99 [cluster="lambda expression", label="Exit lambda expression", span="115-115"];
d106 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_request_content_type_to_can_deserialize()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_request_content_type_to_can_deserialize()", span="120-120"];
d107 [cluster="lambda expression", label="Entry lambda expression", span="132-132"];
d963 [label=deserializer, span=""];
d109 [cluster="lambda expression", label="Exit lambda expression", span="132-132"];
d116 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_binding_context_to_can_deserialize()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_binding_context_to_can_deserialize()", span="137-137"];
d117 [cluster="lambda expression", label="Entry lambda expression", span="149-149"];
d964 [label=deserializer, span=""];
d119 [cluster="lambda expression", label="Exit lambda expression", span="149-149"];
d120 [cluster="Unk.IsNull", label="Entry Unk.IsNull", span=""];
d121 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned()", span="154-154"];
d135 [cluster="lambda expression", label="Entry lambda expression", span="159-159"];
d965 [label=deserializer, span=""];
d137 [cluster="lambda expression", label="Exit lambda expression", span="159-159"];
d138 [cluster="lambda expression", label="Entry lambda expression", span="160-160"];
d140 [cluster="lambda expression", label="Exit lambda expression", span="160-160"];
d141 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned_and_overwrite_when_allowed()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned_and_overwrite_when_allowed()", span="174-174"];
d152 [cluster="lambda expression", label="Entry lambda expression", span="179-179"];
d966 [label=deserializer, span=""];
d154 [cluster="lambda expression", label="Exit lambda expression", span="179-179"];
d155 [cluster="lambda expression", label="Entry lambda expression", span="180-180"];
d157 [cluster="lambda expression", label="Exit lambda expression", span="180-180"];
d158 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned_and_not_overwrite_when_not_allowed()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned_and_not_overwrite_when_not_allowed()", span="194-194"];
d169 [cluster="lambda expression", label="Entry lambda expression", span="199-199"];
d967 [label=deserializer, span=""];
d171 [cluster="lambda expression", label="Exit lambda expression", span="199-199"];
d172 [cluster="lambda expression", label="Entry lambda expression", span="200-200"];
d174 [cluster="lambda expression", label="Exit lambda expression", span="200-200"];
d184 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_see_if_a_type_converter_is_available_for_each_property_on_the_model_where_incoming_value_exists()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_see_if_a_type_converter_is_available_for_each_property_on_the_model_where_incoming_value_exists()", span="214-214"];
d188 [cluster="lambda expression", label="Entry lambda expression", span="218-218"];
d968 [label=typeConverter, span=""];
d190 [cluster="lambda expression", label="Exit lambda expression", span="218-218"];
d191 [cluster="Unk.CanConvertTo", label="Entry Unk.CanConvertTo", span=""];
d192 [cluster="lambda expression", label="Entry lambda expression", span="228-228"];
d194 [cluster="lambda expression", label="Exit lambda expression", span="228-228"];
d204 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_convert_on_type_converter_if_available()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_convert_on_type_converter_if_available()", span="233-233"];
d205 [cluster="lambda expression", label="Entry lambda expression", span="237-237"];
d969 [label=typeConverter, span=""];
d207 [cluster="lambda expression", label="Exit lambda expression", span="237-237"];
d208 [cluster="lambda expression", label="Entry lambda expression", span="238-238"];
d210 [cluster="lambda expression", label="Exit lambda expression", span="238-238"];
d211 [cluster="Unk.Convert", label="Entry Unk.Convert", span=""];
d212 [cluster="lambda expression", label="Entry lambda expression", span="247-247"];
d214 [cluster="lambda expression", label="Exit lambda expression", span="247-247"];
d291 [cluster="lambda expression", label="Entry lambda expression", span="338-338"];
d976 [label=deserializer, span=""];
d293 [cluster="lambda expression", label="Exit lambda expression", span="338-338"];
d290 [cluster="Unk.Invokes", label="Entry Unk.Invokes", span=""];
d294 [cluster="lambda expression", label="Entry lambda expression", span="339-339"];
d296 [cluster="lambda expression", label="Exit lambda expression", span="339-339"];
d311 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_binding_context_to_default_deserializer()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_binding_context_to_default_deserializer()", span="356-356"];
d315 [cluster="lambda expression", label="Entry lambda expression", span="369-369"];
d977 [label=deserializer, span=""];
d317 [cluster="lambda expression", label="Exit lambda expression", span="369-369"];
d352 [cluster="lambda expression", label="Entry lambda expression", span="418-418"];
d978 [label=fakeModule, span=""];
d354 [cluster="lambda expression", label="Exit lambda expression", span="418-418"];
d355 [cluster="lambda expression", label="Entry lambda expression", span="419-419"];
d357 [cluster="lambda expression", label="Exit lambda expression", span="419-419"];
d358 [cluster="lambda expression", label="Entry lambda expression", span="420-420"];
d979 [label=context, span=""];
d980 [label=fakeModelBinderLocator, span=""];
d360 [cluster="lambda expression", label="Exit lambda expression", span="420-420"];
d361 [cluster="Unk.GetBinderForType", label="Entry Unk.GetBinderForType", span=""];
d134 [cluster="object.ShouldEqual(object)", label="Entry object.ShouldEqual(object)", span="95-95"];
d364 [cluster="lambda expression", label="Exit lambda expression", span="423-423"];
d363 [cluster="lambda expression", label="tm.IntProperty", span="423-423"];
d351 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist_when_the_blacklist_is_specified_by_expressions()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist_when_the_blacklist_is_specified_by_expressions()", span="408-408"];
d373 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_body_deserializer_if_one_found()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_body_deserializer_if_one_found()", span="431-431"];
d374 [cluster="lambda expression", label="Entry lambda expression", span="435-435"];
d981 [label=deserializer, span=""];
d376 [cluster="lambda expression", label="Exit lambda expression", span="435-435"];
d380 [cluster="lambda expression", label="Entry lambda expression", span="445-445"];
d382 [cluster="lambda expression", label="Exit lambda expression", span="445-445"];
d393 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_type_converter_if_one_found()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_type_converter_if_one_found()", span="450-450"];
d394 [cluster="lambda expression", label="Entry lambda expression", span="454-454"];
d982 [label=typeConverter, span=""];
d396 [cluster="lambda expression", label="Exit lambda expression", span="454-454"];
d397 [cluster="lambda expression", label="Entry lambda expression", span="455-455"];
d399 [cluster="lambda expression", label="Exit lambda expression", span="455-455"];
d403 [cluster="lambda expression", label="Entry lambda expression", span="465-465"];
d405 [cluster="lambda expression", label="Exit lambda expression", span="465-465"];
d417 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_body_serializer_should_take_precedence_over_default_one()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_body_serializer_should_take_precedence_over_default_one()", span="470-470"];
d418 [cluster="lambda expression", label="Entry lambda expression", span="474-474"];
d983 [label=userDeserializer, span=""];
d420 [cluster="lambda expression", label="Exit lambda expression", span="474-474"];
d427 [cluster="lambda expression", label="Entry lambda expression", span="488-488"];
d429 [cluster="lambda expression", label="Exit lambda expression", span="488-488"];
d421 [cluster="lambda expression", label="Entry lambda expression", span="477-477"];
d984 [label=defaultDeserializer, span=""];
d423 [cluster="lambda expression", label="Exit lambda expression", span="477-477"];
d430 [cluster="lambda expression", label="Entry lambda expression", span="490-490"];
d432 [cluster="lambda expression", label="Exit lambda expression", span="490-490"];
d447 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", span="495-495"];
d448 [cluster="lambda expression", label="Entry lambda expression", span="499-499"];
d985 [label=userTypeConverter, span=""];
d450 [cluster="lambda expression", label="Exit lambda expression", span="499-499"];
d451 [cluster="lambda expression", label="Entry lambda expression", span="500-500"];
d453 [cluster="lambda expression", label="Exit lambda expression", span="500-500"];
d463 [cluster="lambda expression", label="Entry lambda expression", span="513-513"];
d465 [cluster="lambda expression", label="Exit lambda expression", span="513-513"];
d454 [cluster="lambda expression", label="Entry lambda expression", span="502-502"];
d986 [label=defaultTypeConverter, span=""];
d456 [cluster="lambda expression", label="Exit lambda expression", span="502-502"];
d457 [cluster="lambda expression", label="Entry lambda expression", span="503-503"];
d459 [cluster="lambda expression", label="Exit lambda expression", span="503-503"];
d466 [cluster="lambda expression", label="Entry lambda expression", span="515-515"];
d468 [cluster="lambda expression", label="Exit lambda expression", span="515-515"];
d73 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.CreateContextWithHeader(string, System.Collections.Generic.IEnumerable<string>)", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.CreateContextWithHeader(string, System.Collections.Generic.IEnumerable<string>)", span="1353-1353"];
d133 [cluster="object.ShouldBeOfType<T>()", label="Entry object.ShouldBeOfType<T>()", span="150-150"];
d131 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned()", span="154-154"];
d151 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned_and_overwrite_when_allowed()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned_and_overwrite_when_allowed()", span="174-174"];
d168 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned_and_not_overwrite_when_not_allowed()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned_and_not_overwrite_when_not_allowed()", span="194-194"];
d225 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_properties_that_cannot_be_converted()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_properties_that_cannot_be_converted()", span="252-252"];
d228 [cluster="System.DateTime.ShouldEqual(System.DateTime)", label="Entry System.DateTime.ShouldEqual(System.DateTime)", span="100-100"];
d278 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_set_remaining_properties_when_one_fails_and_ignore_error_is_enabled()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_set_remaining_properties_when_one_fails_and_ignore_error_is_enabled()", span="312-312"];
d289 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_indexer_properties()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_indexer_properties()", span="330-330"];
d337 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist()", span="391-391"];
d472 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_request()", label="context.Request.Query[''StringProperty''] = ''Test''", span="525-525"];
d477 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_request()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_request()", span="520-520"];
d481 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_context_parameters()", label="context.Parameters[''StringProperty''] = ''Test''", span="542-542"];
d486 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_context_parameters()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_context_parameters()", span="537-537"];
d490 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_properties_should_take_precendence_over_request_properties()", label="context.Request.Form[''StringProperty''] = ''Test''", span="559-559"];
d491 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_properties_should_take_precendence_over_request_properties()", label="context.Request.Form[''IntProperty''] = ''3''", span="560-560"];
d492 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_properties_should_take_precendence_over_request_properties()", label="context.Request.Query[''StringProperty''] = ''Test2''", span="561-561"];
d497 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_properties_should_take_precendence_over_request_properties()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_properties_should_take_precendence_over_request_properties()", span="554-554"];
d502 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_multiple_Form_properties_to_list()", label="context.Request.Form[''StringProperty_0''] = ''Test''", span="580-580"];
d503 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_multiple_Form_properties_to_list()", label="context.Request.Form[''IntProperty_0''] = ''1''", span="581-581"];
d504 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_multiple_Form_properties_to_list()", label="context.Request.Form[''StringProperty_1''] = ''Test2''", span="582-582"];
d513 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
d514 [cluster="System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", span="0-0"];
d511 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_multiple_Form_properties_to_list()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_multiple_Form_properties_to_list()", span="573-573"];
d519 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list()", label="context.Request.Form[''IntProperty_0''] = ''1''", span="603-603"];
d520 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list()", label="context.Request.Form[''IntProperty_01''] = ''2''", span="604-604"];
d521 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list()", label="context.Request.Form[''IntProperty_02''] = ''3''", span="605-605"];
d522 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list()", label="context.Request.Form[''IntProperty_03''] = ''4''", span="606-606"];
d523 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list()", label="context.Request.Form[''IntProperty_04''] = ''5''", span="607-607"];
d524 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list()", label="context.Request.Form[''IntProperty_05''] = ''6''", span="608-608"];
d525 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list()", label="context.Request.Form[''IntProperty_06''] = ''7''", span="609-609"];
d526 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list()", label="context.Request.Form[''IntProperty_07''] = ''8''", span="610-610"];
d527 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list()", label="context.Request.Form[''IntProperty_08''] = ''9''", span="611-611"];
d528 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list()", label="context.Request.Form[''IntProperty_09''] = ''10''", span="612-612"];
d529 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list()", label="context.Request.Form[''IntProperty_10''] = ''11''", span="613-613"];
d530 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list()", label="context.Request.Form[''IntProperty_11''] = ''12''", span="614-614"];
d537 [cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0"];
d536 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list()", span="596-596"];
d542 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_should_work_with_padded_zeros()", label="context.Request.Form[''IntProperty_00''] = ''1''", span="634-634"];
d543 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_should_work_with_padded_zeros()", label="context.Request.Form[''IntProperty_01''] = ''2''", span="635-635"];
d544 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_should_work_with_padded_zeros()", label="context.Request.Form[''IntProperty_02''] = ''3''", span="636-636"];
d545 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_should_work_with_padded_zeros()", label="context.Request.Form[''IntProperty_03''] = ''4''", span="637-637"];
d546 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_should_work_with_padded_zeros()", label="context.Request.Form[''IntProperty_04''] = ''5''", span="638-638"];
d547 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_should_work_with_padded_zeros()", label="context.Request.Form[''IntProperty_05''] = ''6''", span="639-639"];
d548 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_should_work_with_padded_zeros()", label="context.Request.Form[''IntProperty_06''] = ''7''", span="640-640"];
d549 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_should_work_with_padded_zeros()", label="context.Request.Form[''IntProperty_07''] = ''8''", span="641-641"];
d550 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_should_work_with_padded_zeros()", label="context.Request.Form[''IntProperty_08''] = ''9''", span="642-642"];
d551 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_should_work_with_padded_zeros()", label="context.Request.Form[''IntProperty_09''] = ''10''", span="643-643"];
d552 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_should_work_with_padded_zeros()", label="context.Request.Form[''IntProperty_10''] = ''11''", span="644-644"];
d553 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_should_work_with_padded_zeros()", label="context.Request.Form[''IntProperty_11''] = ''12''", span="645-645"];
d558 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_should_work_with_padded_zeros()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_should_work_with_padded_zeros()", span="627-627"];
d563 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_counting_from_1()", label="context.Request.Form[''IntProperty_01''] = ''1''", span="664-664"];
d564 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_counting_from_1()", label="context.Request.Form[''IntProperty_02''] = ''2''", span="665-665"];
d565 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_counting_from_1()", label="context.Request.Form[''IntProperty_03''] = ''3''", span="666-666"];
d566 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_counting_from_1()", label="context.Request.Form[''IntProperty_04''] = ''4''", span="667-667"];
d567 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_counting_from_1()", label="context.Request.Form[''IntProperty_05''] = ''5''", span="668-668"];
d568 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_counting_from_1()", label="context.Request.Form[''IntProperty_06''] = ''6''", span="669-669"];
d569 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_counting_from_1()", label="context.Request.Form[''IntProperty_07''] = ''7''", span="670-670"];
d570 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_counting_from_1()", label="context.Request.Form[''IntProperty_08''] = ''8''", span="671-671"];
d571 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_counting_from_1()", label="context.Request.Form[''IntProperty_09''] = ''9''", span="672-672"];
d572 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_counting_from_1()", label="context.Request.Form[''IntProperty_10''] = ''10''", span="673-673"];
d573 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_counting_from_1()", label="context.Request.Form[''IntProperty_11''] = ''11''", span="674-674"];
d578 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_counting_from_1()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_counting_from_1()", span="657-657"];
d583 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_more_than_once_should_ignore_non_list_properties_when_binding_to_a_list()", label="context.Request.Form[''StringProperty''] = ''Test''", span="695-695"];
d584 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_more_than_once_should_ignore_non_list_properties_when_binding_to_a_list()", label="context.Request.Form[''IntProperty''] = ''3''", span="696-696"];
d585 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_more_than_once_should_ignore_non_list_properties_when_binding_to_a_list()", label="context.Request.Form[''NestedIntProperty[0]''] = ''1''", span="698-698"];
d586 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_more_than_once_should_ignore_non_list_properties_when_binding_to_a_list()", label="context.Request.Form[''NestedStringProperty[0]''] = ''one''", span="699-699"];
d587 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_more_than_once_should_ignore_non_list_properties_when_binding_to_a_list()", label="context.Request.Form[''NestedIntProperty[1]''] = ''2''", span="701-701"];
d597 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_more_than_once_should_ignore_non_list_properties_when_binding_to_a_list()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_more_than_once_should_ignore_non_list_properties_when_binding_to_a_list()", span="687-687"];
d602 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_with_jagged_ids()", label="context.Request.Form[''IntProperty_01''] = ''1''", span="726-726"];
d603 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_with_jagged_ids()", label="context.Request.Form[''IntProperty_04''] = ''2''", span="727-727"];
d604 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_with_jagged_ids()", label="context.Request.Form[''IntProperty_05''] = ''3''", span="728-728"];
d605 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_with_jagged_ids()", label="context.Request.Form[''IntProperty_06''] = ''4''", span="729-729"];
d606 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_with_jagged_ids()", label="context.Request.Form[''IntProperty_09''] = ''5''", span="730-730"];
d607 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_with_jagged_ids()", label="context.Request.Form[''IntProperty_11''] = ''6''", span="731-731"];
d608 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_with_jagged_ids()", label="context.Request.Form[''IntProperty_57''] = ''7''", span="732-732"];
d609 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_with_jagged_ids()", label="context.Request.Form[''IntProperty_199''] = ''8''", span="733-733"];
d610 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_with_jagged_ids()", label="context.Request.Form[''IntProperty_1599''] = ''9''", span="734-734"];
d611 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_with_jagged_ids()", label="context.Request.Form[''StringProperty_1599''] = ''nine''", span="735-735"];
d612 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_with_jagged_ids()", label="context.Request.Form[''IntProperty_233''] = ''10''", span="736-736"];
d613 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_with_jagged_ids()", label="context.Request.Form[''IntProperty_14''] = ''11''", span="737-737"];
d619 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_with_jagged_ids()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_with_jagged_ids()", span="719-719"];
d627 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form()", span="750-750"];
d628 [cluster="System.Collections.Generic.IEnumerable<T>.ShouldHaveCount<T>(int)", label="Entry System.Collections.Generic.IEnumerable<T>.ShouldHaveCount<T>(int)", span="80-80"];
d633 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs()", label="context.Request.Form[''IntValues_0''] = ''1,2,3,4''", span="776-776"];
d641 [cluster="System.Collections.Generic.IEnumerable<T>.ShouldEqualSequence<T>(System.Collections.Generic.IEnumerable<T>)", label="Entry System.Collections.Generic.IEnumerable<T>.ShouldEqualSequence<T>(System.Collections.Generic.IEnumerable<T>)", span="110-110"];
d640 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs()", span="768-768"];
d646 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs_using_brackets_and_specifying_an_instance()", label="context.Request.Form[''IntValues[0]''] = ''1,2,3,4''", span="799-799"];
d954 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.TestModel.TestModel()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.TestModel.TestModel()", span="1386-1386"];
d953 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.TestModel.TestModel()", label="this.StringPropertyWithDefaultValue = ''Default Value''", span="1388-1388"];
d956 [cluster="Nancy.Tests.Unit.ModelBinding.BindingConfigFixture.Should_allow_overwrite_on_new_instance()", label="var instance = new BindingConfig()", span="1434-1434"];
d654 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs_using_brackets_and_specifying_an_instance()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs_using_brackets_and_specifying_an_instance()", span="791-791"];
d660 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs_using_brackets()", label="context.Request.Form[''IntValues[0]''] = ''1,2,3,4''", span="822-822"];
d667 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs_using_brackets()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs_using_brackets()", span="814-814"];
d671 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_properties_should_take_precendence_over_request_properties_and_context_properties()", label="context.Request.Form[''StringProperty''] = ''Test''", span="842-842"];
d672 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_properties_should_take_precendence_over_request_properties_and_context_properties()", label="context.Request.Form[''IntProperty''] = ''3''", span="843-843"];
d673 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_properties_should_take_precendence_over_request_properties_and_context_properties()", label="context.Request.Query[''StringProperty''] = ''Test2''", span="844-844"];
d674 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_properties_should_take_precendence_over_request_properties_and_context_properties()", label="context.Request.Query[''IntProperty''] = ''1''", span="845-845"];
d675 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_properties_should_take_precendence_over_request_properties_and_context_properties()", label="context.Parameters[''StringProperty''] = ''Test3''", span="846-846"];
d680 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_properties_should_take_precendence_over_request_properties_and_context_properties()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_properties_should_take_precendence_over_request_properties_and_context_properties()", span="836-836"];
d684 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Request_properties_should_take_precendence_over_context_properties()", label="context.Request.Query[''StringProperty''] = ''Test''", span="864-864"];
d685 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Request_properties_should_take_precendence_over_context_properties()", label="context.Request.Query[''IntProperty''] = ''12''", span="865-865"];
d686 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Request_properties_should_take_precendence_over_context_properties()", label="context.Parameters[''StringProperty''] = ''Test2''", span="866-866"];
d691 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Request_properties_should_take_precendence_over_context_properties()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Request_properties_should_take_precendence_over_context_properties()", span="857-857"];
d695 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_from_form_and_request_simultaneously()", label="context.Request.Form[''StringProperty''] = ''Test''", span="883-883"];
d700 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_from_form_and_request_simultaneously()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_from_form_and_request_simultaneously()", span="877-877"];
d704 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_culturally_aware_form_properties_if_numeric(string, double)", label="context.Culture = new CultureInfo(culture)", span="907-907"];
d708 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_culturally_aware_form_properties_if_numeric(string, double)", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_culturally_aware_form_properties_if_numeric(string, double)", span="901-901"];
d713 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_culturally_aware_form_properties_if_datetime(string, int, int, int, string)", label="context.Culture = new CultureInfo(culture)", span="932-932"];
d719 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_culturally_aware_form_properties_if_datetime(string, int, int, int, string)", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_culturally_aware_form_properties_if_datetime(string, int, int, int, string)", span="926-926"];
d723 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_from_request_and_context_simultaneously()", label="context.Request.Query[''StringProperty''] = ''Test''", span="951-951"];
d728 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_from_request_and_context_simultaneously()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_from_request_and_context_simultaneously()", span="945-945"];
d733 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_overwrite_nullable_property_if_already_set_and_overwriting_is_not_allowed()", label="context.Request.Query[''StringProperty''] = ''Test''", span="971-971"];
d734 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_overwrite_nullable_property_if_already_set_and_overwriting_is_not_allowed()", label="context.Request.Query[''IntProperty''] = ''12''", span="972-972"];
d735 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_overwrite_nullable_property_if_already_set_and_overwriting_is_not_allowed()", label="context.Parameters[''StringProperty''] = ''Test2''", span="973-973"];
d740 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_overwrite_nullable_property_if_already_set_and_overwriting_is_not_allowed()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_overwrite_nullable_property_if_already_set_and_overwriting_is_not_allowed()", span="963-963"];
d745 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_overwrite_non_nullable_property_if_already_set_and_overwriting_is_not_allowed()", label="context.Request.Query[''StringProperty''] = ''Test''", span="993-993"];
d746 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_overwrite_non_nullable_property_if_already_set_and_overwriting_is_not_allowed()", label="context.Request.Query[''IntProperty''] = ''12''", span="994-994"];
d747 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_overwrite_non_nullable_property_if_already_set_and_overwriting_is_not_allowed()", label="context.Parameters[''StringProperty''] = ''Test2''", span="995-995"];
d752 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_overwrite_non_nullable_property_if_already_set_and_overwriting_is_not_allowed()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_overwrite_non_nullable_property_if_already_set_and_overwriting_is_not_allowed()", span="985-985"];
d757 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_overwrite_nullable_property_if_already_set_and_overwriting_is_allowed()", label="context.Parameters[''StringProperty''] = ''Test2''", span="1015-1015"];
d762 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_overwrite_nullable_property_if_already_set_and_overwriting_is_allowed()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_overwrite_nullable_property_if_already_set_and_overwriting_is_allowed()", span="1007-1007"];
d767 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_overwrite_non_nullable_property_if_already_set_and_overwriting_is_allowed()", label="context.Parameters[''StringProperty''] = ''Test2''", span="1035-1035"];
d772 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_overwrite_non_nullable_property_if_already_set_and_overwriting_is_allowed()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_overwrite_non_nullable_property_if_already_set_and_overwriting_is_allowed()", span="1027-1027"];
d780 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_list_model_from_body()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_list_model_from_body()", span="1047-1047"];
d792 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_array_model_from_body()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_array_model_from_body()", span="1065-1065"];
d800 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_string_array_model_from_body()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_string_array_model_from_body()", span="1082-1082"];
d810 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_ienumerable_model_from_body()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_ienumerable_model_from_body()", span="1099-1099"];
d815 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_ienumerable_model_with_instance_from_body()", label="var then = DateTime.Now", span="1125-1125"];
d823 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_ienumerable_model_with_instance_from_body()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_ienumerable_model_with_instance_from_body()", span="1117-1117"];
d828 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_with_instance_from_body()", label="var then = DateTime.Now", span="1148-1148"];
d835 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_with_instance_from_body()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_with_instance_from_body()", span="1140-1140"];
d844 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_body_that_contains_an_array()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_body_that_contains_an_array()", span="1162-1162"];
d853 [cluster="object.ShouldBeNull()", label="Entry object.ShouldBeNull()", span="135-135"];
d852 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_array_model_from_body_that_contains_an_array()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_array_model_from_body_that_contains_an_array()", span="1181-1181"];
d860 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_take_precedence_over_body_properties()", label="context.Request.Form[''StringProperty''] = ''From form''", span="1214-1214"];
d861 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_take_precedence_over_body_properties()", label="context.Request.Query[''IntProperty''] = ''1''", span="1215-1215"];
d867 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_take_precedence_over_body_properties()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_take_precedence_over_body_properties()", span="1204-1204"];
d874 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_be_ignored_in_body_only_mode_when_there_is_a_body()", label="context.Request.Form[''StringProperty''] = ''From form''", span="1238-1238"];
d875 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_be_ignored_in_body_only_mode_when_there_is_a_body()", label="context.Request.Query[''IntProperty''] = ''1''", span="1239-1239"];
d881 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_be_ignored_in_body_only_mode_when_there_is_a_body()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_be_ignored_in_body_only_mode_when_there_is_a_body()", span="1228-1228"];
d886 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_NOT_be_used_in_body_only_mode_if_there_is_no_body()", label="context.Request.Form[''StringProperty''] = ''From form''", span="1259-1259"];
d887 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_NOT_be_used_in_body_only_mode_if_there_is_no_body()", label="context.Request.Query[''IntProperty''] = ''1''", span="1260-1260"];
d893 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_NOT_be_used_in_body_only_mode_if_there_is_no_body()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_NOT_be_used_in_body_only_mode_if_there_is_no_body()", span="1252-1252"];
d898 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_body_request_form_and_context_properties()", label="context.Request.Form[''IntProperty''] = ''0''", span="1282-1282"];
d899 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_body_request_form_and_context_properties()", label="context.Request.Query[''StringProperty''] = ''From Query''", span="1283-1283"];
d907 [cluster="System.DateTime.DateTime(int, int, int)", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
d906 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_body_request_form_and_context_properties()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_body_request_form_and_context_properties()", span="1274-1274"];
d915 [cluster="object.Object()", label="Entry object.Object()", span="0-0"];
d914 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_existing_instance_if_type_doesnt_match()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_existing_instance_if_type_doesnt_match()", span="1297-1297"];
d916 [cluster="object.ShouldNotBeSameAs(object)", label="Entry object.ShouldNotBeSameAs(object)", span="125-125"];
d923 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_valuetype_from_body()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_valuetype_from_body()", span="1312-1312"];
d930 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_ienumerable_model__of_valuetype_from_body()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_ienumerable_model__of_valuetype_from_body()", span="1328-1328"];
d24 [cluster="lambda expression", label="Exit lambda expression", span="33-33"];
d23 [cluster="lambda expression", label="(string)f.Arguments[0]", span="33-33"];
d264 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_throw_ModelBindingException_if_convertion_of_property_fails_and_ignore_error_is_true()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_throw_ModelBindingException_if_convertion_of_property_fails_and_ignore_error_is_true()", span="296-296"];
d266 [cluster="Unk.DoesNotThrow", label="Entry Unk.DoesNotThrow", span=""];
d783 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBodyDeserializers.XmlBodyDeserializerFixture.ToXmlString<T>(T)", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBodyDeserializers.XmlBodyDeserializerFixture.ToXmlString<T>(T)", span="97-97"];
d945 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.CreateContextWithHeaderAndBody(string, System.Collections.Generic.IEnumerable<string>, string)", label="byte[] byteArray = Encoding.UTF8.GetBytes(body)", span="1374-1374"];
d56 [cluster="Nancy.ModelBinding.DefaultBinder.DefaultBinder(System.Collections.Generic.IEnumerable<Nancy.ModelBinding.ITypeConverter>, System.Collections.Generic.IEnumerable<Nancy.ModelBinding.IBodyDeserializer>, Nancy.ModelBinding.IFieldNameConverter, Nancy.ModelBinding.BindingDefaults)", label="Entry Nancy.ModelBinding.DefaultBinder.DefaultBinder(System.Collections.Generic.IEnumerable<Nancy.ModelBinding.ITypeConverter>, System.Collections.Generic.IEnumerable<Nancy.ModelBinding.IBodyDeserializer>, Nancy.ModelBinding.IFieldNameConverter, Nancy.ModelBinding.BindingDefaults)", span="31-31"];
d942 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
d950 [cluster="System.IO.MemoryStream.MemoryStream(byte[])", label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0"];
d951 [cluster="Nancy.IO.RequestStream.FromStream(System.IO.Stream)", label="Entry Nancy.IO.RequestStream.FromStream(System.IO.Stream)", span="258-258"];
d31 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_type_converters_is_null()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_type_converters_is_null()", span="44-44"];
d33 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_type_converters_is_null()", label="result.ShouldBeOfType(typeof(ArgumentNullException))", span="50-50"];
d35 [cluster="Unk.Exception", label="Entry Unk.Exception", span=""];
d53 [cluster="lambda expression", label="Entry lambda expression", span="67-67"];
d55 [cluster="lambda expression", label="Exit lambda expression", span="67-67"];
d42 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_body_deserializers_is_null()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_body_deserializers_is_null()", span="54-54"];
d44 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_body_deserializers_is_null()", label="result.ShouldBeOfType(typeof(ArgumentNullException))", span="60-60"];
d57 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_defaults_is_null()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_defaults_is_null()", span="74-74"];
d59 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_defaults_is_null()", label="result.ShouldBeOfType(typeof(ArgumentNullException))", span="80-80"];
d987 [label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.TestModel", span=""];
d955 [cluster="Nancy.Tests.Unit.ModelBinding.BindingConfigFixture.Should_allow_overwrite_on_new_instance()", label="Entry Nancy.Tests.Unit.ModelBinding.BindingConfigFixture.Should_allow_overwrite_on_new_instance()", span="1430-1430"];
d957 [cluster="Nancy.Tests.Unit.ModelBinding.BindingConfigFixture.Should_allow_overwrite_on_new_instance()", label="instance.Overwrite.ShouldBeTrue()", span="1437-1437"];
d709 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
d949 [cluster="System.Text.Encoding.GetBytes(string)", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
d34 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_type_converters_is_null()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_type_converters_is_null()", span="44-44"];
d36 [cluster="Unk.ShouldBeOfType", label="Entry Unk.ShouldBeOfType", span=""];
d50 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_field_name_converter_is_null()", label="var result = Record.Exception(() => new DefaultBinder(new ITypeConverter[] { }, new IBodyDeserializer[] { }, null, new BindingDefaults()))", span="67-67"];
d45 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_body_deserializers_is_null()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_body_deserializers_is_null()", span="54-54"];
d60 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_defaults_is_null()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_defaults_is_null()", span="74-74"];
d958 [cluster="Nancy.Tests.Unit.ModelBinding.BindingConfigFixture.Should_allow_overwrite_on_new_instance()", label="Exit Nancy.Tests.Unit.ModelBinding.BindingConfigFixture.Should_allow_overwrite_on_new_instance()", span="1430-1430"];
d959 [cluster="bool.ShouldBeTrue()", label="Entry bool.ShouldBeTrue()", span="85-85"];
d51 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_field_name_converter_is_null()", label="result.ShouldBeOfType(typeof(ArgumentNullException))", span="70-70"];
d49 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_field_name_converter_is_null()", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_field_name_converter_is_null()", span="64-64"];
d52 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_field_name_converter_is_null()", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_field_name_converter_is_null()", span="64-64"];
n0 -> n3  [color=darkseagreen4, key=1, label=string, style=dashed];
d235 -> d238  [color=green, key=1, label="lambda expression", style=dashed];
d235 -> d241  [color=green, key=1, label="lambda expression", style=dashed];
d230 -> d235  [color=green, key=1, label=binder, style=dashed];
d230 -> d239  [color=green, key=1, label=binder, style=dashed];
d231 -> d235  [color=green, key=1, label=context, style=dashed];
d231 -> d239  [color=green, key=1, label=context, style=dashed];
d234 -> d239  [color=green, key=1, label=modelType, style=dashed];
d234 -> d242  [color=green, key=1, label=modelType, style=dashed];
d234 -> d253  [color=green, key=1, label=modelType, style=dashed];
d970 -> d239  [color=green, key=1, label=binder, style=dashed];
d971 -> d239  [color=green, key=1, label=context, style=dashed];
d972 -> d239  [color=green, key=1, label=modelType, style=dashed];
d972 -> d242  [color=green, key=1, label=modelType, style=dashed];
d972 -> d253  [color=green, key=1, label=modelType, style=dashed];
d242 -> d246  [color=green, key=1, label="lambda expression", style=dashed];
d242 -> d249  [color=green, key=1, label="lambda expression", style=dashed];
d242 -> d252  [color=green, key=1, label="lambda expression", style=dashed];
d960 -> d3  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
d960 -> d19  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
d960 -> d5  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
d960 -> d26  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
d960 -> d6  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
d960 -> d29  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
d960 -> d8  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
d960 -> d69  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
d960 -> d90  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
d960 -> d104  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
d960 -> d114  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
d960 -> d286  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
d960 -> d302  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
d960 -> d308  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
d960 -> d313  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
d960 -> d309  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
d960 -> d324  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
d960 -> d327  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
d960 -> d368  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
d960 -> d378  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
d960 -> d371  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
d960 -> d387  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
d960 -> d401  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
d960 -> d411  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
d960 -> d425  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
d960 -> d414  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
d960 -> d440  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
d960 -> d461  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
d65 -> d78  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
d65 -> d70  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
d65 -> d82  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
d86 -> d95  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
d86 -> d91  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
d86 -> d98  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
d101 -> d105  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
d101 -> d108  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
d111 -> d115  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
d111 -> d118  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
d123 -> d136  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
d123 -> d125  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
d123 -> d139  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
d143 -> d153  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
d143 -> d145  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
d143 -> d156  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
d160 -> d170  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
d160 -> d162  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
d160 -> d173  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
d176 -> d189  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
d176 -> d183  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
d176 -> d193  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
d196 -> d206  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
d196 -> d198  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
d196 -> d209  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
d196 -> d203  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
d196 -> d213  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
d283 -> d292  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
d283 -> d295  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
d283 -> d286  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
d305 -> d308  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
d305 -> d310  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
d305 -> d316  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
d343 -> d345  [color=darkseagreen4, key=1, label=fakeModule, style=dashed];
d343 -> d353  [color=darkseagreen4, key=1, label=fakeModule, style=dashed];
d343 -> d346  [color=darkseagreen4, key=1, label=fakeModule, style=dashed];
d343 -> d356  [color=darkseagreen4, key=1, label=fakeModule, style=dashed];
d344 -> d346  [color=darkseagreen4, key=1, label=fakeModelBinderLocator, style=dashed];
d344 -> d347  [color=darkseagreen4, key=1, label=fakeModelBinderLocator, style=dashed];
d344 -> d359  [color=darkseagreen4, key=1, label=fakeModelBinderLocator, style=dashed];
d348 -> d362  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d348 -> d350  [color=darkseagreen4, key=1, label=result, style=dashed];
d366 -> d375  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
d366 -> d368  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
d366 -> d372  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
d366 -> d381  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
d384 -> d395  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
d384 -> d386  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
d384 -> d398  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
d384 -> d387  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
d384 -> d392  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
d384 -> d404  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
d407 -> d419  [color=darkseagreen4, key=1, label=userDeserializer, style=dashed];
d407 -> d415  [color=darkseagreen4, key=1, label=userDeserializer, style=dashed];
d407 -> d428  [color=darkseagreen4, key=1, label=userDeserializer, style=dashed];
d409 -> d422  [color=darkseagreen4, key=1, label=defaultDeserializer, style=dashed];
d409 -> d411  [color=darkseagreen4, key=1, label=defaultDeserializer, style=dashed];
d409 -> d416  [color=darkseagreen4, key=1, label=defaultDeserializer, style=dashed];
d409 -> d431  [color=darkseagreen4, key=1, label=defaultDeserializer, style=dashed];
d434 -> d449  [color=darkseagreen4, key=1, label=userTypeConverter, style=dashed];
d434 -> d436  [color=darkseagreen4, key=1, label=userTypeConverter, style=dashed];
d434 -> d452  [color=darkseagreen4, key=1, label=userTypeConverter, style=dashed];
d434 -> d445  [color=darkseagreen4, key=1, label=userTypeConverter, style=dashed];
d434 -> d464  [color=darkseagreen4, key=1, label=userTypeConverter, style=dashed];
d437 -> d455  [color=darkseagreen4, key=1, label=defaultTypeConverter, style=dashed];
d437 -> d439  [color=darkseagreen4, key=1, label=defaultTypeConverter, style=dashed];
d437 -> d458  [color=darkseagreen4, key=1, label=defaultTypeConverter, style=dashed];
d437 -> d440  [color=darkseagreen4, key=1, label=defaultTypeConverter, style=dashed];
d437 -> d446  [color=darkseagreen4, key=1, label=defaultTypeConverter, style=dashed];
d437 -> d467  [color=darkseagreen4, key=1, label=defaultTypeConverter, style=dashed];
d128 -> d130  [color=darkseagreen4, key=1, label=result, style=dashed];
d148 -> d150  [color=darkseagreen4, key=1, label=result, style=dashed];
d165 -> d167  [color=darkseagreen4, key=1, label=result, style=dashed];
d221 -> d223  [color=darkseagreen4, key=1, label=result, style=dashed];
d221 -> d224  [color=darkseagreen4, key=1, label=result, style=dashed];
d334 -> d336  [color=darkseagreen4, key=1, label=result, style=dashed];
d474 -> d476  [color=darkseagreen4, key=1, label=result, style=dashed];
d483 -> d485  [color=darkseagreen4, key=1, label=result, style=dashed];
d494 -> d496  [color=darkseagreen4, key=1, label=result, style=dashed];
d506 -> d508  [color=darkseagreen4, key=1, label=result, style=dashed];
d506 -> d509  [color=darkseagreen4, key=1, label=result, style=dashed];
d506 -> d510  [color=darkseagreen4, key=1, label=result, style=dashed];
d532 -> d534  [color=darkseagreen4, key=1, label=result, style=dashed];
d532 -> d535  [color=darkseagreen4, key=1, label=result, style=dashed];
d555 -> d557  [color=darkseagreen4, key=1, label=result, style=dashed];
d575 -> d577  [color=darkseagreen4, key=1, label=result, style=dashed];
d589 -> d591  [color=darkseagreen4, key=1, label=result, style=dashed];
d589 -> d592  [color=darkseagreen4, key=1, label=result, style=dashed];
d590 -> d593  [color=darkseagreen4, key=1, label=result2, style=dashed];
d590 -> d594  [color=darkseagreen4, key=1, label=result2, style=dashed];
d590 -> d595  [color=darkseagreen4, key=1, label=result2, style=dashed];
d590 -> d596  [color=darkseagreen4, key=1, label=result2, style=dashed];
d615 -> d617  [color=darkseagreen4, key=1, label=result, style=dashed];
d615 -> d618  [color=darkseagreen4, key=1, label=result, style=dashed];
d635 -> d637  [color=darkseagreen4, key=1, label=result, style=dashed];
d635 -> d638  [color=darkseagreen4, key=1, label=result, style=dashed];
d635 -> d639  [color=darkseagreen4, key=1, label=result, style=dashed];
d648 -> d650  [color=darkseagreen4, key=1, label=result, style=dashed];
d648 -> d651  [color=darkseagreen4, key=1, label=result, style=dashed];
d648 -> d652  [color=darkseagreen4, key=1, label=result, style=dashed];
d648 -> d653  [color=darkseagreen4, key=1, label=result, style=dashed];
d662 -> d664  [color=darkseagreen4, key=1, label=result, style=dashed];
d662 -> d665  [color=darkseagreen4, key=1, label=result, style=dashed];
d662 -> d666  [color=darkseagreen4, key=1, label=result, style=dashed];
d677 -> d679  [color=darkseagreen4, key=1, label=result, style=dashed];
d688 -> d690  [color=darkseagreen4, key=1, label=result, style=dashed];
d697 -> d699  [color=darkseagreen4, key=1, label=result, style=dashed];
d715 -> d717  [color=darkseagreen4, key=1, label=result, style=dashed];
d715 -> d718  [color=darkseagreen4, key=1, label=result, style=dashed];
d725 -> d727  [color=darkseagreen4, key=1, label=result, style=dashed];
d737 -> d739  [color=darkseagreen4, key=1, label=result, style=dashed];
d749 -> d751  [color=darkseagreen4, key=1, label=result, style=dashed];
d759 -> d761  [color=darkseagreen4, key=1, label=result, style=dashed];
d769 -> d771  [color=darkseagreen4, key=1, label=result, style=dashed];
d777 -> d779  [color=darkseagreen4, key=1, label=result, style=dashed];
d789 -> d791  [color=darkseagreen4, key=1, label=result, style=dashed];
d797 -> d799  [color=darkseagreen4, key=1, label=result, style=dashed];
d807 -> d809  [color=darkseagreen4, key=1, label=result, style=dashed];
d817 -> d819  [color=darkseagreen4, key=1, label=result, style=dashed];
d817 -> d820  [color=darkseagreen4, key=1, label=result, style=dashed];
d817 -> d821  [color=darkseagreen4, key=1, label=result, style=dashed];
d817 -> d822  [color=darkseagreen4, key=1, label=result, style=dashed];
d830 -> d832  [color=darkseagreen4, key=1, label=result, style=dashed];
d830 -> d833  [color=darkseagreen4, key=1, label=result, style=dashed];
d830 -> d834  [color=darkseagreen4, key=1, label=result, style=dashed];
d841 -> d843  [color=darkseagreen4, key=1, label=result, style=dashed];
d849 -> d851  [color=darkseagreen4, key=1, label=result, style=dashed];
d863 -> d865  [color=darkseagreen4, key=1, label=result, style=dashed];
d863 -> d866  [color=darkseagreen4, key=1, label=result, style=dashed];
d877 -> d879  [color=darkseagreen4, key=1, label=result, style=dashed];
d877 -> d880  [color=darkseagreen4, key=1, label=result, style=dashed];
d889 -> d891  [color=darkseagreen4, key=1, label=result, style=dashed];
d889 -> d892  [color=darkseagreen4, key=1, label=result, style=dashed];
d901 -> d903  [color=darkseagreen4, key=1, label=result, style=dashed];
d901 -> d904  [color=darkseagreen4, key=1, label=result, style=dashed];
d901 -> d905  [color=darkseagreen4, key=1, label=result, style=dashed];
d3 -> d18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d3 -> d22  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d5 -> d25  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d6 -> d28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d67 -> d69  [color=darkseagreen4, key=1, label=binder, style=dashed];
d88 -> d90  [color=darkseagreen4, key=1, label=binder, style=dashed];
d102 -> d104  [color=darkseagreen4, key=1, label=binder, style=dashed];
d112 -> d114  [color=darkseagreen4, key=1, label=binder, style=dashed];
d178 -> d182  [color=darkseagreen4, key=1, label=binder, style=dashed];
d199 -> d202  [color=darkseagreen4, key=1, label=binder, style=dashed];
d258 -> d268  [color=darkseagreen4, key=1, label=binder, style=dashed];
d258 -> d263  [color=darkseagreen4, key=1, label=binder, style=dashed];
d280 -> d287  [color=darkseagreen4, key=1, label=binder, style=dashed];
d286 -> d301  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d306 -> d309  [color=darkseagreen4, key=1, label=binder, style=dashed];
d308 -> d312  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d319 -> d323  [color=darkseagreen4, key=1, label=binder, style=dashed];
d324 -> d326  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d339 -> d347  [color=darkseagreen4, key=1, label=binder, style=dashed];
d368 -> d377  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d369 -> d371  [color=darkseagreen4, key=1, label=binder, style=dashed];
d387 -> d400  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d388 -> d391  [color=darkseagreen4, key=1, label=binder, style=dashed];
d411 -> d424  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d412 -> d414  [color=darkseagreen4, key=1, label=binder, style=dashed];
d440 -> d460  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d441 -> d444  [color=darkseagreen4, key=1, label=binder, style=dashed];
d933 -> d935  [color=darkseagreen4, key=1, label=converter, style=dashed];
d931 -> d935  [color=darkseagreen4, key=1, label=converters, style=dashed];
d932 -> d935  [color=darkseagreen4, key=1, label=deserializers, style=dashed];
d179 -> d182  [color=darkseagreen4, key=1, label=context, style=dashed];
d200 -> d202  [color=darkseagreen4, key=1, label=context, style=dashed];
d259 -> d268  [color=darkseagreen4, key=1, label=context, style=dashed];
d259 -> d263  [color=darkseagreen4, key=1, label=context, style=dashed];
d320 -> d323  [color=darkseagreen4, key=1, label=context, style=dashed];
d340 -> d345  [color=darkseagreen4, key=1, label=context, style=dashed];
d340 -> d347  [color=darkseagreen4, key=1, label=context, style=dashed];
d340 -> d359  [color=darkseagreen4, key=1, label=context, style=dashed];
d389 -> d391  [color=darkseagreen4, key=1, label=context, style=dashed];
d442 -> d444  [color=darkseagreen4, key=1, label=context, style=dashed];
d66 -> d77  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d70 -> d81  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d87 -> d94  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d91 -> d97  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d105 -> d107  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d115 -> d117  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d122 -> d125  [color=darkseagreen4, key=1, label=modelObject, style=dashed];
d124 -> d135  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d125 -> d138  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d142 -> d145  [color=darkseagreen4, key=1, label=modelObject, style=dashed];
d144 -> d152  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d145 -> d155  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d159 -> d162  [color=darkseagreen4, key=1, label=modelObject, style=dashed];
d161 -> d169  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d162 -> d172  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d177 -> d188  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d183 -> d192  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d197 -> d205  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d198 -> d208  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d203 -> d212  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d284 -> d291  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d285 -> d294  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d285 -> d297  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d285 -> d288  [color=darkseagreen4, key=1, label=validProperties, style=dashed];
d310 -> d315  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d345 -> d352  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d346 -> d355  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d347 -> d358  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d367 -> d374  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d372 -> d380  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d385 -> d394  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d386 -> d397  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d392 -> d403  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d408 -> d418  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d415 -> d427  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d410 -> d421  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d416 -> d430  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d435 -> d448  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d436 -> d451  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d445 -> d463  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d438 -> d454  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d439 -> d457  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d446 -> d466  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d973 -> d268  [color=darkseagreen4, key=1, label=binder, style=dashed];
d974 -> d268  [color=darkseagreen4, key=1, label=context, style=dashed];
d975 -> d268  [color=darkseagreen4, key=1, label=config, style=dashed];
d262 -> d268  [color=darkseagreen4, key=1, label=config, style=dashed];
d281 -> d287  [color=darkseagreen4, key=1, label=context, style=dashed];
d307 -> d309  [color=darkseagreen4, key=1, label=context, style=dashed];
d910 -> d913  [color=darkseagreen4, key=1, label=existing, style=dashed];
d263 -> d267  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d701 -> d707  [color=darkseagreen4, key=1, label=double, style=dashed];
d710 -> d716  [color=darkseagreen4, key=1, label=int, style=dashed];
d710 -> d717  [color=darkseagreen4, key=1, label=int, style=dashed];
d710 -> d718  [color=darkseagreen4, key=1, label=int, style=dashed];
d32 -> d37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d43 -> d46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d58 -> d61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d961 -> d78  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
d961 -> d82  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
d962 -> d95  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
d962 -> d98  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
d963 -> d108  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
d964 -> d118  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
d965 -> d136  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
d965 -> d139  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
d966 -> d153  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
d966 -> d156  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
d967 -> d170  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
d967 -> d173  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
d968 -> d189  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
d968 -> d193  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
d969 -> d206  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
d969 -> d209  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
d969 -> d213  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
d976 -> d292  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
d976 -> d295  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
d977 -> d316  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
d978 -> d353  [color=darkseagreen4, key=1, label=fakeModule, style=dashed];
d978 -> d356  [color=darkseagreen4, key=1, label=fakeModule, style=dashed];
d979 -> d359  [color=darkseagreen4, key=1, label=context, style=dashed];
d980 -> d359  [color=darkseagreen4, key=1, label=fakeModelBinderLocator, style=dashed];
d981 -> d375  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
d981 -> d381  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
d982 -> d395  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
d982 -> d398  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
d982 -> d404  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
d983 -> d419  [color=darkseagreen4, key=1, label=userDeserializer, style=dashed];
d983 -> d428  [color=darkseagreen4, key=1, label=userDeserializer, style=dashed];
d984 -> d422  [color=darkseagreen4, key=1, label=defaultDeserializer, style=dashed];
d984 -> d431  [color=darkseagreen4, key=1, label=defaultDeserializer, style=dashed];
d985 -> d449  [color=darkseagreen4, key=1, label=userTypeConverter, style=dashed];
d985 -> d452  [color=darkseagreen4, key=1, label=userTypeConverter, style=dashed];
d985 -> d464  [color=darkseagreen4, key=1, label=userTypeConverter, style=dashed];
d986 -> d455  [color=darkseagreen4, key=1, label=defaultTypeConverter, style=dashed];
d986 -> d458  [color=darkseagreen4, key=1, label=defaultTypeConverter, style=dashed];
d986 -> d467  [color=darkseagreen4, key=1, label=defaultTypeConverter, style=dashed];
d815 -> d819  [color=darkseagreen4, key=1, label=then, style=dashed];
d828 -> d832  [color=darkseagreen4, key=1, label=then, style=dashed];
d50 -> d53  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
}
