digraph  {
n66 [label=existingAssemblyPaths, span=""];
n67 [label=assembly, span=""];
n0 [cluster="Nancy.Bootstrapper.AppDomainAssemblyTypeScanner.AppDomainAssemblyTypeScanner()", label="Entry Nancy.Bootstrapper.AppDomainAssemblyTypeScanner.AppDomainAssemblyTypeScanner()", span="15-15"];
n1 [cluster="Nancy.Bootstrapper.AppDomainAssemblyTypeScanner.AppDomainAssemblyTypeScanner()", label="LoadNancyAssemblies()", span="17-17"];
n2 [cluster="Nancy.Bootstrapper.AppDomainAssemblyTypeScanner.AppDomainAssemblyTypeScanner()", label="Exit Nancy.Bootstrapper.AppDomainAssemblyTypeScanner.AppDomainAssemblyTypeScanner()", span="15-15"];
n3 [cluster="Nancy.Bootstrapper.AppDomainAssemblyTypeScanner.LoadNancyAssemblies()", label="Entry Nancy.Bootstrapper.AppDomainAssemblyTypeScanner.LoadNancyAssemblies()", span="146-146"];
n4 [cluster="Nancy.Bootstrapper.AppDomainAssemblyTypeScanner.LoadAssemblies(string)", label="Entry Nancy.Bootstrapper.AppDomainAssemblyTypeScanner.LoadAssemblies(string)", span="88-88"];
n5 [cluster="Nancy.Bootstrapper.AppDomainAssemblyTypeScanner.LoadAssemblies(string)", label="LoadAssemblies(AppDomain.CurrentDomain.BaseDirectory, wildcardFilename)", span="90-90"];
n6 [cluster="Nancy.Bootstrapper.AppDomainAssemblyTypeScanner.LoadAssemblies(string)", label="Exit Nancy.Bootstrapper.AppDomainAssemblyTypeScanner.LoadAssemblies(string)", span="88-88"];
n7 [cluster="Nancy.Bootstrapper.AppDomainAssemblyTypeScanner.LoadAssemblies(string, string)", label="Entry Nancy.Bootstrapper.AppDomainAssemblyTypeScanner.LoadAssemblies(string, string)", span="99-99"];
n8 [cluster="Nancy.Bootstrapper.AppDomainAssemblyTypeScanner.LoadAssemblies(string, string)", label="UpdateAssemblies()", span="101-101"];
n10 [cluster="Nancy.Bootstrapper.AppDomainAssemblyTypeScanner.LoadAssemblies(string, string)", label="var unloadedAssemblies =\r\n                Directory.GetFiles(containingDirectory, wildcardFilename).Where(\r\n                    f => !existingAssemblyPaths.Contains(f, StringComparer.InvariantCultureIgnoreCase))", span="105-107"];
n9 [cluster="Nancy.Bootstrapper.AppDomainAssemblyTypeScanner.LoadAssemblies(string, string)", label="var existingAssemblyPaths = assemblies.Select(a => a.Location).ToArray()", span="103-103"];
n15 [cluster="Nancy.Bootstrapper.AppDomainAssemblyTypeScanner.UpdateAssemblies()", label="Entry Nancy.Bootstrapper.AppDomainAssemblyTypeScanner.UpdateAssemblies()", span="134-134"];
n16 [cluster="Unk.Select", label="Entry Unk.Select", span=""];
n17 [cluster="Unk.ToArray", label="Entry Unk.ToArray", span=""];
n23 [cluster="lambda expression", label="Entry lambda expression", span="103-103"];
n27 [cluster="lambda expression", label="!existingAssemblyPaths.Contains(f, StringComparer.InvariantCultureIgnoreCase)", span="107-107"];
n11 [cluster="Nancy.Bootstrapper.AppDomainAssemblyTypeScanner.LoadAssemblies(string, string)", label=unloadedAssemblies, span="109-109"];
n18 [cluster="System.IO.Directory.GetFiles(string, string)", label="Entry System.IO.Directory.GetFiles(string, string)", span="0-0"];
n19 [cluster="Unk.Where", label="Entry Unk.Where", span=""];
n26 [cluster="lambda expression", label="Entry lambda expression", span="107-107"];
n12 [cluster="Nancy.Bootstrapper.AppDomainAssemblyTypeScanner.LoadAssemblies(string, string)", label="Assembly.Load(AssemblyName.GetAssemblyName(unloadedAssembly))", span="111-111"];
n13 [cluster="Nancy.Bootstrapper.AppDomainAssemblyTypeScanner.LoadAssemblies(string, string)", label="UpdateTypes()", span="114-114"];
n20 [cluster="Unk.GetAssemblyName", label="Entry Unk.GetAssemblyName", span=""];
n21 [cluster="System.Reflection.Assembly.Load(System.Reflection.AssemblyName)", label="Entry System.Reflection.Assembly.Load(System.Reflection.AssemblyName)", span="0-0"];
n14 [cluster="Nancy.Bootstrapper.AppDomainAssemblyTypeScanner.LoadAssemblies(string, string)", label="Exit Nancy.Bootstrapper.AppDomainAssemblyTypeScanner.LoadAssemblies(string, string)", span="99-99"];
n22 [cluster="Nancy.Bootstrapper.AppDomainAssemblyTypeScanner.UpdateTypes()", label="Entry Nancy.Bootstrapper.AppDomainAssemblyTypeScanner.UpdateTypes()", span="121-121"];
n24 [cluster="lambda expression", label="a.Location", span="103-103"];
n25 [cluster="lambda expression", label="Exit lambda expression", span="103-103"];
n28 [cluster="lambda expression", label="Exit lambda expression", span="107-107"];
n29 [cluster="Unk.Contains", label="Entry Unk.Contains", span=""];
n30 [cluster="Nancy.Bootstrapper.AppDomainAssemblyTypeScanner.UpdateTypes()", label="UpdateAssemblies()", span="123-123"];
n31 [cluster="Nancy.Bootstrapper.AppDomainAssemblyTypeScanner.UpdateTypes()", label="types = (from assembly in assemblies\r\n                     from type in assembly.SafeGetExportedTypes()\r\n                     where !type.IsAbstract\r\n                     select type).ToArray()", span="125-128"];
n32 [cluster="Nancy.Bootstrapper.AppDomainAssemblyTypeScanner.UpdateTypes()", label="Exit Nancy.Bootstrapper.AppDomainAssemblyTypeScanner.UpdateTypes()", span="121-121"];
n33 [cluster="System.Reflection.Assembly.SafeGetExportedTypes()", label="Entry System.Reflection.Assembly.SafeGetExportedTypes()", span="17-17"];
n34 [cluster="Nancy.Bootstrapper.AppDomainAssemblyTypeScanner.UpdateAssemblies()", label="assemblies = (from assembly in AppDomain.CurrentDomain.GetAssemblies()\r\n                          where IgnoredAssemblies != null ? !IgnoredAssemblies.Any(asm => asm(assembly)) : true\r\n                          where !assembly.IsDynamic\r\n                          where !assembly.ReflectionOnly\r\n                          select assembly).ToArray()", span="136-140"];
n35 [cluster="Nancy.Bootstrapper.AppDomainAssemblyTypeScanner.UpdateAssemblies()", label="Exit Nancy.Bootstrapper.AppDomainAssemblyTypeScanner.UpdateAssemblies()", span="134-134"];
n36 [cluster="System.AppDomain.GetAssemblies()", label="Entry System.AppDomain.GetAssemblies()", span="0-0"];
n37 [cluster="Unk.Any", label="Entry Unk.Any", span=""];
n38 [cluster="lambda expression", label="Entry lambda expression", span="137-137"];
n39 [cluster="lambda expression", label="asm(assembly)", span="137-137"];
n40 [cluster="lambda expression", label="Exit lambda expression", span="137-137"];
n41 [cluster="System.Func<T, TResult>.Invoke(T)", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
n42 [cluster="Nancy.Bootstrapper.AppDomainAssemblyTypeScanner.LoadNancyAssemblies()", label=nancyAssembliesLoaded, span="148-148"];
n43 [cluster="Nancy.Bootstrapper.AppDomainAssemblyTypeScanner.LoadNancyAssemblies()", label="return;", span="150-150"];
n44 [cluster="Nancy.Bootstrapper.AppDomainAssemblyTypeScanner.LoadNancyAssemblies()", label="LoadAssemblies(@''Nancy*.dll'')", span="153-153"];
n45 [cluster="Nancy.Bootstrapper.AppDomainAssemblyTypeScanner.LoadNancyAssemblies()", label="nancyAssembliesLoaded = true", span="155-155"];
n46 [cluster="Nancy.Bootstrapper.AppDomainAssemblyTypeScanner.LoadNancyAssemblies()", label="Exit Nancy.Bootstrapper.AppDomainAssemblyTypeScanner.LoadNancyAssemblies()", span="146-146"];
n47 [cluster="Nancy.Bootstrapper.AppDomainAssemblyTypeScanner.TypesOf<TType>(bool)", label="Entry Nancy.Bootstrapper.AppDomainAssemblyTypeScanner.TypesOf<TType>(bool)", span="164-164"];
n48 [cluster="Nancy.Bootstrapper.AppDomainAssemblyTypeScanner.TypesOf<TType>(bool)", label="var returnTypes = Types.Where(t => typeof(TType).IsAssignableFrom(t))", span="166-166"];
n49 [cluster="Nancy.Bootstrapper.AppDomainAssemblyTypeScanner.TypesOf<TType>(bool)", label=excludeInternalTypes, span="168-168"];
n53 [cluster="lambda expression", label="Entry lambda expression", span="166-166"];
n50 [cluster="Nancy.Bootstrapper.AppDomainAssemblyTypeScanner.TypesOf<TType>(bool)", label="returnTypes = returnTypes.Where(t => t.Assembly != nancyAssembly)", span="170-170"];
n51 [cluster="Nancy.Bootstrapper.AppDomainAssemblyTypeScanner.TypesOf<TType>(bool)", label="return returnTypes;", span="173-173"];
n57 [cluster="lambda expression", label="Entry lambda expression", span="170-170"];
n52 [cluster="Nancy.Bootstrapper.AppDomainAssemblyTypeScanner.TypesOf<TType>(bool)", label="Exit Nancy.Bootstrapper.AppDomainAssemblyTypeScanner.TypesOf<TType>(bool)", span="164-164"];
n54 [cluster="lambda expression", label="typeof(TType).IsAssignableFrom(t)", span="166-166"];
n55 [cluster="lambda expression", label="Exit lambda expression", span="166-166"];
n56 [cluster="System.Type.IsAssignableFrom(System.Type)", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
n58 [cluster="lambda expression", label="t.Assembly != nancyAssembly", span="170-170"];
n59 [cluster="lambda expression", label="Exit lambda expression", span="170-170"];
n60 [cluster="Nancy.Bootstrapper.AppDomainAssemblyTypeScannerExcentions.NotOfType<TType>(System.Collections.Generic.IEnumerable<System.Type>)", label="Entry Nancy.Bootstrapper.AppDomainAssemblyTypeScannerExcentions.NotOfType<TType>(System.Collections.Generic.IEnumerable<System.Type>)", span="179-179"];
n61 [cluster="Nancy.Bootstrapper.AppDomainAssemblyTypeScannerExcentions.NotOfType<TType>(System.Collections.Generic.IEnumerable<System.Type>)", label="return types.Where(t => !typeof(TType).IsAssignableFrom(t));", span="181-181"];
n62 [cluster="Nancy.Bootstrapper.AppDomainAssemblyTypeScannerExcentions.NotOfType<TType>(System.Collections.Generic.IEnumerable<System.Type>)", label="Exit Nancy.Bootstrapper.AppDomainAssemblyTypeScannerExcentions.NotOfType<TType>(System.Collections.Generic.IEnumerable<System.Type>)", span="179-179"];
n63 [cluster="lambda expression", label="Entry lambda expression", span="181-181"];
n64 [cluster="lambda expression", label="!typeof(TType).IsAssignableFrom(t)", span="181-181"];
n65 [cluster="lambda expression", label="Exit lambda expression", span="181-181"];
m0_35 [cluster="Nancy.DynamicDictionary.Equals(object)", file="DynamicDictionary.cs", label="Entry Nancy.DynamicDictionary.Equals(object)", span="139-139"];
m0_36 [cluster="Nancy.DynamicDictionary.Equals(object)", file="DynamicDictionary.cs", label="ReferenceEquals(null, obj)", span="141-141"];
m0_38 [cluster="Nancy.DynamicDictionary.Equals(object)", file="DynamicDictionary.cs", label="ReferenceEquals(this, obj)", span="146-146"];
m0_40 [cluster="Nancy.DynamicDictionary.Equals(object)", file="DynamicDictionary.cs", label="return obj.GetType() == typeof (DynamicDictionary) && this.Equals((DynamicDictionary) obj);", span="151-151"];
m0_37 [cluster="Nancy.DynamicDictionary.Equals(object)", file="DynamicDictionary.cs", label="return false;", span="143-143"];
m0_39 [cluster="Nancy.DynamicDictionary.Equals(object)", file="DynamicDictionary.cs", label="return true;", span="148-148"];
m0_41 [cluster="Nancy.DynamicDictionary.Equals(object)", file="DynamicDictionary.cs", label="Exit Nancy.DynamicDictionary.Equals(object)", span="139-139"];
m0_54 [cluster="Nancy.DynamicDictionary.ContainsKey(string)", file="DynamicDictionary.cs", label="Entry Nancy.DynamicDictionary.ContainsKey(string)", span="173-173"];
m0_55 [cluster="Nancy.DynamicDictionary.ContainsKey(string)", file="DynamicDictionary.cs", label="return this.dictionary.ContainsKey(key);", span="175-175"];
m0_56 [cluster="Nancy.DynamicDictionary.ContainsKey(string)", file="DynamicDictionary.cs", label="Exit Nancy.DynamicDictionary.ContainsKey(string)", span="173-173"];
m0_28 [cluster="Nancy.DynamicDictionary.Equals(Nancy.DynamicDictionary)", file="DynamicDictionary.cs", label="Entry Nancy.DynamicDictionary.Equals(Nancy.DynamicDictionary)", span="124-124"];
m0_29 [cluster="Nancy.DynamicDictionary.Equals(Nancy.DynamicDictionary)", file="DynamicDictionary.cs", label="ReferenceEquals(null, other)", span="126-126"];
m0_31 [cluster="Nancy.DynamicDictionary.Equals(Nancy.DynamicDictionary)", file="DynamicDictionary.cs", label="return ReferenceEquals(this, other) || Equals(other.dictionary, this.dictionary);", span="131-131"];
m0_30 [cluster="Nancy.DynamicDictionary.Equals(Nancy.DynamicDictionary)", file="DynamicDictionary.cs", label="return false;", span="128-128"];
m0_32 [cluster="Nancy.DynamicDictionary.Equals(Nancy.DynamicDictionary)", file="DynamicDictionary.cs", label="Exit Nancy.DynamicDictionary.Equals(Nancy.DynamicDictionary)", span="124-124"];
m0_7 [cluster="Nancy.DynamicDictionary.TrySetMember(System.Dynamic.SetMemberBinder, object)", file="DynamicDictionary.cs", label="Entry Nancy.DynamicDictionary.TrySetMember(System.Dynamic.SetMemberBinder, object)", span="46-46"];
m0_8 [cluster="Nancy.DynamicDictionary.TrySetMember(System.Dynamic.SetMemberBinder, object)", file="DynamicDictionary.cs", label="this[binder.Name] = value", span="48-48"];
m0_9 [cluster="Nancy.DynamicDictionary.TrySetMember(System.Dynamic.SetMemberBinder, object)", file="DynamicDictionary.cs", label="return true;", span="49-49"];
m0_10 [cluster="Nancy.DynamicDictionary.TrySetMember(System.Dynamic.SetMemberBinder, object)", file="DynamicDictionary.cs", label="Exit Nancy.DynamicDictionary.TrySetMember(System.Dynamic.SetMemberBinder, object)", span="46-46"];
m0_80 [cluster="Nancy.DynamicDictionary.Remove(System.Collections.Generic.KeyValuePair<string, dynamic>)", file="DynamicDictionary.cs", label="Entry Nancy.DynamicDictionary.Remove(System.Collections.Generic.KeyValuePair<string, dynamic>)", span="228-228"];
m0_82 [cluster="Nancy.DynamicDictionary.Remove(System.Collections.Generic.KeyValuePair<string, dynamic>)", file="DynamicDictionary.cs", label="Exit Nancy.DynamicDictionary.Remove(System.Collections.Generic.KeyValuePair<string, dynamic>)", span="228-228"];
m0_46 [cluster="object.GetHashCode()", file="DynamicDictionary.cs", label="Entry object.GetHashCode()", span="0-0"];
m0_42 [cluster="object.GetType()", file="DynamicDictionary.cs", label="Entry object.GetType()", span="0-0"];
m0_65 [cluster="Nancy.DynamicDictionary.Add(System.Collections.Generic.KeyValuePair<string, dynamic>)", file="DynamicDictionary.cs", label="Entry Nancy.DynamicDictionary.Add(System.Collections.Generic.KeyValuePair<string, dynamic>)", span="198-198"];
m0_66 [cluster="Nancy.DynamicDictionary.Add(System.Collections.Generic.KeyValuePair<string, dynamic>)", color=green, community=0, file="DynamicDictionary.cs", label="this[item.Key] = item.Value", prediction=0, span="200-200"];
m0_67 [cluster="Nancy.DynamicDictionary.Add(System.Collections.Generic.KeyValuePair<string, dynamic>)", file="DynamicDictionary.cs", label="Exit Nancy.DynamicDictionary.Add(System.Collections.Generic.KeyValuePair<string, dynamic>)", span="198-198"];
m0_79 [cluster="System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", file="DynamicDictionary.cs", label="Entry System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", span="0-0"];
m0_50 [cluster="string.Replace(string, string)", file="DynamicDictionary.cs", label="Entry string.Replace(string, string)", span="0-0"];
m0_72 [cluster="Nancy.DynamicDictionary.Contains(System.Collections.Generic.KeyValuePair<string, dynamic>)", file="DynamicDictionary.cs", label="Entry Nancy.DynamicDictionary.Contains(System.Collections.Generic.KeyValuePair<string, dynamic>)", span="208-208"];
m0_74 [cluster="Nancy.DynamicDictionary.Contains(System.Collections.Generic.KeyValuePair<string, dynamic>)", file="DynamicDictionary.cs", label="Exit Nancy.DynamicDictionary.Contains(System.Collections.Generic.KeyValuePair<string, dynamic>)", span="208-208"];
m0_11 [cluster="Nancy.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder, out object)", file="DynamicDictionary.cs", label="Entry Nancy.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder, out object)", span="57-57"];
m0_12 [cluster="Nancy.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder, out object)", file="DynamicDictionary.cs", label="!dictionary.TryGetValue(binder.Name, out result)", span="59-59"];
m0_13 [cluster="Nancy.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder, out object)", file="DynamicDictionary.cs", label="result = new DynamicDictionaryValue(null)", span="61-61"];
m0_14 [cluster="Nancy.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder, out object)", file="DynamicDictionary.cs", label="return true;", span="64-64"];
m0_15 [cluster="Nancy.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder, out object)", file="DynamicDictionary.cs", label="Exit Nancy.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder, out object)", span="57-57"];
m0_47 [cluster="Nancy.DynamicDictionary.GetNeutralKey(string)", file="DynamicDictionary.cs", label="Entry Nancy.DynamicDictionary.GetNeutralKey(string)", span="163-163"];
m0_48 [cluster="Nancy.DynamicDictionary.GetNeutralKey(string)", color=green, community=0, file="DynamicDictionary.cs", label="return key.Replace(''-'', string.Empty);", prediction=1, span="165-165"];
m0_49 [cluster="Nancy.DynamicDictionary.GetNeutralKey(string)", file="DynamicDictionary.cs", label="Exit Nancy.DynamicDictionary.GetNeutralKey(string)", span="163-163"];
m0_18 [cluster="Nancy.DynamicDictionary.GetDynamicMemberNames()", file="DynamicDictionary.cs", label="Entry Nancy.DynamicDictionary.GetDynamicMemberNames()", span="72-72"];
m0_19 [cluster="Nancy.DynamicDictionary.GetDynamicMemberNames()", file="DynamicDictionary.cs", label="return dictionary.Keys;", span="74-74"];
m0_20 [cluster="Nancy.DynamicDictionary.GetDynamicMemberNames()", file="DynamicDictionary.cs", label="Exit Nancy.DynamicDictionary.GetDynamicMemberNames()", span="72-72"];
m0_61 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Remove(TKey)", file="DynamicDictionary.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m0_84 [cluster="Nancy.DynamicDictionary.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, object>>.GetEnumerator()", file="DynamicDictionary.cs", label="Entry Nancy.DynamicDictionary.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, object>>.GetEnumerator()", span="233-233"];
m0_85 [cluster="Nancy.DynamicDictionary.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, object>>.GetEnumerator()", color=green, community=0, file="DynamicDictionary.cs", label="return this.dictionary.GetEnumerator();", prediction=2, span="235-235"];
m0_86 [cluster="Nancy.DynamicDictionary.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, object>>.GetEnumerator()", file="DynamicDictionary.cs", label="Exit Nancy.DynamicDictionary.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, object>>.GetEnumerator()", span="233-233"];
m0_71 [cluster="System.Collections.Generic.ICollection<T>.Clear()", file="DynamicDictionary.cs", label="Entry System.Collections.Generic.ICollection<T>.Clear()", span="0-0"];
m0_43 [cluster="Nancy.DynamicDictionary.GetHashCode()", file="DynamicDictionary.cs", label="Entry Nancy.DynamicDictionary.GetHashCode()", span="158-158"];
m0_44 [cluster="Nancy.DynamicDictionary.GetHashCode()", color=green, community=0, file="DynamicDictionary.cs", label="return (dictionary != null ? dictionary.GetHashCode() : 0);", prediction=2, span="160-160"];
m0_45 [cluster="Nancy.DynamicDictionary.GetHashCode()", file="DynamicDictionary.cs", label="Exit Nancy.DynamicDictionary.GetHashCode()", span="158-158"];
m0_68 [cluster="Nancy.DynamicDictionary.Clear()", file="DynamicDictionary.cs", label="Entry Nancy.DynamicDictionary.Clear()", span="203-203"];
m0_70 [cluster="Nancy.DynamicDictionary.Clear()", file="DynamicDictionary.cs", label="Exit Nancy.DynamicDictionary.Clear()", span="203-203"];
m0_17 [cluster="Nancy.DynamicDictionaryValue.DynamicDictionaryValue(object)", file="DynamicDictionary.cs", label="Entry Nancy.DynamicDictionaryValue.DynamicDictionaryValue(object)", span="15-15"];
m0_76 [cluster="Nancy.DynamicDictionary.CopyTo(System.Collections.Generic.KeyValuePair<string, dynamic>[], int)", file="DynamicDictionary.cs", label="Entry Nancy.DynamicDictionary.CopyTo(System.Collections.Generic.KeyValuePair<string, dynamic>[], int)", span="213-213"];
m0_77 [cluster="Nancy.DynamicDictionary.CopyTo(System.Collections.Generic.KeyValuePair<string, dynamic>[], int)", color=green, community=0, file="DynamicDictionary.cs", label="this.dictionary.CopyTo(array, arrayIndex)", prediction=2, span="215-215"];
m0_78 [cluster="Nancy.DynamicDictionary.CopyTo(System.Collections.Generic.KeyValuePair<string, dynamic>[], int)", file="DynamicDictionary.cs", label="Exit Nancy.DynamicDictionary.CopyTo(System.Collections.Generic.KeyValuePair<string, dynamic>[], int)", span="213-213"];
m0_0 [cluster="Nancy.DynamicDictionary.Create(System.Collections.Generic.IDictionary<string, object>)", file="DynamicDictionary.cs", label="Entry Nancy.DynamicDictionary.Create(System.Collections.Generic.IDictionary<string, object>)", span="29-29"];
m0_1 [cluster="Nancy.DynamicDictionary.Create(System.Collections.Generic.IDictionary<string, object>)", file="DynamicDictionary.cs", label="var instance = new DynamicDictionary()", span="31-31"];
m0_2 [cluster="Nancy.DynamicDictionary.Create(System.Collections.Generic.IDictionary<string, object>)", file="DynamicDictionary.cs", label="values.Keys", span="33-33"];
m0_3 [cluster="Nancy.DynamicDictionary.Create(System.Collections.Generic.IDictionary<string, object>)", file="DynamicDictionary.cs", label="instance[key] = values[key]", span="35-35"];
m0_4 [cluster="Nancy.DynamicDictionary.Create(System.Collections.Generic.IDictionary<string, object>)", file="DynamicDictionary.cs", label="return instance;", span="38-38"];
m0_5 [cluster="Nancy.DynamicDictionary.Create(System.Collections.Generic.IDictionary<string, object>)", file="DynamicDictionary.cs", label="Exit Nancy.DynamicDictionary.Create(System.Collections.Generic.IDictionary<string, object>)", span="29-29"];
m0_51 [cluster="Nancy.DynamicDictionary.Add(string, dynamic)", file="DynamicDictionary.cs", label="Entry Nancy.DynamicDictionary.Add(string, dynamic)", span="168-168"];
m0_53 [cluster="Nancy.DynamicDictionary.Add(string, dynamic)", file="DynamicDictionary.cs", label="Exit Nancy.DynamicDictionary.Add(string, dynamic)", span="168-168"];
m0_57 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="DynamicDictionary.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m0_62 [cluster="Nancy.DynamicDictionary.TryGetValue(string, out dynamic)", file="DynamicDictionary.cs", label="Entry Nancy.DynamicDictionary.TryGetValue(string, out dynamic)", span="188-188"];
m0_63 [cluster="Nancy.DynamicDictionary.TryGetValue(string, out dynamic)", color=green, community=0, file="DynamicDictionary.cs", label="return this.dictionary.TryGetValue(key, out value);", prediction=2, span="190-190"];
m0_64 [cluster="Nancy.DynamicDictionary.TryGetValue(string, out dynamic)", file="DynamicDictionary.cs", label="Exit Nancy.DynamicDictionary.TryGetValue(string, out dynamic)", span="188-188"];
m0_58 [cluster="Nancy.DynamicDictionary.Remove(string)", file="DynamicDictionary.cs", label="Entry Nancy.DynamicDictionary.Remove(string)", span="183-183"];
m0_60 [cluster="Nancy.DynamicDictionary.Remove(string)", file="DynamicDictionary.cs", label="Exit Nancy.DynamicDictionary.Remove(string)", span="183-183"];
m0_33 [cluster="object.ReferenceEquals(object, object)", file="DynamicDictionary.cs", label="Entry object.ReferenceEquals(object, object)", span="0-0"];
m0_75 [cluster="System.Collections.Generic.ICollection<T>.Contains(T)", file="DynamicDictionary.cs", label="Entry System.Collections.Generic.ICollection<T>.Contains(T)", span="0-0"];
m0_16 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="DynamicDictionary.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m0_83 [cluster="System.Collections.Generic.ICollection<T>.Remove(T)", file="DynamicDictionary.cs", label="Entry System.Collections.Generic.ICollection<T>.Remove(T)", span="0-0"];
m0_34 [cluster="object.Equals(object, object)", file="DynamicDictionary.cs", label="Entry object.Equals(object, object)", span="0-0"];
m0_24 [cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()", file="DynamicDictionary.cs", label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0"];
m0_6 [cluster="Nancy.DynamicDictionary.DynamicDictionary()", file="DynamicDictionary.cs", label="Entry Nancy.DynamicDictionary.DynamicDictionary()", span="7-7"];
m0_21 [cluster="Nancy.DynamicDictionary.GetEnumerator()", file="DynamicDictionary.cs", label="Entry Nancy.DynamicDictionary.GetEnumerator()", span="81-81"];
m0_22 [cluster="Nancy.DynamicDictionary.GetEnumerator()", file="DynamicDictionary.cs", label="return dictionary.Keys.GetEnumerator();", span="82-82"];
m0_23 [cluster="Nancy.DynamicDictionary.GetEnumerator()", file="DynamicDictionary.cs", label="Exit Nancy.DynamicDictionary.GetEnumerator()", span="81-81"];
m0_25 [cluster="Nancy.DynamicDictionary.System.Collections.IEnumerable.GetEnumerator()", file="DynamicDictionary.cs", label="Entry Nancy.DynamicDictionary.System.Collections.IEnumerable.GetEnumerator()", span="89-89"];
m0_26 [cluster="Nancy.DynamicDictionary.System.Collections.IEnumerable.GetEnumerator()", file="DynamicDictionary.cs", label="return dictionary.Keys.GetEnumerator();", span="90-90"];
m0_27 [cluster="Nancy.DynamicDictionary.System.Collections.IEnumerable.GetEnumerator()", file="DynamicDictionary.cs", label="Exit Nancy.DynamicDictionary.System.Collections.IEnumerable.GetEnumerator()", span="89-89"];
m0_87 [file="DynamicDictionary.cs", label="Nancy.DynamicDictionary", span=""];
m1_0 [cluster="Nancy.Demo.Authentication.Basic.UserValidator.Validate(string, string)", file="DynamicDictionaryFixture.cs", label="Entry Nancy.Demo.Authentication.Basic.UserValidator.Validate(string, string)", span="7-7"];
m1_1 [cluster="Nancy.Demo.Authentication.Basic.UserValidator.Validate(string, string)", file="DynamicDictionaryFixture.cs", label="return new DemoUserIdentity {UserName = username};", span="9-9"];
m1_2 [cluster="Nancy.Demo.Authentication.Basic.UserValidator.Validate(string, string)", file="DynamicDictionaryFixture.cs", label="Exit Nancy.Demo.Authentication.Basic.UserValidator.Validate(string, string)", span="7-7"];
m1_3 [cluster="Nancy.Demo.Authentication.Basic.DemoUserIdentity.DemoUserIdentity()", file="DynamicDictionaryFixture.cs", label="Entry Nancy.Demo.Authentication.Basic.DemoUserIdentity.DemoUserIdentity()", span="5-5"];
m2_7 [cluster="string.Replace(string, string)", file="RazorViewEngine.cs", label="Entry string.Replace(string, string)", span="0-0"];
m2_15 [cluster="Nancy.Tests.Fakes.FakeViewEngineHost.GetUriString(string, params string[])", file="RazorViewEngine.cs", label="Entry Nancy.Tests.Fakes.FakeViewEngineHost.GetUriString(string, params string[])", span="69-69"];
m2_16 [cluster="Nancy.Tests.Fakes.FakeViewEngineHost.GetUriString(string, params string[])", file="RazorViewEngine.cs", label="throw new NotImplementedException();", span="71-71"];
m2_17 [cluster="Nancy.Tests.Fakes.FakeViewEngineHost.GetUriString(string, params string[])", file="RazorViewEngine.cs", label="Exit Nancy.Tests.Fakes.FakeViewEngineHost.GetUriString(string, params string[])", span="69-69"];
m2_19 [cluster="Nancy.Tests.Fakes.FakeViewEngineHost.ExpandPath(string)", file="RazorViewEngine.cs", label="Entry Nancy.Tests.Fakes.FakeViewEngineHost.ExpandPath(string)", span="79-79"];
m2_20 [cluster="Nancy.Tests.Fakes.FakeViewEngineHost.ExpandPath(string)", file="RazorViewEngine.cs", label="return this.ExpandPathCallBack != null ? this.ExpandPathCallBack.Invoke(path) : path;", span="81-81"];
m2_21 [cluster="Nancy.Tests.Fakes.FakeViewEngineHost.ExpandPath(string)", file="RazorViewEngine.cs", label="Exit Nancy.Tests.Fakes.FakeViewEngineHost.ExpandPath(string)", span="79-79"];
m2_23 [cluster="Nancy.Tests.Fakes.FakeViewEngineHost.AntiForgeryToken()", file="RazorViewEngine.cs", label="Entry Nancy.Tests.Fakes.FakeViewEngineHost.AntiForgeryToken()", span="88-88"];
m2_24 [cluster="Nancy.Tests.Fakes.FakeViewEngineHost.AntiForgeryToken()", file="RazorViewEngine.cs", label="return ''CSRF'';", span="90-90"];
m2_25 [cluster="Nancy.Tests.Fakes.FakeViewEngineHost.AntiForgeryToken()", file="RazorViewEngine.cs", label="Exit Nancy.Tests.Fakes.FakeViewEngineHost.AntiForgeryToken()", span="88-88"];
m2_3 [cluster="Nancy.Tests.Fakes.FakeViewEngineHost.FakeContext.FakeContext()", file="RazorViewEngine.cs", label="Entry Nancy.Tests.Fakes.FakeViewEngineHost.FakeContext.FakeContext()", span="31-31"];
m2_8 [cluster="Nancy.Tests.Fakes.FakeViewEngineHost.FakeContext.FakeContext()", file="RazorViewEngine.cs", label="this.User = new FakeUser { Username = ''Frank123'' }", span="33-33"];
m2_9 [cluster="Nancy.Tests.Fakes.FakeViewEngineHost.FakeContext.FakeContext()", file="RazorViewEngine.cs", label="Exit Nancy.Tests.Fakes.FakeViewEngineHost.FakeContext.FakeContext()", span="31-31"];
m2_4 [cluster="Nancy.Tests.Fakes.FakeViewEngineHost.HtmlEncode(string)", file="RazorViewEngine.cs", label="Entry Nancy.Tests.Fakes.FakeViewEngineHost.HtmlEncode(string)", span="21-21"];
m2_5 [cluster="Nancy.Tests.Fakes.FakeViewEngineHost.HtmlEncode(string)", file="RazorViewEngine.cs", label="return input.Replace(''&'', ''&amp;'').\r\n                Replace(''<'', ''&lt;'').\r\n                Replace(''>'', ''&gt;'').\r\n                Replace(''\'''', ''&quot;'');", span="23-26"];
m2_6 [cluster="Nancy.Tests.Fakes.FakeViewEngineHost.HtmlEncode(string)", file="RazorViewEngine.cs", label="Exit Nancy.Tests.Fakes.FakeViewEngineHost.HtmlEncode(string)", span="21-21"];
m2_10 [cluster="Nancy.Tests.Fakes.FakeViewEngineHost.FakeContext.FakeUser.FakeUser()", file="RazorViewEngine.cs", label="Entry Nancy.Tests.Fakes.FakeViewEngineHost.FakeContext.FakeUser.FakeUser()", span="40-40"];
m2_18 [cluster="System.NotImplementedException.NotImplementedException()", file="RazorViewEngine.cs", label="Entry System.NotImplementedException.NotImplementedException()", span="0-0"];
m2_14 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="RazorViewEngine.cs", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
m2_0 [cluster="Nancy.Tests.Fakes.FakeViewEngineHost.FakeViewEngineHost()", file="RazorViewEngine.cs", label="Entry Nancy.Tests.Fakes.FakeViewEngineHost.FakeViewEngineHost()", span="11-11"];
m2_1 [cluster="Nancy.Tests.Fakes.FakeViewEngineHost.FakeViewEngineHost()", file="RazorViewEngine.cs", label="this.Context = new FakeContext {Name = ''Frank'' }", span="13-13"];
m2_2 [cluster="Nancy.Tests.Fakes.FakeViewEngineHost.FakeViewEngineHost()", file="RazorViewEngine.cs", label="Exit Nancy.Tests.Fakes.FakeViewEngineHost.FakeViewEngineHost()", span="11-11"];
m2_11 [cluster="Nancy.Tests.Fakes.FakeViewEngineHost.GetTemplate(string, object)", file="RazorViewEngine.cs", label="Entry Nancy.Tests.Fakes.FakeViewEngineHost.GetTemplate(string, object)", span="58-58"];
m2_12 [cluster="Nancy.Tests.Fakes.FakeViewEngineHost.GetTemplate(string, object)", file="RazorViewEngine.cs", label="return this.GetTemplateCallback != null ? this.GetTemplateCallback.Invoke(templateName, model) : string.Empty;", span="60-60"];
m2_13 [cluster="Nancy.Tests.Fakes.FakeViewEngineHost.GetTemplate(string, object)", file="RazorViewEngine.cs", label="Exit Nancy.Tests.Fakes.FakeViewEngineHost.GetTemplate(string, object)", span="58-58"];
m2_26 [file="RazorViewEngine.cs", label="Nancy.Tests.Fakes.FakeViewEngineHost", span=""];
m2_27 [file="RazorViewEngine.cs", label="Nancy.Tests.Fakes.FakeViewEngineHost.FakeContext", span=""];
n66 -> n27  [color=darkseagreen4, key=1, label=existingAssemblyPaths, style=dashed];
n67 -> n39  [color=darkseagreen4, key=1, label=assembly, style=dashed];
n7 -> n10  [color=darkseagreen4, key=1, label=string, style=dashed];
n10 -> n26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n9 -> n23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n9 -> n27  [color=darkseagreen4, key=1, label=existingAssemblyPaths, style=dashed];
n34 -> n38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n34 -> n39  [color=darkseagreen4, key=1, label=assembly, style=dashed];
n47 -> n49  [color=darkseagreen4, key=1, label=bool, style=dashed];
n48 -> n53  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n48 -> n51  [color=darkseagreen4, key=1, label=returnTypes, style=dashed];
n50 -> n57  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n61 -> n63  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_35 -> m0_38  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_35 -> m0_40  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_28 -> m0_31  [color=darkseagreen4, key=1, label="Nancy.DynamicDictionary", style=dashed];
m0_12 -> m0_15  [color=darkseagreen4, key=1, label="out object", style=dashed];
m0_13 -> m0_15  [color=darkseagreen4, key=1, label="out object", style=dashed];
m0_0 -> m0_2  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, object>", style=dashed];
m0_1 -> m0_4  [color=darkseagreen4, key=1, label=instance, style=dashed];
m0_87 -> m0_12  [color=darkseagreen4, key=1, label="Nancy.DynamicDictionary", style=dashed];
m0_87 -> m0_19  [color=darkseagreen4, key=1, label="Nancy.DynamicDictionary", style=dashed];
m0_87 -> m0_22  [color=darkseagreen4, key=1, label="Nancy.DynamicDictionary", style=dashed];
m0_87 -> m0_26  [color=darkseagreen4, key=1, label="Nancy.DynamicDictionary", style=dashed];
m0_87 -> m0_31  [color=darkseagreen4, key=1, label="Nancy.DynamicDictionary", style=dashed];
m0_87 -> m0_38  [color=darkseagreen4, key=1, label="Nancy.DynamicDictionary", style=dashed];
m0_87 -> m0_40  [color=darkseagreen4, key=1, label="Nancy.DynamicDictionary", style=dashed];
m0_87 -> m0_44  [color=green, key=1, label="Nancy.DynamicDictionary", style=dashed];
m0_87 -> m0_55  [color=darkseagreen4, key=1, label="Nancy.DynamicDictionary", style=dashed];
m0_87 -> m0_63  [color=green, key=1, label="Nancy.DynamicDictionary", style=dashed];
m0_87 -> m0_77  [color=green, key=1, label="Nancy.DynamicDictionary", style=dashed];
m0_87 -> m0_85  [color=green, key=1, label="Nancy.DynamicDictionary", style=dashed];
m2_26 -> m2_12  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeViewEngineHost", style=dashed];
m2_26 -> m2_20  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeViewEngineHost", style=dashed];
}
