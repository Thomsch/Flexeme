digraph  {
m0_0 [cluster="Nancy.Demo.Authentication.Stateless.Models.UserModel.UserModel(string)", file="MainModule.cs", label="Entry Nancy.Demo.Authentication.Stateless.Models.UserModel.UserModel(string)", span="6-6"];
m0_1 [cluster="Nancy.Demo.Authentication.Stateless.Models.UserModel.UserModel(string)", file="MainModule.cs", label="Username = username", span="8-8"];
m0_2 [cluster="Nancy.Demo.Authentication.Stateless.Models.UserModel.UserModel(string)", file="MainModule.cs", label="Exit Nancy.Demo.Authentication.Stateless.Models.UserModel.UserModel(string)", span="6-6"];
m0_3 [file="MainModule.cs", label="Nancy.Demo.Authentication.Stateless.Models.UserModel", span=""];
m1_11 [cluster="Nancy.IResponseFormatter.AsJson<TModel>(TModel, Nancy.HttpStatusCode)", file="SecureModule.cs", label="Entry Nancy.IResponseFormatter.AsJson<TModel>(TModel, Nancy.HttpStatusCode)", span="52-52"];
m1_10 [cluster="Nancy.Demo.Authentication.Stateless.Models.UserModel.UserModel(string)", file="SecureModule.cs", label="Entry Nancy.Demo.Authentication.Stateless.Models.UserModel.UserModel(string)", span="6-6"];
m1_4 [cluster="Nancy.NancyModule.RequiresAuthentication()", file="SecureModule.cs", label="Entry Nancy.NancyModule.RequiresAuthentication()", span="15-15"];
m1_0 [cluster="Nancy.Demo.Authentication.Stateless.SecureModule.SecureModule()", file="SecureModule.cs", label="Entry Nancy.Demo.Authentication.Stateless.SecureModule.SecureModule()", span="9-9"];
m1_1 [cluster="Nancy.Demo.Authentication.Stateless.SecureModule.SecureModule()", file="SecureModule.cs", label="this.RequiresAuthentication()", span="11-11"];
m1_2 [cluster="Nancy.Demo.Authentication.Stateless.SecureModule.SecureModule()", file="SecureModule.cs", label="Get[''/''] = x =>\r\n                {\r\n                    //Context.CurrentUser was set by StatelessAuthentication earlier in the pipeline\r\n                    var identity = (DemoUserIdentity)Context.CurrentUser;\r\n\r\n                    //return the secure information in a json response\r\n                    var userModel = new UserModel(identity.UserName);\r\n                    return Response.AsJson(userModel);\r\n                }", span="13-21"];
m1_3 [cluster="Nancy.Demo.Authentication.Stateless.SecureModule.SecureModule()", file="SecureModule.cs", label="Exit Nancy.Demo.Authentication.Stateless.SecureModule.SecureModule()", span="9-9"];
m1_5 [cluster="lambda expression", file="SecureModule.cs", label="Entry lambda expression", span="13-21"];
m1_6 [cluster="lambda expression", file="SecureModule.cs", label="var identity = (DemoUserIdentity)Context.CurrentUser", span="16-16"];
m1_7 [cluster="lambda expression", file="SecureModule.cs", label="var userModel = new UserModel(identity.UserName)", span="19-19"];
m1_8 [cluster="lambda expression", file="SecureModule.cs", label="return Response.AsJson(userModel);", span="20-20"];
m1_9 [cluster="lambda expression", file="SecureModule.cs", label="Exit lambda expression", span="13-21"];
m1_12 [file="SecureModule.cs", label="Nancy.Demo.Authentication.Stateless.SecureModule", span=""];
m2_5 [cluster="Nancy.Authentication.Stateless.StatelessAuthentication.Enable(Nancy.Bootstrapper.IPipelines, Nancy.Authentication.Stateless.StatelessAuthenticationConfiguration)", file="StatelessAuthBootstrapper.cs", label="Entry Nancy.Authentication.Stateless.StatelessAuthentication.Enable(Nancy.Bootstrapper.IPipelines, Nancy.Authentication.Stateless.StatelessAuthenticationConfiguration)", span="15-15"];
m2_10 [cluster="Nancy.Demo.Authentication.Stateless.UserDatabase.GetUserFromApiKey(string)", file="StatelessAuthBootstrapper.cs", label="Entry Nancy.Demo.Authentication.Stateless.UserDatabase.GetUserFromApiKey(string)", span="17-17"];
m2_0 [cluster="Nancy.Demo.Authentication.Stateless.StatelessAuthBootstrapper.RequestStartup(TinyIoC.TinyIoCContainer, Nancy.Bootstrapper.IPipelines, Nancy.NancyContext)", file="StatelessAuthBootstrapper.cs", label="Entry Nancy.Demo.Authentication.Stateless.StatelessAuthBootstrapper.RequestStartup(TinyIoC.TinyIoCContainer, Nancy.Bootstrapper.IPipelines, Nancy.NancyContext)", span="8-8"];
m2_1 [cluster="Nancy.Demo.Authentication.Stateless.StatelessAuthBootstrapper.RequestStartup(TinyIoC.TinyIoCContainer, Nancy.Bootstrapper.IPipelines, Nancy.NancyContext)", file="StatelessAuthBootstrapper.cs", label="var configuration =\r\n                new StatelessAuthenticationConfiguration(nancyContext =>\r\n                    {\r\n                        //for now, we will pull the apiKey from the querystring, \r\n                        //but you can pull it from any part of the NancyContext\r\n                        var apiKey = (string) nancyContext.Request.Query.ApiKey.Value;\r\n\r\n                        //get the user identity however you choose to (for now, using a static class/method)\r\n                        return UserDatabase.GetUserFromApiKey(apiKey);                        \r\n                    })", span="16-25"];
m2_2 [cluster="Nancy.Demo.Authentication.Stateless.StatelessAuthBootstrapper.RequestStartup(TinyIoC.TinyIoCContainer, Nancy.Bootstrapper.IPipelines, Nancy.NancyContext)", file="StatelessAuthBootstrapper.cs", label="StatelessAuthentication.Enable(pipelines, configuration)", span="27-27"];
m2_3 [cluster="Nancy.Demo.Authentication.Stateless.StatelessAuthBootstrapper.RequestStartup(TinyIoC.TinyIoCContainer, Nancy.Bootstrapper.IPipelines, Nancy.NancyContext)", file="StatelessAuthBootstrapper.cs", label="Exit Nancy.Demo.Authentication.Stateless.StatelessAuthBootstrapper.RequestStartup(TinyIoC.TinyIoCContainer, Nancy.Bootstrapper.IPipelines, Nancy.NancyContext)", span="8-8"];
m2_4 [cluster="Nancy.Authentication.Stateless.StatelessAuthenticationConfiguration.StatelessAuthenticationConfiguration(System.Func<Nancy.NancyContext, Nancy.Security.IUserIdentity>)", file="StatelessAuthBootstrapper.cs", label="Entry Nancy.Authentication.Stateless.StatelessAuthenticationConfiguration.StatelessAuthenticationConfiguration(System.Func<Nancy.NancyContext, Nancy.Security.IUserIdentity>)", span="15-15"];
m2_6 [cluster="lambda expression", file="StatelessAuthBootstrapper.cs", label="Entry lambda expression", span="17-25"];
m2_7 [cluster="lambda expression", file="StatelessAuthBootstrapper.cs", label="var apiKey = (string) nancyContext.Request.Query.ApiKey.Value", span="21-21"];
m2_8 [cluster="lambda expression", file="StatelessAuthBootstrapper.cs", label="return UserDatabase.GetUserFromApiKey(apiKey);", span="24-24"];
m2_9 [cluster="lambda expression", file="StatelessAuthBootstrapper.cs", label="Exit lambda expression", span="17-25"];
m3_9 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetNodeForSegment(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="StatelessAuthentication.cs", label="start == '(' && end == ')'", span="41-41"];
m3_29 [cluster="Nancy.Routing.Trie.Nodes.LiteralNode.LiteralNode(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory)", file="StatelessAuthentication.cs", label="Entry Nancy.Routing.Trie.Nodes.LiteralNode.LiteralNode(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory)", span="23-23"];
m3_43 [cluster="string.Contains(string)", file="StatelessAuthentication.cs", label="Entry string.Contains(string)", span="0-0"];
m3_24 [cluster="string.StartsWith(string)", file="StatelessAuthentication.cs", label="Nancy.Authentication.Stateless.StatelessAuthenticationConfiguration", span=""];
m3_21 [cluster="lambda expression", file="StatelessAuthentication.cs", label="return context.Response;", span="57-57"];
m3_22 [cluster="lambda expression", file="StatelessAuthentication.cs", label="Exit lambda expression", span="48-59"];
m3_19 [cluster="lambda expression", file="StatelessAuthentication.cs", label="return context.Response;", span="53-53"];
m3_11 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetNodeForSegment(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="StatelessAuthentication.cs", label="start == '{' && end == '}' && chars.Count(c => c == '{' || c == '}') == 2", span="46-46"];
m3_13 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetNodeForSegment(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="StatelessAuthentication.cs", label="segment.StartsWith(''^('') && (segment.EndsWith('')'') || segment.EndsWith('')$''))", span="51-51"];
m3_15 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetNodeForSegment(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="StatelessAuthentication.cs", label="CaptureNodeWithMultipleParameters.IsMatch(segment)", span="56-56"];
m3_14 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetNodeForSegment(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="StatelessAuthentication.cs", label="return new GreedyRegExCaptureNode(parent, segment, this);", span="53-53"];
m3_16 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetNodeForSegment(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="StatelessAuthentication.cs", label="return new CaptureNodeWithMultipleParameters(parent, segment, this, routeSegmentConstraints);", span="58-58"];
m3_26 [cluster="Nancy.Routing.Trie.Nodes.GreedyRegExCaptureNode.GreedyRegExCaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory)", file="StatelessAuthentication.cs", label="Entry Nancy.Routing.Trie.Nodes.GreedyRegExCaptureNode.GreedyRegExCaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory)", span="33-33"];
m3_25 [cluster="string.EndsWith(string)", file="StatelessAuthentication.cs", label="Entry string.EndsWith(string)", span="0-0"];
m3_23 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetCaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="StatelessAuthentication.cs", label="Entry Nancy.Routing.Trie.TrieNodeFactory.GetCaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string)", span="64-64"];
m3_12 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetNodeForSegment(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="StatelessAuthentication.cs", label="return this.GetCaptureNode(parent, segment);", span="48-48"];
m3_34 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetCaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="StatelessAuthentication.cs", label="return new CaptureNodeWithConstraint(parent, segment, this, routeSegmentConstraints);", span="68-68"];
m3_36 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetCaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="StatelessAuthentication.cs", label="return new OptionalCaptureNode(parent, segment, this);", span="73-73"];
m3_38 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetCaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="StatelessAuthentication.cs", label="return new GreedyCaptureNode(parent, segment, this);", span="78-78"];
m3_40 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetCaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="StatelessAuthentication.cs", label="return new CaptureNodeWithDefaultValue(parent, segment, this);", span="83-83"];
m3_41 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetCaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="StatelessAuthentication.cs", label="return new CaptureNode(parent, segment, this);", span="86-86"];
m3_33 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetCaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="StatelessAuthentication.cs", label="segment.Contains('':'')", span="66-66"];
m3_35 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetCaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="StatelessAuthentication.cs", label="segment.EndsWith(''?}'')", span="71-71"];
m3_37 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetCaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="StatelessAuthentication.cs", label="segment.EndsWith(''*}'')", span="76-76"];
m3_39 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetCaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="StatelessAuthentication.cs", label="segment.Contains(''?'')", span="81-81"];
m3_42 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetCaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="StatelessAuthentication.cs", label="Exit Nancy.Routing.Trie.TrieNodeFactory.GetCaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string)", span="64-64"];
m3_27 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.IsMatch(string)", file="StatelessAuthentication.cs", label="Entry Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.IsMatch(string)", span="49-49"];
m3_48 [cluster="Nancy.Routing.Trie.Nodes.CaptureNode.CaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory)", file="StatelessAuthentication.cs", label="Entry Nancy.Routing.Trie.Nodes.CaptureNode.CaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory)", span="23-23"];
m3_0 [cluster="Nancy.Authentication.Stateless.StatelessAuthentication.Enable(Nancy.Bootstrapper.IPipelines, Nancy.Authentication.Stateless.StatelessAuthenticationConfiguration)", file="StatelessAuthentication.cs", label="Entry Nancy.Authentication.Stateless.StatelessAuthentication.Enable(Nancy.Bootstrapper.IPipelines, Nancy.Authentication.Stateless.StatelessAuthenticationConfiguration)", span="15-15"];
m3_1 [cluster="Nancy.Authentication.Stateless.StatelessAuthentication.Enable(Nancy.Bootstrapper.IPipelines, Nancy.Authentication.Stateless.StatelessAuthenticationConfiguration)", file="StatelessAuthentication.cs", label="pipelines == null", span="17-17"];
m3_2 [cluster="Nancy.Authentication.Stateless.StatelessAuthentication.Enable(Nancy.Bootstrapper.IPipelines, Nancy.Authentication.Stateless.StatelessAuthenticationConfiguration)", file="StatelessAuthentication.cs", label="throw new ArgumentNullException(''pipelines'');", span="19-19"];
m3_45 [cluster="Nancy.Routing.Trie.Nodes.OptionalCaptureNode.OptionalCaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory)", file="StatelessAuthentication.cs", label="Entry Nancy.Routing.Trie.Nodes.OptionalCaptureNode.OptionalCaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory)", span="25-25"];
m3_30 [cluster="lambda expression", file="StatelessAuthentication.cs", label="Entry lambda expression", span="46-46"];
m3_18 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetNodeForSegment(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="StatelessAuthentication.cs", label="Exit Nancy.Routing.Trie.TrieNodeFactory.GetNodeForSegment(Nancy.Routing.Trie.Nodes.TrieNode, string)", span="30-30"];
m3_17 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetNodeForSegment(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="StatelessAuthentication.cs", label="return new LiteralNode(parent, segment, this);", span="61-61"];
m3_20 [cluster="string.ToCharArray()", file="StatelessAuthentication.cs", label="Entry string.ToCharArray()", span="0-0"];
m3_31 [cluster="lambda expression", file="StatelessAuthentication.cs", label="c == '{' || c == '}'", span="46-46"];
m3_32 [cluster="lambda expression", file="StatelessAuthentication.cs", label="Exit lambda expression", span="46-46"];
m3_28 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.CaptureNodeWithMultipleParameters(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory, System.Collections.Generic.IEnumerable<Nancy.Routing.Constraints.IRouteSegmentConstraint>)", file="StatelessAuthentication.cs", label="Entry Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.CaptureNodeWithMultipleParameters(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory, System.Collections.Generic.IEnumerable<Nancy.Routing.Constraints.IRouteSegmentConstraint>)", span="37-37"];
m3_10 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetNodeForSegment(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="StatelessAuthentication.cs", label="return new RegExNode(parent, segment, this);", span="43-43"];
m3_3 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetNodeForSegment(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="StatelessAuthentication.cs", label="Entry Nancy.Routing.Trie.TrieNodeFactory.GetNodeForSegment(Nancy.Routing.Trie.Nodes.TrieNode, string)", span="30-30"];
m3_5 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetNodeForSegment(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="StatelessAuthentication.cs", label="return new RootNode(this);", span="34-34"];
m3_7 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetNodeForSegment(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="StatelessAuthentication.cs", label="var start = chars[0]", span="38-38"];
m3_4 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetNodeForSegment(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="StatelessAuthentication.cs", label="parent == null", span="32-32"];
m3_6 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetNodeForSegment(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="StatelessAuthentication.cs", label="var chars = segment.ToCharArray()", span="37-37"];
m3_8 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetNodeForSegment(Nancy.Routing.Trie.Nodes.TrieNode, string)", color=green, community=0, file="StatelessAuthentication.cs", label="var end = chars[chars.Length - 1]", prediction=0, span="39-39"];
m3_44 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithConstraint.CaptureNodeWithConstraint(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory, System.Collections.Generic.IEnumerable<Nancy.Routing.Constraints.IRouteSegmentConstraint>)", file="StatelessAuthentication.cs", label="Entry Nancy.Routing.Trie.Nodes.CaptureNodeWithConstraint.CaptureNodeWithConstraint(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory, System.Collections.Generic.IEnumerable<Nancy.Routing.Constraints.IRouteSegmentConstraint>)", span="31-31"];
m3_47 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithDefaultValue.CaptureNodeWithDefaultValue(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory)", file="StatelessAuthentication.cs", label="Entry Nancy.Routing.Trie.Nodes.CaptureNodeWithDefaultValue.CaptureNodeWithDefaultValue(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory)", span="27-27"];
m3_46 [cluster="Nancy.Routing.Trie.Nodes.GreedyCaptureNode.GreedyCaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory)", file="StatelessAuthentication.cs", label="Entry Nancy.Routing.Trie.Nodes.GreedyCaptureNode.GreedyCaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory)", span="31-31"];
m3_49 [file="StatelessAuthentication.cs", label="Nancy.Routing.Trie.TrieNodeFactory", span=""];
m4_0 [cluster="Nancy.Authentication.Stateless.StatelessAuthenticationConfiguration.StatelessAuthenticationConfiguration(System.Func<Nancy.NancyContext, Nancy.Security.IUserIdentity>)", file="StatelessAuthenticationConfiguration.cs", label="Entry Nancy.Authentication.Stateless.StatelessAuthenticationConfiguration.StatelessAuthenticationConfiguration(System.Func<Nancy.NancyContext, Nancy.Security.IUserIdentity>)", span="15-15"];
m4_1 [cluster="Nancy.Authentication.Stateless.StatelessAuthenticationConfiguration.StatelessAuthenticationConfiguration(System.Func<Nancy.NancyContext, Nancy.Security.IUserIdentity>)", file="StatelessAuthenticationConfiguration.cs", label="GetUserIdentity = getUserIdentity", span="17-17"];
m4_2 [cluster="Nancy.Authentication.Stateless.StatelessAuthenticationConfiguration.StatelessAuthenticationConfiguration(System.Func<Nancy.NancyContext, Nancy.Security.IUserIdentity>)", file="StatelessAuthenticationConfiguration.cs", label="Exit Nancy.Authentication.Stateless.StatelessAuthenticationConfiguration.StatelessAuthenticationConfiguration(System.Func<Nancy.NancyContext, Nancy.Security.IUserIdentity>)", span="15-15"];
m4_3 [file="StatelessAuthenticationConfiguration.cs", label="Nancy.Authentication.Stateless.StatelessAuthenticationConfiguration", span=""];
m5_0 [cluster="Nancy.Routing.Trie.Nodes.LiteralNode.LiteralNode(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory)", file="UserDatabase.cs", label="Entry Nancy.Routing.Trie.Nodes.LiteralNode.LiteralNode(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory)", span="23-23"];
m5_1 [cluster="Nancy.Routing.Trie.Nodes.LiteralNode.LiteralNode(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory)", file="UserDatabase.cs", label="Exit Nancy.Routing.Trie.Nodes.LiteralNode.LiteralNode(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory)", span="23-23"];
m5_2 [cluster="Nancy.Routing.Trie.Nodes.LiteralNode.Match(string)", file="UserDatabase.cs", label="Entry Nancy.Routing.Trie.Nodes.LiteralNode.Match(string)", span="33-33"];
m5_3 [cluster="Nancy.Routing.Trie.Nodes.LiteralNode.Match(string)", file="UserDatabase.cs", label="var comparisonType = StaticConfiguration.CaseSensitive ? StringComparison.Ordinal : StringComparison.OrdinalIgnoreCase", span="35-35"];
m5_4 [cluster="Nancy.Routing.Trie.Nodes.LiteralNode.Match(string)", file="UserDatabase.cs", label="string.Equals(\r\n                    segment,\r\n                    this.RouteDefinitionSegment,\r\n                    comparisonType)", span="37-40"];
m5_5 [cluster="Nancy.Routing.Trie.Nodes.LiteralNode.Match(string)", file="UserDatabase.cs", label="return new SegmentMatch(true);", span="42-42"];
m5_6 [cluster="Nancy.Routing.Trie.Nodes.LiteralNode.Match(string)", file="UserDatabase.cs", label="return SegmentMatch.NoMatch;", span="45-45"];
m5_7 [cluster="Nancy.Routing.Trie.Nodes.LiteralNode.Match(string)", file="UserDatabase.cs", label="Exit Nancy.Routing.Trie.Nodes.LiteralNode.Match(string)", span="33-33"];
m5_9 [cluster="Nancy.Routing.Trie.SegmentMatch.SegmentMatch(bool)", file="UserDatabase.cs", label="Entry Nancy.Routing.Trie.SegmentMatch.SegmentMatch(bool)", span="30-30"];
m5_8 [cluster="string.Equals(string, string, System.StringComparison)", file="UserDatabase.cs", label="Entry string.Equals(string, string, System.StringComparison)", span="0-0"];
m5_10 [file="UserDatabase.cs", label="Nancy.Routing.Trie.Nodes.LiteralNode", span=""];
m1_12 -> m1_1  [color=darkseagreen4, key=1, label="Nancy.Demo.Authentication.Stateless.SecureModule", style=dashed];
m1_12 -> m1_8  [color=darkseagreen4, key=1, label="Nancy.Demo.Authentication.Stateless.SecureModule", style=dashed];
m2_0 -> m2_2  [color=darkseagreen4, key=1, label="Nancy.Bootstrapper.IPipelines", style=dashed];
m3_24 -> m3_18  [color=darkseagreen4, key=1, label="Nancy.Authentication.Stateless.StatelessAuthenticationConfiguration", style=dashed];
m3_11 -> m3_15  [color=darkseagreen4, key=1, label="Nancy.Authentication.Stateless.StatelessAuthenticationConfiguration", style=dashed];
m3_11 -> m3_18  [color=darkseagreen4, key=1, label="Nancy.Authentication.Stateless.StatelessAuthenticationConfiguration", style=dashed];
m3_11 -> m3_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_15 -> m3_18  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m3_15 -> m3_19  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m3_15 -> m3_21  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m3_23 -> m3_34  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.Nodes.TrieNode", style=dashed];
m3_23 -> m3_35  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_23 -> m3_36  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.Nodes.TrieNode", style=dashed];
m3_23 -> m3_37  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_23 -> m3_38  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.Nodes.TrieNode", style=dashed];
m3_23 -> m3_39  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_23 -> m3_40  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.Nodes.TrieNode", style=dashed];
m3_23 -> m3_41  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.Nodes.TrieNode", style=dashed];
m3_0 -> m3_3  [color=darkseagreen4, key=1, label="Nancy.Authentication.Stateless.StatelessAuthenticationConfiguration", style=dashed];
m3_0 -> m3_5  [color=darkseagreen4, key=1, label="Nancy.Authentication.Stateless.StatelessAuthenticationConfiguration", style=dashed];
m3_17 -> m3_19  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m3_17 -> m3_21  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m3_3 -> m3_10  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.Nodes.TrieNode", style=dashed];
m3_3 -> m3_12  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.Nodes.TrieNode", style=dashed];
m3_3 -> m3_13  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_3 -> m3_14  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.Nodes.TrieNode", style=dashed];
m3_3 -> m3_15  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_3 -> m3_16  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.Nodes.TrieNode", style=dashed];
m3_3 -> m3_17  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.Nodes.TrieNode", style=dashed];
m3_7 -> m3_9  [color=darkseagreen4, key=1, label=start, style=dashed];
m3_6 -> m3_11  [color=darkseagreen4, key=1, label=chars, style=dashed];
m3_8 -> m3_11  [color=green, key=1, label=end, style=dashed];
m3_49 -> m3_10  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.TrieNodeFactory", style=dashed];
m3_49 -> m3_12  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.TrieNodeFactory", style=dashed];
m3_49 -> m3_14  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.TrieNodeFactory", style=dashed];
m3_49 -> m3_16  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.TrieNodeFactory", style=dashed];
m3_49 -> m3_17  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.TrieNodeFactory", style=dashed];
m3_49 -> m3_5  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.TrieNodeFactory", style=dashed];
m3_49 -> m3_1  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.TrieNodeFactory", style=dashed];
m3_49 -> m3_34  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.TrieNodeFactory", style=dashed];
m3_49 -> m3_36  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.TrieNodeFactory", style=dashed];
m3_49 -> m3_38  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.TrieNodeFactory", style=dashed];
m3_49 -> m3_40  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.TrieNodeFactory", style=dashed];
m3_49 -> m3_41  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.TrieNodeFactory", style=dashed];
m5_2 -> m5_4  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_10 -> m5_4  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.Nodes.LiteralNode", style=dashed];
}
