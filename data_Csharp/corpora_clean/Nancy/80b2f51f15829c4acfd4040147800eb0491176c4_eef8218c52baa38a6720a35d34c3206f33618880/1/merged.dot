digraph  {
n56 [label=fakeValidators, span=""];
n57 [label=fakeValidators, span=""];
n0 [label="Entry Nancy.Tests.Unit.Validation.CompositeValidatorFixture.Should_yield_composite_description()", span="10-10", cluster="Nancy.Tests.Unit.Validation.CompositeValidatorFixture.Should_yield_composite_description()"];
n1 [label="var fakeValidators = A.CollectionOfFake<IModelValidator>(2)", span="13-13", cluster="Nancy.Tests.Unit.Validation.CompositeValidatorFixture.Should_yield_composite_description()"];
n2 [label="A.CallTo(() => fakeValidators[0].Description).Returns(new ModelValidationDescriptor(new[] { new ModelValidationRule(''Test1'', s => s, new[] { ''Member1'' }) }, typeof(object)))", span="14-14", cluster="Nancy.Tests.Unit.Validation.CompositeValidatorFixture.Should_yield_composite_description()"];
n10 [label="Entry Unk.>", span="", cluster="Unk.>"];
n21 [label="fakeValidators[0].Description", span="14-14", cluster="lambda expression"];
n3 [label="A.CallTo(() => fakeValidators[1].Description).Returns(new ModelValidationDescriptor(new[] { new ModelValidationRule(''Test2'', s => s, new[] { ''Member2'' }) }, typeof(object)))", span="15-15", cluster="Nancy.Tests.Unit.Validation.CompositeValidatorFixture.Should_yield_composite_description()"];
n27 [label="fakeValidators[1].Description", span="15-15", cluster="lambda expression"];
n4 [label="var subject = new CompositeValidator(fakeValidators, typeof(object))", span="16-16", cluster="Nancy.Tests.Unit.Validation.CompositeValidatorFixture.Should_yield_composite_description()"];
n11 [label="Entry Unk.CallTo", span="", cluster="Unk.CallTo"];
n12 [label="Entry Nancy.Validation.ModelValidationDescriptor.ModelValidationDescriptor(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationRule>, System.Type)", span="15-15", cluster="Nancy.Validation.ModelValidationDescriptor.ModelValidationDescriptor(System.Collections.Generic.IEnumerable<Nancy.Validation.ModelValidationRule>, System.Type)"];
n13 [label="Entry Nancy.Validation.ModelValidationRule.ModelValidationRule(string, System.Func<string, string>, System.Collections.Generic.IEnumerable<string>)", span="39-39", cluster="Nancy.Validation.ModelValidationRule.ModelValidationRule(string, System.Func<string, string>, System.Collections.Generic.IEnumerable<string>)"];
n14 [label="Entry Unk.Returns", span="", cluster="Unk.Returns"];
n20 [label="Entry lambda expression", span="14-14", cluster="lambda expression"];
n24 [label=s, span="14-14", cluster="lambda expression"];
n26 [label="Entry lambda expression", span="15-15", cluster="lambda expression"];
n30 [label=s, span="15-15", cluster="lambda expression"];
n5 [label="var result = subject.Description", span="19-19", cluster="Nancy.Tests.Unit.Validation.CompositeValidatorFixture.Should_yield_composite_description()"];
n15 [label="Entry CompositeValidator.cstr", span="", cluster="CompositeValidator.cstr"];
n6 [label="result.Rules.ShouldHaveCount(2)", span="22-22", cluster="Nancy.Tests.Unit.Validation.CompositeValidatorFixture.Should_yield_composite_description()"];
n7 [label="result.Rules.First().Value.ShouldHave(r => r.RuleType == ''Test1'' && r.MemberNames.Contains(''Member1''))", span="23-23", cluster="Nancy.Tests.Unit.Validation.CompositeValidatorFixture.Should_yield_composite_description()"];
n8 [label="result.Rules.Last().Value.ShouldHave(r => r.RuleType == ''Test2'' && r.MemberNames.Contains(''Member2''))", span="24-24", cluster="Nancy.Tests.Unit.Validation.CompositeValidatorFixture.Should_yield_composite_description()"];
n16 [label="Entry System.Collections.Generic.IEnumerable<T>.ShouldHaveCount<T>(int)", span="80-80", cluster="System.Collections.Generic.IEnumerable<T>.ShouldHaveCount<T>(int)"];
n17 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()"];
n18 [label="Entry System.Collections.Generic.IEnumerable<T>.ShouldHave<T>(System.Func<T, bool>)", span="75-75", cluster="System.Collections.Generic.IEnumerable<T>.ShouldHave<T>(System.Func<T, bool>)"];
n32 [label="Entry lambda expression", span="23-23", cluster="lambda expression"];
n9 [label="Exit Nancy.Tests.Unit.Validation.CompositeValidatorFixture.Should_yield_composite_description()", span="10-10", cluster="Nancy.Tests.Unit.Validation.CompositeValidatorFixture.Should_yield_composite_description()"];
n19 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()"];
n36 [label="Entry lambda expression", span="24-24", cluster="lambda expression"];
n22 [label="Exit lambda expression", span="14-14", cluster="lambda expression"];
n23 [label="Entry lambda expression", span="14-14", cluster="lambda expression"];
n25 [label="Exit lambda expression", span="14-14", cluster="lambda expression"];
n28 [label="Exit lambda expression", span="15-15", cluster="lambda expression"];
n29 [label="Entry lambda expression", span="15-15", cluster="lambda expression"];
n31 [label="Exit lambda expression", span="15-15", cluster="lambda expression"];
n33 [label="r.RuleType == ''Test1'' && r.MemberNames.Contains(''Member1'')", span="23-23", cluster="lambda expression"];
n34 [label="Exit lambda expression", span="23-23", cluster="lambda expression"];
n35 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)"];
n37 [label="r.RuleType == ''Test2'' && r.MemberNames.Contains(''Member2'')", span="24-24", cluster="lambda expression"];
n38 [label="Exit lambda expression", span="24-24", cluster="lambda expression"];
n39 [label="Entry Nancy.Tests.Unit.Validation.CompositeValidatorFixture.Should_invoke_each_validator()", span="28-28", cluster="Nancy.Tests.Unit.Validation.CompositeValidatorFixture.Should_invoke_each_validator()"];
n40 [label="var fakeValidators = A.CollectionOfFake<IModelValidator>(2)", span="31-31", cluster="Nancy.Tests.Unit.Validation.CompositeValidatorFixture.Should_invoke_each_validator()"];
n41 [label="var subject = new CompositeValidator(fakeValidators, typeof(object))", span="32-32", cluster="Nancy.Tests.Unit.Validation.CompositeValidatorFixture.Should_invoke_each_validator()"];
n43 [label="A.CallTo(() => fakeValidators[0].Validate(A<object>._, A<NancyContext>._)).MustHaveHappened()", span="38-38", cluster="Nancy.Tests.Unit.Validation.CompositeValidatorFixture.Should_invoke_each_validator()"];
n50 [label="fakeValidators[0].Validate(A<object>._, A<NancyContext>._)", span="38-38", cluster="lambda expression"];
n44 [label="A.CallTo(() => fakeValidators[1].Validate(A<object>._, A<NancyContext>._)).MustHaveHappened()", span="39-39", cluster="Nancy.Tests.Unit.Validation.CompositeValidatorFixture.Should_invoke_each_validator()"];
n54 [label="fakeValidators[1].Validate(A<object>._, A<NancyContext>._)", span="39-39", cluster="lambda expression"];
n42 [label="subject.Validate(''blah'', new NancyContext())", span="35-35", cluster="Nancy.Tests.Unit.Validation.CompositeValidatorFixture.Should_invoke_each_validator()"];
n46 [label="Entry Nancy.NancyContext.NancyContext()", span="25-25", cluster="Nancy.NancyContext.NancyContext()"];
n47 [label="Entry Nancy.Validation.CompositeValidator.Validate(object, Nancy.NancyContext)", span="44-44", cluster="Nancy.Validation.CompositeValidator.Validate(object, Nancy.NancyContext)"];
n48 [label="Entry Unk.MustHaveHappened", span="", cluster="Unk.MustHaveHappened"];
n49 [label="Entry lambda expression", span="38-38", cluster="lambda expression"];
n45 [label="Exit Nancy.Tests.Unit.Validation.CompositeValidatorFixture.Should_invoke_each_validator()", span="28-28", cluster="Nancy.Tests.Unit.Validation.CompositeValidatorFixture.Should_invoke_each_validator()"];
n53 [label="Entry lambda expression", span="39-39", cluster="lambda expression"];
n51 [label="Exit lambda expression", span="38-38", cluster="lambda expression"];
n52 [label="Entry Unk.Validate", span="", cluster="Unk.Validate"];
n55 [label="Exit lambda expression", span="39-39", cluster="lambda expression"];
m0_13 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="BrowserResponseExtensionsTests.cs"];
m0_12 [label="Entry Unk.Element", span="", cluster="Unk.Element", file="BrowserResponseExtensionsTests.cs"];
m0_11 [label="Entry Unk.BodyAsXml", span="", cluster="Unk.BodyAsXml", file="BrowserResponseExtensionsTests.cs"];
m0_10 [label="Entry Nancy.Testing.BrowserResponse.BrowserResponse(Nancy.NancyContext)", span="17-17", cluster="Nancy.Testing.BrowserResponse.BrowserResponse(Nancy.NancyContext)", file="BrowserResponseExtensionsTests.cs"];
m0_0 [label="Entry Nancy.Testing.Tests.BrowserResponseExtensionsTests.Should_create_xdocument_from_xml_body()", span="10-10", cluster="Nancy.Testing.Tests.BrowserResponseExtensionsTests.Should_create_xdocument_from_xml_body()", file="BrowserResponseExtensionsTests.cs"];
m0_1 [label="var response = new Response()", span="12-12", cluster="Nancy.Testing.Tests.BrowserResponseExtensionsTests.Should_create_xdocument_from_xml_body()", color=green, community=0, file="BrowserResponseExtensionsTests.cs"];
m0_2 [label="response = ''<tag />''", span="13-13", cluster="Nancy.Testing.Tests.BrowserResponseExtensionsTests.Should_create_xdocument_from_xml_body()", color=green, community=0, file="BrowserResponseExtensionsTests.cs"];
m0_3 [label="var context = new NancyContext() { Response = response }", span="15-15", cluster="Nancy.Testing.Tests.BrowserResponseExtensionsTests.Should_create_xdocument_from_xml_body()", color=green, community=0, file="BrowserResponseExtensionsTests.cs"];
m0_4 [label="sut = new BrowserResponse(context)", span="16-16", cluster="Nancy.Testing.Tests.BrowserResponseExtensionsTests.Should_create_xdocument_from_xml_body()", color=green, community=0, file="BrowserResponseExtensionsTests.cs"];
m0_5 [label="var bodyAsXml = sut.BodyAsXml()", span="16-16", cluster="Nancy.Testing.Tests.BrowserResponseExtensionsTests.Should_create_xdocument_from_xml_body()", color=green, community=0, file="BrowserResponseExtensionsTests.cs"];
m0_6 [label="Assert.NotNull(bodyAsXml.Element(''tag''))", span="18-18", cluster="Nancy.Testing.Tests.BrowserResponseExtensionsTests.Should_create_xdocument_from_xml_body()", color=green, community=0, file="BrowserResponseExtensionsTests.cs"];
m0_7 [label="Exit Nancy.Testing.Tests.BrowserResponseExtensionsTests.Should_create_xdocument_from_xml_body()", span="10-10", cluster="Nancy.Testing.Tests.BrowserResponseExtensionsTests.Should_create_xdocument_from_xml_body()", file="BrowserResponseExtensionsTests.cs"];
m0_9 [label="Entry Nancy.NancyContext.NancyContext()", span="16-16", cluster="Nancy.NancyContext.NancyContext()", file="BrowserResponseExtensionsTests.cs"];
m0_8 [label="Entry Nancy.Response.Response()", span="15-15", cluster="Nancy.Response.Response()", file="BrowserResponseExtensionsTests.cs"];
m0_22 [label="Entry lambda expression", span="30-30", cluster="lambda expression", file="BrowserResponseExtensionsTests.cs"];
m0_23 [label="sut.BodyAsXml()", span="30-30", cluster="lambda expression", file="BrowserResponseExtensionsTests.cs"];
m0_24 [label="Exit lambda expression", span="30-30", cluster="lambda expression", file="BrowserResponseExtensionsTests.cs"];
m0_14 [label="Entry Nancy.Testing.Tests.BrowserResponseExtensionsTests.Should_fail_to_create_xdocument_from_non_xml_body()", span="22-22", cluster="Nancy.Testing.Tests.BrowserResponseExtensionsTests.Should_fail_to_create_xdocument_from_non_xml_body()", file="BrowserResponseExtensionsTests.cs"];
m0_15 [label="var response = new Response()", span="24-24", cluster="Nancy.Testing.Tests.BrowserResponseExtensionsTests.Should_fail_to_create_xdocument_from_non_xml_body()", color=green, community=0, file="BrowserResponseExtensionsTests.cs"];
m0_16 [label="response = ''hello''", span="25-25", cluster="Nancy.Testing.Tests.BrowserResponseExtensionsTests.Should_fail_to_create_xdocument_from_non_xml_body()", color=green, community=0, file="BrowserResponseExtensionsTests.cs"];
m0_17 [label="var context = new NancyContext() { Response = response }", span="27-27", cluster="Nancy.Testing.Tests.BrowserResponseExtensionsTests.Should_fail_to_create_xdocument_from_non_xml_body()", color=green, community=0, file="BrowserResponseExtensionsTests.cs"];
m0_18 [label="sut = new BrowserResponse(context)", span="28-28", cluster="Nancy.Testing.Tests.BrowserResponseExtensionsTests.Should_fail_to_create_xdocument_from_non_xml_body()", file="BrowserResponseExtensionsTests.cs"];
m0_19 [label="Assert.Throws<XmlException>(() => sut.BodyAsXml())", span="30-30", cluster="Nancy.Testing.Tests.BrowserResponseExtensionsTests.Should_fail_to_create_xdocument_from_non_xml_body()", file="BrowserResponseExtensionsTests.cs"];
m0_20 [label="Exit Nancy.Testing.Tests.BrowserResponseExtensionsTests.Should_fail_to_create_xdocument_from_non_xml_body()", span="22-22", cluster="Nancy.Testing.Tests.BrowserResponseExtensionsTests.Should_fail_to_create_xdocument_from_non_xml_body()", file="BrowserResponseExtensionsTests.cs"];
m0_25 [label="Nancy.Testing.Tests.BrowserResponseExtensionsTests", span="", file="BrowserResponseExtensionsTests.cs"];
m1_61 [label="Entry Nancy.Responses.XmlResponse<TModel>.XmlResponse(TModel, string)", span="8-8", cluster="Nancy.Responses.XmlResponse<TModel>.XmlResponse(TModel, string)", file="ContextExtensionsTests.cs"];
m1_37 [label="Entry Nancy.Testing.Tests.ContextExtensionsTests.Model.Model()", span="42-42", cluster="Nancy.Testing.Tests.ContextExtensionsTests.Model.Model()", file="ContextExtensionsTests.cs"];
m1_56 [label="Entry Nancy.Testing.Tests.ContextExtensionsTests.Should_create_new_wrapper_from_xml_response_if_not_already_present()", span="83-83", cluster="Nancy.Testing.Tests.ContextExtensionsTests.Should_create_new_wrapper_from_xml_response_if_not_already_present()", file="ContextExtensionsTests.cs"];
m1_57 [label="var response = new XmlResponse<Model>(new Model() { Dummy = ''Data'' }, ''text/xml'')", span="85-85", cluster="Nancy.Testing.Tests.ContextExtensionsTests.Should_create_new_wrapper_from_xml_response_if_not_already_present()", color=green, community=0, file="ContextExtensionsTests.cs"];
m1_58 [label="var context = new NancyContext() { Response = response }", span="86-86", cluster="Nancy.Testing.Tests.ContextExtensionsTests.Should_create_new_wrapper_from_xml_response_if_not_already_present()", color=green, community=0, file="ContextExtensionsTests.cs"];
m1_59 [label="var result = context.XmlBody<Model>()", span="88-88", cluster="Nancy.Testing.Tests.ContextExtensionsTests.Should_create_new_wrapper_from_xml_response_if_not_already_present()", color=green, community=0, file="ContextExtensionsTests.cs"];
m1_60 [label="Exit Nancy.Testing.Tests.ContextExtensionsTests.Should_create_new_wrapper_from_xml_response_if_not_already_present()", span="83-83", cluster="Nancy.Testing.Tests.ContextExtensionsTests.Should_create_new_wrapper_from_xml_response_if_not_already_present()", file="ContextExtensionsTests.cs"];
m1_10 [label="Entry object.ShouldBeSameAs(object)", span="115-115", cluster="object.ShouldBeSameAs(object)", file="ContextExtensionsTests.cs"];
m1_62 [label="Entry Nancy.Testing.Tests.ContextExtensionsTests.Should_fail_to_return_xml_body_on_non_xml_response()", span="93-93", cluster="Nancy.Testing.Tests.ContextExtensionsTests.Should_fail_to_return_xml_body_on_non_xml_response()", file="ContextExtensionsTests.cs"];
m1_63 [label="var response = new JsonResponse<Model>(new Model() { Dummy = ''Data'' })", span="95-95", cluster="Nancy.Testing.Tests.ContextExtensionsTests.Should_fail_to_return_xml_body_on_non_xml_response()", color=green, community=0, file="ContextExtensionsTests.cs"];
m1_64 [label="var context = new NancyContext() { Response = response }", span="96-96", cluster="Nancy.Testing.Tests.ContextExtensionsTests.Should_fail_to_return_xml_body_on_non_xml_response()", color=green, community=0, file="ContextExtensionsTests.cs"];
m1_65 [label="Assert.Throws<InvalidOperationException>(() => context.XmlBody<Model>())", span="98-98", cluster="Nancy.Testing.Tests.ContextExtensionsTests.Should_fail_to_return_xml_body_on_non_xml_response()", color=green, community=0, file="ContextExtensionsTests.cs"];
m1_66 [label="Exit Nancy.Testing.Tests.ContextExtensionsTests.Should_fail_to_return_xml_body_on_non_xml_response()", span="93-93", cluster="Nancy.Testing.Tests.ContextExtensionsTests.Should_fail_to_return_xml_body_on_non_xml_response()", file="ContextExtensionsTests.cs"];
m1_38 [label="Entry Nancy.NancyContext.JsonBody<TModel>()", span="47-47", cluster="Nancy.NancyContext.JsonBody<TModel>()", file="ContextExtensionsTests.cs"];
m1_46 [label="Entry object.ShouldEqual(object)", span="80-80", cluster="object.ShouldEqual(object)", file="ContextExtensionsTests.cs"];
m1_47 [label=bodyBytes, span="", cluster="Nancy.Testing.Tests.ContextExtensionsTests.Should_use_xmlresponse_from_context_if_it_is_present()", file="ContextExtensionsTests.cs"];
m1_48 [label="var model = new Model() { Dummy = ''Data'' }", span="73-73", cluster="Nancy.Testing.Tests.ContextExtensionsTests.Should_use_xmlresponse_from_context_if_it_is_present()", color=green, community=0, file="ContextExtensionsTests.cs"];
m1_49 [label="var context = new NancyContext()", span="74-74", cluster="Nancy.Testing.Tests.ContextExtensionsTests.Should_use_xmlresponse_from_context_if_it_is_present()", color=green, community=0, file="ContextExtensionsTests.cs"];
m1_50 [label="context.Items[''@@@@XMLRESPONSE@@@@''] = model", span="75-75", cluster="Nancy.Testing.Tests.ContextExtensionsTests.Should_use_xmlresponse_from_context_if_it_is_present()", color=green, community=0, file="ContextExtensionsTests.cs"];
m1_52 [label="result.ShouldBeSameAs(model)", span="79-79", cluster="Nancy.Testing.Tests.ContextExtensionsTests.Should_use_xmlresponse_from_context_if_it_is_present()", color=green, community=0, file="ContextExtensionsTests.cs"];
m1_51 [label="var result = context.XmlBody<Model>()", span="77-77", cluster="Nancy.Testing.Tests.ContextExtensionsTests.Should_use_xmlresponse_from_context_if_it_is_present()", color=green, community=0, file="ContextExtensionsTests.cs"];
m1_53 [label="Exit Nancy.Testing.Tests.ContextExtensionsTests.Should_use_xmlresponse_from_context_if_it_is_present()", span="71-71", cluster="Nancy.Testing.Tests.ContextExtensionsTests.Should_use_xmlresponse_from_context_if_it_is_present()", file="ContextExtensionsTests.cs"];
m1_29 [label="Entry System.IO.Stream.Write(byte[], int, int)", span="0-0", cluster="System.IO.Stream.Write(byte[], int, int)", file="ContextExtensionsTests.cs"];
m1_39 [label="Entry Nancy.Testing.Tests.ContextExtensionsTests.Should_create_new_wrapper_from_json_response_if_not_already_present()", span="60-60", cluster="Nancy.Testing.Tests.ContextExtensionsTests.Should_create_new_wrapper_from_json_response_if_not_already_present()", file="ContextExtensionsTests.cs"];
m1_40 [label="var response = new JsonResponse<Model>(new Model() { Dummy = ''Data'' })", span="62-62", cluster="Nancy.Testing.Tests.ContextExtensionsTests.Should_create_new_wrapper_from_json_response_if_not_already_present()", color=green, community=0, file="ContextExtensionsTests.cs"];
m1_41 [label="var context = new NancyContext() { Response = response }", span="63-63", cluster="Nancy.Testing.Tests.ContextExtensionsTests.Should_create_new_wrapper_from_json_response_if_not_already_present()", file="ContextExtensionsTests.cs"];
m1_42 [label="var result = context.JsonBody<Model>()", span="65-65", cluster="Nancy.Testing.Tests.ContextExtensionsTests.Should_create_new_wrapper_from_json_response_if_not_already_present()", color=green, community=0, file="ContextExtensionsTests.cs"];
m1_43 [label="result.Dummy.ShouldEqual(''Data'')", span="67-67", cluster="Nancy.Testing.Tests.ContextExtensionsTests.Should_create_new_wrapper_from_json_response_if_not_already_present()", file="ContextExtensionsTests.cs"];
m1_44 [label="Exit Nancy.Testing.Tests.ContextExtensionsTests.Should_create_new_wrapper_from_json_response_if_not_already_present()", span="60-60", cluster="Nancy.Testing.Tests.ContextExtensionsTests.Should_create_new_wrapper_from_json_response_if_not_already_present()", file="ContextExtensionsTests.cs"];
m1_11 [label="Entry Nancy.Testing.Tests.ContextExtensionsTests.Should_create_new_wrapper_from_html_response_if_not_already_present()", span="24-24", cluster="Nancy.Testing.Tests.ContextExtensionsTests.Should_create_new_wrapper_from_html_response_if_not_already_present()", file="ContextExtensionsTests.cs"];
m1_12 [label="var called = false", span="26-26", cluster="Nancy.Testing.Tests.ContextExtensionsTests.Should_create_new_wrapper_from_html_response_if_not_already_present()", file="ContextExtensionsTests.cs"];
m1_13 [label="var bodyBytes = Encoding.ASCII.GetBytes(''<html></html>'')", span="27-27", cluster="Nancy.Testing.Tests.ContextExtensionsTests.Should_create_new_wrapper_from_html_response_if_not_already_present()", file="ContextExtensionsTests.cs"];
m1_14 [label="Action<Stream> bodyDelegate = (s) =>\r\n			{\r\n				s.Write(bodyBytes, 0, bodyBytes.Length);\r\n				called = true;\r\n			}", span="28-32", cluster="Nancy.Testing.Tests.ContextExtensionsTests.Should_create_new_wrapper_from_html_response_if_not_already_present()", file="ContextExtensionsTests.cs"];
m1_15 [label="var response = new Response { Contents = bodyDelegate }", span="33-33", cluster="Nancy.Testing.Tests.ContextExtensionsTests.Should_create_new_wrapper_from_html_response_if_not_already_present()", file="ContextExtensionsTests.cs"];
m1_16 [label="var context = new NancyContext() { Response = response }", span="34-34", cluster="Nancy.Testing.Tests.ContextExtensionsTests.Should_create_new_wrapper_from_html_response_if_not_already_present()", file="ContextExtensionsTests.cs"];
m1_17 [label="var result = context.DocumentBody()", span="36-36", cluster="Nancy.Testing.Tests.ContextExtensionsTests.Should_create_new_wrapper_from_html_response_if_not_already_present()", file="ContextExtensionsTests.cs"];
m1_18 [label="result.ShouldBeOfType(typeof(DocumentWrapper))", span="38-38", cluster="Nancy.Testing.Tests.ContextExtensionsTests.Should_create_new_wrapper_from_html_response_if_not_already_present()", file="ContextExtensionsTests.cs"];
m1_19 [label="called.ShouldBeTrue()", span="39-39", cluster="Nancy.Testing.Tests.ContextExtensionsTests.Should_create_new_wrapper_from_html_response_if_not_already_present()", file="ContextExtensionsTests.cs"];
m1_20 [label="Exit Nancy.Testing.Tests.ContextExtensionsTests.Should_create_new_wrapper_from_html_response_if_not_already_present()", span="24-24", cluster="Nancy.Testing.Tests.ContextExtensionsTests.Should_create_new_wrapper_from_html_response_if_not_already_present()", file="ContextExtensionsTests.cs"];
m1_7 [label="Entry Nancy.Testing.DocumentWrapper.DocumentWrapper(string)", span="47-47", cluster="Nancy.Testing.DocumentWrapper.DocumentWrapper(string)", file="ContextExtensionsTests.cs"];
m1_24 [label="Entry bool.ShouldBeTrue()", span="70-70", cluster="bool.ShouldBeTrue()", file="ContextExtensionsTests.cs"];
m1_0 [label="Entry Nancy.Testing.Tests.ContextExtensionsTests.Should_use_documentwrapper_from_context_if_it_is_present()", span="12-12", cluster="Nancy.Testing.Tests.ContextExtensionsTests.Should_use_documentwrapper_from_context_if_it_is_present()", file="ContextExtensionsTests.cs"];
m1_1 [label="var wrapper = new DocumentWrapper(''<html></html>'')", span="14-14", cluster="Nancy.Testing.Tests.ContextExtensionsTests.Should_use_documentwrapper_from_context_if_it_is_present()", file="ContextExtensionsTests.cs"];
m1_2 [label="var context = new NancyContext()", span="15-15", cluster="Nancy.Testing.Tests.ContextExtensionsTests.Should_use_documentwrapper_from_context_if_it_is_present()", file="ContextExtensionsTests.cs"];
m1_3 [label="context.Items[''@@@@DOCUMENT_WRAPPER@@@@''] = wrapper", span="16-16", cluster="Nancy.Testing.Tests.ContextExtensionsTests.Should_use_documentwrapper_from_context_if_it_is_present()", file="ContextExtensionsTests.cs"];
m1_5 [label="result.ShouldBeSameAs(wrapper)", span="20-20", cluster="Nancy.Testing.Tests.ContextExtensionsTests.Should_use_documentwrapper_from_context_if_it_is_present()", file="ContextExtensionsTests.cs"];
m1_4 [label="var result = context.DocumentBody()", span="18-18", cluster="Nancy.Testing.Tests.ContextExtensionsTests.Should_use_documentwrapper_from_context_if_it_is_present()", file="ContextExtensionsTests.cs"];
m1_6 [label="Exit Nancy.Testing.Tests.ContextExtensionsTests.Should_use_documentwrapper_from_context_if_it_is_present()", span="12-12", cluster="Nancy.Testing.Tests.ContextExtensionsTests.Should_use_documentwrapper_from_context_if_it_is_present()", file="ContextExtensionsTests.cs"];
m1_55 [label="Entry Unk.ShouldBeSameAs", span="", cluster="Unk.ShouldBeSameAs", file="ContextExtensionsTests.cs"];
m1_8 [label="Entry Nancy.NancyContext.NancyContext()", span="16-16", cluster="Nancy.NancyContext.NancyContext()", file="ContextExtensionsTests.cs"];
m1_67 [label="Entry lambda expression", span="98-98", cluster="lambda expression", file="ContextExtensionsTests.cs"];
m1_26 [label="s.Write(bodyBytes, 0, bodyBytes.Length)", span="30-30", cluster="lambda expression", file="ContextExtensionsTests.cs"];
m1_25 [label="Entry lambda expression", span="28-32", cluster="lambda expression", file="ContextExtensionsTests.cs"];
m1_27 [label="called = true", span="31-31", cluster="lambda expression", file="ContextExtensionsTests.cs"];
m1_28 [label="Exit lambda expression", span="28-32", cluster="lambda expression", file="ContextExtensionsTests.cs"];
m1_68 [label="context.XmlBody<Model>()", span="98-98", cluster="lambda expression", color=green, community=0, file="ContextExtensionsTests.cs"];
m1_69 [label="Exit lambda expression", span="98-98", cluster="lambda expression", file="ContextExtensionsTests.cs"];
m1_21 [label="Entry System.Text.Encoding.GetBytes(string)", span="0-0", cluster="System.Text.Encoding.GetBytes(string)", file="ContextExtensionsTests.cs"];
m1_9 [label="Entry Nancy.NancyContext.DocumentBody()", span="34-34", cluster="Nancy.NancyContext.DocumentBody()", file="ContextExtensionsTests.cs"];
m1_45 [label="Entry Nancy.Responses.JsonResponse<TModel>.JsonResponse(TModel)", span="8-8", cluster="Nancy.Responses.JsonResponse<TModel>.JsonResponse(TModel)", file="ContextExtensionsTests.cs"];
m1_23 [label="Entry object.ShouldBeOfType(System.Type)", span="140-140", cluster="object.ShouldBeOfType(System.Type)", file="ContextExtensionsTests.cs"];
m1_30 [label="Entry Nancy.Testing.Tests.ContextExtensionsTests.Should_use_jsonresponse_from_context_if_it_is_present()", span="48-48", cluster="Nancy.Testing.Tests.ContextExtensionsTests.Should_use_jsonresponse_from_context_if_it_is_present()", file="ContextExtensionsTests.cs"];
m1_31 [label="var model = new Model() { Dummy = ''Data'' }", span="50-50", cluster="Nancy.Testing.Tests.ContextExtensionsTests.Should_use_jsonresponse_from_context_if_it_is_present()", color=green, community=0, file="ContextExtensionsTests.cs"];
m1_32 [label="var context = new NancyContext()", span="51-51", cluster="Nancy.Testing.Tests.ContextExtensionsTests.Should_use_jsonresponse_from_context_if_it_is_present()", file="ContextExtensionsTests.cs"];
m1_33 [label="context.Items[''@@@@JSONRESPONSE@@@@''] = model", span="52-52", cluster="Nancy.Testing.Tests.ContextExtensionsTests.Should_use_jsonresponse_from_context_if_it_is_present()", file="ContextExtensionsTests.cs"];
m1_35 [label="result.ShouldBeSameAs(model)", span="56-56", cluster="Nancy.Testing.Tests.ContextExtensionsTests.Should_use_jsonresponse_from_context_if_it_is_present()", file="ContextExtensionsTests.cs"];
m1_34 [label="var result = context.JsonBody<Model>()", span="54-54", cluster="Nancy.Testing.Tests.ContextExtensionsTests.Should_use_jsonresponse_from_context_if_it_is_present()", color=green, community=0, file="ContextExtensionsTests.cs"];
m1_36 [label="Exit Nancy.Testing.Tests.ContextExtensionsTests.Should_use_jsonresponse_from_context_if_it_is_present()", span="48-48", cluster="Nancy.Testing.Tests.ContextExtensionsTests.Should_use_jsonresponse_from_context_if_it_is_present()", file="ContextExtensionsTests.cs"];
m1_22 [label="Entry Nancy.Response.Response()", span="15-15", cluster="Nancy.Response.Response()", file="ContextExtensionsTests.cs"];
m1_71 [label=context, span="", file="ContextExtensionsTests.cs"];
m2_0 [label="Entry Nancy.Demo.Authentication.Stateless.AuthModule.AuthModule()", span="4-4", cluster="Nancy.Demo.Authentication.Stateless.AuthModule.AuthModule()", file="NancyContextExtensions.cs"];
m2_1 [label="Post[''/''] = x =>\r\n                {\r\n                    string apiKey = UserDatabase.ValidateUser((string) Request.Form.Username,\r\n                                                              (string) Request.Form.Password);\r\n\r\n                    return string.IsNullOrEmpty(apiKey)\r\n                               ? new Response {StatusCode = HttpStatusCode.Unauthorized}\r\n                               : Response.AsJson(new {ApiKey = apiKey});\r\n                }", span="7-15", cluster="Nancy.Demo.Authentication.Stateless.AuthModule.AuthModule()", file="NancyContextExtensions.cs", color=green, community=0];
m2_2 [label="Delete[''/''] = x =>\r\n                {\r\n                    var apiKey = (string) Request.Form.ApiKey;\r\n                    UserDatabase.RemoveApiKey(apiKey);\r\n                    return new Response {StatusCode = HttpStatusCode.OK};\r\n                }", span="18-23", cluster="Nancy.Demo.Authentication.Stateless.AuthModule.AuthModule()", file="NancyContextExtensions.cs"];
m2_3 [label="Exit Nancy.Demo.Authentication.Stateless.AuthModule.AuthModule()", span="4-4", cluster="Nancy.Demo.Authentication.Stateless.AuthModule.AuthModule()", file="NancyContextExtensions.cs"];
m2_8 [label="Entry Nancy.Demo.Authentication.Stateless.UserDatabase.ValidateUser(string, string)", span="31-31", cluster="Nancy.Demo.Authentication.Stateless.UserDatabase.ValidateUser(string, string)", file="NancyContextExtensions.cs"];
m2_11 [label="Entry Nancy.IResponseFormatter.AsJson<TModel>(TModel, Nancy.HttpStatusCode)", span="52-52", cluster="Nancy.IResponseFormatter.AsJson<TModel>(TModel, Nancy.HttpStatusCode)", file="NancyContextExtensions.cs"];
m2_9 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="NancyContextExtensions.cs"];
m2_17 [label="Entry Nancy.Demo.Authentication.Stateless.UserDatabase.RemoveApiKey(string)", span="47-47", cluster="Nancy.Demo.Authentication.Stateless.UserDatabase.RemoveApiKey(string)", file="NancyContextExtensions.cs"];
m2_10 [label="Entry Nancy.Response.Response()", span="20-20", cluster="Nancy.Response.Response()", file="NancyContextExtensions.cs"];
m2_12 [label="Entry lambda expression", span="18-23", cluster="lambda expression", file="NancyContextExtensions.cs"];
m2_4 [label="Entry lambda expression", span="7-15", cluster="lambda expression", file="NancyContextExtensions.cs"];
m2_5 [label="string apiKey = UserDatabase.ValidateUser((string) Request.Form.Username,\r\n                                                              (string) Request.Form.Password)", span="9-10", cluster="lambda expression", file="NancyContextExtensions.cs"];
m2_6 [label="return string.IsNullOrEmpty(apiKey)\r\n                               ? new Response {StatusCode = HttpStatusCode.Unauthorized}\r\n                               : Response.AsJson(new {ApiKey = apiKey});", span="12-14", cluster="lambda expression", file="NancyContextExtensions.cs"];
m2_7 [label="Exit lambda expression", span="7-15", cluster="lambda expression", file="NancyContextExtensions.cs"];
m2_13 [label="var apiKey = (string) Request.Form.ApiKey", span="20-20", cluster="lambda expression", file="NancyContextExtensions.cs"];
m2_14 [label="UserDatabase.RemoveApiKey(apiKey)", span="21-21", cluster="lambda expression", file="NancyContextExtensions.cs"];
m2_15 [label="return new Response {StatusCode = HttpStatusCode.OK};", span="22-22", cluster="lambda expression", file="NancyContextExtensions.cs"];
m2_16 [label="Exit lambda expression", span="18-23", cluster="lambda expression", file="NancyContextExtensions.cs"];
m2_18 [label="Nancy.Demo.Authentication.Stateless.AuthModule", span="", file="NancyContextExtensions.cs"];
n56 -> n21  [key=1, style=dashed, color=darkseagreen4, label=fakeValidators];
n56 -> n27  [key=1, style=dashed, color=darkseagreen4, label=fakeValidators];
n57 -> n50  [key=1, style=dashed, color=darkseagreen4, label=fakeValidators];
n57 -> n54  [key=1, style=dashed, color=darkseagreen4, label=fakeValidators];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n10  [key=2, style=dotted];
n1 -> n21  [key=1, style=dashed, color=darkseagreen4, label=fakeValidators];
n1 -> n3  [key=1, style=dashed, color=darkseagreen4, label=fakeValidators];
n1 -> n27  [key=1, style=dashed, color=darkseagreen4, label=fakeValidators];
n1 -> n4  [key=1, style=dashed, color=darkseagreen4, label=fakeValidators];
n2 -> n3  [key=0, style=solid];
n2 -> n11  [key=2, style=dotted];
n2 -> n12  [key=2, style=dotted];
n2 -> n13  [key=2, style=dotted];
n2 -> n14  [key=2, style=dotted];
n2 -> n20  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n2 -> n24  [key=1, style=dashed, color=darkseagreen4, label=string];
n21 -> n22  [key=0, style=solid];
n3 -> n4  [key=0, style=solid];
n3 -> n11  [key=2, style=dotted];
n3 -> n12  [key=2, style=dotted];
n3 -> n13  [key=2, style=dotted];
n3 -> n14  [key=2, style=dotted];
n3 -> n26  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n3 -> n30  [key=1, style=dashed, color=darkseagreen4, label=string];
n27 -> n28  [key=0, style=solid];
n4 -> n5  [key=0, style=solid];
n4 -> n15  [key=2, style=dotted];
n20 -> n21  [key=0, style=solid];
n24 -> n25  [key=0, style=solid];
n26 -> n27  [key=0, style=solid];
n30 -> n31  [key=0, style=solid];
n5 -> n6  [key=0, style=solid];
n5 -> n7  [key=1, style=dashed, color=darkseagreen4, label=result];
n5 -> n8  [key=1, style=dashed, color=darkseagreen4, label=result];
n6 -> n7  [key=0, style=solid];
n6 -> n16  [key=2, style=dotted];
n7 -> n8  [key=0, style=solid];
n7 -> n17  [key=2, style=dotted];
n7 -> n18  [key=2, style=dotted];
n7 -> n32  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n8 -> n9  [key=0, style=solid];
n8 -> n19  [key=2, style=dotted];
n8 -> n18  [key=2, style=dotted];
n8 -> n36  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n32 -> n33  [key=0, style=solid];
n9 -> n0  [key=0, style=bold, color=blue];
n36 -> n37  [key=0, style=solid];
n22 -> n20  [key=0, style=bold, color=blue];
n23 -> n24  [key=0, style=solid];
n25 -> n23  [key=0, style=bold, color=blue];
n28 -> n26  [key=0, style=bold, color=blue];
n29 -> n30  [key=0, style=solid];
n31 -> n29  [key=0, style=bold, color=blue];
n33 -> n34  [key=0, style=solid];
n33 -> n35  [key=2, style=dotted];
n34 -> n32  [key=0, style=bold, color=blue];
n37 -> n38  [key=0, style=solid];
n37 -> n35  [key=2, style=dotted];
n38 -> n36  [key=0, style=bold, color=blue];
n39 -> n40  [key=0, style=solid];
n40 -> n41  [key=0, style=solid];
n40 -> n10  [key=2, style=dotted];
n40 -> n43  [key=1, style=dashed, color=darkseagreen4, label=fakeValidators];
n40 -> n50  [key=1, style=dashed, color=darkseagreen4, label=fakeValidators];
n40 -> n44  [key=1, style=dashed, color=darkseagreen4, label=fakeValidators];
n40 -> n54  [key=1, style=dashed, color=darkseagreen4, label=fakeValidators];
n41 -> n42  [key=0, style=solid];
n41 -> n15  [key=2, style=dotted];
n43 -> n44  [key=0, style=solid];
n43 -> n11  [key=2, style=dotted];
n43 -> n48  [key=2, style=dotted];
n43 -> n49  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n50 -> n51  [key=0, style=solid];
n50 -> n52  [key=2, style=dotted];
n44 -> n45  [key=0, style=solid];
n44 -> n11  [key=2, style=dotted];
n44 -> n48  [key=2, style=dotted];
n44 -> n53  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n54 -> n55  [key=0, style=solid];
n54 -> n52  [key=2, style=dotted];
n42 -> n43  [key=0, style=solid];
n42 -> n46  [key=2, style=dotted];
n42 -> n47  [key=2, style=dotted];
n49 -> n50  [key=0, style=solid];
n45 -> n39  [key=0, style=bold, color=blue];
n53 -> n54  [key=0, style=solid];
n51 -> n49  [key=0, style=bold, color=blue];
n55 -> n53  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid, color=green];
m0_1 -> m0_2  [key=0, style=solid, color=green];
m0_1 -> m0_8  [key=2, style=dotted, color=green];
m0_2 -> m0_3  [key=0, style=solid, color=green];
m0_3 -> m0_4  [key=0, style=solid, color=green];
m0_3 -> m0_9  [key=2, style=dotted, color=green];
m0_4 -> m0_5  [key=0, style=solid, color=green];
m0_4 -> m0_10  [key=2, style=dotted, color=green];
m0_5 -> m0_6  [key=0, style=solid, color=green];
m0_5 -> m0_11  [key=2, style=dotted, color=green];
m0_6 -> m0_7  [key=0, style=solid, color=green];
m0_6 -> m0_12  [key=2, style=dotted, color=green];
m0_6 -> m0_13  [key=2, style=dotted, color=green];
m0_7 -> m0_0  [key=0, style=bold, color=blue];
m0_22 -> m0_23  [key=0, style=solid];
m0_23 -> m0_11  [key=2, style=dotted];
m0_23 -> m0_24  [key=0, style=solid];
m0_24 -> m0_22  [key=0, style=bold, color=blue];
m0_14 -> m0_15  [key=0, style=solid, color=green];
m0_15 -> m0_16  [key=0, style=solid, color=green];
m0_15 -> m0_8  [key=2, style=dotted, color=green];
m0_16 -> m0_17  [key=0, style=solid, color=green];
m0_17 -> m0_18  [key=0, style=solid, color=green];
m0_17 -> m0_9  [key=2, style=dotted, color=green];
m0_18 -> m0_10  [key=2, style=dotted];
m0_18 -> m0_19  [key=0, style=solid];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> n10  [key=2, style=dotted];
m0_19 -> m0_22  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_20 -> m0_14  [key=0, style=bold, color=blue];
m0_25 -> m0_4  [key=1, style=dashed, color=green, label="Nancy.Testing.Tests.BrowserResponseExtensionsTests"];
m0_25 -> m0_5  [key=1, style=dashed, color=green, label="Nancy.Testing.Tests.BrowserResponseExtensionsTests"];
m0_25 -> m0_18  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.Tests.BrowserResponseExtensionsTests"];
m0_25 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.Tests.BrowserResponseExtensionsTests"];
m0_25 -> m0_23  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.Tests.BrowserResponseExtensionsTests"];
m1_56 -> m1_57  [key=0, style=solid, color=green];
m1_57 -> m1_58  [key=0, style=solid, color=green];
m1_57 -> m1_61  [key=2, style=dotted, color=green];
m1_57 -> m1_37  [key=2, style=dotted, color=green];
m1_58 -> m1_59  [key=0, style=solid, color=green];
m1_58 -> m1_8  [key=2, style=dotted, color=green];
m1_59 -> m1_60  [key=0, style=solid, color=green];
m1_59 -> n10  [key=2, style=dotted, color=green];
m1_60 -> m1_56  [key=0, style=bold, color=blue];
m1_62 -> m1_63  [key=0, style=solid, color=green];
m1_63 -> m1_64  [key=0, style=solid, color=green];
m1_63 -> m1_45  [key=2, style=dotted, color=green];
m1_63 -> m1_37  [key=2, style=dotted, color=green];
m1_64 -> m1_65  [key=0, style=solid, color=green];
m1_64 -> m1_8  [key=2, style=dotted, color=green];
m1_64 -> m1_68  [key=1, style=dashed, color=green, label=context];
m1_65 -> m1_66  [key=0, style=solid, color=green];
m1_65 -> n10  [key=2, style=dotted, color=green];
m1_65 -> m1_67  [key=1, style=dashed, color=green, label="lambda expression"];
m1_66 -> m1_62  [key=0, style=bold, color=blue];
m1_47 -> m1_48  [key=0, style=solid, color=green];
m1_47 -> m1_26  [key=1, style=dashed, color=darkseagreen4, label=bodyBytes];
m1_48 -> m1_49  [key=0, style=solid, color=green];
m1_48 -> m1_37  [key=2, style=dotted, color=green];
m1_48 -> m1_50  [key=1, style=dashed, color=green, label=model];
m1_48 -> m1_52  [key=1, style=dashed, color=green, label=model];
m1_49 -> m1_50  [key=0, style=solid, color=green];
m1_49 -> m1_8  [key=2, style=dotted, color=green];
m1_49 -> m1_51  [key=1, style=dashed, color=green, label=context];
m1_50 -> m1_51  [key=0, style=solid, color=green];
m1_52 -> m1_53  [key=0, style=solid, color=green];
m1_52 -> m1_55  [key=2, style=dotted, color=green];
m1_51 -> m1_52  [key=0, style=solid, color=green];
m1_51 -> n10  [key=2, style=dotted, color=green];
m1_53 -> m1_47  [key=0, style=bold, color=blue];
m1_39 -> m1_40  [key=0, style=solid, color=green];
m1_40 -> m1_41  [key=0, style=solid, color=green];
m1_40 -> m1_45  [key=2, style=dotted, color=green];
m1_40 -> m1_37  [key=2, style=dotted, color=green];
m1_41 -> m1_42  [key=0, style=solid, color=green];
m1_41 -> m1_8  [key=2, style=dotted];
m1_42 -> m1_43  [key=0, style=solid, color=green];
m1_42 -> m1_38  [key=2, style=dotted, color=green];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_46  [key=2, style=dotted];
m1_44 -> m1_39  [key=0, style=bold, color=blue];
m1_11 -> m1_12  [key=0, style=solid];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_12  [key=3, color=darkorchid, style=bold, label="Local variable bool called"];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_21  [key=2, style=dotted];
m1_13 -> m1_26  [key=1, style=dashed, color=darkseagreen4, label=bodyBytes];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_26  [key=1, style=dashed, color=darkseagreen4, label="System.IO.Stream"];
m1_14 -> m1_14  [key=3, color=darkorchid, style=bold, label="Local variable System.Action<System.IO.Stream> bodyDelegate"];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_22  [key=2, style=dotted];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_8  [key=2, style=dotted];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_9  [key=2, style=dotted];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_23  [key=2, style=dotted];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_24  [key=2, style=dotted];
m1_20 -> m1_11  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_7  [key=2, style=dotted];
m1_1 -> m1_3  [key=1, style=dashed, color=darkseagreen4, label=wrapper];
m1_1 -> m1_5  [key=1, style=dashed, color=darkseagreen4, label=wrapper];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_8  [key=2, style=dotted];
m1_2 -> m1_4  [key=1, style=dashed, color=darkseagreen4, label=context];
m1_3 -> m1_4  [key=0, style=solid];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_10  [key=2, style=dotted];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_9  [key=2, style=dotted];
m1_6 -> m1_0  [key=0, style=bold, color=blue];
m1_67 -> m1_68  [key=0, style=solid, color=green];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_29  [key=2, style=dotted];
m1_25 -> m1_26  [key=0, style=solid];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_19  [key=1, style=dashed, color=darkseagreen4, label=called];
m1_28 -> m1_25  [key=0, style=bold, color=blue];
m1_68 -> m1_69  [key=0, style=solid, color=green];
m1_68 -> n10  [key=2, style=dotted, color=green];
m1_69 -> m1_67  [key=0, style=bold, color=blue];
m1_30 -> m1_31  [key=0, style=solid, color=green];
m1_31 -> m1_32  [key=0, style=solid, color=green];
m1_31 -> m1_37  [key=2, style=dotted, color=green];
m1_31 -> m1_33  [key=1, style=dashed, color=green, label=model];
m1_31 -> m1_35  [key=1, style=dashed, color=green, label=model];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_8  [key=2, style=dotted];
m1_32 -> m1_34  [key=1, style=dashed, color=green, label=context];
m1_33 -> m1_34  [key=0, style=solid, color=green];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_10  [key=2, style=dotted];
m1_34 -> m1_35  [key=0, style=solid, color=green];
m1_34 -> m1_38  [key=2, style=dotted, color=green];
m1_36 -> m1_30  [key=0, style=bold, color=blue];
m1_71 -> m1_68  [key=1, style=dashed, color=green, label=context];
m2_0 -> m2_1  [key=0, style=solid, color=green];
m2_1 -> m2_2  [key=0, style=solid, color=green];
m2_1 -> m2_1  [key=3, color=green, style=bold, label="Parameter variable string key"];
m2_1 -> m2_17  [key=3, color=green, style=bold, label="Parameter variable Nancy.NancyContext context"];
m2_2 -> m2_3  [key=0, style=solid];
m2_3 -> m2_0  [key=0, style=bold, color=blue];
m2_17 -> m2_1  [key=3, color=green, style=bold, label="method methodReturn TModel JsonBody"];
m2_12 -> m2_13  [key=0, style=solid];
m2_4 -> m2_5  [key=0, style=solid];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_8  [key=2, style=dotted];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_9  [key=2, style=dotted];
m2_6 -> m2_10  [key=2, style=dotted];
m2_6 -> m2_11  [key=2, style=dotted];
m2_7 -> m2_4  [key=0, style=bold, color=blue];
m2_13 -> m2_14  [key=0, style=solid];
m2_14 -> m2_15  [key=0, style=solid];
m2_14 -> m2_17  [key=2, style=dotted];
m2_15 -> m2_16  [key=0, style=solid];
m2_15 -> m2_10  [key=2, style=dotted];
m2_16 -> m2_12  [key=0, style=bold, color=blue];
m2_18 -> m2_1  [key=1, style=dashed, color=green, label="Nancy.Demo.Authentication.Stateless.AuthModule"];
m2_18 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Demo.Authentication.Stateless.AuthModule"];
m2_18 -> m2_6  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Demo.Authentication.Stateless.AuthModule"];
m2_18 -> m2_2  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Demo.Authentication.Stateless.AuthModule"];
m2_18 -> m2_13  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Demo.Authentication.Stateless.AuthModule"];
}
