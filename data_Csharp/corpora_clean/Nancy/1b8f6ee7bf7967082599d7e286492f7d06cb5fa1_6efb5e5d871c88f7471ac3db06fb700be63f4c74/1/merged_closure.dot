digraph  {
n64 [label="Nancy.Tests.Unit.Routing.RouteCacheFixture", span=""];
n0 [cluster="Nancy.Tests.Unit.Routing.RouteCacheFixture.RouteCacheFixture()", label="Entry Nancy.Tests.Unit.Routing.RouteCacheFixture.RouteCacheFixture()", span="19-19"];
n1 [cluster="Nancy.Tests.Unit.Routing.RouteCacheFixture.RouteCacheFixture()", label="_FakeModuleCatalog = new FakeModuleCatalog()", span="21-21"];
n2 [cluster="Nancy.Tests.Unit.Routing.RouteCacheFixture.RouteCacheFixture()", label="_RouteCache = new Nancy.Routing.RouteCache(_FakeModuleCatalog, new FakeModuleKeyGenerator(), A.Fake<INancyContextFactory>())", span="23-23"];
n4 [cluster="Nancy.Tests.Fakes.FakeModuleCatalog.FakeModuleCatalog()", label="Entry Nancy.Tests.Fakes.FakeModuleCatalog.FakeModuleCatalog()", span="13-13"];
n3 [cluster="Nancy.Tests.Unit.Routing.RouteCacheFixture.RouteCacheFixture()", label="Exit Nancy.Tests.Unit.Routing.RouteCacheFixture.RouteCacheFixture()", span="19-19"];
n5 [cluster="Nancy.Routing.RouteCache.cstr", label="Entry Nancy.Routing.RouteCache.cstr", span=""];
n6 [cluster="Nancy.Tests.Fakes.FakeModuleKeyGenerator.FakeModuleKeyGenerator()", label="Entry Nancy.Tests.Fakes.FakeModuleKeyGenerator.FakeModuleKeyGenerator()", span="4-4"];
n7 [cluster="Unk.>", label="Entry Unk.>", span=""];
n8 [cluster="Nancy.Tests.Unit.Routing.RouteCacheFixture.Should_Contain_Entries_For_All_Modules()", label="Entry Nancy.Tests.Unit.Routing.RouteCacheFixture.Should_Contain_Entries_For_All_Modules()", span="27-27"];
n9 [cluster="Nancy.Tests.Unit.Routing.RouteCacheFixture.Should_Contain_Entries_For_All_Modules()", label="var routes = from cacheEntry in _RouteCache.Keys\r\n                         select cacheEntry", span="29-30"];
n10 [cluster="Nancy.Tests.Unit.Routing.RouteCacheFixture.Should_Contain_Entries_For_All_Modules()", label="routes.Contains(''1'').ShouldBeTrue()", span="32-32"];
n11 [cluster="Nancy.Tests.Unit.Routing.RouteCacheFixture.Should_Contain_Entries_For_All_Modules()", label="routes.Contains(''2'').ShouldBeTrue()", span="33-33"];
n13 [cluster="Unk.Contains", label="Entry Unk.Contains", span=""];
n14 [cluster="bool.ShouldBeTrue()", label="Entry bool.ShouldBeTrue()", span="85-85"];
n12 [cluster="Nancy.Tests.Unit.Routing.RouteCacheFixture.Should_Contain_Entries_For_All_Modules()", label="Exit Nancy.Tests.Unit.Routing.RouteCacheFixture.Should_Contain_Entries_For_All_Modules()", span="27-27"];
n15 [cluster="Nancy.Tests.Unit.Routing.RouteCacheFixture.Should_Contain_Entries_For_All_Routes()", label="Entry Nancy.Tests.Unit.Routing.RouteCacheFixture.Should_Contain_Entries_For_All_Routes()", span="37-37"];
n16 [cluster="Nancy.Tests.Unit.Routing.RouteCacheFixture.Should_Contain_Entries_For_All_Routes()", label="var total = _FakeModuleCatalog.GetAllModules(new NancyContext()).Sum(nm => nm.Routes.Count())", span="39-39"];
n17 [cluster="Nancy.Tests.Unit.Routing.RouteCacheFixture.Should_Contain_Entries_For_All_Routes()", label="var cacheEntriesTotal = _RouteCache.Values.Sum(c => c.Count())", span="41-41"];
n20 [cluster="Nancy.NancyContext.NancyContext()", label="Entry Nancy.NancyContext.NancyContext()", span="20-20"];
n21 [cluster="Nancy.INancyModuleCatalog.GetAllModules(Nancy.NancyContext)", label="Entry Nancy.INancyModuleCatalog.GetAllModules(Nancy.NancyContext)", span="14-14"];
n22 [cluster="System.Collections.Generic.IEnumerable<TSource>.Sum<TSource>(System.Func<TSource, int>)", label="Entry System.Collections.Generic.IEnumerable<TSource>.Sum<TSource>(System.Func<TSource, int>)", span="0-0"];
n24 [cluster="lambda expression", label="Entry lambda expression", span="39-39"];
n18 [cluster="Nancy.Tests.Unit.Routing.RouteCacheFixture.Should_Contain_Entries_For_All_Routes()", label="cacheEntriesTotal.ShouldEqual(total)", span="43-43"];
n28 [cluster="lambda expression", label="Entry lambda expression", span="41-41"];
n19 [cluster="Nancy.Tests.Unit.Routing.RouteCacheFixture.Should_Contain_Entries_For_All_Routes()", label="Exit Nancy.Tests.Unit.Routing.RouteCacheFixture.Should_Contain_Entries_For_All_Routes()", span="37-37"];
n23 [cluster="object.ShouldEqual(object)", label="Entry object.ShouldEqual(object)", span="95-95"];
n25 [cluster="lambda expression", label="nm.Routes.Count()", span="39-39"];
n26 [cluster="lambda expression", label="Exit lambda expression", span="39-39"];
n27 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
n29 [cluster="lambda expression", label="c.Count()", span="41-41"];
n30 [cluster="lambda expression", label="Exit lambda expression", span="41-41"];
n31 [cluster="Nancy.Tests.Unit.Routing.RouteCacheFixture.Sets_Filter_If_Specified()", label="Entry Nancy.Tests.Unit.Routing.RouteCacheFixture.Sets_Filter_If_Specified()", span="47-47"];
n32 [cluster="Nancy.Tests.Unit.Routing.RouteCacheFixture.Sets_Filter_If_Specified()", label="var routes = from cacheEntry in _RouteCache.Values\r\n                         from route in cacheEntry\r\n                         where route.Item2.Path == ''/filtered''\r\n                         select route.Item2", span="49-52"];
n33 [cluster="Nancy.Tests.Unit.Routing.RouteCacheFixture.Sets_Filter_If_Specified()", label="var filteredRoute = routes.First()", span="54-54"];
n34 [cluster="Nancy.Tests.Unit.Routing.RouteCacheFixture.Sets_Filter_If_Specified()", label="filteredRoute.Condition.ShouldNotBeNull()", span="56-56"];
n36 [cluster="Unk.First", label="Entry Unk.First", span=""];
n35 [cluster="Nancy.Tests.Unit.Routing.RouteCacheFixture.Sets_Filter_If_Specified()", label="Exit Nancy.Tests.Unit.Routing.RouteCacheFixture.Sets_Filter_If_Specified()", span="47-47"];
n37 [cluster="Unk.ShouldNotBeNull", label="Entry Unk.ShouldNotBeNull", span=""];
n38 [cluster="Nancy.Tests.Unit.Routing.RouteCacheFixture.Filter_Is_Null_If_Not_Specified()", label="Entry Nancy.Tests.Unit.Routing.RouteCacheFixture.Filter_Is_Null_If_Not_Specified()", span="60-60"];
n39 [cluster="Nancy.Tests.Unit.Routing.RouteCacheFixture.Filter_Is_Null_If_Not_Specified()", label="var routes = from cacheEntry in _RouteCache.Values\r\n                         from route in cacheEntry\r\n                         where route.Item2.Path == ''/''\r\n                         select route.Item2", span="62-65"];
n40 [cluster="Nancy.Tests.Unit.Routing.RouteCacheFixture.Filter_Is_Null_If_Not_Specified()", label="var filteredRoute = routes.First()", span="67-67"];
n41 [cluster="Nancy.Tests.Unit.Routing.RouteCacheFixture.Filter_Is_Null_If_Not_Specified()", label="filteredRoute.Condition.ShouldBeNull()", span="69-69"];
n42 [cluster="Nancy.Tests.Unit.Routing.RouteCacheFixture.Filter_Is_Null_If_Not_Specified()", label="Exit Nancy.Tests.Unit.Routing.RouteCacheFixture.Filter_Is_Null_If_Not_Specified()", span="60-60"];
n43 [cluster="Unk.ShouldBeNull", label="Entry Unk.ShouldBeNull", span=""];
n44 [cluster="Nancy.Tests.Unit.Routing.RouteCacheFixture.Sets_Method()", label="Entry Nancy.Tests.Unit.Routing.RouteCacheFixture.Sets_Method()", span="73-73"];
n45 [cluster="Nancy.Tests.Unit.Routing.RouteCacheFixture.Sets_Method()", label="var methods = (from cacheEntry in _RouteCache.Values\r\n                          from route in cacheEntry\r\n                          select route.Item2.Method).Distinct()", span="75-77"];
n46 [cluster="Nancy.Tests.Unit.Routing.RouteCacheFixture.Sets_Method()", label="methods.Count().ShouldEqual(4)", span="79-79"];
n48 [cluster="Unk.Distinct", label="Entry Unk.Distinct", span=""];
n47 [cluster="Nancy.Tests.Unit.Routing.RouteCacheFixture.Sets_Method()", label="Exit Nancy.Tests.Unit.Routing.RouteCacheFixture.Sets_Method()", span="73-73"];
n49 [cluster="Unk.Count", label="Entry Unk.Count", span=""];
n50 [cluster="Nancy.Tests.Unit.Routing.RouteCacheFixture.Index_Set_Correctly_In_Cache()", label="Entry Nancy.Tests.Unit.Routing.RouteCacheFixture.Index_Set_Correctly_In_Cache()", span="83-83"];
n51 [cluster="Nancy.Tests.Unit.Routing.RouteCacheFixture.Index_Set_Correctly_In_Cache()", label="var routes = _FakeModuleCatalog.GetModuleByKey(''1'', new NancyContext()).Routes.Select(r => r.Description)", span="85-85"];
n52 [cluster="Nancy.Tests.Unit.Routing.RouteCacheFixture.Index_Set_Correctly_In_Cache()", label="var cachedRoutes = _RouteCache[''1'']", span="87-87"];
n57 [cluster="Nancy.INancyModuleCatalog.GetModuleByKey(string, Nancy.NancyContext)", label="Entry Nancy.INancyModuleCatalog.GetModuleByKey(string, Nancy.NancyContext)", span="22-22"];
n58 [cluster="Unk.Select", label="Entry Unk.Select", span=""];
n61 [cluster="lambda expression", label="Entry lambda expression", span="85-85"];
n55 [cluster="Nancy.Tests.Unit.Routing.RouteCacheFixture.Index_Set_Correctly_In_Cache()", label="cachedRoute.Item2.ShouldBeSameAs(routes.ElementAt(index))", span="92-92"];
n53 [cluster="Nancy.Tests.Unit.Routing.RouteCacheFixture.Index_Set_Correctly_In_Cache()", label=cachedRoutes, span="89-89"];
n54 [cluster="Nancy.Tests.Unit.Routing.RouteCacheFixture.Index_Set_Correctly_In_Cache()", label="var index = cachedRoute.Item1", span="91-91"];
n56 [cluster="Nancy.Tests.Unit.Routing.RouteCacheFixture.Index_Set_Correctly_In_Cache()", label="Exit Nancy.Tests.Unit.Routing.RouteCacheFixture.Index_Set_Correctly_In_Cache()", span="83-83"];
n59 [cluster="Unk.ElementAt", label="Entry Unk.ElementAt", span=""];
n60 [cluster="Unk.ShouldBeSameAs", label="Entry Unk.ShouldBeSameAs", span=""];
n62 [cluster="lambda expression", label="r.Description", span="85-85"];
n63 [cluster="lambda expression", label="Exit lambda expression", span="85-85"];
m0_24 [cluster="Nancy.Tests.Unit.Helpers.HttpUtilityFixture.ParseQueryString_handles_duplicate_keys_when_case_sensitive()", file="HttpUtilityFixture.cs", label="Entry Nancy.Tests.Unit.Helpers.HttpUtilityFixture.ParseQueryString_handles_duplicate_keys_when_case_sensitive()", span="53-53"];
m0_25 [cluster="Nancy.Tests.Unit.Helpers.HttpUtilityFixture.ParseQueryString_handles_duplicate_keys_when_case_sensitive()", file="HttpUtilityFixture.cs", label="StaticConfiguration.CaseSensitive = true", span="56-56"];
m0_26 [cluster="Nancy.Tests.Unit.Helpers.HttpUtilityFixture.ParseQueryString_handles_duplicate_keys_when_case_sensitive()", file="HttpUtilityFixture.cs", label="var query = ''key=value&key=value&KEY=VALUE''", span="57-57"];
m0_27 [cluster="Nancy.Tests.Unit.Helpers.HttpUtilityFixture.ParseQueryString_handles_duplicate_keys_when_case_sensitive()", file="HttpUtilityFixture.cs", label="var collection = HttpUtility.ParseQueryString(query)", span="60-60"];
m0_28 [cluster="Nancy.Tests.Unit.Helpers.HttpUtilityFixture.ParseQueryString_handles_duplicate_keys_when_case_sensitive()", file="HttpUtilityFixture.cs", label="collection[''key''].ShouldEqual(''value,value'')", span="63-63"];
m0_29 [cluster="Nancy.Tests.Unit.Helpers.HttpUtilityFixture.ParseQueryString_handles_duplicate_keys_when_case_sensitive()", file="HttpUtilityFixture.cs", label="collection[''KEY''].ShouldEqual(''VALUE'')", span="64-64"];
m0_30 [cluster="Nancy.Tests.Unit.Helpers.HttpUtilityFixture.ParseQueryString_handles_duplicate_keys_when_case_sensitive()", file="HttpUtilityFixture.cs", label="Exit Nancy.Tests.Unit.Helpers.HttpUtilityFixture.ParseQueryString_handles_duplicate_keys_when_case_sensitive()", span="53-53"];
m0_16 [cluster="object.ShouldBeNull()", file="HttpUtilityFixture.cs", label="Entry object.ShouldBeNull()", span="145-145"];
m0_0 [cluster="Nancy.Tests.Unit.Helpers.HttpUtilityFixture.ParseQueryString_respects_case_insensitive_setting()", file="HttpUtilityFixture.cs", label="Entry Nancy.Tests.Unit.Helpers.HttpUtilityFixture.ParseQueryString_respects_case_insensitive_setting()", span="8-8"];
m0_1 [cluster="Nancy.Tests.Unit.Helpers.HttpUtilityFixture.ParseQueryString_respects_case_insensitive_setting()", file="HttpUtilityFixture.cs", label="StaticConfiguration.CaseSensitive = false", span="11-11"];
m0_2 [cluster="Nancy.Tests.Unit.Helpers.HttpUtilityFixture.ParseQueryString_respects_case_insensitive_setting()", file="HttpUtilityFixture.cs", label="var query = ''key=value''", span="12-12"];
m0_3 [cluster="Nancy.Tests.Unit.Helpers.HttpUtilityFixture.ParseQueryString_respects_case_insensitive_setting()", file="HttpUtilityFixture.cs", label="var collection = HttpUtility.ParseQueryString(query)", span="15-15"];
m0_4 [cluster="Nancy.Tests.Unit.Helpers.HttpUtilityFixture.ParseQueryString_respects_case_insensitive_setting()", file="HttpUtilityFixture.cs", label="collection[''key''].ShouldEqual(''value'')", span="18-18"];
m0_5 [cluster="Nancy.Tests.Unit.Helpers.HttpUtilityFixture.ParseQueryString_respects_case_insensitive_setting()", file="HttpUtilityFixture.cs", label="collection[''KEY''].ShouldEqual(''value'')", span="19-19"];
m0_6 [cluster="Nancy.Tests.Unit.Helpers.HttpUtilityFixture.ParseQueryString_respects_case_insensitive_setting()", file="HttpUtilityFixture.cs", label="Exit Nancy.Tests.Unit.Helpers.HttpUtilityFixture.ParseQueryString_respects_case_insensitive_setting()", span="8-8"];
m0_37 [cluster="Nancy.Tests.Unit.Helpers.HttpUtilityFixture.ParseQueryString_handles_duplicate_keys_when_one_has_no_value()", file="HttpUtilityFixture.cs", label="Entry Nancy.Tests.Unit.Helpers.HttpUtilityFixture.ParseQueryString_handles_duplicate_keys_when_one_has_no_value()", span="82-82"];
m0_38 [cluster="Nancy.Tests.Unit.Helpers.HttpUtilityFixture.ParseQueryString_handles_duplicate_keys_when_one_has_no_value()", file="HttpUtilityFixture.cs", label="var query = ''key&key=value''", span="85-85"];
m0_39 [cluster="Nancy.Tests.Unit.Helpers.HttpUtilityFixture.ParseQueryString_handles_duplicate_keys_when_one_has_no_value()", file="HttpUtilityFixture.cs", label="var collection = HttpUtility.ParseQueryString(query)", span="88-88"];
m0_40 [cluster="Nancy.Tests.Unit.Helpers.HttpUtilityFixture.ParseQueryString_handles_duplicate_keys_when_one_has_no_value()", file="HttpUtilityFixture.cs", label="collection[''key''].ShouldEqual(''key,value'')", span="91-91"];
m0_41 [cluster="Nancy.Tests.Unit.Helpers.HttpUtilityFixture.ParseQueryString_handles_duplicate_keys_when_one_has_no_value()", file="HttpUtilityFixture.cs", label="Exit Nancy.Tests.Unit.Helpers.HttpUtilityFixture.ParseQueryString_handles_duplicate_keys_when_one_has_no_value()", span="82-82"];
m0_42 [cluster="Nancy.Tests.Unit.Helpers.HttpUtilityFixture.ParseQueryString_handles_duplicate_keys_when_they_have_no_values()", file="HttpUtilityFixture.cs", label="Entry Nancy.Tests.Unit.Helpers.HttpUtilityFixture.ParseQueryString_handles_duplicate_keys_when_they_have_no_values()", span="95-95"];
m0_43 [cluster="Nancy.Tests.Unit.Helpers.HttpUtilityFixture.ParseQueryString_handles_duplicate_keys_when_they_have_no_values()", file="HttpUtilityFixture.cs", label="var query = ''key&key''", span="98-98"];
m0_44 [cluster="Nancy.Tests.Unit.Helpers.HttpUtilityFixture.ParseQueryString_handles_duplicate_keys_when_they_have_no_values()", file="HttpUtilityFixture.cs", label="var collection = HttpUtility.ParseQueryString(query)", span="101-101"];
m0_45 [cluster="Nancy.Tests.Unit.Helpers.HttpUtilityFixture.ParseQueryString_handles_duplicate_keys_when_they_have_no_values()", color=green, community=0, file="HttpUtilityFixture.cs", label="collection[''key''].ShouldEqual(''key,key'')", prediction=0, span="108-108"];
m0_46 [cluster="Nancy.Tests.Unit.Helpers.HttpUtilityFixture.ParseQueryString_handles_duplicate_keys_when_they_have_no_values()", file="HttpUtilityFixture.cs", label="Exit Nancy.Tests.Unit.Helpers.HttpUtilityFixture.ParseQueryString_handles_duplicate_keys_when_they_have_no_values()", span="95-95"];
m0_9 [cluster="Nancy.Tests.Unit.Helpers.HttpUtilityFixture.ParseQueryString_respects_case_sensitive_setting()", file="HttpUtilityFixture.cs", label="Entry Nancy.Tests.Unit.Helpers.HttpUtilityFixture.ParseQueryString_respects_case_sensitive_setting()", span="23-23"];
m0_10 [cluster="Nancy.Tests.Unit.Helpers.HttpUtilityFixture.ParseQueryString_respects_case_sensitive_setting()", file="HttpUtilityFixture.cs", label="StaticConfiguration.CaseSensitive = true", span="26-26"];
m0_12 [cluster="Nancy.Tests.Unit.Helpers.HttpUtilityFixture.ParseQueryString_respects_case_sensitive_setting()", file="HttpUtilityFixture.cs", label="var collection = HttpUtility.ParseQueryString(query)", span="30-30"];
m0_13 [cluster="Nancy.Tests.Unit.Helpers.HttpUtilityFixture.ParseQueryString_respects_case_sensitive_setting()", file="HttpUtilityFixture.cs", label="collection[''key''].ShouldEqual(''value'')", span="33-33"];
m0_14 [cluster="Nancy.Tests.Unit.Helpers.HttpUtilityFixture.ParseQueryString_respects_case_sensitive_setting()", file="HttpUtilityFixture.cs", label="collection[''KEY''].ShouldBeNull()", span="34-34"];
m0_15 [cluster="Nancy.Tests.Unit.Helpers.HttpUtilityFixture.ParseQueryString_respects_case_sensitive_setting()", file="HttpUtilityFixture.cs", label="Exit Nancy.Tests.Unit.Helpers.HttpUtilityFixture.ParseQueryString_respects_case_sensitive_setting()", span="23-23"];
m0_7 [cluster="Nancy.Helpers.HttpUtility.ParseQueryString(string)", file="HttpUtilityFixture.cs", label="Entry Nancy.Helpers.HttpUtility.ParseQueryString(string)", span="682-682"];
m0_31 [cluster="Nancy.Tests.Unit.Helpers.HttpUtilityFixture.ParseQueryString_handles_keys_without_values()", file="HttpUtilityFixture.cs", label="Entry Nancy.Tests.Unit.Helpers.HttpUtilityFixture.ParseQueryString_handles_keys_without_values()", span="68-68"];
m0_32 [cluster="Nancy.Tests.Unit.Helpers.HttpUtilityFixture.ParseQueryString_handles_keys_without_values()", file="HttpUtilityFixture.cs", label="var query = ''key1&key2''", span="71-71"];
m0_33 [cluster="Nancy.Tests.Unit.Helpers.HttpUtilityFixture.ParseQueryString_handles_keys_without_values()", file="HttpUtilityFixture.cs", label="var collection = HttpUtility.ParseQueryString(query)", span="74-74"];
m0_34 [cluster="Nancy.Tests.Unit.Helpers.HttpUtilityFixture.ParseQueryString_handles_keys_without_values()", file="HttpUtilityFixture.cs", label="collection[''key1''].ShouldEqual(''key1'')", span="77-77"];
m0_35 [cluster="Nancy.Tests.Unit.Helpers.HttpUtilityFixture.ParseQueryString_handles_keys_without_values()", file="HttpUtilityFixture.cs", label="collection[''key2''].ShouldEqual(''key2'')", span="78-78"];
m0_36 [cluster="Nancy.Tests.Unit.Helpers.HttpUtilityFixture.ParseQueryString_handles_keys_without_values()", file="HttpUtilityFixture.cs", label="Exit Nancy.Tests.Unit.Helpers.HttpUtilityFixture.ParseQueryString_handles_keys_without_values()", span="68-68"];
m0_17 [cluster="Nancy.Tests.Unit.Helpers.HttpUtilityFixture.ParseQueryString_handles_duplicate_keys_when_case_insensitive()", file="HttpUtilityFixture.cs", label="Entry Nancy.Tests.Unit.Helpers.HttpUtilityFixture.ParseQueryString_handles_duplicate_keys_when_case_insensitive()", span="38-38"];
m0_18 [cluster="Nancy.Tests.Unit.Helpers.HttpUtilityFixture.ParseQueryString_handles_duplicate_keys_when_case_insensitive()", file="HttpUtilityFixture.cs", label="StaticConfiguration.CaseSensitive = false", span="41-41"];
m0_19 [cluster="Nancy.Tests.Unit.Helpers.HttpUtilityFixture.ParseQueryString_handles_duplicate_keys_when_case_insensitive()", file="HttpUtilityFixture.cs", label="var query = ''key=value&key=value&KEY=VALUE''", span="42-42"];
m0_20 [cluster="Nancy.Tests.Unit.Helpers.HttpUtilityFixture.ParseQueryString_handles_duplicate_keys_when_case_insensitive()", file="HttpUtilityFixture.cs", label="var collection = HttpUtility.ParseQueryString(query)", span="45-45"];
m0_21 [cluster="Nancy.Tests.Unit.Helpers.HttpUtilityFixture.ParseQueryString_handles_duplicate_keys_when_case_insensitive()", file="HttpUtilityFixture.cs", label="collection[''key''].ShouldEqual(''value,value,VALUE'')", span="48-48"];
m0_22 [cluster="Nancy.Tests.Unit.Helpers.HttpUtilityFixture.ParseQueryString_handles_duplicate_keys_when_case_insensitive()", file="HttpUtilityFixture.cs", label="collection[''KEY''].ShouldEqual(''value,value,VALUE'')", span="49-49"];
m0_23 [cluster="Nancy.Tests.Unit.Helpers.HttpUtilityFixture.ParseQueryString_handles_duplicate_keys_when_case_insensitive()", file="HttpUtilityFixture.cs", label="Exit Nancy.Tests.Unit.Helpers.HttpUtilityFixture.ParseQueryString_handles_duplicate_keys_when_case_insensitive()", span="38-38"];
n9 -> n11  [color=darkseagreen4, key=1, label=routes, style=dashed];
n16 -> n24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n16 -> n18  [color=darkseagreen4, key=1, label=total, style=dashed];
n17 -> n28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n51 -> n61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n51 -> n55  [color=darkseagreen4, key=1, label=routes, style=dashed];
n53 -> n55  [color=darkseagreen4, key=1, label=cachedRoute, style=dashed];
m0_27 -> m0_29  [color=darkseagreen4, key=1, label=collection, style=dashed];
m0_3 -> m0_5  [color=darkseagreen4, key=1, label=collection, style=dashed];
m0_12 -> m0_14  [color=darkseagreen4, key=1, label=collection, style=dashed];
m0_33 -> m0_35  [color=darkseagreen4, key=1, label=collection, style=dashed];
m0_20 -> m0_22  [color=darkseagreen4, key=1, label=collection, style=dashed];
}
