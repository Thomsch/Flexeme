digraph  {
n111 [label="Nancy.DynamicDictionary", span=""];
n0 [cluster="Nancy.DynamicDictionary.DynamicDictionary()", label="Entry Nancy.DynamicDictionary.DynamicDictionary()", span="24-24"];
n1 [cluster="Nancy.DynamicDictionary.DynamicDictionary()", label="Exit Nancy.DynamicDictionary.DynamicDictionary()", span="24-24"];
n2 [cluster="Nancy.DynamicDictionary.DynamicDictionary(Nancy.GlobalizationConfiguration)", label="Entry Nancy.DynamicDictionary.DynamicDictionary(Nancy.GlobalizationConfiguration)", span="33-33"];
n3 [cluster="Nancy.DynamicDictionary.DynamicDictionary(Nancy.GlobalizationConfiguration)", label="this.globalizationConfiguration = globalizationConfiguration", span="35-35"];
n4 [cluster="Nancy.DynamicDictionary.DynamicDictionary(Nancy.GlobalizationConfiguration)", label="Exit Nancy.DynamicDictionary.DynamicDictionary(Nancy.GlobalizationConfiguration)", span="33-33"];
n5 [cluster="Nancy.DynamicDictionary.Create(System.Collections.Generic.IDictionary<string, object>, Nancy.GlobalizationConfiguration)", label="Entry Nancy.DynamicDictionary.Create(System.Collections.Generic.IDictionary<string, object>, Nancy.GlobalizationConfiguration)", span="53-53"];
n6 [cluster="Nancy.DynamicDictionary.Create(System.Collections.Generic.IDictionary<string, object>, Nancy.GlobalizationConfiguration)", label="var instance = new DynamicDictionary(globalizationConfiguration)", span="55-55"];
n7 [cluster="Nancy.DynamicDictionary.Create(System.Collections.Generic.IDictionary<string, object>, Nancy.GlobalizationConfiguration)", label="values.Keys", span="57-57"];
n8 [cluster="Nancy.DynamicDictionary.Create(System.Collections.Generic.IDictionary<string, object>, Nancy.GlobalizationConfiguration)", label="instance[key] = values[key]", span="59-59"];
n9 [cluster="Nancy.DynamicDictionary.Create(System.Collections.Generic.IDictionary<string, object>, Nancy.GlobalizationConfiguration)", label="return instance;", span="62-62"];
n10 [cluster="Nancy.DynamicDictionary.Create(System.Collections.Generic.IDictionary<string, object>, Nancy.GlobalizationConfiguration)", label="Exit Nancy.DynamicDictionary.Create(System.Collections.Generic.IDictionary<string, object>, Nancy.GlobalizationConfiguration)", span="53-53"];
n11 [cluster="Nancy.DynamicDictionary.TrySetMember(System.Dynamic.SetMemberBinder, object)", label="Entry Nancy.DynamicDictionary.TrySetMember(System.Dynamic.SetMemberBinder, object)", span="70-70"];
n12 [cluster="Nancy.DynamicDictionary.TrySetMember(System.Dynamic.SetMemberBinder, object)", label="this[binder.Name] = value", span="72-72"];
n13 [cluster="Nancy.DynamicDictionary.TrySetMember(System.Dynamic.SetMemberBinder, object)", label="return true;", span="73-73"];
n14 [cluster="Nancy.DynamicDictionary.TrySetMember(System.Dynamic.SetMemberBinder, object)", label="Exit Nancy.DynamicDictionary.TrySetMember(System.Dynamic.SetMemberBinder, object)", span="70-70"];
n15 [cluster="Nancy.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder, out object)", label="Entry Nancy.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder, out object)", span="81-81"];
n16 [cluster="Nancy.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder, out object)", label="!dictionary.TryGetValue(binder.Name, out result)", span="83-83"];
n17 [cluster="Nancy.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder, out object)", label="result = new DynamicDictionaryValue(null, this.globalizationConfiguration)", span="85-85"];
n18 [cluster="Nancy.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder, out object)", label="return true;", span="88-88"];
n20 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
n19 [cluster="Nancy.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder, out object)", label="Exit Nancy.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder, out object)", span="81-81"];
n21 [cluster="Nancy.DynamicDictionaryValue.DynamicDictionaryValue(object, Nancy.GlobalizationConfiguration)", label="Entry Nancy.DynamicDictionaryValue.DynamicDictionaryValue(object, Nancy.GlobalizationConfiguration)", span="38-38"];
n22 [cluster="Nancy.DynamicDictionary.GetDynamicMemberNames()", label="Entry Nancy.DynamicDictionary.GetDynamicMemberNames()", span="95-95"];
n23 [cluster="Nancy.DynamicDictionary.GetDynamicMemberNames()", label="return dictionary.Keys;", span="97-97"];
n24 [cluster="Nancy.DynamicDictionary.GetDynamicMemberNames()", label="Exit Nancy.DynamicDictionary.GetDynamicMemberNames()", span="95-95"];
n25 [cluster="Nancy.DynamicDictionary.GetEnumerator()", label="Entry Nancy.DynamicDictionary.GetEnumerator()", span="104-104"];
n26 [cluster="Nancy.DynamicDictionary.GetEnumerator()", label="return dictionary.Keys.GetEnumerator();", span="106-106"];
n27 [cluster="Nancy.DynamicDictionary.GetEnumerator()", label="Exit Nancy.DynamicDictionary.GetEnumerator()", span="104-104"];
n28 [cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()", label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0"];
n29 [cluster="Nancy.DynamicDictionary.System.Collections.IEnumerable.GetEnumerator()", label="Entry Nancy.DynamicDictionary.System.Collections.IEnumerable.GetEnumerator()", span="113-113"];
n30 [cluster="Nancy.DynamicDictionary.System.Collections.IEnumerable.GetEnumerator()", label="return dictionary.Keys.GetEnumerator();", span="115-115"];
n31 [cluster="Nancy.DynamicDictionary.System.Collections.IEnumerable.GetEnumerator()", label="Exit Nancy.DynamicDictionary.System.Collections.IEnumerable.GetEnumerator()", span="113-113"];
n32 [cluster="Nancy.DynamicDictionary.Equals(Nancy.DynamicDictionary)", label="Entry Nancy.DynamicDictionary.Equals(Nancy.DynamicDictionary)", span="149-149"];
n33 [cluster="Nancy.DynamicDictionary.Equals(Nancy.DynamicDictionary)", label="ReferenceEquals(null, other)", span="151-151"];
n35 [cluster="Nancy.DynamicDictionary.Equals(Nancy.DynamicDictionary)", label="return ReferenceEquals(this, other) || Equals(other.dictionary, this.dictionary);", span="156-156"];
n34 [cluster="Nancy.DynamicDictionary.Equals(Nancy.DynamicDictionary)", label="return false;", span="153-153"];
n37 [cluster="object.ReferenceEquals(object, object)", label="Entry object.ReferenceEquals(object, object)", span="0-0"];
n36 [cluster="Nancy.DynamicDictionary.Equals(Nancy.DynamicDictionary)", label="Exit Nancy.DynamicDictionary.Equals(Nancy.DynamicDictionary)", span="149-149"];
n38 [cluster="object.Equals(object, object)", label="Entry object.Equals(object, object)", span="0-0"];
n39 [cluster="Nancy.DynamicDictionary.Equals(object)", label="Entry Nancy.DynamicDictionary.Equals(object)", span="164-164"];
n40 [cluster="Nancy.DynamicDictionary.Equals(object)", label="ReferenceEquals(null, obj)", span="166-166"];
n42 [cluster="Nancy.DynamicDictionary.Equals(object)", label="ReferenceEquals(this, obj)", span="171-171"];
n44 [cluster="Nancy.DynamicDictionary.Equals(object)", label="return obj.GetType() == typeof(DynamicDictionary) && this.Equals((DynamicDictionary)obj);", span="176-176"];
n41 [cluster="Nancy.DynamicDictionary.Equals(object)", label="return false;", span="168-168"];
n43 [cluster="Nancy.DynamicDictionary.Equals(object)", label="return true;", span="173-173"];
n45 [cluster="Nancy.DynamicDictionary.Equals(object)", label="Exit Nancy.DynamicDictionary.Equals(object)", span="164-164"];
n46 [cluster="object.GetType()", label="Entry object.GetType()", span="0-0"];
n47 [cluster="Nancy.DynamicDictionary.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, object>>.GetEnumerator()", label="Entry Nancy.DynamicDictionary.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, object>>.GetEnumerator()", span="183-183"];
n48 [cluster="Nancy.DynamicDictionary.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, object>>.GetEnumerator()", label="return this.dictionary.GetEnumerator();", span="185-185"];
n49 [cluster="Nancy.DynamicDictionary.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, object>>.GetEnumerator()", label="Exit Nancy.DynamicDictionary.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, object>>.GetEnumerator()", span="183-183"];
n50 [cluster="Nancy.DynamicDictionary.GetHashCode()", label="Entry Nancy.DynamicDictionary.GetHashCode()", span="192-192"];
n51 [cluster="Nancy.DynamicDictionary.GetHashCode()", label="return (dictionary != null ? dictionary.GetHashCode() : 0);", span="194-194"];
n52 [cluster="Nancy.DynamicDictionary.GetHashCode()", label="Exit Nancy.DynamicDictionary.GetHashCode()", span="192-192"];
n53 [cluster="object.GetHashCode()", label="Entry object.GetHashCode()", span="0-0"];
n54 [cluster="Nancy.DynamicDictionary.Add(string, dynamic)", label="Entry Nancy.DynamicDictionary.Add(string, dynamic)", span="202-202"];
n55 [cluster="Nancy.DynamicDictionary.Add(string, dynamic)", label="this[key] = value", span="204-204"];
n56 [cluster="Nancy.DynamicDictionary.Add(string, dynamic)", label="Exit Nancy.DynamicDictionary.Add(string, dynamic)", span="202-202"];
n57 [cluster="Nancy.DynamicDictionary.Add(System.Collections.Generic.KeyValuePair<string, dynamic>)", label="Entry Nancy.DynamicDictionary.Add(System.Collections.Generic.KeyValuePair<string, dynamic>)", span="211-211"];
n58 [cluster="Nancy.DynamicDictionary.Add(System.Collections.Generic.KeyValuePair<string, dynamic>)", label="this[item.Key] = item.Value", span="213-213"];
n59 [cluster="Nancy.DynamicDictionary.Add(System.Collections.Generic.KeyValuePair<string, dynamic>)", label="Exit Nancy.DynamicDictionary.Add(System.Collections.Generic.KeyValuePair<string, dynamic>)", span="211-211"];
n60 [cluster="Nancy.DynamicDictionary.ContainsKey(string)", label="Entry Nancy.DynamicDictionary.ContainsKey(string)", span="222-222"];
n61 [cluster="Nancy.DynamicDictionary.ContainsKey(string)", label="key = GetNeutralKey(key)", span="224-224"];
n62 [cluster="Nancy.DynamicDictionary.ContainsKey(string)", label="return this.dictionary.ContainsKey(key);", span="225-225"];
n64 [cluster="Nancy.DynamicDictionary.GetNeutralKey(string)", label="Entry Nancy.DynamicDictionary.GetNeutralKey(string)", span="342-342"];
n63 [cluster="Nancy.DynamicDictionary.ContainsKey(string)", label="Exit Nancy.DynamicDictionary.ContainsKey(string)", span="222-222"];
n65 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
n66 [cluster="Nancy.DynamicDictionary.TryGetValue(string, out dynamic)", label="Entry Nancy.DynamicDictionary.TryGetValue(string, out dynamic)", span="243-243"];
n67 [cluster="Nancy.DynamicDictionary.TryGetValue(string, out dynamic)", label="key = GetNeutralKey(key)", span="245-245"];
n68 [cluster="Nancy.DynamicDictionary.TryGetValue(string, out dynamic)", label="return this.dictionary.TryGetValue(key, out value);", span="246-246"];
n69 [cluster="Nancy.DynamicDictionary.TryGetValue(string, out dynamic)", label="Exit Nancy.DynamicDictionary.TryGetValue(string, out dynamic)", span="243-243"];
n70 [cluster="Nancy.DynamicDictionary.Clear()", label="Entry Nancy.DynamicDictionary.Clear()", span="252-252"];
n71 [cluster="Nancy.DynamicDictionary.Clear()", label="this.dictionary.Clear()", span="254-254"];
n72 [cluster="Nancy.DynamicDictionary.Clear()", label="Exit Nancy.DynamicDictionary.Clear()", span="252-252"];
n73 [cluster="System.Collections.Generic.ICollection<T>.Clear()", label="Entry System.Collections.Generic.ICollection<T>.Clear()", span="0-0"];
n74 [cluster="Nancy.DynamicDictionary.Contains(System.Collections.Generic.KeyValuePair<string, dynamic>)", label="Entry Nancy.DynamicDictionary.Contains(System.Collections.Generic.KeyValuePair<string, dynamic>)", span="272-272"];
n75 [cluster="Nancy.DynamicDictionary.Contains(System.Collections.Generic.KeyValuePair<string, dynamic>)", label="var dynamicValueKeyValuePair =\r\n                this.GetDynamicKeyValuePair(item)", span="274-275"];
n76 [cluster="Nancy.DynamicDictionary.Contains(System.Collections.Generic.KeyValuePair<string, dynamic>)", label="return this.dictionary.Contains(dynamicValueKeyValuePair);", span="277-277"];
n78 [cluster="Nancy.DynamicDictionary.GetDynamicKeyValuePair(System.Collections.Generic.KeyValuePair<string, dynamic>)", label="Entry Nancy.DynamicDictionary.GetDynamicKeyValuePair(System.Collections.Generic.KeyValuePair<string, dynamic>)", span="335-335"];
n77 [cluster="Nancy.DynamicDictionary.Contains(System.Collections.Generic.KeyValuePair<string, dynamic>)", label="Exit Nancy.DynamicDictionary.Contains(System.Collections.Generic.KeyValuePair<string, dynamic>)", span="272-272"];
n79 [cluster="System.Collections.Generic.ICollection<T>.Contains(T)", label="Entry System.Collections.Generic.ICollection<T>.Contains(T)", span="0-0"];
n80 [cluster="Nancy.DynamicDictionary.CopyTo(System.Collections.Generic.KeyValuePair<string, dynamic>[], int)", label="Entry Nancy.DynamicDictionary.CopyTo(System.Collections.Generic.KeyValuePair<string, dynamic>[], int)", span="285-285"];
n81 [cluster="Nancy.DynamicDictionary.CopyTo(System.Collections.Generic.KeyValuePair<string, dynamic>[], int)", label="this.dictionary.CopyTo(array, arrayIndex)", span="287-287"];
n82 [cluster="Nancy.DynamicDictionary.CopyTo(System.Collections.Generic.KeyValuePair<string, dynamic>[], int)", label="Exit Nancy.DynamicDictionary.CopyTo(System.Collections.Generic.KeyValuePair<string, dynamic>[], int)", span="285-285"];
n83 [cluster="System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", label="Entry System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", span="0-0"];
n84 [cluster="Nancy.DynamicDictionary.Remove(string)", label="Entry Nancy.DynamicDictionary.Remove(string)", span="304-304"];
n85 [cluster="Nancy.DynamicDictionary.Remove(string)", label="key = GetNeutralKey(key)", span="306-306"];
n86 [cluster="Nancy.DynamicDictionary.Remove(string)", label="return this.dictionary.Remove(key);", span="307-307"];
n87 [cluster="Nancy.DynamicDictionary.Remove(string)", label="Exit Nancy.DynamicDictionary.Remove(string)", span="304-304"];
n88 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Remove(TKey)", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
n89 [cluster="Nancy.DynamicDictionary.Remove(System.Collections.Generic.KeyValuePair<string, dynamic>)", label="Entry Nancy.DynamicDictionary.Remove(System.Collections.Generic.KeyValuePair<string, dynamic>)", span="315-315"];
n90 [cluster="Nancy.DynamicDictionary.Remove(System.Collections.Generic.KeyValuePair<string, dynamic>)", label="var dynamicValueKeyValuePair =\r\n                this.GetDynamicKeyValuePair(item)", span="317-318"];
n91 [cluster="Nancy.DynamicDictionary.Remove(System.Collections.Generic.KeyValuePair<string, dynamic>)", label="return this.dictionary.Remove(dynamicValueKeyValuePair);", span="320-320"];
n92 [cluster="Nancy.DynamicDictionary.Remove(System.Collections.Generic.KeyValuePair<string, dynamic>)", label="Exit Nancy.DynamicDictionary.Remove(System.Collections.Generic.KeyValuePair<string, dynamic>)", span="315-315"];
n93 [cluster="System.Collections.Generic.ICollection<T>.Remove(T)", label="Entry System.Collections.Generic.ICollection<T>.Remove(T)", span="0-0"];
n94 [cluster="Nancy.DynamicDictionary.GetDynamicKeyValuePair(System.Collections.Generic.KeyValuePair<string, dynamic>)", label="var dynamicValueKeyValuePair =\r\n                new KeyValuePair<string, dynamic>(item.Key, new DynamicDictionaryValue(item.Value, this.globalizationConfiguration))", span="337-338"];
n95 [cluster="Nancy.DynamicDictionary.GetDynamicKeyValuePair(System.Collections.Generic.KeyValuePair<string, dynamic>)", label="return dynamicValueKeyValuePair;", span="339-339"];
n97 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
n96 [cluster="Nancy.DynamicDictionary.GetDynamicKeyValuePair(System.Collections.Generic.KeyValuePair<string, dynamic>)", label="Exit Nancy.DynamicDictionary.GetDynamicKeyValuePair(System.Collections.Generic.KeyValuePair<string, dynamic>)", span="335-335"];
n98 [cluster="Nancy.DynamicDictionary.GetNeutralKey(string)", label="return key.Replace(''-'', string.Empty);", span="344-344"];
n99 [cluster="Nancy.DynamicDictionary.GetNeutralKey(string)", label="Exit Nancy.DynamicDictionary.GetNeutralKey(string)", span="342-342"];
n100 [cluster="string.Replace(string, string)", label="Entry string.Replace(string, string)", span="0-0"];
n101 [cluster="Nancy.DynamicDictionary.ToDictionary()", label="Entry Nancy.DynamicDictionary.ToDictionary()", span="351-351"];
n102 [cluster="Nancy.DynamicDictionary.ToDictionary()", label="var data = new Dictionary<string, object>()", span="353-353"];
n103 [cluster="Nancy.DynamicDictionary.ToDictionary()", label=dictionary, span="355-355"];
n109 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
n106 [cluster="Nancy.DynamicDictionary.ToDictionary()", label="data.Add(newKey, newValue)", span="360-360"];
n107 [cluster="Nancy.DynamicDictionary.ToDictionary()", label="return data;", span="363-363"];
n104 [cluster="Nancy.DynamicDictionary.ToDictionary()", label="var newKey = item.Key", span="357-357"];
n105 [cluster="Nancy.DynamicDictionary.ToDictionary()", label="var newValue = ((DynamicDictionaryValue)item.Value).Value", span="358-358"];
n110 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
n108 [cluster="Nancy.DynamicDictionary.ToDictionary()", label="Exit Nancy.DynamicDictionary.ToDictionary()", span="351-351"];
d7 [cluster="Nancy.Testing.AssertExtensions.ShouldExist(Nancy.Testing.QueryWrapper)", color=green, community=0, label="0: Asserts.True(query.Any())", span="27-27"];
d6 [cluster="Nancy.Testing.AssertExtensions.ShouldExist(Nancy.Testing.QueryWrapper)", label="Entry Nancy.Testing.AssertExtensions.ShouldExist(Nancy.Testing.QueryWrapper)", span="25-25"];
d8 [cluster="Nancy.Testing.AssertExtensions.ShouldExist(Nancy.Testing.QueryWrapper)", color=green, community=0, label="0: return new AndConnector<QueryWrapper>(query);", span="29-29"];
d10 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
d11 [cluster="Nancy.Testing.Asserts.True(bool)", label="Entry Nancy.Testing.Asserts.True(bool)", span="129-129"];
d9 [cluster="Nancy.Testing.AssertExtensions.ShouldExist(Nancy.Testing.QueryWrapper)", label="Exit Nancy.Testing.AssertExtensions.ShouldExist(Nancy.Testing.QueryWrapper)", span="25-25"];
d5 [cluster="Nancy.Testing.AndConnector<TSource>.AndConnector(TSource)", label="Entry Nancy.Testing.AndConnector<TSource>.AndConnector(TSource)", span="14-14"];
d13 [cluster="Nancy.Testing.AssertExtensions.ShouldNotExist(Nancy.Testing.QueryWrapper)", label="Asserts.False(query.Any())", span="37-37"];
d25 [cluster="Nancy.Testing.Asserts.Exactly<T>(System.Collections.Generic.IEnumerable<T>, int)", label="Entry Nancy.Testing.Asserts.Exactly<T>(System.Collections.Generic.IEnumerable<T>, int)", span="109-109"];
d49 [cluster="Nancy.Testing.AssertExtensions.ShouldContainAttribute(Nancy.Testing.NodeWrapper, string)", label="Asserts.True(node.HasAttribute(name))", span="111-111"];
d2 [cluster="Nancy.Testing.AssertExtensions.ShouldExist(Nancy.Testing.NodeWrapper)", label="return new AndConnector<NodeWrapper>(node);", span="19-19"];
d14 [cluster="Nancy.Testing.AssertExtensions.ShouldNotExist(Nancy.Testing.QueryWrapper)", label="return new AndConnector<QueryWrapper>(query);", span="39-39"];
d18 [cluster="Nancy.Testing.AssertExtensions.ShouldExistOnce(Nancy.Testing.QueryWrapper)", label="return new AndConnector<NodeWrapper>(Asserts.Single(query));", span="47-47"];
d23 [cluster="Nancy.Testing.AssertExtensions.ShouldExistExactly(Nancy.Testing.QueryWrapper, int)", label="return new AndConnector<QueryWrapper>(nodeWrappers as QueryWrapper);", span="57-57"];
d28 [cluster="Nancy.Testing.AssertExtensions.ShouldBeOfClass(Nancy.Testing.NodeWrapper, string)", label="return new AndConnector<NodeWrapper>(node);", span="67-67"];
d34 [cluster="Nancy.Testing.AssertExtensions.ShouldBeOfClass(Nancy.Testing.QueryWrapper, string)", label="return new AndConnector<QueryWrapper>(query);", span="80-80"];
d39 [cluster="Nancy.Testing.AssertExtensions.ShouldContain(Nancy.Testing.NodeWrapper, string, System.StringComparison)", label="return new AndConnector<NodeWrapper>(node);", span="90-90"];
d45 [cluster="Nancy.Testing.AssertExtensions.ShouldContain(Nancy.Testing.QueryWrapper, string, System.StringComparison)", label="return new AndConnector<QueryWrapper>(query);", span="103-103"];
d50 [cluster="Nancy.Testing.AssertExtensions.ShouldContainAttribute(Nancy.Testing.NodeWrapper, string)", label="return new AndConnector<NodeWrapper>(node);", span="113-113"];
d55 [cluster="Nancy.Testing.AssertExtensions.ShouldContainAttribute(Nancy.Testing.NodeWrapper, string, string, System.StringComparison)", label="return new AndConnector<NodeWrapper>(node);", span="123-123"];
d61 [cluster="Nancy.Testing.AssertExtensions.ShouldContainAttribute(Nancy.Testing.QueryWrapper, string)", label="return new AndConnector<QueryWrapper>(query);", span="136-136"];
d67 [cluster="Nancy.Testing.AssertExtensions.ShouldContainAttribute(Nancy.Testing.QueryWrapper, string, string, System.StringComparison)", label="return new AndConnector<QueryWrapper>(query);", span="149-149"];
d12 [cluster="Nancy.Testing.AssertExtensions.ShouldNotExist(Nancy.Testing.QueryWrapper)", label="Entry Nancy.Testing.AssertExtensions.ShouldNotExist(Nancy.Testing.QueryWrapper)", span="35-35"];
d16 [cluster="Nancy.Testing.Asserts.False(bool)", label="Entry Nancy.Testing.Asserts.False(bool)", span="54-54"];
d22 [cluster="Nancy.Testing.AssertExtensions.ShouldExistExactly(Nancy.Testing.QueryWrapper, int)", label="var nodeWrappers = Asserts.Exactly(query, expectedNumberOfOccurrances)", span="56-56"];
d48 [cluster="Nancy.Testing.AssertExtensions.ShouldContainAttribute(Nancy.Testing.NodeWrapper, string)", label="Entry Nancy.Testing.AssertExtensions.ShouldContainAttribute(Nancy.Testing.NodeWrapper, string)", span="109-109"];
d52 [cluster="Nancy.Testing.NodeWrapper.HasAttribute(string)", label="Entry Nancy.Testing.NodeWrapper.HasAttribute(string)", span="26-26"];
d0 [cluster="Nancy.Testing.AssertExtensions.ShouldExist(Nancy.Testing.NodeWrapper)", label="Entry Nancy.Testing.AssertExtensions.ShouldExist(Nancy.Testing.NodeWrapper)", span="15-15"];
d1 [cluster="Nancy.Testing.AssertExtensions.ShouldExist(Nancy.Testing.NodeWrapper)", label="Asserts.NotNull(node)", span="17-17"];
d3 [cluster="Nancy.Testing.AssertExtensions.ShouldExist(Nancy.Testing.NodeWrapper)", label="Exit Nancy.Testing.AssertExtensions.ShouldExist(Nancy.Testing.NodeWrapper)", span="15-15"];
d15 [cluster="Nancy.Testing.AssertExtensions.ShouldNotExist(Nancy.Testing.QueryWrapper)", label="Exit Nancy.Testing.AssertExtensions.ShouldNotExist(Nancy.Testing.QueryWrapper)", span="35-35"];
d17 [cluster="Nancy.Testing.AssertExtensions.ShouldExistOnce(Nancy.Testing.QueryWrapper)", label="Entry Nancy.Testing.AssertExtensions.ShouldExistOnce(Nancy.Testing.QueryWrapper)", span="45-45"];
d19 [cluster="Nancy.Testing.AssertExtensions.ShouldExistOnce(Nancy.Testing.QueryWrapper)", label="Exit Nancy.Testing.AssertExtensions.ShouldExistOnce(Nancy.Testing.QueryWrapper)", span="45-45"];
d20 [cluster="Nancy.Testing.Asserts.Single<T>(System.Collections.Generic.IEnumerable<T>)", label="Entry Nancy.Testing.Asserts.Single<T>(System.Collections.Generic.IEnumerable<T>)", span="89-89"];
d24 [cluster="Nancy.Testing.AssertExtensions.ShouldExistExactly(Nancy.Testing.QueryWrapper, int)", label="Exit Nancy.Testing.AssertExtensions.ShouldExistExactly(Nancy.Testing.QueryWrapper, int)", span="54-54"];
d26 [cluster="Nancy.Testing.AssertExtensions.ShouldBeOfClass(Nancy.Testing.NodeWrapper, string)", label="Entry Nancy.Testing.AssertExtensions.ShouldBeOfClass(Nancy.Testing.NodeWrapper, string)", span="63-63"];
d27 [cluster="Nancy.Testing.AssertExtensions.ShouldBeOfClass(Nancy.Testing.NodeWrapper, string)", label="Asserts.Equal(node.Attributes[''class''], className)", span="65-65"];
d29 [cluster="Nancy.Testing.AssertExtensions.ShouldBeOfClass(Nancy.Testing.NodeWrapper, string)", label="Exit Nancy.Testing.AssertExtensions.ShouldBeOfClass(Nancy.Testing.NodeWrapper, string)", span="63-63"];
d31 [cluster="Nancy.Testing.AssertExtensions.ShouldBeOfClass(Nancy.Testing.QueryWrapper, string)", label="Entry Nancy.Testing.AssertExtensions.ShouldBeOfClass(Nancy.Testing.QueryWrapper, string)", span="73-73"];
d32 [cluster="Nancy.Testing.AssertExtensions.ShouldBeOfClass(Nancy.Testing.QueryWrapper, string)", label=query, span="75-75"];
d35 [cluster="Nancy.Testing.AssertExtensions.ShouldBeOfClass(Nancy.Testing.QueryWrapper, string)", label="Exit Nancy.Testing.AssertExtensions.ShouldBeOfClass(Nancy.Testing.QueryWrapper, string)", span="73-73"];
d37 [cluster="Nancy.Testing.AssertExtensions.ShouldContain(Nancy.Testing.NodeWrapper, string, System.StringComparison)", label="Entry Nancy.Testing.AssertExtensions.ShouldContain(Nancy.Testing.NodeWrapper, string, System.StringComparison)", span="86-86"];
d38 [cluster="Nancy.Testing.AssertExtensions.ShouldContain(Nancy.Testing.NodeWrapper, string, System.StringComparison)", label="Asserts.Contains(contents, node.InnerText, comparisonType)", span="88-88"];
d40 [cluster="Nancy.Testing.AssertExtensions.ShouldContain(Nancy.Testing.NodeWrapper, string, System.StringComparison)", label="Exit Nancy.Testing.AssertExtensions.ShouldContain(Nancy.Testing.NodeWrapper, string, System.StringComparison)", span="86-86"];
d42 [cluster="Nancy.Testing.AssertExtensions.ShouldContain(Nancy.Testing.QueryWrapper, string, System.StringComparison)", label="Entry Nancy.Testing.AssertExtensions.ShouldContain(Nancy.Testing.QueryWrapper, string, System.StringComparison)", span="96-96"];
d43 [cluster="Nancy.Testing.AssertExtensions.ShouldContain(Nancy.Testing.QueryWrapper, string, System.StringComparison)", label=query, span="98-98"];
d46 [cluster="Nancy.Testing.AssertExtensions.ShouldContain(Nancy.Testing.QueryWrapper, string, System.StringComparison)", label="Exit Nancy.Testing.AssertExtensions.ShouldContain(Nancy.Testing.QueryWrapper, string, System.StringComparison)", span="96-96"];
d51 [cluster="Nancy.Testing.AssertExtensions.ShouldContainAttribute(Nancy.Testing.NodeWrapper, string)", label="Exit Nancy.Testing.AssertExtensions.ShouldContainAttribute(Nancy.Testing.NodeWrapper, string)", span="109-109"];
d53 [cluster="Nancy.Testing.AssertExtensions.ShouldContainAttribute(Nancy.Testing.NodeWrapper, string, string, System.StringComparison)", label="Entry Nancy.Testing.AssertExtensions.ShouldContainAttribute(Nancy.Testing.NodeWrapper, string, string, System.StringComparison)", span="119-119"];
d54 [cluster="Nancy.Testing.AssertExtensions.ShouldContainAttribute(Nancy.Testing.NodeWrapper, string, string, System.StringComparison)", label="Asserts.Equal(node.Attributes[name], value, comparisonType)", span="121-121"];
d56 [cluster="Nancy.Testing.AssertExtensions.ShouldContainAttribute(Nancy.Testing.NodeWrapper, string, string, System.StringComparison)", label="Exit Nancy.Testing.AssertExtensions.ShouldContainAttribute(Nancy.Testing.NodeWrapper, string, string, System.StringComparison)", span="119-119"];
d58 [cluster="Nancy.Testing.AssertExtensions.ShouldContainAttribute(Nancy.Testing.QueryWrapper, string)", label="Entry Nancy.Testing.AssertExtensions.ShouldContainAttribute(Nancy.Testing.QueryWrapper, string)", span="129-129"];
d59 [cluster="Nancy.Testing.AssertExtensions.ShouldContainAttribute(Nancy.Testing.QueryWrapper, string)", label=query, span="131-131"];
d62 [cluster="Nancy.Testing.AssertExtensions.ShouldContainAttribute(Nancy.Testing.QueryWrapper, string)", label="Exit Nancy.Testing.AssertExtensions.ShouldContainAttribute(Nancy.Testing.QueryWrapper, string)", span="129-129"];
d64 [cluster="Nancy.Testing.AssertExtensions.ShouldContainAttribute(Nancy.Testing.QueryWrapper, string, string, System.StringComparison)", label="Entry Nancy.Testing.AssertExtensions.ShouldContainAttribute(Nancy.Testing.QueryWrapper, string, string, System.StringComparison)", span="142-142"];
d65 [cluster="Nancy.Testing.AssertExtensions.ShouldContainAttribute(Nancy.Testing.QueryWrapper, string, string, System.StringComparison)", label=query, span="144-144"];
d68 [cluster="Nancy.Testing.AssertExtensions.ShouldContainAttribute(Nancy.Testing.QueryWrapper, string, string, System.StringComparison)", label="Exit Nancy.Testing.AssertExtensions.ShouldContainAttribute(Nancy.Testing.QueryWrapper, string, string, System.StringComparison)", span="142-142"];
d21 [cluster="Nancy.Testing.AssertExtensions.ShouldExistExactly(Nancy.Testing.QueryWrapper, int)", label="Entry Nancy.Testing.AssertExtensions.ShouldExistExactly(Nancy.Testing.QueryWrapper, int)", span="54-54"];
d4 [cluster="Nancy.Testing.Asserts.NotNull(object)", label="Entry Nancy.Testing.Asserts.NotNull(object)", span="62-62"];
d30 [cluster="Nancy.Testing.Asserts.Equal<T>(T, T)", label="Entry Nancy.Testing.Asserts.Equal<T>(T, T)", span="35-35"];
d33 [cluster="Nancy.Testing.AssertExtensions.ShouldBeOfClass(Nancy.Testing.QueryWrapper, string)", label="node.ShouldBeOfClass(className)", span="77-77"];
d41 [cluster="Nancy.Testing.Asserts.Contains(string, string, System.StringComparison)", label="Entry Nancy.Testing.Asserts.Contains(string, string, System.StringComparison)", span="27-27"];
d44 [cluster="Nancy.Testing.AssertExtensions.ShouldContain(Nancy.Testing.QueryWrapper, string, System.StringComparison)", label="node.ShouldContain(contents, comparisonType)", span="100-100"];
d57 [cluster="Nancy.Testing.Asserts.Equal(string, string, System.StringComparison)", label="Entry Nancy.Testing.Asserts.Equal(string, string, System.StringComparison)", span="46-46"];
d60 [cluster="Nancy.Testing.AssertExtensions.ShouldContainAttribute(Nancy.Testing.QueryWrapper, string)", label="node.ShouldContainAttribute(name)", span="133-133"];
d66 [cluster="Nancy.Testing.AssertExtensions.ShouldContainAttribute(Nancy.Testing.QueryWrapper, string, string, System.StringComparison)", label="node.ShouldContainAttribute(name, value)", span="146-146"];
d36 [cluster="Nancy.Testing.NodeWrapper.ShouldBeOfClass(string)", label="Entry Nancy.Testing.NodeWrapper.ShouldBeOfClass(string)", span="63-63"];
d47 [cluster="Nancy.Testing.NodeWrapper.ShouldContain(string, System.StringComparison)", label="Entry Nancy.Testing.NodeWrapper.ShouldContain(string, System.StringComparison)", span="86-86"];
d63 [cluster="Nancy.Testing.NodeWrapper.ShouldContainAttribute(string)", label="Entry Nancy.Testing.NodeWrapper.ShouldContainAttribute(string)", span="109-109"];
d69 [cluster="Nancy.Testing.NodeWrapper.ShouldContainAttribute(string, string, System.StringComparison)", label="Entry Nancy.Testing.NodeWrapper.ShouldContainAttribute(string, string, System.StringComparison)", span="119-119"];
m0_32 [cluster="Unk.WithAnyArguments", file="AssertExtensionsTests.cs", label="Entry Unk.WithAnyArguments", span=""];
m0_33 [cluster="Unk.Returns", file="AssertExtensionsTests.cs", label="Entry Unk.Returns", span=""];
m0_34 [cluster="Unk.MustHaveHappened", file="AssertExtensionsTests.cs", label="Entry Unk.MustHaveHappened", span=""];
m0_35 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Entry lambda expression", span="33-33"];
m0_6 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Entry lambda expression", span="15-15"];
m0_7 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="new DynamicModelBinderAdapter(null, new NancyContext())", span="15-15"];
m0_8 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Exit lambda expression", span="15-15"];
m0_9 [cluster="Nancy.ModelBinding.DynamicModelBinderAdapter.DynamicModelBinderAdapter(Nancy.ModelBinding.IModelBinderLocator, Nancy.NancyContext, params string[])", file="AssertExtensionsTests.cs", label="Entry Nancy.ModelBinding.DynamicModelBinderAdapter.DynamicModelBinderAdapter(Nancy.ModelBinding.IModelBinderLocator, Nancy.NancyContext, params string[])", span="30-30"];
m0_48 [cluster="Nancy.Tests.Unit.ModelBinding.DynamicModelBinderAdapterFixture.Should_pass_type_to_locator_when_cast_explicitly()", file="AssertExtensionsTests.cs", label="var returnModel = new Model()", span="47-47"];
m0_181 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_SingleElementContainingAttribute_ShouldNotThrowAssert()", file="AssertExtensionsTests.cs", label="Entry Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_SingleElementContainingAttribute_ShouldNotThrowAssert()", span="284-284"];
m0_182 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_SingleElementContainingAttribute_ShouldNotThrowAssert()", file="AssertExtensionsTests.cs", label="var htmlNode = this.query[''#testId''].First()", span="287-287"];
m0_183 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_SingleElementContainingAttribute_ShouldNotThrowAssert()", file="AssertExtensionsTests.cs", label="var result = Record.Exception(() => htmlNode.ShouldContainAttribute(''attribute1''))", span="290-290"];
m0_184 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_SingleElementContainingAttribute_ShouldNotThrowAssert()", file="AssertExtensionsTests.cs", label="Assert.Null(result)", span="293-293"];
m0_185 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_SingleElementContainingAttribute_ShouldNotThrowAssert()", file="AssertExtensionsTests.cs", label="Exit Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_SingleElementContainingAttribute_ShouldNotThrowAssert()", span="284-284"];
m0_30 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Exit lambda expression", span="48-48"];
m0_5 [cluster="Unk.ShouldBeOfType", file="AssertExtensionsTests.cs", label="Entry Unk.ShouldBeOfType", span=""];
m0_56 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Entry lambda expression", span="48-48"];
m0_57 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="fakeModelBinder.Bind(null, null, null)", span="48-48"];
m0_58 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Exit lambda expression", span="48-48"];
m0_59 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Entry lambda expression", span="50-50"];
m0_231 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_MultipleElementsContainingAttributeAndValue_ShouldNotThrowAssert()", file="AssertExtensionsTests.cs", label="Entry Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_MultipleElementsContainingAttributeAndValue_ShouldNotThrowAssert()", span="362-362"];
m0_232 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_MultipleElementsContainingAttributeAndValue_ShouldNotThrowAssert()", file="AssertExtensionsTests.cs", label="var htmlNode = this.query[''span'']", span="365-365"];
m0_233 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_MultipleElementsContainingAttributeAndValue_ShouldNotThrowAssert()", file="AssertExtensionsTests.cs", label="var result = Record.Exception(() => htmlNode.ShouldContainAttribute(''class'', ''class''))", span="368-368"];
m0_234 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_MultipleElementsContainingAttributeAndValue_ShouldNotThrowAssert()", file="AssertExtensionsTests.cs", label="Assert.Null(result)", span="371-371"];
m0_235 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_MultipleElementsContainingAttributeAndValue_ShouldNotThrowAssert()", file="AssertExtensionsTests.cs", label="Exit Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_MultipleElementsContainingAttributeAndValue_ShouldNotThrowAssert()", span="362-362"];
m0_156 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_SingleElementNotContainingAttributeAndValue_ShouldThrowAssert()", file="AssertExtensionsTests.cs", label="Entry Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_SingleElementNotContainingAttributeAndValue_ShouldThrowAssert()", span="245-245"];
m0_157 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_SingleElementNotContainingAttributeAndValue_ShouldThrowAssert()", file="AssertExtensionsTests.cs", label="var htmlNode = this.query[''#testId''].First()", span="248-248"];
m0_158 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_SingleElementNotContainingAttributeAndValue_ShouldThrowAssert()", file="AssertExtensionsTests.cs", label="var result = Record.Exception(() => htmlNode.ShouldContainAttribute(''nope'', ''nope''))", span="251-251"];
m0_159 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_SingleElementNotContainingAttributeAndValue_ShouldThrowAssert()", file="AssertExtensionsTests.cs", label="Assert.IsAssignableFrom<AssertException>(result)", span="254-254"];
m0_160 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_SingleElementNotContainingAttributeAndValue_ShouldThrowAssert()", file="AssertExtensionsTests.cs", label="Exit Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_SingleElementNotContainingAttributeAndValue_ShouldThrowAssert()", span="245-245"];
m0_77 [cluster="lambda expression", color=green, community=0, file="AssertExtensionsTests.cs", label="0: htmlNode.ShouldBeOfClass(''nope'')", span="121-121"];
m0_147 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_SingleElementNotContainingAttribute_ShouldThrowAssert()", file="AssertExtensionsTests.cs", label="Entry Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_SingleElementNotContainingAttribute_ShouldThrowAssert()", span="232-232"];
m0_148 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_SingleElementNotContainingAttribute_ShouldThrowAssert()", file="AssertExtensionsTests.cs", label="var htmlNode = this.query[''#testId''].First()", span="235-235"];
m0_149 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_SingleElementNotContainingAttribute_ShouldThrowAssert()", file="AssertExtensionsTests.cs", label="var result = Record.Exception(() => htmlNode.ShouldContainAttribute(''nope''))", span="238-238"];
m0_150 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_SingleElementNotContainingAttribute_ShouldThrowAssert()", file="AssertExtensionsTests.cs", label="Assert.IsAssignableFrom<AssertException>(result)", span="241-241"];
m0_151 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_SingleElementNotContainingAttribute_ShouldThrowAssert()", file="AssertExtensionsTests.cs", label="Exit Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_SingleElementNotContainingAttribute_ShouldThrowAssert()", span="232-232"];
m0_97 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_MultipleElementsAllThatClass_ShouldNotThrowAssert()", file="AssertExtensionsTests.cs", label=fakeModelBinder, span=""];
m0_98 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_MultipleElementsAllThatClass_ShouldNotThrowAssert()", file="AssertExtensionsTests.cs", label=fakeLocator, span=""];
m0_99 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_MultipleElementsAllThatClass_ShouldNotThrowAssert()", file="AssertExtensionsTests.cs", label=fakeModelBinder, span=""];
m0_100 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_MultipleElementsAllThatClass_ShouldNotThrowAssert()", file="AssertExtensionsTests.cs", label=fakeLocator, span=""];
m0_101 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_MultipleElementsAllThatClass_ShouldNotThrowAssert()", file="AssertExtensionsTests.cs", label=fakeModelBinder, span=""];
m0_39 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Entry lambda expression", span="35-35"];
m0_96 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Exit lambda expression", span="81-81"];
m0_46 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldExistsExactly2_Exists2_ReturnsResultAndConnector()", file="AssertExtensionsTests.cs", label="Assert.IsType<AndConnector<QueryWrapper>>(result)", span="81-81"];
m0_47 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldExistsExactly2_Exists2_ReturnsResultAndConnector()", file="AssertExtensionsTests.cs", label="Exit Nancy.Testing.Tests.AssertExtensionsTests.ShouldExistsExactly2_Exists2_ReturnsResultAndConnector()", span="75-75"];
m0_49 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldExistsExactly3_Exists2_ReturnsResultAndConnector()", file="AssertExtensionsTests.cs", label="Entry Nancy.Testing.Tests.AssertExtensionsTests.ShouldExistsExactly3_Exists2_ReturnsResultAndConnector()", span="85-85"];
m0_51 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldExistsExactly3_Exists2_ReturnsResultAndConnector()", file="AssertExtensionsTests.cs", label="Assert.IsAssignableFrom<AssertException>(result)", span="91-91"];
m0_50 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldExistsExactly3_Exists2_ReturnsResultAndConnector()", file="AssertExtensionsTests.cs", label="var result = Record.Exception(() => this.query[''.class''].ShouldExistExactly(3))", span="88-88"];
m0_52 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldExistsExactly3_Exists2_ReturnsResultAndConnector()", file="AssertExtensionsTests.cs", label="Exit Nancy.Testing.Tests.AssertExtensionsTests.ShouldExistsExactly3_Exists2_ReturnsResultAndConnector()", span="85-85"];
m0_54 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="this.query[''.class''].ShouldExistExactly(3)", span="88-88"];
m0_53 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Entry lambda expression", span="88-88"];
m0_55 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Exit lambda expression", span="88-88"];
m0_11 [cluster="Nancy.Tests.Unit.ModelBinding.DynamicModelBinderAdapterFixture.Should_throw_if_context_is_null()", file="AssertExtensionsTests.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DynamicModelBinderAdapterFixture.Should_throw_if_context_is_null()", span="21-21"];
m0_19 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.Should_not_throw_exception_when_id_does_exist()", file="AssertExtensionsTests.cs", label="Exit Nancy.Testing.Tests.AssertExtensionsTests.Should_not_throw_exception_when_id_does_exist()", span="35-35"];
m0_40 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="fakeLocator.GetBinderForType(A<Type>.Ignored)", span="35-35"];
m0_41 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Exit lambda expression", span="35-35"];
m0_42 [cluster="Unk.GetBinderForType", file="AssertExtensionsTests.cs", label="Entry Unk.GetBinderForType", span=""];
m0_43 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Entry lambda expression", span="40-40"];
m0_223 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_MultipleElementsContainingAttribute_ShouldNotThrowAssert()", file="AssertExtensionsTests.cs", label="Entry Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_MultipleElementsContainingAttribute_ShouldNotThrowAssert()", span="349-349"];
m0_224 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_MultipleElementsContainingAttribute_ShouldNotThrowAssert()", file="AssertExtensionsTests.cs", label="var htmlNode = this.query[''div'']", span="352-352"];
m0_225 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_MultipleElementsContainingAttribute_ShouldNotThrowAssert()", file="AssertExtensionsTests.cs", label="var result = Record.Exception(() => htmlNode.ShouldContainAttribute(''class''))", span="355-355"];
m0_226 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_MultipleElementsContainingAttribute_ShouldNotThrowAssert()", file="AssertExtensionsTests.cs", label="Assert.Null(result)", span="358-358"];
m0_227 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_MultipleElementsContainingAttribute_ShouldNotThrowAssert()", file="AssertExtensionsTests.cs", label="Exit Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_MultipleElementsContainingAttribute_ShouldNotThrowAssert()", span="349-349"];
m0_0 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.AssertExtensionsTests()", file="AssertExtensionsTests.cs", label="Entry Nancy.Testing.Tests.AssertExtensionsTests.AssertExtensionsTests()", span="15-15"];
m0_1 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.AssertExtensionsTests()", file="AssertExtensionsTests.cs", label="var document =\r\n                CQ.Create(@''<html><head></head><body><div id='testId' class='myClass' attribute1 attribute2='value2'>Test</div><div class='anotherClass'>Tes</div><span class='class'>some contents</span><span class='class'>This has contents</span></body></html>'')", span="17-18"];
m0_2 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.AssertExtensionsTests()", file="AssertExtensionsTests.cs", label="this.query =\r\n                new QueryWrapper(document)", span="20-21"];
m0_3 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.AssertExtensionsTests()", file="AssertExtensionsTests.cs", label="Exit Nancy.Testing.Tests.AssertExtensionsTests.AssertExtensionsTests()", span="15-15"];
m0_222 [cluster="Nancy.Testing.QueryWrapper.ShouldContainAttribute(string, string, System.StringComparison)", file="AssertExtensionsTests.cs", label="Entry Nancy.Testing.QueryWrapper.ShouldContainAttribute(string, string, System.StringComparison)", span="142-142"];
m0_12 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Entry lambda expression", span="28-28"];
m0_13 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="this.query[''#notThere''].ShouldExist()", span="28-28"];
m0_14 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Exit lambda expression", span="28-28"];
m0_214 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_MultipleElementsOneNotContainingAttributeAndValue_ShouldThrowAssert()", file="AssertExtensionsTests.cs", label="Entry Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_MultipleElementsOneNotContainingAttributeAndValue_ShouldThrowAssert()", span="336-336"];
m0_215 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_MultipleElementsOneNotContainingAttributeAndValue_ShouldThrowAssert()", file="AssertExtensionsTests.cs", label="var htmlNode = this.query[''div'']", span="339-339"];
m0_216 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_MultipleElementsOneNotContainingAttributeAndValue_ShouldThrowAssert()", file="AssertExtensionsTests.cs", label="var result = Record.Exception(() => htmlNode.ShouldContainAttribute(''class'', ''myClass''))", span="342-342"];
m0_217 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_MultipleElementsOneNotContainingAttributeAndValue_ShouldThrowAssert()", file="AssertExtensionsTests.cs", label="Assert.IsAssignableFrom<AssertException>(result)", span="345-345"];
m0_218 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_MultipleElementsOneNotContainingAttributeAndValue_ShouldThrowAssert()", file="AssertExtensionsTests.cs", label="Exit Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_MultipleElementsOneNotContainingAttributeAndValue_ShouldThrowAssert()", span="336-336"];
m0_15 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Entry lambda expression", span="23-23"];
m0_114 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementWithTextInDifferentCase_ShouldHonorCompareType()", file="AssertExtensionsTests.cs", label="Entry Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementWithTextInDifferentCase_ShouldHonorCompareType()", span="180-180"];
m0_115 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementWithTextInDifferentCase_ShouldHonorCompareType()", color=green, community=0, file="AssertExtensionsTests.cs", label="0: var htmlNode = this.query[''#testId''].First()", span="183-183"];
m0_116 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementWithTextInDifferentCase_ShouldHonorCompareType()", color=green, community=0, file="AssertExtensionsTests.cs", label="0: var result = Record.Exception(() => htmlNode.ShouldContain(''test'', StringComparison.InvariantCultureIgnoreCase))", span="186-186"];
m0_117 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementWithTextInDifferentCase_ShouldHonorCompareType()", color=green, community=0, file="AssertExtensionsTests.cs", label="0: Assert.Null(result)", span="189-189"];
m0_118 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementWithTextInDifferentCase_ShouldHonorCompareType()", file="AssertExtensionsTests.cs", label="Exit Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementWithTextInDifferentCase_ShouldHonorCompareType()", span="180-180"];
m0_164 [cluster="Nancy.Testing.NodeWrapper.ShouldContainAttribute(string, string, System.StringComparison)", file="AssertExtensionsTests.cs", label="Entry Nancy.Testing.NodeWrapper.ShouldContainAttribute(string, string, System.StringComparison)", span="119-119"];
m0_79 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="fakeModelBinder.Bind(null, null, null)", span="63-63"];
m0_20 [cluster="Unk.Null", file="AssertExtensionsTests.cs", label="Entry Unk.Null", span=""];
m0_21 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Entry lambda expression", span="38-38"];
m0_22 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="this.query[''#testId''].ShouldExist()", span="38-38"];
m0_23 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Exit lambda expression", span="38-38"];
m0_25 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.Should_detect_nonexistence()", file="AssertExtensionsTests.cs", label="var result = Record.Exception(() => this.query[''#jamesIsAwesome''].ShouldNotExist())", span="48-48"];
m0_24 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.Should_detect_nonexistence()", file="AssertExtensionsTests.cs", label="Entry Nancy.Testing.Tests.AssertExtensionsTests.Should_detect_nonexistence()", span="45-45"];
m0_26 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.Should_detect_nonexistence()", file="AssertExtensionsTests.cs", label="Assert.Null(result)", span="51-51"];
m0_28 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Entry lambda expression", span="48-48"];
m0_27 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.Should_detect_nonexistence()", file="AssertExtensionsTests.cs", label="Exit Nancy.Testing.Tests.AssertExtensionsTests.Should_detect_nonexistence()", span="45-45"];
m0_29 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="this.query[''#jamesIsAwesome''].ShouldNotExist()", span="48-48"];
m0_84 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_SingleElementWithThatClass_ShouldNotThrowAssert()", file="AssertExtensionsTests.cs", label="Exit Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_SingleElementWithThatClass_ShouldNotThrowAssert()", span="128-128"];
m0_85 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Entry lambda expression", span="134-134"];
m0_86 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="htmlNode.ShouldBeOfClass(''myClass'')", span="134-134"];
m0_87 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Exit lambda expression", span="134-134"];
m0_88 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_MultipleElementsOneNotThatClass_ShouldThrowAssert()", file="AssertExtensionsTests.cs", label="Entry Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_MultipleElementsOneNotThatClass_ShouldThrowAssert()", span="141-141"];
m0_89 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_MultipleElementsOneNotThatClass_ShouldThrowAssert()", file="AssertExtensionsTests.cs", label="var htmlNodes = this.query[''div'']", span="144-144"];
m0_90 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_MultipleElementsOneNotThatClass_ShouldThrowAssert()", file="AssertExtensionsTests.cs", label="var result = Record.Exception(() => htmlNodes.ShouldBeOfClass(''myClass''))", span="147-147"];
m0_91 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Entry lambda expression", span="78-78"];
m0_92 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="fakeLocator.GetBinderForType(A<Type>.Ignored)", span="78-78"];
m0_213 [cluster="Nancy.Testing.QueryWrapper.ShouldContainAttribute(string)", file="AssertExtensionsTests.cs", label="Entry Nancy.Testing.QueryWrapper.ShouldContainAttribute(string)", span="129-129"];
m0_44 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="fakeLocator.GetBinderForType(typeof(Model))", span="40-40"];
m0_45 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Exit lambda expression", span="40-40"];
m0_105 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementThatContainsText_ShouldNotThrowAssert()", file="AssertExtensionsTests.cs", label="Entry Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementThatContainsText_ShouldNotThrowAssert()", span="167-167"];
m0_106 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementThatContainsText_ShouldNotThrowAssert()", file="AssertExtensionsTests.cs", label="var htmlNode = this.query[''#testId''].First()", span="170-170"];
m0_107 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementThatContainsText_ShouldNotThrowAssert()", file="AssertExtensionsTests.cs", label="var result = Record.Exception(() => htmlNode.ShouldContain(''Test''))", span="173-173"];
m0_108 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementThatContainsText_ShouldNotThrowAssert()", file="AssertExtensionsTests.cs", label="Assert.Null(result)", span="176-176"];
m0_109 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementThatContainsText_ShouldNotThrowAssert()", file="AssertExtensionsTests.cs", label="Exit Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementThatContainsText_ShouldNotThrowAssert()", span="167-167"];
m0_122 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementDoesntContainText_ShouldThrowAssert()", file="AssertExtensionsTests.cs", label="Entry Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementDoesntContainText_ShouldThrowAssert()", span="193-193"];
m0_123 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementDoesntContainText_ShouldThrowAssert()", file="AssertExtensionsTests.cs", label="var htmlNode = this.query[''#testId''].First()", span="196-196"];
m0_124 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementDoesntContainText_ShouldThrowAssert()", file="AssertExtensionsTests.cs", label="var result = Record.Exception(() => htmlNode.ShouldContain(''nope''))", span="199-199"];
m0_125 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementDoesntContainText_ShouldThrowAssert()", file="AssertExtensionsTests.cs", label="Assert.IsAssignableFrom<AssertException>(result)", span="202-202"];
m0_126 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementDoesntContainText_ShouldThrowAssert()", file="AssertExtensionsTests.cs", label="Exit Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_SingleElementDoesntContainText_ShouldThrowAssert()", span="193-193"];
m0_31 [cluster="Nancy.Testing.QueryWrapper.ShouldNotExist()", file="AssertExtensionsTests.cs", label="Entry Nancy.Testing.QueryWrapper.ShouldNotExist()", span="35-35"];
m0_38 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Exit lambda expression", span="58-58"];
m0_80 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Exit lambda expression", span="63-63"];
m0_81 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Entry lambda expression", span="65-65"];
m0_82 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="fakeLocator.GetBinderForType(A<Type>.Ignored)", span="65-65"];
m0_83 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Exit lambda expression", span="65-65"];
m0_139 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_MultipleElementsOneNotContainingText_ShouldThrowAssert()", file="AssertExtensionsTests.cs", label="Entry Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_MultipleElementsOneNotContainingText_ShouldThrowAssert()", span="219-219"];
m0_140 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_MultipleElementsOneNotContainingText_ShouldThrowAssert()", file="AssertExtensionsTests.cs", label="var htmlNodes = this.query[''div'']", span="222-222"];
m0_141 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_MultipleElementsOneNotContainingText_ShouldThrowAssert()", file="AssertExtensionsTests.cs", label="var result = Record.Exception(() => htmlNodes.ShouldContain(''Test''))", span="225-225"];
m0_142 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_MultipleElementsOneNotContainingText_ShouldThrowAssert()", file="AssertExtensionsTests.cs", label="Assert.IsAssignableFrom<AssertException>(result)", span="228-228"];
m0_143 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_MultipleElementsOneNotContainingText_ShouldThrowAssert()", file="AssertExtensionsTests.cs", label="Exit Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_MultipleElementsOneNotContainingText_ShouldThrowAssert()", span="219-219"];
m0_10 [cluster="Unk.Exception", file="AssertExtensionsTests.cs", label="Entry Unk.Exception", span=""];
m0_75 [cluster="Nancy.Tests.Unit.ModelBinding.DynamicModelBinderAdapterFixture.Should_return_object_from_binder_if_binder_doesnt_return_null()", file="AssertExtensionsTests.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DynamicModelBinderAdapterFixture.Should_return_object_from_binder_if_binder_doesnt_return_null()", span="59-59"];
m0_236 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Entry lambda expression", span="368-368"];
m0_16 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.Should_not_throw_exception_when_id_does_exist()", file="AssertExtensionsTests.cs", label="Entry Nancy.Testing.Tests.AssertExtensionsTests.Should_not_throw_exception_when_id_does_exist()", span="35-35"];
m0_17 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.Should_not_throw_exception_when_id_does_exist()", file="AssertExtensionsTests.cs", label="var result = Record.Exception(() => this.query[''#testId''].ShouldExist())", span="38-38"];
m0_36 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Entry lambda expression", span="58-58"];
m0_37 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="this.query[''#testId''].ShouldExistOnce()", span="58-58"];
m0_60 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Entry lambda expression", span="98-98"];
m0_63 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldExistOnce_ExistsMoreThanOnce_ShouldThrowAssert()", file="AssertExtensionsTests.cs", label="Entry Nancy.Testing.Tests.AssertExtensionsTests.ShouldExistOnce_ExistsMoreThanOnce_ShouldThrowAssert()", span="105-105"];
m0_62 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Exit lambda expression", span="98-98"];
m0_61 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="this.query[''#notHere''].ShouldExistOnce()", span="98-98"];
m0_64 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldExistOnce_ExistsMoreThanOnce_ShouldThrowAssert()", file="AssertExtensionsTests.cs", label="var result = Record.Exception(() => this.query[''div''].ShouldExistOnce())", span="108-108"];
m0_78 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Exit lambda expression", span="121-121"];
m0_95 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Exit lambda expression", span="147-147"];
m0_94 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="htmlNodes.ShouldBeOfClass(''myClass'')", span="147-147"];
m0_93 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Entry lambda expression", span="147-147"];
m0_120 [cluster="lambda expression", color=green, community=0, file="AssertExtensionsTests.cs", label="0: htmlNode.ShouldContain(''test'', StringComparison.InvariantCultureIgnoreCase)", span="186-186"];
m0_119 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Entry lambda expression", span="186-186"];
m0_121 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Exit lambda expression", span="186-186"];
m0_171 [cluster="lambda expression", color=green, community=0, file="AssertExtensionsTests.cs", label="0: htmlNode.ShouldContainAttribute(''attribute1'', ''nope'')", span="264-264"];
m0_170 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Entry lambda expression", span="264-264"];
m0_172 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Exit lambda expression", span="264-264"];
m0_179 [cluster="lambda expression", color=green, community=0, file="AssertExtensionsTests.cs", label="0: htmlNode.ShouldContainAttribute(''attribute2'', ''nope'')", span="277-277"];
m0_178 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Entry lambda expression", span="277-277"];
m0_180 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Exit lambda expression", span="277-277"];
m0_68 [cluster="Nancy.Tests.Unit.ModelBinding.DynamicModelBinderAdapterFixture.Should_return_object_from_binder_if_binder_doesnt_return_null()", file="AssertExtensionsTests.cs", label="A.CallTo(() => fakeModelBinder.Bind(null, null, null)).WithAnyArguments().Returns(returnModel)", span="63-63"];
m0_111 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="htmlNode.ShouldContain(''Test'')", span="173-173"];
m0_128 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="htmlNode.ShouldContain(''nope'')", span="199-199"];
m0_162 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="htmlNode.ShouldContainAttribute(''nope'', ''nope'')", span="251-251"];
m0_203 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="htmlNode.ShouldContainAttribute(''attribute2'', ''value2'')", span="316-316"];
m0_67 [cluster="Nancy.Tests.Unit.ModelBinding.DynamicModelBinderAdapterFixture.Should_return_object_from_binder_if_binder_doesnt_return_null()", file="AssertExtensionsTests.cs", label="var returnModel = new Model()", span="62-62"];
m0_69 [cluster="Nancy.Tests.Unit.ModelBinding.DynamicModelBinderAdapterFixture.Should_return_object_from_binder_if_binder_doesnt_return_null()", file="AssertExtensionsTests.cs", label="var fakeLocator = A.Fake<IModelBinderLocator>()", span="64-64"];
m0_103 [cluster="lambda expression", file="AssertExtensionsTests.cs", label=fakeLocator, span=""];
m0_136 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="htmlNodes.ShouldContain(''contents'')", span="212-212"];
m0_145 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="htmlNodes.ShouldContain(''Test'')", span="225-225"];
m0_153 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="htmlNode.ShouldContainAttribute(''nope'')", span="238-238"];
m0_187 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="htmlNode.ShouldContainAttribute(''attribute1'')", span="290-290"];
m0_195 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="htmlNode.ShouldContainAttribute(''attribute2'')", span="303-303"];
m0_211 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="htmlNode.ShouldContainAttribute(''attribute1'')", span="329-329"];
m0_220 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="htmlNode.ShouldContainAttribute(''class'', ''myClass'')", span="342-342"];
m0_229 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="htmlNode.ShouldContainAttribute(''class'')", span="355-355"];
m0_237 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="htmlNode.ShouldContainAttribute(''class'', ''class'')", span="368-368"];
m0_102 [cluster="lambda expression", file="AssertExtensionsTests.cs", label=fakeLocator, span=""];
m0_110 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Entry lambda expression", span="173-173"];
m0_127 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Entry lambda expression", span="199-199"];
m0_135 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Entry lambda expression", span="212-212"];
m0_144 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Entry lambda expression", span="225-225"];
m0_152 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Entry lambda expression", span="238-238"];
m0_161 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Entry lambda expression", span="251-251"];
m0_186 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Entry lambda expression", span="290-290"];
m0_194 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Entry lambda expression", span="303-303"];
m0_202 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Entry lambda expression", span="316-316"];
m0_210 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Entry lambda expression", span="329-329"];
m0_219 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Entry lambda expression", span="342-342"];
m0_228 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Entry lambda expression", span="355-355"];
m0_112 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Exit lambda expression", span="173-173"];
m0_129 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Exit lambda expression", span="199-199"];
m0_163 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Exit lambda expression", span="251-251"];
m0_204 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Exit lambda expression", span="316-316"];
m0_104 [cluster="lambda expression", file="AssertExtensionsTests.cs", label=adapter, span=""];
m0_137 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Exit lambda expression", span="212-212"];
m0_146 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Exit lambda expression", span="225-225"];
m0_154 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Exit lambda expression", span="238-238"];
m0_188 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Exit lambda expression", span="290-290"];
m0_196 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Exit lambda expression", span="303-303"];
m0_212 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Exit lambda expression", span="329-329"];
m0_221 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Exit lambda expression", span="342-342"];
m0_230 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Exit lambda expression", span="355-355"];
m0_238 [cluster="lambda expression", file="AssertExtensionsTests.cs", label="Exit lambda expression", span="368-368"];
m0_130 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_MultipleElementsAllContainingText_ShouldntThrowAssert()", file="AssertExtensionsTests.cs", label="Entry Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_MultipleElementsAllContainingText_ShouldntThrowAssert()", span="206-206"];
m0_131 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_MultipleElementsAllContainingText_ShouldntThrowAssert()", file="AssertExtensionsTests.cs", label="var htmlNodes = this.query[''span'']", span="209-209"];
m0_132 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_MultipleElementsAllContainingText_ShouldntThrowAssert()", file="AssertExtensionsTests.cs", label="var result = Record.Exception(() => htmlNodes.ShouldContain(''contents''))", span="212-212"];
m0_133 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_MultipleElementsAllContainingText_ShouldntThrowAssert()", file="AssertExtensionsTests.cs", label="Assert.Null(result)", span="215-215"];
m0_134 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_MultipleElementsAllContainingText_ShouldntThrowAssert()", file="AssertExtensionsTests.cs", label="Exit Nancy.Testing.Tests.AssertExtensionsTests.ShouldContain_MultipleElementsAllContainingText_ShouldntThrowAssert()", span="206-206"];
m0_197 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_SingleElementContainingAttributeAndValue_ShouldNotThrowAssert()", file="AssertExtensionsTests.cs", label="Entry Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_SingleElementContainingAttributeAndValue_ShouldNotThrowAssert()", span="310-310"];
m0_198 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_SingleElementContainingAttributeAndValue_ShouldNotThrowAssert()", file="AssertExtensionsTests.cs", label="var htmlNode = this.query[''#testId''].First()", span="313-313"];
m0_199 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_SingleElementContainingAttributeAndValue_ShouldNotThrowAssert()", file="AssertExtensionsTests.cs", label="var result = Record.Exception(() => htmlNode.ShouldContainAttribute(''attribute2'', ''value2''))", span="316-316"];
m0_200 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_SingleElementContainingAttributeAndValue_ShouldNotThrowAssert()", file="AssertExtensionsTests.cs", label="Assert.Null(result)", span="319-319"];
m0_201 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_SingleElementContainingAttributeAndValue_ShouldNotThrowAssert()", file="AssertExtensionsTests.cs", label="Exit Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_SingleElementContainingAttributeAndValue_ShouldNotThrowAssert()", span="310-310"];
m0_205 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_MultipleElementsOneNotContainingAttribute_ShouldThrowAssert()", file="AssertExtensionsTests.cs", label="Entry Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_MultipleElementsOneNotContainingAttribute_ShouldThrowAssert()", span="323-323"];
m0_206 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_MultipleElementsOneNotContainingAttribute_ShouldThrowAssert()", file="AssertExtensionsTests.cs", label="var htmlNode = this.query[''div'']", span="326-326"];
m0_207 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_MultipleElementsOneNotContainingAttribute_ShouldThrowAssert()", file="AssertExtensionsTests.cs", label="var result = Record.Exception(() => htmlNode.ShouldContainAttribute(''attribute1''))", span="329-329"];
m0_208 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_MultipleElementsOneNotContainingAttribute_ShouldThrowAssert()", file="AssertExtensionsTests.cs", label="Assert.IsAssignableFrom<AssertException>(result)", span="332-332"];
m0_209 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_MultipleElementsOneNotContainingAttribute_ShouldThrowAssert()", file="AssertExtensionsTests.cs", label="Exit Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_MultipleElementsOneNotContainingAttribute_ShouldThrowAssert()", span="323-323"];
m0_155 [cluster="Nancy.Testing.NodeWrapper.ShouldContainAttribute(string)", file="AssertExtensionsTests.cs", label="Entry Nancy.Testing.NodeWrapper.ShouldContainAttribute(string)", span="109-109"];
m0_165 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_SingleElementContainingAttributeWithoutValueButShouldContainValue_ShouldThrowAssert()", file="AssertExtensionsTests.cs", label="Entry Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_SingleElementContainingAttributeWithoutValueButShouldContainValue_ShouldThrowAssert()", span="258-258"];
m0_166 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_SingleElementContainingAttributeWithoutValueButShouldContainValue_ShouldThrowAssert()", color=green, community=0, file="AssertExtensionsTests.cs", label="0: var htmlNode = this.query[''#testId''].First()", span="261-261"];
m0_167 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_SingleElementContainingAttributeWithoutValueButShouldContainValue_ShouldThrowAssert()", color=green, community=0, file="AssertExtensionsTests.cs", label="0: var result = Record.Exception(() => htmlNode.ShouldContainAttribute(''attribute1'', ''nope''))", span="264-264"];
m0_168 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_SingleElementContainingAttributeWithoutValueButShouldContainValue_ShouldThrowAssert()", color=green, community=0, file="AssertExtensionsTests.cs", label="0: Assert.IsAssignableFrom<AssertException>(result)", span="267-267"];
m0_169 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_SingleElementContainingAttributeWithoutValueButShouldContainValue_ShouldThrowAssert()", file="AssertExtensionsTests.cs", label="Exit Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_SingleElementContainingAttributeWithoutValueButShouldContainValue_ShouldThrowAssert()", span="258-258"];
m0_4 [cluster="Unk.Create", file="AssertExtensionsTests.cs", label="Entry Unk.Create", span=""];
m0_18 [cluster="DynamicModelBinderAdapter.cstr", file="AssertExtensionsTests.cs", label="Entry DynamicModelBinderAdapter.cstr", span=""];
m0_173 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_SingleElementContainingAttributeWithDifferentValue_ShouldThrowAssert()", file="AssertExtensionsTests.cs", label="Entry Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_SingleElementContainingAttributeWithDifferentValue_ShouldThrowAssert()", span="271-271"];
m0_174 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_SingleElementContainingAttributeWithDifferentValue_ShouldThrowAssert()", color=green, community=0, file="AssertExtensionsTests.cs", label="0: var htmlNode = this.query[''#testId''].First()", span="274-274"];
m0_175 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_SingleElementContainingAttributeWithDifferentValue_ShouldThrowAssert()", color=green, community=0, file="AssertExtensionsTests.cs", label="0: var result = Record.Exception(() => htmlNode.ShouldContainAttribute(''attribute2'', ''nope''))", span="277-277"];
m0_176 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_SingleElementContainingAttributeWithDifferentValue_ShouldThrowAssert()", color=green, community=0, file="AssertExtensionsTests.cs", label="0: Assert.IsAssignableFrom<AssertException>(result)", span="280-280"];
m0_177 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_SingleElementContainingAttributeWithDifferentValue_ShouldThrowAssert()", file="AssertExtensionsTests.cs", label="Exit Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_SingleElementContainingAttributeWithDifferentValue_ShouldThrowAssert()", span="271-271"];
m0_65 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldExistOnce_ExistsMoreThanOnce_ShouldThrowAssert()", file="AssertExtensionsTests.cs", label="Assert.IsAssignableFrom<AssertException>(result)", span="111-111"];
m0_66 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldExistOnce_ExistsMoreThanOnce_ShouldThrowAssert()", file="AssertExtensionsTests.cs", label="Exit Nancy.Testing.Tests.AssertExtensionsTests.ShouldExistOnce_ExistsMoreThanOnce_ShouldThrowAssert()", span="105-105"];
m0_70 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_SingleElementNotThatClass_ShouldThrowAssert()", file="AssertExtensionsTests.cs", label="Entry Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_SingleElementNotThatClass_ShouldThrowAssert()", span="115-115"];
m0_74 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_SingleElementNotThatClass_ShouldThrowAssert()", file="AssertExtensionsTests.cs", label="Exit Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_SingleElementNotThatClass_ShouldThrowAssert()", span="115-115"];
m0_71 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_SingleElementNotThatClass_ShouldThrowAssert()", color=green, community=0, file="AssertExtensionsTests.cs", label="0: var htmlNode = this.query[''#testId''].First()", span="118-118"];
m0_72 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_SingleElementNotThatClass_ShouldThrowAssert()", color=green, community=0, file="AssertExtensionsTests.cs", label="0: var result = Record.Exception(() => htmlNode.ShouldBeOfClass(''nope''))", span="121-121"];
m0_73 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldBeClass_SingleElementNotThatClass_ShouldThrowAssert()", color=green, community=0, file="AssertExtensionsTests.cs", label="0: Assert.IsAssignableFrom<AssertException>(result)", span="124-124"];
m0_189 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_SingleElementContainingAttributeAndValueButIngoringValue_ShouldNotThrowAssert()", file="AssertExtensionsTests.cs", label="Entry Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_SingleElementContainingAttributeAndValueButIngoringValue_ShouldNotThrowAssert()", span="297-297"];
m0_190 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_SingleElementContainingAttributeAndValueButIngoringValue_ShouldNotThrowAssert()", file="AssertExtensionsTests.cs", label="var htmlNode = this.query[''#testId''].First()", span="300-300"];
m0_191 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_SingleElementContainingAttributeAndValueButIngoringValue_ShouldNotThrowAssert()", file="AssertExtensionsTests.cs", label="var result = Record.Exception(() => htmlNode.ShouldContainAttribute(''attribute2''))", span="303-303"];
m0_192 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_SingleElementContainingAttributeAndValueButIngoringValue_ShouldNotThrowAssert()", file="AssertExtensionsTests.cs", label="Assert.Null(result)", span="306-306"];
m0_193 [cluster="Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_SingleElementContainingAttributeAndValueButIngoringValue_ShouldNotThrowAssert()", file="AssertExtensionsTests.cs", label="Exit Nancy.Testing.Tests.AssertExtensionsTests.ShouldContainAttribute_SingleElementContainingAttributeAndValueButIngoringValue_ShouldNotThrowAssert()", span="297-297"];
m0_138 [cluster="Nancy.Testing.QueryWrapper.ShouldContain(string, System.StringComparison)", file="AssertExtensionsTests.cs", label="Entry Nancy.Testing.QueryWrapper.ShouldContain(string, System.StringComparison)", span="96-96"];
m0_76 [cluster="object.ShouldNotBeNull()", file="AssertExtensionsTests.cs", label="Entry object.ShouldNotBeNull()", span="140-140"];
m0_239 [file="AssertExtensionsTests.cs", label="Nancy.Testing.Tests.AssertExtensionsTests", span=""];
m0_240 [file="AssertExtensionsTests.cs", label=htmlNode, span=""];
m0_245 [file="AssertExtensionsTests.cs", label=htmlNode, span=""];
m0_251 [file="AssertExtensionsTests.cs", label=htmlNode, span=""];
m0_252 [file="AssertExtensionsTests.cs", label=htmlNode, span=""];
m0_241 [file="AssertExtensionsTests.cs", label=htmlNode, span=""];
m0_244 [file="AssertExtensionsTests.cs", label=htmlNode, span=""];
m0_246 [file="AssertExtensionsTests.cs", label=htmlNode, span=""];
m0_250 [file="AssertExtensionsTests.cs", label=htmlNode, span=""];
m0_255 [file="AssertExtensionsTests.cs", label=htmlNode, span=""];
m0_242 [file="AssertExtensionsTests.cs", label=htmlNodes, span=""];
m0_243 [file="AssertExtensionsTests.cs", label=htmlNodes, span=""];
m0_247 [file="AssertExtensionsTests.cs", label=htmlNodes, span=""];
m0_248 [file="AssertExtensionsTests.cs", label=htmlNodes, span=""];
m0_249 [file="AssertExtensionsTests.cs", label=htmlNode, span=""];
m0_253 [file="AssertExtensionsTests.cs", label=htmlNode, span=""];
m0_254 [file="AssertExtensionsTests.cs", label=htmlNode, span=""];
m0_256 [file="AssertExtensionsTests.cs", label=htmlNode, span=""];
m0_257 [file="AssertExtensionsTests.cs", label=htmlNode, span=""];
m0_258 [file="AssertExtensionsTests.cs", label=htmlNode, span=""];
m0_259 [file="AssertExtensionsTests.cs", label=htmlNode, span=""];
m1_8 [cluster="System.ArgumentNullException.ArgumentNullException(string, string)", file="BrowserResponse.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string, string)", span="0-0"];
m1_0 [cluster="Nancy.Testing.BrowserResponse.BrowserResponse(Nancy.NancyContext, Nancy.Testing.Browser)", file="BrowserResponse.cs", label="Entry Nancy.Testing.BrowserResponse.BrowserResponse(Nancy.NancyContext, Nancy.Testing.Browser)", span="22-22"];
m1_1 [cluster="Nancy.Testing.BrowserResponse.BrowserResponse(Nancy.NancyContext, Nancy.Testing.Browser)", file="BrowserResponse.cs", label="context == null", span="24-24"];
m1_3 [cluster="Nancy.Testing.BrowserResponse.BrowserResponse(Nancy.NancyContext, Nancy.Testing.Browser)", file="BrowserResponse.cs", label="hostBrowser == null", span="29-29"];
m1_5 [cluster="Nancy.Testing.BrowserResponse.BrowserResponse(Nancy.NancyContext, Nancy.Testing.Browser)", file="BrowserResponse.cs", label="this.hostBrowser = hostBrowser", span="34-34"];
m1_6 [cluster="Nancy.Testing.BrowserResponse.BrowserResponse(Nancy.NancyContext, Nancy.Testing.Browser)", file="BrowserResponse.cs", label="this.Context = context", span="36-36"];
m1_2 [cluster="Nancy.Testing.BrowserResponse.BrowserResponse(Nancy.NancyContext, Nancy.Testing.Browser)", file="BrowserResponse.cs", label="throw new ArgumentNullException(''context'', ''The value of the context parameter cannot be null.'');", span="26-26"];
m1_4 [cluster="Nancy.Testing.BrowserResponse.BrowserResponse(Nancy.NancyContext, Nancy.Testing.Browser)", file="BrowserResponse.cs", label="throw new ArgumentNullException(''hostBrowser'', ''The value of the hostBrowser parameter cannot be null.'');", span="31-31"];
m1_7 [cluster="Nancy.Testing.BrowserResponse.BrowserResponse(Nancy.NancyContext, Nancy.Testing.Browser)", file="BrowserResponse.cs", label="Exit Nancy.Testing.BrowserResponse.BrowserResponse(Nancy.NancyContext, Nancy.Testing.Browser)", span="22-22"];
m1_9 [file="BrowserResponse.cs", label="Nancy.Testing.BrowserResponse", span=""];
m2_0 [cluster="Nancy.DefaultModuleActivator.CreateInstance(System.Type)", file="BrowserResponseBodyWrapperFixture.cs", label="Entry Nancy.DefaultModuleActivator.CreateInstance(System.Type)", span="11-11"];
m2_1 [cluster="Nancy.DefaultModuleActivator.CreateInstance(System.Type)", file="BrowserResponseBodyWrapperFixture.cs", label="!CanCreateInstance(moduleType)", span="13-13"];
m2_2 [cluster="Nancy.DefaultModuleActivator.CreateInstance(System.Type)", file="BrowserResponseBodyWrapperFixture.cs", label="throw new InvalidOperationException(string.Format(''Cannot create an instance of type {0} as it does not inherit from NancyModule or it does not have a public parameterless constructor.'', moduleType));", span="15-15"];
m2_3 [cluster="Nancy.DefaultModuleActivator.CreateInstance(System.Type)", file="BrowserResponseBodyWrapperFixture.cs", label="return (NancyModule) Activator.CreateInstance(moduleType);", span="18-18"];
m2_4 [cluster="Nancy.DefaultModuleActivator.CreateInstance(System.Type)", file="BrowserResponseBodyWrapperFixture.cs", label="Exit Nancy.DefaultModuleActivator.CreateInstance(System.Type)", span="11-11"];
m2_7 [cluster="string.Format(string, object)", file="BrowserResponseBodyWrapperFixture.cs", label="Entry string.Format(string, object)", span="0-0"];
m2_11 [cluster="System.Type.GetConstructor(System.Type[])", file="BrowserResponseBodyWrapperFixture.cs", label="Entry System.Type.GetConstructor(System.Type[])", span="0-0"];
m2_8 [cluster="System.Activator.CreateInstance(System.Type)", file="BrowserResponseBodyWrapperFixture.cs", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m2_5 [cluster="Nancy.DefaultModuleActivator.CanCreateInstance(System.Type)", file="BrowserResponseBodyWrapperFixture.cs", label="Entry Nancy.DefaultModuleActivator.CanCreateInstance(System.Type)", span="26-26"];
m2_9 [cluster="Nancy.DefaultModuleActivator.CanCreateInstance(System.Type)", file="BrowserResponseBodyWrapperFixture.cs", label="return moduleType.GetConstructor(Type.EmptyTypes) != null;", span="28-28"];
m2_10 [cluster="Nancy.DefaultModuleActivator.CanCreateInstance(System.Type)", file="BrowserResponseBodyWrapperFixture.cs", label="Exit Nancy.DefaultModuleActivator.CanCreateInstance(System.Type)", span="26-26"];
m2_6 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="BrowserResponseBodyWrapperFixture.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m2_12 [file="BrowserResponseBodyWrapperFixture.cs", label="Nancy.DefaultModuleActivator", span=""];
m3_305 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_status_code_to_response_when_set_as_integer()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_status_code_to_response_when_set_as_integer()", span="450-450"];
m3_306 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_status_code_to_response_when_set_as_integer()", file="ContentNegotiationFixture.cs", label="var browser = new Browser(with =>\r\n            {\r\n                with.ResponseProcessor<TestProcessor>();\r\n\r\n                with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithStatusCode(507);\r\n                    }));\r\n                }));\r\n            })", span="453-464"];
m3_307 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_status_code_to_response_when_set_as_integer()", file="ContentNegotiationFixture.cs", label="var response = browser.Get(''/'', with =>\r\n            {\r\n                with.Accept(''test/test'', 0.9m);\r\n            })", span="467-470"];
m3_308 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_status_code_to_response_when_set_as_integer()", file="ContentNegotiationFixture.cs", label="Assert.Equal(HttpStatusCode.InsufficientStorage, response.StatusCode)", span="473-473"];
m3_309 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_status_code_to_response_when_set_as_integer()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_status_code_to_response_when_set_as_integer()", span="450-450"];
m3_168 [cluster="string.Contains(string)", file="ContentNegotiationFixture.cs", label="Entry string.Contains(string)", span="0-0"];
m3_351 [cluster="Unk.Same", file="ContentNegotiationFixture.cs", label="Entry Unk.Same", span=""];
m3_8 [cluster="Nancy.Testing.Browser.Get(string, System.Action<Nancy.Testing.BrowserContext>)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Testing.Browser.Get(string, System.Action<Nancy.Testing.BrowserContext>)", span="59-59"];
m3_399 [cluster="string.StartsWith(string)", file="ContentNegotiationFixture.cs", label="Entry string.StartsWith(string)", span="0-0"];
m3_120 [cluster="Unk.WithStatusDescription", file="ContentNegotiationFixture.cs", label="Entry Unk.WithStatusDescription", span=""];
m3_9 [cluster="Unk.Equal", file="ContentNegotiationFixture.cs", label="Entry Unk.Equal", span=""];
m3_95 [cluster="Nancy.Responses.Negotiation.NegotiationContext.NegotiationContext()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Responses.Negotiation.NegotiationContext.NegotiationContext()", span="15-15"];
m3_284 [cluster="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.ResponseProcessors(params System.Type[])", file="ContentNegotiationFixture.cs", label="Entry Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.ResponseProcessors(params System.Type[])", span="1225-1225"];
m3_97 [cluster="Nancy.Responses.Negotiation.Negotiator.WithHeader(string, string)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Responses.Negotiation.Negotiator.WithHeader(string, string)", span="45-45"];
m3_226 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.CreateNegotiatedResponse(System.Action<Nancy.Responses.Negotiation.Negotiator>)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.CreateNegotiatedResponse(System.Action<Nancy.Responses.Negotiation.Negotiator>)", span="621-621"];
m3_441 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.CreateNegotiatedResponse(System.Action<Nancy.Responses.Negotiation.Negotiator>)", file="ContentNegotiationFixture.cs", label="return (parameters, module) =>\r\n                {\r\n                    var negotiator = new Negotiator(module.Context);\r\n\r\n                    if (action != null)\r\n                    {\r\n                        action.Invoke(negotiator);\r\n                    }\r\n\r\n                    return negotiator;\r\n                };", span="623-633"];
m3_442 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.CreateNegotiatedResponse(System.Action<Nancy.Responses.Negotiation.Negotiator>)", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.CreateNegotiatedResponse(System.Action<Nancy.Responses.Negotiation.Negotiator>)", span="621-621"];
m3_162 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_boost_html_priority_if_set_to_the_same_priority_as_others()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_boost_html_priority_if_set_to_the_same_priority_as_others()", span="246-246"];
m3_163 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_boost_html_priority_if_set_to_the_same_priority_as_others()", file="ContentNegotiationFixture.cs", label="var browser = new Browser(with =>\r\n            {\r\n                with.ResponseProcessor<TestProcessor>();\r\n\r\n                with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', (parameters, module) =>\r\n                    {\r\n                        var context =\r\n                            new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n                        var negotiator =\r\n                            new Negotiator(context);\r\n\r\n                        negotiator.WithAllowedMediaRange(''application/xml'');\r\n                        negotiator.WithAllowedMediaRange(''text/html'');\r\n\r\n                        return negotiator;\r\n                    });\r\n                }));\r\n            })", span="249-269"];
m3_164 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_boost_html_priority_if_set_to_the_same_priority_as_others()", file="ContentNegotiationFixture.cs", label="var response = browser.Get(''/'', with =>\r\n            {\r\n                with.Header(''User-Agent'', ''Mozilla/5.0 (Windows; U; Windows NT 5.1; ru-RU) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4'');\r\n                with.Accept(''application/xml'', 0.9m);\r\n                with.Accept(''text/html'', 0.9m);\r\n            })", span="272-277"];
m3_165 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_boost_html_priority_if_set_to_the_same_priority_as_others()", file="ContentNegotiationFixture.cs", label="Assert.Equal(HttpStatusCode.OK, response.StatusCode)", span="280-280"];
m3_166 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_boost_html_priority_if_set_to_the_same_priority_as_others()", file="ContentNegotiationFixture.cs", label="Assert.True(response.Body.AsString().Contains(''text/html''), ''Media type mismatch'')", span="281-281"];
m3_167 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_boost_html_priority_if_set_to_the_same_priority_as_others()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_boost_html_priority_if_set_to_the_same_priority_as_others()", span="246-246"];
m3_191 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_override_with_extension()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_override_with_extension()", span="285-285"];
m3_192 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_override_with_extension()", file="ContentNegotiationFixture.cs", label="var browser = new Browser(with =>\r\n            {\r\n                with.ResponseProcessor<TestProcessor>();\r\n\r\n                with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/test'', (parameters, module) =>\r\n                    {\r\n                        var context =\r\n                            new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n                        var negotiator =\r\n                            new Negotiator(context);\r\n\r\n                        return negotiator;\r\n                    });\r\n                }));\r\n            })", span="288-305"];
m3_193 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_override_with_extension()", file="ContentNegotiationFixture.cs", label="var response = browser.Get(''/test.foo'', with =>\r\n            {\r\n                with.Header(''User-Agent'', ''Mozilla/5.0 (Windows; U; Windows NT 5.1; ru-RU) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4'');\r\n                with.Accept(''application/xml'', 0.9m);\r\n                with.Accept(''text/html'', 0.9m);\r\n            })", span="308-313"];
m3_194 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_override_with_extension()", file="ContentNegotiationFixture.cs", label="Assert.Equal(HttpStatusCode.OK, response.StatusCode)", span="316-316"];
m3_195 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_override_with_extension()", file="ContentNegotiationFixture.cs", label="Assert.True(response.Body.AsString().Contains(''foo/bar''), ''Media type mismatch'')", span="317-317"];
m3_196 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_override_with_extension()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_override_with_extension()", span="285-285"];
m3_291 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_link_header_for_matching_response_processors()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_link_header_for_matching_response_processors()", span="427-427"];
m3_292 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_link_header_for_matching_response_processors()", file="ContentNegotiationFixture.cs", label="var browser = new Browser(with =>\r\n            {\r\n                with.ResponseProcessors(typeof(XmlProcessor), typeof(JsonProcessor), typeof(TestProcessor));\r\n\r\n                with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse());\r\n                }));\r\n            })", span="430-438"];
m3_293 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_link_header_for_matching_response_processors()", file="ContentNegotiationFixture.cs", label="var response = browser.Get(''/'')", span="441-441"];
m3_294 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_link_header_for_matching_response_processors()", file="ContentNegotiationFixture.cs", label="Assert.True(response.Headers[''Link''].Contains(@''</.foo>; rel=''''foo/bar''''''))", span="444-444"];
m3_295 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_link_header_for_matching_response_processors()", file="ContentNegotiationFixture.cs", label="Assert.True(response.Headers[''Link''].Contains(@''</.json>; rel=''''application/json''''''))", span="445-445"];
m3_296 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_link_header_for_matching_response_processors()", file="ContentNegotiationFixture.cs", label="Assert.True(response.Headers[''Link''].Contains(@''</.xml>; rel=''''application/xml''''''))", span="446-446"];
m3_297 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_link_header_for_matching_response_processors()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_link_header_for_matching_response_processors()", span="427-427"];
m3_233 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_that_contains_default_model_when_no_media_range_specific_model_was_declared()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_that_contains_default_model_when_no_media_range_specific_model_was_declared()", span="348-348"];
m3_234 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_that_contains_default_model_when_no_media_range_specific_model_was_declared()", file="ContentNegotiationFixture.cs", label="var browser = new Browser(with =>\r\n            {\r\n                with.ResponseProcessor<ModelProcessor>();\r\n\r\n                with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithModel(''the model'');\r\n                        config.WithAllowedMediaRange(''test/test'');\r\n                    }));\r\n                }));\r\n            })", span="351-363"];
m3_235 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_that_contains_default_model_when_no_media_range_specific_model_was_declared()", file="ContentNegotiationFixture.cs", label="var response = browser.Get(''/'', with =>\r\n            {\r\n                with.Accept(''test/test'', 0.9m);\r\n            })", span="366-369"];
m3_236 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_that_contains_default_model_when_no_media_range_specific_model_was_declared()", file="ContentNegotiationFixture.cs", label="Assert.Equal(''the model'', response.Body.AsString())", span="372-372"];
m3_237 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_that_contains_default_model_when_no_media_range_specific_model_was_declared()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_that_contains_default_model_when_no_media_range_specific_model_was_declared()", span="348-348"];
m3_393 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_use_next_processor_if_processor_returns_null()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_use_next_processor_if_processor_returns_null()", span="558-558"];
m3_394 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_use_next_processor_if_processor_returns_null()", file="ContentNegotiationFixture.cs", label="var browser = new Browser(with =>\r\n                {\r\n                with.ResponseProcessors(typeof(NullProcessor), typeof(TestProcessor));\r\n\r\n                with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/test'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithAllowedMediaRange(''application/xml'');\r\n                    }));\r\n                }));\r\n            })", span="561-572"];
m3_395 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_use_next_processor_if_processor_returns_null()", file="ContentNegotiationFixture.cs", label="var response = browser.Get(''/test'', with =>\r\n            {\r\n                with.Accept(''application/xml'', 0.9m);\r\n            })", span="575-578"];
m3_396 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_use_next_processor_if_processor_returns_null()", file="ContentNegotiationFixture.cs", label="var bodyResult = response.Body.AsString()", span="581-581"];
m3_397 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_use_next_processor_if_processor_returns_null()", file="ContentNegotiationFixture.cs", label="Assert.True(bodyResult.StartsWith(''application/xml''), string.Format(''Body should have started with 'application/xml' but was actually '{0}''', bodyResult))", span="582-582"];
m3_398 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_use_next_processor_if_processor_returns_null()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_use_next_processor_if_processor_returns_null()", span="558-558"];
m3_400 [cluster="string.Format(string, object)", file="ContentNegotiationFixture.cs", label="Entry string.Format(string, object)", span="0-0"];
m3_386 [cluster="Nancy.Responses.Negotiation.Negotiator.WithView(string)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Responses.Negotiation.Negotiator.WithView(string)", span="148-148"];
m3_20 [cluster="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.Module(Nancy.INancyModule)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.Module(Nancy.INancyModule)", span="817-817"];
m3_437 [cluster="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.Module<T>()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.Module<T>()", span="807-807"];
m3_339 [cluster="Nancy.Responses.Negotiation.Negotiator.WithStatusCode(Nancy.HttpStatusCode)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Responses.Negotiation.Negotiator.WithStatusCode(Nancy.HttpStatusCode)", span="202-202"];
m3_429 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_not_try_and_serve_view_with_invalid_name()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_not_try_and_serve_view_with_invalid_name()", span="612-612"];
m3_430 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_not_try_and_serve_view_with_invalid_name()", file="ContentNegotiationFixture.cs", label="var browser = new Browser(with => with.Module<NegotiationModule>())", span="614-614"];
m3_431 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_not_try_and_serve_view_with_invalid_name()", file="ContentNegotiationFixture.cs", label="var result = Record.Exception(() => browser.Get(''/invalid-view-name''))", span="616-616"];
m3_432 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_not_try_and_serve_view_with_invalid_name()", file="ContentNegotiationFixture.cs", label="Assert.True(result.ToString().Contains(''Unable to locate view''))", span="618-618"];
m3_433 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_not_try_and_serve_view_with_invalid_name()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_not_try_and_serve_view_with_invalid_name()", span="612-612"];
m3_6 [cluster="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModule(System.Action<Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator>)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModule(System.Action<Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator>)", span="20-20"];
m3_190 [cluster="Nancy.Testing.BrowserContext.Accept(Nancy.Responses.Negotiation.MediaRange, decimal)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Testing.BrowserContext.Accept(Nancy.Responses.Negotiation.MediaRange, decimal)", span="177-177"];
m3_27 [cluster="Nancy.Testing.BrowserResponseBodyWrapper.AsString()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Testing.BrowserResponseBodyWrapper.AsString()", span="30-30"];
m3_145 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_apply_default_accept_when_no_accept_header_sent()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_apply_default_accept_when_no_accept_header_sent()", span="216-216"];
m3_146 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_apply_default_accept_when_no_accept_header_sent()", file="ContentNegotiationFixture.cs", label="var browser = new Browser(with =>\r\n            {\r\n                with.ResponseProcessor<TestProcessor>();\r\n\r\n                with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', (parameters, module) =>\r\n                    {\r\n                        var context =\r\n                            new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n                        var negotiator =\r\n                            new Negotiator(context);\r\n\r\n                        return negotiator;\r\n                    });\r\n                }));\r\n            })", span="219-236"];
m3_147 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_apply_default_accept_when_no_accept_header_sent()", file="ContentNegotiationFixture.cs", label="var response = browser.Get(''/'')", span="239-239"];
m3_148 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_apply_default_accept_when_no_accept_header_sent()", file="ContentNegotiationFixture.cs", label="Assert.Equal(HttpStatusCode.OK, response.StatusCode)", span="242-242"];
m3_149 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_apply_default_accept_when_no_accept_header_sent()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_apply_default_accept_when_no_accept_header_sent()", span="216-216"];
m3_366 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_throw_exception_if_view_location_fails()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_throw_exception_if_view_location_fails()", span="534-534"];
m3_367 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_throw_exception_if_view_location_fails()", file="ContentNegotiationFixture.cs", label="var browser = new Browser(with =>\r\n            {\r\n                with.ResponseProcessor<ViewProcessor>();\r\n\r\n                with.Module(new ConfigurableNancyModule(x => x.Get(''/FakeModuleInvalidViewName'', CreateNegotiatedResponse(neg => neg.WithView(''blahblahblah'')))));\r\n            })", span="536-541"];
m3_368 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_throw_exception_if_view_location_fails()", file="ContentNegotiationFixture.cs", label="var result = Record.Exception(() =>\r\n                {\r\n                    var response = browser.Get(\r\n                        ''/FakeModuleInvalidViewName'',\r\n                        with =>\r\n                            { with.Accept(''text/html'', 1.0m); });\r\n                })", span="544-550"];
m3_369 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_throw_exception_if_view_location_fails()", file="ContentNegotiationFixture.cs", label="Assert.NotNull(result)", span="553-553"];
m3_370 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_throw_exception_if_view_location_fails()", file="ContentNegotiationFixture.cs", label="Assert.Contains(''Unable to locate view'', result.ToString())", span="554-554"];
m3_371 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_throw_exception_if_view_location_fails()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_throw_exception_if_view_location_fails()", span="534-534"];
m3_320 [cluster="Nancy.Responses.Negotiation.Negotiator.WithStatusCode(int)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Responses.Negotiation.Negotiator.WithStatusCode(int)", span="190-190"];
m3_0 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_int_value_from_get_route_as_response_with_status_code_set_to_value()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_int_value_from_get_route_as_response_with_status_code_set_to_value()", span="18-18"];
m3_2 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_int_value_from_get_route_as_response_with_status_code_set_to_value()", file="ContentNegotiationFixture.cs", label="var browser = new Browser(with =>\r\n            {\r\n                with.Module(module);\r\n            })", span="26-29"];
m3_3 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_int_value_from_get_route_as_response_with_status_code_set_to_value()", file="ContentNegotiationFixture.cs", label="var response = browser.Get(''/int'')", span="32-32"];
m3_4 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_int_value_from_get_route_as_response_with_status_code_set_to_value()", file="ContentNegotiationFixture.cs", label="Assert.Equal((HttpStatusCode)200, response.StatusCode)", span="35-35"];
m3_1 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_int_value_from_get_route_as_response_with_status_code_set_to_value()", file="ContentNegotiationFixture.cs", label="var module = new ConfigurableNancyModule(with =>\r\n            {\r\n                with.Get(''/int'', (x,m) => 200);\r\n            })", span="21-24"];
m3_5 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_int_value_from_get_route_as_response_with_status_code_set_to_value()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_int_value_from_get_route_as_response_with_status_code_set_to_value()", span="18-18"];
m3_449 [cluster="System.Action<T>.Invoke(T)", file="ContentNegotiationFixture.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m3_324 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_status_code_to_response_when_set_as_httpstatuscode()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_status_code_to_response_when_set_as_httpstatuscode()", span="477-477"];
m3_325 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_status_code_to_response_when_set_as_httpstatuscode()", file="ContentNegotiationFixture.cs", label="var browser = new Browser(with =>\r\n            {\r\n                with.ResponseProcessor<TestProcessor>();\r\n\r\n                with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithStatusCode(HttpStatusCode.InsufficientStorage);\r\n                    }));\r\n                }));\r\n            })", span="480-491"];
m3_326 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_status_code_to_response_when_set_as_httpstatuscode()", file="ContentNegotiationFixture.cs", label="var response = browser.Get(''/'', with =>\r\n            {\r\n                with.Accept(''test/test'', 0.9m);\r\n            })", span="494-497"];
m3_327 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_status_code_to_response_when_set_as_httpstatuscode()", file="ContentNegotiationFixture.cs", label="Assert.Equal(HttpStatusCode.InsufficientStorage, response.StatusCode)", span="500-500"];
m3_328 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_status_code_to_response_when_set_as_httpstatuscode()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_status_code_to_response_when_set_as_httpstatuscode()", span="477-477"];
m3_374 [cluster="Unk.ToString", file="ContentNegotiationFixture.cs", label="Entry Unk.ToString", span=""];
m3_71 [cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", file="ContentNegotiationFixture.cs", label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0"];
m3_373 [cluster="Unk.NotNull", file="ContentNegotiationFixture.cs", label="Entry Unk.NotNull", span=""];
m3_7 [cluster="Nancy.Testing.Browser.Browser(System.Action<Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator>)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Testing.Browser.Browser(System.Action<Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator>)", span="26-26"];
m3_140 [cluster="Nancy.Responses.Negotiation.Negotiator.WithContentType(string)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Responses.Negotiation.Negotiator.WithContentType(string)", span="56-56"];
m3_52 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_action_value_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_action_value_as_response_with_content_set_as_value()", span="81-81"];
m3_54 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_action_value_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs", label="var browser = new Browser(with =>\r\n            {\r\n                with.Module(module);\r\n            })", span="101-104"];
m3_55 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_action_value_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs", label="var response = browser.Get(''/action'')", span="107-107"];
m3_56 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_action_value_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs", label="Assert.Equal(''Hiya Nancy!'', response.Body.AsString())", span="110-110"];
m3_53 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_action_value_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs", label="var module = new ConfigurableNancyModule(with =>\r\n            {\r\n                with.Get(''/action'', (x, m) =>\r\n                {\r\n                    Action<Stream> result = stream =>\r\n                    {\r\n                        var wrapper = new UnclosableStreamWrapper(stream);\r\n                        using (var writer = new StreamWriter(wrapper))\r\n                        {\r\n                            writer.Write(''Hiya Nancy!'');\r\n                        }\r\n                    };\r\n\r\n                    return result;\r\n                });\r\n            })", span="84-99"];
m3_57 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_action_value_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_action_value_as_response_with_content_set_as_value()", span="81-81"];
m3_183 [cluster="Nancy.Responses.Negotiation.Negotiator.WithAllowedMediaRange(Nancy.Responses.Negotiation.MediaRange)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Responses.Negotiation.Negotiator.WithAllowedMediaRange(Nancy.Responses.Negotiation.MediaRange)", span="113-113"];
m3_214 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_response_with_notacceptable_when_route_does_not_allow_any_of_the_accepted_formats()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_response_with_notacceptable_when_route_does_not_allow_any_of_the_accepted_formats()", span="321-321"];
m3_215 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_response_with_notacceptable_when_route_does_not_allow_any_of_the_accepted_formats()", file="ContentNegotiationFixture.cs", label="var browser = new Browser(with =>\r\n            {\r\n                with.ResponseProcessor<TestProcessor>();\r\n\r\n                with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/test'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithAllowedMediaRange(''application/xml'');\r\n                    }));\r\n                }));\r\n            })", span="324-335"];
m3_216 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_response_with_notacceptable_when_route_does_not_allow_any_of_the_accepted_formats()", file="ContentNegotiationFixture.cs", label="var response = browser.Get(''/test'', with =>\r\n            {\r\n                with.Accept(''foo/bar'', 0.9m);\r\n            })", span="338-341"];
m3_217 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_response_with_notacceptable_when_route_does_not_allow_any_of_the_accepted_formats()", file="ContentNegotiationFixture.cs", label="Assert.Equal(HttpStatusCode.NotAcceptable, response.StatusCode)", span="344-344"];
m3_218 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_response_with_notacceptable_when_route_does_not_allow_any_of_the_accepted_formats()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_response_with_notacceptable_when_route_does_not_allow_any_of_the_accepted_formats()", span="321-321"];
m3_37 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_httpstatuscode_value_from_get_route_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_httpstatuscode_value_from_get_route_as_response_with_content_set_as_value()", span="60-60"];
m3_39 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_httpstatuscode_value_from_get_route_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs", label="var browser = new Browser(with =>\r\n            {\r\n                with.Module(module);\r\n            })", span="68-71"];
m3_40 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_httpstatuscode_value_from_get_route_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs", label="var response = browser.Get(''/httpstatuscode'')", span="74-74"];
m3_41 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_httpstatuscode_value_from_get_route_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs", label="Assert.Equal(HttpStatusCode.Accepted, response.StatusCode)", span="77-77"];
m3_38 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_httpstatuscode_value_from_get_route_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs", label="var module = new ConfigurableNancyModule(with =>\r\n            {\r\n                with.Get(''/httpstatuscode'', (x, m) => HttpStatusCode.Accepted);\r\n            })", span="63-66"];
m3_42 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_httpstatuscode_value_from_get_route_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_httpstatuscode_value_from_get_route_as_response_with_content_set_as_value()", span="60-60"];
m3_109 [cluster="ConfigurableNancyModule.cstr", file="ContentNegotiationFixture.cs", label="Entry ConfigurableNancyModule.cstr", span=""];
m3_94 [cluster="Nancy.NancyContext.NancyContext()", file="ContentNegotiationFixture.cs", label="Entry Nancy.NancyContext.NancyContext()", span="25-25"];
m3_350 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="ContentNegotiationFixture.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m3_65 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="88-95"];
m3_111 [cluster="lambda expression", color=green, community=1, file="ContentNegotiationFixture.cs", label="0: with.Get(''/customStatus'', (x, m) =>\r\n                {\r\n                    var context =\r\n                        new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n                    var negotiator =\r\n                        new Negotiator(context);\r\n                    negotiator.WithStatusDescription(''The test is passing!'');\r\n\r\n                    return negotiator;\r\n                })", span="154-164"];
m3_123 [cluster="lambda expression", color=green, community=0, file="ContentNegotiationFixture.cs", label="0: with.Module(module)", span="171-171"];
m3_122 [cluster="lambda expression", color=green, community=0, file="ContentNegotiationFixture.cs", label="0: with.ResponseProcessor<TestProcessor>()", span="169-169"];
m3_110 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="152-165"];
m3_112 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="152-165"];
m3_114 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="154-164"];
m3_121 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="167-172"];
m3_124 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="167-172"];
m3_115 [cluster="lambda expression", color=green, community=1, file="ContentNegotiationFixture.cs", label="0: var context =\r\n                        new NancyContext { NegotiationContext = new NegotiationContext() }", span="156-157"];
m3_116 [cluster="lambda expression", color=green, community=1, file="ContentNegotiationFixture.cs", label="0: var negotiator =\r\n                        new Negotiator(context)", span="159-160"];
m3_117 [cluster="lambda expression", color=green, community=0, file="ContentNegotiationFixture.cs", label="0: negotiator.WithStatusDescription(''The test is passing!'')", span="161-161"];
m3_118 [cluster="lambda expression", color=green, community=0, file="ContentNegotiationFixture.cs", label="0: return negotiator;", span="163-163"];
m3_119 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="154-164"];
m3_18 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(module)", span="28-28"];
m3_35 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(module)", span="49-49"];
m3_50 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(module)", span="70-70"];
m3_74 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(module)", span="103-103"];
m3_100 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(module)", span="137-137"];
m3_143 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(module)", span="205-205"];
m3_152 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', (parameters, module) =>\r\n                    {\r\n                        var context =\r\n                            new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n                        var negotiator =\r\n                            new Negotiator(context);\r\n\r\n                        return negotiator;\r\n                    });\r\n                }))", span="223-235"];
m3_171 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', (parameters, module) =>\r\n                    {\r\n                        var context =\r\n                            new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n                        var negotiator =\r\n                            new Negotiator(context);\r\n\r\n                        negotiator.WithAllowedMediaRange(''application/xml'');\r\n                        negotiator.WithAllowedMediaRange(''text/html'');\r\n\r\n                        return negotiator;\r\n                    });\r\n                }))", span="253-268"];
m3_199 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/test'', (parameters, module) =>\r\n                    {\r\n                        var context =\r\n                            new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n                        var negotiator =\r\n                            new Negotiator(context);\r\n\r\n                        return negotiator;\r\n                    });\r\n                }))", span="292-304"];
m3_221 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/test'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithAllowedMediaRange(''application/xml'');\r\n                    }));\r\n                }))", span="328-334"];
m3_240 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithModel(''the model'');\r\n                        config.WithAllowedMediaRange(''test/test'');\r\n                    }));\r\n                }))", span="355-362"];
m3_260 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithModel(''the model'');\r\n                        config.WithAllowedMediaRange(''test/test'');\r\n                        config.WithMediaRangeModel(''test/test'', ''media model'');\r\n                    }));\r\n                }))", span="383-391"];
m3_282 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse());\r\n                }))", span="412-415"];
m3_300 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse());\r\n                }))", span="434-437"];
m3_312 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithStatusCode(507);\r\n                    }));\r\n                }))", span="457-463"];
m3_331 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithStatusCode(HttpStatusCode.InsufficientStorage);\r\n                    }));\r\n                }))", span="484-490"];
m3_354 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithCookie(negotiatedCookie);\r\n                    }));\r\n                }))", span="514-520"];
m3_378 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(new ConfigurableNancyModule(x => x.Get(''/FakeModuleInvalidViewName'', CreateNegotiatedResponse(neg => neg.WithView(''blahblahblah'')))))", span="540-540"];
m3_403 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/test'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithAllowedMediaRange(''application/xml'');\r\n                    }));\r\n                }))", span="565-571"];
m3_421 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse());\r\n                }))", span="595-598"];
m3_388 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="var response = browser.Get(\r\n                        ''/FakeModuleInvalidViewName'',\r\n                        with =>\r\n                            { with.Accept(''text/html'', 1.0m); })", span="546-549"];
m3_439 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="browser.Get(''/invalid-view-name'')", span="616-616"];
m3_99 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.ResponseProcessor<TestProcessor>()", span="135-135"];
m3_142 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.ResponseProcessor<TestProcessor>()", span="203-203"];
m3_151 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.ResponseProcessor<TestProcessor>()", span="221-221"];
m3_170 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.ResponseProcessor<TestProcessor>()", span="251-251"];
m3_198 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.ResponseProcessor<TestProcessor>()", span="290-290"];
m3_220 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.ResponseProcessor<TestProcessor>()", span="326-326"];
m3_239 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.ResponseProcessor<ModelProcessor>()", span="353-353"];
m3_259 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.ResponseProcessor<ModelProcessor>()", span="381-381"];
m3_311 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.ResponseProcessor<TestProcessor>()", span="455-455"];
m3_330 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.ResponseProcessor<TestProcessor>()", span="482-482"];
m3_353 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.ResponseProcessor<TestProcessor>()", span="512-512"];
m3_377 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.ResponseProcessor<ViewProcessor>()", span="538-538"];
m3_89 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="var context =\r\n                        new NancyContext { NegotiationContext = new NegotiationContext() }", span="122-123"];
m3_135 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="var context =\r\n                  new NancyContext { NegotiationContext = new NegotiationContext() }", span="190-191"];
m3_158 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="var context =\r\n                            new NancyContext { NegotiationContext = new NegotiationContext() }", span="227-228"];
m3_177 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="var context =\r\n                            new NancyContext { NegotiationContext = new NegotiationContext() }", span="257-258"];
m3_205 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="var context =\r\n                            new NancyContext { NegotiationContext = new NegotiationContext() }", span="296-297"];
m3_90 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="var negotiator =\r\n                        new Negotiator(context)", span="125-126"];
m3_136 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="var negotiator =\r\n                  new Negotiator(context)", span="193-194"];
m3_159 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="var negotiator =\r\n                            new Negotiator(context)", span="230-231"];
m3_178 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="var negotiator =\r\n                            new Negotiator(context)", span="260-261"];
m3_206 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="var negotiator =\r\n                            new Negotiator(context)", span="299-300"];
m3_444 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="var negotiator = new Negotiator(module.Context)", span="625-625"];
m3_281 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.ResponseProcessors(typeof(XmlProcessor), typeof(JsonProcessor), typeof(TestProcessor))", span="410-410"];
m3_299 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.ResponseProcessors(typeof(XmlProcessor), typeof(JsonProcessor), typeof(TestProcessor))", span="432-432"];
m3_402 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.ResponseProcessors(typeof(NullProcessor), typeof(TestProcessor))", span="563-563"];
m3_420 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.ResponseProcessors(typeof(XmlProcessor), typeof(JsonProcessor), typeof(TestProcessor))", span="593-593"];
m3_435 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Module<NegotiationModule>()", span="614-614"];
m3_17 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="26-29"];
m3_19 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="26-29"];
m3_34 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="47-50"];
m3_36 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="47-50"];
m3_49 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="68-71"];
m3_51 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="68-71"];
m3_73 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="101-104"];
m3_75 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="101-104"];
m3_98 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="133-138"];
m3_101 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="133-138"];
m3_141 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="201-206"];
m3_144 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="201-206"];
m3_150 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="219-236"];
m3_153 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="219-236"];
m3_155 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="x.Get(''/'', (parameters, module) =>\r\n                    {\r\n                        var context =\r\n                            new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n                        var negotiator =\r\n                            new Negotiator(context);\r\n\r\n                        return negotiator;\r\n                    })", span="225-234"];
m3_169 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="249-269"];
m3_172 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="249-269"];
m3_174 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="x.Get(''/'', (parameters, module) =>\r\n                    {\r\n                        var context =\r\n                            new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n                        var negotiator =\r\n                            new Negotiator(context);\r\n\r\n                        negotiator.WithAllowedMediaRange(''application/xml'');\r\n                        negotiator.WithAllowedMediaRange(''text/html'');\r\n\r\n                        return negotiator;\r\n                    })", span="255-267"];
m3_197 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="288-305"];
m3_200 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="288-305"];
m3_202 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="x.Get(''/test'', (parameters, module) =>\r\n                    {\r\n                        var context =\r\n                            new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n                        var negotiator =\r\n                            new Negotiator(context);\r\n\r\n                        return negotiator;\r\n                    })", span="294-303"];
m3_219 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="324-335"];
m3_222 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="324-335"];
m3_224 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="x.Get(''/test'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithAllowedMediaRange(''application/xml'');\r\n                    }))", span="330-333"];
m3_238 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="351-363"];
m3_241 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="351-363"];
m3_243 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithModel(''the model'');\r\n                        config.WithAllowedMediaRange(''test/test'');\r\n                    }))", span="357-361"];
m3_258 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="379-392"];
m3_261 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="379-392"];
m3_263 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithModel(''the model'');\r\n                        config.WithAllowedMediaRange(''test/test'');\r\n                        config.WithMediaRangeModel(''test/test'', ''media model'');\r\n                    }))", span="385-390"];
m3_280 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="408-416"];
m3_283 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="408-416"];
m3_286 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="x.Get(''/'', CreateNegotiatedResponse())", span="414-414"];
m3_298 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="430-438"];
m3_301 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="430-438"];
m3_303 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="x.Get(''/'', CreateNegotiatedResponse())", span="436-436"];
m3_310 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="453-464"];
m3_313 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="453-464"];
m3_315 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithStatusCode(507);\r\n                    }))", span="459-462"];
m3_329 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="480-491"];
m3_332 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="480-491"];
m3_334 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithStatusCode(HttpStatusCode.InsufficientStorage);\r\n                    }))", span="486-489"];
m3_352 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="510-521"];
m3_355 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="510-521"];
m3_357 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithCookie(negotiatedCookie);\r\n                    }))", span="516-519"];
m3_376 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="536-541"];
m3_379 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="536-541"];
m3_381 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="x.Get(''/FakeModuleInvalidViewName'', CreateNegotiatedResponse(neg => neg.WithView(''blahblahblah'')))", span="540-540"];
m3_401 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="561-572"];
m3_404 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="561-572"];
m3_406 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="x.Get(''/test'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithAllowedMediaRange(''application/xml'');\r\n                    }))", span="567-570"];
m3_419 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="591-599"];
m3_422 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="591-599"];
m3_424 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="x.Get(''/'', CreateNegotiatedResponse())", span="597-597"];
m3_184 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="272-277"];
m3_209 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="308-313"];
m3_230 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="338-341"];
m3_250 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="366-369"];
m3_271 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="395-398"];
m3_288 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="419-419"];
m3_321 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="467-470"];
m3_340 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="494-497"];
m3_363 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="524-527"];
m3_387 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="544-550"];
m3_389 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="544-550"];
m3_390 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="548-549"];
m3_411 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="575-578"];
m3_426 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="602-605"];
m3_438 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="616-616"];
m3_440 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="616-616"];
m3_88 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="120-130"];
m3_134 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="188-198"];
m3_157 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="225-234"];
m3_176 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="255-267"];
m3_204 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="294-303"];
m3_91 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="negotiator.WithHeader(''foo'', ''bar'')", span="127-127"];
m3_92 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="return negotiator;", span="129-129"];
m3_137 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="negotiator.WithContentType(''text/xml'')", span="195-195"];
m3_138 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="return negotiator;", span="197-197"];
m3_160 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="return negotiator;", span="233-233"];
m3_179 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="negotiator.WithAllowedMediaRange(''application/xml'')", span="263-263"];
m3_180 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="negotiator.WithAllowedMediaRange(''text/html'')", span="264-264"];
m3_181 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="return negotiator;", span="266-266"];
m3_207 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="return negotiator;", span="302-302"];
m3_443 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="623-633"];
m3_445 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="action != null", span="627-627"];
m3_446 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="action.Invoke(negotiator)", span="629-629"];
m3_447 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="return negotiator;", span="632-632"];
m3_11 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Get(''/int'', (x,m) => 200)", span="23-23"];
m3_29 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Get(''/string'', (x, m) => ''hello'')", span="44-44"];
m3_44 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Get(''/httpstatuscode'', (x, m) => HttpStatusCode.Accepted)", span="65-65"];
m3_59 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Get(''/action'', (x, m) =>\r\n                {\r\n                    Action<Stream> result = stream =>\r\n                    {\r\n                        var wrapper = new UnclosableStreamWrapper(stream);\r\n                        using (var writer = new StreamWriter(wrapper))\r\n                        {\r\n                            writer.Write(''Hiya Nancy!'');\r\n                        }\r\n                    };\r\n\r\n                    return result;\r\n                })", span="86-98"];
m3_86 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Get(''/headers'', (x, m) =>\r\n                {\r\n                    var context =\r\n                        new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n                    var negotiator =\r\n                        new Negotiator(context);\r\n                    negotiator.WithHeader(''foo'', ''bar'');\r\n\r\n                    return negotiator;\r\n                })", span="120-130"];
m3_132 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Get(''/headers'', (x, m) =>\r\n            {\r\n              var context =\r\n                  new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n              var negotiator =\r\n                  new Negotiator(context);\r\n              negotiator.WithContentType(''text/xml'');\r\n\r\n              return negotiator;\r\n            })", span="188-198"];
m3_360 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="config.WithCookie(negotiatedCookie)", span="518-518"];
m3_427 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Header(''Accept'', header)", span="604-604"];
m3_434 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="614-614"];
m3_436 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="614-614"];
m3_154 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="223-235"];
m3_156 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="223-235"];
m3_173 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="253-268"];
m3_175 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="253-268"];
m3_201 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="292-304"];
m3_203 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="292-304"];
m3_223 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="328-334"];
m3_225 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="328-334"];
m3_227 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="330-333"];
m3_242 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="355-362"];
m3_244 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="355-362"];
m3_245 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="357-361"];
m3_262 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="383-391"];
m3_264 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="383-391"];
m3_265 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="385-390"];
m3_285 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="412-415"];
m3_287 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="412-415"];
m3_302 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="434-437"];
m3_304 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="434-437"];
m3_314 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="457-463"];
m3_316 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="457-463"];
m3_317 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="459-462"];
m3_333 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="484-490"];
m3_335 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="484-490"];
m3_336 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="486-489"];
m3_356 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="514-520"];
m3_358 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="514-520"];
m3_359 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="516-519"];
m3_380 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="540-540"];
m3_382 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="540-540"];
m3_383 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="540-540"];
m3_405 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="565-571"];
m3_407 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="565-571"];
m3_408 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="567-570"];
m3_423 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="595-598"];
m3_425 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="595-598"];
m3_188 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="272-277"];
m3_185 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Header(''User-Agent'', ''Mozilla/5.0 (Windows; U; Windows NT 5.1; ru-RU) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4'')", span="274-274"];
m3_186 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Accept(''application/xml'', 0.9m)", span="275-275"];
m3_187 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Accept(''text/html'', 0.9m)", span="276-276"];
m3_213 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="308-313"];
m3_210 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Header(''User-Agent'', ''Mozilla/5.0 (Windows; U; Windows NT 5.1; ru-RU) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4'')", span="310-310"];
m3_211 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Accept(''application/xml'', 0.9m)", span="311-311"];
m3_212 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Accept(''text/html'', 0.9m)", span="312-312"];
m3_232 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="338-341"];
m3_231 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Accept(''foo/bar'', 0.9m)", span="340-340"];
m3_252 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="366-369"];
m3_251 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Accept(''test/test'', 0.9m)", span="368-368"];
m3_273 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="395-398"];
m3_272 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Accept(''test/test'', 0.9m)", span="397-397"];
m3_290 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="419-419"];
m3_289 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Header(''Accept'', ''application/json'')", span="419-419"];
m3_323 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="467-470"];
m3_322 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Accept(''test/test'', 0.9m)", span="469-469"];
m3_342 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="494-497"];
m3_341 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Accept(''test/test'', 0.9m)", span="496-496"];
m3_365 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="524-527"];
m3_364 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Accept(''test/test'', 0.9m)", span="526-526"];
m3_392 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="548-549"];
m3_391 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Accept(''text/html'', 1.0m)", span="549-549"];
m3_413 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="575-578"];
m3_412 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="with.Accept(''application/xml'', 0.9m)", span="577-577"];
m3_428 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="602-605"];
m3_93 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="120-130"];
m3_139 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="188-198"];
m3_161 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="225-234"];
m3_182 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="255-267"];
m3_208 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="294-303"];
m3_448 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="623-633"];
m3_10 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="21-24"];
m3_12 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="21-24"];
m3_14 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="23-23"];
m3_28 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="42-45"];
m3_30 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="42-45"];
m3_31 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="44-44"];
m3_43 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="63-66"];
m3_45 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="63-66"];
m3_46 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="65-65"];
m3_58 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="84-99"];
m3_60 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="84-99"];
m3_61 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="86-98"];
m3_85 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="118-131"];
m3_87 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="118-131"];
m3_131 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Entry lambda expression", span="186-199"];
m3_133 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="186-199"];
m3_361 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="516-519"];
m3_229 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="330-333"];
m3_228 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="config.WithAllowedMediaRange(''application/xml'')", span="332-332"];
m3_248 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="357-361"];
m3_246 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="config.WithModel(''the model'')", span="359-359"];
m3_247 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="config.WithAllowedMediaRange(''test/test'')", span="360-360"];
m3_269 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="385-390"];
m3_266 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="config.WithModel(''the model'')", span="387-387"];
m3_267 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="config.WithAllowedMediaRange(''test/test'')", span="388-388"];
m3_268 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="config.WithMediaRangeModel(''test/test'', ''media model'')", span="389-389"];
m3_319 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="459-462"];
m3_318 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="config.WithStatusCode(507)", span="461-461"];
m3_338 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="486-489"];
m3_337 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="config.WithStatusCode(HttpStatusCode.InsufficientStorage)", span="488-488"];
m3_385 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="540-540"];
m3_384 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="neg.WithView(''blahblahblah'')", span="540-540"];
m3_410 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="567-570"];
m3_409 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="config.WithAllowedMediaRange(''application/xml'')", span="569-569"];
m3_16 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="23-23"];
m3_15 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label=200, span="23-23"];
m3_33 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="44-44"];
m3_32 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="''hello''", span="44-44"];
m3_48 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="65-65"];
m3_47 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="HttpStatusCode.Accepted", span="65-65"];
m3_64 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="86-98"];
m3_62 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Action<Stream> result = stream =>\r\n                    {\r\n                        var wrapper = new UnclosableStreamWrapper(stream);\r\n                        using (var writer = new StreamWriter(wrapper))\r\n                        {\r\n                            writer.Write(''Hiya Nancy!'');\r\n                        }\r\n                    }", span="88-95"];
m3_63 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="return result;", span="97-97"];
m3_66 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="var wrapper = new UnclosableStreamWrapper(stream)", span="90-90"];
m3_67 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="var writer = new StreamWriter(wrapper)", span="91-91"];
m3_68 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="writer.Write(''Hiya Nancy!'')", span="93-93"];
m3_69 [cluster="lambda expression", file="ContentNegotiationFixture.cs", label="Exit lambda expression", span="88-95"];
m3_21 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_string_value_from_get_route_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_string_value_from_get_route_as_response_with_content_set_as_value()", span="39-39"];
m3_23 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_string_value_from_get_route_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs", label="var browser = new Browser(with =>\r\n            {\r\n                with.Module(module);\r\n            })", span="47-50"];
m3_24 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_string_value_from_get_route_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs", label="var response = browser.Get(''/string'')", span="53-53"];
m3_25 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_string_value_from_get_route_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs", label="Assert.Equal(''hello'', response.Body.AsString())", span="56-56"];
m3_22 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_string_value_from_get_route_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs", label="var module = new ConfigurableNancyModule(with =>\r\n            {\r\n                with.Get(''/string'', (x, m) => ''hello'');\r\n            })", span="42-45"];
m3_26 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_string_value_from_get_route_as_response_with_content_set_as_value()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_string_value_from_get_route_as_response_with_content_set_as_value()", span="39-39"];
m3_270 [cluster="Nancy.Responses.Negotiation.Negotiator.WithMediaRangeModel(Nancy.Responses.Negotiation.MediaRange, object)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Responses.Negotiation.Negotiator.WithMediaRangeModel(Nancy.Responses.Negotiation.MediaRange, object)", span="163-163"];
m3_375 [cluster="Unk.Contains", file="ContentNegotiationFixture.cs", label="Entry Unk.Contains", span=""];
m3_96 [cluster="Nancy.Responses.Negotiation.Negotiator.Negotiator(Nancy.NancyContext)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Responses.Negotiation.Negotiator.Negotiator(Nancy.NancyContext)", span="13-13"];
m3_70 [cluster="Nancy.IO.UnclosableStreamWrapper.UnclosableStreamWrapper(System.IO.Stream)", file="ContentNegotiationFixture.cs", label="Entry Nancy.IO.UnclosableStreamWrapper.UnclosableStreamWrapper(System.IO.Stream)", span="22-22"];
m3_372 [cluster="Unk.Exception", file="ContentNegotiationFixture.cs", label="Entry Unk.Exception", span=""];
m3_72 [cluster="System.IO.StreamWriter.Write(string)", file="ContentNegotiationFixture.cs", label="Entry System.IO.StreamWriter.Write(string)", span="0-0"];
m3_349 [cluster="Nancy.Cookies.NancyCookie.NancyCookie(string, string)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Cookies.NancyCookie.NancyCookie(string, string)", span="10-10"];
m3_414 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_not_throw_exception_because_of_uncommon_accept_header(string)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_not_throw_exception_because_of_uncommon_accept_header(string)", span="588-588"];
m3_415 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_not_throw_exception_because_of_uncommon_accept_header(string)", file="ContentNegotiationFixture.cs", label="var browser = new Browser(with =>\r\n            {\r\n                with.ResponseProcessors(typeof(XmlProcessor), typeof(JsonProcessor), typeof(TestProcessor));\r\n\r\n                with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse());\r\n                }));\r\n            })", span="591-599"];
m3_416 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_not_throw_exception_because_of_uncommon_accept_header(string)", file="ContentNegotiationFixture.cs", label="var response = browser.Get(''/'', with =>\r\n            {\r\n                with.Header(''Accept'', header);\r\n            })", span="602-605"];
m3_417 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_not_throw_exception_because_of_uncommon_accept_header(string)", file="ContentNegotiationFixture.cs", label="Assert.Equal((HttpStatusCode)200, response.StatusCode)", span="608-608"];
m3_418 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_not_throw_exception_because_of_uncommon_accept_header(string)", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_not_throw_exception_because_of_uncommon_accept_header(string)", span="588-588"];
m3_189 [cluster="Nancy.Testing.BrowserContext.Header(string, string)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Testing.BrowserContext.Header(string, string)", span="107-107"];
m3_84 [cluster="Unk.True", file="ContentNegotiationFixture.cs", label="Entry Unk.True", span=""];
m3_113 [cluster="Unk.Get", file="ContentNegotiationFixture.cs", label="Entry Unk.Get", span=""];
m3_102 [cluster="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.ResponseProcessor<T>()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.ResponseProcessor<T>()", span="1212-1212"];
m3_274 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_vary_accept_header()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_vary_accept_header()", span="405-405"];
m3_275 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_vary_accept_header()", file="ContentNegotiationFixture.cs", label="var browser = new Browser(with =>\r\n            {\r\n                with.ResponseProcessors(typeof(XmlProcessor), typeof(JsonProcessor), typeof(TestProcessor));\r\n\r\n                with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse());\r\n                }));\r\n            })", span="408-416"];
m3_276 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_vary_accept_header()", file="ContentNegotiationFixture.cs", label="var response = browser.Get(''/'', with => with.Header(''Accept'', ''application/json''))", span="419-419"];
m3_277 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_vary_accept_header()", file="ContentNegotiationFixture.cs", label="Assert.True(response.Headers.ContainsKey(''Vary''))", span="422-422"];
m3_278 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_vary_accept_header()", file="ContentNegotiationFixture.cs", label="Assert.True(response.Headers[''Vary''].Contains(''Accept''))", span="423-423"];
m3_279 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_vary_accept_header()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_vary_accept_header()", span="405-405"];
m3_103 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_status_description_on_response()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_status_description_on_response()", span="149-149"];
m3_104 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_status_description_on_response()", color=green, community=1, file="ContentNegotiationFixture.cs", label="0: var module = new ConfigurableNancyModule(with =>\r\n            {\r\n                with.Get(''/customStatus'', (x, m) =>\r\n                {\r\n                    var context =\r\n                        new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n                    var negotiator =\r\n                        new Negotiator(context);\r\n                    negotiator.WithStatusDescription(''The test is passing!'');\r\n\r\n                    return negotiator;\r\n                });\r\n            })", span="152-165"];
m3_105 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_status_description_on_response()", color=green, community=1, file="ContentNegotiationFixture.cs", label="0: var brower = new Browser(with =>\r\n            {\r\n                with.ResponseProcessor<TestProcessor>();\r\n\r\n                with.Module(module);\r\n            })", span="167-172"];
m3_106 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_status_description_on_response()", color=green, community=0, file="ContentNegotiationFixture.cs", label="0: var response = brower.Get(''/customStatus'')", span="175-175"];
m3_107 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_status_description_on_response()", color=green, community=0, file="ContentNegotiationFixture.cs", label="0: Assert.Equal(''The test is passing!'', response.StatusDescription)", span="178-178"];
m3_108 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_status_description_on_response()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_status_description_on_response()", span="149-149"];
m3_343 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_cookies_to_response()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_cookies_to_response()", span="504-504"];
m3_345 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_cookies_to_response()", file="ContentNegotiationFixture.cs", label="var browser = new Browser(with =>\r\n            {\r\n                with.ResponseProcessor<TestProcessor>();\r\n\r\n                with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithCookie(negotiatedCookie);\r\n                    }));\r\n                }));\r\n            })", span="510-521"];
m3_346 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_cookies_to_response()", file="ContentNegotiationFixture.cs", label="var response = browser.Get(''/'', with =>\r\n            {\r\n                with.Accept(''test/test'', 0.9m);\r\n            })", span="524-527"];
m3_344 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_cookies_to_response()", file="ContentNegotiationFixture.cs", label="var negotiatedCookie = \r\n                new NancyCookie(''test'', ''test'')", span="507-508"];
m3_347 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_cookies_to_response()", file="ContentNegotiationFixture.cs", label="Assert.Same(negotiatedCookie, response.Cookies.First())", span="530-530"];
m3_348 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_cookies_to_response()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_set_negotiated_cookies_to_response()", span="504-504"];
m3_13 [cluster="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator.Get(string, System.Func<dynamic, Nancy.NancyModule, dynamic>)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator.Get(string, System.Func<dynamic, Nancy.NancyModule, dynamic>)", span="133-133"];
m3_125 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_content_headers_to_response()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_content_headers_to_response()", span="182-182"];
m3_127 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_content_headers_to_response()", file="ContentNegotiationFixture.cs", label="var brower = new Browser(with =>\r\n          {\r\n            with.ResponseProcessor<TestProcessor>();\r\n\r\n            with.Module(module);\r\n          })", span="201-206"];
m3_128 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_content_headers_to_response()", file="ContentNegotiationFixture.cs", label="var response = brower.Get(''/headers'')", span="209-209"];
m3_129 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_content_headers_to_response()", file="ContentNegotiationFixture.cs", label="Assert.Equal(''text/xml'', response.Context.Response.ContentType)", span="212-212"];
m3_126 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_content_headers_to_response()", file="ContentNegotiationFixture.cs", label="var module = new ConfigurableNancyModule(with =>\r\n          {\r\n            with.Get(''/headers'', (x, m) =>\r\n            {\r\n              var context =\r\n                  new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n              var negotiator =\r\n                  new Negotiator(context);\r\n              negotiator.WithContentType(''text/xml'');\r\n\r\n              return negotiator;\r\n            });\r\n          })", span="186-199"];
m3_130 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_content_headers_to_response()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_content_headers_to_response()", span="182-182"];
m3_253 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_media_range_specific_model_when_declared()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_media_range_specific_model_when_declared()", span="376-376"];
m3_254 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_media_range_specific_model_when_declared()", file="ContentNegotiationFixture.cs", label="var browser = new Browser(with =>\r\n            {\r\n                with.ResponseProcessor<ModelProcessor>();\r\n\r\n                with.Module(new ConfigurableNancyModule(x =>\r\n                {\r\n                    x.Get(''/'', CreateNegotiatedResponse(config =>\r\n                    {\r\n                        config.WithModel(''the model'');\r\n                        config.WithAllowedMediaRange(''test/test'');\r\n                        config.WithMediaRangeModel(''test/test'', ''media model'');\r\n                    }));\r\n                }));\r\n            })", span="379-392"];
m3_255 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_media_range_specific_model_when_declared()", file="ContentNegotiationFixture.cs", label="var response = browser.Get(''/'', with =>\r\n            {\r\n                with.Accept(''test/test'', 0.9m);\r\n            })", span="395-398"];
m3_256 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_media_range_specific_model_when_declared()", file="ContentNegotiationFixture.cs", label="Assert.Equal(''media model'', response.Body.AsString())", span="401-401"];
m3_257 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_media_range_specific_model_when_declared()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_return_media_range_specific_model_when_declared()", span="376-376"];
m3_249 [cluster="Nancy.Responses.Negotiation.Negotiator.WithModel(dynamic)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Responses.Negotiation.Negotiator.WithModel(dynamic)", span="135-135"];
m3_76 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_headers_to_response()", file="ContentNegotiationFixture.cs", label="Entry Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_headers_to_response()", span="114-114"];
m3_78 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_headers_to_response()", file="ContentNegotiationFixture.cs", label="var brower = new Browser(with =>\r\n            {\r\n                with.ResponseProcessor<TestProcessor>();\r\n\r\n                with.Module(module);\r\n            })", span="133-138"];
m3_79 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_headers_to_response()", file="ContentNegotiationFixture.cs", label="var response = brower.Get(''/headers'')", span="141-141"];
m3_81 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_headers_to_response()", file="ContentNegotiationFixture.cs", label="Assert.Equal(''bar'', response.Headers[''foo''])", span="145-145"];
m3_77 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_headers_to_response()", file="ContentNegotiationFixture.cs", label="var module = new ConfigurableNancyModule(with =>\r\n            {\r\n                with.Get(''/headers'', (x, m) =>\r\n                {\r\n                    var context =\r\n                        new NancyContext { NegotiationContext = new NegotiationContext() };\r\n\r\n                    var negotiator =\r\n                        new Negotiator(context);\r\n                    negotiator.WithHeader(''foo'', ''bar'');\r\n\r\n                    return negotiator;\r\n                });\r\n            })", span="118-131"];
m3_80 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_headers_to_response()", file="ContentNegotiationFixture.cs", label="Assert.True(response.Headers.ContainsKey(''foo''))", span="144-144"];
m3_82 [cluster="Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_headers_to_response()", file="ContentNegotiationFixture.cs", label="Exit Nancy.Tests.Functional.Tests.ContentNegotiationFixture.Should_add_negotiated_headers_to_response()", span="114-114"];
m3_362 [cluster="Nancy.Responses.Negotiation.Negotiator.WithCookie(Nancy.Cookies.INancyCookie)", file="ContentNegotiationFixture.cs", label="Entry Nancy.Responses.Negotiation.Negotiator.WithCookie(Nancy.Cookies.INancyCookie)", span="16-16"];
m3_486 [file="ContentNegotiationFixture.cs", label=module, span=""];
m3_481 [file="ContentNegotiationFixture.cs", label=module, span=""];
m3_482 [file="ContentNegotiationFixture.cs", label=module, span=""];
m3_483 [file="ContentNegotiationFixture.cs", label=module, span=""];
m3_484 [file="ContentNegotiationFixture.cs", label=module, span=""];
m3_485 [file="ContentNegotiationFixture.cs", label=module, span=""];
m3_487 [file="ContentNegotiationFixture.cs", label=module, span=""];
m3_488 [file="ContentNegotiationFixture.cs", label=negotiatedCookie, span=""];
m3_489 [file="ContentNegotiationFixture.cs", label=browser, span=""];
m3_491 [file="ContentNegotiationFixture.cs", label=browser, span=""];
m3_492 [file="ContentNegotiationFixture.cs", label="System.Action<Nancy.Responses.Negotiation.Negotiator>", span=""];
m3_490 [file="ContentNegotiationFixture.cs", label=string, span=""];
m5_0 [cluster="Nancy.Validation.DefaultValidatorLocator.DefaultValidatorLocator(System.Collections.Generic.IEnumerable<Nancy.Validation.IModelValidatorFactory>)", file="DefaultValidatorLocator.cs", label="Entry Nancy.Validation.DefaultValidatorLocator.DefaultValidatorLocator(System.Collections.Generic.IEnumerable<Nancy.Validation.IModelValidatorFactory>)", span="19-19"];
m5_1 [cluster="Nancy.Validation.DefaultValidatorLocator.DefaultValidatorLocator(System.Collections.Generic.IEnumerable<Nancy.Validation.IModelValidatorFactory>)", file="DefaultValidatorLocator.cs", label="this.cachedValidators = \r\n                new ConcurrentDictionary<Type, IModelValidator>()", span="21-22"];
m5_2 [cluster="Nancy.Validation.DefaultValidatorLocator.DefaultValidatorLocator(System.Collections.Generic.IEnumerable<Nancy.Validation.IModelValidatorFactory>)", file="DefaultValidatorLocator.cs", label="this.factories = factories ?? Enumerable.Empty<IModelValidatorFactory>()", span="24-24"];
m5_13 [cluster="Nancy.Session.NullSessionProvider.GetEnumerator()", file="DefaultValidatorLocator.cs", label="Entry Nancy.Session.NullSessionProvider.GetEnumerator()", span="15-15"];
m5_44 [cluster="Nancy.Tests.Unit.Sessions.NullSessionProviderFixture.Should_throw_when_haschanged()", file="DefaultValidatorLocator.cs", label="Entry Nancy.Tests.Unit.Sessions.NullSessionProviderFixture.Should_throw_when_haschanged()", span="56-56"];
m5_45 [cluster="Nancy.Tests.Unit.Sessions.NullSessionProviderFixture.Should_throw_when_haschanged()", file="DefaultValidatorLocator.cs", label="var exception = Record.Exception(() => provider.HasChanged)", span="58-58"];
m5_46 [cluster="Nancy.Tests.Unit.Sessions.NullSessionProviderFixture.Should_throw_when_haschanged()", file="DefaultValidatorLocator.cs", label="exception.ShouldBeOfType(typeof(InvalidOperationException))", span="60-60"];
m5_47 [cluster="Nancy.Tests.Unit.Sessions.NullSessionProviderFixture.Should_throw_when_haschanged()", file="DefaultValidatorLocator.cs", label="Exit Nancy.Tests.Unit.Sessions.NullSessionProviderFixture.Should_throw_when_haschanged()", span="56-56"];
m5_27 [cluster="lambda expression", file="DefaultValidatorLocator.cs", label="Exit lambda expression", span="34-34"];
m5_9 [cluster="Nancy.Validation.DefaultValidatorLocator.GetValidatorForType(System.Type)", file="DefaultValidatorLocator.cs", label="return cachedValidators.GetOrAdd(type, CreateValidator);", span="39-39"];
m5_14 [cluster="Nancy.Tests.Unit.Sessions.NullSessionProviderFixture.Should_throw_when_get_count_getter_called()", file="DefaultValidatorLocator.cs", label="Entry Nancy.Tests.Unit.Sessions.NullSessionProviderFixture.Should_throw_when_get_count_getter_called()", span="24-24"];
m5_15 [cluster="Nancy.Tests.Unit.Sessions.NullSessionProviderFixture.Should_throw_when_get_count_getter_called()", file="DefaultValidatorLocator.cs", label="var exception = Record.Exception(() => provider.Count)", span="26-26"];
m5_16 [cluster="Nancy.Tests.Unit.Sessions.NullSessionProviderFixture.Should_throw_when_get_count_getter_called()", file="DefaultValidatorLocator.cs", label="exception.ShouldBeOfType(typeof(InvalidOperationException))", span="28-28"];
m5_18 [cluster="lambda expression", file="DefaultValidatorLocator.cs", label="Entry lambda expression", span="26-26"];
m5_17 [cluster="Nancy.Tests.Unit.Sessions.NullSessionProviderFixture.Should_throw_when_get_count_getter_called()", file="DefaultValidatorLocator.cs", label="Exit Nancy.Tests.Unit.Sessions.NullSessionProviderFixture.Should_throw_when_get_count_getter_called()", span="24-24"];
m5_19 [cluster="lambda expression", file="DefaultValidatorLocator.cs", label="provider.Count", span="26-26"];
m5_4 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", file="DefaultValidatorLocator.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", span="0-0"];
m5_5 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="DefaultValidatorLocator.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m5_6 [cluster="Nancy.Validation.DefaultValidatorLocator.GetValidatorForType(System.Type)", file="DefaultValidatorLocator.cs", label="Entry Nancy.Validation.DefaultValidatorLocator.GetValidatorForType(System.Type)", span="32-32"];
m5_7 [cluster="Nancy.Validation.DefaultValidatorLocator.GetValidatorForType(System.Type)", file="DefaultValidatorLocator.cs", label="!this.factories.Any()", span="34-34"];
m5_29 [cluster="lambda expression", file="DefaultValidatorLocator.cs", label="v != null", span="46-46"];
m5_30 [cluster="lambda expression", file="DefaultValidatorLocator.cs", label="Exit lambda expression", span="46-46"];
m5_31 [cluster="Nancy.Tests.Unit.Sessions.NullSessionProviderFixture.Should_throw_when_delete_called()", file="DefaultValidatorLocator.cs", label="Nancy.Validation.DefaultValidatorLocator", span=""];
m5_32 [cluster="Nancy.Tests.Unit.Sessions.NullSessionProviderFixture.Should_throw_when_delete_called()", file="DefaultValidatorLocator.cs", label="System.Type", span=""];
m5_3 [cluster="Nancy.Validation.DefaultValidatorLocator.DefaultValidatorLocator(System.Collections.Generic.IEnumerable<Nancy.Validation.IModelValidatorFactory>)", file="DefaultValidatorLocator.cs", label="Exit Nancy.Validation.DefaultValidatorLocator.DefaultValidatorLocator(System.Collections.Generic.IEnumerable<Nancy.Validation.IModelValidatorFactory>)", span="19-19"];
m5_21 [cluster="Unk.Where", file="DefaultValidatorLocator.cs", label="Entry Unk.Where", span=""];
m5_22 [cluster="Unk.ToList", file="DefaultValidatorLocator.cs", label="Entry Unk.ToList", span=""];
m5_23 [cluster="CompositeValidator.cstr", color=red, community=0, file="DefaultValidatorLocator.cs", label="0: Entry CompositeValidator.cstr", span=""];
m5_24 [cluster="lambda expression", file="DefaultValidatorLocator.cs", label="Entry lambda expression", span="45-45"];
m5_28 [cluster="lambda expression", file="DefaultValidatorLocator.cs", label="Entry lambda expression", span="46-46"];
m5_37 [cluster="Nancy.Tests.Unit.Sessions.NullSessionProviderFixture.Should_throw_when_indexer_accessed()", file="DefaultValidatorLocator.cs", label="Entry Nancy.Tests.Unit.Sessions.NullSessionProviderFixture.Should_throw_when_indexer_accessed()", span="48-48"];
m5_38 [cluster="Nancy.Tests.Unit.Sessions.NullSessionProviderFixture.Should_throw_when_indexer_accessed()", file="DefaultValidatorLocator.cs", label="var exception = Record.Exception(() => provider[''test''])", span="50-50"];
m5_39 [cluster="Nancy.Tests.Unit.Sessions.NullSessionProviderFixture.Should_throw_when_indexer_accessed()", file="DefaultValidatorLocator.cs", label="exception.ShouldBeOfType(typeof(InvalidOperationException))", span="52-52"];
m5_40 [cluster="Nancy.Tests.Unit.Sessions.NullSessionProviderFixture.Should_throw_when_indexer_accessed()", file="DefaultValidatorLocator.cs", label="Exit Nancy.Tests.Unit.Sessions.NullSessionProviderFixture.Should_throw_when_indexer_accessed()", span="48-48"];
m5_10 [cluster="Nancy.Validation.DefaultValidatorLocator.GetValidatorForType(System.Type)", file="DefaultValidatorLocator.cs", label="Exit Nancy.Validation.DefaultValidatorLocator.GetValidatorForType(System.Type)", span="32-32"];
m5_11 [cluster="lambda expression", file="DefaultValidatorLocator.cs", label="provider.GetEnumerator()", span="18-18"];
m5_12 [cluster="Nancy.Validation.ModelValidationException.ModelValidationException(string)", file="DefaultValidatorLocator.cs", label="Entry Nancy.Validation.ModelValidationException.ModelValidationException(string)", span="10-10"];
m5_20 [cluster="Unk.Select", file="DefaultValidatorLocator.cs", label="Entry Unk.Select", span=""];
m5_25 [cluster="lambda expression", file="DefaultValidatorLocator.cs", label="f.Create(type)", span="45-45"];
m5_26 [cluster="lambda expression", file="DefaultValidatorLocator.cs", label="Exit lambda expression", span="45-45"];
m5_33 [cluster="lambda expression", file="DefaultValidatorLocator.cs", label="Entry lambda expression", span="42-42"];
m5_34 [cluster="lambda expression", file="DefaultValidatorLocator.cs", label="provider.Delete(''test'')", span="42-42"];
m5_35 [cluster="lambda expression", file="DefaultValidatorLocator.cs", label="Exit lambda expression", span="42-42"];
m5_41 [cluster="lambda expression", file="DefaultValidatorLocator.cs", label="Entry lambda expression", span="50-50"];
m5_42 [cluster="lambda expression", file="DefaultValidatorLocator.cs", label="provider[''test'']", span="50-50"];
m5_43 [cluster="lambda expression", file="DefaultValidatorLocator.cs", label="Exit lambda expression", span="50-50"];
m5_48 [cluster="lambda expression", file="DefaultValidatorLocator.cs", label="Entry lambda expression", span="58-58"];
m5_49 [cluster="lambda expression", file="DefaultValidatorLocator.cs", label="provider.HasChanged", span="58-58"];
m5_50 [cluster="lambda expression", file="DefaultValidatorLocator.cs", label="Exit lambda expression", span="58-58"];
m5_8 [cluster="Nancy.Validation.DefaultValidatorLocator.GetValidatorForType(System.Type)", color=green, community=0, file="DefaultValidatorLocator.cs", label="0: throw new ModelValidationException(''No model validator factory could be located.'');", span="36-36"];
m5_36 [cluster="Nancy.Session.NullSessionProvider.Delete(string)", file="DefaultValidatorLocator.cs", label="Entry Nancy.Session.NullSessionProvider.Delete(string)", span="55-55"];
m5_51 [file="DefaultValidatorLocator.cs", label="Nancy.Tests.Unit.Sessions.NullSessionProviderFixture", span=""];
m6_0 [cluster="Nancy.Session.NullSessionProvider.GetEnumerator()", file="IStatusHandler.cs", label="Entry Nancy.Session.NullSessionProvider.GetEnumerator()", span="15-15"];
m6_1 [cluster="Nancy.Session.NullSessionProvider.GetEnumerator()", file="IStatusHandler.cs", label="throw new InvalidOperationException(''Session support is not enabled.'');", span="17-17"];
m6_2 [cluster="Nancy.Session.NullSessionProvider.GetEnumerator()", file="IStatusHandler.cs", label="Exit Nancy.Session.NullSessionProvider.GetEnumerator()", span="15-15"];
m6_7 [cluster="Nancy.Session.NullSessionProvider.DeleteAll()", file="IStatusHandler.cs", label="Entry Nancy.Session.NullSessionProvider.DeleteAll()", span="47-47"];
m6_8 [cluster="Nancy.Session.NullSessionProvider.DeleteAll()", file="IStatusHandler.cs", label="throw new InvalidOperationException(''Session support is not enabled.'');", span="49-49"];
m6_9 [cluster="Nancy.Session.NullSessionProvider.DeleteAll()", file="IStatusHandler.cs", label="Exit Nancy.Session.NullSessionProvider.DeleteAll()", span="47-47"];
m6_10 [cluster="Nancy.Session.NullSessionProvider.Delete(string)", file="IStatusHandler.cs", label="Entry Nancy.Session.NullSessionProvider.Delete(string)", span="55-55"];
m6_11 [cluster="Nancy.Session.NullSessionProvider.Delete(string)", file="IStatusHandler.cs", label="throw new InvalidOperationException(''Session support is not enabled.'');", span="57-57"];
m6_12 [cluster="Nancy.Session.NullSessionProvider.Delete(string)", file="IStatusHandler.cs", label="Exit Nancy.Session.NullSessionProvider.Delete(string)", span="55-55"];
m6_3 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="IStatusHandler.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m6_4 [cluster="Nancy.Session.NullSessionProvider.System.Collections.IEnumerable.GetEnumerator()", file="IStatusHandler.cs", label="Entry Nancy.Session.NullSessionProvider.System.Collections.IEnumerable.GetEnumerator()", span="27-27"];
m6_5 [cluster="Nancy.Session.NullSessionProvider.System.Collections.IEnumerable.GetEnumerator()", file="IStatusHandler.cs", label="return GetEnumerator();", span="29-29"];
m6_6 [cluster="Nancy.Session.NullSessionProvider.System.Collections.IEnumerable.GetEnumerator()", file="IStatusHandler.cs", label="Exit Nancy.Session.NullSessionProvider.System.Collections.IEnumerable.GetEnumerator()", span="27-27"];
m6_13 [file="IStatusHandler.cs", label="Nancy.Session.NullSessionProvider", span=""];
m7_88 [cluster="Nancy.ModelBinding.ModuleExtensions.BindToAndValidate<TModel>(Nancy.INancyModule, TModel, Nancy.ModelBinding.BindingConfig, params string[])", file="ModuleExtensions.cs", label="Entry Nancy.ModelBinding.ModuleExtensions.BindToAndValidate<TModel>(Nancy.INancyModule, TModel, Nancy.ModelBinding.BindingConfig, params string[])", span="294-294"];
m7_89 [cluster="Nancy.ModelBinding.ModuleExtensions.BindToAndValidate<TModel>(Nancy.INancyModule, TModel, Nancy.ModelBinding.BindingConfig, params string[])", color=green, community=0, file="ModuleExtensions.cs", label="0: var model = module.BindTo(instance, configuration, blacklistedProperties)", span="296-296"];
m7_90 [cluster="Nancy.ModelBinding.ModuleExtensions.BindToAndValidate<TModel>(Nancy.INancyModule, TModel, Nancy.ModelBinding.BindingConfig, params string[])", color=green, community=0, file="ModuleExtensions.cs", label="0: module.Validate(model)", span="297-297"];
m7_91 [cluster="Nancy.ModelBinding.ModuleExtensions.BindToAndValidate<TModel>(Nancy.INancyModule, TModel, Nancy.ModelBinding.BindingConfig, params string[])", color=green, community=0, file="ModuleExtensions.cs", label="0: return model;", span="298-298"];
m7_92 [cluster="Nancy.ModelBinding.ModuleExtensions.BindToAndValidate<TModel>(Nancy.INancyModule, TModel, Nancy.ModelBinding.BindingConfig, params string[])", file="ModuleExtensions.cs", label="Exit Nancy.ModelBinding.ModuleExtensions.BindToAndValidate<TModel>(Nancy.INancyModule, TModel, Nancy.ModelBinding.BindingConfig, params string[])", span="294-294"];
m7_27 [cluster="System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression<System.Func<T, object>>>.ParseBlacklistedPropertiesExpressionTree<T>()", file="ModuleExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression<System.Func<T, object>>>.ParseBlacklistedPropertiesExpressionTree<T>()", span="17-17"];
m7_52 [cluster="Nancy.ModelBinding.ModuleExtensions.BindAndValidate<TModel>(Nancy.INancyModule, Nancy.ModelBinding.BindingConfig, params string[])", file="ModuleExtensions.cs", label="Entry Nancy.ModelBinding.ModuleExtensions.BindAndValidate<TModel>(Nancy.INancyModule, Nancy.ModelBinding.BindingConfig, params string[])", span="174-174"];
m7_54 [cluster="Nancy.ModelBinding.ModuleExtensions.BindAndValidate<TModel>(Nancy.INancyModule, Nancy.ModelBinding.BindingConfig, params string[])", file="ModuleExtensions.cs", label="module.Validate(model)", span="177-177"];
m7_53 [cluster="Nancy.ModelBinding.ModuleExtensions.BindAndValidate<TModel>(Nancy.INancyModule, Nancy.ModelBinding.BindingConfig, params string[])", file="ModuleExtensions.cs", label="var model = module.Bind<TModel>(configuration, blacklistedProperties)", span="176-176"];
m7_55 [cluster="Nancy.ModelBinding.ModuleExtensions.BindAndValidate<TModel>(Nancy.INancyModule, Nancy.ModelBinding.BindingConfig, params string[])", file="ModuleExtensions.cs", label="return model;", span="178-178"];
m7_56 [cluster="Nancy.ModelBinding.ModuleExtensions.BindAndValidate<TModel>(Nancy.INancyModule, Nancy.ModelBinding.BindingConfig, params string[])", file="ModuleExtensions.cs", label="Exit Nancy.ModelBinding.ModuleExtensions.BindAndValidate<TModel>(Nancy.INancyModule, Nancy.ModelBinding.BindingConfig, params string[])", span="174-174"];
m7_75 [cluster="Nancy.INancyModule.BindTo<TModel>(TModel, params string[])", file="ModuleExtensions.cs", label="Entry Nancy.INancyModule.BindTo<TModel>(TModel, params string[])", span="205-205"];
m7_85 [cluster="Nancy.ModelBinding.ModuleExtensions.BindTo<TModel>(Nancy.INancyModule, TModel, Nancy.ModelBinding.BindingConfig, params System.Linq.Expressions.Expression<System.Func<TModel, object>>[])", file="ModuleExtensions.cs", label="Entry Nancy.ModelBinding.ModuleExtensions.BindTo<TModel>(Nancy.INancyModule, TModel, Nancy.ModelBinding.BindingConfig, params System.Linq.Expressions.Expression<System.Func<TModel, object>>[])", span="280-280"];
m7_86 [cluster="Nancy.ModelBinding.ModuleExtensions.BindTo<TModel>(Nancy.INancyModule, TModel, Nancy.ModelBinding.BindingConfig, params System.Linq.Expressions.Expression<System.Func<TModel, object>>[])", file="ModuleExtensions.cs", label="return module.BindTo(instance, configuration, blacklistedProperties.ParseBlacklistedPropertiesExpressionTree());", span="282-282"];
m7_87 [cluster="Nancy.ModelBinding.ModuleExtensions.BindTo<TModel>(Nancy.INancyModule, TModel, Nancy.ModelBinding.BindingConfig, params System.Linq.Expressions.Expression<System.Func<TModel, object>>[])", file="ModuleExtensions.cs", label="Exit Nancy.ModelBinding.ModuleExtensions.BindTo<TModel>(Nancy.INancyModule, TModel, Nancy.ModelBinding.BindingConfig, params System.Linq.Expressions.Expression<System.Func<TModel, object>>[])", span="280-280"];
m7_49 [cluster="Nancy.ModelBinding.ModuleExtensions.Bind<TModel>(Nancy.INancyModule, Nancy.ModelBinding.BindingConfig, params System.Linq.Expressions.Expression<System.Func<TModel, object>>[])", file="ModuleExtensions.cs", label="Entry Nancy.ModelBinding.ModuleExtensions.Bind<TModel>(Nancy.INancyModule, Nancy.ModelBinding.BindingConfig, params System.Linq.Expressions.Expression<System.Func<TModel, object>>[])", span="160-160"];
m7_50 [cluster="Nancy.ModelBinding.ModuleExtensions.Bind<TModel>(Nancy.INancyModule, Nancy.ModelBinding.BindingConfig, params System.Linq.Expressions.Expression<System.Func<TModel, object>>[])", file="ModuleExtensions.cs", label="return module.Bind(configuration, blacklistedProperties.ParseBlacklistedPropertiesExpressionTree());", span="162-162"];
m7_51 [cluster="Nancy.ModelBinding.ModuleExtensions.Bind<TModel>(Nancy.INancyModule, Nancy.ModelBinding.BindingConfig, params System.Linq.Expressions.Expression<System.Func<TModel, object>>[])", file="ModuleExtensions.cs", label="Exit Nancy.ModelBinding.ModuleExtensions.Bind<TModel>(Nancy.INancyModule, Nancy.ModelBinding.BindingConfig, params System.Linq.Expressions.Expression<System.Func<TModel, object>>[])", span="160-160"];
m7_57 [cluster="Nancy.INancyModule.Bind<TModel>(Nancy.ModelBinding.BindingConfig, params string[])", file="ModuleExtensions.cs", label="Entry Nancy.INancyModule.Bind<TModel>(Nancy.ModelBinding.BindingConfig, params string[])", span="132-132"];
m7_76 [cluster="Nancy.ModelBinding.ModuleExtensions.BindToAndValidate<TModel>(Nancy.INancyModule, TModel, params System.Linq.Expressions.Expression<System.Func<TModel, object>>[])", file="ModuleExtensions.cs", label="Entry Nancy.ModelBinding.ModuleExtensions.BindToAndValidate<TModel>(Nancy.INancyModule, TModel, params System.Linq.Expressions.Expression<System.Func<TModel, object>>[])", span="247-247"];
m7_77 [cluster="Nancy.ModelBinding.ModuleExtensions.BindToAndValidate<TModel>(Nancy.INancyModule, TModel, params System.Linq.Expressions.Expression<System.Func<TModel, object>>[])", file="ModuleExtensions.cs", label="var model = module.BindTo(instance, blacklistedProperties.ParseBlacklistedPropertiesExpressionTree())", span="249-249"];
m7_78 [cluster="Nancy.ModelBinding.ModuleExtensions.BindToAndValidate<TModel>(Nancy.INancyModule, TModel, params System.Linq.Expressions.Expression<System.Func<TModel, object>>[])", file="ModuleExtensions.cs", label="module.Validate(model)", span="250-250"];
m7_79 [cluster="Nancy.ModelBinding.ModuleExtensions.BindToAndValidate<TModel>(Nancy.INancyModule, TModel, params System.Linq.Expressions.Expression<System.Func<TModel, object>>[])", file="ModuleExtensions.cs", label="return model;", span="251-251"];
m7_80 [cluster="Nancy.ModelBinding.ModuleExtensions.BindToAndValidate<TModel>(Nancy.INancyModule, TModel, params System.Linq.Expressions.Expression<System.Func<TModel, object>>[])", file="ModuleExtensions.cs", label="Exit Nancy.ModelBinding.ModuleExtensions.BindToAndValidate<TModel>(Nancy.INancyModule, TModel, params System.Linq.Expressions.Expression<System.Func<TModel, object>>[])", span="247-247"];
m7_17 [cluster="Nancy.ModelBinding.ModuleExtensions.Bind<TModel>(Nancy.INancyModule)", file="ModuleExtensions.cs", label="Entry Nancy.ModelBinding.ModuleExtensions.Bind<TModel>(Nancy.INancyModule)", span="51-51"];
m7_18 [cluster="Nancy.ModelBinding.ModuleExtensions.Bind<TModel>(Nancy.INancyModule)", file="ModuleExtensions.cs", label="return module.Bind();", span="53-53"];
m7_19 [cluster="Nancy.ModelBinding.ModuleExtensions.Bind<TModel>(Nancy.INancyModule)", file="ModuleExtensions.cs", label="Exit Nancy.ModelBinding.ModuleExtensions.Bind<TModel>(Nancy.INancyModule)", span="51-51"];
m7_29 [cluster="Nancy.ModelBinding.ModuleExtensions.BindAndValidate<TModel>(Nancy.INancyModule, params string[])", file="ModuleExtensions.cs", label="Entry Nancy.ModelBinding.ModuleExtensions.BindAndValidate<TModel>(Nancy.INancyModule, params string[])", span="89-89"];
m7_31 [cluster="Nancy.ModelBinding.ModuleExtensions.BindAndValidate<TModel>(Nancy.INancyModule, params string[])", file="ModuleExtensions.cs", label="module.Validate(model)", span="92-92"];
m7_30 [cluster="Nancy.ModelBinding.ModuleExtensions.BindAndValidate<TModel>(Nancy.INancyModule, params string[])", file="ModuleExtensions.cs", label="var model = module.Bind<TModel>(blacklistedProperties)", span="91-91"];
m7_32 [cluster="Nancy.ModelBinding.ModuleExtensions.BindAndValidate<TModel>(Nancy.INancyModule, params string[])", file="ModuleExtensions.cs", label="return model;", span="93-93"];
m7_33 [cluster="Nancy.ModelBinding.ModuleExtensions.BindAndValidate<TModel>(Nancy.INancyModule, params string[])", file="ModuleExtensions.cs", label="Exit Nancy.ModelBinding.ModuleExtensions.BindAndValidate<TModel>(Nancy.INancyModule, params string[])", span="89-89"];
m7_35 [cluster="Nancy.ModelBinding.ModuleExtensions.BindAndValidate<TModel>(Nancy.INancyModule, System.Linq.Expressions.Expression<System.Func<TModel, object>>[])", file="ModuleExtensions.cs", label="Entry Nancy.ModelBinding.ModuleExtensions.BindAndValidate<TModel>(Nancy.INancyModule, System.Linq.Expressions.Expression<System.Func<TModel, object>>[])", span="105-105"];
m7_36 [cluster="Nancy.ModelBinding.ModuleExtensions.BindAndValidate<TModel>(Nancy.INancyModule, System.Linq.Expressions.Expression<System.Func<TModel, object>>[])", file="ModuleExtensions.cs", label="var model = module.Bind<TModel>(blacklistedProperties.ParseBlacklistedPropertiesExpressionTree())", span="107-107"];
m7_37 [cluster="Nancy.ModelBinding.ModuleExtensions.BindAndValidate<TModel>(Nancy.INancyModule, System.Linq.Expressions.Expression<System.Func<TModel, object>>[])", file="ModuleExtensions.cs", label="module.Validate(model)", span="108-108"];
m7_38 [cluster="Nancy.ModelBinding.ModuleExtensions.BindAndValidate<TModel>(Nancy.INancyModule, System.Linq.Expressions.Expression<System.Func<TModel, object>>[])", file="ModuleExtensions.cs", label="return model;", span="109-109"];
m7_39 [cluster="Nancy.ModelBinding.ModuleExtensions.BindAndValidate<TModel>(Nancy.INancyModule, System.Linq.Expressions.Expression<System.Func<TModel, object>>[])", file="ModuleExtensions.cs", label="Exit Nancy.ModelBinding.ModuleExtensions.BindAndValidate<TModel>(Nancy.INancyModule, System.Linq.Expressions.Expression<System.Func<TModel, object>>[])", span="105-105"];
m7_0 [cluster="Nancy.ModelBinding.ModuleExtensions.ParseBlacklistedPropertiesExpressionTree<T>(System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression<System.Func<T, object>>>)", file="ModuleExtensions.cs", label="Entry Nancy.ModelBinding.ModuleExtensions.ParseBlacklistedPropertiesExpressionTree<T>(System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression<System.Func<T, object>>>)", span="17-17"];
m7_1 [cluster="Nancy.ModelBinding.ModuleExtensions.ParseBlacklistedPropertiesExpressionTree<T>(System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression<System.Func<T, object>>>)", file="ModuleExtensions.cs", label="return expressions.Select(p => p.GetTargetMemberInfo().Name).ToArray();", span="19-19"];
m7_34 [cluster="Nancy.INancyModule.Validate<T>(T)", file="ModuleExtensions.cs", label="Entry Nancy.INancyModule.Validate<T>(T)", span="14-14"];
m7_16 [cluster="Nancy.ModelBinding.DynamicModelBinderAdapter.DynamicModelBinderAdapter(Nancy.ModelBinding.IModelBinderLocator, Nancy.NancyContext, object, Nancy.ModelBinding.BindingConfig, params string[])", file="ModuleExtensions.cs", label="Entry Nancy.ModelBinding.DynamicModelBinderAdapter.DynamicModelBinderAdapter(Nancy.ModelBinding.IModelBinderLocator, Nancy.NancyContext, object, Nancy.ModelBinding.BindingConfig, params string[])", span="24-24"];
m7_4 [cluster="Unk.ToArray", file="ModuleExtensions.cs", label="Entry Unk.ToArray", span=""];
m7_43 [cluster="Nancy.ModelBinding.ModuleExtensions.Bind<TModel>(Nancy.INancyModule, Nancy.ModelBinding.BindingConfig, params string[])", file="ModuleExtensions.cs", label="Entry Nancy.ModelBinding.ModuleExtensions.Bind<TModel>(Nancy.INancyModule, Nancy.ModelBinding.BindingConfig, params string[])", span="132-132"];
m7_44 [cluster="Nancy.ModelBinding.ModuleExtensions.Bind<TModel>(Nancy.INancyModule, Nancy.ModelBinding.BindingConfig, params string[])", file="ModuleExtensions.cs", label="return module.Bind(configuration, blacklistedProperties);", span="134-134"];
m7_45 [cluster="Nancy.ModelBinding.ModuleExtensions.Bind<TModel>(Nancy.INancyModule, Nancy.ModelBinding.BindingConfig, params string[])", file="ModuleExtensions.cs", label="Exit Nancy.ModelBinding.ModuleExtensions.Bind<TModel>(Nancy.INancyModule, Nancy.ModelBinding.BindingConfig, params string[])", span="132-132"];
m7_81 [cluster="Nancy.ModelBinding.ModuleExtensions.BindTo<TModel>(Nancy.INancyModule, TModel, Nancy.ModelBinding.BindingConfig, params string[])", file="ModuleExtensions.cs", label="Entry Nancy.ModelBinding.ModuleExtensions.BindTo<TModel>(Nancy.INancyModule, TModel, Nancy.ModelBinding.BindingConfig, params string[])", span="263-263"];
m7_82 [cluster="Nancy.ModelBinding.ModuleExtensions.BindTo<TModel>(Nancy.INancyModule, TModel, Nancy.ModelBinding.BindingConfig, params string[])", file="ModuleExtensions.cs", label="dynamic adapter =\r\n                new DynamicModelBinderAdapter(module.ModelBinderLocator, module.Context, instance, configuration, blacklistedProperties)", span="265-266"];
m7_83 [cluster="Nancy.ModelBinding.ModuleExtensions.BindTo<TModel>(Nancy.INancyModule, TModel, Nancy.ModelBinding.BindingConfig, params string[])", file="ModuleExtensions.cs", label="return adapter;", span="268-268"];
m7_84 [cluster="Nancy.ModelBinding.ModuleExtensions.BindTo<TModel>(Nancy.INancyModule, TModel, Nancy.ModelBinding.BindingConfig, params string[])", file="ModuleExtensions.cs", label="Exit Nancy.ModelBinding.ModuleExtensions.BindTo<TModel>(Nancy.INancyModule, TModel, Nancy.ModelBinding.BindingConfig, params string[])", span="263-263"];
m7_2 [cluster="Nancy.ModelBinding.ModuleExtensions.ParseBlacklistedPropertiesExpressionTree<T>(System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression<System.Func<T, object>>>)", file="ModuleExtensions.cs", label="Exit Nancy.ModelBinding.ModuleExtensions.ParseBlacklistedPropertiesExpressionTree<T>(System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression<System.Func<T, object>>>)", span="17-17"];
m7_13 [cluster="Nancy.ModelBinding.ModuleExtensions.Bind(Nancy.INancyModule, Nancy.ModelBinding.BindingConfig, params string[])", file="ModuleExtensions.cs", label="Entry Nancy.ModelBinding.ModuleExtensions.Bind(Nancy.INancyModule, Nancy.ModelBinding.BindingConfig, params string[])", span="40-40"];
m7_14 [cluster="Nancy.ModelBinding.ModuleExtensions.Bind(Nancy.INancyModule, Nancy.ModelBinding.BindingConfig, params string[])", file="ModuleExtensions.cs", label="return new DynamicModelBinderAdapter(module.ModelBinderLocator, module.Context, null, configuration, blacklistedProperties);", span="42-42"];
m7_15 [cluster="Nancy.ModelBinding.ModuleExtensions.Bind(Nancy.INancyModule, Nancy.ModelBinding.BindingConfig, params string[])", file="ModuleExtensions.cs", label="Exit Nancy.ModelBinding.ModuleExtensions.Bind(Nancy.INancyModule, Nancy.ModelBinding.BindingConfig, params string[])", span="40-40"];
m7_9 [cluster="Nancy.ModelBinding.ModuleExtensions.Bind(Nancy.INancyModule, params string[])", file="ModuleExtensions.cs", label="Entry Nancy.ModelBinding.ModuleExtensions.Bind(Nancy.INancyModule, params string[])", span="28-28"];
m7_10 [cluster="Nancy.ModelBinding.ModuleExtensions.Bind(Nancy.INancyModule, params string[])", file="ModuleExtensions.cs", label="return module.Bind(BindingConfig.Default, blacklistedProperties);", span="30-30"];
m7_11 [cluster="Nancy.ModelBinding.ModuleExtensions.Bind(Nancy.INancyModule, params string[])", file="ModuleExtensions.cs", label="Exit Nancy.ModelBinding.ModuleExtensions.Bind(Nancy.INancyModule, params string[])", span="28-28"];
m7_40 [cluster="Nancy.ModelBinding.ModuleExtensions.Bind<TModel>(Nancy.INancyModule, Nancy.ModelBinding.BindingConfig)", file="ModuleExtensions.cs", label="Entry Nancy.ModelBinding.ModuleExtensions.Bind<TModel>(Nancy.INancyModule, Nancy.ModelBinding.BindingConfig)", span="119-119"];
m7_41 [cluster="Nancy.ModelBinding.ModuleExtensions.Bind<TModel>(Nancy.INancyModule, Nancy.ModelBinding.BindingConfig)", color=green, community=0, file="ModuleExtensions.cs", label="0: return module.Bind(configuration);", span="121-121"];
m7_42 [cluster="Nancy.ModelBinding.ModuleExtensions.Bind<TModel>(Nancy.INancyModule, Nancy.ModelBinding.BindingConfig)", file="ModuleExtensions.cs", label="Exit Nancy.ModelBinding.ModuleExtensions.Bind<TModel>(Nancy.INancyModule, Nancy.ModelBinding.BindingConfig)", span="119-119"];
m7_12 [cluster="Nancy.INancyModule.Bind(Nancy.ModelBinding.BindingConfig, params string[])", file="ModuleExtensions.cs", label="Entry Nancy.INancyModule.Bind(Nancy.ModelBinding.BindingConfig, params string[])", span="40-40"];
m7_66 [cluster="Nancy.INancyModule.BindTo<TModel>(TModel, Nancy.ModelBinding.BindingConfig, params string[])", file="ModuleExtensions.cs", label="Entry Nancy.INancyModule.BindTo<TModel>(TModel, Nancy.ModelBinding.BindingConfig, params string[])", span="263-263"];
m7_63 [cluster="Nancy.ModelBinding.ModuleExtensions.BindTo<TModel>(Nancy.INancyModule, TModel, params string[])", file="ModuleExtensions.cs", label="Entry Nancy.ModelBinding.ModuleExtensions.BindTo<TModel>(Nancy.INancyModule, TModel, params string[])", span="205-205"];
m7_64 [cluster="Nancy.ModelBinding.ModuleExtensions.BindTo<TModel>(Nancy.INancyModule, TModel, params string[])", file="ModuleExtensions.cs", label="return module.BindTo(instance, BindingConfig.Default, blacklistedProperties);", span="207-207"];
m7_65 [cluster="Nancy.ModelBinding.ModuleExtensions.BindTo<TModel>(Nancy.INancyModule, TModel, params string[])", file="ModuleExtensions.cs", label="Exit Nancy.ModelBinding.ModuleExtensions.BindTo<TModel>(Nancy.INancyModule, TModel, params string[])", span="205-205"];
m7_70 [cluster="Nancy.ModelBinding.ModuleExtensions.BindToAndValidate<TModel>(Nancy.INancyModule, TModel, params string[])", file="ModuleExtensions.cs", label="Entry Nancy.ModelBinding.ModuleExtensions.BindToAndValidate<TModel>(Nancy.INancyModule, TModel, params string[])", span="231-231"];
m7_72 [cluster="Nancy.ModelBinding.ModuleExtensions.BindToAndValidate<TModel>(Nancy.INancyModule, TModel, params string[])", file="ModuleExtensions.cs", label="module.Validate(model)", span="234-234"];
m7_71 [cluster="Nancy.ModelBinding.ModuleExtensions.BindToAndValidate<TModel>(Nancy.INancyModule, TModel, params string[])", file="ModuleExtensions.cs", label="var model = module.BindTo(instance, blacklistedProperties)", span="233-233"];
m7_73 [cluster="Nancy.ModelBinding.ModuleExtensions.BindToAndValidate<TModel>(Nancy.INancyModule, TModel, params string[])", file="ModuleExtensions.cs", label="return model;", span="235-235"];
m7_74 [cluster="Nancy.ModelBinding.ModuleExtensions.BindToAndValidate<TModel>(Nancy.INancyModule, TModel, params string[])", file="ModuleExtensions.cs", label="Exit Nancy.ModelBinding.ModuleExtensions.BindToAndValidate<TModel>(Nancy.INancyModule, TModel, params string[])", span="231-231"];
m7_5 [cluster="lambda expression", file="ModuleExtensions.cs", label="Entry lambda expression", span="19-19"];
m7_6 [cluster="lambda expression", file="ModuleExtensions.cs", label="p.GetTargetMemberInfo().Name", span="19-19"];
m7_7 [cluster="lambda expression", file="ModuleExtensions.cs", label="Exit lambda expression", span="19-19"];
m7_20 [cluster="Nancy.INancyModule.Bind(params string[])", file="ModuleExtensions.cs", label="Entry Nancy.INancyModule.Bind(params string[])", span="28-28"];
m7_58 [cluster="Nancy.ModelBinding.ModuleExtensions.BindAndValidate<TModel>(Nancy.INancyModule, Nancy.ModelBinding.BindingConfig, params System.Linq.Expressions.Expression<System.Func<TModel, object>>[])", file="ModuleExtensions.cs", label="Entry Nancy.ModelBinding.ModuleExtensions.BindAndValidate<TModel>(Nancy.INancyModule, Nancy.ModelBinding.BindingConfig, params System.Linq.Expressions.Expression<System.Func<TModel, object>>[])", span="191-191"];
m7_59 [cluster="Nancy.ModelBinding.ModuleExtensions.BindAndValidate<TModel>(Nancy.INancyModule, Nancy.ModelBinding.BindingConfig, params System.Linq.Expressions.Expression<System.Func<TModel, object>>[])", file="ModuleExtensions.cs", label="var model = module.Bind<TModel>(configuration, blacklistedProperties.ParseBlacklistedPropertiesExpressionTree())", span="193-193"];
m7_60 [cluster="Nancy.ModelBinding.ModuleExtensions.BindAndValidate<TModel>(Nancy.INancyModule, Nancy.ModelBinding.BindingConfig, params System.Linq.Expressions.Expression<System.Func<TModel, object>>[])", file="ModuleExtensions.cs", label="module.Validate(model)", span="194-194"];
m7_61 [cluster="Nancy.ModelBinding.ModuleExtensions.BindAndValidate<TModel>(Nancy.INancyModule, Nancy.ModelBinding.BindingConfig, params System.Linq.Expressions.Expression<System.Func<TModel, object>>[])", file="ModuleExtensions.cs", label="return model;", span="195-195"];
m7_62 [cluster="Nancy.ModelBinding.ModuleExtensions.BindAndValidate<TModel>(Nancy.INancyModule, Nancy.ModelBinding.BindingConfig, params System.Linq.Expressions.Expression<System.Func<TModel, object>>[])", file="ModuleExtensions.cs", label="Exit Nancy.ModelBinding.ModuleExtensions.BindAndValidate<TModel>(Nancy.INancyModule, Nancy.ModelBinding.BindingConfig, params System.Linq.Expressions.Expression<System.Func<TModel, object>>[])", span="191-191"];
m7_3 [cluster="Unk.Select", file="ModuleExtensions.cs", label="Entry Unk.Select", span=""];
m7_8 [cluster="System.Linq.Expressions.Expression.GetTargetMemberInfo()", file="ModuleExtensions.cs", label="Entry System.Linq.Expressions.Expression.GetTargetMemberInfo()", span="15-15"];
m7_24 [cluster="Nancy.ModelBinding.ModuleExtensions.Bind<TModel>(Nancy.INancyModule, params System.Linq.Expressions.Expression<System.Func<TModel, object>>[])", file="ModuleExtensions.cs", label="Entry Nancy.ModelBinding.ModuleExtensions.Bind<TModel>(Nancy.INancyModule, params System.Linq.Expressions.Expression<System.Func<TModel, object>>[])", span="76-76"];
m7_25 [cluster="Nancy.ModelBinding.ModuleExtensions.Bind<TModel>(Nancy.INancyModule, params System.Linq.Expressions.Expression<System.Func<TModel, object>>[])", file="ModuleExtensions.cs", label="return module.Bind<TModel>(blacklistedProperties.ParseBlacklistedPropertiesExpressionTree());", span="78-78"];
m7_26 [cluster="Nancy.ModelBinding.ModuleExtensions.Bind<TModel>(Nancy.INancyModule, params System.Linq.Expressions.Expression<System.Func<TModel, object>>[])", file="ModuleExtensions.cs", label="Exit Nancy.ModelBinding.ModuleExtensions.Bind<TModel>(Nancy.INancyModule, params System.Linq.Expressions.Expression<System.Func<TModel, object>>[])", span="76-76"];
m7_28 [cluster="Nancy.INancyModule.Bind<TModel>(params string[])", file="ModuleExtensions.cs", label="Entry Nancy.INancyModule.Bind<TModel>(params string[])", span="63-63"];
m7_67 [cluster="Nancy.ModelBinding.ModuleExtensions.BindTo<TModel>(Nancy.INancyModule, TModel, params System.Linq.Expressions.Expression<System.Func<TModel, object>>[])", file="ModuleExtensions.cs", label="Entry Nancy.ModelBinding.ModuleExtensions.BindTo<TModel>(Nancy.INancyModule, TModel, params System.Linq.Expressions.Expression<System.Func<TModel, object>>[])", span="218-218"];
m7_68 [cluster="Nancy.ModelBinding.ModuleExtensions.BindTo<TModel>(Nancy.INancyModule, TModel, params System.Linq.Expressions.Expression<System.Func<TModel, object>>[])", color=green, community=0, file="ModuleExtensions.cs", label="0: return module.BindTo(instance, BindingConfig.Default, blacklistedProperties.ParseBlacklistedPropertiesExpressionTree());", span="220-220"];
m7_69 [cluster="Nancy.ModelBinding.ModuleExtensions.BindTo<TModel>(Nancy.INancyModule, TModel, params System.Linq.Expressions.Expression<System.Func<TModel, object>>[])", file="ModuleExtensions.cs", label="Exit Nancy.ModelBinding.ModuleExtensions.BindTo<TModel>(Nancy.INancyModule, TModel, params System.Linq.Expressions.Expression<System.Func<TModel, object>>[])", span="218-218"];
m7_21 [cluster="Nancy.ModelBinding.ModuleExtensions.Bind<TModel>(Nancy.INancyModule, params string[])", file="ModuleExtensions.cs", label="Entry Nancy.ModelBinding.ModuleExtensions.Bind<TModel>(Nancy.INancyModule, params string[])", span="63-63"];
m7_22 [cluster="Nancy.ModelBinding.ModuleExtensions.Bind<TModel>(Nancy.INancyModule, params string[])", file="ModuleExtensions.cs", label="return module.Bind(blacklistedProperties);", span="65-65"];
m7_23 [cluster="Nancy.ModelBinding.ModuleExtensions.Bind<TModel>(Nancy.INancyModule, params string[])", file="ModuleExtensions.cs", label="Exit Nancy.ModelBinding.ModuleExtensions.Bind<TModel>(Nancy.INancyModule, params string[])", span="63-63"];
m7_46 [cluster="Nancy.ModelBinding.ModuleExtensions.Bind<TModel>(Nancy.INancyModule, Nancy.ModelBinding.BindingConfig, System.Linq.Expressions.Expression<System.Func<TModel, object>>)", file="ModuleExtensions.cs", label="Entry Nancy.ModelBinding.ModuleExtensions.Bind<TModel>(Nancy.INancyModule, Nancy.ModelBinding.BindingConfig, System.Linq.Expressions.Expression<System.Func<TModel, object>>)", span="146-146"];
m7_47 [cluster="Nancy.ModelBinding.ModuleExtensions.Bind<TModel>(Nancy.INancyModule, Nancy.ModelBinding.BindingConfig, System.Linq.Expressions.Expression<System.Func<TModel, object>>)", file="ModuleExtensions.cs", label="return module.Bind(configuration, new [] { blacklistedProperty }.ParseBlacklistedPropertiesExpressionTree());", span="148-148"];
m7_48 [cluster="Nancy.ModelBinding.ModuleExtensions.Bind<TModel>(Nancy.INancyModule, Nancy.ModelBinding.BindingConfig, System.Linq.Expressions.Expression<System.Func<TModel, object>>)", file="ModuleExtensions.cs", label="Exit Nancy.ModelBinding.ModuleExtensions.Bind<TModel>(Nancy.INancyModule, Nancy.ModelBinding.BindingConfig, System.Linq.Expressions.Expression<System.Func<TModel, object>>)", span="146-146"];
m8_8 [cluster="Nancy.ViewEngines.Razor.NancyRazorErrorView.LoadResource(string)", file="NancyRazorErrorView.cs", label="Entry Nancy.ViewEngines.Razor.NancyRazorErrorView.LoadResource(string)", span="44-44"];
m8_9 [cluster="Nancy.ViewEngines.Razor.NancyRazorErrorView.LoadResource(string)", file="NancyRazorErrorView.cs", label="var resourceStream = typeof(NancyRazorErrorView).Assembly.GetManifestResourceStream(String.Format(''Nancy.ViewEngines.Razor.Resources.{0}'', filename))", span="46-46"];
m8_10 [cluster="Nancy.ViewEngines.Razor.NancyRazorErrorView.LoadResource(string)", file="NancyRazorErrorView.cs", label="resourceStream == null", span="48-48"];
m8_12 [cluster="Nancy.ViewEngines.Razor.NancyRazorErrorView.LoadResource(string)", file="NancyRazorErrorView.cs", label="var reader = new StreamReader(resourceStream)", span="53-53"];
m8_11 [cluster="Nancy.ViewEngines.Razor.NancyRazorErrorView.LoadResource(string)", file="NancyRazorErrorView.cs", label="return string.Empty;", span="50-50"];
m8_13 [cluster="Nancy.ViewEngines.Razor.NancyRazorErrorView.LoadResource(string)", file="NancyRazorErrorView.cs", label="return reader.ReadToEnd();", span="55-55"];
m8_14 [cluster="Nancy.ViewEngines.Razor.NancyRazorErrorView.LoadResource(string)", file="NancyRazorErrorView.cs", label="Exit Nancy.ViewEngines.Razor.NancyRazorErrorView.LoadResource(string)", span="44-44"];
m8_17 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="NancyRazorErrorView.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m8_0 [cluster="Nancy.ViewEngines.Razor.NancyRazorErrorView.NancyRazorErrorView(string)", file="NancyRazorErrorView.cs", label="Entry Nancy.ViewEngines.Razor.NancyRazorErrorView.NancyRazorErrorView(string)", span="27-27"];
m8_1 [cluster="Nancy.ViewEngines.Razor.NancyRazorErrorView.NancyRazorErrorView(string)", file="NancyRazorErrorView.cs", label="this.Message = message", span="28-28"];
m8_2 [cluster="Nancy.ViewEngines.Razor.NancyRazorErrorView.NancyRazorErrorView(string)", file="NancyRazorErrorView.cs", label="Exit Nancy.ViewEngines.Razor.NancyRazorErrorView.NancyRazorErrorView(string)", span="27-27"];
m8_3 [cluster="Nancy.ViewEngines.Razor.NancyRazorErrorView.Execute()", file="NancyRazorErrorView.cs", label="Entry Nancy.ViewEngines.Razor.NancyRazorErrorView.Execute()", span="39-39"];
m8_4 [cluster="Nancy.ViewEngines.Razor.NancyRazorErrorView.Execute()", color=red, community=0, file="NancyRazorErrorView.cs", label="0: base.WriteLiteral(Template.Replace(''[DETAILS]'', StaticConfiguration.DisableErrorTraces ? String.Empty : this.Message))", span="41-41"];
m8_5 [cluster="Nancy.ViewEngines.Razor.NancyRazorErrorView.Execute()", file="NancyRazorErrorView.cs", label="Exit Nancy.ViewEngines.Razor.NancyRazorErrorView.Execute()", span="39-39"];
m8_7 [cluster="Nancy.ViewEngines.Razor.NancyRazorViewBase<TModel>.WriteLiteral(object)", file="NancyRazorErrorView.cs", label="Entry Nancy.ViewEngines.Razor.NancyRazorViewBase<TModel>.WriteLiteral(object)", span="157-157"];
m8_18 [cluster="System.IO.StreamReader.ReadToEnd()", file="NancyRazorErrorView.cs", label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0"];
m8_15 [cluster="string.Format(string, object)", file="NancyRazorErrorView.cs", label="Entry string.Format(string, object)", span="0-0"];
m8_16 [cluster="System.Reflection.Assembly.GetManifestResourceStream(string)", file="NancyRazorErrorView.cs", label="Entry System.Reflection.Assembly.GetManifestResourceStream(string)", span="0-0"];
m8_19 [file="NancyRazorErrorView.cs", label="Nancy.ViewEngines.Razor.NancyRazorErrorView", span=""];
m9_6 [cluster="System.Collections.Generic.List<T>.List()", file="NegotiationContext.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m9_13 [cluster="Unk.Any", file="NegotiationContext.cs", label="Entry Unk.Any", span=""];
m9_14 [cluster="Unk.First", file="NegotiationContext.cs", label="Entry Unk.First", span=""];
m9_0 [cluster="Nancy.Responses.Negotiation.NegotiationContext.NegotiationContext()", file="NegotiationContext.cs", label="Entry Nancy.Responses.Negotiation.NegotiationContext.NegotiationContext()", span="15-15"];
m9_1 [cluster="Nancy.Responses.Negotiation.NegotiationContext.NegotiationContext()", file="NegotiationContext.cs", label="this.Cookies = new List<INancyCookie>()", span="17-17"];
m9_2 [cluster="Nancy.Responses.Negotiation.NegotiationContext.NegotiationContext()", file="NegotiationContext.cs", label="this.PermissableMediaRanges = new List<MediaRange>(new[] { (MediaRange)''*/*'' })", span="18-18"];
m9_3 [cluster="Nancy.Responses.Negotiation.NegotiationContext.NegotiationContext()", file="NegotiationContext.cs", label="this.MediaRangeModelMappings = new Dictionary<MediaRange, Func<dynamic>>()", span="19-19"];
m9_4 [cluster="Nancy.Responses.Negotiation.NegotiationContext.NegotiationContext()", file="NegotiationContext.cs", label="this.Headers = new Dictionary<string, string>()", span="20-20"];
m9_5 [cluster="Nancy.Responses.Negotiation.NegotiationContext.NegotiationContext()", file="NegotiationContext.cs", label="Exit Nancy.Responses.Negotiation.NegotiationContext.NegotiationContext()", span="15-15"];
m9_7 [cluster="System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", file="NegotiationContext.cs", label="Entry System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m9_15 [cluster="Unk.Invoke", file="NegotiationContext.cs", label="Entry Unk.Invoke", span=""];
m9_9 [cluster="Nancy.Responses.Negotiation.NegotiationContext.GetModelForMediaRange(Nancy.Responses.Negotiation.MediaRange)", file="NegotiationContext.cs", label="Entry Nancy.Responses.Negotiation.NegotiationContext.GetModelForMediaRange(Nancy.Responses.Negotiation.MediaRange)", span="82-82"];
m9_10 [cluster="Nancy.Responses.Negotiation.NegotiationContext.GetModelForMediaRange(Nancy.Responses.Negotiation.MediaRange)", file="NegotiationContext.cs", label="var matching =\r\n                this.MediaRangeModelMappings.Any(\r\n                    m => mediaRange.Type.Matches(m.Key.Type) && mediaRange.Subtype.Matches(m.Key.Subtype))", span="84-86"];
m9_11 [cluster="Nancy.Responses.Negotiation.NegotiationContext.GetModelForMediaRange(Nancy.Responses.Negotiation.MediaRange)", file="NegotiationContext.cs", label="return matching ?\r\n                this.MediaRangeModelMappings.First(m => mediaRange.Type.Matches(m.Key.Type) && mediaRange.Subtype.Matches(m.Key.Subtype)).Value.Invoke() :\r\n                this.DefaultModel;", span="88-90"];
m9_12 [cluster="Nancy.Responses.Negotiation.NegotiationContext.GetModelForMediaRange(Nancy.Responses.Negotiation.MediaRange)", file="NegotiationContext.cs", label="Exit Nancy.Responses.Negotiation.NegotiationContext.GetModelForMediaRange(Nancy.Responses.Negotiation.MediaRange)", span="82-82"];
m9_20 [cluster="lambda expression", file="NegotiationContext.cs", label="Entry lambda expression", span="89-89"];
m9_17 [cluster="lambda expression", file="NegotiationContext.cs", label="mediaRange.Type.Matches(m.Key.Type) && mediaRange.Subtype.Matches(m.Key.Subtype)", span="86-86"];
m9_21 [cluster="lambda expression", file="NegotiationContext.cs", label="mediaRange.Type.Matches(m.Key.Type) && mediaRange.Subtype.Matches(m.Key.Subtype)", span="89-89"];
m9_16 [cluster="lambda expression", file="NegotiationContext.cs", label="Entry lambda expression", span="86-86"];
m9_18 [cluster="lambda expression", file="NegotiationContext.cs", label="Exit lambda expression", span="86-86"];
m9_22 [cluster="lambda expression", file="NegotiationContext.cs", label="Exit lambda expression", span="89-89"];
m9_19 [cluster="Nancy.Responses.Negotiation.MediaType.Matches(Nancy.Responses.Negotiation.MediaType)", file="NegotiationContext.cs", label="Entry Nancy.Responses.Negotiation.MediaType.Matches(Nancy.Responses.Negotiation.MediaType)", span="37-37"];
m9_23 [file="NegotiationContext.cs", label="Nancy.Responses.Negotiation.NegotiationContext", span=""];
m9_24 [file="NegotiationContext.cs", label="Nancy.Responses.Negotiation.MediaRange", span=""];
m10_16 [cluster="Nancy.NancyEngine.HandleRequest(Nancy.IRequest)", file="NegotiatorExtensions.cs", label="Entry Nancy.NancyEngine.HandleRequest(Nancy.IRequest)", span="47-47"];
m10_0 [cluster="Nancy.Hosting.Wcf.NancyWcfGenericService.NancyWcfGenericService()", file="NegotiatorExtensions.cs", label="Entry Nancy.Hosting.Wcf.NancyWcfGenericService.NancyWcfGenericService()", span="18-18"];
m10_1 [cluster="Nancy.Hosting.Wcf.NancyWcfGenericService.NancyWcfGenericService()", file="NegotiatorExtensions.cs", label="Exit Nancy.Hosting.Wcf.NancyWcfGenericService.NancyWcfGenericService()", span="18-18"];
m10_5 [cluster="Nancy.NancyEngine.NancyEngine(Nancy.INancyModuleLocator, Nancy.Routing.IRouteResolver, Nancy.INancyApplication)", file="NegotiatorExtensions.cs", label="Entry Nancy.NancyEngine.NancyEngine(Nancy.INancyModuleLocator, Nancy.Routing.IRouteResolver, Nancy.INancyApplication)", span="20-20"];
m10_25 [cluster="Unk.Concat", file="NegotiatorExtensions.cs", label="Entry Unk.Concat", span=""];
m10_7 [cluster="Nancy.NancyApplication.NancyApplication()", file="NegotiatorExtensions.cs", label="Entry Nancy.NancyApplication.NancyApplication()", span="12-12"];
m10_15 [cluster="Unk.CreateNancyRequestFromIncomingWebRequest", file="NegotiatorExtensions.cs", label="Entry Unk.CreateNancyRequestFromIncomingWebRequest", span=""];
m10_8 [cluster="Nancy.Hosting.Wcf.NancyWcfGenericService.HandleRequests(System.IO.Stream)", file="NegotiatorExtensions.cs", label="Entry Nancy.Hosting.Wcf.NancyWcfGenericService.HandleRequests(System.IO.Stream)", span="33-33"];
m10_9 [cluster="Nancy.Hosting.Wcf.NancyWcfGenericService.HandleRequests(System.IO.Stream)", file="NegotiatorExtensions.cs", label="var webContext = WebOperationContext.Current", span="35-35"];
m10_10 [cluster="Nancy.Hosting.Wcf.NancyWcfGenericService.HandleRequests(System.IO.Stream)", file="NegotiatorExtensions.cs", label="var nancyRequest = CreateNancyRequestFromIncomingWebRequest(webContext.IncomingRequest, requestBody)", span="37-37"];
m10_12 [cluster="Nancy.Hosting.Wcf.NancyWcfGenericService.HandleRequests(System.IO.Stream)", file="NegotiatorExtensions.cs", label="SetNancyResponseToOutgoingWebResponse(webContext.OutgoingResponse, nancyResponse)", span="40-40"];
m10_13 [cluster="Nancy.Hosting.Wcf.NancyWcfGenericService.HandleRequests(System.IO.Stream)", file="NegotiatorExtensions.cs", label="return webContext.CreateStreamResponse(nancyResponse.Contents, nancyResponse.ContentType);", span="42-42"];
m10_11 [cluster="Nancy.Hosting.Wcf.NancyWcfGenericService.HandleRequests(System.IO.Stream)", file="NegotiatorExtensions.cs", label="var nancyResponse = engine.HandleRequest(nancyRequest)", span="38-38"];
m10_14 [cluster="Nancy.Hosting.Wcf.NancyWcfGenericService.HandleRequests(System.IO.Stream)", file="NegotiatorExtensions.cs", label="Exit Nancy.Hosting.Wcf.NancyWcfGenericService.HandleRequests(System.IO.Stream)", span="33-33"];
m10_2 [cluster="Nancy.Hosting.Wcf.NancyWcfGenericService.NancyWcfGenericService(Nancy.INancyModuleLocator)", file="NegotiatorExtensions.cs", label="Entry Nancy.Hosting.Wcf.NancyWcfGenericService.NancyWcfGenericService(Nancy.INancyModuleLocator)", span="27-27"];
m10_3 [cluster="Nancy.Hosting.Wcf.NancyWcfGenericService.NancyWcfGenericService(Nancy.INancyModuleLocator)", file="NegotiatorExtensions.cs", label="engine = new NancyEngine(moduleLocator, new RouteResolver(), new NancyApplication())", span="29-29"];
m10_4 [cluster="Nancy.Hosting.Wcf.NancyWcfGenericService.NancyWcfGenericService(Nancy.INancyModuleLocator)", file="NegotiatorExtensions.cs", label="Exit Nancy.Hosting.Wcf.NancyWcfGenericService.NancyWcfGenericService(Nancy.INancyModuleLocator)", span="27-27"];
m10_19 [cluster="Nancy.Hosting.Wcf.NancyWcfGenericService.CreateNancyRequestFromIncomingWebRequest(IncomingWebRequestContext, System.IO.Stream)", file="NegotiatorExtensions.cs", label="Entry Nancy.Hosting.Wcf.NancyWcfGenericService.CreateNancyRequestFromIncomingWebRequest(IncomingWebRequestContext, System.IO.Stream)", span="45-45"];
m10_20 [cluster="Nancy.Hosting.Wcf.NancyWcfGenericService.CreateNancyRequestFromIncomingWebRequest(IncomingWebRequestContext, System.IO.Stream)", file="NegotiatorExtensions.cs", label="var relativeUri =\r\n                webRequest.UriTemplateMatch.BaseUri.MakeRelativeUri(webRequest.UriTemplateMatch.RequestUri)", span="47-48"];
m10_21 [cluster="Nancy.Hosting.Wcf.NancyWcfGenericService.CreateNancyRequestFromIncomingWebRequest(IncomingWebRequestContext, System.IO.Stream)", file="NegotiatorExtensions.cs", label="return new Request(\r\n                webRequest.Method,\r\n                string.Concat(''/'', relativeUri),\r\n                webRequest.Headers.ToDictionary(),\r\n                requestBody);", span="50-54"];
m10_22 [cluster="Nancy.Hosting.Wcf.NancyWcfGenericService.CreateNancyRequestFromIncomingWebRequest(IncomingWebRequestContext, System.IO.Stream)", file="NegotiatorExtensions.cs", label="Exit Nancy.Hosting.Wcf.NancyWcfGenericService.CreateNancyRequestFromIncomingWebRequest(IncomingWebRequestContext, System.IO.Stream)", span="45-45"];
m10_26 [cluster="Unk.ToDictionary", file="NegotiatorExtensions.cs", label="Entry Unk.ToDictionary", span=""];
m10_18 [cluster="Unk.CreateStreamResponse", file="NegotiatorExtensions.cs", label="Entry Unk.CreateStreamResponse", span=""];
m10_17 [cluster="Unk.SetNancyResponseToOutgoingWebResponse", file="NegotiatorExtensions.cs", label="Entry Unk.SetNancyResponseToOutgoingWebResponse", span=""];
m10_6 [cluster="Nancy.Routing.RouteResolver.RouteResolver()", file="NegotiatorExtensions.cs", label="Entry Nancy.Routing.RouteResolver.RouteResolver()", span="10-10"];
m10_27 [cluster="Nancy.Hosting.Wcf.NancyWcfGenericService.SetNancyResponseToOutgoingWebResponse(OutgoingWebResponseContext, Nancy.Response)", file="NegotiatorExtensions.cs", label="Entry Nancy.Hosting.Wcf.NancyWcfGenericService.SetNancyResponseToOutgoingWebResponse(OutgoingWebResponseContext, Nancy.Response)", span="57-57"];
m10_28 [cluster="Nancy.Hosting.Wcf.NancyWcfGenericService.SetNancyResponseToOutgoingWebResponse(OutgoingWebResponseContext, Nancy.Response)", file="NegotiatorExtensions.cs", label="webResponse.ContentType = nancyResponse.ContentType", span="59-59"];
m10_29 [cluster="Nancy.Hosting.Wcf.NancyWcfGenericService.SetNancyResponseToOutgoingWebResponse(OutgoingWebResponseContext, Nancy.Response)", file="NegotiatorExtensions.cs", label="webResponse.StatusCode = nancyResponse.StatusCode", span="60-60"];
m10_30 [cluster="Nancy.Hosting.Wcf.NancyWcfGenericService.SetNancyResponseToOutgoingWebResponse(OutgoingWebResponseContext, Nancy.Response)", file="NegotiatorExtensions.cs", label="Exit Nancy.Hosting.Wcf.NancyWcfGenericService.SetNancyResponseToOutgoingWebResponse(OutgoingWebResponseContext, Nancy.Response)", span="57-57"];
m10_24 [cluster="Request.cstr", file="NegotiatorExtensions.cs", label="Entry Request.cstr", span=""];
m10_23 [cluster="Unk.MakeRelativeUri", file="NegotiatorExtensions.cs", label="Entry Unk.MakeRelativeUri", span=""];
m10_31 [file="NegotiatorExtensions.cs", label="Nancy.Hosting.Wcf.NancyWcfGenericService", span=""];
m11_0 [cluster="Nancy.Routing.IRouteResolver.GetRoute(Nancy.IRequest, System.Collections.Generic.IEnumerable<Nancy.Routing.RouteDescription>)", file="Response.cs", label="Entry Nancy.Routing.IRouteResolver.GetRoute(Nancy.IRequest, System.Collections.Generic.IEnumerable<Nancy.Routing.RouteDescription>)", span="6-6"];
m11_1 [cluster="Nancy.Routing.IRouteResolver.GetRoute(Nancy.IRequest, System.Collections.Generic.IEnumerable<Nancy.Routing.RouteDescription>)", file="Response.cs", label="Exit Nancy.Routing.IRouteResolver.GetRoute(Nancy.IRequest, System.Collections.Generic.IEnumerable<Nancy.Routing.RouteDescription>)", span="6-6"];
n111 -> n3  [color=darkseagreen4, key=1, label="Nancy.DynamicDictionary", style=dashed];
n111 -> n12  [color=darkseagreen4, key=1, label="Nancy.DynamicDictionary", style=dashed];
n111 -> n16  [color=darkseagreen4, key=1, label="Nancy.DynamicDictionary", style=dashed];
n111 -> n17  [color=darkseagreen4, key=1, label="Nancy.DynamicDictionary", style=dashed];
n111 -> n23  [color=darkseagreen4, key=1, label="Nancy.DynamicDictionary", style=dashed];
n111 -> n26  [color=darkseagreen4, key=1, label="Nancy.DynamicDictionary", style=dashed];
n111 -> n30  [color=darkseagreen4, key=1, label="Nancy.DynamicDictionary", style=dashed];
n111 -> n35  [color=darkseagreen4, key=1, label="Nancy.DynamicDictionary", style=dashed];
n111 -> n42  [color=darkseagreen4, key=1, label="Nancy.DynamicDictionary", style=dashed];
n111 -> n44  [color=darkseagreen4, key=1, label="Nancy.DynamicDictionary", style=dashed];
n111 -> n48  [color=darkseagreen4, key=1, label="Nancy.DynamicDictionary", style=dashed];
n111 -> n51  [color=darkseagreen4, key=1, label="Nancy.DynamicDictionary", style=dashed];
n111 -> n55  [color=darkseagreen4, key=1, label="Nancy.DynamicDictionary", style=dashed];
n111 -> n58  [color=darkseagreen4, key=1, label="Nancy.DynamicDictionary", style=dashed];
n111 -> n62  [color=darkseagreen4, key=1, label="Nancy.DynamicDictionary", style=dashed];
n111 -> n68  [color=darkseagreen4, key=1, label="Nancy.DynamicDictionary", style=dashed];
n111 -> n71  [color=darkseagreen4, key=1, label="Nancy.DynamicDictionary", style=dashed];
n111 -> n75  [color=darkseagreen4, key=1, label="Nancy.DynamicDictionary", style=dashed];
n111 -> n76  [color=darkseagreen4, key=1, label="Nancy.DynamicDictionary", style=dashed];
n111 -> n81  [color=darkseagreen4, key=1, label="Nancy.DynamicDictionary", style=dashed];
n111 -> n86  [color=darkseagreen4, key=1, label="Nancy.DynamicDictionary", style=dashed];
n111 -> n90  [color=darkseagreen4, key=1, label="Nancy.DynamicDictionary", style=dashed];
n111 -> n91  [color=darkseagreen4, key=1, label="Nancy.DynamicDictionary", style=dashed];
n111 -> n94  [color=darkseagreen4, key=1, label="Nancy.DynamicDictionary", style=dashed];
n111 -> n103  [color=darkseagreen4, key=1, label="Nancy.DynamicDictionary", style=dashed];
n0 -> n1  [key=0, style=solid];
n1 -> n0  [color=blue, key=0, style=bold];
n2 -> n3  [key=0, style=solid];
n3 -> n4  [key=0, style=solid];
n4 -> n2  [color=blue, key=0, style=bold];
n5 -> n6  [key=0, style=solid];
n5 -> n7  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, object>", style=dashed];
n5 -> n8  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, object>", style=dashed];
n6 -> n7  [key=0, style=solid];
n6 -> n2  [key=2, style=dotted];
n6 -> n8  [color=darkseagreen4, key=1, label=instance, style=dashed];
n6 -> n9  [color=darkseagreen4, key=1, label=instance, style=dashed];
n7 -> n8  [key=0, style=solid];
n7 -> n9  [key=0, style=solid];
n8 -> n7  [key=0, style=solid];
n9 -> n10  [key=0, style=solid];
n10 -> n5  [color=blue, key=0, style=bold];
n11 -> n12  [key=0, style=solid];
n12 -> n13  [key=0, style=solid];
n13 -> n14  [key=0, style=solid];
n14 -> n11  [color=blue, key=0, style=bold];
n15 -> n16  [key=0, style=solid];
n16 -> n17  [key=0, style=solid];
n16 -> n18  [key=0, style=solid];
n16 -> n20  [key=2, style=dotted];
n16 -> n19  [color=darkseagreen4, key=1, label="out object", style=dashed];
n17 -> n18  [key=0, style=solid];
n17 -> n21  [key=2, style=dotted];
n17 -> n19  [color=darkseagreen4, key=1, label="out object", style=dashed];
n18 -> n19  [key=0, style=solid];
n19 -> n15  [color=blue, key=0, style=bold];
n22 -> n23  [key=0, style=solid];
n23 -> n24  [key=0, style=solid];
n24 -> n22  [color=blue, key=0, style=bold];
n25 -> n26  [key=0, style=solid];
n26 -> n27  [key=0, style=solid];
n26 -> n28  [key=2, style=dotted];
n27 -> n25  [color=blue, key=0, style=bold];
n29 -> n30  [key=0, style=solid];
n30 -> n31  [key=0, style=solid];
n30 -> n28  [key=2, style=dotted];
n31 -> n29  [color=blue, key=0, style=bold];
n32 -> n33  [key=0, style=solid];
n32 -> n35  [color=darkseagreen4, key=1, label="Nancy.DynamicDictionary", style=dashed];
n33 -> n34  [key=0, style=solid];
n33 -> n35  [key=0, style=solid];
n33 -> n37  [key=2, style=dotted];
n35 -> n36  [key=0, style=solid];
n35 -> n37  [key=2, style=dotted];
n35 -> n38  [key=2, style=dotted];
n34 -> n36  [key=0, style=solid];
n36 -> n32  [color=blue, key=0, style=bold];
n39 -> n40  [key=0, style=solid];
n39 -> n42  [color=darkseagreen4, key=1, label=object, style=dashed];
n39 -> n44  [color=darkseagreen4, key=1, label=object, style=dashed];
n40 -> n41  [key=0, style=solid];
n40 -> n42  [key=0, style=solid];
n40 -> n37  [key=2, style=dotted];
n42 -> n43  [key=0, style=solid];
n42 -> n44  [key=0, style=solid];
n42 -> n37  [key=2, style=dotted];
n44 -> n45  [key=0, style=solid];
n44 -> n46  [key=2, style=dotted];
n44 -> n32  [key=2, style=dotted];
n41 -> n45  [key=0, style=solid];
n43 -> n45  [key=0, style=solid];
n45 -> n39  [color=blue, key=0, style=bold];
n47 -> n48  [key=0, style=solid];
n48 -> n49  [key=0, style=solid];
n48 -> n28  [key=2, style=dotted];
n49 -> n47  [color=blue, key=0, style=bold];
n50 -> n51  [key=0, style=solid];
n51 -> n52  [key=0, style=solid];
n51 -> n53  [key=2, style=dotted];
n52 -> n50  [color=blue, key=0, style=bold];
n54 -> n55  [key=0, style=solid];
n55 -> n56  [key=0, style=solid];
n56 -> n54  [color=blue, key=0, style=bold];
n57 -> n58  [key=0, style=solid];
n58 -> n59  [key=0, style=solid];
n58 -> n58  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, dynamic>", style=dashed];
n59 -> n57  [color=blue, key=0, style=bold];
n60 -> n61  [key=0, style=solid];
n61 -> n62  [key=0, style=solid];
n61 -> n64  [key=2, style=dotted];
n61 -> n61  [color=darkseagreen4, key=1, label=string, style=dashed];
n62 -> n63  [key=0, style=solid];
n62 -> n65  [key=2, style=dotted];
n64 -> n98  [key=0, style=solid];
n63 -> n60  [color=blue, key=0, style=bold];
n66 -> n67  [key=0, style=solid];
n67 -> n68  [key=0, style=solid];
n67 -> n64  [key=2, style=dotted];
n67 -> n67  [color=darkseagreen4, key=1, label=string, style=dashed];
n68 -> n69  [key=0, style=solid];
n68 -> n20  [key=2, style=dotted];
n69 -> n66  [color=blue, key=0, style=bold];
n70 -> n71  [key=0, style=solid];
n71 -> n72  [key=0, style=solid];
n71 -> n73  [key=2, style=dotted];
n72 -> n70  [color=blue, key=0, style=bold];
n74 -> n75  [key=0, style=solid];
n75 -> n76  [key=0, style=solid];
n75 -> n78  [key=2, style=dotted];
n76 -> n77  [key=0, style=solid];
n76 -> n79  [key=2, style=dotted];
n78 -> n94  [key=0, style=solid];
n77 -> n74  [color=blue, key=0, style=bold];
n80 -> n81  [key=0, style=solid];
n81 -> n82  [key=0, style=solid];
n81 -> n83  [key=2, style=dotted];
n82 -> n80  [color=blue, key=0, style=bold];
n84 -> n85  [key=0, style=solid];
n85 -> n86  [key=0, style=solid];
n85 -> n64  [key=2, style=dotted];
n85 -> n85  [color=darkseagreen4, key=1, label=string, style=dashed];
n86 -> n87  [key=0, style=solid];
n86 -> n88  [key=2, style=dotted];
n87 -> n84  [color=blue, key=0, style=bold];
n89 -> n90  [key=0, style=solid];
n90 -> n91  [key=0, style=solid];
n90 -> n78  [key=2, style=dotted];
n91 -> n92  [key=0, style=solid];
n91 -> n93  [key=2, style=dotted];
n92 -> n89  [color=blue, key=0, style=bold];
n94 -> n95  [key=0, style=solid];
n94 -> n97  [key=2, style=dotted];
n94 -> n21  [key=2, style=dotted];
n94 -> n94  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, dynamic>", style=dashed];
n95 -> n96  [key=0, style=solid];
n96 -> n78  [color=blue, key=0, style=bold];
n98 -> n99  [key=0, style=solid];
n98 -> n100  [key=2, style=dotted];
n99 -> n64  [color=blue, key=0, style=bold];
n101 -> n102  [key=0, style=solid];
n102 -> n103  [key=0, style=solid];
n102 -> n109  [key=2, style=dotted];
n102 -> n106  [color=darkseagreen4, key=1, label=data, style=dashed];
n102 -> n107  [color=darkseagreen4, key=1, label=data, style=dashed];
n103 -> n104  [key=0, style=solid];
n103 -> n107  [key=0, style=solid];
n106 -> n103  [key=0, style=solid];
n106 -> n110  [key=2, style=dotted];
n107 -> n108  [key=0, style=solid];
n104 -> n105  [key=0, style=solid];
n104 -> n104  [color=darkseagreen4, key=1, label=item, style=dashed];
n104 -> n106  [color=darkseagreen4, key=1, label=newKey, style=dashed];
n105 -> n106  [key=0, style=solid];
n105 -> n105  [color=darkseagreen4, key=1, label=item, style=dashed];
n108 -> n101  [color=blue, key=0, style=bold];
d7 -> d8  [color=green, key=0, style=solid];
d7 -> d10  [color=green, key=2, style=dotted];
d7 -> d11  [color=green, key=2, style=dotted];
d6 -> d7  [color=green, key=0, style=solid];
d6 -> d8  [color=green, key=1, label="Nancy.Testing.QueryWrapper", style=dashed];
d8 -> d9  [color=green, key=0, style=solid];
d8 -> d5  [color=green, key=2, style=dotted];
d9 -> d6  [color=blue, key=0, style=bold];
d13 -> d10  [key=2, style=dotted];
d13 -> d14  [key=0, style=solid];
d13 -> d16  [key=2, style=dotted];
d25 -> d11  [color=darkorchid, key=3, label="Parameter variable string name", style=bold];
d49 -> d11  [key=2, style=dotted];
d49 -> d50  [key=0, style=solid];
d49 -> d52  [key=2, style=dotted];
d2 -> d5  [key=2, style=dotted];
d2 -> d3  [key=0, style=solid];
d14 -> d5  [key=2, style=dotted];
d14 -> d15  [key=0, style=solid];
d18 -> d5  [key=2, style=dotted];
d18 -> d19  [key=0, style=solid];
d18 -> d20  [key=2, style=dotted];
d23 -> d5  [key=2, style=dotted];
d23 -> d24  [key=0, style=solid];
d28 -> d5  [key=2, style=dotted];
d28 -> d29  [key=0, style=solid];
d34 -> d5  [key=2, style=dotted];
d34 -> d35  [key=0, style=solid];
d39 -> d5  [key=2, style=dotted];
d39 -> d40  [key=0, style=solid];
d45 -> d5  [key=2, style=dotted];
d45 -> d46  [key=0, style=solid];
d50 -> d5  [key=2, style=dotted];
d50 -> d51  [key=0, style=solid];
d55 -> d5  [key=2, style=dotted];
d55 -> d56  [key=0, style=solid];
d61 -> d5  [key=2, style=dotted];
d61 -> d62  [key=0, style=solid];
d67 -> d5  [key=2, style=dotted];
d67 -> d68  [key=0, style=solid];
d12 -> d13  [key=0, style=solid];
d12 -> d14  [color=darkseagreen4, key=1, label="Nancy.Testing.QueryWrapper", style=dashed];
d22 -> d25  [key=2, style=dotted];
d22 -> d23  [key=0, style=solid];
d48 -> d49  [key=0, style=solid];
d48 -> d50  [color=darkseagreen4, key=1, label="Nancy.Testing.NodeWrapper", style=dashed];
d0 -> d2  [color=darkseagreen4, key=1, label="Nancy.Testing.NodeWrapper", style=dashed];
d0 -> d1  [key=0, style=solid];
d1 -> d2  [key=0, style=solid];
d1 -> d4  [key=2, style=dotted];
d3 -> d0  [color=blue, key=0, style=bold];
d15 -> d12  [color=blue, key=0, style=bold];
d17 -> d18  [key=0, style=solid];
d19 -> d17  [color=blue, key=0, style=bold];
d24 -> d21  [color=blue, key=0, style=bold];
d26 -> d28  [color=darkseagreen4, key=1, label="Nancy.Testing.NodeWrapper", style=dashed];
d26 -> d27  [key=0, style=solid];
d26 -> d31  [color=darkorchid, key=3, label="Parameter variable string className", style=bold];
d27 -> d28  [key=0, style=solid];
d27 -> d30  [key=2, style=dotted];
d29 -> d26  [color=blue, key=0, style=bold];
d31 -> d34  [color=darkseagreen4, key=1, label="Nancy.Testing.QueryWrapper", style=dashed];
d31 -> d32  [key=0, style=solid];
d31 -> d33  [color=darkseagreen4, key=1, label=string, style=dashed];
d32 -> d34  [key=0, style=solid];
d32 -> d33  [key=0, style=solid];
d35 -> d31  [color=blue, key=0, style=bold];
d37 -> d39  [color=darkseagreen4, key=1, label="Nancy.Testing.NodeWrapper", style=dashed];
d37 -> d38  [key=0, style=solid];
d37 -> d42  [color=darkorchid, key=3, label="Parameter variable System.StringComparison comparisonType", style=bold];
d38 -> d39  [key=0, style=solid];
d38 -> d41  [key=2, style=dotted];
d40 -> d37  [color=blue, key=0, style=bold];
d42 -> d45  [color=darkseagreen4, key=1, label="Nancy.Testing.QueryWrapper", style=dashed];
d42 -> d43  [key=0, style=solid];
d42 -> d44  [color=darkseagreen4, key=1, label=string, style=dashed];
d43 -> d45  [key=0, style=solid];
d43 -> d44  [key=0, style=solid];
d46 -> d42  [color=blue, key=0, style=bold];
d51 -> d48  [color=blue, key=0, style=bold];
d53 -> d55  [color=darkseagreen4, key=1, label="Nancy.Testing.NodeWrapper", style=dashed];
d53 -> d54  [key=0, style=solid];
d53 -> d64  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
d54 -> d55  [key=0, style=solid];
d54 -> d57  [key=2, style=dotted];
d56 -> d53  [color=blue, key=0, style=bold];
d58 -> d61  [color=darkseagreen4, key=1, label="Nancy.Testing.QueryWrapper", style=dashed];
d58 -> d59  [key=0, style=solid];
d58 -> d60  [color=darkseagreen4, key=1, label=string, style=dashed];
d59 -> d61  [key=0, style=solid];
d59 -> d60  [key=0, style=solid];
d62 -> d58  [color=blue, key=0, style=bold];
d64 -> d67  [color=darkseagreen4, key=1, label="Nancy.Testing.QueryWrapper", style=dashed];
d64 -> d65  [key=0, style=solid];
d64 -> d66  [color=darkseagreen4, key=1, label=string, style=dashed];
d65 -> d67  [key=0, style=solid];
d65 -> d66  [key=0, style=solid];
d68 -> d64  [color=blue, key=0, style=bold];
d21 -> d22  [key=0, style=solid];
d33 -> d32  [key=0, style=solid];
d33 -> d36  [key=2, style=dotted];
d44 -> d43  [key=0, style=solid];
d44 -> d47  [key=2, style=dotted];
d60 -> d59  [key=0, style=solid];
d60 -> d63  [key=2, style=dotted];
d66 -> d65  [key=0, style=solid];
d66 -> d69  [key=2, style=dotted];
m0_32 -> m0_33  [key=0, style=solid];
m0_33 -> m0_10  [key=2, style=dotted];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_36  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_34 -> m0_20  [key=2, style=dotted];
m0_34 -> m0_35  [key=0, style=solid];
m0_35 -> m0_32  [color=blue, key=0, style=bold];
m0_35 -> m0_36  [key=0, style=solid];
m0_6 -> m0_7  [key=0, style=solid];
m0_7 -> m0_10  [key=2, style=dotted];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_12  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_7 -> m0_9  [key=2, style=dotted];
m0_8 -> m0_11  [key=2, style=dotted];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_6  [color=blue, key=0, style=bold];
m0_9 -> m0_6  [color=blue, key=0, style=bold];
m0_48 -> m0_49  [key=0, style=solid];
m0_48 -> m0_30  [key=2, style=dotted];
m0_181 -> m0_182  [key=0, style=solid];
m0_182 -> m0_75  [key=2, style=dotted];
m0_182 -> m0_183  [key=0, style=solid];
m0_182 -> m0_187  [color=darkseagreen4, key=1, label=htmlNode, style=dashed];
m0_183 -> m0_10  [key=2, style=dotted];
m0_183 -> m0_184  [key=0, style=solid];
m0_183 -> m0_186  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_184 -> m0_20  [key=2, style=dotted];
m0_184 -> m0_185  [key=0, style=solid];
m0_185 -> m0_181  [color=blue, key=0, style=bold];
m0_30 -> m0_28  [color=blue, key=0, style=bold];
m0_56 -> m0_57  [key=0, style=solid];
m0_57 -> m0_10  [key=2, style=dotted];
m0_57 -> m0_58  [key=0, style=solid];
m0_57 -> m0_60  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_57 -> m0_38  [key=2, style=dotted];
m0_58 -> m0_11  [key=2, style=dotted];
m0_58 -> m0_59  [key=0, style=solid];
m0_58 -> m0_56  [color=blue, key=0, style=bold];
m0_59 -> m0_56  [color=blue, key=0, style=bold];
m0_59 -> m0_60  [key=0, style=solid];
m0_231 -> m0_232  [key=0, style=solid];
m0_232 -> m0_233  [key=0, style=solid];
m0_232 -> m0_237  [color=darkseagreen4, key=1, label=htmlNode, style=dashed];
m0_233 -> m0_10  [key=2, style=dotted];
m0_233 -> m0_234  [key=0, style=solid];
m0_233 -> m0_236  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_234 -> m0_20  [key=2, style=dotted];
m0_234 -> m0_235  [key=0, style=solid];
m0_235 -> m0_231  [color=blue, key=0, style=bold];
m0_156 -> m0_157  [key=0, style=solid];
m0_157 -> m0_75  [key=2, style=dotted];
m0_157 -> m0_158  [key=0, style=solid];
m0_157 -> m0_162  [color=darkseagreen4, key=1, label=htmlNode, style=dashed];
m0_158 -> m0_10  [key=2, style=dotted];
m0_158 -> m0_159  [key=0, style=solid];
m0_158 -> m0_161  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_159 -> m0_11  [key=2, style=dotted];
m0_159 -> m0_160  [key=0, style=solid];
m0_160 -> m0_156  [color=blue, key=0, style=bold];
m0_77 -> m0_78  [color=green, key=0, style=solid];
m0_77 -> m0_79  [color=green, key=2, style=dotted];
m0_147 -> m0_148  [key=0, style=solid];
m0_148 -> m0_75  [key=2, style=dotted];
m0_148 -> m0_149  [key=0, style=solid];
m0_148 -> m0_153  [color=darkseagreen4, key=1, label=htmlNode, style=dashed];
m0_149 -> m0_10  [key=2, style=dotted];
m0_149 -> m0_150  [key=0, style=solid];
m0_149 -> m0_152  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_150 -> m0_11  [key=2, style=dotted];
m0_150 -> m0_151  [key=0, style=solid];
m0_151 -> m0_147  [color=blue, key=0, style=bold];
m0_97 -> m0_98  [key=0, style=solid];
m0_97 -> m0_36  [color=darkseagreen4, key=1, label=fakeModelBinder, style=dashed];
m0_98 -> m0_99  [key=0, style=solid];
m0_98 -> m0_103  [color=darkseagreen4, key=1, label=htmlNodes, style=dashed];
m0_98 -> m0_40  [color=darkseagreen4, key=1, label=fakeLocator, style=dashed];
m0_98 -> m0_44  [color=darkseagreen4, key=1, label=fakeLocator, style=dashed];
m0_99 -> m0_10  [key=2, style=dotted];
m0_99 -> m0_100  [key=0, style=solid];
m0_99 -> m0_102  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_99 -> m0_57  [color=darkseagreen4, key=1, label=fakeModelBinder, style=dashed];
m0_100 -> m0_20  [key=2, style=dotted];
m0_100 -> m0_101  [key=0, style=solid];
m0_100 -> m0_60  [color=darkseagreen4, key=1, label=fakeLocator, style=dashed];
m0_100 -> m0_63  [color=darkseagreen4, key=1, label=fakeLocator, style=dashed];
m0_101 -> m0_97  [color=blue, key=0, style=bold];
m0_101 -> m0_79  [color=darkseagreen4, key=1, label=fakeModelBinder, style=dashed];
m0_39 -> m0_40  [key=0, style=solid];
m0_96 -> m0_94  [color=blue, key=0, style=bold];
m0_46 -> m0_47  [key=0, style=solid];
m0_46 -> m0_11  [key=2, style=dotted];
m0_47 -> m0_48  [key=0, style=solid];
m0_47 -> m0_19  [key=2, style=dotted];
m0_47 -> m0_49  [color=darkseagreen4, key=1, label=fakeModelBinder, style=dashed];
m0_47 -> m0_57  [color=darkseagreen4, key=1, label=fakeModelBinder, style=dashed];
m0_47 -> m0_51  [color=darkseagreen4, key=1, label=fakeModelBinder, style=dashed];
m0_47 -> m0_44  [color=blue, key=0, style=bold];
m0_49 -> m0_50  [key=0, style=solid];
m0_49 -> m0_31  [key=2, style=dotted];
m0_49 -> m0_32  [key=2, style=dotted];
m0_49 -> m0_33  [key=2, style=dotted];
m0_49 -> m0_56  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_51 -> m0_52  [key=0, style=solid];
m0_51 -> m0_31  [key=2, style=dotted];
m0_51 -> m0_33  [key=2, style=dotted];
m0_51 -> m0_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_51 -> m0_11  [key=2, style=dotted];
m0_50 -> m0_51  [key=0, style=solid];
m0_50 -> m0_19  [key=2, style=dotted];
m0_50 -> m0_60  [color=darkseagreen4, key=1, label=fakeLocator, style=dashed];
m0_50 -> m0_52  [color=darkseagreen4, key=1, label=fakeLocator, style=dashed];
m0_50 -> m0_54  [color=darkseagreen4, key=1, label=fakeLocator, style=dashed];
m0_50 -> m0_63  [color=darkseagreen4, key=1, label=fakeLocator, style=dashed];
m0_50 -> m0_10  [key=2, style=dotted];
m0_50 -> m0_53  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_52 -> m0_53  [key=0, style=solid];
m0_52 -> m0_18  [key=2, style=dotted];
m0_52 -> m0_10  [key=2, style=dotted];
m0_52 -> m0_49  [color=blue, key=0, style=bold];
m0_54 -> m0_55  [key=0, style=solid];
m0_54 -> m0_31  [key=2, style=dotted];
m0_54 -> m0_34  [key=2, style=dotted];
m0_54 -> m0_62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_54 -> m0_48  [key=2, style=dotted];
m0_53 -> m0_54  [key=0, style=solid];
m0_55 -> m0_46  [color=blue, key=0, style=bold];
m0_55 -> m0_53  [color=blue, key=0, style=bold];
m0_11 -> m0_12  [key=0, style=solid];
m0_19 -> m0_16  [color=blue, key=0, style=bold];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_42  [key=2, style=dotted];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_39  [key=2, style=dotted];
m0_42 -> m0_11  [key=2, style=dotted];
m0_42 -> m0_43  [key=0, style=solid];
m0_43 -> m0_40  [color=blue, key=0, style=bold];
m0_43 -> m0_44  [key=0, style=solid];
m0_223 -> m0_224  [key=0, style=solid];
m0_224 -> m0_225  [key=0, style=solid];
m0_224 -> m0_229  [color=darkseagreen4, key=1, label=htmlNode, style=dashed];
m0_225 -> m0_10  [key=2, style=dotted];
m0_225 -> m0_226  [key=0, style=solid];
m0_225 -> m0_228  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_226 -> m0_20  [key=2, style=dotted];
m0_226 -> m0_227  [key=0, style=solid];
m0_227 -> m0_223  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_4  [key=2, style=dotted];
m0_1 -> m0_6  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_5  [key=2, style=dotted];
m0_3 -> m0_0  [color=blue, key=0, style=bold];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_4  [key=2, style=dotted];
m0_12 -> m0_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_5  [key=2, style=dotted];
m0_13 -> m0_15  [key=2, style=dotted];
m0_14 -> m0_11  [color=blue, key=0, style=bold];
m0_14 -> m0_12  [color=blue, key=0, style=bold];
m0_214 -> m0_215  [key=0, style=solid];
m0_215 -> m0_216  [key=0, style=solid];
m0_215 -> m0_220  [color=darkseagreen4, key=1, label=htmlNode, style=dashed];
m0_216 -> m0_10  [key=2, style=dotted];
m0_216 -> m0_217  [key=0, style=solid];
m0_216 -> m0_219  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_217 -> m0_11  [key=2, style=dotted];
m0_217 -> m0_218  [key=0, style=solid];
m0_218 -> m0_214  [color=blue, key=0, style=bold];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_77  [color=green, key=0, style=solid];
m0_114 -> m0_115  [color=green, key=0, style=solid];
m0_115 -> m0_116  [color=green, key=0, style=solid];
m0_115 -> m0_75  [color=green, key=2, style=dotted];
m0_115 -> m0_120  [color=green, key=1, label=htmlNode, style=dashed];
m0_116 -> m0_117  [color=green, key=0, style=solid];
m0_116 -> m0_10  [color=green, key=2, style=dotted];
m0_116 -> m0_119  [color=green, key=1, label="lambda expression", style=dashed];
m0_117 -> m0_118  [color=green, key=0, style=solid];
m0_117 -> m0_20  [color=green, key=2, style=dotted];
m0_118 -> m0_114  [color=blue, key=0, style=bold];
m0_79 -> m0_80  [key=0, style=solid];
m0_79 -> m0_38  [key=2, style=dotted];
m0_20 -> m0_21  [key=0, style=solid];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_19  [key=2, style=dotted];
m0_21 -> m0_23  [color=darkseagreen4, key=1, label=fakeModelBinder, style=dashed];
m0_21 -> m0_36  [color=darkseagreen4, key=1, label=fakeModelBinder, style=dashed];
m0_21 -> m0_25  [color=darkseagreen4, key=1, label=fakeModelBinder, style=dashed];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_30  [key=2, style=dotted];
m0_22 -> m0_15  [key=2, style=dotted];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_31  [key=2, style=dotted];
m0_23 -> m0_32  [key=2, style=dotted];
m0_23 -> m0_33  [key=2, style=dotted];
m0_23 -> m0_35  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_23 -> m0_21  [color=blue, key=0, style=bold];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_31  [key=2, style=dotted];
m0_25 -> m0_33  [key=2, style=dotted];
m0_25 -> m0_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_25 -> m0_10  [key=2, style=dotted];
m0_25 -> m0_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_19  [key=2, style=dotted];
m0_24 -> m0_40  [color=darkseagreen4, key=1, label=fakeLocator, style=dashed];
m0_24 -> m0_26  [color=darkseagreen4, key=1, label=fakeLocator, style=dashed];
m0_24 -> m0_28  [color=darkseagreen4, key=1, label=fakeLocator, style=dashed];
m0_24 -> m0_44  [color=darkseagreen4, key=1, label=fakeLocator, style=dashed];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_18  [key=2, style=dotted];
m0_26 -> m0_10  [key=2, style=dotted];
m0_26 -> m0_20  [key=2, style=dotted];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_31  [key=2, style=dotted];
m0_28 -> m0_34  [key=2, style=dotted];
m0_28 -> m0_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_24  [color=blue, key=0, style=bold];
m0_29 -> m0_20  [color=blue, key=0, style=bold];
m0_29 -> m0_30  [key=0, style=solid];
m0_29 -> m0_31  [key=2, style=dotted];
m0_84 -> m0_85  [key=0, style=solid];
m0_84 -> m0_80  [color=blue, key=0, style=bold];
m0_85 -> m0_86  [key=0, style=solid];
m0_85 -> m0_19  [key=2, style=dotted];
m0_85 -> m0_92  [color=darkseagreen4, key=1, label=fakeLocator, style=dashed];
m0_85 -> m0_87  [color=darkseagreen4, key=1, label=fakeLocator, style=dashed];
m0_86 -> m0_87  [key=0, style=solid];
m0_86 -> m0_31  [key=2, style=dotted];
m0_86 -> m0_33  [key=2, style=dotted];
m0_86 -> m0_91  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_86 -> m0_79  [key=2, style=dotted];
m0_87 -> m0_88  [key=0, style=solid];
m0_87 -> m0_18  [key=2, style=dotted];
m0_87 -> m0_10  [key=2, style=dotted];
m0_87 -> m0_95  [color=darkseagreen4, key=1, label=adapter, style=dashed];
m0_87 -> m0_85  [color=blue, key=0, style=bold];
m0_88 -> m0_89  [key=0, style=solid];
m0_88 -> m0_4  [key=2, style=dotted];
m0_88 -> m0_94  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_89 -> m0_90  [key=0, style=solid];
m0_89 -> m0_5  [key=2, style=dotted];
m0_89 -> m0_94  [color=darkseagreen4, key=1, label=htmlNodes, style=dashed];
m0_90 -> m0_84  [color=blue, key=0, style=bold];
m0_90 -> m0_10  [key=2, style=dotted];
m0_90 -> m0_91  [key=0, style=solid];
m0_90 -> m0_93  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_91 -> m0_11  [key=2, style=dotted];
m0_91 -> m0_92  [key=0, style=solid];
m0_92 -> m0_88  [color=blue, key=0, style=bold];
m0_92 -> m0_93  [key=0, style=solid];
m0_92 -> m0_42  [key=2, style=dotted];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_42  [key=2, style=dotted];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_48  [key=2, style=dotted];
m0_45 -> m0_43  [color=blue, key=0, style=bold];
m0_105 -> m0_106  [key=0, style=solid];
m0_106 -> m0_75  [key=2, style=dotted];
m0_106 -> m0_107  [key=0, style=solid];
m0_106 -> m0_111  [color=darkseagreen4, key=1, label=htmlNode, style=dashed];
m0_107 -> m0_10  [key=2, style=dotted];
m0_107 -> m0_108  [key=0, style=solid];
m0_107 -> m0_110  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_108 -> m0_20  [key=2, style=dotted];
m0_108 -> m0_109  [key=0, style=solid];
m0_109 -> m0_105  [color=blue, key=0, style=bold];
m0_122 -> m0_123  [key=0, style=solid];
m0_123 -> m0_75  [key=2, style=dotted];
m0_123 -> m0_124  [key=0, style=solid];
m0_123 -> m0_128  [color=darkseagreen4, key=1, label=htmlNode, style=dashed];
m0_124 -> m0_10  [key=2, style=dotted];
m0_124 -> m0_125  [key=0, style=solid];
m0_124 -> m0_127  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_125 -> m0_11  [key=2, style=dotted];
m0_125 -> m0_126  [key=0, style=solid];
m0_126 -> m0_122  [color=blue, key=0, style=bold];
m0_38 -> m0_36  [color=blue, key=0, style=bold];
m0_80 -> m0_81  [key=0, style=solid];
m0_80 -> m0_78  [color=blue, key=0, style=bold];
m0_81 -> m0_75  [key=2, style=dotted];
m0_81 -> m0_82  [key=0, style=solid];
m0_81 -> m0_86  [color=darkseagreen4, key=1, label=htmlNode, style=dashed];
m0_82 -> m0_10  [key=2, style=dotted];
m0_82 -> m0_83  [key=0, style=solid];
m0_82 -> m0_85  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_82 -> m0_42  [key=2, style=dotted];
m0_83 -> m0_20  [key=2, style=dotted];
m0_83 -> m0_84  [key=0, style=solid];
m0_83 -> m0_81  [color=blue, key=0, style=bold];
m0_139 -> m0_140  [key=0, style=solid];
m0_140 -> m0_141  [key=0, style=solid];
m0_140 -> m0_145  [color=darkseagreen4, key=1, label=htmlNodes, style=dashed];
m0_141 -> m0_10  [key=2, style=dotted];
m0_141 -> m0_142  [key=0, style=solid];
m0_141 -> m0_144  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_142 -> m0_11  [key=2, style=dotted];
m0_142 -> m0_143  [key=0, style=solid];
m0_143 -> m0_139  [color=blue, key=0, style=bold];
m0_75 -> m0_65  [color=blue, key=0, style=bold];
m0_236 -> m0_237  [key=0, style=solid];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_18  [key=2, style=dotted];
m0_16 -> m0_19  [key=2, style=dotted];
m0_17 -> m0_15  [color=blue, key=0, style=bold];
m0_17 -> m0_10  [key=2, style=dotted];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_36 -> m0_37  [key=0, style=solid];
m0_36 -> m0_38  [key=2, style=dotted];
m0_37 -> m0_35  [color=blue, key=0, style=bold];
m0_37 -> m0_38  [key=0, style=solid];
m0_37 -> m0_39  [key=2, style=dotted];
m0_60 -> m0_61  [key=0, style=solid];
m0_60 -> m0_42  [key=2, style=dotted];
m0_63 -> m0_64  [key=0, style=solid];
m0_63 -> m0_42  [key=2, style=dotted];
m0_62 -> m0_63  [key=0, style=solid];
m0_62 -> m0_60  [color=blue, key=0, style=bold];
m0_61 -> m0_59  [color=blue, key=0, style=bold];
m0_61 -> m0_62  [key=0, style=solid];
m0_61 -> m0_39  [key=2, style=dotted];
m0_64 -> m0_62  [color=blue, key=0, style=bold];
m0_64 -> m0_10  [key=2, style=dotted];
m0_64 -> m0_65  [key=0, style=solid];
m0_64 -> m0_67  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_78 -> m0_79  [key=0, style=solid];
m0_78 -> m0_15  [color=blue, key=0, style=bold];
m0_95 -> m0_96  [key=0, style=solid];
m0_95 -> m0_93  [color=blue, key=0, style=bold];
m0_94 -> m0_95  [key=0, style=solid];
m0_94 -> m0_96  [key=2, style=dotted];
m0_93 -> m0_91  [color=blue, key=0, style=bold];
m0_93 -> m0_94  [key=0, style=solid];
m0_120 -> m0_121  [color=green, key=0, style=solid];
m0_120 -> d47  [color=green, key=2, style=dotted];
m0_119 -> m0_120  [color=green, key=0, style=solid];
m0_121 -> m0_119  [color=blue, key=0, style=bold];
m0_171 -> m0_172  [color=green, key=0, style=solid];
m0_171 -> m0_164  [color=green, key=2, style=dotted];
m0_170 -> m0_171  [color=green, key=0, style=solid];
m0_172 -> m0_170  [color=blue, key=0, style=bold];
m0_179 -> m0_180  [color=green, key=0, style=solid];
m0_179 -> m0_164  [color=green, key=2, style=dotted];
m0_178 -> m0_179  [color=green, key=0, style=solid];
m0_180 -> m0_178  [color=blue, key=0, style=bold];
m0_68 -> m0_69  [key=0, style=solid];
m0_68 -> m0_39  [key=2, style=dotted];
m0_68 -> m0_31  [key=2, style=dotted];
m0_68 -> m0_32  [key=2, style=dotted];
m0_68 -> m0_33  [key=2, style=dotted];
m0_68 -> m0_78  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_111 -> d47  [key=2, style=dotted];
m0_111 -> m0_112  [key=0, style=solid];
m0_128 -> d47  [key=2, style=dotted];
m0_128 -> m0_129  [key=0, style=solid];
m0_162 -> m0_164  [key=2, style=dotted];
m0_162 -> m0_163  [key=0, style=solid];
m0_203 -> m0_164  [key=2, style=dotted];
m0_203 -> m0_204  [key=0, style=solid];
m0_67 -> m0_68  [key=0, style=solid];
m0_67 -> m0_30  [key=2, style=dotted];
m0_67 -> m0_74  [color=darkseagreen4, key=1, label=returnModel, style=dashed];
m0_69 -> m0_67  [color=blue, key=0, style=bold];
m0_69 -> m0_70  [key=0, style=solid];
m0_69 -> m0_19  [key=2, style=dotted];
m0_69 -> m0_82  [color=darkseagreen4, key=1, label=fakeLocator, style=dashed];
m0_69 -> m0_71  [color=darkseagreen4, key=1, label=fakeLocator, style=dashed];
m0_103 -> m0_104  [key=0, style=solid];
m0_103 -> m0_96  [key=2, style=dotted];
m0_103 -> m0_92  [color=darkseagreen4, key=1, label=fakeLocator, style=dashed];
m0_136 -> m0_137  [key=0, style=solid];
m0_136 -> m0_138  [key=2, style=dotted];
m0_145 -> m0_146  [key=0, style=solid];
m0_145 -> m0_138  [key=2, style=dotted];
m0_153 -> m0_154  [key=0, style=solid];
m0_153 -> m0_155  [key=2, style=dotted];
m0_187 -> m0_188  [key=0, style=solid];
m0_187 -> m0_155  [key=2, style=dotted];
m0_195 -> m0_196  [key=0, style=solid];
m0_195 -> m0_155  [key=2, style=dotted];
m0_211 -> m0_212  [key=0, style=solid];
m0_211 -> m0_213  [key=2, style=dotted];
m0_220 -> m0_221  [key=0, style=solid];
m0_220 -> m0_222  [key=2, style=dotted];
m0_229 -> m0_230  [key=0, style=solid];
m0_229 -> m0_213  [key=2, style=dotted];
m0_237 -> m0_238  [key=0, style=solid];
m0_237 -> m0_222  [key=2, style=dotted];
m0_102 -> m0_103  [key=0, style=solid];
m0_102 -> m0_82  [color=darkseagreen4, key=1, label=fakeLocator, style=dashed];
m0_110 -> m0_111  [key=0, style=solid];
m0_127 -> m0_128  [key=0, style=solid];
m0_135 -> m0_136  [key=0, style=solid];
m0_144 -> m0_145  [key=0, style=solid];
m0_152 -> m0_153  [key=0, style=solid];
m0_161 -> m0_162  [key=0, style=solid];
m0_186 -> m0_187  [key=0, style=solid];
m0_194 -> m0_195  [key=0, style=solid];
m0_202 -> m0_203  [key=0, style=solid];
m0_210 -> m0_211  [key=0, style=solid];
m0_219 -> m0_220  [key=0, style=solid];
m0_228 -> m0_229  [key=0, style=solid];
m0_112 -> m0_110  [color=blue, key=0, style=bold];
m0_129 -> m0_127  [color=blue, key=0, style=bold];
m0_163 -> m0_161  [color=blue, key=0, style=bold];
m0_204 -> m0_202  [color=blue, key=0, style=bold];
m0_104 -> m0_102  [color=blue, key=0, style=bold];
m0_104 -> m0_95  [color=darkseagreen4, key=1, label=adapter, style=dashed];
m0_137 -> m0_135  [color=blue, key=0, style=bold];
m0_146 -> m0_144  [color=blue, key=0, style=bold];
m0_154 -> m0_152  [color=blue, key=0, style=bold];
m0_188 -> m0_186  [color=blue, key=0, style=bold];
m0_196 -> m0_194  [color=blue, key=0, style=bold];
m0_212 -> m0_210  [color=blue, key=0, style=bold];
m0_221 -> m0_219  [color=blue, key=0, style=bold];
m0_230 -> m0_228  [color=blue, key=0, style=bold];
m0_238 -> m0_236  [color=blue, key=0, style=bold];
m0_130 -> m0_131  [key=0, style=solid];
m0_131 -> m0_132  [key=0, style=solid];
m0_131 -> m0_136  [color=darkseagreen4, key=1, label=htmlNodes, style=dashed];
m0_132 -> m0_10  [key=2, style=dotted];
m0_132 -> m0_133  [key=0, style=solid];
m0_132 -> m0_135  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_133 -> m0_20  [key=2, style=dotted];
m0_133 -> m0_134  [key=0, style=solid];
m0_134 -> m0_130  [color=blue, key=0, style=bold];
m0_197 -> m0_198  [key=0, style=solid];
m0_198 -> m0_75  [key=2, style=dotted];
m0_198 -> m0_199  [key=0, style=solid];
m0_198 -> m0_203  [color=darkseagreen4, key=1, label=htmlNode, style=dashed];
m0_199 -> m0_10  [key=2, style=dotted];
m0_199 -> m0_200  [key=0, style=solid];
m0_199 -> m0_202  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_200 -> m0_20  [key=2, style=dotted];
m0_200 -> m0_201  [key=0, style=solid];
m0_201 -> m0_197  [color=blue, key=0, style=bold];
m0_205 -> m0_206  [key=0, style=solid];
m0_206 -> m0_207  [key=0, style=solid];
m0_206 -> m0_211  [color=darkseagreen4, key=1, label=htmlNode, style=dashed];
m0_207 -> m0_10  [key=2, style=dotted];
m0_207 -> m0_208  [key=0, style=solid];
m0_207 -> m0_210  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_208 -> m0_11  [key=2, style=dotted];
m0_208 -> m0_209  [key=0, style=solid];
m0_209 -> m0_205  [color=blue, key=0, style=bold];
m0_165 -> m0_166  [color=green, key=0, style=solid];
m0_166 -> m0_167  [color=green, key=0, style=solid];
m0_166 -> m0_75  [color=green, key=2, style=dotted];
m0_166 -> m0_171  [color=green, key=1, label=htmlNode, style=dashed];
m0_167 -> m0_168  [color=green, key=0, style=solid];
m0_167 -> m0_10  [color=green, key=2, style=dotted];
m0_167 -> m0_170  [color=green, key=1, label="lambda expression", style=dashed];
m0_168 -> m0_169  [color=green, key=0, style=solid];
m0_168 -> m0_11  [color=green, key=2, style=dotted];
m0_169 -> m0_165  [color=blue, key=0, style=bold];
m0_18 -> m0_20  [key=2, style=dotted];
m0_18 -> m0_19  [key=0, style=solid];
m0_173 -> m0_174  [color=green, key=0, style=solid];
m0_174 -> m0_175  [color=green, key=0, style=solid];
m0_174 -> m0_75  [color=green, key=2, style=dotted];
m0_174 -> m0_179  [color=green, key=1, label=htmlNode, style=dashed];
m0_175 -> m0_176  [color=green, key=0, style=solid];
m0_175 -> m0_10  [color=green, key=2, style=dotted];
m0_175 -> m0_178  [color=green, key=1, label="lambda expression", style=dashed];
m0_176 -> m0_177  [color=green, key=0, style=solid];
m0_176 -> m0_11  [color=green, key=2, style=dotted];
m0_177 -> m0_173  [color=blue, key=0, style=bold];
m0_65 -> m0_66  [key=0, style=solid];
m0_65 -> m0_11  [key=2, style=dotted];
m0_66 -> m0_67  [key=0, style=solid];
m0_66 -> m0_19  [key=2, style=dotted];
m0_66 -> m0_68  [color=darkseagreen4, key=1, label=fakeModelBinder, style=dashed];
m0_66 -> m0_79  [color=darkseagreen4, key=1, label=fakeModelBinder, style=dashed];
m0_66 -> m0_70  [color=darkseagreen4, key=1, label=fakeModelBinder, style=dashed];
m0_66 -> m0_63  [color=blue, key=0, style=bold];
m0_70 -> m0_71  [color=green, key=0, style=solid];
m0_70 -> m0_31  [key=2, style=dotted];
m0_70 -> m0_33  [key=2, style=dotted];
m0_70 -> m0_81  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_74 -> m0_75  [key=0, style=solid];
m0_74 -> m0_77  [key=2, style=dotted];
m0_74 -> m0_70  [color=blue, key=0, style=bold];
m0_71 -> m0_72  [color=green, key=0, style=solid];
m0_71 -> m0_18  [key=2, style=dotted];
m0_71 -> m0_10  [key=2, style=dotted];
m0_71 -> m0_75  [color=green, key=2, style=dotted];
m0_71 -> m0_77  [color=green, key=1, label=htmlNode, style=dashed];
m0_72 -> m0_73  [color=green, key=0, style=solid];
m0_72 -> m0_74  [color=darkseagreen4, key=1, label=result, style=dashed];
m0_72 -> m0_10  [color=green, key=2, style=dotted];
m0_72 -> m0_15  [color=green, key=1, label="lambda expression", style=dashed];
m0_73 -> m0_74  [color=green, key=0, style=solid];
m0_73 -> m0_76  [key=2, style=dotted];
m0_73 -> m0_11  [color=green, key=2, style=dotted];
m0_189 -> m0_190  [key=0, style=solid];
m0_190 -> m0_75  [key=2, style=dotted];
m0_190 -> m0_191  [key=0, style=solid];
m0_190 -> m0_195  [color=darkseagreen4, key=1, label=htmlNode, style=dashed];
m0_191 -> m0_10  [key=2, style=dotted];
m0_191 -> m0_192  [key=0, style=solid];
m0_191 -> m0_194  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_192 -> m0_20  [key=2, style=dotted];
m0_192 -> m0_193  [key=0, style=solid];
m0_193 -> m0_189  [color=blue, key=0, style=bold];
m0_239 -> m0_71  [color=green, key=1, label="Nancy.Testing.Tests.AssertExtensionsTests", style=dashed];
m0_239 -> m0_115  [color=green, key=1, label="Nancy.Testing.Tests.AssertExtensionsTests", style=dashed];
m0_239 -> m0_166  [color=green, key=1, label="Nancy.Testing.Tests.AssertExtensionsTests", style=dashed];
m0_239 -> m0_174  [color=green, key=1, label="Nancy.Testing.Tests.AssertExtensionsTests", style=dashed];
m0_239 -> m0_2  [color=darkseagreen4, key=1, label="Nancy.Testing.Tests.AssertExtensionsTests", style=dashed];
m0_239 -> m0_7  [color=darkseagreen4, key=1, label="Nancy.Testing.Tests.AssertExtensionsTests", style=dashed];
m0_239 -> m0_13  [color=darkseagreen4, key=1, label="Nancy.Testing.Tests.AssertExtensionsTests", style=dashed];
m0_239 -> m0_17  [color=darkseagreen4, key=1, label="Nancy.Testing.Tests.AssertExtensionsTests", style=dashed];
m0_239 -> m0_22  [color=darkseagreen4, key=1, label="Nancy.Testing.Tests.AssertExtensionsTests", style=dashed];
m0_239 -> m0_25  [color=darkseagreen4, key=1, label="Nancy.Testing.Tests.AssertExtensionsTests", style=dashed];
m0_239 -> m0_29  [color=darkseagreen4, key=1, label="Nancy.Testing.Tests.AssertExtensionsTests", style=dashed];
m0_239 -> m0_33  [color=darkseagreen4, key=1, label="Nancy.Testing.Tests.AssertExtensionsTests", style=dashed];
m0_239 -> m0_37  [color=darkseagreen4, key=1, label="Nancy.Testing.Tests.AssertExtensionsTests", style=dashed];
m0_239 -> m0_41  [color=darkseagreen4, key=1, label="Nancy.Testing.Tests.AssertExtensionsTests", style=dashed];
m0_239 -> m0_45  [color=darkseagreen4, key=1, label="Nancy.Testing.Tests.AssertExtensionsTests", style=dashed];
m0_239 -> m0_50  [color=darkseagreen4, key=1, label="Nancy.Testing.Tests.AssertExtensionsTests", style=dashed];
m0_239 -> m0_54  [color=darkseagreen4, key=1, label="Nancy.Testing.Tests.AssertExtensionsTests", style=dashed];
m0_239 -> m0_57  [color=darkseagreen4, key=1, label="Nancy.Testing.Tests.AssertExtensionsTests", style=dashed];
m0_239 -> m0_61  [color=darkseagreen4, key=1, label="Nancy.Testing.Tests.AssertExtensionsTests", style=dashed];
m0_239 -> m0_64  [color=darkseagreen4, key=1, label="Nancy.Testing.Tests.AssertExtensionsTests", style=dashed];
m0_239 -> m0_68  [color=darkseagreen4, key=1, label="Nancy.Testing.Tests.AssertExtensionsTests", style=dashed];
m0_239 -> m0_81  [color=darkseagreen4, key=1, label="Nancy.Testing.Tests.AssertExtensionsTests", style=dashed];
m0_239 -> m0_89  [color=darkseagreen4, key=1, label="Nancy.Testing.Tests.AssertExtensionsTests", style=dashed];
m0_239 -> m0_98  [color=darkseagreen4, key=1, label="Nancy.Testing.Tests.AssertExtensionsTests", style=dashed];
m0_239 -> m0_106  [color=darkseagreen4, key=1, label="Nancy.Testing.Tests.AssertExtensionsTests", style=dashed];
m0_239 -> m0_123  [color=darkseagreen4, key=1, label="Nancy.Testing.Tests.AssertExtensionsTests", style=dashed];
m0_239 -> m0_131  [color=darkseagreen4, key=1, label="Nancy.Testing.Tests.AssertExtensionsTests", style=dashed];
m0_239 -> m0_140  [color=darkseagreen4, key=1, label="Nancy.Testing.Tests.AssertExtensionsTests", style=dashed];
m0_239 -> m0_148  [color=darkseagreen4, key=1, label="Nancy.Testing.Tests.AssertExtensionsTests", style=dashed];
m0_239 -> m0_157  [color=darkseagreen4, key=1, label="Nancy.Testing.Tests.AssertExtensionsTests", style=dashed];
m0_239 -> m0_182  [color=darkseagreen4, key=1, label="Nancy.Testing.Tests.AssertExtensionsTests", style=dashed];
m0_239 -> m0_190  [color=darkseagreen4, key=1, label="Nancy.Testing.Tests.AssertExtensionsTests", style=dashed];
m0_239 -> m0_198  [color=darkseagreen4, key=1, label="Nancy.Testing.Tests.AssertExtensionsTests", style=dashed];
m0_239 -> m0_206  [color=darkseagreen4, key=1, label="Nancy.Testing.Tests.AssertExtensionsTests", style=dashed];
m0_239 -> m0_215  [color=darkseagreen4, key=1, label="Nancy.Testing.Tests.AssertExtensionsTests", style=dashed];
m0_239 -> m0_224  [color=darkseagreen4, key=1, label="Nancy.Testing.Tests.AssertExtensionsTests", style=dashed];
m0_239 -> m0_232  [color=darkseagreen4, key=1, label="Nancy.Testing.Tests.AssertExtensionsTests", style=dashed];
m0_240 -> m0_77  [color=green, key=1, label=htmlNode, style=dashed];
m0_245 -> m0_120  [color=green, key=1, label=htmlNode, style=dashed];
m0_251 -> m0_171  [color=green, key=1, label=htmlNode, style=dashed];
m0_252 -> m0_179  [color=green, key=1, label=htmlNode, style=dashed];
m0_241 -> m0_86  [color=darkseagreen4, key=1, label=htmlNode, style=dashed];
m0_244 -> m0_111  [color=darkseagreen4, key=1, label=htmlNode, style=dashed];
m0_246 -> m0_128  [color=darkseagreen4, key=1, label=htmlNode, style=dashed];
m0_250 -> m0_162  [color=darkseagreen4, key=1, label=htmlNode, style=dashed];
m0_255 -> m0_203  [color=darkseagreen4, key=1, label=htmlNode, style=dashed];
m0_242 -> m0_94  [color=darkseagreen4, key=1, label=htmlNodes, style=dashed];
m0_243 -> m0_103  [color=darkseagreen4, key=1, label=htmlNodes, style=dashed];
m0_247 -> m0_136  [color=darkseagreen4, key=1, label=htmlNodes, style=dashed];
m0_248 -> m0_145  [color=darkseagreen4, key=1, label=htmlNodes, style=dashed];
m0_249 -> m0_153  [color=darkseagreen4, key=1, label=htmlNode, style=dashed];
m0_253 -> m0_187  [color=darkseagreen4, key=1, label=htmlNode, style=dashed];
m0_254 -> m0_195  [color=darkseagreen4, key=1, label=htmlNode, style=dashed];
m0_256 -> m0_211  [color=darkseagreen4, key=1, label=htmlNode, style=dashed];
m0_257 -> m0_220  [color=darkseagreen4, key=1, label=htmlNode, style=dashed];
m0_258 -> m0_229  [color=darkseagreen4, key=1, label=htmlNode, style=dashed];
m0_259 -> m0_237  [color=darkseagreen4, key=1, label=htmlNode, style=dashed];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_3  [color=darkseagreen4, key=1, label="Nancy.Testing.Browser", style=dashed];
m1_0 -> m1_5  [color=darkseagreen4, key=1, label="Nancy.Testing.Browser", style=dashed];
m1_0 -> m1_6  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=0, style=solid];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_5  [key=0, style=solid];
m1_5 -> m1_6  [key=0, style=solid];
m1_6 -> m1_7  [key=0, style=solid];
m1_2 -> m1_7  [key=0, style=solid];
m1_2 -> m1_8  [key=2, style=dotted];
m1_4 -> m1_7  [key=0, style=solid];
m1_4 -> m1_8  [key=2, style=dotted];
m1_7 -> m1_0  [color=blue, key=0, style=bold];
m1_9 -> m1_5  [color=darkseagreen4, key=1, label="Nancy.Testing.BrowserResponse", style=dashed];
m1_9 -> m1_6  [color=darkseagreen4, key=1, label="Nancy.Testing.BrowserResponse", style=dashed];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_2  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_0 -> m2_3  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_3  [key=0, style=solid];
m2_1 -> m2_5  [key=2, style=dotted];
m2_2 -> m2_4  [key=0, style=solid];
m2_2 -> m2_6  [key=2, style=dotted];
m2_2 -> m2_7  [key=2, style=dotted];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_8  [key=2, style=dotted];
m2_4 -> m2_0  [color=blue, key=0, style=bold];
m2_5 -> m2_9  [key=0, style=solid];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_11  [key=2, style=dotted];
m2_10 -> m2_5  [color=blue, key=0, style=bold];
m2_12 -> m2_1  [color=darkseagreen4, key=1, label="Nancy.DefaultModuleActivator", style=dashed];
m3_305 -> m3_306  [key=0, style=solid];
m3_306 -> m3_7  [key=2, style=dotted];
m3_306 -> m3_307  [key=0, style=solid];
m3_306 -> m3_311  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m3_306 -> m3_312  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m3_307 -> m3_8  [key=2, style=dotted];
m3_307 -> m3_308  [key=0, style=solid];
m3_307 -> m3_321  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_308 -> m3_9  [key=2, style=dotted];
m3_308 -> m3_309  [key=0, style=solid];
m3_309 -> m3_305  [color=blue, key=0, style=bold];
m3_226 -> m3_215  [color=darkorchid, key=3, label="Parameter variable System.Action<Nancy.Responses.Negotiation.Negotiator> action", style=bold];
m3_226 -> m3_234  [color=darkorchid, key=3, label="Parameter variable System.Action<Nancy.Responses.Negotiation.Negotiator> action", style=bold];
m3_226 -> m3_254  [color=darkorchid, key=3, label="Parameter variable System.Action<Nancy.Responses.Negotiation.Negotiator> action", style=bold];
m3_226 -> m3_306  [color=darkorchid, key=3, label="Parameter variable System.Action<Nancy.Responses.Negotiation.Negotiator> action", style=bold];
m3_226 -> m3_325  [color=darkorchid, key=3, label="Parameter variable System.Action<Nancy.Responses.Negotiation.Negotiator> action", style=bold];
m3_226 -> m3_345  [color=darkorchid, key=3, label="Parameter variable System.Action<Nancy.Responses.Negotiation.Negotiator> action", style=bold];
m3_226 -> m3_367  [color=darkorchid, key=3, label="Parameter variable System.Action<Nancy.Responses.Negotiation.Negotiator> action", style=bold];
m3_226 -> m3_394  [color=darkorchid, key=3, label="Parameter variable System.Action<Nancy.Responses.Negotiation.Negotiator> action", style=bold];
m3_226 -> m3_441  [key=0, style=solid];
m3_226 -> m3_445  [color=darkseagreen4, key=1, label="System.Action<Nancy.Responses.Negotiation.Negotiator>", style=dashed];
m3_226 -> m3_446  [color=darkseagreen4, key=1, label="System.Action<Nancy.Responses.Negotiation.Negotiator>", style=dashed];
m3_441 -> m3_444  [color=darkseagreen4, key=1, label="Nancy.NancyModule", style=dashed];
m3_441 -> m3_441  [color=darkorchid, key=3, label="method methodReturn dynamic ", style=bold];
m3_441 -> m3_442  [key=0, style=solid];
m3_442 -> m3_226  [color=blue, key=0, style=bold];
m3_162 -> m3_163  [key=0, style=solid];
m3_163 -> m3_7  [key=2, style=dotted];
m3_163 -> m3_163  [color=darkorchid, key=3, label="method methodReturn dynamic ", style=bold];
m3_163 -> m3_164  [key=0, style=solid];
m3_163 -> m3_170  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m3_163 -> m3_171  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m3_164 -> m3_8  [key=2, style=dotted];
m3_164 -> m3_165  [key=0, style=solid];
m3_164 -> m3_184  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_164 -> m3_166  [color=darkseagreen4, key=1, label=response, style=dashed];
m3_165 -> m3_9  [key=2, style=dotted];
m3_165 -> m3_166  [key=0, style=solid];
m3_166 -> m3_167  [key=0, style=solid];
m3_166 -> m3_27  [key=2, style=dotted];
m3_166 -> m3_168  [key=2, style=dotted];
m3_166 -> m3_84  [key=2, style=dotted];
m3_167 -> m3_162  [color=blue, key=0, style=bold];
m3_191 -> m3_192  [key=0, style=solid];
m3_192 -> m3_7  [key=2, style=dotted];
m3_192 -> m3_192  [color=darkorchid, key=3, label="method methodReturn dynamic ", style=bold];
m3_192 -> m3_193  [key=0, style=solid];
m3_192 -> m3_198  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m3_192 -> m3_199  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m3_193 -> m3_8  [key=2, style=dotted];
m3_193 -> m3_194  [key=0, style=solid];
m3_193 -> m3_209  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_193 -> m3_195  [color=darkseagreen4, key=1, label=response, style=dashed];
m3_194 -> m3_9  [key=2, style=dotted];
m3_194 -> m3_195  [key=0, style=solid];
m3_195 -> m3_196  [key=0, style=solid];
m3_195 -> m3_27  [key=2, style=dotted];
m3_195 -> m3_168  [key=2, style=dotted];
m3_195 -> m3_84  [key=2, style=dotted];
m3_196 -> m3_191  [color=blue, key=0, style=bold];
m3_291 -> m3_292  [key=0, style=solid];
m3_292 -> m3_7  [key=2, style=dotted];
m3_292 -> m3_293  [key=0, style=solid];
m3_292 -> m3_299  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m3_292 -> m3_300  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m3_293 -> m3_8  [key=2, style=dotted];
m3_293 -> m3_294  [key=0, style=solid];
m3_293 -> m3_295  [color=darkseagreen4, key=1, label=response, style=dashed];
m3_293 -> m3_296  [color=darkseagreen4, key=1, label=response, style=dashed];
m3_294 -> m3_295  [key=0, style=solid];
m3_294 -> m3_168  [key=2, style=dotted];
m3_294 -> m3_84  [key=2, style=dotted];
m3_295 -> m3_296  [key=0, style=solid];
m3_295 -> m3_168  [key=2, style=dotted];
m3_295 -> m3_84  [key=2, style=dotted];
m3_296 -> m3_297  [key=0, style=solid];
m3_296 -> m3_168  [key=2, style=dotted];
m3_296 -> m3_84  [key=2, style=dotted];
m3_297 -> m3_291  [color=blue, key=0, style=bold];
m3_233 -> m3_234  [key=0, style=solid];
m3_234 -> m3_7  [key=2, style=dotted];
m3_234 -> m3_235  [key=0, style=solid];
m3_234 -> m3_239  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m3_234 -> m3_240  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m3_235 -> m3_8  [key=2, style=dotted];
m3_235 -> m3_236  [key=0, style=solid];
m3_235 -> m3_250  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_236 -> m3_9  [key=2, style=dotted];
m3_236 -> m3_237  [key=0, style=solid];
m3_236 -> m3_27  [key=2, style=dotted];
m3_237 -> m3_233  [color=blue, key=0, style=bold];
m3_393 -> m3_394  [key=0, style=solid];
m3_394 -> m3_7  [key=2, style=dotted];
m3_394 -> m3_395  [key=0, style=solid];
m3_394 -> m3_402  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m3_394 -> m3_403  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m3_395 -> m3_8  [key=2, style=dotted];
m3_395 -> m3_396  [key=0, style=solid];
m3_395 -> m3_411  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_396 -> m3_397  [key=0, style=solid];
m3_396 -> m3_27  [key=2, style=dotted];
m3_397 -> m3_398  [key=0, style=solid];
m3_397 -> m3_84  [key=2, style=dotted];
m3_397 -> m3_399  [key=2, style=dotted];
m3_397 -> m3_400  [key=2, style=dotted];
m3_398 -> m3_393  [color=blue, key=0, style=bold];
m3_429 -> m3_430  [key=0, style=solid];
m3_430 -> m3_7  [key=2, style=dotted];
m3_430 -> m3_431  [key=0, style=solid];
m3_430 -> m3_435  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m3_430 -> m3_439  [color=darkseagreen4, key=1, label=browser, style=dashed];
m3_431 -> m3_432  [key=0, style=solid];
m3_431 -> m3_372  [key=2, style=dotted];
m3_431 -> m3_438  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_432 -> m3_433  [key=0, style=solid];
m3_432 -> m3_374  [key=2, style=dotted];
m3_432 -> m3_375  [key=2, style=dotted];
m3_432 -> m3_84  [key=2, style=dotted];
m3_433 -> m3_429  [color=blue, key=0, style=bold];
m3_145 -> m3_146  [key=0, style=solid];
m3_146 -> m3_7  [key=2, style=dotted];
m3_146 -> m3_146  [color=darkorchid, key=3, label="method methodReturn dynamic ", style=bold];
m3_146 -> m3_147  [key=0, style=solid];
m3_146 -> m3_151  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m3_146 -> m3_152  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m3_147 -> m3_8  [key=2, style=dotted];
m3_147 -> m3_148  [key=0, style=solid];
m3_148 -> m3_9  [key=2, style=dotted];
m3_148 -> m3_149  [key=0, style=solid];
m3_149 -> m3_145  [color=blue, key=0, style=bold];
m3_366 -> m3_367  [key=0, style=solid];
m3_367 -> m3_7  [key=2, style=dotted];
m3_367 -> m3_368  [key=0, style=solid];
m3_367 -> m3_377  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m3_367 -> m3_378  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m3_367 -> m3_388  [color=darkseagreen4, key=1, label=browser, style=dashed];
m3_368 -> m3_369  [key=0, style=solid];
m3_368 -> m3_372  [key=2, style=dotted];
m3_368 -> m3_387  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_368 -> m3_370  [color=darkseagreen4, key=1, label=result, style=dashed];
m3_369 -> m3_370  [key=0, style=solid];
m3_369 -> m3_373  [key=2, style=dotted];
m3_370 -> m3_371  [key=0, style=solid];
m3_370 -> m3_374  [key=2, style=dotted];
m3_370 -> m3_375  [key=2, style=dotted];
m3_371 -> m3_366  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [key=0, style=solid];
m3_2 -> m3_7  [key=2, style=dotted];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_18  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m3_3 -> m3_8  [key=2, style=dotted];
m3_3 -> m3_4  [key=0, style=solid];
m3_4 -> m3_9  [key=2, style=dotted];
m3_4 -> m3_5  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_18  [color=darkseagreen4, key=1, label=module, style=dashed];
m3_1 -> m3_6  [key=2, style=dotted];
m3_1 -> m3_11  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator", style=dashed];
m3_5 -> m3_0  [color=blue, key=0, style=bold];
m3_324 -> m3_325  [key=0, style=solid];
m3_325 -> m3_7  [key=2, style=dotted];
m3_325 -> m3_326  [key=0, style=solid];
m3_325 -> m3_330  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m3_325 -> m3_331  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m3_326 -> m3_8  [key=2, style=dotted];
m3_326 -> m3_327  [key=0, style=solid];
m3_326 -> m3_340  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_327 -> m3_9  [key=2, style=dotted];
m3_327 -> m3_328  [key=0, style=solid];
m3_328 -> m3_324  [color=blue, key=0, style=bold];
m3_52 -> m3_53  [key=0, style=solid];
m3_54 -> m3_7  [key=2, style=dotted];
m3_54 -> m3_55  [key=0, style=solid];
m3_54 -> m3_74  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m3_55 -> m3_8  [key=2, style=dotted];
m3_55 -> m3_56  [key=0, style=solid];
m3_56 -> m3_9  [key=2, style=dotted];
m3_56 -> m3_57  [key=0, style=solid];
m3_56 -> m3_27  [key=2, style=dotted];
m3_53 -> m3_54  [key=0, style=solid];
m3_53 -> m3_74  [color=darkseagreen4, key=1, label=module, style=dashed];
m3_53 -> m3_53  [color=darkorchid, key=3, label="method methodReturn dynamic ", style=bold];
m3_53 -> m3_6  [key=2, style=dotted];
m3_53 -> m3_59  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator", style=dashed];
m3_57 -> m3_52  [color=blue, key=0, style=bold];
m3_214 -> m3_215  [key=0, style=solid];
m3_215 -> m3_7  [key=2, style=dotted];
m3_215 -> m3_216  [key=0, style=solid];
m3_215 -> m3_220  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m3_215 -> m3_221  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m3_216 -> m3_8  [key=2, style=dotted];
m3_216 -> m3_217  [key=0, style=solid];
m3_216 -> m3_230  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_217 -> m3_9  [key=2, style=dotted];
m3_217 -> m3_218  [key=0, style=solid];
m3_218 -> m3_214  [color=blue, key=0, style=bold];
m3_37 -> m3_38  [key=0, style=solid];
m3_39 -> m3_7  [key=2, style=dotted];
m3_39 -> m3_40  [key=0, style=solid];
m3_39 -> m3_50  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m3_40 -> m3_8  [key=2, style=dotted];
m3_40 -> m3_41  [key=0, style=solid];
m3_41 -> m3_9  [key=2, style=dotted];
m3_41 -> m3_42  [key=0, style=solid];
m3_38 -> m3_39  [key=0, style=solid];
m3_38 -> m3_50  [color=darkseagreen4, key=1, label=module, style=dashed];
m3_38 -> m3_6  [key=2, style=dotted];
m3_38 -> m3_44  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator", style=dashed];
m3_42 -> m3_37  [color=blue, key=0, style=bold];
m3_65 -> m3_66  [key=0, style=solid];
m3_111 -> m3_112  [color=green, key=0, style=solid];
m3_111 -> m3_113  [color=green, key=2, style=dotted];
m3_111 -> m3_114  [color=green, key=1, label="lambda expression", style=dashed];
m3_123 -> m3_124  [color=green, key=0, style=solid];
m3_123 -> m3_20  [color=green, key=2, style=dotted];
m3_122 -> m3_123  [color=green, key=0, style=solid];
m3_122 -> m3_102  [color=green, key=2, style=dotted];
m3_110 -> m3_111  [color=green, key=0, style=solid];
m3_112 -> m3_110  [color=blue, key=0, style=bold];
m3_114 -> m3_115  [color=green, key=0, style=solid];
m3_121 -> m3_123  [color=green, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m3_121 -> m3_122  [color=green, key=0, style=solid];
m3_124 -> m3_121  [color=blue, key=0, style=bold];
m3_115 -> m3_116  [color=green, key=0, style=solid];
m3_115 -> m3_94  [color=green, key=2, style=dotted];
m3_115 -> m3_95  [color=green, key=2, style=dotted];
m3_116 -> m3_117  [color=green, key=0, style=solid];
m3_116 -> m3_96  [color=green, key=2, style=dotted];
m3_116 -> m3_118  [color=green, key=1, label=negotiator, style=dashed];
m3_117 -> m3_118  [color=green, key=0, style=solid];
m3_117 -> m3_120  [color=green, key=2, style=dotted];
m3_118 -> m3_119  [color=green, key=0, style=solid];
m3_119 -> m3_114  [color=blue, key=0, style=bold];
m3_18 -> m3_20  [key=2, style=dotted];
m3_18 -> m3_19  [key=0, style=solid];
m3_35 -> m3_20  [key=2, style=dotted];
m3_35 -> m3_36  [key=0, style=solid];
m3_50 -> m3_20  [key=2, style=dotted];
m3_50 -> m3_51  [key=0, style=solid];
m3_74 -> m3_20  [key=2, style=dotted];
m3_74 -> m3_75  [key=0, style=solid];
m3_100 -> m3_20  [key=2, style=dotted];
m3_100 -> m3_101  [key=0, style=solid];
m3_143 -> m3_20  [key=2, style=dotted];
m3_143 -> m3_144  [key=0, style=solid];
m3_152 -> m3_20  [key=2, style=dotted];
m3_152 -> m3_153  [key=0, style=solid];
m3_152 -> m3_6  [key=2, style=dotted];
m3_152 -> m3_155  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator", style=dashed];
m3_171 -> m3_20  [key=2, style=dotted];
m3_171 -> m3_172  [key=0, style=solid];
m3_171 -> m3_6  [key=2, style=dotted];
m3_171 -> m3_174  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator", style=dashed];
m3_199 -> m3_20  [key=2, style=dotted];
m3_199 -> m3_200  [key=0, style=solid];
m3_199 -> m3_6  [key=2, style=dotted];
m3_199 -> m3_202  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator", style=dashed];
m3_221 -> m3_20  [key=2, style=dotted];
m3_221 -> m3_222  [key=0, style=solid];
m3_221 -> m3_6  [key=2, style=dotted];
m3_221 -> m3_224  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator", style=dashed];
m3_240 -> m3_20  [key=2, style=dotted];
m3_240 -> m3_241  [key=0, style=solid];
m3_240 -> m3_6  [key=2, style=dotted];
m3_240 -> m3_243  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator", style=dashed];
m3_260 -> m3_20  [key=2, style=dotted];
m3_260 -> m3_261  [key=0, style=solid];
m3_260 -> m3_6  [key=2, style=dotted];
m3_260 -> m3_263  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator", style=dashed];
m3_282 -> m3_20  [key=2, style=dotted];
m3_282 -> m3_283  [key=0, style=solid];
m3_282 -> m3_6  [key=2, style=dotted];
m3_282 -> m3_286  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator", style=dashed];
m3_300 -> m3_20  [key=2, style=dotted];
m3_300 -> m3_301  [key=0, style=solid];
m3_300 -> m3_6  [key=2, style=dotted];
m3_300 -> m3_303  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator", style=dashed];
m3_312 -> m3_20  [key=2, style=dotted];
m3_312 -> m3_313  [key=0, style=solid];
m3_312 -> m3_6  [key=2, style=dotted];
m3_312 -> m3_315  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator", style=dashed];
m3_331 -> m3_20  [key=2, style=dotted];
m3_331 -> m3_332  [key=0, style=solid];
m3_331 -> m3_6  [key=2, style=dotted];
m3_331 -> m3_334  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator", style=dashed];
m3_354 -> m3_20  [key=2, style=dotted];
m3_354 -> m3_355  [key=0, style=solid];
m3_354 -> m3_6  [key=2, style=dotted];
m3_354 -> m3_357  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator", style=dashed];
m3_378 -> m3_20  [key=2, style=dotted];
m3_378 -> m3_379  [key=0, style=solid];
m3_378 -> m3_6  [key=2, style=dotted];
m3_378 -> m3_381  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator", style=dashed];
m3_403 -> m3_20  [key=2, style=dotted];
m3_403 -> m3_404  [key=0, style=solid];
m3_403 -> m3_6  [key=2, style=dotted];
m3_403 -> m3_406  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator", style=dashed];
m3_421 -> m3_20  [key=2, style=dotted];
m3_421 -> m3_422  [key=0, style=solid];
m3_421 -> m3_6  [key=2, style=dotted];
m3_421 -> m3_424  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator", style=dashed];
m3_388 -> m3_8  [key=2, style=dotted];
m3_388 -> m3_389  [key=0, style=solid];
m3_388 -> m3_390  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_439 -> m3_8  [key=2, style=dotted];
m3_439 -> m3_440  [key=0, style=solid];
m3_99 -> m3_102  [key=2, style=dotted];
m3_99 -> m3_100  [key=0, style=solid];
m3_142 -> m3_102  [key=2, style=dotted];
m3_142 -> m3_143  [key=0, style=solid];
m3_151 -> m3_102  [key=2, style=dotted];
m3_151 -> m3_152  [key=0, style=solid];
m3_170 -> m3_102  [key=2, style=dotted];
m3_170 -> m3_171  [key=0, style=solid];
m3_198 -> m3_102  [key=2, style=dotted];
m3_198 -> m3_199  [key=0, style=solid];
m3_220 -> m3_102  [key=2, style=dotted];
m3_220 -> m3_221  [key=0, style=solid];
m3_239 -> m3_102  [key=2, style=dotted];
m3_239 -> m3_240  [key=0, style=solid];
m3_259 -> m3_102  [key=2, style=dotted];
m3_259 -> m3_260  [key=0, style=solid];
m3_311 -> m3_102  [key=2, style=dotted];
m3_311 -> m3_312  [key=0, style=solid];
m3_330 -> m3_102  [key=2, style=dotted];
m3_330 -> m3_331  [key=0, style=solid];
m3_353 -> m3_102  [key=2, style=dotted];
m3_353 -> m3_354  [key=0, style=solid];
m3_377 -> m3_102  [key=2, style=dotted];
m3_377 -> m3_378  [key=0, style=solid];
m3_89 -> m3_94  [key=2, style=dotted];
m3_89 -> m3_95  [key=2, style=dotted];
m3_89 -> m3_90  [key=0, style=solid];
m3_135 -> m3_94  [key=2, style=dotted];
m3_135 -> m3_95  [key=2, style=dotted];
m3_135 -> m3_136  [key=0, style=solid];
m3_158 -> m3_94  [key=2, style=dotted];
m3_158 -> m3_95  [key=2, style=dotted];
m3_158 -> m3_159  [key=0, style=solid];
m3_177 -> m3_94  [key=2, style=dotted];
m3_177 -> m3_95  [key=2, style=dotted];
m3_177 -> m3_178  [key=0, style=solid];
m3_205 -> m3_94  [key=2, style=dotted];
m3_205 -> m3_95  [key=2, style=dotted];
m3_205 -> m3_206  [key=0, style=solid];
m3_90 -> m3_96  [key=2, style=dotted];
m3_90 -> m3_91  [key=0, style=solid];
m3_90 -> m3_92  [color=darkseagreen4, key=1, label=negotiator, style=dashed];
m3_136 -> m3_96  [key=2, style=dotted];
m3_136 -> m3_137  [key=0, style=solid];
m3_136 -> m3_138  [color=darkseagreen4, key=1, label=negotiator, style=dashed];
m3_159 -> m3_96  [key=2, style=dotted];
m3_159 -> m3_160  [key=0, style=solid];
m3_178 -> m3_96  [key=2, style=dotted];
m3_178 -> m3_179  [key=0, style=solid];
m3_178 -> m3_180  [color=darkseagreen4, key=1, label=negotiator, style=dashed];
m3_178 -> m3_181  [color=darkseagreen4, key=1, label=negotiator, style=dashed];
m3_206 -> m3_96  [key=2, style=dotted];
m3_206 -> m3_207  [key=0, style=solid];
m3_444 -> m3_96  [key=2, style=dotted];
m3_444 -> m3_445  [key=0, style=solid];
m3_444 -> m3_446  [color=darkseagreen4, key=1, label=negotiator, style=dashed];
m3_444 -> m3_447  [color=darkseagreen4, key=1, label=negotiator, style=dashed];
m3_281 -> m3_282  [key=0, style=solid];
m3_281 -> m3_284  [key=2, style=dotted];
m3_299 -> m3_300  [key=0, style=solid];
m3_299 -> m3_284  [key=2, style=dotted];
m3_402 -> m3_403  [key=0, style=solid];
m3_402 -> m3_284  [key=2, style=dotted];
m3_420 -> m3_421  [key=0, style=solid];
m3_420 -> m3_284  [key=2, style=dotted];
m3_435 -> m3_436  [key=0, style=solid];
m3_435 -> m3_437  [key=2, style=dotted];
m3_17 -> m3_18  [key=0, style=solid];
m3_19 -> m3_17  [color=blue, key=0, style=bold];
m3_34 -> m3_35  [key=0, style=solid];
m3_36 -> m3_34  [color=blue, key=0, style=bold];
m3_49 -> m3_50  [key=0, style=solid];
m3_51 -> m3_49  [color=blue, key=0, style=bold];
m3_73 -> m3_74  [key=0, style=solid];
m3_75 -> m3_73  [color=blue, key=0, style=bold];
m3_98 -> m3_100  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m3_98 -> m3_99  [key=0, style=solid];
m3_101 -> m3_98  [color=blue, key=0, style=bold];
m3_141 -> m3_143  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m3_141 -> m3_142  [key=0, style=solid];
m3_144 -> m3_141  [color=blue, key=0, style=bold];
m3_150 -> m3_152  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m3_150 -> m3_151  [key=0, style=solid];
m3_153 -> m3_150  [color=blue, key=0, style=bold];
m3_155 -> m3_156  [key=0, style=solid];
m3_155 -> m3_13  [key=2, style=dotted];
m3_155 -> m3_157  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_169 -> m3_171  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m3_169 -> m3_170  [key=0, style=solid];
m3_172 -> m3_169  [color=blue, key=0, style=bold];
m3_174 -> m3_175  [key=0, style=solid];
m3_174 -> m3_13  [key=2, style=dotted];
m3_174 -> m3_176  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_197 -> m3_199  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m3_197 -> m3_198  [key=0, style=solid];
m3_200 -> m3_197  [color=blue, key=0, style=bold];
m3_202 -> m3_203  [key=0, style=solid];
m3_202 -> m3_13  [key=2, style=dotted];
m3_202 -> m3_204  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_219 -> m3_221  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m3_219 -> m3_220  [key=0, style=solid];
m3_222 -> m3_219  [color=blue, key=0, style=bold];
m3_224 -> m3_226  [key=2, style=dotted];
m3_224 -> m3_225  [key=0, style=solid];
m3_224 -> m3_13  [key=2, style=dotted];
m3_224 -> m3_227  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_238 -> m3_240  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m3_238 -> m3_239  [key=0, style=solid];
m3_241 -> m3_238  [color=blue, key=0, style=bold];
m3_243 -> m3_226  [key=2, style=dotted];
m3_243 -> m3_244  [key=0, style=solid];
m3_243 -> m3_13  [key=2, style=dotted];
m3_243 -> m3_245  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_258 -> m3_260  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m3_258 -> m3_259  [key=0, style=solid];
m3_261 -> m3_258  [color=blue, key=0, style=bold];
m3_263 -> m3_226  [key=2, style=dotted];
m3_263 -> m3_264  [key=0, style=solid];
m3_263 -> m3_13  [key=2, style=dotted];
m3_263 -> m3_265  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_280 -> m3_282  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m3_280 -> m3_281  [key=0, style=solid];
m3_283 -> m3_280  [color=blue, key=0, style=bold];
m3_286 -> m3_226  [key=2, style=dotted];
m3_286 -> m3_287  [key=0, style=solid];
m3_286 -> m3_13  [key=2, style=dotted];
m3_298 -> m3_300  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m3_298 -> m3_299  [key=0, style=solid];
m3_301 -> m3_298  [color=blue, key=0, style=bold];
m3_303 -> m3_226  [key=2, style=dotted];
m3_303 -> m3_304  [key=0, style=solid];
m3_303 -> m3_13  [key=2, style=dotted];
m3_310 -> m3_312  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m3_310 -> m3_311  [key=0, style=solid];
m3_313 -> m3_310  [color=blue, key=0, style=bold];
m3_315 -> m3_226  [key=2, style=dotted];
m3_315 -> m3_316  [key=0, style=solid];
m3_315 -> m3_13  [key=2, style=dotted];
m3_315 -> m3_317  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_329 -> m3_331  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m3_329 -> m3_330  [key=0, style=solid];
m3_332 -> m3_329  [color=blue, key=0, style=bold];
m3_334 -> m3_226  [key=2, style=dotted];
m3_334 -> m3_335  [key=0, style=solid];
m3_334 -> m3_13  [key=2, style=dotted];
m3_334 -> m3_336  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_352 -> m3_354  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m3_352 -> m3_353  [key=0, style=solid];
m3_355 -> m3_352  [color=blue, key=0, style=bold];
m3_357 -> m3_226  [key=2, style=dotted];
m3_357 -> m3_358  [key=0, style=solid];
m3_357 -> m3_13  [key=2, style=dotted];
m3_357 -> m3_359  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_376 -> m3_378  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m3_376 -> m3_377  [key=0, style=solid];
m3_379 -> m3_376  [color=blue, key=0, style=bold];
m3_381 -> m3_226  [key=2, style=dotted];
m3_381 -> m3_382  [key=0, style=solid];
m3_381 -> m3_13  [key=2, style=dotted];
m3_381 -> m3_383  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_401 -> m3_403  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m3_401 -> m3_402  [key=0, style=solid];
m3_404 -> m3_401  [color=blue, key=0, style=bold];
m3_406 -> m3_226  [key=2, style=dotted];
m3_406 -> m3_407  [key=0, style=solid];
m3_406 -> m3_13  [key=2, style=dotted];
m3_406 -> m3_408  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_419 -> m3_421  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m3_419 -> m3_420  [key=0, style=solid];
m3_422 -> m3_419  [color=blue, key=0, style=bold];
m3_424 -> m3_226  [key=2, style=dotted];
m3_424 -> m3_425  [key=0, style=solid];
m3_424 -> m3_13  [key=2, style=dotted];
m3_184 -> m3_185  [key=0, style=solid];
m3_184 -> m3_186  [color=darkseagreen4, key=1, label="Nancy.Testing.BrowserContext", style=dashed];
m3_184 -> m3_187  [color=darkseagreen4, key=1, label="Nancy.Testing.BrowserContext", style=dashed];
m3_209 -> m3_210  [key=0, style=solid];
m3_209 -> m3_211  [color=darkseagreen4, key=1, label="Nancy.Testing.BrowserContext", style=dashed];
m3_209 -> m3_212  [color=darkseagreen4, key=1, label="Nancy.Testing.BrowserContext", style=dashed];
m3_230 -> m3_231  [key=0, style=solid];
m3_250 -> m3_251  [key=0, style=solid];
m3_271 -> m3_272  [key=0, style=solid];
m3_288 -> m3_289  [key=0, style=solid];
m3_321 -> m3_322  [key=0, style=solid];
m3_340 -> m3_341  [key=0, style=solid];
m3_363 -> m3_364  [key=0, style=solid];
m3_387 -> m3_388  [key=0, style=solid];
m3_389 -> m3_387  [color=blue, key=0, style=bold];
m3_390 -> m3_391  [key=0, style=solid];
m3_411 -> m3_412  [key=0, style=solid];
m3_426 -> m3_427  [key=0, style=solid];
m3_438 -> m3_439  [key=0, style=solid];
m3_440 -> m3_438  [color=blue, key=0, style=bold];
m3_88 -> m3_89  [key=0, style=solid];
m3_134 -> m3_135  [key=0, style=solid];
m3_157 -> m3_158  [key=0, style=solid];
m3_176 -> m3_177  [key=0, style=solid];
m3_204 -> m3_205  [key=0, style=solid];
m3_91 -> m3_92  [key=0, style=solid];
m3_91 -> m3_97  [key=2, style=dotted];
m3_92 -> m3_93  [key=0, style=solid];
m3_137 -> m3_138  [key=0, style=solid];
m3_137 -> m3_140  [key=2, style=dotted];
m3_138 -> m3_139  [key=0, style=solid];
m3_160 -> m3_161  [key=0, style=solid];
m3_179 -> m3_180  [key=0, style=solid];
m3_179 -> m3_183  [key=2, style=dotted];
m3_180 -> m3_181  [key=0, style=solid];
m3_180 -> m3_183  [key=2, style=dotted];
m3_181 -> m3_182  [key=0, style=solid];
m3_207 -> m3_208  [key=0, style=solid];
m3_443 -> m3_444  [key=0, style=solid];
m3_445 -> m3_446  [key=0, style=solid];
m3_445 -> m3_447  [key=0, style=solid];
m3_446 -> m3_447  [key=0, style=solid];
m3_446 -> m3_449  [key=2, style=dotted];
m3_447 -> m3_448  [key=0, style=solid];
m3_11 -> m3_12  [key=0, style=solid];
m3_11 -> m3_13  [key=2, style=dotted];
m3_11 -> m3_14  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_29 -> m3_30  [key=0, style=solid];
m3_29 -> m3_13  [key=2, style=dotted];
m3_29 -> m3_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_44 -> m3_45  [key=0, style=solid];
m3_44 -> m3_13  [key=2, style=dotted];
m3_44 -> m3_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_59 -> m3_60  [key=0, style=solid];
m3_59 -> m3_13  [key=2, style=dotted];
m3_59 -> m3_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_86 -> m3_88  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_86 -> m3_87  [key=0, style=solid];
m3_86 -> m3_13  [key=2, style=dotted];
m3_132 -> m3_134  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_132 -> m3_133  [key=0, style=solid];
m3_132 -> m3_13  [key=2, style=dotted];
m3_360 -> m3_361  [key=0, style=solid];
m3_360 -> m3_362  [key=2, style=dotted];
m3_427 -> m3_428  [key=0, style=solid];
m3_427 -> m3_189  [key=2, style=dotted];
m3_434 -> m3_435  [key=0, style=solid];
m3_436 -> m3_434  [color=blue, key=0, style=bold];
m3_154 -> m3_155  [key=0, style=solid];
m3_156 -> m3_154  [color=blue, key=0, style=bold];
m3_173 -> m3_174  [key=0, style=solid];
m3_175 -> m3_173  [color=blue, key=0, style=bold];
m3_201 -> m3_202  [key=0, style=solid];
m3_203 -> m3_201  [color=blue, key=0, style=bold];
m3_223 -> m3_224  [key=0, style=solid];
m3_225 -> m3_223  [color=blue, key=0, style=bold];
m3_227 -> m3_228  [key=0, style=solid];
m3_242 -> m3_243  [key=0, style=solid];
m3_244 -> m3_242  [color=blue, key=0, style=bold];
m3_245 -> m3_246  [key=0, style=solid];
m3_245 -> m3_247  [color=darkseagreen4, key=1, label="Nancy.Responses.Negotiation.Negotiator", style=dashed];
m3_262 -> m3_263  [key=0, style=solid];
m3_264 -> m3_262  [color=blue, key=0, style=bold];
m3_265 -> m3_266  [key=0, style=solid];
m3_265 -> m3_267  [color=darkseagreen4, key=1, label="Nancy.Responses.Negotiation.Negotiator", style=dashed];
m3_265 -> m3_268  [color=darkseagreen4, key=1, label="Nancy.Responses.Negotiation.Negotiator", style=dashed];
m3_285 -> m3_286  [key=0, style=solid];
m3_287 -> m3_285  [color=blue, key=0, style=bold];
m3_302 -> m3_303  [key=0, style=solid];
m3_304 -> m3_302  [color=blue, key=0, style=bold];
m3_314 -> m3_315  [key=0, style=solid];
m3_316 -> m3_314  [color=blue, key=0, style=bold];
m3_317 -> m3_318  [key=0, style=solid];
m3_333 -> m3_334  [key=0, style=solid];
m3_335 -> m3_333  [color=blue, key=0, style=bold];
m3_336 -> m3_337  [key=0, style=solid];
m3_356 -> m3_357  [key=0, style=solid];
m3_358 -> m3_356  [color=blue, key=0, style=bold];
m3_359 -> m3_360  [key=0, style=solid];
m3_380 -> m3_381  [key=0, style=solid];
m3_382 -> m3_380  [color=blue, key=0, style=bold];
m3_383 -> m3_384  [key=0, style=solid];
m3_405 -> m3_406  [key=0, style=solid];
m3_407 -> m3_405  [color=blue, key=0, style=bold];
m3_408 -> m3_409  [key=0, style=solid];
m3_423 -> m3_424  [key=0, style=solid];
m3_425 -> m3_423  [color=blue, key=0, style=bold];
m3_188 -> m3_184  [color=blue, key=0, style=bold];
m3_185 -> m3_186  [key=0, style=solid];
m3_185 -> m3_189  [key=2, style=dotted];
m3_186 -> m3_187  [key=0, style=solid];
m3_186 -> m3_190  [key=2, style=dotted];
m3_187 -> m3_188  [key=0, style=solid];
m3_187 -> m3_190  [key=2, style=dotted];
m3_213 -> m3_209  [color=blue, key=0, style=bold];
m3_210 -> m3_211  [key=0, style=solid];
m3_210 -> m3_189  [key=2, style=dotted];
m3_211 -> m3_212  [key=0, style=solid];
m3_211 -> m3_190  [key=2, style=dotted];
m3_212 -> m3_213  [key=0, style=solid];
m3_212 -> m3_190  [key=2, style=dotted];
m3_232 -> m3_230  [color=blue, key=0, style=bold];
m3_231 -> m3_232  [key=0, style=solid];
m3_231 -> m3_190  [key=2, style=dotted];
m3_252 -> m3_250  [color=blue, key=0, style=bold];
m3_251 -> m3_252  [key=0, style=solid];
m3_251 -> m3_190  [key=2, style=dotted];
m3_273 -> m3_271  [color=blue, key=0, style=bold];
m3_272 -> m3_273  [key=0, style=solid];
m3_272 -> m3_190  [key=2, style=dotted];
m3_290 -> m3_288  [color=blue, key=0, style=bold];
m3_289 -> m3_290  [key=0, style=solid];
m3_289 -> m3_189  [key=2, style=dotted];
m3_323 -> m3_321  [color=blue, key=0, style=bold];
m3_322 -> m3_323  [key=0, style=solid];
m3_322 -> m3_190  [key=2, style=dotted];
m3_342 -> m3_340  [color=blue, key=0, style=bold];
m3_341 -> m3_342  [key=0, style=solid];
m3_341 -> m3_190  [key=2, style=dotted];
m3_365 -> m3_363  [color=blue, key=0, style=bold];
m3_364 -> m3_365  [key=0, style=solid];
m3_364 -> m3_190  [key=2, style=dotted];
m3_392 -> m3_390  [color=blue, key=0, style=bold];
m3_391 -> m3_392  [key=0, style=solid];
m3_391 -> m3_190  [key=2, style=dotted];
m3_413 -> m3_411  [color=blue, key=0, style=bold];
m3_412 -> m3_413  [key=0, style=solid];
m3_412 -> m3_190  [key=2, style=dotted];
m3_428 -> m3_426  [color=blue, key=0, style=bold];
m3_93 -> m3_88  [color=blue, key=0, style=bold];
m3_139 -> m3_134  [color=blue, key=0, style=bold];
m3_161 -> m3_157  [color=blue, key=0, style=bold];
m3_182 -> m3_176  [color=blue, key=0, style=bold];
m3_208 -> m3_204  [color=blue, key=0, style=bold];
m3_448 -> m3_443  [color=blue, key=0, style=bold];
m3_10 -> m3_11  [key=0, style=solid];
m3_12 -> m3_10  [color=blue, key=0, style=bold];
m3_14 -> m3_15  [key=0, style=solid];
m3_28 -> m3_29  [key=0, style=solid];
m3_30 -> m3_28  [color=blue, key=0, style=bold];
m3_31 -> m3_32  [key=0, style=solid];
m3_43 -> m3_44  [key=0, style=solid];
m3_45 -> m3_43  [color=blue, key=0, style=bold];
m3_46 -> m3_47  [key=0, style=solid];
m3_58 -> m3_59  [key=0, style=solid];
m3_60 -> m3_58  [color=blue, key=0, style=bold];
m3_61 -> m3_62  [key=0, style=solid];
m3_85 -> m3_86  [key=0, style=solid];
m3_87 -> m3_85  [color=blue, key=0, style=bold];
m3_131 -> m3_132  [key=0, style=solid];
m3_133 -> m3_131  [color=blue, key=0, style=bold];
m3_361 -> m3_359  [color=blue, key=0, style=bold];
m3_229 -> m3_227  [color=blue, key=0, style=bold];
m3_228 -> m3_183  [key=2, style=dotted];
m3_228 -> m3_229  [key=0, style=solid];
m3_248 -> m3_245  [color=blue, key=0, style=bold];
m3_246 -> m3_247  [key=0, style=solid];
m3_246 -> m3_249  [key=2, style=dotted];
m3_247 -> m3_183  [key=2, style=dotted];
m3_247 -> m3_248  [key=0, style=solid];
m3_269 -> m3_265  [color=blue, key=0, style=bold];
m3_266 -> m3_267  [key=0, style=solid];
m3_266 -> m3_249  [key=2, style=dotted];
m3_267 -> m3_183  [key=2, style=dotted];
m3_267 -> m3_268  [key=0, style=solid];
m3_268 -> m3_269  [key=0, style=solid];
m3_268 -> m3_270  [key=2, style=dotted];
m3_319 -> m3_317  [color=blue, key=0, style=bold];
m3_318 -> m3_319  [key=0, style=solid];
m3_318 -> m3_320  [key=2, style=dotted];
m3_338 -> m3_336  [color=blue, key=0, style=bold];
m3_337 -> m3_338  [key=0, style=solid];
m3_337 -> m3_339  [key=2, style=dotted];
m3_385 -> m3_383  [color=blue, key=0, style=bold];
m3_384 -> m3_385  [key=0, style=solid];
m3_384 -> m3_386  [key=2, style=dotted];
m3_410 -> m3_408  [color=blue, key=0, style=bold];
m3_409 -> m3_183  [key=2, style=dotted];
m3_409 -> m3_410  [key=0, style=solid];
m3_16 -> m3_14  [color=blue, key=0, style=bold];
m3_15 -> m3_16  [key=0, style=solid];
m3_33 -> m3_31  [color=blue, key=0, style=bold];
m3_32 -> m3_33  [key=0, style=solid];
m3_48 -> m3_46  [color=blue, key=0, style=bold];
m3_47 -> m3_48  [key=0, style=solid];
m3_64 -> m3_61  [color=blue, key=0, style=bold];
m3_62 -> m3_63  [key=0, style=solid];
m3_62 -> m3_66  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
m3_63 -> m3_64  [key=0, style=solid];
m3_66 -> m3_67  [key=0, style=solid];
m3_66 -> m3_70  [key=2, style=dotted];
m3_67 -> m3_68  [key=0, style=solid];
m3_67 -> m3_71  [key=2, style=dotted];
m3_68 -> m3_69  [key=0, style=solid];
m3_68 -> m3_72  [key=2, style=dotted];
m3_69 -> m3_65  [color=blue, key=0, style=bold];
m3_21 -> m3_22  [key=0, style=solid];
m3_23 -> m3_7  [key=2, style=dotted];
m3_23 -> m3_24  [key=0, style=solid];
m3_23 -> m3_35  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m3_24 -> m3_8  [key=2, style=dotted];
m3_24 -> m3_25  [key=0, style=solid];
m3_25 -> m3_9  [key=2, style=dotted];
m3_25 -> m3_26  [key=0, style=solid];
m3_25 -> m3_27  [key=2, style=dotted];
m3_22 -> m3_23  [key=0, style=solid];
m3_22 -> m3_35  [color=darkseagreen4, key=1, label=module, style=dashed];
m3_22 -> m3_6  [key=2, style=dotted];
m3_22 -> m3_29  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator", style=dashed];
m3_26 -> m3_21  [color=blue, key=0, style=bold];
m3_414 -> m3_415  [key=0, style=solid];
m3_414 -> m3_416  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_414 -> m3_427  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_415 -> m3_7  [key=2, style=dotted];
m3_415 -> m3_416  [key=0, style=solid];
m3_415 -> m3_420  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m3_415 -> m3_421  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m3_416 -> m3_8  [key=2, style=dotted];
m3_416 -> m3_417  [key=0, style=solid];
m3_416 -> m3_426  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_417 -> m3_9  [key=2, style=dotted];
m3_417 -> m3_418  [key=0, style=solid];
m3_418 -> m3_414  [color=blue, key=0, style=bold];
m3_274 -> m3_275  [key=0, style=solid];
m3_275 -> m3_7  [key=2, style=dotted];
m3_275 -> m3_276  [key=0, style=solid];
m3_275 -> m3_281  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m3_275 -> m3_282  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m3_276 -> m3_8  [key=2, style=dotted];
m3_276 -> m3_277  [key=0, style=solid];
m3_276 -> m3_288  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_276 -> m3_278  [color=darkseagreen4, key=1, label=response, style=dashed];
m3_277 -> m3_278  [key=0, style=solid];
m3_277 -> n65  [key=2, style=dotted];
m3_277 -> m3_84  [key=2, style=dotted];
m3_278 -> m3_279  [key=0, style=solid];
m3_278 -> m3_168  [key=2, style=dotted];
m3_278 -> m3_84  [key=2, style=dotted];
m3_279 -> m3_274  [color=blue, key=0, style=bold];
m3_103 -> m3_104  [color=green, key=0, style=solid];
m3_104 -> m3_104  [color=green, key=3, label="method methodReturn dynamic ", style=bold];
m3_104 -> m3_105  [color=green, key=0, style=solid];
m3_104 -> m3_109  [color=green, key=2, style=dotted];
m3_104 -> m3_111  [color=green, key=1, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator", style=dashed];
m3_104 -> m3_123  [color=green, key=1, label=module, style=dashed];
m3_105 -> m3_106  [color=green, key=0, style=solid];
m3_105 -> m3_7  [color=green, key=2, style=dotted];
m3_105 -> m3_122  [color=green, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m3_105 -> m3_123  [color=green, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m3_106 -> m3_107  [color=green, key=0, style=solid];
m3_106 -> m3_8  [color=green, key=2, style=dotted];
m3_107 -> m3_108  [color=green, key=0, style=solid];
m3_107 -> m3_9  [color=green, key=2, style=dotted];
m3_108 -> m3_103  [color=blue, key=0, style=bold];
m3_343 -> m3_344  [key=0, style=solid];
m3_345 -> m3_7  [key=2, style=dotted];
m3_345 -> m3_346  [key=0, style=solid];
m3_345 -> m3_353  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m3_345 -> m3_354  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m3_346 -> m3_8  [key=2, style=dotted];
m3_346 -> m3_347  [key=0, style=solid];
m3_346 -> m3_363  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_344 -> m3_345  [key=0, style=solid];
m3_344 -> m3_354  [color=darkseagreen4, key=1, label=negotiatedCookie, style=dashed];
m3_344 -> m3_349  [key=2, style=dotted];
m3_344 -> m3_357  [color=darkseagreen4, key=1, label=negotiatedCookie, style=dashed];
m3_344 -> m3_360  [color=darkseagreen4, key=1, label=negotiatedCookie, style=dashed];
m3_344 -> m3_347  [color=darkseagreen4, key=1, label=negotiatedCookie, style=dashed];
m3_347 -> m3_348  [key=0, style=solid];
m3_347 -> m3_350  [key=2, style=dotted];
m3_347 -> m3_351  [key=2, style=dotted];
m3_348 -> m3_343  [color=blue, key=0, style=bold];
m3_125 -> m3_126  [key=0, style=solid];
m3_127 -> m3_7  [key=2, style=dotted];
m3_127 -> m3_128  [key=0, style=solid];
m3_127 -> m3_142  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m3_127 -> m3_143  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m3_128 -> m3_8  [key=2, style=dotted];
m3_128 -> m3_129  [key=0, style=solid];
m3_129 -> m3_9  [key=2, style=dotted];
m3_129 -> m3_130  [key=0, style=solid];
m3_126 -> m3_127  [key=0, style=solid];
m3_126 -> m3_143  [color=darkseagreen4, key=1, label=module, style=dashed];
m3_126 -> m3_126  [color=darkorchid, key=3, label="method methodReturn dynamic ", style=bold];
m3_126 -> m3_6  [key=2, style=dotted];
m3_126 -> m3_132  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator", style=dashed];
m3_130 -> m3_125  [color=blue, key=0, style=bold];
m3_253 -> m3_254  [key=0, style=solid];
m3_254 -> m3_7  [key=2, style=dotted];
m3_254 -> m3_255  [key=0, style=solid];
m3_254 -> m3_259  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m3_254 -> m3_260  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m3_255 -> m3_8  [key=2, style=dotted];
m3_255 -> m3_256  [key=0, style=solid];
m3_255 -> m3_271  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_256 -> m3_9  [key=2, style=dotted];
m3_256 -> m3_257  [key=0, style=solid];
m3_256 -> m3_27  [key=2, style=dotted];
m3_257 -> m3_253  [color=blue, key=0, style=bold];
m3_76 -> m3_77  [key=0, style=solid];
m3_78 -> m3_7  [key=2, style=dotted];
m3_78 -> m3_79  [key=0, style=solid];
m3_78 -> m3_99  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m3_78 -> m3_100  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m3_79 -> m3_8  [key=2, style=dotted];
m3_79 -> m3_80  [key=0, style=solid];
m3_79 -> m3_81  [color=darkseagreen4, key=1, label=response, style=dashed];
m3_81 -> m3_9  [key=2, style=dotted];
m3_81 -> m3_82  [key=0, style=solid];
m3_77 -> m3_78  [key=0, style=solid];
m3_77 -> m3_100  [color=darkseagreen4, key=1, label=module, style=dashed];
m3_77 -> m3_77  [color=darkorchid, key=3, label="method methodReturn dynamic ", style=bold];
m3_77 -> m3_6  [key=2, style=dotted];
m3_77 -> m3_86  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableNancyModule.ConfigurableNancyModuleConfigurator", style=dashed];
m3_80 -> m3_81  [key=0, style=solid];
m3_80 -> n65  [key=2, style=dotted];
m3_80 -> m3_84  [key=2, style=dotted];
m3_82 -> m3_76  [color=blue, key=0, style=bold];
m3_486 -> m3_123  [color=green, key=1, label=module, style=dashed];
m3_481 -> m3_18  [color=darkseagreen4, key=1, label=module, style=dashed];
m3_482 -> m3_35  [color=darkseagreen4, key=1, label=module, style=dashed];
m3_483 -> m3_50  [color=darkseagreen4, key=1, label=module, style=dashed];
m3_484 -> m3_74  [color=darkseagreen4, key=1, label=module, style=dashed];
m3_485 -> m3_100  [color=darkseagreen4, key=1, label=module, style=dashed];
m3_487 -> m3_143  [color=darkseagreen4, key=1, label=module, style=dashed];
m3_488 -> m3_354  [color=darkseagreen4, key=1, label=negotiatedCookie, style=dashed];
m3_488 -> m3_357  [color=darkseagreen4, key=1, label=negotiatedCookie, style=dashed];
m3_488 -> m3_360  [color=darkseagreen4, key=1, label=negotiatedCookie, style=dashed];
m3_489 -> m3_388  [color=darkseagreen4, key=1, label=browser, style=dashed];
m3_491 -> m3_439  [color=darkseagreen4, key=1, label=browser, style=dashed];
m3_492 -> m3_445  [color=darkseagreen4, key=1, label="System.Action<Nancy.Responses.Negotiation.Negotiator>", style=dashed];
m3_492 -> m3_446  [color=darkseagreen4, key=1, label="System.Action<Nancy.Responses.Negotiation.Negotiator>", style=dashed];
m3_490 -> m3_427  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_0 -> m5_1  [key=0, style=solid];
m5_0 -> m5_2  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Nancy.Validation.IModelValidatorFactory>", style=dashed];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_3  [key=2, style=dotted];
m5_1 -> m5_4  [key=2, style=dotted];
m5_2 -> m5_0  [color=blue, key=0, style=bold];
m5_2 -> m5_3  [key=0, style=solid];
m5_2 -> m5_5  [key=2, style=dotted];
m5_44 -> m5_45  [key=0, style=solid];
m5_45 -> m5_46  [key=0, style=solid];
m5_45 -> m5_8  [key=2, style=dotted];
m5_45 -> m5_48  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_46 -> m5_47  [key=0, style=solid];
m5_46 -> m5_9  [key=2, style=dotted];
m5_47 -> m5_44  [color=blue, key=0, style=bold];
m5_27 -> m5_25  [color=blue, key=0, style=bold];
m5_9 -> m5_10  [key=0, style=solid];
m5_9 -> m5_13  [key=2, style=dotted];
m5_14 -> m5_15  [key=0, style=solid];
m5_14 -> m5_25  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_14 -> m5_17  [color=darkorchid, key=3, label="method methodReturn Nancy.Validation.IModelValidator CreateValidator", style=bold];
m5_15 -> m5_16  [key=0, style=solid];
m5_15 -> m5_20  [key=2, style=dotted];
m5_15 -> m5_21  [key=2, style=dotted];
m5_15 -> m5_22  [key=2, style=dotted];
m5_15 -> m5_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_15 -> m5_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_15 -> m5_18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_15 -> m5_8  [key=2, style=dotted];
m5_16 -> m5_17  [key=0, style=solid];
m5_16 -> m5_18  [key=0, style=solid];
m5_16 -> m5_9  [key=2, style=dotted];
m5_18 -> m5_19  [key=0, style=solid];
m5_18 -> m5_23  [key=2, style=dotted];
m5_17 -> m5_19  [key=0, style=solid];
m5_17 -> m5_14  [color=blue, key=0, style=bold];
m5_19 -> m5_14  [color=blue, key=0, style=bold];
m5_19 -> m5_20  [key=0, style=solid];
m5_4 -> m5_5  [key=0, style=solid];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_8  [key=2, style=dotted];
m5_5 -> m5_10  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_6 -> m5_7  [key=0, style=solid];
m5_6 -> m5_9  [key=2, style=dotted];
m5_7 -> m5_4  [color=blue, key=0, style=bold];
m5_7 -> m5_8  [color=green, key=0, style=solid];
m5_7 -> m5_9  [key=0, style=solid];
m5_7 -> d10  [key=2, style=dotted];
m5_29 -> m5_30  [key=0, style=solid];
m5_30 -> m5_31  [key=0, style=solid];
m5_30 -> m5_8  [key=2, style=dotted];
m5_30 -> m5_33  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_30 -> m5_28  [color=blue, key=0, style=bold];
m5_31 -> m5_32  [key=0, style=solid];
m5_31 -> m5_9  [key=2, style=dotted];
m5_31 -> m5_7  [color=darkseagreen4, key=1, label="Nancy.Validation.DefaultValidatorLocator", style=dashed];
m5_31 -> m5_1  [color=darkseagreen4, key=1, label="Nancy.Validation.DefaultValidatorLocator", style=dashed];
m5_31 -> m5_2  [color=darkseagreen4, key=1, label="Nancy.Validation.DefaultValidatorLocator", style=dashed];
m5_31 -> m5_15  [color=darkseagreen4, key=1, label="Nancy.Validation.DefaultValidatorLocator", style=dashed];
m5_32 -> m5_29  [color=blue, key=0, style=bold];
m5_32 -> m5_25  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_3 -> m5_0  [color=blue, key=0, style=bold];
m5_21 -> m5_22  [key=0, style=solid];
m5_22 -> m5_23  [color=red, key=0, style=solid];
m5_22 -> m5_8  [key=2, style=dotted];
m5_22 -> m5_25  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_23 -> m5_24  [color=red, key=0, style=solid];
m5_23 -> m5_9  [color=red, key=2, style=dotted];
m5_24 -> m5_21  [color=blue, key=0, style=bold];
m5_24 -> m5_25  [key=0, style=solid];
m5_28 -> m5_29  [key=0, style=solid];
m5_37 -> m5_38  [key=0, style=solid];
m5_38 -> m5_39  [key=0, style=solid];
m5_38 -> m5_8  [key=2, style=dotted];
m5_38 -> m5_41  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_39 -> m5_40  [key=0, style=solid];
m5_39 -> m5_9  [key=2, style=dotted];
m5_40 -> m5_37  [color=blue, key=0, style=bold];
m5_10 -> m5_11  [key=0, style=solid];
m5_10 -> m5_6  [color=blue, key=0, style=bold];
m5_11 -> m5_12  [key=0, style=solid];
m5_11 -> m5_13  [key=2, style=dotted];
m5_12 -> m5_10  [color=blue, key=0, style=bold];
m5_20 -> m5_18  [color=blue, key=0, style=bold];
m5_25 -> m5_26  [key=0, style=solid];
m5_25 -> m5_27  [key=2, style=dotted];
m5_26 -> m5_27  [key=0, style=solid];
m5_26 -> m5_28  [key=2, style=dotted];
m5_26 -> m5_24  [color=blue, key=0, style=bold];
m5_33 -> m5_34  [key=0, style=solid];
m5_34 -> m5_35  [key=0, style=solid];
m5_34 -> m5_36  [key=2, style=dotted];
m5_35 -> m5_33  [color=blue, key=0, style=bold];
m5_41 -> m5_42  [key=0, style=solid];
m5_42 -> m5_43  [key=0, style=solid];
m5_43 -> m5_41  [color=blue, key=0, style=bold];
m5_48 -> m5_49  [key=0, style=solid];
m5_49 -> m5_50  [key=0, style=solid];
m5_50 -> m5_48  [color=blue, key=0, style=bold];
m5_8 -> m5_10  [color=green, key=0, style=solid];
m5_8 -> m5_12  [color=green, key=2, style=dotted];
m5_51 -> m5_1  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Sessions.NullSessionProviderFixture", style=dashed];
m5_51 -> m5_5  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Sessions.NullSessionProviderFixture", style=dashed];
m5_51 -> m5_11  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Sessions.NullSessionProviderFixture", style=dashed];
m5_51 -> m5_15  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Sessions.NullSessionProviderFixture", style=dashed];
m5_51 -> m5_19  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Sessions.NullSessionProviderFixture", style=dashed];
m5_51 -> m5_22  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Sessions.NullSessionProviderFixture", style=dashed];
m5_51 -> m5_26  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Sessions.NullSessionProviderFixture", style=dashed];
m5_51 -> m5_30  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Sessions.NullSessionProviderFixture", style=dashed];
m5_51 -> m5_34  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Sessions.NullSessionProviderFixture", style=dashed];
m5_51 -> m5_38  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Sessions.NullSessionProviderFixture", style=dashed];
m5_51 -> m5_42  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Sessions.NullSessionProviderFixture", style=dashed];
m5_51 -> m5_45  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Sessions.NullSessionProviderFixture", style=dashed];
m5_51 -> m5_49  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Sessions.NullSessionProviderFixture", style=dashed];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_3  [key=2, style=dotted];
m6_2 -> m6_0  [color=blue, key=0, style=bold];
m6_7 -> m6_8  [key=0, style=solid];
m6_8 -> m6_9  [key=0, style=solid];
m6_8 -> m6_3  [key=2, style=dotted];
m6_9 -> m6_7  [color=blue, key=0, style=bold];
m6_10 -> m6_11  [key=0, style=solid];
m6_11 -> m6_12  [key=0, style=solid];
m6_11 -> m6_3  [key=2, style=dotted];
m6_12 -> m6_10  [color=blue, key=0, style=bold];
m6_4 -> m6_5  [key=0, style=solid];
m6_5 -> m6_6  [key=0, style=solid];
m6_5 -> m6_0  [key=2, style=dotted];
m6_6 -> m6_4  [color=blue, key=0, style=bold];
m6_13 -> m6_5  [color=darkseagreen4, key=1, label="Nancy.Session.NullSessionProvider", style=dashed];
m7_88 -> m7_89  [color=green, key=0, style=solid];
m7_88 -> m7_90  [color=green, key=1, label="Nancy.INancyModule", style=dashed];
m7_89 -> m7_90  [color=green, key=0, style=solid];
m7_89 -> m7_66  [color=green, key=2, style=dotted];
m7_89 -> m7_91  [color=green, key=1, label=model, style=dashed];
m7_90 -> m7_91  [color=green, key=0, style=solid];
m7_90 -> m7_34  [color=green, key=2, style=dotted];
m7_91 -> m7_92  [color=green, key=0, style=solid];
m7_92 -> m7_88  [color=blue, key=0, style=bold];
m7_52 -> m7_54  [color=darkseagreen4, key=1, label="Nancy.INancyModule", style=dashed];
m7_52 -> m7_53  [key=0, style=solid];
m7_54 -> m7_34  [key=2, style=dotted];
m7_54 -> m7_55  [key=0, style=solid];
m7_53 -> m7_43  [color=darkorchid, key=3, label="Local variable TModel model", style=bold];
m7_53 -> m7_54  [key=0, style=solid];
m7_53 -> m7_57  [key=2, style=dotted];
m7_53 -> m7_55  [color=darkseagreen4, key=1, label=model, style=dashed];
m7_55 -> m7_56  [key=0, style=solid];
m7_56 -> m7_52  [color=blue, key=0, style=bold];
m7_85 -> m7_66  [color=darkorchid, key=3, label="method methodReturn TModel BindTo", style=bold];
m7_85 -> m7_86  [key=0, style=solid];
m7_86 -> m7_27  [key=2, style=dotted];
m7_86 -> m7_66  [key=2, style=dotted];
m7_86 -> m7_87  [key=0, style=solid];
m7_87 -> m7_85  [color=blue, key=0, style=bold];
m7_49 -> m7_12  [color=darkorchid, key=3, label="method methodReturn TModel Bind", style=bold];
m7_49 -> m7_50  [key=0, style=solid];
m7_50 -> m7_12  [key=2, style=dotted];
m7_50 -> m7_27  [key=2, style=dotted];
m7_50 -> m7_51  [key=0, style=solid];
m7_51 -> m7_49  [color=blue, key=0, style=bold];
m7_76 -> m7_77  [key=0, style=solid];
m7_76 -> m7_78  [color=darkseagreen4, key=1, label="Nancy.INancyModule", style=dashed];
m7_77 -> m7_27  [key=2, style=dotted];
m7_77 -> m7_78  [key=0, style=solid];
m7_77 -> m7_75  [key=2, style=dotted];
m7_77 -> m7_79  [color=darkseagreen4, key=1, label=model, style=dashed];
m7_77 -> m7_63  [color=darkorchid, key=3, label="Local variable TModel model", style=bold];
m7_78 -> m7_34  [key=2, style=dotted];
m7_78 -> m7_79  [key=0, style=solid];
m7_79 -> m7_80  [key=0, style=solid];
m7_80 -> m7_76  [color=blue, key=0, style=bold];
m7_17 -> m7_9  [color=darkorchid, key=3, label="method methodReturn TModel Bind", style=bold];
m7_17 -> m7_18  [key=0, style=solid];
m7_18 -> m7_19  [key=0, style=solid];
m7_18 -> m7_20  [key=2, style=dotted];
m7_19 -> m7_17  [color=blue, key=0, style=bold];
m7_29 -> m7_31  [color=darkseagreen4, key=1, label="Nancy.INancyModule", style=dashed];
m7_29 -> m7_30  [key=0, style=solid];
m7_31 -> m7_34  [key=2, style=dotted];
m7_31 -> m7_32  [key=0, style=solid];
m7_30 -> m7_31  [key=0, style=solid];
m7_30 -> m7_21  [color=darkorchid, key=3, label="Local variable TModel model", style=bold];
m7_30 -> m7_28  [key=2, style=dotted];
m7_30 -> m7_32  [color=darkseagreen4, key=1, label=model, style=dashed];
m7_32 -> m7_33  [key=0, style=solid];
m7_33 -> m7_29  [color=blue, key=0, style=bold];
m7_35 -> m7_36  [key=0, style=solid];
m7_35 -> m7_37  [color=darkseagreen4, key=1, label="Nancy.INancyModule", style=dashed];
m7_36 -> m7_27  [key=2, style=dotted];
m7_36 -> m7_37  [key=0, style=solid];
m7_36 -> m7_28  [key=2, style=dotted];
m7_36 -> m7_38  [color=darkseagreen4, key=1, label=model, style=dashed];
m7_36 -> m7_21  [color=darkorchid, key=3, label="Local variable TModel model", style=bold];
m7_37 -> m7_34  [key=2, style=dotted];
m7_37 -> m7_38  [key=0, style=solid];
m7_38 -> m7_39  [key=0, style=solid];
m7_39 -> m7_35  [color=blue, key=0, style=bold];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_0  [color=blue, key=0, style=bold];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_3  [key=2, style=dotted];
m7_1 -> m7_4  [key=2, style=dotted];
m7_1 -> m7_5  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_43 -> m7_12  [color=darkorchid, key=3, label="method methodReturn TModel Bind", style=bold];
m7_43 -> m7_44  [key=0, style=solid];
m7_43 -> m7_52  [color=darkorchid, key=3, label="Parameter variable string[] blacklistedProperties", style=bold];
m7_43 -> m7_58  [color=darkorchid, key=3, label="Parameter variable Nancy.ModelBinding.BindingConfig configuration", style=bold];
m7_43 -> m7_0  [color=darkorchid, key=3, label="Parameter variable string[] blacklistedProperties", style=bold];
m7_44 -> m7_12  [key=2, style=dotted];
m7_44 -> m7_45  [key=0, style=solid];
m7_45 -> m7_43  [color=blue, key=0, style=bold];
m7_81 -> m7_82  [key=0, style=solid];
m7_82 -> m7_83  [key=0, style=solid];
m7_82 -> m7_16  [key=2, style=dotted];
m7_83 -> m7_84  [key=0, style=solid];
m7_84 -> m7_81  [color=blue, key=0, style=bold];
m7_2 -> m7_0  [color=blue, key=0, style=bold];
m7_13 -> m7_14  [key=0, style=solid];
m7_14 -> m7_16  [key=2, style=dotted];
m7_14 -> m7_15  [key=0, style=solid];
m7_15 -> m7_13  [color=blue, key=0, style=bold];
m7_9 -> m7_12  [color=darkorchid, key=3, label="method methodReturn dynamic Bind", style=bold];
m7_9 -> m7_10  [key=0, style=solid];
m7_9 -> m7_21  [color=darkorchid, key=3, label="Parameter variable string[] blacklistedProperties", style=bold];
m7_10 -> m7_12  [key=2, style=dotted];
m7_10 -> m7_11  [key=0, style=solid];
m7_11 -> m7_9  [color=blue, key=0, style=bold];
m7_40 -> m7_41  [color=green, key=0, style=solid];
m7_40 -> m7_12  [color=darkorchid, key=3, label="method methodReturn TModel Bind", style=bold];
m7_41 -> m7_42  [color=green, key=0, style=solid];
m7_41 -> m7_12  [color=green, key=2, style=dotted];
m7_42 -> m7_40  [color=blue, key=0, style=bold];
m7_12 -> m7_40  [color=darkorchid, key=3, label="Parameter variable Nancy.ModelBinding.BindingConfig configuration", style=bold];
m7_12 -> m7_43  [color=darkorchid, key=3, label="Parameter variable string[] blacklistedProperties", style=bold];
m7_12 -> m7_46  [color=darkorchid, key=3, label="Parameter variable Nancy.ModelBinding.BindingConfig configuration", style=bold];
m7_12 -> m7_49  [color=darkorchid, key=3, label="Parameter variable Nancy.ModelBinding.BindingConfig configuration", style=bold];
m7_12 -> m7_9  [color=darkorchid, key=3, label="Parameter variable string[] blacklistedProperties", style=bold];
m7_12 -> m7_0  [color=darkorchid, key=3, label="Parameter variable string[] blacklistedProperties", style=bold];
m7_66 -> m7_67  [color=darkorchid, key=3, label="Parameter variable TModel instance", style=bold];
m7_66 -> m7_63  [color=darkorchid, key=3, label="Parameter variable string[] blacklistedProperties", style=bold];
m7_66 -> m7_85  [color=darkorchid, key=3, label="Parameter variable Nancy.ModelBinding.BindingConfig configuration", style=bold];
m7_66 -> m7_88  [color=darkorchid, key=3, label="Parameter variable string[] blacklistedProperties", style=bold];
m7_66 -> m7_0  [color=darkorchid, key=3, label="Parameter variable string[] blacklistedProperties", style=bold];
m7_66 -> m7_82  [color=darkorchid, key=3, label="method methodReturn TModel BindTo", style=bold];
m7_63 -> m7_66  [color=darkorchid, key=3, label="method methodReturn TModel BindTo", style=bold];
m7_63 -> m7_0  [color=darkorchid, key=3, label="Parameter variable string[] blacklistedProperties", style=bold];
m7_63 -> m7_64  [key=0, style=solid];
m7_63 -> m7_70  [color=darkorchid, key=3, label="Parameter variable string[] blacklistedProperties", style=bold];
m7_63 -> m7_76  [color=darkorchid, key=3, label="Parameter variable TModel instance", style=bold];
m7_64 -> m7_66  [key=2, style=dotted];
m7_64 -> m7_65  [key=0, style=solid];
m7_65 -> m7_63  [color=blue, key=0, style=bold];
m7_70 -> m7_72  [color=darkseagreen4, key=1, label="Nancy.INancyModule", style=dashed];
m7_70 -> m7_71  [key=0, style=solid];
m7_72 -> m7_34  [key=2, style=dotted];
m7_72 -> m7_73  [key=0, style=solid];
m7_71 -> m7_63  [color=darkorchid, key=3, label="Local variable TModel model", style=bold];
m7_71 -> m7_72  [key=0, style=solid];
m7_71 -> m7_75  [key=2, style=dotted];
m7_71 -> m7_73  [color=darkseagreen4, key=1, label=model, style=dashed];
m7_73 -> m7_74  [key=0, style=solid];
m7_74 -> m7_70  [color=blue, key=0, style=bold];
m7_5 -> m7_6  [key=0, style=solid];
m7_6 -> m7_7  [key=0, style=solid];
m7_6 -> m7_8  [key=2, style=dotted];
m7_7 -> m7_5  [color=blue, key=0, style=bold];
m7_58 -> m7_59  [key=0, style=solid];
m7_58 -> m7_60  [color=darkseagreen4, key=1, label="Nancy.INancyModule", style=dashed];
m7_59 -> m7_27  [key=2, style=dotted];
m7_59 -> m7_43  [color=darkorchid, key=3, label="Local variable TModel model", style=bold];
m7_59 -> m7_60  [key=0, style=solid];
m7_59 -> m7_57  [key=2, style=dotted];
m7_59 -> m7_61  [color=darkseagreen4, key=1, label=model, style=dashed];
m7_60 -> m7_34  [key=2, style=dotted];
m7_60 -> m7_61  [key=0, style=solid];
m7_61 -> m7_62  [key=0, style=solid];
m7_62 -> m7_58  [color=blue, key=0, style=bold];
m7_24 -> m7_25  [key=0, style=solid];
m7_24 -> m7_21  [color=darkorchid, key=3, label="method methodReturn TModel Bind", style=bold];
m7_25 -> m7_27  [key=2, style=dotted];
m7_25 -> m7_26  [key=0, style=solid];
m7_25 -> m7_28  [key=2, style=dotted];
m7_26 -> m7_24  [color=blue, key=0, style=bold];
m7_67 -> m7_68  [color=green, key=0, style=solid];
m7_67 -> m7_66  [color=darkorchid, key=3, label="method methodReturn TModel BindTo", style=bold];
m7_68 -> m7_69  [color=green, key=0, style=solid];
m7_68 -> m7_27  [color=green, key=2, style=dotted];
m7_68 -> m7_66  [color=green, key=2, style=dotted];
m7_69 -> m7_67  [color=blue, key=0, style=bold];
m7_21 -> m7_9  [color=darkorchid, key=3, label="method methodReturn TModel Bind", style=bold];
m7_21 -> m7_0  [color=darkorchid, key=3, label="Parameter variable string[] blacklistedProperties", style=bold];
m7_21 -> m7_22  [key=0, style=solid];
m7_21 -> m7_29  [color=darkorchid, key=3, label="Parameter variable string[] blacklistedProperties", style=bold];
m7_22 -> m7_23  [key=0, style=solid];
m7_22 -> m7_20  [key=2, style=dotted];
m7_23 -> m7_21  [color=blue, key=0, style=bold];
m7_46 -> m7_12  [color=darkorchid, key=3, label="method methodReturn TModel Bind", style=bold];
m7_46 -> m7_47  [key=0, style=solid];
m7_47 -> m7_12  [key=2, style=dotted];
m7_47 -> m7_27  [key=2, style=dotted];
m7_47 -> m7_48  [key=0, style=solid];
m7_48 -> m7_46  [color=blue, key=0, style=bold];
m8_8 -> m8_9  [key=0, style=solid];
m8_9 -> m8_10  [key=0, style=solid];
m8_9 -> m8_15  [key=2, style=dotted];
m8_9 -> m8_16  [key=2, style=dotted];
m8_9 -> m8_12  [color=darkseagreen4, key=1, label=resourceStream, style=dashed];
m8_10 -> m8_11  [key=0, style=solid];
m8_10 -> m8_12  [key=0, style=solid];
m8_12 -> m8_13  [key=0, style=solid];
m8_12 -> m8_17  [key=2, style=dotted];
m8_11 -> m8_14  [key=0, style=solid];
m8_13 -> m8_14  [key=0, style=solid];
m8_13 -> m8_18  [key=2, style=dotted];
m8_14 -> m8_8  [color=blue, key=0, style=bold];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_2  [key=0, style=solid];
m8_2 -> m8_0  [color=blue, key=0, style=bold];
m8_3 -> m8_4  [color=red, key=0, style=solid];
m8_4 -> m8_5  [color=red, key=0, style=solid];
m8_4 -> n100  [color=red, key=2, style=dotted];
m8_4 -> m8_7  [color=red, key=2, style=dotted];
m8_5 -> m8_3  [color=blue, key=0, style=bold];
m8_19 -> m8_1  [color=darkseagreen4, key=1, label="Nancy.ViewEngines.Razor.NancyRazorErrorView", style=dashed];
m8_19 -> m8_4  [color=red, key=1, label="Nancy.ViewEngines.Razor.NancyRazorErrorView", style=dashed];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> m9_6  [key=2, style=dotted];
m9_2 -> m9_3  [key=0, style=solid];
m9_2 -> m9_7  [key=2, style=dotted];
m9_3 -> m9_4  [key=0, style=solid];
m9_3 -> n109  [key=2, style=dotted];
m9_4 -> m9_5  [key=0, style=solid];
m9_4 -> n109  [key=2, style=dotted];
m9_5 -> m9_0  [color=blue, key=0, style=bold];
m9_9 -> m9_10  [key=0, style=solid];
m9_9 -> m9_17  [color=darkseagreen4, key=1, label="Nancy.Responses.Negotiation.MediaRange", style=dashed];
m9_9 -> m9_11  [color=darkseagreen4, key=1, label="Nancy.Responses.Negotiation.MediaRange", style=dashed];
m9_9 -> m9_21  [color=darkseagreen4, key=1, label="Nancy.Responses.Negotiation.MediaRange", style=dashed];
m9_10 -> m9_11  [key=0, style=solid];
m9_10 -> m9_13  [key=2, style=dotted];
m9_10 -> m9_16  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_11 -> m9_12  [key=0, style=solid];
m9_11 -> m9_14  [key=2, style=dotted];
m9_11 -> m9_15  [key=2, style=dotted];
m9_11 -> m9_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_12 -> m9_9  [color=blue, key=0, style=bold];
m9_20 -> m9_21  [key=0, style=solid];
m9_17 -> m9_18  [key=0, style=solid];
m9_17 -> m9_19  [key=2, style=dotted];
m9_17 -> m9_17  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<Nancy.Responses.Negotiation.MediaRange, System.Func<dynamic>>", style=dashed];
m9_21 -> m9_22  [key=0, style=solid];
m9_21 -> m9_19  [key=2, style=dotted];
m9_21 -> m9_21  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<Nancy.Responses.Negotiation.MediaRange, System.Func<dynamic>>", style=dashed];
m9_16 -> m9_17  [key=0, style=solid];
m9_18 -> m9_16  [color=blue, key=0, style=bold];
m9_22 -> m9_20  [color=blue, key=0, style=bold];
m9_23 -> m9_1  [color=darkseagreen4, key=1, label="Nancy.Responses.Negotiation.NegotiationContext", style=dashed];
m9_23 -> m9_2  [color=darkseagreen4, key=1, label="Nancy.Responses.Negotiation.NegotiationContext", style=dashed];
m9_23 -> m9_3  [color=darkseagreen4, key=1, label="Nancy.Responses.Negotiation.NegotiationContext", style=dashed];
m9_23 -> m9_4  [color=darkseagreen4, key=1, label="Nancy.Responses.Negotiation.NegotiationContext", style=dashed];
m9_23 -> m9_10  [color=darkseagreen4, key=1, label="Nancy.Responses.Negotiation.NegotiationContext", style=dashed];
m9_23 -> m9_11  [color=darkseagreen4, key=1, label="Nancy.Responses.Negotiation.NegotiationContext", style=dashed];
m9_24 -> m9_17  [color=darkseagreen4, key=1, label="Nancy.Responses.Negotiation.MediaRange", style=dashed];
m9_24 -> m9_21  [color=darkseagreen4, key=1, label="Nancy.Responses.Negotiation.MediaRange", style=dashed];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_0  [color=blue, key=0, style=bold];
m10_8 -> m10_9  [key=0, style=solid];
m10_8 -> m10_10  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
m10_9 -> m10_10  [key=0, style=solid];
m10_9 -> m10_12  [color=darkseagreen4, key=1, label=webContext, style=dashed];
m10_9 -> m10_13  [color=darkseagreen4, key=1, label=webContext, style=dashed];
m10_10 -> m10_11  [key=0, style=solid];
m10_10 -> m10_15  [key=2, style=dotted];
m10_12 -> m10_13  [key=0, style=solid];
m10_12 -> m10_17  [key=2, style=dotted];
m10_13 -> m10_14  [key=0, style=solid];
m10_13 -> m10_18  [key=2, style=dotted];
m10_11 -> m10_12  [key=0, style=solid];
m10_11 -> m10_16  [key=2, style=dotted];
m10_11 -> m10_13  [color=darkseagreen4, key=1, label=nancyResponse, style=dashed];
m10_14 -> m10_8  [color=blue, key=0, style=bold];
m10_2 -> m10_3  [key=0, style=solid];
m10_3 -> m10_4  [key=0, style=solid];
m10_3 -> m10_5  [key=2, style=dotted];
m10_3 -> m10_6  [key=2, style=dotted];
m10_3 -> m10_7  [key=2, style=dotted];
m10_4 -> m10_2  [color=blue, key=0, style=bold];
m10_19 -> m10_20  [key=0, style=solid];
m10_19 -> m10_21  [color=darkseagreen4, key=1, label=IncomingWebRequestContext, style=dashed];
m10_20 -> m10_21  [key=0, style=solid];
m10_20 -> m10_23  [key=2, style=dotted];
m10_21 -> m10_22  [key=0, style=solid];
m10_21 -> m10_24  [key=2, style=dotted];
m10_21 -> m10_25  [key=2, style=dotted];
m10_21 -> m10_26  [key=2, style=dotted];
m10_22 -> m10_19  [color=blue, key=0, style=bold];
m10_27 -> m10_28  [key=0, style=solid];
m10_27 -> m10_29  [color=darkseagreen4, key=1, label="Nancy.Response", style=dashed];
m10_28 -> m10_29  [key=0, style=solid];
m10_28 -> m10_28  [color=darkseagreen4, key=1, label=OutgoingWebResponseContext, style=dashed];
m10_29 -> m10_30  [key=0, style=solid];
m10_29 -> m10_29  [color=darkseagreen4, key=1, label=OutgoingWebResponseContext, style=dashed];
m10_30 -> m10_27  [color=blue, key=0, style=bold];
m10_31 -> m10_3  [color=darkseagreen4, key=1, label="Nancy.Hosting.Wcf.NancyWcfGenericService", style=dashed];
m10_31 -> m10_10  [color=darkseagreen4, key=1, label="Nancy.Hosting.Wcf.NancyWcfGenericService", style=dashed];
m10_31 -> m10_11  [color=darkseagreen4, key=1, label="Nancy.Hosting.Wcf.NancyWcfGenericService", style=dashed];
m10_31 -> m10_12  [color=darkseagreen4, key=1, label="Nancy.Hosting.Wcf.NancyWcfGenericService", style=dashed];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_0  [color=blue, key=0, style=bold];
}
