digraph  {
n49 [label="Nancy.Response", span=""];
n50 [label=string, span=""];
n0 [label="Entry lambda expression", span="15-15", cluster="lambda expression"];
n1 [label="Exit lambda expression", span="15-15", cluster="lambda expression"];
n2 [label="Entry Nancy.Response.Response()", span="20-20", cluster="Nancy.Response.Response()"];
n3 [label="this.Contents = NoBody", span="22-22", cluster="Nancy.Response.Response()"];
n4 [label="this.ContentType = ''text/html''", span="23-23", cluster="Nancy.Response.Response()"];
n5 [label="this.Headers = new Dictionary<string, string>()", span="24-24", cluster="Nancy.Response.Response()"];
n6 [label="this.StatusCode = HttpStatusCode.OK", span="25-25", cluster="Nancy.Response.Response()"];
n9 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()"];
n7 [label="this.Cookies = new List<INancyCookie>(2)", span="26-26", cluster="Nancy.Response.Response()"];
n8 [label="Exit Nancy.Response.Response()", span="20-20", cluster="Nancy.Response.Response()"];
n10 [label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0", cluster="System.Collections.Generic.List<T>.List(int)"];
n11 [label="Entry Nancy.Response.AddCookie(string, string)", span="63-63", cluster="Nancy.Response.AddCookie(string, string)"];
n12 [label="return AddCookie(name, value, null, null, null);", span="65-65", cluster="Nancy.Response.AddCookie(string, string)"];
n13 [label="Exit Nancy.Response.AddCookie(string, string)", span="63-63", cluster="Nancy.Response.AddCookie(string, string)"];
n14 [label="Entry Nancy.Response.AddCookie(string, string, System.DateTime?, string, string)", span="73-73", cluster="Nancy.Response.AddCookie(string, string, System.DateTime?, string, string)"];
n15 [label="Entry Nancy.Response.AddCookie(string, string, System.DateTime?)", span="68-68", cluster="Nancy.Response.AddCookie(string, string, System.DateTime?)"];
n16 [label="return AddCookie(name, value, expires, null, null);", span="70-70", cluster="Nancy.Response.AddCookie(string, string, System.DateTime?)"];
n17 [label="Exit Nancy.Response.AddCookie(string, string, System.DateTime?)", span="68-68", cluster="Nancy.Response.AddCookie(string, string, System.DateTime?)"];
n18 [label="return AddCookie(new NancyCookie(name, value){ Expires = expires, Domain = domain, Path = path });", span="75-75", cluster="Nancy.Response.AddCookie(string, string, System.DateTime?, string, string)"];
n19 [label="Exit Nancy.Response.AddCookie(string, string, System.DateTime?, string, string)", span="73-73", cluster="Nancy.Response.AddCookie(string, string, System.DateTime?, string, string)"];
n20 [label="Entry Nancy.Cookies.NancyCookie.NancyCookie(string, string)", span="10-10", cluster="Nancy.Cookies.NancyCookie.NancyCookie(string, string)"];
n21 [label="Entry Nancy.Response.AddCookie(Nancy.Cookies.INancyCookie)", span="78-78", cluster="Nancy.Response.AddCookie(Nancy.Cookies.INancyCookie)"];
n22 [label="Cookies.Add(nancyCookie)", span="80-80", cluster="Nancy.Response.AddCookie(Nancy.Cookies.INancyCookie)"];
n23 [label="return this;", span="81-81", cluster="Nancy.Response.AddCookie(Nancy.Cookies.INancyCookie)"];
n25 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)"];
n24 [label="Exit Nancy.Response.AddCookie(Nancy.Cookies.INancyCookie)", span="78-78", cluster="Nancy.Response.AddCookie(Nancy.Cookies.INancyCookie)"];
n26 [label="Entry Nancy.Response.implicit operator Nancy.Response(Nancy.HttpStatusCode)", span="84-84", cluster="Nancy.Response.implicit operator Nancy.Response(Nancy.HttpStatusCode)"];
n27 [label="return new Response { StatusCode = statusCode };", span="86-86", cluster="Nancy.Response.implicit operator Nancy.Response(Nancy.HttpStatusCode)"];
n28 [label="Exit Nancy.Response.implicit operator Nancy.Response(Nancy.HttpStatusCode)", span="84-84", cluster="Nancy.Response.implicit operator Nancy.Response(Nancy.HttpStatusCode)"];
n29 [label="Entry Nancy.Response.implicit operator Nancy.Response(int)", span="89-89", cluster="Nancy.Response.implicit operator Nancy.Response(int)"];
n30 [label="return new Response { StatusCode = (HttpStatusCode)statusCode };", span="91-91", cluster="Nancy.Response.implicit operator Nancy.Response(int)"];
n31 [label="Exit Nancy.Response.implicit operator Nancy.Response(int)", span="89-89", cluster="Nancy.Response.implicit operator Nancy.Response(int)"];
n32 [label="Entry Nancy.Response.implicit operator Nancy.Response(string)", span="94-94", cluster="Nancy.Response.implicit operator Nancy.Response(string)"];
n33 [label="return new Response { Contents = GetStringContents(contents) };", span="96-96", cluster="Nancy.Response.implicit operator Nancy.Response(string)"];
n34 [label="Exit Nancy.Response.implicit operator Nancy.Response(string)", span="94-94", cluster="Nancy.Response.implicit operator Nancy.Response(string)"];
n35 [label="Entry Nancy.Response.GetStringContents(string)", span="104-104", cluster="Nancy.Response.GetStringContents(string)"];
n36 [label="Entry Nancy.Response.implicit operator Nancy.Response(System.Action<System.IO.Stream>)", span="99-99", cluster="Nancy.Response.implicit operator Nancy.Response(System.Action<System.IO.Stream>)"];
n37 [label="return new Response { Contents = streamFactory };", span="101-101", cluster="Nancy.Response.implicit operator Nancy.Response(System.Action<System.IO.Stream>)"];
n38 [label="Exit Nancy.Response.implicit operator Nancy.Response(System.Action<System.IO.Stream>)", span="99-99", cluster="Nancy.Response.implicit operator Nancy.Response(System.Action<System.IO.Stream>)"];
n39 [label="return stream =>\r\n            {\r\n                var writer = new StreamWriter(stream) { AutoFlush = true };\r\n                writer.Write(contents);\r\n            };", span="106-110", cluster="Nancy.Response.GetStringContents(string)", color=red, community=0];
n43 [label="writer.Write(contents)", span="109-109", cluster="lambda expression"];
n40 [label="Exit Nancy.Response.GetStringContents(string)", span="104-104", cluster="Nancy.Response.GetStringContents(string)"];
n42 [label="var writer = new StreamWriter(stream) { AutoFlush = true }", span="108-108", cluster="lambda expression"];
n41 [label="Entry lambda expression", span="106-110", cluster="lambda expression"];
n45 [label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0", cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)"];
n44 [label="Exit lambda expression", span="106-110", cluster="lambda expression"];
n46 [label="Entry System.IO.StreamWriter.Write(string)", span="0-0", cluster="System.IO.StreamWriter.Write(string)"];
n47 [label="Entry Nancy.Response.Dispose()", span="117-117", cluster="Nancy.Response.Dispose()"];
n48 [label="Exit Nancy.Response.Dispose()", span="117-117", cluster="Nancy.Response.Dispose()"];
m0_413 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_if_implicit_convert_fails_on_datetime()", span="900-900", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_if_implicit_convert_fails_on_datetime()", file="DynamicDictionaryValueFixture.cs"];
m0_414 [label="DateTime expected = DateTime.Parse(''13 December 2012'')", span="903-903", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_if_implicit_convert_fails_on_datetime()", file="DynamicDictionaryValueFixture.cs"];
m0_415 [label="dynamic value = new DynamicDictionaryValue(''Rawrrrr'')", span="904-904", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_if_implicit_convert_fails_on_datetime()", file="DynamicDictionaryValueFixture.cs"];
m0_416 [label="DateTime actual = value.TryParse(expected)", span="907-907", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_if_implicit_convert_fails_on_datetime()", file="DynamicDictionaryValueFixture.cs"];
m0_417 [label="Assert.Equal(expected, actual)", span="910-910", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_if_implicit_convert_fails_on_datetime()", file="DynamicDictionaryValueFixture.cs"];
m0_418 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_if_implicit_convert_fails_on_datetime()", span="900-900", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_if_implicit_convert_fails_on_datetime()", file="DynamicDictionaryValueFixture.cs"];
m0_494 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_converting_enum_base_type_to_enum()", span="1038-1038", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_converting_enum_base_type_to_enum()", file="DynamicDictionaryValueFixture.cs"];
m0_495 [label="var binder = A.Fake<ConvertBinder>(o => o.WithArgumentsForConstructor(new object[] { typeof(IntEnum), false }))", span="1041-1041", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_converting_enum_base_type_to_enum()", file="DynamicDictionaryValueFixture.cs"];
m0_496 [label="var value = new DynamicDictionaryValue(1)", span="1042-1042", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_converting_enum_base_type_to_enum()", file="DynamicDictionaryValueFixture.cs"];
m0_498 [label="var result = value.TryConvert(binder, out valueResult)", span="1046-1046", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_converting_enum_base_type_to_enum()", file="DynamicDictionaryValueFixture.cs"];
m0_497 [label="object valueResult", span="1045-1045", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_converting_enum_base_type_to_enum()", file="DynamicDictionaryValueFixture.cs"];
m0_499 [label="result.ShouldBeTrue()", span="1049-1049", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_converting_enum_base_type_to_enum()", file="DynamicDictionaryValueFixture.cs"];
m0_500 [label="valueResult.ShouldEqual(IntEnum.Value1)", span="1050-1050", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_converting_enum_base_type_to_enum()", file="DynamicDictionaryValueFixture.cs"];
m0_501 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_converting_enum_base_type_to_enum()", span="1038-1038", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_converting_enum_base_type_to_enum()", file="DynamicDictionaryValueFixture.cs"];
m0_124 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToByte()", span="283-283", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToByte()", file="DynamicDictionaryValueFixture.cs"];
m0_125 [label="byte expected = 42", span="286-286", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToByte()", file="DynamicDictionaryValueFixture.cs"];
m0_126 [label="object value = new DynamicDictionaryValue(expected)", span="287-287", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToByte()", file="DynamicDictionaryValueFixture.cs"];
m0_128 [label="Assert.Equal(expected, actual)", span="293-293", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToByte()", file="DynamicDictionaryValueFixture.cs"];
m0_127 [label="var actual = Convert.ToByte(value)", span="290-290", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToByte()", file="DynamicDictionaryValueFixture.cs"];
m0_129 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToByte()", span="283-283", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToByte()", file="DynamicDictionaryValueFixture.cs"];
m0_285 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_string_type_when_no_default_value_given()", span="616-616", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_string_type_when_no_default_value_given()", file="DynamicDictionaryValueFixture.cs"];
m0_286 [label="string expected = null", span="619-619", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_string_type_when_no_default_value_given()", file="DynamicDictionaryValueFixture.cs"];
m0_287 [label="dynamic value = new DynamicDictionaryValue(null)", span="620-620", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_string_type_when_no_default_value_given()", file="DynamicDictionaryValueFixture.cs"];
m0_289 [label="Assert.Equal(expected, actual)", span="626-626", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_string_type_when_no_default_value_given()", file="DynamicDictionaryValueFixture.cs"];
m0_288 [label="string actual = value.Default<string>()", span="623-623", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_string_type_when_no_default_value_given()", file="DynamicDictionaryValueFixture.cs"];
m0_290 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_string_type_when_no_default_value_given()", span="616-616", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_string_type_when_no_default_value_given()", file="DynamicDictionaryValueFixture.cs"];
m0_348 [label="Entry Unk.TryParse", span="", cluster="Unk.TryParse", file="DynamicDictionaryValueFixture.cs"];
m0_33 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_value_is_null_and_compared_with_non_null_value_using_equality_operator()", span="91-91", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_value_is_null_and_compared_with_non_null_value_using_equality_operator()", file="DynamicDictionaryValueFixture.cs"];
m0_34 [label="var value = new DynamicDictionaryValue(null)", span="94-94", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_value_is_null_and_compared_with_non_null_value_using_equality_operator()", file="DynamicDictionaryValueFixture.cs"];
m0_35 [label="var result = (value == 10)", span="97-97", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_value_is_null_and_compared_with_non_null_value_using_equality_operator()", file="DynamicDictionaryValueFixture.cs"];
m0_36 [label="result.ShouldBeFalse()", span="100-100", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_value_is_null_and_compared_with_non_null_value_using_equality_operator()", file="DynamicDictionaryValueFixture.cs"];
m0_37 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_value_is_null_and_compared_with_non_null_value_using_equality_operator()", span="91-91", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_value_is_null_and_compared_with_non_null_value_using_equality_operator()", file="DynamicDictionaryValueFixture.cs"];
m0_471 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_converting_enums_of_same_type()", span="1006-1006", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_converting_enums_of_same_type()", file="DynamicDictionaryValueFixture.cs"];
m0_472 [label="var binder = A.Fake<ConvertBinder>(o => o.WithArgumentsForConstructor(new object[] { typeof(IntEnum), false }))", span="1009-1009", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_converting_enums_of_same_type()", file="DynamicDictionaryValueFixture.cs"];
m0_473 [label="var value = new DynamicDictionaryValue(IntEnum.Value1)", span="1010-1010", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_converting_enums_of_same_type()", file="DynamicDictionaryValueFixture.cs"];
m0_475 [label="var result = value.TryConvert(binder, out valueResult)", span="1014-1014", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_converting_enums_of_same_type()", file="DynamicDictionaryValueFixture.cs"];
m0_474 [label="object valueResult", span="1013-1013", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_converting_enums_of_same_type()", file="DynamicDictionaryValueFixture.cs"];
m0_476 [label="result.ShouldBeTrue()", span="1017-1017", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_converting_enums_of_same_type()", file="DynamicDictionaryValueFixture.cs"];
m0_477 [label="valueResult.ShouldEqual(IntEnum.Value1)", span="1018-1018", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_converting_enums_of_same_type()", file="DynamicDictionaryValueFixture.cs"];
m0_478 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_converting_enums_of_same_type()", span="1006-1006", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_converting_enums_of_same_type()", file="DynamicDictionaryValueFixture.cs"];
m0_67 [label="Entry Unk.False", span="", cluster="Unk.False", file="DynamicDictionaryValueFixture.cs"];
m0_448 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_cast_to_arbitrary_object()", span="976-976", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_cast_to_arbitrary_object()", file="DynamicDictionaryValueFixture.cs"];
m0_449 [label="dynamic value = new DynamicDictionaryValue(new EventArgs())", span="979-979", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_cast_to_arbitrary_object()", file="DynamicDictionaryValueFixture.cs"];
m0_450 [label="Assert.DoesNotThrow(() =>\r\n            {\r\n                EventArgs e = (EventArgs)value;\r\n            })", span="983-986", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_cast_to_arbitrary_object()", file="DynamicDictionaryValueFixture.cs"];
m0_451 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_cast_to_arbitrary_object()", span="976-976", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_cast_to_arbitrary_object()", file="DynamicDictionaryValueFixture.cs"];
m0_265 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_bool_when_calling_default_given_null()", span="574-574", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_bool_when_calling_default_given_null()", file="DynamicDictionaryValueFixture.cs"];
m0_266 [label="bool expected = true", span="577-577", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_bool_when_calling_default_given_null()", file="DynamicDictionaryValueFixture.cs"];
m0_267 [label="dynamic value = new DynamicDictionaryValue(null)", span="578-578", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_bool_when_calling_default_given_null()", file="DynamicDictionaryValueFixture.cs"];
m0_268 [label="bool actual = value.Default(expected)", span="581-581", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_bool_when_calling_default_given_null()", file="DynamicDictionaryValueFixture.cs"];
m0_269 [label="Assert.Equal(expected, actual)", span="584-584", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_bool_when_calling_default_given_null()", file="DynamicDictionaryValueFixture.cs"];
m0_270 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_bool_when_calling_default_given_null()", span="574-574", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_bool_when_calling_default_given_null()", file="DynamicDictionaryValueFixture.cs"];
m0_159 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToInt64()", span="353-353", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToInt64()", file="DynamicDictionaryValueFixture.cs"];
m0_160 [label="long expected = 42", span="356-356", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToInt64()", file="DynamicDictionaryValueFixture.cs"];
m0_161 [label="object value = new DynamicDictionaryValue(expected)", span="357-357", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToInt64()", file="DynamicDictionaryValueFixture.cs"];
m0_163 [label="Assert.Equal(expected, actual)", span="363-363", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToInt64()", file="DynamicDictionaryValueFixture.cs"];
m0_162 [label="var actual = Convert.ToInt64(value)", span="360-360", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToInt64()", file="DynamicDictionaryValueFixture.cs"];
m0_164 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToInt64()", span="353-353", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToInt64()", file="DynamicDictionaryValueFixture.cs"];
m0_138 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToUInt16()", span="311-311", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToUInt16()", file="DynamicDictionaryValueFixture.cs"];
m0_139 [label="ushort expected = 42", span="314-314", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToUInt16()", file="DynamicDictionaryValueFixture.cs"];
m0_140 [label="object value = new DynamicDictionaryValue(expected)", span="315-315", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToUInt16()", file="DynamicDictionaryValueFixture.cs"];
m0_142 [label="Assert.Equal(expected, actual)", span="321-321", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToUInt16()", file="DynamicDictionaryValueFixture.cs"];
m0_141 [label="var actual = Convert.ToUInt16(value)", span="318-318", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToUInt16()", file="DynamicDictionaryValueFixture.cs"];
m0_143 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToUInt16()", span="311-311", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToUInt16()", file="DynamicDictionaryValueFixture.cs"];
m0_89 [label="Entry object.Object()", span="0-0", cluster="object.Object()", file="DynamicDictionaryValueFixture.cs"];
m0_43 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_value_is_not_null_and_compared_with_null_using_non_equality_operator()", span="117-117", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_value_is_not_null_and_compared_with_null_using_non_equality_operator()", file="DynamicDictionaryValueFixture.cs"];
m0_44 [label="var value = new DynamicDictionaryValue(string.Empty)", span="120-120", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_value_is_not_null_and_compared_with_null_using_non_equality_operator()", file="DynamicDictionaryValueFixture.cs"];
m0_45 [label="var result = (value != null)", span="123-123", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_value_is_not_null_and_compared_with_null_using_non_equality_operator()", file="DynamicDictionaryValueFixture.cs"];
m0_46 [label="result.ShouldBeTrue()", span="126-126", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_value_is_not_null_and_compared_with_null_using_non_equality_operator()", file="DynamicDictionaryValueFixture.cs"];
m0_47 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_value_is_not_null_and_compared_with_null_using_non_equality_operator()", span="117-117", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_value_is_not_null_and_compared_with_null_using_non_equality_operator()", file="DynamicDictionaryValueFixture.cs"];
m0_426 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_double_based_on_given_type_of_string()", span="929-929", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_double_based_on_given_type_of_string()", file="DynamicDictionaryValueFixture.cs"];
m0_427 [label="string expected = ''134.22''", span="932-932", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_double_based_on_given_type_of_string()", file="DynamicDictionaryValueFixture.cs"];
m0_428 [label="string notExpected = ''187.34''", span="933-933", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_double_based_on_given_type_of_string()", file="DynamicDictionaryValueFixture.cs"];
m0_431 [label="Assert.Equal(expected, actual)", span="940-940", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_double_based_on_given_type_of_string()", file="DynamicDictionaryValueFixture.cs"];
m0_429 [label="dynamic value = new DynamicDictionaryValue(134.22d)", span="934-934", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_double_based_on_given_type_of_string()", file="DynamicDictionaryValueFixture.cs"];
m0_430 [label="string actual = value.TryParse(notExpected)", span="937-937", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_double_based_on_given_type_of_string()", file="DynamicDictionaryValueFixture.cs"];
m0_432 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_double_based_on_given_type_of_string()", span="929-929", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_double_based_on_given_type_of_string()", file="DynamicDictionaryValueFixture.cs"];
m0_407 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_generic_type_of_datetime()", span="886-886", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_generic_type_of_datetime()", file="DynamicDictionaryValueFixture.cs"];
m0_408 [label="DateTime expected = DateTime.Parse(''13 Dec, 2012'')", span="889-889", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_generic_type_of_datetime()", file="DynamicDictionaryValueFixture.cs"];
m0_409 [label="dynamic value = new DynamicDictionaryValue(''13 December 2012'')", span="890-890", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_generic_type_of_datetime()", file="DynamicDictionaryValueFixture.cs"];
m0_411 [label="Assert.Equal(expected, actual)", span="896-896", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_generic_type_of_datetime()", file="DynamicDictionaryValueFixture.cs"];
m0_410 [label="DateTime actual = value.TryParse<DateTime>()", span="893-893", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_generic_type_of_datetime()", file="DynamicDictionaryValueFixture.cs"];
m0_412 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_generic_type_of_datetime()", span="886-886", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_generic_type_of_datetime()", file="DynamicDictionaryValueFixture.cs"];
m0_96 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_implictly_cast_long_to_other_value_types()", span="229-229", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_implictly_cast_long_to_other_value_types()", file="DynamicDictionaryValueFixture.cs"];
m0_97 [label="dynamic valueLong = new DynamicDictionaryValue((long)10)", span="232-232", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_implictly_cast_long_to_other_value_types()", file="DynamicDictionaryValueFixture.cs"];
m0_98 [label="Assert.Equal(10, valueLong)", span="235-235", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_implictly_cast_long_to_other_value_types()", file="DynamicDictionaryValueFixture.cs"];
m0_99 [label="Assert.Equal(10.0, valueLong)", span="236-236", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_implictly_cast_long_to_other_value_types()", file="DynamicDictionaryValueFixture.cs"];
m0_100 [label="Assert.Equal(10M, valueLong)", span="237-237", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_implictly_cast_long_to_other_value_types()", file="DynamicDictionaryValueFixture.cs"];
m0_101 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_implictly_cast_long_to_other_value_types()", span="229-229", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_implictly_cast_long_to_other_value_types()", file="DynamicDictionaryValueFixture.cs"];
m0_241 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_double_when_calling_default_given_null()", span="518-518", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_double_when_calling_default_given_null()", file="DynamicDictionaryValueFixture.cs"];
m0_242 [label="double expected = 44.23d", span="521-521", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_double_when_calling_default_given_null()", file="DynamicDictionaryValueFixture.cs"];
m0_243 [label="dynamic value = new DynamicDictionaryValue(null)", span="522-522", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_double_when_calling_default_given_null()", file="DynamicDictionaryValueFixture.cs"];
m0_244 [label="double actual = value.Default(expected)", span="525-525", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_double_when_calling_default_given_null()", file="DynamicDictionaryValueFixture.cs"];
m0_245 [label="Assert.Equal(expected, actual)", span="528-528", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_double_when_calling_default_given_null()", file="DynamicDictionaryValueFixture.cs"];
m0_246 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_double_when_calling_default_given_null()", span="518-518", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_double_when_calling_default_given_null()", file="DynamicDictionaryValueFixture.cs"];
m0_315 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_long_type_when_no_default_value_given()", span="686-686", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_long_type_when_no_default_value_given()", file="DynamicDictionaryValueFixture.cs"];
m0_316 [label="long expected = 0L", span="689-689", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_long_type_when_no_default_value_given()", file="DynamicDictionaryValueFixture.cs"];
m0_317 [label="dynamic value = new DynamicDictionaryValue(null)", span="690-690", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_long_type_when_no_default_value_given()", file="DynamicDictionaryValueFixture.cs"];
m0_319 [label="Assert.Equal(expected, actual)", span="696-696", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_long_type_when_no_default_value_given()", file="DynamicDictionaryValueFixture.cs"];
m0_318 [label="long actual = value.Default<long>()", span="693-693", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_long_type_when_no_default_value_given()", file="DynamicDictionaryValueFixture.cs"];
m0_320 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_long_type_when_no_default_value_given()", span="686-686", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_long_type_when_no_default_value_given()", file="DynamicDictionaryValueFixture.cs"];
m0_137 [label="Entry System.Convert.ToInt16(object)", span="0-0", cluster="System.Convert.ToInt16(object)", file="DynamicDictionaryValueFixture.cs"];
m0_333 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_throw_if_unable_to_explicitly_cast()", span="728-728", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_throw_if_unable_to_explicitly_cast()", file="DynamicDictionaryValueFixture.cs"];
m0_334 [label="dynamic value = new DynamicDictionaryValue(12.25)", span="731-731", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_throw_if_unable_to_explicitly_cast()", file="DynamicDictionaryValueFixture.cs"];
m0_335 [label="Exception exception = Assert.Throws<InvalidCastException>(() => value.Default<int>())", span="734-734", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_throw_if_unable_to_explicitly_cast()", file="DynamicDictionaryValueFixture.cs"];
m0_336 [label="Assert.Equal(''Cannot convert value of type 'Double' to type 'Int32''', exception.Message)", span="737-737", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_throw_if_unable_to_explicitly_cast()", file="DynamicDictionaryValueFixture.cs"];
m0_337 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_throw_if_unable_to_explicitly_cast()", span="728-728", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_throw_if_unable_to_explicitly_cast()", file="DynamicDictionaryValueFixture.cs"];
m0_401 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_generic_type_of_short()", span="872-872", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_generic_type_of_short()", file="DynamicDictionaryValueFixture.cs"];
m0_402 [label="short expected = (short)13", span="875-875", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_generic_type_of_short()", file="DynamicDictionaryValueFixture.cs"];
m0_403 [label="dynamic value = new DynamicDictionaryValue(''13'')", span="876-876", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_generic_type_of_short()", file="DynamicDictionaryValueFixture.cs"];
m0_405 [label="Assert.Equal(expected, actual)", span="882-882", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_generic_type_of_short()", file="DynamicDictionaryValueFixture.cs"];
m0_404 [label="short actual = value.TryParse<short>()", span="879-879", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_generic_type_of_short()", file="DynamicDictionaryValueFixture.cs"];
m0_406 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_generic_type_of_short()", span="872-872", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_generic_type_of_short()", file="DynamicDictionaryValueFixture.cs"];
m0_187 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToDecimal()", span="409-409", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToDecimal()", file="DynamicDictionaryValueFixture.cs"];
m0_188 [label="decimal expected = 42", span="412-412", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToDecimal()", file="DynamicDictionaryValueFixture.cs"];
m0_189 [label="object value = new DynamicDictionaryValue(expected)", span="413-413", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToDecimal()", file="DynamicDictionaryValueFixture.cs"];
m0_191 [label="Assert.Equal(expected, actual)", span="419-419", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToDecimal()", file="DynamicDictionaryValueFixture.cs"];
m0_190 [label="var actual = Convert.ToDecimal(value)", span="416-416", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToDecimal()", file="DynamicDictionaryValueFixture.cs"];
m0_192 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToDecimal()", span="409-409", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToDecimal()", file="DynamicDictionaryValueFixture.cs"];
m0_117 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToSByte()", span="269-269", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToSByte()", file="DynamicDictionaryValueFixture.cs"];
m0_118 [label="sbyte expected = 42", span="272-272", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToSByte()", file="DynamicDictionaryValueFixture.cs"];
m0_119 [label="object value = new DynamicDictionaryValue(expected)", span="273-273", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToSByte()", file="DynamicDictionaryValueFixture.cs"];
m0_121 [label="Assert.Equal(expected, actual)", span="279-279", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToSByte()", file="DynamicDictionaryValueFixture.cs"];
m0_120 [label="var actual = Convert.ToSByte(value)", span="276-276", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToSByte()", file="DynamicDictionaryValueFixture.cs"];
m0_122 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToSByte()", span="269-269", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToSByte()", file="DynamicDictionaryValueFixture.cs"];
m0_247 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_short_when_calling_default_given_null()", span="532-532", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_short_when_calling_default_given_null()", file="DynamicDictionaryValueFixture.cs"];
m0_248 [label="short expected = (short)4", span="535-535", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_short_when_calling_default_given_null()", file="DynamicDictionaryValueFixture.cs"];
m0_249 [label="dynamic value = new DynamicDictionaryValue(null)", span="536-536", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_short_when_calling_default_given_null()", file="DynamicDictionaryValueFixture.cs"];
m0_250 [label="short actual = value.Default(expected)", span="539-539", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_short_when_calling_default_given_null()", file="DynamicDictionaryValueFixture.cs"];
m0_251 [label="Assert.Equal(expected, actual)", span="542-542", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_short_when_calling_default_given_null()", file="DynamicDictionaryValueFixture.cs"];
m0_252 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_short_when_calling_default_given_null()", span="532-532", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_short_when_calling_default_given_null()", file="DynamicDictionaryValueFixture.cs"];
m0_131 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToInt16()", span="297-297", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToInt16()", file="DynamicDictionaryValueFixture.cs"];
m0_132 [label="short expected = 42", span="300-300", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToInt16()", file="DynamicDictionaryValueFixture.cs"];
m0_133 [label="object value = new DynamicDictionaryValue(expected)", span="301-301", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToInt16()", file="DynamicDictionaryValueFixture.cs"];
m0_135 [label="Assert.Equal(expected, actual)", span="307-307", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToInt16()", file="DynamicDictionaryValueFixture.cs"];
m0_134 [label="var actual = Convert.ToInt16(value)", span="304-304", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToInt16()", file="DynamicDictionaryValueFixture.cs"];
m0_136 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToInt16()", span="297-297", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToInt16()", file="DynamicDictionaryValueFixture.cs"];
m0_13 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_value_is_null_and_compared_with_null_using_equality_operator()", span="39-39", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_value_is_null_and_compared_with_null_using_equality_operator()", file="DynamicDictionaryValueFixture.cs"];
m0_14 [label="var value = new DynamicDictionaryValue(null)", span="42-42", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_value_is_null_and_compared_with_null_using_equality_operator()", file="DynamicDictionaryValueFixture.cs"];
m0_15 [label="var result = (value == null)", span="45-45", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_value_is_null_and_compared_with_null_using_equality_operator()", file="DynamicDictionaryValueFixture.cs"];
m0_16 [label="result.ShouldBeTrue()", span="48-48", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_value_is_null_and_compared_with_null_using_equality_operator()", file="DynamicDictionaryValueFixture.cs"];
m0_17 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_value_is_null_and_compared_with_null_using_equality_operator()", span="39-39", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_value_is_null_and_compared_with_null_using_equality_operator()", file="DynamicDictionaryValueFixture.cs"];
m0_18 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_value_is_not_null_and_compared_with_null_using_equality_operator()", span="52-52", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_value_is_not_null_and_compared_with_null_using_equality_operator()", file="DynamicDictionaryValueFixture.cs"];
m0_19 [label="var value = new DynamicDictionaryValue(string.Empty)", span="55-55", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_value_is_not_null_and_compared_with_null_using_equality_operator()", file="DynamicDictionaryValueFixture.cs"];
m0_20 [label="var result = (value == null)", span="58-58", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_value_is_not_null_and_compared_with_null_using_equality_operator()", file="DynamicDictionaryValueFixture.cs"];
m0_21 [label="result.ShouldBeFalse()", span="61-61", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_value_is_not_null_and_compared_with_null_using_equality_operator()", file="DynamicDictionaryValueFixture.cs"];
m0_22 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_value_is_not_null_and_compared_with_null_using_equality_operator()", span="52-52", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_value_is_not_null_and_compared_with_null_using_equality_operator()", file="DynamicDictionaryValueFixture.cs"];
m0_457 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_converting_enums_of_different_types()", span="990-990", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_converting_enums_of_different_types()", file="DynamicDictionaryValueFixture.cs"];
m0_458 [label="var binder = A.Fake<ConvertBinder>(o => o.WithArgumentsForConstructor(new object[] { typeof(IntEnum), false }))", span="993-993", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_converting_enums_of_different_types()", file="DynamicDictionaryValueFixture.cs"];
m0_459 [label="var value = new DynamicDictionaryValue(ByteEnum.Value1)", span="994-994", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_converting_enums_of_different_types()", file="DynamicDictionaryValueFixture.cs"];
m0_461 [label="var result = value.TryConvert(binder, out valueResult)", span="998-998", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_converting_enums_of_different_types()", file="DynamicDictionaryValueFixture.cs"];
m0_460 [label="object valueResult", span="997-997", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_converting_enums_of_different_types()", file="DynamicDictionaryValueFixture.cs"];
m0_462 [label="result.ShouldBeFalse()", span="1001-1001", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_converting_enums_of_different_types()", file="DynamicDictionaryValueFixture.cs"];
m0_463 [label="valueResult.ShouldBeNull()", span="1002-1002", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_converting_enums_of_different_types()", file="DynamicDictionaryValueFixture.cs"];
m0_464 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_converting_enums_of_different_types()", span="990-990", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_converting_enums_of_different_types()", file="DynamicDictionaryValueFixture.cs"];
m0_349 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_parameter_type_of_decimal()", span="756-756", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_parameter_type_of_decimal()", file="DynamicDictionaryValueFixture.cs"];
m0_350 [label="decimal expected = 55.23m", span="759-759", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_parameter_type_of_decimal()", file="DynamicDictionaryValueFixture.cs"];
m0_351 [label="decimal notExpected = 99.99m", span="760-760", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_parameter_type_of_decimal()", file="DynamicDictionaryValueFixture.cs"];
m0_354 [label="Assert.Equal(expected, actual)", span="767-767", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_parameter_type_of_decimal()", file="DynamicDictionaryValueFixture.cs"];
m0_352 [label="dynamic value = new DynamicDictionaryValue(''55.23'')", span="761-761", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_parameter_type_of_decimal()", file="DynamicDictionaryValueFixture.cs"];
m0_353 [label="decimal actual = value.TryParse(notExpected)", span="764-764", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_parameter_type_of_decimal()", file="DynamicDictionaryValueFixture.cs"];
m0_355 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_parameter_type_of_decimal()", span="756-756", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_parameter_type_of_decimal()", file="DynamicDictionaryValueFixture.cs"];
m0_144 [label="Entry System.Convert.ToUInt16(object)", span="0-0", cluster="System.Convert.ToUInt16(object)", file="DynamicDictionaryValueFixture.cs"];
m0_208 [label="Entry System.Convert.ToString(object)", span="0-0", cluster="System.Convert.ToString(object)", file="DynamicDictionaryValueFixture.cs"];
m0_173 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToSingle()", span="381-381", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToSingle()", file="DynamicDictionaryValueFixture.cs"];
m0_174 [label="float expected = 42", span="384-384", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToSingle()", file="DynamicDictionaryValueFixture.cs"];
m0_175 [label="object value = new DynamicDictionaryValue(expected)", span="385-385", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToSingle()", file="DynamicDictionaryValueFixture.cs"];
m0_177 [label="Assert.Equal(expected, actual)", span="391-391", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToSingle()", file="DynamicDictionaryValueFixture.cs"];
m0_176 [label="var actual = Convert.ToSingle(value)", span="388-388", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToSingle()", file="DynamicDictionaryValueFixture.cs"];
m0_178 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToSingle()", span="381-381", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToSingle()", file="DynamicDictionaryValueFixture.cs"];
m0_389 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_generic_type_of_decimal()", span="844-844", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_generic_type_of_decimal()", file="DynamicDictionaryValueFixture.cs"];
m0_390 [label="decimal expected = 55.23m", span="847-847", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_generic_type_of_decimal()", file="DynamicDictionaryValueFixture.cs"];
m0_391 [label="dynamic value = new DynamicDictionaryValue(''55.23'')", span="848-848", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_generic_type_of_decimal()", file="DynamicDictionaryValueFixture.cs"];
m0_393 [label="Assert.Equal(expected, actual)", span="854-854", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_generic_type_of_decimal()", file="DynamicDictionaryValueFixture.cs"];
m0_392 [label="decimal actual = value.TryParse<decimal>()", span="851-851", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_generic_type_of_decimal()", file="DynamicDictionaryValueFixture.cs"];
m0_394 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_generic_type_of_decimal()", span="844-844", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_generic_type_of_decimal()", file="DynamicDictionaryValueFixture.cs"];
m0_152 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToUInt32()", span="339-339", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToUInt32()", file="DynamicDictionaryValueFixture.cs"];
m0_153 [label="uint expected = 42", span="342-342", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToUInt32()", file="DynamicDictionaryValueFixture.cs"];
m0_154 [label="object value = new DynamicDictionaryValue(expected)", span="343-343", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToUInt32()", file="DynamicDictionaryValueFixture.cs"];
m0_156 [label="Assert.Equal(expected, actual)", span="349-349", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToUInt32()", file="DynamicDictionaryValueFixture.cs"];
m0_155 [label="var actual = Convert.ToUInt32(value)", span="346-346", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToUInt32()", file="DynamicDictionaryValueFixture.cs"];
m0_157 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToUInt32()", span="339-339", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToUInt32()", file="DynamicDictionaryValueFixture.cs"];
m0_297 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_double_type_when_no_default_value_given()", span="644-644", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_double_type_when_no_default_value_given()", file="DynamicDictionaryValueFixture.cs"];
m0_298 [label="double expected = 0d", span="647-647", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_double_type_when_no_default_value_given()", file="DynamicDictionaryValueFixture.cs"];
m0_299 [label="dynamic value = new DynamicDictionaryValue(null)", span="648-648", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_double_type_when_no_default_value_given()", file="DynamicDictionaryValueFixture.cs"];
m0_301 [label="Assert.Equal(expected, actual)", span="654-654", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_double_type_when_no_default_value_given()", file="DynamicDictionaryValueFixture.cs"];
m0_300 [label="double actual = value.Default<double>()", span="651-651", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_double_type_when_no_default_value_given()", file="DynamicDictionaryValueFixture.cs"];
m0_302 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_double_type_when_no_default_value_given()", span="644-644", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_double_type_when_no_default_value_given()", file="DynamicDictionaryValueFixture.cs"];
m0_53 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_value_is_not_null_and_compared_with_non_equal_value_using_non_equality_operator()", span="143-143", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_value_is_not_null_and_compared_with_non_equal_value_using_non_equality_operator()", file="DynamicDictionaryValueFixture.cs"];
m0_54 [label="var value = new DynamicDictionaryValue(10)", span="146-146", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_value_is_not_null_and_compared_with_non_equal_value_using_non_equality_operator()", file="DynamicDictionaryValueFixture.cs"];
m0_55 [label="var result = (value != 11)", span="149-149", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_value_is_not_null_and_compared_with_non_equal_value_using_non_equality_operator()", file="DynamicDictionaryValueFixture.cs"];
m0_56 [label="result.ShouldBeTrue()", span="152-152", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_value_is_not_null_and_compared_with_non_equal_value_using_non_equality_operator()", file="DynamicDictionaryValueFixture.cs"];
m0_57 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_value_is_not_null_and_compared_with_non_equal_value_using_non_equality_operator()", span="143-143", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_value_is_not_null_and_compared_with_non_equal_value_using_non_equality_operator()", file="DynamicDictionaryValueFixture.cs"];
m0_85 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_value_is_a_not_null_reference_type()", span="207-207", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_value_is_a_not_null_reference_type()", file="DynamicDictionaryValueFixture.cs"];
m0_86 [label="dynamic value = new DynamicDictionaryValue(new object())", span="210-210", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_value_is_a_not_null_reference_type()", file="DynamicDictionaryValueFixture.cs"];
m0_87 [label="Assert.True(value)", span="213-213", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_value_is_a_not_null_reference_type()", file="DynamicDictionaryValueFixture.cs"];
m0_88 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_value_is_a_not_null_reference_type()", span="207-207", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_value_is_a_not_null_reference_type()", file="DynamicDictionaryValueFixture.cs"];
m0_48 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_value_is_not_null_and_compared_with_equal_value_using_non_equality_operator()", span="130-130", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_value_is_not_null_and_compared_with_equal_value_using_non_equality_operator()", file="DynamicDictionaryValueFixture.cs"];
m0_49 [label="var value = new DynamicDictionaryValue(10)", span="133-133", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_value_is_not_null_and_compared_with_equal_value_using_non_equality_operator()", file="DynamicDictionaryValueFixture.cs"];
m0_50 [label="var result = (value != 10)", span="136-136", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_value_is_not_null_and_compared_with_equal_value_using_non_equality_operator()", file="DynamicDictionaryValueFixture.cs"];
m0_51 [label="result.ShouldBeFalse()", span="139-139", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_value_is_not_null_and_compared_with_equal_value_using_non_equality_operator()", file="DynamicDictionaryValueFixture.cs"];
m0_52 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_value_is_not_null_and_compared_with_equal_value_using_non_equality_operator()", span="130-130", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_value_is_not_null_and_compared_with_equal_value_using_non_equality_operator()", file="DynamicDictionaryValueFixture.cs"];
m0_145 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToInt32()", span="325-325", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToInt32()", file="DynamicDictionaryValueFixture.cs"];
m0_146 [label="int expected = 42", span="328-328", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToInt32()", file="DynamicDictionaryValueFixture.cs"];
m0_147 [label="object value = new DynamicDictionaryValue(expected)", span="329-329", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToInt32()", file="DynamicDictionaryValueFixture.cs"];
m0_149 [label="Assert.Equal(expected, actual)", span="335-335", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToInt32()", file="DynamicDictionaryValueFixture.cs"];
m0_148 [label="var actual = Convert.ToInt32(value)", span="332-332", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToInt32()", file="DynamicDictionaryValueFixture.cs"];
m0_150 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToInt32()", span="325-325", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToInt32()", file="DynamicDictionaryValueFixture.cs"];
m0_90 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_and_false_for_true_false_strings()", span="217-217", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_and_false_for_true_false_strings()", file="DynamicDictionaryValueFixture.cs"];
m0_91 [label="dynamic valueTrue = new DynamicDictionaryValue(''true'')", span="220-220", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_and_false_for_true_false_strings()", file="DynamicDictionaryValueFixture.cs"];
m0_92 [label="dynamic valueFalse = new DynamicDictionaryValue(''false'')", span="221-221", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_and_false_for_true_false_strings()", file="DynamicDictionaryValueFixture.cs"];
m0_93 [label="Assert.True(valueTrue)", span="224-224", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_and_false_for_true_false_strings()", file="DynamicDictionaryValueFixture.cs"];
m0_94 [label="Assert.False(valueFalse)", span="225-225", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_and_false_for_true_false_strings()", file="DynamicDictionaryValueFixture.cs"];
m0_95 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_and_false_for_true_false_strings()", span="217-217", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_and_false_for_true_false_strings()", file="DynamicDictionaryValueFixture.cs"];
m0_5 [label="Entry Nancy.DynamicDictionaryValue.DynamicDictionaryValue(object)", span="17-17", cluster="Nancy.DynamicDictionaryValue.DynamicDictionaryValue(object)", file="DynamicDictionaryValueFixture.cs"];
m0_433 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_decimal_based_on_given_type_of_string()", span="944-944", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_decimal_based_on_given_type_of_string()", file="DynamicDictionaryValueFixture.cs"];
m0_434 [label="string expected = ''88.53234423''", span="947-947", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_decimal_based_on_given_type_of_string()", file="DynamicDictionaryValueFixture.cs"];
m0_435 [label="string notExpected = ''76.3422''", span="948-948", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_decimal_based_on_given_type_of_string()", file="DynamicDictionaryValueFixture.cs"];
m0_438 [label="Assert.Equal(expected, actual)", span="955-955", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_decimal_based_on_given_type_of_string()", file="DynamicDictionaryValueFixture.cs"];
m0_436 [label="dynamic value = new DynamicDictionaryValue(88.53234423m)", span="949-949", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_decimal_based_on_given_type_of_string()", file="DynamicDictionaryValueFixture.cs"];
m0_437 [label="string actual = value.TryParse(notExpected)", span="952-952", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_decimal_based_on_given_type_of_string()", file="DynamicDictionaryValueFixture.cs"];
m0_439 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_decimal_based_on_given_type_of_string()", span="944-944", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_decimal_based_on_given_type_of_string()", file="DynamicDictionaryValueFixture.cs"];
m0_7 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_hasvalue_is_checked_when_value_is_null()", span="26-26", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_hasvalue_is_checked_when_value_is_null()", file="DynamicDictionaryValueFixture.cs"];
m0_8 [label="var value = new DynamicDictionaryValue(string.Empty)", span="29-29", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_hasvalue_is_checked_when_value_is_null()", file="DynamicDictionaryValueFixture.cs"];
m0_9 [label="var result = value.HasValue", span="32-32", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_hasvalue_is_checked_when_value_is_null()", file="DynamicDictionaryValueFixture.cs"];
m0_10 [label="result.ShouldBeTrue()", span="35-35", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_hasvalue_is_checked_when_value_is_null()", file="DynamicDictionaryValueFixture.cs"];
m0_11 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_hasvalue_is_checked_when_value_is_null()", span="26-26", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_hasvalue_is_checked_when_value_is_null()", file="DynamicDictionaryValueFixture.cs"];
m0_470 [label="Entry Unk.WithArgumentsForConstructor", span="", cluster="Unk.WithArgumentsForConstructor", file="DynamicDictionaryValueFixture.cs"];
m0_502 [label="Entry lambda expression", span="1041-1041", cluster="lambda expression", file="DynamicDictionaryValueFixture.cs"];
m0_339 [label="value.Default<int>()", span="734-734", cluster="lambda expression", file="DynamicDictionaryValueFixture.cs"];
m0_338 [label="Entry lambda expression", span="734-734", cluster="lambda expression", file="DynamicDictionaryValueFixture.cs"];
m0_340 [label="Exit lambda expression", span="734-734", cluster="lambda expression", file="DynamicDictionaryValueFixture.cs"];
m0_455 [label="EventArgs e = (EventArgs)value", span="985-985", cluster="lambda expression", file="DynamicDictionaryValueFixture.cs"];
m0_454 [label="Entry lambda expression", span="983-986", cluster="lambda expression", file="DynamicDictionaryValueFixture.cs"];
m0_456 [label="Exit lambda expression", span="983-986", cluster="lambda expression", file="DynamicDictionaryValueFixture.cs"];
m0_467 [label="Entry lambda expression", span="993-993", cluster="lambda expression", file="DynamicDictionaryValueFixture.cs"];
m0_468 [label="o.WithArgumentsForConstructor(new object[] { typeof(IntEnum), false })", span="993-993", cluster="lambda expression", file="DynamicDictionaryValueFixture.cs"];
m0_469 [label="Exit lambda expression", span="993-993", cluster="lambda expression", file="DynamicDictionaryValueFixture.cs"];
m0_480 [label="Entry lambda expression", span="1009-1009", cluster="lambda expression", file="DynamicDictionaryValueFixture.cs"];
m0_481 [label="o.WithArgumentsForConstructor(new object[] { typeof(IntEnum), false })", span="1009-1009", cluster="lambda expression", file="DynamicDictionaryValueFixture.cs"];
m0_482 [label="Exit lambda expression", span="1009-1009", cluster="lambda expression", file="DynamicDictionaryValueFixture.cs"];
m0_491 [label="Entry lambda expression", span="1025-1025", cluster="lambda expression", file="DynamicDictionaryValueFixture.cs"];
m0_492 [label="o.WithArgumentsForConstructor(new object[] { typeof(IntEnum), false })", span="1025-1025", cluster="lambda expression", file="DynamicDictionaryValueFixture.cs"];
m0_493 [label="Exit lambda expression", span="1025-1025", cluster="lambda expression", file="DynamicDictionaryValueFixture.cs"];
m0_503 [label="o.WithArgumentsForConstructor(new object[] { typeof(IntEnum), false })", span="1041-1041", cluster="lambda expression", file="DynamicDictionaryValueFixture.cs"];
m0_504 [label="Exit lambda expression", span="1041-1041", cluster="lambda expression", file="DynamicDictionaryValueFixture.cs"];
m0_158 [label="Entry System.Convert.ToUInt32(object)", span="0-0", cluster="System.Convert.ToUInt32(object)", file="DynamicDictionaryValueFixture.cs"];
m0_202 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToString()", span="437-437", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToString()", file="DynamicDictionaryValueFixture.cs"];
m0_203 [label="string expected = ''Forty two''", span="440-440", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToString()", file="DynamicDictionaryValueFixture.cs"];
m0_204 [label="object value = new DynamicDictionaryValue(expected)", span="441-441", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToString()", file="DynamicDictionaryValueFixture.cs"];
m0_206 [label="Assert.Equal(expected, actual)", span="447-447", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToString()", file="DynamicDictionaryValueFixture.cs"];
m0_205 [label="var actual = Convert.ToString(value)", span="444-444", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToString()", file="DynamicDictionaryValueFixture.cs"];
m0_207 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToString()", span="437-437", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToString()", file="DynamicDictionaryValueFixture.cs"];
m0_58 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_value_is_null_and_compared_with_non_null_value_using_non_equality_operator()", span="156-156", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_value_is_null_and_compared_with_non_null_value_using_non_equality_operator()", file="DynamicDictionaryValueFixture.cs"];
m0_59 [label="var value = new DynamicDictionaryValue(null)", span="159-159", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_value_is_null_and_compared_with_non_null_value_using_non_equality_operator()", file="DynamicDictionaryValueFixture.cs"];
m0_60 [label="var result = (value != 10)", span="162-162", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_value_is_null_and_compared_with_non_null_value_using_non_equality_operator()", file="DynamicDictionaryValueFixture.cs"];
m0_61 [label="result.ShouldBeTrue()", span="165-165", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_value_is_null_and_compared_with_non_null_value_using_non_equality_operator()", file="DynamicDictionaryValueFixture.cs"];
m0_62 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_value_is_null_and_compared_with_non_null_value_using_non_equality_operator()", span="156-156", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_value_is_null_and_compared_with_non_null_value_using_non_equality_operator()", file="DynamicDictionaryValueFixture.cs"];
m0_483 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_converting_incorrect_enum_base_type_to_enum()", span="1022-1022", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_converting_incorrect_enum_base_type_to_enum()", file="DynamicDictionaryValueFixture.cs"];
m0_484 [label="var binder = A.Fake<ConvertBinder>(o => o.WithArgumentsForConstructor(new object[] { typeof(IntEnum), false }))", span="1025-1025", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_converting_incorrect_enum_base_type_to_enum()", file="DynamicDictionaryValueFixture.cs"];
m0_485 [label="var value = new DynamicDictionaryValue((byte)1)", span="1026-1026", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_converting_incorrect_enum_base_type_to_enum()", file="DynamicDictionaryValueFixture.cs"];
m0_487 [label="var result = value.TryConvert(binder, out valueResult)", span="1030-1030", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_converting_incorrect_enum_base_type_to_enum()", file="DynamicDictionaryValueFixture.cs"];
m0_486 [label="object valueResult", span="1029-1029", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_converting_incorrect_enum_base_type_to_enum()", file="DynamicDictionaryValueFixture.cs"];
m0_488 [label="result.ShouldBeFalse()", span="1033-1033", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_converting_incorrect_enum_base_type_to_enum()", file="DynamicDictionaryValueFixture.cs"];
m0_489 [label="valueResult.ShouldBeNull()", span="1034-1034", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_converting_incorrect_enum_base_type_to_enum()", file="DynamicDictionaryValueFixture.cs"];
m0_490 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_converting_incorrect_enum_base_type_to_enum()", span="1022-1022", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_converting_incorrect_enum_base_type_to_enum()", file="DynamicDictionaryValueFixture.cs"];
m0_452 [label="Entry System.EventArgs.EventArgs()", span="0-0", cluster="System.EventArgs.EventArgs()", file="DynamicDictionaryValueFixture.cs"];
m0_180 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToDouble()", span="395-395", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToDouble()", file="DynamicDictionaryValueFixture.cs"];
m0_181 [label="double expected = 42", span="398-398", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToDouble()", file="DynamicDictionaryValueFixture.cs"];
m0_182 [label="object value = new DynamicDictionaryValue(expected)", span="399-399", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToDouble()", file="DynamicDictionaryValueFixture.cs"];
m0_184 [label="Assert.Equal(expected, actual)", span="405-405", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToDouble()", file="DynamicDictionaryValueFixture.cs"];
m0_183 [label="var actual = Convert.ToDouble(value)", span="402-402", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToDouble()", file="DynamicDictionaryValueFixture.cs"];
m0_185 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToDouble()", span="395-395", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToDouble()", file="DynamicDictionaryValueFixture.cs"];
m0_103 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToBoolean()", span="241-241", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToBoolean()", file="DynamicDictionaryValueFixture.cs"];
m0_104 [label="bool expected = true", span="244-244", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToBoolean()", file="DynamicDictionaryValueFixture.cs"];
m0_105 [label="object value = new DynamicDictionaryValue(expected)", span="245-245", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToBoolean()", file="DynamicDictionaryValueFixture.cs"];
m0_107 [label="Assert.Equal(expected, actual)", span="251-251", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToBoolean()", file="DynamicDictionaryValueFixture.cs"];
m0_106 [label="var actual = Convert.ToBoolean(value)", span="248-248", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToBoolean()", file="DynamicDictionaryValueFixture.cs"];
m0_108 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToBoolean()", span="241-241", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToBoolean()", file="DynamicDictionaryValueFixture.cs"];
m0_253 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_float_when_calling_default_given_null()", span="546-546", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_float_when_calling_default_given_null()", file="DynamicDictionaryValueFixture.cs"];
m0_254 [label="float expected = 9.343f", span="549-549", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_float_when_calling_default_given_null()", file="DynamicDictionaryValueFixture.cs"];
m0_255 [label="dynamic value = new DynamicDictionaryValue(null)", span="550-550", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_float_when_calling_default_given_null()", file="DynamicDictionaryValueFixture.cs"];
m0_256 [label="float actual = value.Default(expected)", span="553-553", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_float_when_calling_default_given_null()", file="DynamicDictionaryValueFixture.cs"];
m0_257 [label="Assert.Equal(expected, actual)", span="556-556", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_float_when_calling_default_given_null()", file="DynamicDictionaryValueFixture.cs"];
m0_258 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_float_when_calling_default_given_null()", span="546-546", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_float_when_calling_default_given_null()", file="DynamicDictionaryValueFixture.cs"];
m0_0 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_hasvalue_is_checked_when_value_is_not_null()", span="13-13", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_hasvalue_is_checked_when_value_is_not_null()", file="DynamicDictionaryValueFixture.cs"];
m0_1 [label="var value = new DynamicDictionaryValue(null)", span="16-16", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_hasvalue_is_checked_when_value_is_not_null()", file="DynamicDictionaryValueFixture.cs"];
m0_2 [label="var result = value.HasValue", span="19-19", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_hasvalue_is_checked_when_value_is_not_null()", file="DynamicDictionaryValueFixture.cs"];
m0_3 [label="result.ShouldBeFalse()", span="22-22", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_hasvalue_is_checked_when_value_is_not_null()", file="DynamicDictionaryValueFixture.cs"];
m0_4 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_hasvalue_is_checked_when_value_is_not_null()", span="13-13", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_hasvalue_is_checked_when_value_is_not_null()", file="DynamicDictionaryValueFixture.cs"];
m0_172 [label="Entry System.Convert.ToUInt64(object)", span="0-0", cluster="System.Convert.ToUInt64(object)", file="DynamicDictionaryValueFixture.cs"];
m0_110 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToChar()", span="255-255", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToChar()", file="DynamicDictionaryValueFixture.cs"];
m0_111 [label="char expected = 'a'", span="258-258", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToChar()", file="DynamicDictionaryValueFixture.cs"];
m0_112 [label="object value = new DynamicDictionaryValue(expected)", span="259-259", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToChar()", file="DynamicDictionaryValueFixture.cs"];
m0_114 [label="Assert.Equal(expected, actual)", span="265-265", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToChar()", file="DynamicDictionaryValueFixture.cs"];
m0_113 [label="var actual = Convert.ToChar(value)", span="262-262", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToChar()", file="DynamicDictionaryValueFixture.cs"];
m0_115 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToChar()", span="255-255", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToChar()", file="DynamicDictionaryValueFixture.cs"];
m0_102 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="DynamicDictionaryValueFixture.cs"];
m0_165 [label="Entry System.Convert.ToInt64(object)", span="0-0", cluster="System.Convert.ToInt64(object)", file="DynamicDictionaryValueFixture.cs"];
m0_194 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToDateTime()", span="423-423", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToDateTime()", file="DynamicDictionaryValueFixture.cs"];
m0_195 [label="DateTime expected = new DateTime(1952, 3, 11)", span="426-426", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToDateTime()", file="DynamicDictionaryValueFixture.cs"];
m0_196 [label="object value = new DynamicDictionaryValue(expected)", span="427-427", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToDateTime()", file="DynamicDictionaryValueFixture.cs"];
m0_198 [label="Assert.Equal(expected, actual)", span="433-433", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToDateTime()", file="DynamicDictionaryValueFixture.cs"];
m0_197 [label="var actual = Convert.ToDateTime(value)", span="430-430", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToDateTime()", file="DynamicDictionaryValueFixture.cs"];
m0_199 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToDateTime()", span="423-423", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToDateTime()", file="DynamicDictionaryValueFixture.cs"];
m0_201 [label="Entry System.Convert.ToDateTime(object)", span="0-0", cluster="System.Convert.ToDateTime(object)", file="DynamicDictionaryValueFixture.cs"];
m0_271 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_datetime_when_calling_default_given_null()", span="588-588", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_datetime_when_calling_default_given_null()", file="DynamicDictionaryValueFixture.cs"];
m0_272 [label="DateTime expected = DateTime.Parse(''10 Dec, 2012'')", span="591-591", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_datetime_when_calling_default_given_null()", file="DynamicDictionaryValueFixture.cs"];
m0_273 [label="dynamic value = new DynamicDictionaryValue(null)", span="592-592", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_datetime_when_calling_default_given_null()", file="DynamicDictionaryValueFixture.cs"];
m0_274 [label="DateTime actual = value.Default(expected)", span="595-595", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_datetime_when_calling_default_given_null()", file="DynamicDictionaryValueFixture.cs"];
m0_275 [label="Assert.Equal(expected, actual)", span="598-598", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_datetime_when_calling_default_given_null()", file="DynamicDictionaryValueFixture.cs"];
m0_276 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_datetime_when_calling_default_given_null()", span="588-588", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_datetime_when_calling_default_given_null()", file="DynamicDictionaryValueFixture.cs"];
m0_479 [label="Entry object.ShouldEqual(object)", span="105-105", cluster="object.ShouldEqual(object)", file="DynamicDictionaryValueFixture.cs"];
m0_278 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_int_type_when_no_default_value_given()", span="602-602", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_int_type_when_no_default_value_given()", file="DynamicDictionaryValueFixture.cs"];
m0_279 [label="int expected = 0", span="605-605", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_int_type_when_no_default_value_given()", file="DynamicDictionaryValueFixture.cs"];
m0_280 [label="dynamic value = new DynamicDictionaryValue(null)", span="606-606", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_int_type_when_no_default_value_given()", file="DynamicDictionaryValueFixture.cs"];
m0_282 [label="Assert.Equal(expected, actual)", span="612-612", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_int_type_when_no_default_value_given()", file="DynamicDictionaryValueFixture.cs"];
m0_281 [label="int actual = value.Default<int>()", span="609-609", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_int_type_when_no_default_value_given()", file="DynamicDictionaryValueFixture.cs"];
m0_283 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_int_type_when_no_default_value_given()", span="602-602", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_int_type_when_no_default_value_given()", file="DynamicDictionaryValueFixture.cs"];
m0_291 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_decimal_type_when_no_default_value_given()", span="630-630", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_decimal_type_when_no_default_value_given()", file="DynamicDictionaryValueFixture.cs"];
m0_292 [label="decimal expected = 0m", span="633-633", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_decimal_type_when_no_default_value_given()", file="DynamicDictionaryValueFixture.cs"];
m0_293 [label="dynamic value = new DynamicDictionaryValue(null)", span="634-634", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_decimal_type_when_no_default_value_given()", file="DynamicDictionaryValueFixture.cs"];
m0_295 [label="Assert.Equal(expected, actual)", span="640-640", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_decimal_type_when_no_default_value_given()", file="DynamicDictionaryValueFixture.cs"];
m0_294 [label="decimal actual = value.Default<decimal>()", span="637-637", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_decimal_type_when_no_default_value_given()", file="DynamicDictionaryValueFixture.cs"];
m0_296 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_decimal_type_when_no_default_value_given()", span="630-630", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_decimal_type_when_no_default_value_given()", file="DynamicDictionaryValueFixture.cs"];
m0_166 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToUInt64()", span="367-367", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToUInt64()", file="DynamicDictionaryValueFixture.cs"];
m0_167 [label="ulong expected = 42", span="370-370", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToUInt64()", file="DynamicDictionaryValueFixture.cs"];
m0_168 [label="object value = new DynamicDictionaryValue(expected)", span="371-371", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToUInt64()", file="DynamicDictionaryValueFixture.cs"];
m0_170 [label="Assert.Equal(expected, actual)", span="377-377", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToUInt64()", file="DynamicDictionaryValueFixture.cs"];
m0_169 [label="var actual = Convert.ToUInt64(value)", span="374-374", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToUInt64()", file="DynamicDictionaryValueFixture.cs"];
m0_171 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToUInt64()", span="367-367", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertToUInt64()", file="DynamicDictionaryValueFixture.cs"];
m0_259 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_long_when_calling_default_given_null()", span="560-560", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_long_when_calling_default_given_null()", file="DynamicDictionaryValueFixture.cs"];
m0_260 [label="long expected = 1000333000222000333L", span="563-563", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_long_when_calling_default_given_null()", file="DynamicDictionaryValueFixture.cs"];
m0_261 [label="dynamic value = new DynamicDictionaryValue(null)", span="564-564", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_long_when_calling_default_given_null()", file="DynamicDictionaryValueFixture.cs"];
m0_262 [label="long actual = value.Default(expected)", span="567-567", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_long_when_calling_default_given_null()", file="DynamicDictionaryValueFixture.cs"];
m0_263 [label="Assert.Equal(expected, actual)", span="570-570", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_long_when_calling_default_given_null()", file="DynamicDictionaryValueFixture.cs"];
m0_264 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_long_when_calling_default_given_null()", span="560-560", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_long_when_calling_default_given_null()", file="DynamicDictionaryValueFixture.cs"];
m0_6 [label="Entry bool.ShouldBeFalse()", span="100-100", cluster="bool.ShouldBeFalse()", file="DynamicDictionaryValueFixture.cs"];
m0_63 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_value_is_null_and_implicitly_cast_to_bool()", span="169-169", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_value_is_null_and_implicitly_cast_to_bool()", file="DynamicDictionaryValueFixture.cs"];
m0_64 [label="dynamic value = new DynamicDictionaryValue(null)", span="172-172", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_value_is_null_and_implicitly_cast_to_bool()", file="DynamicDictionaryValueFixture.cs"];
m0_65 [label="Assert.False(value)", span="175-175", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_value_is_null_and_implicitly_cast_to_bool()", file="DynamicDictionaryValueFixture.cs"];
m0_66 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_value_is_null_and_implicitly_cast_to_bool()", span="169-169", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_value_is_null_and_implicitly_cast_to_bool()", file="DynamicDictionaryValueFixture.cs"];
m0_130 [label="Entry System.Convert.ToByte(object)", span="0-0", cluster="System.Convert.ToByte(object)", file="DynamicDictionaryValueFixture.cs"];
m0_68 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_value_is_0_and_implicitly_cast_to_bool()", span="179-179", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_value_is_0_and_implicitly_cast_to_bool()", file="DynamicDictionaryValueFixture.cs"];
m0_69 [label="dynamic valueInt = new DynamicDictionaryValue(0)", span="182-182", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_value_is_0_and_implicitly_cast_to_bool()", file="DynamicDictionaryValueFixture.cs"];
m0_70 [label="dynamic valueFloat = new DynamicDictionaryValue(0.0)", span="183-183", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_value_is_0_and_implicitly_cast_to_bool()", file="DynamicDictionaryValueFixture.cs"];
m0_72 [label="Assert.False(valueInt)", span="187-187", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_value_is_0_and_implicitly_cast_to_bool()", file="DynamicDictionaryValueFixture.cs"];
m0_71 [label="dynamic valueDec = new DynamicDictionaryValue(0.0M)", span="184-184", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_value_is_0_and_implicitly_cast_to_bool()", file="DynamicDictionaryValueFixture.cs"];
m0_73 [label="Assert.False(valueFloat)", span="188-188", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_value_is_0_and_implicitly_cast_to_bool()", file="DynamicDictionaryValueFixture.cs"];
m0_74 [label="Assert.False(valueDec)", span="189-189", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_value_is_0_and_implicitly_cast_to_bool()", file="DynamicDictionaryValueFixture.cs"];
m0_75 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_value_is_0_and_implicitly_cast_to_bool()", span="179-179", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_value_is_0_and_implicitly_cast_to_bool()", file="DynamicDictionaryValueFixture.cs"];
m0_229 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_string_when_calling_default_given_null()", span="490-490", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_string_when_calling_default_given_null()", file="DynamicDictionaryValueFixture.cs"];
m0_230 [label="string expected = ''default value''", span="493-493", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_string_when_calling_default_given_null()", file="DynamicDictionaryValueFixture.cs"];
m0_231 [label="dynamic value = new DynamicDictionaryValue(null)", span="494-494", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_string_when_calling_default_given_null()", file="DynamicDictionaryValueFixture.cs"];
m0_232 [label="string actual = value.Default(expected)", span="497-497", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_string_when_calling_default_given_null()", file="DynamicDictionaryValueFixture.cs"];
m0_233 [label="Assert.Equal(expected, actual)", span="500-500", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_string_when_calling_default_given_null()", file="DynamicDictionaryValueFixture.cs"];
m0_234 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_string_when_calling_default_given_null()", span="490-490", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_string_when_calling_default_given_null()", file="DynamicDictionaryValueFixture.cs"];
m0_28 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_value_is_not_null_and_compared_with_non_equal_value_using_equality_operator()", span="78-78", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_value_is_not_null_and_compared_with_non_equal_value_using_equality_operator()", file="DynamicDictionaryValueFixture.cs"];
m0_29 [label="var value = new DynamicDictionaryValue(10)", span="81-81", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_value_is_not_null_and_compared_with_non_equal_value_using_equality_operator()", file="DynamicDictionaryValueFixture.cs"];
m0_30 [label="var result = (value == 11)", span="84-84", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_value_is_not_null_and_compared_with_non_equal_value_using_equality_operator()", file="DynamicDictionaryValueFixture.cs"];
m0_31 [label="result.ShouldBeFalse()", span="87-87", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_value_is_not_null_and_compared_with_non_equal_value_using_equality_operator()", file="DynamicDictionaryValueFixture.cs"];
m0_32 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_value_is_not_null_and_compared_with_non_equal_value_using_equality_operator()", span="78-78", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_value_is_not_null_and_compared_with_non_equal_value_using_equality_operator()", file="DynamicDictionaryValueFixture.cs"];
m0_327 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_int_datetime_when_no_default_value_given()", span="714-714", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_int_datetime_when_no_default_value_given()", file="DynamicDictionaryValueFixture.cs"];
m0_328 [label="DateTime expected = DateTime.MinValue", span="717-717", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_int_datetime_when_no_default_value_given()", file="DynamicDictionaryValueFixture.cs"];
m0_329 [label="dynamic value = new DynamicDictionaryValue(null)", span="718-718", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_int_datetime_when_no_default_value_given()", file="DynamicDictionaryValueFixture.cs"];
m0_331 [label="Assert.Equal(expected, actual)", span="724-724", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_int_datetime_when_no_default_value_given()", file="DynamicDictionaryValueFixture.cs"];
m0_330 [label="DateTime actual = value.Default<DateTime>()", span="721-721", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_int_datetime_when_no_default_value_given()", file="DynamicDictionaryValueFixture.cs"];
m0_332 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_int_datetime_when_no_default_value_given()", span="714-714", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_int_datetime_when_no_default_value_given()", file="DynamicDictionaryValueFixture.cs"];
m0_221 [label="Entry Unk.Null", span="", cluster="Unk.Null", file="DynamicDictionaryValueFixture.cs"];
m0_76 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_value_is_non_zero_and_implicitly_cast_to_bool()", span="193-193", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_value_is_non_zero_and_implicitly_cast_to_bool()", file="DynamicDictionaryValueFixture.cs"];
m0_77 [label="dynamic valueInt = new DynamicDictionaryValue(8)", span="196-196", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_value_is_non_zero_and_implicitly_cast_to_bool()", file="DynamicDictionaryValueFixture.cs"];
m0_78 [label="dynamic valueFloat = new DynamicDictionaryValue(0.1)", span="197-197", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_value_is_non_zero_and_implicitly_cast_to_bool()", file="DynamicDictionaryValueFixture.cs"];
m0_80 [label="Assert.True(valueInt)", span="201-201", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_value_is_non_zero_and_implicitly_cast_to_bool()", file="DynamicDictionaryValueFixture.cs"];
m0_79 [label="dynamic valueDec = new DynamicDictionaryValue(0.1M)", span="198-198", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_value_is_non_zero_and_implicitly_cast_to_bool()", file="DynamicDictionaryValueFixture.cs"];
m0_81 [label="Assert.True(valueFloat)", span="202-202", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_value_is_non_zero_and_implicitly_cast_to_bool()", file="DynamicDictionaryValueFixture.cs"];
m0_82 [label="Assert.True(valueDec)", span="203-203", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_value_is_non_zero_and_implicitly_cast_to_bool()", file="DynamicDictionaryValueFixture.cs"];
m0_83 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_value_is_non_zero_and_implicitly_cast_to_bool()", span="193-193", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_value_is_non_zero_and_implicitly_cast_to_bool()", file="DynamicDictionaryValueFixture.cs"];
m0_23 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_value_is_not_null_and_compared_with_equal_value_using_equality_operator()", span="65-65", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_value_is_not_null_and_compared_with_equal_value_using_equality_operator()", file="DynamicDictionaryValueFixture.cs"];
m0_24 [label="var value = new DynamicDictionaryValue(10)", span="68-68", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_value_is_not_null_and_compared_with_equal_value_using_equality_operator()", file="DynamicDictionaryValueFixture.cs"];
m0_25 [label="var result = (value == 10)", span="71-71", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_value_is_not_null_and_compared_with_equal_value_using_equality_operator()", file="DynamicDictionaryValueFixture.cs"];
m0_26 [label="result.ShouldBeTrue()", span="74-74", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_value_is_not_null_and_compared_with_equal_value_using_equality_operator()", file="DynamicDictionaryValueFixture.cs"];
m0_27 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_value_is_not_null_and_compared_with_equal_value_using_equality_operator()", span="65-65", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_true_when_value_is_not_null_and_compared_with_equal_value_using_equality_operator()", file="DynamicDictionaryValueFixture.cs"];
m0_383 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_when_given_string_that_is_not_a_number()", span="830-830", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_when_given_string_that_is_not_a_number()", file="DynamicDictionaryValueFixture.cs"];
m0_384 [label="int expected = 100", span="833-833", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_when_given_string_that_is_not_a_number()", file="DynamicDictionaryValueFixture.cs"];
m0_385 [label="dynamic value = new DynamicDictionaryValue(''4abc2'')", span="834-834", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_when_given_string_that_is_not_a_number()", file="DynamicDictionaryValueFixture.cs"];
m0_386 [label="int actual = value.TryParse<int>(expected)", span="837-837", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_when_given_string_that_is_not_a_number()", file="DynamicDictionaryValueFixture.cs"];
m0_387 [label="Assert.Equal(expected, actual)", span="840-840", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_when_given_string_that_is_not_a_number()", file="DynamicDictionaryValueFixture.cs"];
m0_388 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_when_given_string_that_is_not_a_number()", span="830-830", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_when_given_string_that_is_not_a_number()", file="DynamicDictionaryValueFixture.cs"];
m0_321 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_bool_type_when_no_default_value_given()", span="700-700", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_bool_type_when_no_default_value_given()", file="DynamicDictionaryValueFixture.cs"];
m0_322 [label="bool expected = false", span="703-703", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_bool_type_when_no_default_value_given()", file="DynamicDictionaryValueFixture.cs"];
m0_323 [label="dynamic value = new DynamicDictionaryValue(null)", span="704-704", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_bool_type_when_no_default_value_given()", file="DynamicDictionaryValueFixture.cs"];
m0_325 [label="Assert.Equal(expected, actual)", span="710-710", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_bool_type_when_no_default_value_given()", file="DynamicDictionaryValueFixture.cs"];
m0_324 [label="bool actual = value.Default<bool>()", span="707-707", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_bool_type_when_no_default_value_given()", file="DynamicDictionaryValueFixture.cs"];
m0_326 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_bool_type_when_no_default_value_given()", span="700-700", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_bool_type_when_no_default_value_given()", file="DynamicDictionaryValueFixture.cs"];
m0_179 [label="Entry System.Convert.ToSingle(object)", span="0-0", cluster="System.Convert.ToSingle(object)", file="DynamicDictionaryValueFixture.cs"];
m0_363 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_parameter_type_of_short()", span="786-786", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_parameter_type_of_short()", file="DynamicDictionaryValueFixture.cs"];
m0_364 [label="short expected = (short)13", span="789-789", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_parameter_type_of_short()", file="DynamicDictionaryValueFixture.cs"];
m0_365 [label="short notExpected = (short)31", span="790-790", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_parameter_type_of_short()", file="DynamicDictionaryValueFixture.cs"];
m0_368 [label="Assert.Equal(expected, actual)", span="797-797", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_parameter_type_of_short()", file="DynamicDictionaryValueFixture.cs"];
m0_366 [label="dynamic value = new DynamicDictionaryValue(''13'')", span="791-791", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_parameter_type_of_short()", file="DynamicDictionaryValueFixture.cs"];
m0_367 [label="short actual = value.TryParse(notExpected)", span="794-794", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_parameter_type_of_short()", file="DynamicDictionaryValueFixture.cs"];
m0_369 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_parameter_type_of_short()", span="786-786", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_parameter_type_of_short()", file="DynamicDictionaryValueFixture.cs"];
m0_395 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_generic_type_of_double()", span="858-858", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_generic_type_of_double()", file="DynamicDictionaryValueFixture.cs"];
m0_396 [label="double expected = 37.48d", span="861-861", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_generic_type_of_double()", file="DynamicDictionaryValueFixture.cs"];
m0_397 [label="dynamic value = new DynamicDictionaryValue(''37.48'')", span="862-862", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_generic_type_of_double()", file="DynamicDictionaryValueFixture.cs"];
m0_399 [label="Assert.Equal(expected, actual)", span="868-868", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_generic_type_of_double()", file="DynamicDictionaryValueFixture.cs"];
m0_398 [label="double actual = value.TryParse<double>()", span="865-865", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_generic_type_of_double()", file="DynamicDictionaryValueFixture.cs"];
m0_400 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_generic_type_of_double()", span="858-858", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_generic_type_of_double()", file="DynamicDictionaryValueFixture.cs"];
m0_116 [label="Entry System.Convert.ToChar(object)", span="0-0", cluster="System.Convert.ToChar(object)", file="DynamicDictionaryValueFixture.cs"];
m0_38 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_value_is_null_and_compared_with_null_using_non_equality_operator()", span="104-104", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_value_is_null_and_compared_with_null_using_non_equality_operator()", file="DynamicDictionaryValueFixture.cs"];
m0_39 [label="var value = new DynamicDictionaryValue(null)", span="107-107", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_value_is_null_and_compared_with_null_using_non_equality_operator()", file="DynamicDictionaryValueFixture.cs"];
m0_40 [label="var result = (value != null)", span="110-110", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_value_is_null_and_compared_with_null_using_non_equality_operator()", file="DynamicDictionaryValueFixture.cs"];
m0_41 [label="result.ShouldBeFalse()", span="113-113", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_value_is_null_and_compared_with_null_using_non_equality_operator()", file="DynamicDictionaryValueFixture.cs"];
m0_42 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_value_is_null_and_compared_with_null_using_non_equality_operator()", span="104-104", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_false_when_value_is_null_and_compared_with_null_using_non_equality_operator()", file="DynamicDictionaryValueFixture.cs"];
m0_370 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_parameter_type_of_datetime()", span="801-801", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_parameter_type_of_datetime()", file="DynamicDictionaryValueFixture.cs"];
m0_371 [label="DateTime expected = DateTime.Parse(''13 Dec, 2012'')", span="804-804", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_parameter_type_of_datetime()", file="DynamicDictionaryValueFixture.cs"];
m0_372 [label="DateTime notExpected = DateTime.Parse(''15 Mar, 1986'')", span="805-805", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_parameter_type_of_datetime()", file="DynamicDictionaryValueFixture.cs"];
m0_375 [label="Assert.Equal(expected, actual)", span="812-812", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_parameter_type_of_datetime()", file="DynamicDictionaryValueFixture.cs"];
m0_373 [label="dynamic value = new DynamicDictionaryValue(''13 December 2012'')", span="806-806", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_parameter_type_of_datetime()", file="DynamicDictionaryValueFixture.cs"];
m0_374 [label="DateTime actual = value.TryParse(notExpected)", span="809-809", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_parameter_type_of_datetime()", file="DynamicDictionaryValueFixture.cs"];
m0_376 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_parameter_type_of_datetime()", span="801-801", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_parameter_type_of_datetime()", file="DynamicDictionaryValueFixture.cs"];
m0_209 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertChangeType()", span="451-451", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertChangeType()", file="DynamicDictionaryValueFixture.cs"];
m0_210 [label="int expected = 42", span="454-454", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertChangeType()", file="DynamicDictionaryValueFixture.cs"];
m0_211 [label="object value = new DynamicDictionaryValue(expected)", span="455-455", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertChangeType()", file="DynamicDictionaryValueFixture.cs"];
m0_213 [label="Assert.Equal(expected, actual)", span="461-461", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertChangeType()", file="DynamicDictionaryValueFixture.cs"];
m0_212 [label="var actual = Convert.ChangeType(value, typeof(int))", span="458-458", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertChangeType()", file="DynamicDictionaryValueFixture.cs"];
m0_214 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertChangeType()", span="451-451", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_be_able_to_call_ConvertChangeType()", file="DynamicDictionaryValueFixture.cs"];
m0_151 [label="Entry System.Convert.ToInt32(object)", span="0-0", cluster="System.Convert.ToInt32(object)", file="DynamicDictionaryValueFixture.cs"];
m0_277 [label="Entry System.DateTime.Parse(string)", span="0-0", cluster="System.DateTime.Parse(string)", file="DynamicDictionaryValueFixture.cs"];
m0_193 [label="Entry System.Convert.ToDecimal(object)", span="0-0", cluster="System.Convert.ToDecimal(object)", file="DynamicDictionaryValueFixture.cs"];
m0_228 [label="Entry Unk.Default", span="", cluster="Unk.Default", file="DynamicDictionaryValueFixture.cs"];
m0_356 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_parameter_type_of_double()", span="771-771", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_parameter_type_of_double()", file="DynamicDictionaryValueFixture.cs"];
m0_357 [label="double expected = 37.48d", span="774-774", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_parameter_type_of_double()", file="DynamicDictionaryValueFixture.cs"];
m0_358 [label="double notExpected = 99.99d", span="775-775", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_parameter_type_of_double()", file="DynamicDictionaryValueFixture.cs"];
m0_361 [label="Assert.Equal(expected, actual)", span="782-782", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_parameter_type_of_double()", file="DynamicDictionaryValueFixture.cs"];
m0_359 [label="dynamic value = new DynamicDictionaryValue(''37.48'')", span="776-776", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_parameter_type_of_double()", file="DynamicDictionaryValueFixture.cs"];
m0_360 [label="double actual = value.TryParse(notExpected)", span="779-779", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_parameter_type_of_double()", file="DynamicDictionaryValueFixture.cs"];
m0_362 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_parameter_type_of_double()", span="771-771", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_parameter_type_of_double()", file="DynamicDictionaryValueFixture.cs"];
m0_453 [label="Entry Unk.DoesNotThrow", span="", cluster="Unk.DoesNotThrow", file="DynamicDictionaryValueFixture.cs"];
m0_341 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_parameter_type_of_int()", span="741-741", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_parameter_type_of_int()", file="DynamicDictionaryValueFixture.cs"];
m0_342 [label="int expected = 42", span="744-744", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_parameter_type_of_int()", file="DynamicDictionaryValueFixture.cs"];
m0_343 [label="int notExpected = 100", span="745-745", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_parameter_type_of_int()", file="DynamicDictionaryValueFixture.cs"];
m0_346 [label="Assert.Equal(expected, actual)", span="752-752", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_parameter_type_of_int()", file="DynamicDictionaryValueFixture.cs"];
m0_344 [label="dynamic value = new DynamicDictionaryValue(''42'')", span="746-746", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_parameter_type_of_int()", file="DynamicDictionaryValueFixture.cs"];
m0_345 [label="int actual = value.TryParse(notExpected)", span="749-749", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_parameter_type_of_int()", file="DynamicDictionaryValueFixture.cs"];
m0_347 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_parameter_type_of_int()", span="741-741", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_parameter_type_of_int()", file="DynamicDictionaryValueFixture.cs"];
m0_200 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="DynamicDictionaryValueFixture.cs"];
m0_216 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_null_when_value_is_null_and_casting_to_string()", span="465-465", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_null_when_value_is_null_and_casting_to_string()", file="DynamicDictionaryValueFixture.cs"];
m0_217 [label="dynamic value = new DynamicDictionaryValue(null)", span="468-468", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_null_when_value_is_null_and_casting_to_string()", file="DynamicDictionaryValueFixture.cs"];
m0_218 [label="String actual = value", span="469-469", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_null_when_value_is_null_and_casting_to_string()", file="DynamicDictionaryValueFixture.cs"];
m0_219 [label="Assert.Null(actual)", span="472-472", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_null_when_value_is_null_and_casting_to_string()", file="DynamicDictionaryValueFixture.cs"];
m0_220 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_null_when_value_is_null_and_casting_to_string()", span="465-465", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_null_when_value_is_null_and_casting_to_string()", file="DynamicDictionaryValueFixture.cs"];
m0_284 [label="Entry Unk.>", span="", cluster="Unk.>", file="DynamicDictionaryValueFixture.cs"];
m0_123 [label="Entry System.Convert.ToSByte(object)", span="0-0", cluster="System.Convert.ToSByte(object)", file="DynamicDictionaryValueFixture.cs"];
m0_309 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_float_type_when_no_default_value_given()", span="672-672", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_float_type_when_no_default_value_given()", file="DynamicDictionaryValueFixture.cs"];
m0_310 [label="float expected = 0f", span="675-675", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_float_type_when_no_default_value_given()", file="DynamicDictionaryValueFixture.cs"];
m0_311 [label="dynamic value = new DynamicDictionaryValue(null)", span="676-676", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_float_type_when_no_default_value_given()", file="DynamicDictionaryValueFixture.cs"];
m0_313 [label="Assert.Equal(expected, actual)", span="682-682", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_float_type_when_no_default_value_given()", file="DynamicDictionaryValueFixture.cs"];
m0_312 [label="float actual = value.Default<float>()", span="679-679", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_float_type_when_no_default_value_given()", file="DynamicDictionaryValueFixture.cs"];
m0_314 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_float_type_when_no_default_value_given()", span="672-672", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_float_type_when_no_default_value_given()", file="DynamicDictionaryValueFixture.cs"];
m0_377 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_generic_type_of_int()", span="816-816", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_generic_type_of_int()", file="DynamicDictionaryValueFixture.cs"];
m0_378 [label="int expected = 42", span="819-819", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_generic_type_of_int()", file="DynamicDictionaryValueFixture.cs"];
m0_379 [label="dynamic value = new DynamicDictionaryValue(''42'')", span="820-820", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_generic_type_of_int()", file="DynamicDictionaryValueFixture.cs"];
m0_381 [label="Assert.Equal(expected, actual)", span="826-826", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_generic_type_of_int()", file="DynamicDictionaryValueFixture.cs"];
m0_380 [label="int actual = value.TryParse<int>()", span="823-823", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_generic_type_of_int()", file="DynamicDictionaryValueFixture.cs"];
m0_382 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_generic_type_of_int()", span="816-816", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_string_based_on_given_generic_type_of_int()", file="DynamicDictionaryValueFixture.cs"];
m0_465 [label="Entry Unk.TryConvert", span="", cluster="Unk.TryConvert", file="DynamicDictionaryValueFixture.cs"];
m0_186 [label="Entry System.Convert.ToDouble(object)", span="0-0", cluster="System.Convert.ToDouble(object)", file="DynamicDictionaryValueFixture.cs"];
m0_12 [label="Entry bool.ShouldBeTrue()", span="95-95", cluster="bool.ShouldBeTrue()", file="DynamicDictionaryValueFixture.cs"];
m0_466 [label="Entry object.ShouldBeNull()", span="145-145", cluster="object.ShouldBeNull()", file="DynamicDictionaryValueFixture.cs"];
m0_303 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_short_type_when_no_default_value_given()", span="658-658", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_short_type_when_no_default_value_given()", file="DynamicDictionaryValueFixture.cs"];
m0_304 [label="short expected = (short)0", span="661-661", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_short_type_when_no_default_value_given()", file="DynamicDictionaryValueFixture.cs"];
m0_305 [label="dynamic value = new DynamicDictionaryValue(null)", span="662-662", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_short_type_when_no_default_value_given()", file="DynamicDictionaryValueFixture.cs"];
m0_307 [label="Assert.Equal(expected, actual)", span="668-668", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_short_type_when_no_default_value_given()", file="DynamicDictionaryValueFixture.cs"];
m0_306 [label="short actual = value.Default<short>()", span="665-665", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_short_type_when_no_default_value_given()", file="DynamicDictionaryValueFixture.cs"];
m0_308 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_short_type_when_no_default_value_given()", span="658-658", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_still_return_default_short_type_when_no_default_value_given()", file="DynamicDictionaryValueFixture.cs"];
m0_222 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_int_when_calling_default_given_null()", span="476-476", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_int_when_calling_default_given_null()", file="DynamicDictionaryValueFixture.cs"];
m0_223 [label="int expected = 123", span="479-479", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_int_when_calling_default_given_null()", file="DynamicDictionaryValueFixture.cs"];
m0_224 [label="dynamic value = new DynamicDictionaryValue(null)", span="480-480", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_int_when_calling_default_given_null()", file="DynamicDictionaryValueFixture.cs"];
m0_225 [label="int actual = value.Default(expected)", span="483-483", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_int_when_calling_default_given_null()", file="DynamicDictionaryValueFixture.cs"];
m0_226 [label="Assert.Equal(expected, actual)", span="486-486", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_int_when_calling_default_given_null()", file="DynamicDictionaryValueFixture.cs"];
m0_227 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_int_when_calling_default_given_null()", span="476-476", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_int_when_calling_default_given_null()", file="DynamicDictionaryValueFixture.cs"];
m0_447 [label="Entry System.DateTime.ToString(System.IFormatProvider)", span="0-0", cluster="System.DateTime.ToString(System.IFormatProvider)", file="DynamicDictionaryValueFixture.cs"];
m0_109 [label="Entry System.Convert.ToBoolean(object)", span="0-0", cluster="System.Convert.ToBoolean(object)", file="DynamicDictionaryValueFixture.cs"];
m0_419 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_int_based_on_given_type_of_string()", span="914-914", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_int_based_on_given_type_of_string()", file="DynamicDictionaryValueFixture.cs"];
m0_420 [label="string expected = ''13''", span="917-917", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_int_based_on_given_type_of_string()", file="DynamicDictionaryValueFixture.cs"];
m0_421 [label="string notExpected = ''11''", span="918-918", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_int_based_on_given_type_of_string()", file="DynamicDictionaryValueFixture.cs"];
m0_424 [label="Assert.Equal(expected, actual)", span="925-925", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_int_based_on_given_type_of_string()", file="DynamicDictionaryValueFixture.cs"];
m0_422 [label="dynamic value = new DynamicDictionaryValue(13)", span="919-919", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_int_based_on_given_type_of_string()", file="DynamicDictionaryValueFixture.cs"];
m0_423 [label="string actual = value.TryParse(notExpected)", span="922-922", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_int_based_on_given_type_of_string()", file="DynamicDictionaryValueFixture.cs"];
m0_425 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_int_based_on_given_type_of_string()", span="914-914", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_int_based_on_given_type_of_string()", file="DynamicDictionaryValueFixture.cs"];
m0_84 [label="Entry Unk.True", span="", cluster="Unk.True", file="DynamicDictionaryValueFixture.cs"];
m0_235 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_decimal_when_calling_default_given_null()", span="504-504", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_decimal_when_calling_default_given_null()", file="DynamicDictionaryValueFixture.cs"];
m0_236 [label="decimal expected = 88.43m", span="507-507", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_decimal_when_calling_default_given_null()", file="DynamicDictionaryValueFixture.cs"];
m0_237 [label="dynamic value = new DynamicDictionaryValue(null)", span="508-508", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_decimal_when_calling_default_given_null()", file="DynamicDictionaryValueFixture.cs"];
m0_238 [label="decimal actual = value.Default(expected)", span="511-511", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_decimal_when_calling_default_given_null()", file="DynamicDictionaryValueFixture.cs"];
m0_239 [label="Assert.Equal(expected, actual)", span="514-514", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_decimal_when_calling_default_given_null()", file="DynamicDictionaryValueFixture.cs"];
m0_240 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_decimal_when_calling_default_given_null()", span="504-504", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_return_default_value_of_decimal_when_calling_default_given_null()", file="DynamicDictionaryValueFixture.cs"];
m0_215 [label="Entry System.Convert.ChangeType(object, System.Type)", span="0-0", cluster="System.Convert.ChangeType(object, System.Type)", file="DynamicDictionaryValueFixture.cs"];
m0_440 [label="Entry Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_datetime_based_on_given_type_of_string()", span="959-959", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_datetime_based_on_given_type_of_string()", file="DynamicDictionaryValueFixture.cs"];
m0_441 [label="string expected = DateTime.Parse(''22 Nov, 2012'').ToString(CultureInfo.InvariantCulture)", span="964-964", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_datetime_based_on_given_type_of_string()", file="DynamicDictionaryValueFixture.cs"];
m0_442 [label="string notExpected = DateTime.Parse(''18 Jun, 2011'').ToString(CultureInfo.InvariantCulture)", span="965-965", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_datetime_based_on_given_type_of_string()", file="DynamicDictionaryValueFixture.cs"];
m0_445 [label="Assert.Equal(expected, actual)", span="972-972", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_datetime_based_on_given_type_of_string()", file="DynamicDictionaryValueFixture.cs"];
m0_443 [label="dynamic value = new DynamicDictionaryValue(DateTime.Parse(''22 Nov, 2012''))", span="966-966", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_datetime_based_on_given_type_of_string()", file="DynamicDictionaryValueFixture.cs"];
m0_444 [label="string actual = value.TryParse(notExpected)", span="969-969", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_datetime_based_on_given_type_of_string()", file="DynamicDictionaryValueFixture.cs"];
m0_446 [label="Exit Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_datetime_based_on_given_type_of_string()", span="959-959", cluster="Nancy.Tests.Unit.DynamicDictionaryValueFixture.Should_implicitly_convert_from_datetime_based_on_given_type_of_string()", file="DynamicDictionaryValueFixture.cs"];
m0_505 [label=value, span="", file="DynamicDictionaryValueFixture.cs"];
m0_506 [label=value, span="", file="DynamicDictionaryValueFixture.cs"];
n49 -> n3  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Response"];
n49 -> n4  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Response"];
n49 -> n5  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Response"];
n49 -> n6  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Response"];
n49 -> n7  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Response"];
n49 -> n12  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Response"];
n49 -> n16  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Response"];
n49 -> n18  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Response"];
n49 -> n22  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Response"];
n49 -> n23  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Response"];
n50 -> n43  [key=1, style=dashed, color=darkseagreen4, label=string];
n0 -> n1  [key=0, style=solid];
n0 -> n0  [key=3, color=darkorchid, style=bold, label="Field variable System.Action<System.IO.Stream> NoBody"];
n1 -> n0  [key=0, style=bold, color=blue];
n2 -> n3  [key=0, style=solid];
n3 -> n4  [key=0, style=solid];
n4 -> n5  [key=0, style=solid];
n5 -> n6  [key=0, style=solid];
n5 -> n9  [key=2, style=dotted];
n6 -> n7  [key=0, style=solid];
n7 -> n8  [key=0, style=solid];
n7 -> n10  [key=2, style=dotted];
n8 -> n2  [key=0, style=bold, color=blue];
n11 -> n12  [key=0, style=solid];
n11 -> n14  [key=3, color=darkorchid, style=bold, label="method methodReturn Nancy.Response AddCookie"];
n12 -> n13  [key=0, style=solid];
n12 -> n14  [key=2, style=dotted];
n13 -> n11  [key=0, style=bold, color=blue];
n14 -> n18  [key=0, style=solid];
n14 -> n11  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
n14 -> n15  [key=3, color=darkorchid, style=bold, label="Parameter variable System.DateTime? expires"];
n14 -> n12  [key=3, color=darkorchid, style=bold, label="Parameter variable string path"];
n14 -> n21  [key=3, color=darkorchid, style=bold, label="method methodReturn Nancy.Response AddCookie"];
n14 -> n14  [key=3, color=darkorchid, style=bold, label="method methodReturn T TryParse"];
n15 -> n16  [key=0, style=solid];
n15 -> n14  [key=3, color=darkorchid, style=bold, label="method methodReturn Nancy.Response AddCookie"];
n16 -> n17  [key=0, style=solid];
n16 -> n14  [key=2, style=dotted];
n17 -> n15  [key=0, style=bold, color=blue];
n18 -> n19  [key=0, style=solid];
n18 -> n20  [key=2, style=dotted];
n18 -> n21  [key=2, style=dotted];
n19 -> n14  [key=0, style=bold, color=blue];
n21 -> n22  [key=0, style=solid];
n22 -> n23  [key=0, style=solid];
n22 -> n25  [key=2, style=dotted];
n23 -> n24  [key=0, style=solid];
n24 -> n21  [key=0, style=bold, color=blue];
n26 -> n27  [key=0, style=solid];
n27 -> n28  [key=0, style=solid];
n27 -> n2  [key=2, style=dotted];
n28 -> n26  [key=0, style=bold, color=blue];
n29 -> n30  [key=0, style=solid];
n30 -> n31  [key=0, style=solid];
n30 -> n2  [key=2, style=dotted];
n31 -> n29  [key=0, style=bold, color=blue];
n32 -> n33  [key=0, style=solid];
n33 -> n34  [key=0, style=solid];
n33 -> n2  [key=2, style=dotted];
n33 -> n35  [key=2, style=dotted];
n34 -> n32  [key=0, style=bold, color=blue];
n35 -> n39  [key=0, style=solid, color=red];
n35 -> n43  [key=1, style=dashed, color=darkseagreen4, label=string];
n35 -> n32  [key=3, color=darkorchid, style=bold, label="Parameter variable string contents"];
n36 -> n37  [key=0, style=solid];
n37 -> n38  [key=0, style=solid];
n37 -> n2  [key=2, style=dotted];
n38 -> n36  [key=0, style=bold, color=blue];
n39 -> n40  [key=0, style=solid, color=red];
n39 -> n42  [key=1, style=dashed, color=red, label="System.IO.Stream"];
n43 -> n44  [key=0, style=solid];
n43 -> n46  [key=2, style=dotted];
n40 -> n35  [key=0, style=bold, color=blue];
n42 -> n43  [key=0, style=solid];
n42 -> n45  [key=2, style=dotted];
n41 -> n42  [key=0, style=solid];
n44 -> n41  [key=0, style=bold, color=blue];
n47 -> n48  [key=0, style=solid];
n48 -> n47  [key=0, style=bold, color=blue];
m0_413 -> m0_414  [key=0, style=solid];
m0_414 -> m0_415  [key=0, style=solid];
m0_414 -> m0_277  [key=2, style=dotted];
m0_414 -> m0_416  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_414 -> m0_417  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_415 -> m0_416  [key=0, style=solid];
m0_415 -> m0_5  [key=2, style=dotted];
m0_416 -> m0_417  [key=0, style=solid];
m0_416 -> m0_348  [key=2, style=dotted];
m0_417 -> m0_418  [key=0, style=solid];
m0_417 -> m0_102  [key=2, style=dotted];
m0_418 -> m0_413  [key=0, style=bold, color=blue];
m0_494 -> m0_495  [key=0, style=solid];
m0_495 -> m0_496  [key=0, style=solid];
m0_495 -> m0_284  [key=2, style=dotted];
m0_495 -> m0_502  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_495 -> m0_498  [key=1, style=dashed, color=darkseagreen4, label=binder];
m0_496 -> m0_497  [key=0, style=solid];
m0_496 -> m0_5  [key=2, style=dotted];
m0_496 -> m0_498  [key=1, style=dashed, color=darkseagreen4, label=value];
m0_498 -> m0_499  [key=0, style=solid];
m0_498 -> m0_465  [key=2, style=dotted];
m0_498 -> m0_500  [key=1, style=dashed, color=darkseagreen4, label=valueResult];
m0_497 -> m0_498  [key=0, style=solid];
m0_499 -> m0_500  [key=0, style=solid];
m0_499 -> m0_12  [key=2, style=dotted];
m0_500 -> m0_501  [key=0, style=solid];
m0_500 -> m0_479  [key=2, style=dotted];
m0_501 -> m0_494  [key=0, style=bold, color=blue];
m0_124 -> m0_125  [key=0, style=solid];
m0_125 -> m0_126  [key=0, style=solid];
m0_125 -> m0_128  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_125 -> m0_118  [key=3, color=darkorchid, style=bold, label="Local variable byte expected"];
m0_126 -> m0_127  [key=0, style=solid];
m0_126 -> m0_5  [key=2, style=dotted];
m0_128 -> m0_129  [key=0, style=solid];
m0_128 -> m0_102  [key=2, style=dotted];
m0_127 -> m0_128  [key=0, style=solid];
m0_127 -> m0_130  [key=2, style=dotted];
m0_129 -> m0_124  [key=0, style=bold, color=blue];
m0_285 -> m0_286  [key=0, style=solid];
m0_286 -> m0_287  [key=0, style=solid];
m0_286 -> m0_289  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_286 -> m0_15  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m0_287 -> m0_288  [key=0, style=solid];
m0_287 -> m0_5  [key=2, style=dotted];
m0_289 -> m0_290  [key=0, style=solid];
m0_289 -> m0_102  [key=2, style=dotted];
m0_288 -> m0_289  [key=0, style=solid];
m0_288 -> m0_284  [key=2, style=dotted];
m0_290 -> m0_285  [key=0, style=bold, color=blue];
m0_33 -> m0_34  [key=0, style=solid];
m0_34 -> m0_35  [key=0, style=solid];
m0_34 -> m0_5  [key=2, style=dotted];
m0_35 -> m0_36  [key=0, style=solid];
m0_36 -> m0_37  [key=0, style=solid];
m0_36 -> m0_6  [key=2, style=dotted];
m0_37 -> m0_33  [key=0, style=bold, color=blue];
m0_471 -> m0_472  [key=0, style=solid];
m0_472 -> m0_473  [key=0, style=solid];
m0_472 -> m0_284  [key=2, style=dotted];
m0_472 -> m0_480  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_472 -> m0_475  [key=1, style=dashed, color=darkseagreen4, label=binder];
m0_473 -> m0_474  [key=0, style=solid];
m0_473 -> m0_5  [key=2, style=dotted];
m0_473 -> m0_475  [key=1, style=dashed, color=darkseagreen4, label=value];
m0_475 -> m0_476  [key=0, style=solid];
m0_475 -> m0_465  [key=2, style=dotted];
m0_475 -> m0_477  [key=1, style=dashed, color=darkseagreen4, label=valueResult];
m0_474 -> m0_475  [key=0, style=solid];
m0_476 -> m0_477  [key=0, style=solid];
m0_476 -> m0_12  [key=2, style=dotted];
m0_477 -> m0_478  [key=0, style=solid];
m0_477 -> m0_479  [key=2, style=dotted];
m0_478 -> m0_471  [key=0, style=bold, color=blue];
m0_448 -> m0_449  [key=0, style=solid];
m0_449 -> m0_450  [key=0, style=solid];
m0_449 -> m0_5  [key=2, style=dotted];
m0_449 -> m0_452  [key=2, style=dotted];
m0_449 -> m0_455  [key=1, style=dashed, color=darkseagreen4, label=value];
m0_450 -> m0_451  [key=0, style=solid];
m0_450 -> m0_453  [key=2, style=dotted];
m0_450 -> m0_454  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_451 -> m0_448  [key=0, style=bold, color=blue];
m0_265 -> m0_266  [key=0, style=solid];
m0_266 -> m0_267  [key=0, style=solid];
m0_266 -> m0_268  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_266 -> m0_269  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_266 -> m0_104  [key=3, color=darkorchid, style=bold, label="Local variable bool expected"];
m0_267 -> m0_268  [key=0, style=solid];
m0_267 -> m0_5  [key=2, style=dotted];
m0_268 -> m0_269  [key=0, style=solid];
m0_268 -> m0_228  [key=2, style=dotted];
m0_269 -> m0_270  [key=0, style=solid];
m0_269 -> m0_102  [key=2, style=dotted];
m0_270 -> m0_265  [key=0, style=bold, color=blue];
m0_159 -> m0_160  [key=0, style=solid];
m0_160 -> m0_161  [key=0, style=solid];
m0_160 -> m0_163  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_160 -> m0_118  [key=3, color=darkorchid, style=bold, label="Local variable long expected"];
m0_161 -> m0_162  [key=0, style=solid];
m0_161 -> m0_5  [key=2, style=dotted];
m0_163 -> m0_164  [key=0, style=solid];
m0_163 -> m0_102  [key=2, style=dotted];
m0_162 -> m0_163  [key=0, style=solid];
m0_162 -> m0_165  [key=2, style=dotted];
m0_164 -> m0_159  [key=0, style=bold, color=blue];
m0_138 -> m0_139  [key=0, style=solid];
m0_139 -> m0_140  [key=0, style=solid];
m0_139 -> m0_142  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_139 -> m0_118  [key=3, color=darkorchid, style=bold, label="Local variable ushort expected"];
m0_140 -> m0_141  [key=0, style=solid];
m0_140 -> m0_5  [key=2, style=dotted];
m0_142 -> m0_143  [key=0, style=solid];
m0_142 -> m0_102  [key=2, style=dotted];
m0_141 -> m0_142  [key=0, style=solid];
m0_141 -> m0_144  [key=2, style=dotted];
m0_143 -> m0_138  [key=0, style=bold, color=blue];
m0_43 -> m0_44  [key=0, style=solid];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_5  [key=2, style=dotted];
m0_45 -> m0_46  [key=0, style=solid];
m0_46 -> m0_47  [key=0, style=solid];
m0_46 -> m0_12  [key=2, style=dotted];
m0_47 -> m0_43  [key=0, style=bold, color=blue];
m0_426 -> m0_427  [key=0, style=solid];
m0_427 -> m0_428  [key=0, style=solid];
m0_427 -> m0_431  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_427 -> m0_427  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m0_428 -> m0_429  [key=0, style=solid];
m0_428 -> m0_430  [key=1, style=dashed, color=darkseagreen4, label=notExpected];
m0_428 -> m0_428  [key=3, color=darkorchid, style=bold, label="Local variable string notExpected"];
m0_431 -> m0_432  [key=0, style=solid];
m0_431 -> m0_102  [key=2, style=dotted];
m0_429 -> m0_430  [key=0, style=solid];
m0_429 -> m0_5  [key=2, style=dotted];
m0_430 -> m0_431  [key=0, style=solid];
m0_430 -> m0_348  [key=2, style=dotted];
m0_432 -> m0_426  [key=0, style=bold, color=blue];
m0_407 -> m0_408  [key=0, style=solid];
m0_408 -> m0_409  [key=0, style=solid];
m0_408 -> m0_277  [key=2, style=dotted];
m0_408 -> m0_411  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_409 -> m0_410  [key=0, style=solid];
m0_409 -> m0_5  [key=2, style=dotted];
m0_411 -> m0_412  [key=0, style=solid];
m0_411 -> m0_102  [key=2, style=dotted];
m0_410 -> m0_411  [key=0, style=solid];
m0_410 -> m0_284  [key=2, style=dotted];
m0_412 -> m0_407  [key=0, style=bold, color=blue];
m0_96 -> m0_97  [key=0, style=solid];
m0_97 -> m0_98  [key=0, style=solid];
m0_97 -> m0_5  [key=2, style=dotted];
m0_97 -> m0_99  [key=1, style=dashed, color=darkseagreen4, label=valueLong];
m0_97 -> m0_100  [key=1, style=dashed, color=darkseagreen4, label=valueLong];
m0_98 -> m0_99  [key=0, style=solid];
m0_98 -> m0_102  [key=2, style=dotted];
m0_99 -> m0_100  [key=0, style=solid];
m0_99 -> m0_102  [key=2, style=dotted];
m0_100 -> m0_101  [key=0, style=solid];
m0_100 -> m0_102  [key=2, style=dotted];
m0_101 -> m0_96  [key=0, style=bold, color=blue];
m0_241 -> m0_242  [key=0, style=solid];
m0_242 -> m0_243  [key=0, style=solid];
m0_242 -> m0_244  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_242 -> m0_245  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_242 -> m0_242  [key=3, color=darkorchid, style=bold, label="Local variable double expected"];
m0_243 -> m0_244  [key=0, style=solid];
m0_243 -> m0_5  [key=2, style=dotted];
m0_244 -> m0_245  [key=0, style=solid];
m0_244 -> m0_228  [key=2, style=dotted];
m0_245 -> m0_246  [key=0, style=solid];
m0_245 -> m0_102  [key=2, style=dotted];
m0_246 -> m0_241  [key=0, style=bold, color=blue];
m0_315 -> m0_316  [key=0, style=solid];
m0_316 -> m0_317  [key=0, style=solid];
m0_316 -> m0_319  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_316 -> m0_316  [key=3, color=darkorchid, style=bold, label="Local variable long expected"];
m0_317 -> m0_318  [key=0, style=solid];
m0_317 -> m0_5  [key=2, style=dotted];
m0_319 -> m0_320  [key=0, style=solid];
m0_319 -> m0_102  [key=2, style=dotted];
m0_318 -> m0_319  [key=0, style=solid];
m0_318 -> m0_284  [key=2, style=dotted];
m0_320 -> m0_315  [key=0, style=bold, color=blue];
m0_333 -> m0_334  [key=0, style=solid];
m0_334 -> m0_335  [key=0, style=solid];
m0_334 -> m0_5  [key=2, style=dotted];
m0_334 -> m0_339  [key=1, style=dashed, color=darkseagreen4, label=value];
m0_335 -> m0_336  [key=0, style=solid];
m0_335 -> m0_284  [key=2, style=dotted];
m0_335 -> m0_338  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_336 -> m0_337  [key=0, style=solid];
m0_336 -> m0_102  [key=2, style=dotted];
m0_337 -> m0_333  [key=0, style=bold, color=blue];
m0_401 -> m0_402  [key=0, style=solid];
m0_402 -> m0_403  [key=0, style=solid];
m0_402 -> m0_405  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_402 -> m0_364  [key=3, color=darkorchid, style=bold, label="Local variable short expected"];
m0_403 -> m0_404  [key=0, style=solid];
m0_403 -> m0_5  [key=2, style=dotted];
m0_405 -> m0_406  [key=0, style=solid];
m0_405 -> m0_102  [key=2, style=dotted];
m0_404 -> m0_405  [key=0, style=solid];
m0_404 -> m0_284  [key=2, style=dotted];
m0_406 -> m0_401  [key=0, style=bold, color=blue];
m0_187 -> m0_188  [key=0, style=solid];
m0_188 -> m0_189  [key=0, style=solid];
m0_188 -> m0_191  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_188 -> m0_118  [key=3, color=darkorchid, style=bold, label="Local variable decimal expected"];
m0_189 -> m0_190  [key=0, style=solid];
m0_189 -> m0_5  [key=2, style=dotted];
m0_191 -> m0_192  [key=0, style=solid];
m0_191 -> m0_102  [key=2, style=dotted];
m0_190 -> m0_191  [key=0, style=solid];
m0_190 -> m0_193  [key=2, style=dotted];
m0_192 -> m0_187  [key=0, style=bold, color=blue];
m0_117 -> m0_118  [key=0, style=solid];
m0_118 -> m0_119  [key=0, style=solid];
m0_118 -> m0_121  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_118 -> m0_118  [key=3, color=darkorchid, style=bold, label="Local variable sbyte expected"];
m0_119 -> m0_120  [key=0, style=solid];
m0_119 -> m0_5  [key=2, style=dotted];
m0_121 -> m0_122  [key=0, style=solid];
m0_121 -> m0_102  [key=2, style=dotted];
m0_120 -> m0_121  [key=0, style=solid];
m0_120 -> m0_123  [key=2, style=dotted];
m0_122 -> m0_117  [key=0, style=bold, color=blue];
m0_247 -> m0_248  [key=0, style=solid];
m0_248 -> m0_249  [key=0, style=solid];
m0_248 -> m0_250  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_248 -> m0_251  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_248 -> m0_248  [key=3, color=darkorchid, style=bold, label="Local variable short expected"];
m0_249 -> m0_250  [key=0, style=solid];
m0_249 -> m0_5  [key=2, style=dotted];
m0_250 -> m0_251  [key=0, style=solid];
m0_250 -> m0_228  [key=2, style=dotted];
m0_251 -> m0_252  [key=0, style=solid];
m0_251 -> m0_102  [key=2, style=dotted];
m0_252 -> m0_247  [key=0, style=bold, color=blue];
m0_131 -> m0_132  [key=0, style=solid];
m0_132 -> m0_133  [key=0, style=solid];
m0_132 -> m0_135  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_132 -> m0_118  [key=3, color=darkorchid, style=bold, label="Local variable short expected"];
m0_133 -> m0_134  [key=0, style=solid];
m0_133 -> m0_5  [key=2, style=dotted];
m0_135 -> m0_136  [key=0, style=solid];
m0_135 -> m0_102  [key=2, style=dotted];
m0_134 -> m0_135  [key=0, style=solid];
m0_134 -> m0_137  [key=2, style=dotted];
m0_136 -> m0_131  [key=0, style=bold, color=blue];
m0_13 -> m0_14  [key=0, style=solid];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_5  [key=2, style=dotted];
m0_15 -> m0_16  [key=0, style=solid];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_12  [key=2, style=dotted];
m0_17 -> m0_13  [key=0, style=bold, color=blue];
m0_18 -> m0_19  [key=0, style=solid];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_5  [key=2, style=dotted];
m0_20 -> m0_21  [key=0, style=solid];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_6  [key=2, style=dotted];
m0_22 -> m0_18  [key=0, style=bold, color=blue];
m0_457 -> m0_458  [key=0, style=solid];
m0_458 -> m0_459  [key=0, style=solid];
m0_458 -> m0_284  [key=2, style=dotted];
m0_458 -> m0_467  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_458 -> m0_461  [key=1, style=dashed, color=darkseagreen4, label=binder];
m0_459 -> m0_460  [key=0, style=solid];
m0_459 -> m0_5  [key=2, style=dotted];
m0_459 -> m0_461  [key=1, style=dashed, color=darkseagreen4, label=value];
m0_461 -> m0_462  [key=0, style=solid];
m0_461 -> m0_465  [key=2, style=dotted];
m0_461 -> m0_463  [key=1, style=dashed, color=darkseagreen4, label=valueResult];
m0_460 -> m0_461  [key=0, style=solid];
m0_462 -> m0_463  [key=0, style=solid];
m0_462 -> m0_6  [key=2, style=dotted];
m0_463 -> m0_464  [key=0, style=solid];
m0_463 -> m0_466  [key=2, style=dotted];
m0_464 -> m0_457  [key=0, style=bold, color=blue];
m0_349 -> m0_350  [key=0, style=solid];
m0_350 -> m0_351  [key=0, style=solid];
m0_350 -> m0_354  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_350 -> m0_350  [key=3, color=darkorchid, style=bold, label="Local variable decimal expected"];
m0_351 -> m0_352  [key=0, style=solid];
m0_351 -> m0_353  [key=1, style=dashed, color=darkseagreen4, label=notExpected];
m0_351 -> m0_351  [key=3, color=darkorchid, style=bold, label="Local variable decimal notExpected"];
m0_354 -> m0_355  [key=0, style=solid];
m0_354 -> m0_102  [key=2, style=dotted];
m0_352 -> m0_353  [key=0, style=solid];
m0_352 -> m0_5  [key=2, style=dotted];
m0_353 -> m0_354  [key=0, style=solid];
m0_353 -> m0_348  [key=2, style=dotted];
m0_355 -> m0_349  [key=0, style=bold, color=blue];
m0_173 -> m0_174  [key=0, style=solid];
m0_174 -> m0_175  [key=0, style=solid];
m0_174 -> m0_177  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_174 -> m0_118  [key=3, color=darkorchid, style=bold, label="Local variable float expected"];
m0_175 -> m0_176  [key=0, style=solid];
m0_175 -> m0_5  [key=2, style=dotted];
m0_177 -> m0_178  [key=0, style=solid];
m0_177 -> m0_102  [key=2, style=dotted];
m0_176 -> m0_177  [key=0, style=solid];
m0_176 -> m0_179  [key=2, style=dotted];
m0_178 -> m0_173  [key=0, style=bold, color=blue];
m0_389 -> m0_390  [key=0, style=solid];
m0_390 -> m0_391  [key=0, style=solid];
m0_390 -> m0_393  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_390 -> m0_350  [key=3, color=darkorchid, style=bold, label="Local variable decimal expected"];
m0_391 -> m0_392  [key=0, style=solid];
m0_391 -> m0_5  [key=2, style=dotted];
m0_393 -> m0_394  [key=0, style=solid];
m0_393 -> m0_102  [key=2, style=dotted];
m0_392 -> m0_393  [key=0, style=solid];
m0_392 -> m0_284  [key=2, style=dotted];
m0_394 -> m0_389  [key=0, style=bold, color=blue];
m0_152 -> m0_153  [key=0, style=solid];
m0_153 -> m0_154  [key=0, style=solid];
m0_153 -> m0_156  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_153 -> m0_118  [key=3, color=darkorchid, style=bold, label="Local variable uint expected"];
m0_154 -> m0_155  [key=0, style=solid];
m0_154 -> m0_5  [key=2, style=dotted];
m0_156 -> m0_157  [key=0, style=solid];
m0_156 -> m0_102  [key=2, style=dotted];
m0_155 -> m0_156  [key=0, style=solid];
m0_155 -> m0_158  [key=2, style=dotted];
m0_157 -> m0_152  [key=0, style=bold, color=blue];
m0_297 -> m0_298  [key=0, style=solid];
m0_298 -> m0_299  [key=0, style=solid];
m0_298 -> m0_301  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_298 -> m0_298  [key=3, color=darkorchid, style=bold, label="Local variable double expected"];
m0_299 -> m0_300  [key=0, style=solid];
m0_299 -> m0_5  [key=2, style=dotted];
m0_301 -> m0_302  [key=0, style=solid];
m0_301 -> m0_102  [key=2, style=dotted];
m0_300 -> m0_301  [key=0, style=solid];
m0_300 -> m0_284  [key=2, style=dotted];
m0_302 -> m0_297  [key=0, style=bold, color=blue];
m0_53 -> m0_54  [key=0, style=solid];
m0_54 -> m0_55  [key=0, style=solid];
m0_54 -> m0_5  [key=2, style=dotted];
m0_55 -> m0_56  [key=0, style=solid];
m0_56 -> m0_57  [key=0, style=solid];
m0_56 -> m0_12  [key=2, style=dotted];
m0_57 -> m0_53  [key=0, style=bold, color=blue];
m0_85 -> m0_86  [key=0, style=solid];
m0_86 -> m0_87  [key=0, style=solid];
m0_86 -> m0_5  [key=2, style=dotted];
m0_86 -> m0_89  [key=2, style=dotted];
m0_87 -> m0_88  [key=0, style=solid];
m0_87 -> m0_84  [key=2, style=dotted];
m0_88 -> m0_85  [key=0, style=bold, color=blue];
m0_48 -> m0_49  [key=0, style=solid];
m0_49 -> m0_50  [key=0, style=solid];
m0_49 -> m0_5  [key=2, style=dotted];
m0_50 -> m0_51  [key=0, style=solid];
m0_51 -> m0_52  [key=0, style=solid];
m0_51 -> m0_6  [key=2, style=dotted];
m0_52 -> m0_48  [key=0, style=bold, color=blue];
m0_145 -> m0_146  [key=0, style=solid];
m0_146 -> m0_147  [key=0, style=solid];
m0_146 -> m0_149  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_146 -> m0_118  [key=3, color=darkorchid, style=bold, label="Local variable int expected"];
m0_147 -> m0_148  [key=0, style=solid];
m0_147 -> m0_5  [key=2, style=dotted];
m0_149 -> m0_150  [key=0, style=solid];
m0_149 -> m0_102  [key=2, style=dotted];
m0_148 -> m0_149  [key=0, style=solid];
m0_148 -> m0_151  [key=2, style=dotted];
m0_150 -> m0_145  [key=0, style=bold, color=blue];
m0_90 -> m0_91  [key=0, style=solid];
m0_91 -> m0_92  [key=0, style=solid];
m0_91 -> m0_5  [key=2, style=dotted];
m0_91 -> m0_93  [key=1, style=dashed, color=darkseagreen4, label=valueTrue];
m0_92 -> m0_93  [key=0, style=solid];
m0_92 -> m0_5  [key=2, style=dotted];
m0_92 -> m0_94  [key=1, style=dashed, color=darkseagreen4, label=valueFalse];
m0_93 -> m0_94  [key=0, style=solid];
m0_93 -> m0_84  [key=2, style=dotted];
m0_94 -> m0_95  [key=0, style=solid];
m0_94 -> m0_67  [key=2, style=dotted];
m0_95 -> m0_90  [key=0, style=bold, color=blue];
m0_433 -> m0_434  [key=0, style=solid];
m0_434 -> m0_435  [key=0, style=solid];
m0_434 -> m0_438  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_434 -> m0_434  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m0_435 -> m0_436  [key=0, style=solid];
m0_435 -> m0_437  [key=1, style=dashed, color=darkseagreen4, label=notExpected];
m0_435 -> m0_435  [key=3, color=darkorchid, style=bold, label="Local variable string notExpected"];
m0_438 -> m0_439  [key=0, style=solid];
m0_438 -> m0_102  [key=2, style=dotted];
m0_436 -> m0_437  [key=0, style=solid];
m0_436 -> m0_5  [key=2, style=dotted];
m0_437 -> m0_438  [key=0, style=solid];
m0_437 -> m0_348  [key=2, style=dotted];
m0_439 -> m0_433  [key=0, style=bold, color=blue];
m0_7 -> m0_8  [key=0, style=solid];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_5  [key=2, style=dotted];
m0_9 -> m0_10  [key=0, style=solid];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_12  [key=2, style=dotted];
m0_11 -> m0_7  [key=0, style=bold, color=blue];
m0_502 -> m0_503  [key=0, style=solid];
m0_339 -> m0_340  [key=0, style=solid];
m0_339 -> m0_284  [key=2, style=dotted];
m0_338 -> m0_339  [key=0, style=solid];
m0_340 -> m0_338  [key=0, style=bold, color=blue];
m0_455 -> m0_456  [key=0, style=solid];
m0_454 -> m0_455  [key=0, style=solid];
m0_456 -> m0_454  [key=0, style=bold, color=blue];
m0_467 -> m0_468  [key=0, style=solid];
m0_468 -> m0_469  [key=0, style=solid];
m0_468 -> m0_470  [key=2, style=dotted];
m0_469 -> m0_467  [key=0, style=bold, color=blue];
m0_480 -> m0_481  [key=0, style=solid];
m0_481 -> m0_482  [key=0, style=solid];
m0_481 -> m0_470  [key=2, style=dotted];
m0_482 -> m0_480  [key=0, style=bold, color=blue];
m0_491 -> m0_492  [key=0, style=solid];
m0_492 -> m0_493  [key=0, style=solid];
m0_492 -> m0_470  [key=2, style=dotted];
m0_493 -> m0_491  [key=0, style=bold, color=blue];
m0_503 -> m0_504  [key=0, style=solid];
m0_503 -> m0_470  [key=2, style=dotted];
m0_504 -> m0_502  [key=0, style=bold, color=blue];
m0_202 -> m0_203  [key=0, style=solid];
m0_203 -> m0_204  [key=0, style=solid];
m0_203 -> m0_206  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_203 -> m0_203  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m0_204 -> m0_205  [key=0, style=solid];
m0_204 -> m0_5  [key=2, style=dotted];
m0_206 -> m0_207  [key=0, style=solid];
m0_206 -> m0_102  [key=2, style=dotted];
m0_205 -> m0_206  [key=0, style=solid];
m0_205 -> m0_208  [key=2, style=dotted];
m0_207 -> m0_202  [key=0, style=bold, color=blue];
m0_58 -> m0_59  [key=0, style=solid];
m0_59 -> m0_60  [key=0, style=solid];
m0_59 -> m0_5  [key=2, style=dotted];
m0_60 -> m0_61  [key=0, style=solid];
m0_61 -> m0_62  [key=0, style=solid];
m0_61 -> m0_12  [key=2, style=dotted];
m0_62 -> m0_58  [key=0, style=bold, color=blue];
m0_483 -> m0_484  [key=0, style=solid];
m0_484 -> m0_485  [key=0, style=solid];
m0_484 -> m0_284  [key=2, style=dotted];
m0_484 -> m0_491  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_484 -> m0_487  [key=1, style=dashed, color=darkseagreen4, label=binder];
m0_485 -> m0_486  [key=0, style=solid];
m0_485 -> m0_5  [key=2, style=dotted];
m0_485 -> m0_487  [key=1, style=dashed, color=darkseagreen4, label=value];
m0_487 -> m0_488  [key=0, style=solid];
m0_487 -> m0_465  [key=2, style=dotted];
m0_487 -> m0_489  [key=1, style=dashed, color=darkseagreen4, label=valueResult];
m0_486 -> m0_487  [key=0, style=solid];
m0_488 -> m0_489  [key=0, style=solid];
m0_488 -> m0_6  [key=2, style=dotted];
m0_489 -> m0_490  [key=0, style=solid];
m0_489 -> m0_466  [key=2, style=dotted];
m0_490 -> m0_483  [key=0, style=bold, color=blue];
m0_180 -> m0_181  [key=0, style=solid];
m0_181 -> m0_182  [key=0, style=solid];
m0_181 -> m0_184  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_181 -> m0_118  [key=3, color=darkorchid, style=bold, label="Local variable double expected"];
m0_182 -> m0_183  [key=0, style=solid];
m0_182 -> m0_5  [key=2, style=dotted];
m0_184 -> m0_185  [key=0, style=solid];
m0_184 -> m0_102  [key=2, style=dotted];
m0_183 -> m0_184  [key=0, style=solid];
m0_183 -> m0_186  [key=2, style=dotted];
m0_185 -> m0_180  [key=0, style=bold, color=blue];
m0_103 -> m0_104  [key=0, style=solid];
m0_104 -> m0_105  [key=0, style=solid];
m0_104 -> m0_107  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_104 -> m0_104  [key=3, color=darkorchid, style=bold, label="Local variable bool expected"];
m0_105 -> m0_106  [key=0, style=solid];
m0_105 -> m0_5  [key=2, style=dotted];
m0_107 -> m0_108  [key=0, style=solid];
m0_107 -> m0_102  [key=2, style=dotted];
m0_106 -> m0_107  [key=0, style=solid];
m0_106 -> m0_109  [key=2, style=dotted];
m0_108 -> m0_103  [key=0, style=bold, color=blue];
m0_253 -> m0_254  [key=0, style=solid];
m0_254 -> m0_255  [key=0, style=solid];
m0_254 -> m0_256  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_254 -> m0_257  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_254 -> m0_254  [key=3, color=darkorchid, style=bold, label="Local variable float expected"];
m0_255 -> m0_256  [key=0, style=solid];
m0_255 -> m0_5  [key=2, style=dotted];
m0_256 -> m0_257  [key=0, style=solid];
m0_256 -> m0_228  [key=2, style=dotted];
m0_257 -> m0_258  [key=0, style=solid];
m0_257 -> m0_102  [key=2, style=dotted];
m0_258 -> m0_253  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_5  [key=2, style=dotted];
m0_2 -> m0_3  [key=0, style=solid];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_6  [key=2, style=dotted];
m0_4 -> m0_0  [key=0, style=bold, color=blue];
m0_110 -> m0_111  [key=0, style=solid];
m0_111 -> m0_112  [key=0, style=solid];
m0_111 -> m0_114  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_111 -> m0_111  [key=3, color=darkorchid, style=bold, label="Local variable char expected"];
m0_112 -> m0_113  [key=0, style=solid];
m0_112 -> m0_5  [key=2, style=dotted];
m0_114 -> m0_115  [key=0, style=solid];
m0_114 -> m0_102  [key=2, style=dotted];
m0_113 -> m0_114  [key=0, style=solid];
m0_113 -> m0_116  [key=2, style=dotted];
m0_115 -> m0_110  [key=0, style=bold, color=blue];
m0_194 -> m0_195  [key=0, style=solid];
m0_195 -> m0_196  [key=0, style=solid];
m0_195 -> m0_200  [key=2, style=dotted];
m0_195 -> m0_198  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_196 -> m0_197  [key=0, style=solid];
m0_196 -> m0_5  [key=2, style=dotted];
m0_198 -> m0_199  [key=0, style=solid];
m0_198 -> m0_102  [key=2, style=dotted];
m0_197 -> m0_198  [key=0, style=solid];
m0_197 -> m0_201  [key=2, style=dotted];
m0_199 -> m0_194  [key=0, style=bold, color=blue];
m0_271 -> m0_272  [key=0, style=solid];
m0_272 -> m0_273  [key=0, style=solid];
m0_272 -> m0_277  [key=2, style=dotted];
m0_272 -> m0_274  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_272 -> m0_275  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_273 -> m0_274  [key=0, style=solid];
m0_273 -> m0_5  [key=2, style=dotted];
m0_274 -> m0_275  [key=0, style=solid];
m0_274 -> m0_228  [key=2, style=dotted];
m0_275 -> m0_276  [key=0, style=solid];
m0_275 -> m0_102  [key=2, style=dotted];
m0_276 -> m0_271  [key=0, style=bold, color=blue];
m0_278 -> m0_279  [key=0, style=solid];
m0_279 -> m0_280  [key=0, style=solid];
m0_279 -> m0_282  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_279 -> m0_279  [key=3, color=darkorchid, style=bold, label="Local variable int expected"];
m0_280 -> m0_281  [key=0, style=solid];
m0_280 -> m0_5  [key=2, style=dotted];
m0_282 -> m0_283  [key=0, style=solid];
m0_282 -> m0_102  [key=2, style=dotted];
m0_281 -> m0_282  [key=0, style=solid];
m0_281 -> m0_284  [key=2, style=dotted];
m0_283 -> m0_278  [key=0, style=bold, color=blue];
m0_291 -> m0_292  [key=0, style=solid];
m0_292 -> m0_293  [key=0, style=solid];
m0_292 -> m0_295  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_292 -> m0_292  [key=3, color=darkorchid, style=bold, label="Local variable decimal expected"];
m0_293 -> m0_294  [key=0, style=solid];
m0_293 -> m0_5  [key=2, style=dotted];
m0_295 -> m0_296  [key=0, style=solid];
m0_295 -> m0_102  [key=2, style=dotted];
m0_294 -> m0_295  [key=0, style=solid];
m0_294 -> m0_284  [key=2, style=dotted];
m0_296 -> m0_291  [key=0, style=bold, color=blue];
m0_166 -> m0_167  [key=0, style=solid];
m0_167 -> m0_168  [key=0, style=solid];
m0_167 -> m0_170  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_167 -> m0_118  [key=3, color=darkorchid, style=bold, label="Local variable ulong expected"];
m0_168 -> m0_169  [key=0, style=solid];
m0_168 -> m0_5  [key=2, style=dotted];
m0_170 -> m0_171  [key=0, style=solid];
m0_170 -> m0_102  [key=2, style=dotted];
m0_169 -> m0_170  [key=0, style=solid];
m0_169 -> m0_172  [key=2, style=dotted];
m0_171 -> m0_166  [key=0, style=bold, color=blue];
m0_259 -> m0_260  [key=0, style=solid];
m0_260 -> m0_261  [key=0, style=solid];
m0_260 -> m0_262  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_260 -> m0_263  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_260 -> m0_260  [key=3, color=darkorchid, style=bold, label="Local variable long expected"];
m0_261 -> m0_262  [key=0, style=solid];
m0_261 -> m0_5  [key=2, style=dotted];
m0_262 -> m0_263  [key=0, style=solid];
m0_262 -> m0_228  [key=2, style=dotted];
m0_263 -> m0_264  [key=0, style=solid];
m0_263 -> m0_102  [key=2, style=dotted];
m0_264 -> m0_259  [key=0, style=bold, color=blue];
m0_63 -> m0_64  [key=0, style=solid];
m0_64 -> m0_65  [key=0, style=solid];
m0_64 -> m0_5  [key=2, style=dotted];
m0_65 -> m0_66  [key=0, style=solid];
m0_65 -> m0_67  [key=2, style=dotted];
m0_66 -> m0_63  [key=0, style=bold, color=blue];
m0_68 -> m0_69  [key=0, style=solid];
m0_69 -> m0_70  [key=0, style=solid];
m0_69 -> m0_5  [key=2, style=dotted];
m0_69 -> m0_72  [key=1, style=dashed, color=darkseagreen4, label=valueInt];
m0_70 -> m0_71  [key=0, style=solid];
m0_70 -> m0_5  [key=2, style=dotted];
m0_70 -> m0_73  [key=1, style=dashed, color=darkseagreen4, label=valueFloat];
m0_72 -> m0_73  [key=0, style=solid];
m0_72 -> m0_67  [key=2, style=dotted];
m0_71 -> m0_72  [key=0, style=solid];
m0_71 -> m0_5  [key=2, style=dotted];
m0_71 -> m0_74  [key=1, style=dashed, color=darkseagreen4, label=valueDec];
m0_73 -> m0_74  [key=0, style=solid];
m0_73 -> m0_67  [key=2, style=dotted];
m0_74 -> m0_75  [key=0, style=solid];
m0_74 -> m0_67  [key=2, style=dotted];
m0_75 -> m0_68  [key=0, style=bold, color=blue];
m0_229 -> m0_230  [key=0, style=solid];
m0_230 -> m0_231  [key=0, style=solid];
m0_230 -> m0_232  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_230 -> m0_233  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_230 -> m0_230  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m0_231 -> m0_232  [key=0, style=solid];
m0_231 -> m0_5  [key=2, style=dotted];
m0_232 -> m0_233  [key=0, style=solid];
m0_232 -> m0_228  [key=2, style=dotted];
m0_233 -> m0_234  [key=0, style=solid];
m0_233 -> m0_102  [key=2, style=dotted];
m0_234 -> m0_229  [key=0, style=bold, color=blue];
m0_28 -> m0_29  [key=0, style=solid];
m0_29 -> m0_30  [key=0, style=solid];
m0_29 -> m0_5  [key=2, style=dotted];
m0_30 -> m0_31  [key=0, style=solid];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_6  [key=2, style=dotted];
m0_32 -> m0_28  [key=0, style=bold, color=blue];
m0_327 -> m0_328  [key=0, style=solid];
m0_328 -> m0_329  [key=0, style=solid];
m0_328 -> m0_331  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_329 -> m0_330  [key=0, style=solid];
m0_329 -> m0_5  [key=2, style=dotted];
m0_331 -> m0_332  [key=0, style=solid];
m0_331 -> m0_102  [key=2, style=dotted];
m0_330 -> m0_331  [key=0, style=solid];
m0_330 -> m0_284  [key=2, style=dotted];
m0_332 -> m0_327  [key=0, style=bold, color=blue];
m0_76 -> m0_77  [key=0, style=solid];
m0_77 -> m0_78  [key=0, style=solid];
m0_77 -> m0_5  [key=2, style=dotted];
m0_77 -> m0_80  [key=1, style=dashed, color=darkseagreen4, label=valueInt];
m0_78 -> m0_79  [key=0, style=solid];
m0_78 -> m0_5  [key=2, style=dotted];
m0_78 -> m0_81  [key=1, style=dashed, color=darkseagreen4, label=valueFloat];
m0_80 -> m0_81  [key=0, style=solid];
m0_80 -> m0_84  [key=2, style=dotted];
m0_79 -> m0_80  [key=0, style=solid];
m0_79 -> m0_5  [key=2, style=dotted];
m0_79 -> m0_82  [key=1, style=dashed, color=darkseagreen4, label=valueDec];
m0_81 -> m0_82  [key=0, style=solid];
m0_81 -> m0_84  [key=2, style=dotted];
m0_82 -> m0_83  [key=0, style=solid];
m0_82 -> m0_84  [key=2, style=dotted];
m0_83 -> m0_76  [key=0, style=bold, color=blue];
m0_23 -> m0_24  [key=0, style=solid];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_5  [key=2, style=dotted];
m0_25 -> m0_26  [key=0, style=solid];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_12  [key=2, style=dotted];
m0_27 -> m0_23  [key=0, style=bold, color=blue];
m0_383 -> m0_384  [key=0, style=solid];
m0_384 -> m0_385  [key=0, style=solid];
m0_384 -> m0_386  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_384 -> m0_387  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_384 -> m0_343  [key=3, color=darkorchid, style=bold, label="Local variable int expected"];
m0_385 -> m0_386  [key=0, style=solid];
m0_385 -> m0_5  [key=2, style=dotted];
m0_386 -> m0_387  [key=0, style=solid];
m0_386 -> m0_284  [key=2, style=dotted];
m0_387 -> m0_388  [key=0, style=solid];
m0_387 -> m0_102  [key=2, style=dotted];
m0_388 -> m0_383  [key=0, style=bold, color=blue];
m0_321 -> m0_322  [key=0, style=solid];
m0_322 -> m0_323  [key=0, style=solid];
m0_322 -> m0_325  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_322 -> m0_322  [key=3, color=darkorchid, style=bold, label="Local variable bool expected"];
m0_323 -> m0_324  [key=0, style=solid];
m0_323 -> m0_5  [key=2, style=dotted];
m0_325 -> m0_326  [key=0, style=solid];
m0_325 -> m0_102  [key=2, style=dotted];
m0_324 -> m0_325  [key=0, style=solid];
m0_324 -> m0_284  [key=2, style=dotted];
m0_326 -> m0_321  [key=0, style=bold, color=blue];
m0_363 -> m0_364  [key=0, style=solid];
m0_364 -> m0_365  [key=0, style=solid];
m0_364 -> m0_368  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_364 -> m0_364  [key=3, color=darkorchid, style=bold, label="Local variable short expected"];
m0_365 -> m0_366  [key=0, style=solid];
m0_365 -> m0_367  [key=1, style=dashed, color=darkseagreen4, label=notExpected];
m0_365 -> m0_365  [key=3, color=darkorchid, style=bold, label="Local variable short notExpected"];
m0_368 -> m0_369  [key=0, style=solid];
m0_368 -> m0_102  [key=2, style=dotted];
m0_366 -> m0_367  [key=0, style=solid];
m0_366 -> m0_5  [key=2, style=dotted];
m0_367 -> m0_368  [key=0, style=solid];
m0_367 -> m0_348  [key=2, style=dotted];
m0_369 -> m0_363  [key=0, style=bold, color=blue];
m0_395 -> m0_396  [key=0, style=solid];
m0_396 -> m0_397  [key=0, style=solid];
m0_396 -> m0_399  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_396 -> m0_357  [key=3, color=darkorchid, style=bold, label="Local variable double expected"];
m0_397 -> m0_398  [key=0, style=solid];
m0_397 -> m0_5  [key=2, style=dotted];
m0_399 -> m0_400  [key=0, style=solid];
m0_399 -> m0_102  [key=2, style=dotted];
m0_398 -> m0_399  [key=0, style=solid];
m0_398 -> m0_284  [key=2, style=dotted];
m0_400 -> m0_395  [key=0, style=bold, color=blue];
m0_38 -> m0_39  [key=0, style=solid];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_5  [key=2, style=dotted];
m0_40 -> m0_41  [key=0, style=solid];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_6  [key=2, style=dotted];
m0_42 -> m0_38  [key=0, style=bold, color=blue];
m0_370 -> m0_371  [key=0, style=solid];
m0_371 -> m0_372  [key=0, style=solid];
m0_371 -> m0_277  [key=2, style=dotted];
m0_371 -> m0_375  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_372 -> m0_373  [key=0, style=solid];
m0_372 -> m0_277  [key=2, style=dotted];
m0_372 -> m0_374  [key=1, style=dashed, color=darkseagreen4, label=notExpected];
m0_375 -> m0_376  [key=0, style=solid];
m0_375 -> m0_102  [key=2, style=dotted];
m0_373 -> m0_374  [key=0, style=solid];
m0_373 -> m0_5  [key=2, style=dotted];
m0_374 -> m0_375  [key=0, style=solid];
m0_374 -> m0_348  [key=2, style=dotted];
m0_376 -> m0_370  [key=0, style=bold, color=blue];
m0_209 -> m0_210  [key=0, style=solid];
m0_210 -> m0_211  [key=0, style=solid];
m0_210 -> m0_213  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_210 -> m0_118  [key=3, color=darkorchid, style=bold, label="Local variable int expected"];
m0_211 -> m0_212  [key=0, style=solid];
m0_211 -> m0_5  [key=2, style=dotted];
m0_213 -> m0_214  [key=0, style=solid];
m0_213 -> m0_102  [key=2, style=dotted];
m0_212 -> m0_213  [key=0, style=solid];
m0_212 -> m0_215  [key=2, style=dotted];
m0_214 -> m0_209  [key=0, style=bold, color=blue];
m0_356 -> m0_357  [key=0, style=solid];
m0_357 -> m0_358  [key=0, style=solid];
m0_357 -> m0_361  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_357 -> m0_357  [key=3, color=darkorchid, style=bold, label="Local variable double expected"];
m0_358 -> m0_359  [key=0, style=solid];
m0_358 -> m0_360  [key=1, style=dashed, color=darkseagreen4, label=notExpected];
m0_358 -> m0_358  [key=3, color=darkorchid, style=bold, label="Local variable double notExpected"];
m0_361 -> m0_362  [key=0, style=solid];
m0_361 -> m0_102  [key=2, style=dotted];
m0_359 -> m0_360  [key=0, style=solid];
m0_359 -> m0_5  [key=2, style=dotted];
m0_360 -> m0_361  [key=0, style=solid];
m0_360 -> m0_348  [key=2, style=dotted];
m0_362 -> m0_356  [key=0, style=bold, color=blue];
m0_341 -> m0_342  [key=0, style=solid];
m0_342 -> m0_343  [key=0, style=solid];
m0_342 -> m0_346  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_342 -> m0_118  [key=3, color=darkorchid, style=bold, label="Local variable int expected"];
m0_343 -> m0_344  [key=0, style=solid];
m0_343 -> m0_345  [key=1, style=dashed, color=darkseagreen4, label=notExpected];
m0_343 -> m0_343  [key=3, color=darkorchid, style=bold, label="Local variable int notExpected"];
m0_346 -> m0_347  [key=0, style=solid];
m0_346 -> m0_102  [key=2, style=dotted];
m0_344 -> m0_345  [key=0, style=solid];
m0_344 -> m0_5  [key=2, style=dotted];
m0_345 -> m0_346  [key=0, style=solid];
m0_345 -> m0_348  [key=2, style=dotted];
m0_347 -> m0_341  [key=0, style=bold, color=blue];
m0_216 -> m0_217  [key=0, style=solid];
m0_217 -> m0_218  [key=0, style=solid];
m0_217 -> m0_5  [key=2, style=dotted];
m0_218 -> m0_219  [key=0, style=solid];
m0_218 -> m0_217  [key=3, color=darkorchid, style=bold, label="Local variable string actual"];
m0_219 -> m0_220  [key=0, style=solid];
m0_219 -> m0_221  [key=2, style=dotted];
m0_220 -> m0_216  [key=0, style=bold, color=blue];
m0_309 -> m0_310  [key=0, style=solid];
m0_310 -> m0_311  [key=0, style=solid];
m0_310 -> m0_313  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_310 -> m0_310  [key=3, color=darkorchid, style=bold, label="Local variable float expected"];
m0_311 -> m0_312  [key=0, style=solid];
m0_311 -> m0_5  [key=2, style=dotted];
m0_313 -> m0_314  [key=0, style=solid];
m0_313 -> m0_102  [key=2, style=dotted];
m0_312 -> m0_313  [key=0, style=solid];
m0_312 -> m0_284  [key=2, style=dotted];
m0_314 -> m0_309  [key=0, style=bold, color=blue];
m0_377 -> m0_378  [key=0, style=solid];
m0_378 -> m0_379  [key=0, style=solid];
m0_378 -> m0_381  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_378 -> m0_118  [key=3, color=darkorchid, style=bold, label="Local variable int expected"];
m0_379 -> m0_380  [key=0, style=solid];
m0_379 -> m0_5  [key=2, style=dotted];
m0_381 -> m0_382  [key=0, style=solid];
m0_381 -> m0_102  [key=2, style=dotted];
m0_380 -> m0_381  [key=0, style=solid];
m0_380 -> m0_284  [key=2, style=dotted];
m0_382 -> m0_377  [key=0, style=bold, color=blue];
m0_303 -> m0_304  [key=0, style=solid];
m0_304 -> m0_305  [key=0, style=solid];
m0_304 -> m0_307  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_304 -> m0_304  [key=3, color=darkorchid, style=bold, label="Local variable short expected"];
m0_305 -> m0_306  [key=0, style=solid];
m0_305 -> m0_5  [key=2, style=dotted];
m0_307 -> m0_308  [key=0, style=solid];
m0_307 -> m0_102  [key=2, style=dotted];
m0_306 -> m0_307  [key=0, style=solid];
m0_306 -> m0_284  [key=2, style=dotted];
m0_308 -> m0_303  [key=0, style=bold, color=blue];
m0_222 -> m0_223  [key=0, style=solid];
m0_223 -> m0_224  [key=0, style=solid];
m0_223 -> m0_225  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_223 -> m0_226  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_223 -> m0_223  [key=3, color=darkorchid, style=bold, label="Local variable int expected"];
m0_224 -> m0_225  [key=0, style=solid];
m0_224 -> m0_5  [key=2, style=dotted];
m0_225 -> m0_226  [key=0, style=solid];
m0_225 -> m0_228  [key=2, style=dotted];
m0_226 -> m0_227  [key=0, style=solid];
m0_226 -> m0_102  [key=2, style=dotted];
m0_227 -> m0_222  [key=0, style=bold, color=blue];
m0_419 -> m0_420  [key=0, style=solid];
m0_420 -> m0_421  [key=0, style=solid];
m0_420 -> m0_424  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_420 -> m0_420  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m0_421 -> m0_422  [key=0, style=solid];
m0_421 -> m0_423  [key=1, style=dashed, color=darkseagreen4, label=notExpected];
m0_421 -> m0_421  [key=3, color=darkorchid, style=bold, label="Local variable string notExpected"];
m0_424 -> m0_425  [key=0, style=solid];
m0_424 -> m0_102  [key=2, style=dotted];
m0_422 -> m0_423  [key=0, style=solid];
m0_422 -> m0_5  [key=2, style=dotted];
m0_423 -> m0_424  [key=0, style=solid];
m0_423 -> m0_348  [key=2, style=dotted];
m0_425 -> m0_419  [key=0, style=bold, color=blue];
m0_235 -> m0_236  [key=0, style=solid];
m0_236 -> m0_237  [key=0, style=solid];
m0_236 -> m0_238  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_236 -> m0_239  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_236 -> m0_236  [key=3, color=darkorchid, style=bold, label="Local variable decimal expected"];
m0_237 -> m0_238  [key=0, style=solid];
m0_237 -> m0_5  [key=2, style=dotted];
m0_238 -> m0_239  [key=0, style=solid];
m0_238 -> m0_228  [key=2, style=dotted];
m0_239 -> m0_240  [key=0, style=solid];
m0_239 -> m0_102  [key=2, style=dotted];
m0_240 -> m0_235  [key=0, style=bold, color=blue];
m0_440 -> m0_441  [key=0, style=solid];
m0_441 -> m0_442  [key=0, style=solid];
m0_441 -> m0_277  [key=2, style=dotted];
m0_441 -> m0_447  [key=2, style=dotted];
m0_441 -> m0_445  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_442 -> m0_443  [key=0, style=solid];
m0_442 -> m0_277  [key=2, style=dotted];
m0_442 -> m0_447  [key=2, style=dotted];
m0_442 -> m0_444  [key=1, style=dashed, color=darkseagreen4, label=notExpected];
m0_445 -> m0_446  [key=0, style=solid];
m0_445 -> m0_102  [key=2, style=dotted];
m0_443 -> m0_444  [key=0, style=solid];
m0_443 -> m0_5  [key=2, style=dotted];
m0_443 -> m0_277  [key=2, style=dotted];
m0_444 -> m0_445  [key=0, style=solid];
m0_444 -> m0_348  [key=2, style=dotted];
m0_446 -> m0_440  [key=0, style=bold, color=blue];
m0_505 -> m0_339  [key=1, style=dashed, color=darkseagreen4, label=value];
m0_506 -> m0_455  [key=1, style=dashed, color=darkseagreen4, label=value];
}
