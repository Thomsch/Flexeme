digraph  {
n21 [label="Nancy.ViewEngines.DefaultResourceReader", span=""];
n22 [label="System.Reflection.Assembly", span=""];
n23 [label=resourceName, span=""];
n0 [cluster="Nancy.ViewEngines.DefaultResourceReader.GetResourceStreamMatches(System.Reflection.Assembly, System.Collections.Generic.IEnumerable<string>)", label="Entry Nancy.ViewEngines.DefaultResourceReader.GetResourceStreamMatches(System.Reflection.Assembly, System.Collections.Generic.IEnumerable<string>)", span="19-19"];
n1 [cluster="Nancy.ViewEngines.DefaultResourceReader.GetResourceStreamMatches(System.Reflection.Assembly, System.Collections.Generic.IEnumerable<string>)", label="var resourceStreams =\r\n                from resourceName in assembly.GetManifestResourceNames()\r\n                from viewEngineExtension in supportedViewEngineExtensions\r\n                where GetResourceExtension(resourceName).Equals(viewEngineExtension, StringComparison.OrdinalIgnoreCase)\r\n                select new Tuple<string, Func<StreamReader>>(\r\n                    resourceName,\r\n                    () => new StreamReader(assembly.GetManifestResourceStream(resourceName)))", span="21-27"];
n10 [cluster="lambda expression", label="new StreamReader(assembly.GetManifestResourceStream(resourceName))", span="27-27"];
n2 [cluster="Nancy.ViewEngines.DefaultResourceReader.GetResourceStreamMatches(System.Reflection.Assembly, System.Collections.Generic.IEnumerable<string>)", label="return resourceStreams.ToList();", span="29-29"];
n4 [cluster="System.Reflection.Assembly.GetManifestResourceNames()", label="Entry System.Reflection.Assembly.GetManifestResourceNames()", span="0-0"];
n5 [cluster="Unk.GetResourceExtension", label="Entry Unk.GetResourceExtension", span=""];
n6 [cluster="Unk.Equals", label="Entry Unk.Equals", span=""];
n7 [cluster="Tuple<string, Func<StreamReader>>.cstr", label="Entry Tuple<string, Func<StreamReader>>.cstr", span=""];
n3 [cluster="Nancy.ViewEngines.DefaultResourceReader.GetResourceStreamMatches(System.Reflection.Assembly, System.Collections.Generic.IEnumerable<string>)", label="Exit Nancy.ViewEngines.DefaultResourceReader.GetResourceStreamMatches(System.Reflection.Assembly, System.Collections.Generic.IEnumerable<string>)", span="19-19"];
n8 [cluster="Unk.ToList", label="Entry Unk.ToList", span=""];
n9 [cluster="lambda expression", label="Entry lambda expression", span="27-27"];
n11 [cluster="lambda expression", label="Exit lambda expression", span="27-27"];
n12 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
n13 [cluster="Unk.GetManifestResourceStream", label="Entry Unk.GetManifestResourceStream", span=""];
n14 [cluster="Nancy.ViewEngines.DefaultResourceReader.GetResourceExtension(string)", label="Entry Nancy.ViewEngines.DefaultResourceReader.GetResourceExtension(string)", span="32-32"];
n15 [cluster="Nancy.ViewEngines.DefaultResourceReader.GetResourceExtension(string)", label="var extension = Path.GetExtension(resourceName)", span="34-34"];
n16 [cluster="Nancy.ViewEngines.DefaultResourceReader.GetResourceExtension(string)", label="return string.IsNullOrEmpty(extension) ? string.Empty : extension.Substring(1);", span="35-35"];
n18 [cluster="System.IO.Path.GetExtension(string)", label="Entry System.IO.Path.GetExtension(string)", span="0-0"];
n17 [cluster="Nancy.ViewEngines.DefaultResourceReader.GetResourceExtension(string)", label="Exit Nancy.ViewEngines.DefaultResourceReader.GetResourceExtension(string)", span="32-32"];
n19 [cluster="string.IsNullOrEmpty(string)", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
n20 [cluster="string.Substring(int)", label="Entry string.Substring(int)", span="0-0"];
d343 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_result_from_underlaying_beginread_when_beginread_is_called()", color=green, community=0, label="7: var buffer = new byte[10]", span="481-481"];
d342 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_result_from_underlaying_beginread_when_beginread_is_called()", label="Entry Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_result_from_underlaying_beginread_when_beginread_is_called()", span="478-478"];
d344 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_result_from_underlaying_beginread_when_beginread_is_called()", label="var asyncResult = A.Fake<IAsyncResult>()", span="482-482"];
d348 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_result_from_underlaying_beginread_when_beginread_is_called()", label="A.CallTo(() => this.stream.BeginRead(buffer, 0, buffer.Length, callback, state)).Returns(asyncResult)", span="486-486"];
d356 [cluster="lambda expression", label="this.stream.BeginRead(buffer, 0, buffer.Length, callback, state)", span="486-486"];
d349 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_result_from_underlaying_beginread_when_beginread_is_called()", label="var result = request.BeginRead(buffer, 0, buffer.Length, callback, state)", span="489-489"];
d351 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_result_from_underlaying_beginread_when_beginread_is_called()", label="Exit Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_result_from_underlaying_beginread_when_beginread_is_called()", span="478-478"];
d345 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_result_from_underlaying_beginread_when_beginread_is_called()", label="AsyncCallback callback = x => { }", span="483-483"];
d7 [cluster="Unk.>", label="Entry Unk.>", span=""];
d350 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_result_from_underlaying_beginread_when_beginread_is_called()", label="result.ShouldBeSameAs(asyncResult)", span="492-492"];
d418 [label="Nancy.Tests.Unit.IO.RequestStreamFixture", span=""];
d346 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_result_from_underlaying_beginread_when_beginread_is_called()", label="var state = new object()", span="484-484"];
d347 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_result_from_underlaying_beginread_when_beginread_is_called()", label="var request = RequestStream.FromStream(this.stream, 0, 10, true)", span="485-485"];
d8 [cluster="Unk.CallTo", label="Entry Unk.CallTo", span=""];
d9 [cluster="Unk.Returns", label="Entry Unk.Returns", span=""];
d355 [cluster="lambda expression", label="Entry lambda expression", span="486-486"];
d431 [label=buffer, span=""];
d432 [label=callback, span=""];
d433 [label=state, span=""];
d357 [cluster="lambda expression", label="Exit lambda expression", span="486-486"];
d341 [cluster="System.IO.Stream.BeginRead(byte[], int, int, System.AsyncCallback, object)", label="Entry System.IO.Stream.BeginRead(byte[], int, int, System.AsyncCallback, object)", span="0-0"];
d335 [cluster="Nancy.IO.RequestStream.BeginRead(byte[], int, int, System.AsyncCallback, object)", label="Entry Nancy.IO.RequestStream.BeginRead(byte[], int, int, System.AsyncCallback, object)", span="154-154"];
d1 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.RequestStreamFixture()", label="this.stream = A.Fake<Stream>(x => {\r\n                x.Implements(typeof(IDisposable));\r\n            })", span="14-16"];
d70 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_throw_invalidoperationexception_when_created_with_non_readable_stream()", label="exception.ShouldBeOfType<InvalidOperationException>()", span="99-99"];
d83 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_throw_argumentoutofrangeexception_when_expected_lenght_is_less_than_zero()", label="exception.ShouldBeOfType<ArgumentOutOfRangeException>()", span="112-112"];
d92 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_throw_argumentoutofrangeexception_when_thresholdLength_is_less_than_zero()", label="exception.ShouldBeOfType<ArgumentOutOfRangeException>()", span="125-125"];
d99 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_work_even_with_a_non_seekable_stream()", label="var str = A.Fake<Stream>()", span="132-132"];
d176 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_throw_argumentoutofrangexception_when_setting_position_to_less_than_zero()", label="exception.ShouldBeOfType<InvalidOperationException>()", span="255-255"];
d185 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_throw_invalidoperationexception_when_position_is_set_to_greater_than_length_of_stream()", label="exception.ShouldBeOfType<InvalidOperationException>()", span="269-269"];
d207 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_throw_notsupportedexception_when_setting_length()", label="exception.ShouldBeOfType<NotSupportedException>()", span="295-295"];
d375 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_result_from_underlaying_beginwrite_when_beginwrite_is_called()", label="var asyncResult = A.Fake<IAsyncResult>()", span="516-516"];
d389 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_call_endread_on_underlaying_stream_when_endread_is_called()", label="var asyncResult = A.Fake<IAsyncResult>()", span="533-533"];
d399 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_result_from_underlaying_endread_when_endread_is_called()", label="var asyncResult = A.Fake<IAsyncResult>()", span="547-547"];
d409 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_call_endwrite_on_underlaying_stream_when_endwrite_is_called()", label="var asyncResult = A.Fake<IAsyncResult>()", span="562-562"];
d352 [cluster="Unk.ShouldBeSameAs", label="Entry Unk.ShouldBeSameAs", span=""];
d2 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.RequestStreamFixture()", label="A.CallTo(() => this.stream.CanRead).Returns(true)", span="18-18"];
d15 [cluster="lambda expression", label="this.stream.CanRead", span="18-18"];
d3 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.RequestStreamFixture()", label="A.CallTo(() => this.stream.CanSeek).Returns(true)", span="19-19"];
d18 [cluster="lambda expression", label="this.stream.CanSeek", span="19-19"];
d4 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.RequestStreamFixture()", label="A.CallTo(() => this.stream.CanTimeout).Returns(true)", span="20-20"];
d21 [cluster="lambda expression", label="this.stream.CanTimeout", span="20-20"];
d5 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.RequestStreamFixture()", label="A.CallTo(() => this.stream.CanWrite).Returns(true)", span="21-21"];
d24 [cluster="lambda expression", label="this.stream.CanWrite", span="21-21"];
d27 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_not_dispose_wrapped_stream_when_not_switched()", label="var instance = RequestStream.FromStream(this.stream, 0, 1, true)", span="28-28"];
d29 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_not_dispose_wrapped_stream_when_not_switched()", label="A.CallTo(() => ((IDisposable)this.stream).Dispose()).MustNotHaveHappened()", span="34-34"];
d35 [cluster="lambda expression", label="((IDisposable)this.stream).Dispose()", span="34-34"];
d41 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_dispose_wrapped_stream_when_created_internally()", label="A.CallTo(() => ((IDisposable)this.stream).Dispose()).MustNotHaveHappened()", span="47-47"];
d44 [cluster="lambda expression", label="((IDisposable)this.stream).Dispose()", span="47-47"];
d47 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_move_non_seekable_stream_into_seekable_stream_when_stream_switching_is_disabled()", label="A.CallTo(() => this.stream.CanSeek).Returns(false)", span="54-54"];
d53 [cluster="lambda expression", label="this.stream.CanSeek", span="54-54"];
d48 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_move_non_seekable_stream_into_seekable_stream_when_stream_switching_is_disabled()", label="var result = RequestStream.FromStream(stream, 0, 1, true)", span="57-57"];
d68 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_throw_invalidoperationexception_when_created_with_non_readable_stream()", label="A.CallTo(() => this.stream.CanRead).Returns(false)", span="93-93"];
d74 [cluster="lambda expression", label="this.stream.CanRead", span="93-93"];
d69 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_throw_invalidoperationexception_when_created_with_non_readable_stream()", label="var exception = Record.Exception(() => RequestStream.FromStream(this.stream))", span="96-96"];
d77 [cluster="lambda expression", label="RequestStream.FromStream(this.stream)", span="96-96"];
d82 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_throw_argumentoutofrangeexception_when_expected_lenght_is_less_than_zero()", label="var exception = Record.Exception(() => RequestStream.FromStream(this.stream, expectedLength))", span="109-109"];
d86 [cluster="lambda expression", label="RequestStream.FromStream(this.stream, expectedLength)", span="109-109"];
d91 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_throw_argumentoutofrangeexception_when_thresholdLength_is_less_than_zero()", label="var exception = Record.Exception(() => RequestStream.FromStream(this.stream, 0, tresholdLength))", span="122-122"];
d95 [cluster="lambda expression", label="RequestStream.FromStream(this.stream, 0, tresholdLength)", span="122-122"];
d122 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_true_when_queried_about_supporting_reading()", label="var request = RequestStream.FromStream(this.stream, 0, 1, false)", span="154-154"];
d127 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_state_of_underlaying_stream_when_queried_about_supporting_writing()", label="A.CallTo(() => this.stream.CanWrite).Returns(true)", span="167-167"];
d133 [cluster="lambda expression", label="this.stream.CanWrite", span="167-167"];
d128 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_state_of_underlaying_stream_when_queried_about_supporting_writing()", label="var request = RequestStream.FromStream(this.stream, 0, 1, false)", span="168-168"];
d136 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_true_when_queried_about_supporting_seeking()", label="var request = RequestStream.FromStream(this.stream, 0, 1, false)", span="181-181"];
d141 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_false_when_queried_about_supporting_timeout()", label="var request = RequestStream.FromStream(this.stream, 0, 1, false)", span="194-194"];
d146 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_length_of_underlaying_stream()", label="A.CallTo(() => this.stream.Length).Returns(1234L)", span="207-207"];
d153 [cluster="lambda expression", label="this.stream.Length", span="207-207"];
d147 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_length_of_underlaying_stream()", label="var request = RequestStream.FromStream(this.stream, 0, 1235, false)", span="208-208"];
d156 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_position_of_underlaying_stream()", label="var request = RequestStream.FromStream(this.stream, 0, 1, false)", span="221-221"];
d157 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_position_of_underlaying_stream()", label="A.CallTo(() => this.stream.Position).Returns(1234L)", span="222-222"];
d162 [cluster="lambda expression", label="this.stream.Position", span="222-222"];
d165 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_set_position_of_underlaying_stream()", label="A.CallTo(() => this.stream.Length).Returns(2000L)", span="235-235"];
d171 [cluster="lambda expression", label="this.stream.Length", span="235-235"];
d166 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_set_position_of_underlaying_stream()", label="var request = RequestStream.FromStream(this.stream, 0, 2001, false)", span="236-236"];
d168 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_set_position_of_underlaying_stream()", label="this.stream.Position.ShouldEqual(1234L)", span="242-242"];
d174 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_throw_argumentoutofrangexception_when_setting_position_to_less_than_zero()", label="var request = RequestStream.FromStream(this.stream, 0, 1, false)", span="249-249"];
d182 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_throw_invalidoperationexception_when_position_is_set_to_greater_than_length_of_stream()", label="A.CallTo(() => this.stream.Length).Returns(100L)", span="262-262"];
d188 [cluster="lambda expression", label="this.stream.Length", span="262-262"];
d183 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_throw_invalidoperationexception_when_position_is_set_to_greater_than_length_of_stream()", label="var request = RequestStream.FromStream(this.stream, 0, 1, false)", span="263-263"];
d194 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_flush_underlaying_stream()", label="var request = RequestStream.FromStream(this.stream, 0, 1, false)", span="276-276"];
d196 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_flush_underlaying_stream()", label="A.CallTo(() => this.stream.Flush()).MustHaveHappened()", span="282-282"];
d201 [cluster="lambda expression", label="this.stream.Flush()", span="282-282"];
d205 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_throw_notsupportedexception_when_setting_length()", label="var request = RequestStream.FromStream(this.stream, 0, 1, false)", span="289-289"];
d214 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_set_position_of_underlaying_stream_to_zero_when_created()", label="A.CallTo(() => this.stream.Position).Returns(10)", span="302-302"];
d219 [cluster="lambda expression", label="this.stream.Position", span="302-302"];
d215 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_set_position_of_underlaying_stream_to_zero_when_created()", label="var request = RequestStream.FromStream(this.stream, 0, 1, false)", span="305-305"];
d216 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_set_position_of_underlaying_stream_to_zero_when_created()", label="this.stream.Position.ShouldEqual(0L)", span="308-308"];
d222 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_seek_in_the_underlaying_stream_when_seek_is_called()", label="var request = RequestStream.FromStream(this.stream, 0, 1, false)", span="315-315"];
d224 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_seek_in_the_underlaying_stream_when_seek_is_called()", label="A.CallTo(() => this.stream.Seek(10L, SeekOrigin.Current)).MustHaveHappened()", span="321-321"];
d228 [cluster="lambda expression", label="this.stream.Seek(10L, SeekOrigin.Current)", span="321-321"];
d232 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_the_new_position_of_the_underlaying_stream_when_seek_is_called()", label="A.CallTo(() => this.stream.Seek(A<long>.Ignored, A<SeekOrigin>.Ignored)).Returns(100L)", span="328-328"];
d238 [cluster="lambda expression", label="this.stream.Seek(A<long>.Ignored, A<SeekOrigin>.Ignored)", span="328-328"];
d233 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_the_new_position_of_the_underlaying_stream_when_seek_is_called()", label="var request = RequestStream.FromStream(this.stream, 0, 1, false)", span="329-329"];
d242 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_read_byte_from_underlaying_stream_when_reading_byte()", label="var request = RequestStream.FromStream(this.stream, 0, 1, false)", span="342-342"];
d244 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_read_byte_from_underlaying_stream_when_reading_byte()", label="A.CallTo(() => this.stream.ReadByte()).MustHaveHappened()", span="348-348"];
d248 [cluster="lambda expression", label="this.stream.ReadByte()", span="348-348"];
d252 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_read_byte_from_underlaying_stream_when_readbyte_is_called()", label="A.CallTo(() => this.stream.ReadByte()).Returns(5)", span="355-355"];
d258 [cluster="lambda expression", label="this.stream.ReadByte()", span="355-355"];
d253 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_read_byte_from_underlaying_stream_when_readbyte_is_called()", label="var request = RequestStream.FromStream(this.stream, 0, 1, false)", span="356-356"];
d261 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_close_the_underlaying_stream_when_being_closed()", label="var request = RequestStream.FromStream(this.stream, 0, 1, false)", span="369-369"];
d263 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_close_the_underlaying_stream_when_being_closed()", label="A.CallTo(() => this.stream.Close()).MustHaveHappened()", span="375-375"];
d267 [cluster="lambda expression", label="this.stream.Close()", span="375-375"];
d272 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_read_from_underlaying_stream_when_read_is_called()", label="var request = RequestStream.FromStream(this.stream, 0, 1, false)", span="383-383"];
d274 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_read_from_underlaying_stream_when_read_is_called()", label="A.CallTo(() => this.stream.Read(buffer, 0, buffer.Length)).MustHaveHappened()", span="389-389"];
d278 [cluster="lambda expression", label="this.stream.Read(buffer, 0, buffer.Length)", span="389-389"];
d283 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_result_from_reading_underlaying_stream()", label="var request = RequestStream.FromStream(this.stream, 0, 1, false)", span="397-397"];
d284 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_result_from_reading_underlaying_stream()", label="A.CallTo(() => this.stream.Read(buffer, 0, buffer.Length)).Returns(3)", span="398-398"];
d289 [cluster="lambda expression", label="this.stream.Read(buffer, 0, buffer.Length)", span="398-398"];
d293 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_write_to_underlaying_stream_when_write_is_called()", label="var request = RequestStream.FromStream(this.stream, 0, 1, false)", span="412-412"];
d295 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_write_to_underlaying_stream_when_write_is_called()", label="A.CallTo(() => this.stream.Write(buffer, 0, buffer.Length)).MustHaveHappened()", span="418-418"];
d299 [cluster="lambda expression", label="this.stream.Write(buffer, 0, buffer.Length)", span="418-418"];
d303 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_no_longer_be_in_memory_if_expected_length_is_greater_or_equal_to_threshold_length()", label="var request = RequestStream.FromStream(this.stream, 1, 0, false)", span="425-425"];
d308 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_no_longer_be_in_memory_when_more_bytes_have_been_written_to_stream_then_size_of_the_threshold_and_stream_swapping_is_enabled()", label="var request = RequestStream.FromStream(this.stream, 0, 10, false)", span="436-436"];
d309 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_no_longer_be_in_memory_when_more_bytes_have_been_written_to_stream_then_size_of_the_threshold_and_stream_swapping_is_enabled()", label="A.CallTo(() => this.stream.Length).Returns(100)", span="437-437"];
d314 [cluster="lambda expression", label="this.stream.Length", span="437-437"];
d318 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_still_be_in_memory_when_more_bytes_have_been_written_to_stream_than_size_of_threshold_and_stream_swapping_is_disabled()", label="var request = RequestStream.FromStream(this.stream, 0, 10, true)", span="451-451"];
d319 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_still_be_in_memory_when_more_bytes_have_been_written_to_stream_than_size_of_threshold_and_stream_swapping_is_disabled()", label="A.CallTo(() => this.stream.Length).Returns(100)", span="452-452"];
d324 [cluster="lambda expression", label="this.stream.Length", span="452-452"];
d330 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_call_beginread_on_underlaying_stream_when_beginread_is_called()", label="var request = RequestStream.FromStream(this.stream, 0, 10, true)", span="468-468"];
d332 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_call_beginread_on_underlaying_stream_when_beginread_is_called()", label="A.CallTo(() => this.stream.BeginRead(buffer, 0, buffer.Length, callback, state)).MustHaveHappened()", span="474-474"];
d339 [cluster="lambda expression", label="this.stream.BeginRead(buffer, 0, buffer.Length, callback, state)", span="474-474"];
d362 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_call_beginwrite_on_underlaying_stream_when_beginwrite_is_called()", label="var request = RequestStream.FromStream(this.stream, 0, 10, true)", span="502-502"];
d364 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_call_beginwrite_on_underlaying_stream_when_beginwrite_is_called()", label="A.CallTo(() => this.stream.BeginWrite(buffer, 0, buffer.Length, callback, state)).MustHaveHappened()", span="508-508"];
d370 [cluster="lambda expression", label="this.stream.BeginWrite(buffer, 0, buffer.Length, callback, state)", span="508-508"];
d378 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_result_from_underlaying_beginwrite_when_beginwrite_is_called()", label="var request = RequestStream.FromStream(this.stream, 0, 10, true)", span="519-519"];
d379 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_result_from_underlaying_beginwrite_when_beginwrite_is_called()", label="A.CallTo(() => this.stream.BeginWrite(buffer, 0, buffer.Length, callback, state)).Returns(asyncResult)", span="520-520"];
d386 [cluster="lambda expression", label="this.stream.BeginWrite(buffer, 0, buffer.Length, callback, state)", span="520-520"];
d390 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_call_endread_on_underlaying_stream_when_endread_is_called()", label="var request = RequestStream.FromStream(this.stream, 0, 10, true)", span="534-534"];
d392 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_call_endread_on_underlaying_stream_when_endread_is_called()", label="A.CallTo(() => this.stream.EndRead(asyncResult)).MustHaveHappened()", span="540-540"];
d396 [cluster="lambda expression", label="this.stream.EndRead(asyncResult)", span="540-540"];
d400 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_result_from_underlaying_endread_when_endread_is_called()", label="var request = RequestStream.FromStream(this.stream, 0, 10, true)", span="548-548"];
d401 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_result_from_underlaying_endread_when_endread_is_called()", label="A.CallTo(() => this.stream.EndRead(A<IAsyncResult>.Ignored)).Returns(4)", span="549-549"];
d406 [cluster="lambda expression", label="this.stream.EndRead(A<IAsyncResult>.Ignored)", span="549-549"];
d410 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_call_endwrite_on_underlaying_stream_when_endwrite_is_called()", label="var request = RequestStream.FromStream(this.stream, 0, 10, true)", span="563-563"];
d412 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_call_endwrite_on_underlaying_stream_when_endwrite_is_called()", label="A.CallTo(() => this.stream.EndWrite(asyncResult)).MustHaveHappened()", span="569-569"];
d416 [cluster="lambda expression", label="this.stream.EndWrite(asyncResult)", span="569-569"];
d334 [cluster="object.Object()", label="Entry object.Object()", span="0-0"];
d31 [cluster="Nancy.IO.RequestStream.FromStream(System.IO.Stream, long, long, bool)", label="Entry Nancy.IO.RequestStream.FromStream(System.IO.Stream, long, long, bool)", span="246-246"];
d100 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_work_even_with_a_non_seekable_stream()", label="A.CallTo(() => str.CanRead).Returns(true)", span="134-134"];
d101 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_work_even_with_a_non_seekable_stream()", label="A.CallTo(() => str.CanSeek).Returns(false)", span="135-135"];
d102 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_work_even_with_a_non_seekable_stream()", label="A.CallTo(() => str.CanTimeout).Returns(true)", span="136-136"];
d103 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_work_even_with_a_non_seekable_stream()", label="A.CallTo(() => str.CanWrite).Returns(true)", span="137-137"];
d331 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_call_beginread_on_underlaying_stream_when_beginread_is_called()", label="request.BeginRead(buffer, 0, buffer.Length, callback, state)", span="471-471"];
d0 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.RequestStreamFixture()", label="Entry Nancy.Tests.Unit.IO.RequestStreamFixture.RequestStreamFixture()", span="12-12"];
d10 [cluster="lambda expression", label="Entry lambda expression", span="14-16"];
d71 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_throw_invalidoperationexception_when_created_with_non_readable_stream()", label="Exit Nancy.Tests.Unit.IO.RequestStreamFixture.Should_throw_invalidoperationexception_when_created_with_non_readable_stream()", span="90-90"];
d84 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_throw_argumentoutofrangeexception_when_expected_lenght_is_less_than_zero()", label="Exit Nancy.Tests.Unit.IO.RequestStreamFixture.Should_throw_argumentoutofrangeexception_when_expected_lenght_is_less_than_zero()", span="103-103"];
d93 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_throw_argumentoutofrangeexception_when_thresholdLength_is_less_than_zero()", label="Exit Nancy.Tests.Unit.IO.RequestStreamFixture.Should_throw_argumentoutofrangeexception_when_thresholdLength_is_less_than_zero()", span="116-116"];
d98 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_work_even_with_a_non_seekable_stream()", label="Entry Nancy.Tests.Unit.IO.RequestStreamFixture.Should_work_even_with_a_non_seekable_stream()", span="130-130"];
d110 [cluster="lambda expression", label="str.CanRead", span="134-134"];
d113 [cluster="lambda expression", label="str.CanSeek", span="135-135"];
d116 [cluster="lambda expression", label="str.CanTimeout", span="136-136"];
d119 [cluster="lambda expression", label="str.CanWrite", span="137-137"];
d104 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_work_even_with_a_non_seekable_stream()", label="var request = RequestStream.FromStream(str, 0, 1, false)", span="140-140"];
d175 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_throw_argumentoutofrangexception_when_setting_position_to_less_than_zero()", label="var exception = Record.Exception(() => request.Position = -1)", span="252-252"];
d177 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_throw_argumentoutofrangexception_when_setting_position_to_less_than_zero()", label="Exit Nancy.Tests.Unit.IO.RequestStreamFixture.Should_throw_argumentoutofrangexception_when_setting_position_to_less_than_zero()", span="246-246"];
d184 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_throw_invalidoperationexception_when_position_is_set_to_greater_than_length_of_stream()", label="var exception = Record.Exception(() => request.Position = 1000)", span="266-266"];
d186 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_throw_invalidoperationexception_when_position_is_set_to_greater_than_length_of_stream()", label="Exit Nancy.Tests.Unit.IO.RequestStreamFixture.Should_throw_invalidoperationexception_when_position_is_set_to_greater_than_length_of_stream()", span="259-259"];
d206 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_throw_notsupportedexception_when_setting_length()", label="var exception = Record.Exception(() => request.SetLength(10L))", span="292-292"];
d208 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_throw_notsupportedexception_when_setting_length()", label="Exit Nancy.Tests.Unit.IO.RequestStreamFixture.Should_throw_notsupportedexception_when_setting_length()", span="286-286"];
d374 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_result_from_underlaying_beginwrite_when_beginwrite_is_called()", label="var buffer = new byte[10]", span="515-515"];
d376 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_result_from_underlaying_beginwrite_when_beginwrite_is_called()", label="AsyncCallback callback = x => { }", span="517-517"];
d381 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_result_from_underlaying_beginwrite_when_beginwrite_is_called()", label="result.ShouldBeSameAs(asyncResult)", span="526-526"];
d388 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_call_endread_on_underlaying_stream_when_endread_is_called()", label="Entry Nancy.Tests.Unit.IO.RequestStreamFixture.Should_call_endread_on_underlaying_stream_when_endread_is_called()", span="530-530"];
d391 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_call_endread_on_underlaying_stream_when_endread_is_called()", label="request.EndRead(asyncResult)", span="537-537"];
d398 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_result_from_underlaying_endread_when_endread_is_called()", label="Entry Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_result_from_underlaying_endread_when_endread_is_called()", span="544-544"];
d402 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_result_from_underlaying_endread_when_endread_is_called()", label="var result = request.EndRead(asyncResult)", span="552-552"];
d408 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_call_endwrite_on_underlaying_stream_when_endwrite_is_called()", label="Entry Nancy.Tests.Unit.IO.RequestStreamFixture.Should_call_endwrite_on_underlaying_stream_when_endwrite_is_called()", span="559-559"];
d411 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_call_endwrite_on_underlaying_stream_when_endwrite_is_called()", label="request.EndWrite(asyncResult)", span="566-566"];
d14 [cluster="lambda expression", label="Entry lambda expression", span="18-18"];
d16 [cluster="lambda expression", label="Exit lambda expression", span="18-18"];
d17 [cluster="lambda expression", label="Entry lambda expression", span="19-19"];
d19 [cluster="lambda expression", label="Exit lambda expression", span="19-19"];
d20 [cluster="lambda expression", label="Entry lambda expression", span="20-20"];
d22 [cluster="lambda expression", label="Exit lambda expression", span="20-20"];
d6 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.RequestStreamFixture()", label="Exit Nancy.Tests.Unit.IO.RequestStreamFixture.RequestStreamFixture()", span="12-12"];
d23 [cluster="lambda expression", label="Entry lambda expression", span="21-21"];
d25 [cluster="lambda expression", label="Exit lambda expression", span="21-21"];
d26 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_not_dispose_wrapped_stream_when_not_switched()", label="Entry Nancy.Tests.Unit.IO.RequestStreamFixture.Should_not_dispose_wrapped_stream_when_not_switched()", span="25-25"];
d28 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_not_dispose_wrapped_stream_when_not_switched()", label="instance.Dispose()", span="31-31"];
d30 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_not_dispose_wrapped_stream_when_not_switched()", label="Exit Nancy.Tests.Unit.IO.RequestStreamFixture.Should_not_dispose_wrapped_stream_when_not_switched()", span="25-25"];
d33 [cluster="Unk.MustNotHaveHappened", label="Entry Unk.MustNotHaveHappened", span=""];
d34 [cluster="lambda expression", label="Entry lambda expression", span="34-34"];
d36 [cluster="lambda expression", label="Exit lambda expression", span="34-34"];
d37 [cluster="System.IDisposable.Dispose()", label="Entry System.IDisposable.Dispose()", span="0-0"];
d40 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_dispose_wrapped_stream_when_created_internally()", label="instance.Dispose()", span="44-44"];
d42 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_dispose_wrapped_stream_when_created_internally()", label="Exit Nancy.Tests.Unit.IO.RequestStreamFixture.Should_dispose_wrapped_stream_when_created_internally()", span="38-38"];
d43 [cluster="lambda expression", label="Entry lambda expression", span="47-47"];
d45 [cluster="lambda expression", label="Exit lambda expression", span="47-47"];
d46 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_move_non_seekable_stream_into_seekable_stream_when_stream_switching_is_disabled()", label="Entry Nancy.Tests.Unit.IO.RequestStreamFixture.Should_move_non_seekable_stream_into_seekable_stream_when_stream_switching_is_disabled()", span="51-51"];
d52 [cluster="lambda expression", label="Entry lambda expression", span="54-54"];
d54 [cluster="lambda expression", label="Exit lambda expression", span="54-54"];
d49 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_move_non_seekable_stream_into_seekable_stream_when_stream_switching_is_disabled()", label="result.CanSeek.ShouldBeTrue()", span="60-60"];
d67 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_throw_invalidoperationexception_when_created_with_non_readable_stream()", label="Entry Nancy.Tests.Unit.IO.RequestStreamFixture.Should_throw_invalidoperationexception_when_created_with_non_readable_stream()", span="90-90"];
d73 [cluster="lambda expression", label="Entry lambda expression", span="93-93"];
d75 [cluster="lambda expression", label="Exit lambda expression", span="93-93"];
d72 [cluster="Unk.Exception", label="Entry Unk.Exception", span=""];
d76 [cluster="lambda expression", label="Entry lambda expression", span="96-96"];
d78 [cluster="lambda expression", label="Exit lambda expression", span="96-96"];
d79 [cluster="Nancy.IO.RequestStream.FromStream(System.IO.Stream)", label="Entry Nancy.IO.RequestStream.FromStream(System.IO.Stream)", span="226-226"];
d81 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_throw_argumentoutofrangeexception_when_expected_lenght_is_less_than_zero()", label="int expectedLength = -1", span="106-106"];
d85 [cluster="lambda expression", label="Entry lambda expression", span="109-109"];
d419 [label=expectedLength, span=""];
d87 [cluster="lambda expression", label="Exit lambda expression", span="109-109"];
d88 [cluster="Nancy.IO.RequestStream.FromStream(System.IO.Stream, long)", label="Entry Nancy.IO.RequestStream.FromStream(System.IO.Stream, long)", span="231-231"];
d90 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_throw_argumentoutofrangeexception_when_thresholdLength_is_less_than_zero()", label="int tresholdLength = -1", span="119-119"];
d94 [cluster="lambda expression", label="Entry lambda expression", span="122-122"];
d420 [label=tresholdLength, span=""];
d96 [cluster="lambda expression", label="Exit lambda expression", span="122-122"];
d97 [cluster="Nancy.IO.RequestStream.FromStream(System.IO.Stream, long, long)", label="Entry Nancy.IO.RequestStream.FromStream(System.IO.Stream, long, long)", span="236-236"];
d121 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_true_when_queried_about_supporting_reading()", label="Entry Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_true_when_queried_about_supporting_reading()", span="151-151"];
d123 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_true_when_queried_about_supporting_reading()", label="var result = request.CanRead", span="157-157"];
d126 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_state_of_underlaying_stream_when_queried_about_supporting_writing()", label="Entry Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_state_of_underlaying_stream_when_queried_about_supporting_writing()", span="164-164"];
d132 [cluster="lambda expression", label="Entry lambda expression", span="167-167"];
d134 [cluster="lambda expression", label="Exit lambda expression", span="167-167"];
d129 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_state_of_underlaying_stream_when_queried_about_supporting_writing()", label="var result = request.CanWrite", span="171-171"];
d135 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_true_when_queried_about_supporting_seeking()", label="Entry Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_true_when_queried_about_supporting_seeking()", span="178-178"];
d137 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_true_when_queried_about_supporting_seeking()", label="var result = request.CanSeek", span="184-184"];
d140 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_false_when_queried_about_supporting_timeout()", label="Entry Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_false_when_queried_about_supporting_timeout()", span="191-191"];
d142 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_false_when_queried_about_supporting_timeout()", label="var result = request.CanTimeout", span="197-197"];
d145 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_length_of_underlaying_stream()", label="Entry Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_length_of_underlaying_stream()", span="204-204"];
d152 [cluster="lambda expression", label="Entry lambda expression", span="207-207"];
d154 [cluster="lambda expression", label="Exit lambda expression", span="207-207"];
d148 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_length_of_underlaying_stream()", label="var result = request.Length", span="211-211"];
d155 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_position_of_underlaying_stream()", label="Entry Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_position_of_underlaying_stream()", span="218-218"];
d158 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_position_of_underlaying_stream()", label="var result = request.Position", span="225-225"];
d161 [cluster="lambda expression", label="Entry lambda expression", span="222-222"];
d163 [cluster="lambda expression", label="Exit lambda expression", span="222-222"];
d164 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_set_position_of_underlaying_stream()", label="Entry Nancy.Tests.Unit.IO.RequestStreamFixture.Should_set_position_of_underlaying_stream()", span="232-232"];
d170 [cluster="lambda expression", label="Entry lambda expression", span="235-235"];
d172 [cluster="lambda expression", label="Exit lambda expression", span="235-235"];
d167 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_set_position_of_underlaying_stream()", label="request.Position = 1234L", span="239-239"];
d169 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_set_position_of_underlaying_stream()", label="Exit Nancy.Tests.Unit.IO.RequestStreamFixture.Should_set_position_of_underlaying_stream()", span="232-232"];
d151 [cluster="object.ShouldEqual(object)", label="Entry object.ShouldEqual(object)", span="95-95"];
d173 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_throw_argumentoutofrangexception_when_setting_position_to_less_than_zero()", label="Entry Nancy.Tests.Unit.IO.RequestStreamFixture.Should_throw_argumentoutofrangexception_when_setting_position_to_less_than_zero()", span="246-246"];
d179 [cluster="lambda expression", label="request.Position = -1", span="252-252"];
d181 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_throw_invalidoperationexception_when_position_is_set_to_greater_than_length_of_stream()", label="Entry Nancy.Tests.Unit.IO.RequestStreamFixture.Should_throw_invalidoperationexception_when_position_is_set_to_greater_than_length_of_stream()", span="259-259"];
d187 [cluster="lambda expression", label="Entry lambda expression", span="262-262"];
d189 [cluster="lambda expression", label="Exit lambda expression", span="262-262"];
d191 [cluster="lambda expression", label="request.Position = 1000", span="266-266"];
d193 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_flush_underlaying_stream()", label="Entry Nancy.Tests.Unit.IO.RequestStreamFixture.Should_flush_underlaying_stream()", span="273-273"];
d195 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_flush_underlaying_stream()", label="request.Flush()", span="279-279"];
d197 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_flush_underlaying_stream()", label="Exit Nancy.Tests.Unit.IO.RequestStreamFixture.Should_flush_underlaying_stream()", span="273-273"];
d199 [cluster="Unk.MustHaveHappened", label="Entry Unk.MustHaveHappened", span=""];
d200 [cluster="lambda expression", label="Entry lambda expression", span="282-282"];
d202 [cluster="lambda expression", label="Exit lambda expression", span="282-282"];
d203 [cluster="System.IO.Stream.Flush()", label="Entry System.IO.Stream.Flush()", span="0-0"];
d204 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_throw_notsupportedexception_when_setting_length()", label="Entry Nancy.Tests.Unit.IO.RequestStreamFixture.Should_throw_notsupportedexception_when_setting_length()", span="286-286"];
d210 [cluster="lambda expression", label="request.SetLength(10L)", span="292-292"];
d213 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_set_position_of_underlaying_stream_to_zero_when_created()", label="Entry Nancy.Tests.Unit.IO.RequestStreamFixture.Should_set_position_of_underlaying_stream_to_zero_when_created()", span="299-299"];
d218 [cluster="lambda expression", label="Entry lambda expression", span="302-302"];
d220 [cluster="lambda expression", label="Exit lambda expression", span="302-302"];
d217 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_set_position_of_underlaying_stream_to_zero_when_created()", label="Exit Nancy.Tests.Unit.IO.RequestStreamFixture.Should_set_position_of_underlaying_stream_to_zero_when_created()", span="299-299"];
d221 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_seek_in_the_underlaying_stream_when_seek_is_called()", label="Entry Nancy.Tests.Unit.IO.RequestStreamFixture.Should_seek_in_the_underlaying_stream_when_seek_is_called()", span="312-312"];
d223 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_seek_in_the_underlaying_stream_when_seek_is_called()", label="request.Seek(10L, SeekOrigin.Current)", span="318-318"];
d225 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_seek_in_the_underlaying_stream_when_seek_is_called()", label="Exit Nancy.Tests.Unit.IO.RequestStreamFixture.Should_seek_in_the_underlaying_stream_when_seek_is_called()", span="312-312"];
d227 [cluster="lambda expression", label="Entry lambda expression", span="321-321"];
d229 [cluster="lambda expression", label="Exit lambda expression", span="321-321"];
d230 [cluster="System.IO.Stream.Seek(long, System.IO.SeekOrigin)", label="Entry System.IO.Stream.Seek(long, System.IO.SeekOrigin)", span="0-0"];
d231 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_the_new_position_of_the_underlaying_stream_when_seek_is_called()", label="Entry Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_the_new_position_of_the_underlaying_stream_when_seek_is_called()", span="325-325"];
d237 [cluster="lambda expression", label="Entry lambda expression", span="328-328"];
d239 [cluster="lambda expression", label="Exit lambda expression", span="328-328"];
d240 [cluster="Unk.Seek", label="Entry Unk.Seek", span=""];
d234 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_the_new_position_of_the_underlaying_stream_when_seek_is_called()", label="var result = request.Seek(10L, SeekOrigin.Current)", span="332-332"];
d241 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_read_byte_from_underlaying_stream_when_reading_byte()", label="Entry Nancy.Tests.Unit.IO.RequestStreamFixture.Should_read_byte_from_underlaying_stream_when_reading_byte()", span="339-339"];
d243 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_read_byte_from_underlaying_stream_when_reading_byte()", label="request.ReadByte()", span="345-345"];
d245 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_read_byte_from_underlaying_stream_when_reading_byte()", label="Exit Nancy.Tests.Unit.IO.RequestStreamFixture.Should_read_byte_from_underlaying_stream_when_reading_byte()", span="339-339"];
d247 [cluster="lambda expression", label="Entry lambda expression", span="348-348"];
d249 [cluster="lambda expression", label="Exit lambda expression", span="348-348"];
d250 [cluster="System.IO.Stream.ReadByte()", label="Entry System.IO.Stream.ReadByte()", span="0-0"];
d251 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_read_byte_from_underlaying_stream_when_readbyte_is_called()", label="Entry Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_read_byte_from_underlaying_stream_when_readbyte_is_called()", span="352-352"];
d257 [cluster="lambda expression", label="Entry lambda expression", span="355-355"];
d259 [cluster="lambda expression", label="Exit lambda expression", span="355-355"];
d254 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_read_byte_from_underlaying_stream_when_readbyte_is_called()", label="var result = request.ReadByte()", span="359-359"];
d260 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_close_the_underlaying_stream_when_being_closed()", label="Entry Nancy.Tests.Unit.IO.RequestStreamFixture.Should_close_the_underlaying_stream_when_being_closed()", span="366-366"];
d262 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_close_the_underlaying_stream_when_being_closed()", label="request.Close()", span="372-372"];
d264 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_close_the_underlaying_stream_when_being_closed()", label="Exit Nancy.Tests.Unit.IO.RequestStreamFixture.Should_close_the_underlaying_stream_when_being_closed()", span="366-366"];
d266 [cluster="lambda expression", label="Entry lambda expression", span="375-375"];
d268 [cluster="lambda expression", label="Exit lambda expression", span="375-375"];
d269 [cluster="System.IO.Stream.Close()", label="Entry System.IO.Stream.Close()", span="0-0"];
d271 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_read_from_underlaying_stream_when_read_is_called()", label="var buffer = new byte[1]", span="382-382"];
d273 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_read_from_underlaying_stream_when_read_is_called()", label="request.Read(buffer, 0, buffer.Length)", span="386-386"];
d275 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_read_from_underlaying_stream_when_read_is_called()", label="Exit Nancy.Tests.Unit.IO.RequestStreamFixture.Should_read_from_underlaying_stream_when_read_is_called()", span="379-379"];
d277 [cluster="lambda expression", label="Entry lambda expression", span="389-389"];
d425 [label=buffer, span=""];
d279 [cluster="lambda expression", label="Exit lambda expression", span="389-389"];
d280 [cluster="System.IO.Stream.Read(byte[], int, int)", label="Entry System.IO.Stream.Read(byte[], int, int)", span="0-0"];
d282 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_result_from_reading_underlaying_stream()", label="var buffer = new byte[1]", span="396-396"];
d285 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_result_from_reading_underlaying_stream()", label="var result = request.Read(buffer, 0, buffer.Length)", span="401-401"];
d288 [cluster="lambda expression", label="Entry lambda expression", span="398-398"];
d426 [label=buffer, span=""];
d290 [cluster="lambda expression", label="Exit lambda expression", span="398-398"];
d292 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_write_to_underlaying_stream_when_write_is_called()", label="var buffer = new byte[1]", span="411-411"];
d294 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_write_to_underlaying_stream_when_write_is_called()", label="request.Write(buffer, 0, buffer.Length)", span="415-415"];
d296 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_write_to_underlaying_stream_when_write_is_called()", label="Exit Nancy.Tests.Unit.IO.RequestStreamFixture.Should_write_to_underlaying_stream_when_write_is_called()", span="408-408"];
d298 [cluster="lambda expression", label="Entry lambda expression", span="418-418"];
d427 [label=buffer, span=""];
d300 [cluster="lambda expression", label="Exit lambda expression", span="418-418"];
d301 [cluster="System.IO.Stream.Write(byte[], int, int)", label="Entry System.IO.Stream.Write(byte[], int, int)", span="0-0"];
d302 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_no_longer_be_in_memory_if_expected_length_is_greater_or_equal_to_threshold_length()", label="Entry Nancy.Tests.Unit.IO.RequestStreamFixture.Should_no_longer_be_in_memory_if_expected_length_is_greater_or_equal_to_threshold_length()", span="422-422"];
d304 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_no_longer_be_in_memory_if_expected_length_is_greater_or_equal_to_threshold_length()", label="request.IsInMemory.ShouldBeFalse()", span="428-428"];
d307 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_no_longer_be_in_memory_when_more_bytes_have_been_written_to_stream_then_size_of_the_threshold_and_stream_swapping_is_enabled()", label="var buffer = new byte[100]", span="435-435"];
d310 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_no_longer_be_in_memory_when_more_bytes_have_been_written_to_stream_then_size_of_the_threshold_and_stream_swapping_is_enabled()", label="request.Write(buffer, 0, buffer.Length)", span="440-440"];
d311 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_no_longer_be_in_memory_when_more_bytes_have_been_written_to_stream_then_size_of_the_threshold_and_stream_swapping_is_enabled()", label="request.IsInMemory.ShouldBeFalse()", span="443-443"];
d313 [cluster="lambda expression", label="Entry lambda expression", span="437-437"];
d315 [cluster="lambda expression", label="Exit lambda expression", span="437-437"];
d317 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_still_be_in_memory_when_more_bytes_have_been_written_to_stream_than_size_of_threshold_and_stream_swapping_is_disabled()", label="var buffer = new byte[100]", span="450-450"];
d320 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_still_be_in_memory_when_more_bytes_have_been_written_to_stream_than_size_of_threshold_and_stream_swapping_is_disabled()", label="request.Write(buffer, 0, buffer.Length)", span="455-455"];
d321 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_still_be_in_memory_when_more_bytes_have_been_written_to_stream_than_size_of_threshold_and_stream_swapping_is_disabled()", label="request.IsInMemory.ShouldBeTrue()", span="458-458"];
d323 [cluster="lambda expression", label="Entry lambda expression", span="452-452"];
d325 [cluster="lambda expression", label="Exit lambda expression", span="452-452"];
d329 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_call_beginread_on_underlaying_stream_when_beginread_is_called()", label="var state = new object()", span="467-467"];
d327 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_call_beginread_on_underlaying_stream_when_beginread_is_called()", label="var buffer = new byte[10]", span="465-465"];
d328 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_call_beginread_on_underlaying_stream_when_beginread_is_called()", label="AsyncCallback callback = x => { }", span="466-466"];
d333 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_call_beginread_on_underlaying_stream_when_beginread_is_called()", label="Exit Nancy.Tests.Unit.IO.RequestStreamFixture.Should_call_beginread_on_underlaying_stream_when_beginread_is_called()", span="462-462"];
d338 [cluster="lambda expression", label="Entry lambda expression", span="474-474"];
d428 [label=buffer, span=""];
d429 [label=callback, span=""];
d430 [label=state, span=""];
d340 [cluster="lambda expression", label="Exit lambda expression", span="474-474"];
d361 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_call_beginwrite_on_underlaying_stream_when_beginwrite_is_called()", label="var state = new object()", span="501-501"];
d363 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_call_beginwrite_on_underlaying_stream_when_beginwrite_is_called()", label="request.BeginWrite(buffer, 0, buffer.Length, callback, state)", span="505-505"];
d359 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_call_beginwrite_on_underlaying_stream_when_beginwrite_is_called()", label="var buffer = new byte[10]", span="499-499"];
d360 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_call_beginwrite_on_underlaying_stream_when_beginwrite_is_called()", label="AsyncCallback callback = x => { }", span="500-500"];
d365 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_call_beginwrite_on_underlaying_stream_when_beginwrite_is_called()", label="Exit Nancy.Tests.Unit.IO.RequestStreamFixture.Should_call_beginwrite_on_underlaying_stream_when_beginwrite_is_called()", span="496-496"];
d369 [cluster="lambda expression", label="Entry lambda expression", span="508-508"];
d434 [label=buffer, span=""];
d435 [label=callback, span=""];
d436 [label=state, span=""];
d371 [cluster="lambda expression", label="Exit lambda expression", span="508-508"];
d372 [cluster="System.IO.Stream.BeginWrite(byte[], int, int, System.AsyncCallback, object)", label="Entry System.IO.Stream.BeginWrite(byte[], int, int, System.AsyncCallback, object)", span="0-0"];
d377 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_result_from_underlaying_beginwrite_when_beginwrite_is_called()", label="var state = new object()", span="518-518"];
d380 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_result_from_underlaying_beginwrite_when_beginwrite_is_called()", label="var result = request.BeginWrite(buffer, 0, buffer.Length, callback, state)", span="523-523"];
d385 [cluster="lambda expression", label="Entry lambda expression", span="520-520"];
d437 [label=buffer, span=""];
d438 [label=callback, span=""];
d439 [label=state, span=""];
d387 [cluster="lambda expression", label="Exit lambda expression", span="520-520"];
d393 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_call_endread_on_underlaying_stream_when_endread_is_called()", label="Exit Nancy.Tests.Unit.IO.RequestStreamFixture.Should_call_endread_on_underlaying_stream_when_endread_is_called()", span="530-530"];
d395 [cluster="lambda expression", label="Entry lambda expression", span="540-540"];
d440 [label=asyncResult, span=""];
d397 [cluster="lambda expression", label="Exit lambda expression", span="540-540"];
d394 [cluster="Unk.EndRead", label="Entry Unk.EndRead", span=""];
d405 [cluster="lambda expression", label="Entry lambda expression", span="549-549"];
d407 [cluster="lambda expression", label="Exit lambda expression", span="549-549"];
d413 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_call_endwrite_on_underlaying_stream_when_endwrite_is_called()", label="Exit Nancy.Tests.Unit.IO.RequestStreamFixture.Should_call_endwrite_on_underlaying_stream_when_endwrite_is_called()", span="559-559"];
d415 [cluster="lambda expression", label="Entry lambda expression", span="569-569"];
d441 [label=asyncResult, span=""];
d417 [cluster="lambda expression", label="Exit lambda expression", span="569-569"];
d414 [cluster="Unk.EndWrite", label="Entry Unk.EndWrite", span=""];
d39 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_dispose_wrapped_stream_when_created_internally()", label="var instance = RequestStream.FromStream(null, 0, 1, true)", span="41-41"];
d57 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_move_stream_out_of_memory_if_longer_than_threshold_and_stream_switching_is_enabled()", label="var result = RequestStream.FromStream(inputStream, 0, 4, false)", span="70-70"];
d64 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_not_move_stream_out_of_memory_if_longer_than_threshold_and_stream_switching_is_disabled()", label="var result = RequestStream.FromStream(inputStream, 0, 4, true)", span="83-83"];
d109 [cluster="lambda expression", label="Entry lambda expression", span="134-134"];
d112 [cluster="lambda expression", label="Entry lambda expression", span="135-135"];
d115 [cluster="lambda expression", label="Entry lambda expression", span="136-136"];
d118 [cluster="lambda expression", label="Entry lambda expression", span="137-137"];
d12 [cluster="lambda expression", label="Exit lambda expression", span="14-16"];
d11 [cluster="lambda expression", label="x.Implements(typeof(IDisposable))", span="15-15"];
d80 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_throw_argumentoutofrangeexception_when_expected_lenght_is_less_than_zero()", label="Entry Nancy.Tests.Unit.IO.RequestStreamFixture.Should_throw_argumentoutofrangeexception_when_expected_lenght_is_less_than_zero()", span="103-103"];
d89 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_throw_argumentoutofrangeexception_when_thresholdLength_is_less_than_zero()", label="Entry Nancy.Tests.Unit.IO.RequestStreamFixture.Should_throw_argumentoutofrangeexception_when_thresholdLength_is_less_than_zero()", span="116-116"];
d107 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_work_even_with_a_non_seekable_stream()", label="Exit Nancy.Tests.Unit.IO.RequestStreamFixture.Should_work_even_with_a_non_seekable_stream()", span="130-130"];
d421 [label=str, span=""];
d111 [cluster="lambda expression", label="Exit lambda expression", span="134-134"];
d114 [cluster="lambda expression", label="Exit lambda expression", span="135-135"];
d117 [cluster="lambda expression", label="Exit lambda expression", span="136-136"];
d120 [cluster="lambda expression", label="Exit lambda expression", span="137-137"];
d105 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_work_even_with_a_non_seekable_stream()", label="var result = request.CanRead", span="143-143"];
d108 [cluster="Unk.FromStream", label="Entry Unk.FromStream", span=""];
d178 [cluster="lambda expression", label="Entry lambda expression", span="252-252"];
d190 [cluster="lambda expression", label="Entry lambda expression", span="266-266"];
d209 [cluster="lambda expression", label="Entry lambda expression", span="292-292"];
d373 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_result_from_underlaying_beginwrite_when_beginwrite_is_called()", label="Entry Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_result_from_underlaying_beginwrite_when_beginwrite_is_called()", span="512-512"];
d382 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_result_from_underlaying_beginwrite_when_beginwrite_is_called()", label="Exit Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_result_from_underlaying_beginwrite_when_beginwrite_is_called()", span="512-512"];
d404 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_result_from_underlaying_endread_when_endread_is_called()", label="Exit Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_result_from_underlaying_endread_when_endread_is_called()", span="544-544"];
d403 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_result_from_underlaying_endread_when_endread_is_called()", label="result.ShouldEqual(4)", span="555-555"];
d32 [cluster="System.IO.Stream.Dispose()", label="Entry System.IO.Stream.Dispose()", span="0-0"];
d38 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_dispose_wrapped_stream_when_created_internally()", label="Entry Nancy.Tests.Unit.IO.RequestStreamFixture.Should_dispose_wrapped_stream_when_created_internally()", span="38-38"];
d50 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_move_non_seekable_stream_into_seekable_stream_when_stream_switching_is_disabled()", label="Exit Nancy.Tests.Unit.IO.RequestStreamFixture.Should_move_non_seekable_stream_into_seekable_stream_when_stream_switching_is_disabled()", span="51-51"];
d51 [cluster="bool.ShouldBeTrue()", label="Entry bool.ShouldBeTrue()", span="85-85"];
d125 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_true_when_queried_about_supporting_reading()", label="Exit Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_true_when_queried_about_supporting_reading()", span="151-151"];
d124 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_true_when_queried_about_supporting_reading()", label="result.ShouldBeTrue()", span="160-160"];
d131 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_state_of_underlaying_stream_when_queried_about_supporting_writing()", label="Exit Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_state_of_underlaying_stream_when_queried_about_supporting_writing()", span="164-164"];
d130 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_state_of_underlaying_stream_when_queried_about_supporting_writing()", label="result.ShouldBeTrue()", span="174-174"];
d139 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_true_when_queried_about_supporting_seeking()", label="Exit Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_true_when_queried_about_supporting_seeking()", span="178-178"];
d138 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_true_when_queried_about_supporting_seeking()", label="result.ShouldBeTrue()", span="187-187"];
d144 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_false_when_queried_about_supporting_timeout()", label="Exit Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_false_when_queried_about_supporting_timeout()", span="191-191"];
d143 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_false_when_queried_about_supporting_timeout()", label="result.ShouldBeFalse()", span="200-200"];
d150 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_length_of_underlaying_stream()", label="Exit Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_length_of_underlaying_stream()", span="204-204"];
d149 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_length_of_underlaying_stream()", label="result.ShouldEqual(1234L)", span="214-214"];
d160 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_position_of_underlaying_stream()", label="Exit Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_position_of_underlaying_stream()", span="218-218"];
d159 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_position_of_underlaying_stream()", label="result.ShouldEqual(1234L)", span="228-228"];
d235 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_the_new_position_of_the_underlaying_stream_when_seek_is_called()", label="result.ShouldEqual(100L)", span="335-335"];
d255 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_read_byte_from_underlaying_stream_when_readbyte_is_called()", label="result.ShouldEqual(5)", span="362-362"];
d286 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_result_from_reading_underlaying_stream()", label="result.ShouldEqual(3)", span="404-404"];
d422 [label=request, span=""];
d180 [cluster="lambda expression", label="Exit lambda expression", span="252-252"];
d423 [label=request, span=""];
d192 [cluster="lambda expression", label="Exit lambda expression", span="266-266"];
d198 [cluster="Nancy.IO.RequestStream.Flush()", label="Entry Nancy.IO.RequestStream.Flush()", span="221-221"];
d424 [label=request, span=""];
d211 [cluster="lambda expression", label="Exit lambda expression", span="292-292"];
d212 [cluster="Nancy.IO.RequestStream.SetLength(long)", label="Entry Nancy.IO.RequestStream.SetLength(long)", span="289-289"];
d226 [cluster="Nancy.IO.RequestStream.Seek(long, System.IO.SeekOrigin)", label="Entry Nancy.IO.RequestStream.Seek(long, System.IO.SeekOrigin)", span="278-278"];
d236 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_the_new_position_of_the_underlaying_stream_when_seek_is_called()", label="Exit Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_the_new_position_of_the_underlaying_stream_when_seek_is_called()", span="325-325"];
d246 [cluster="Nancy.IO.RequestStream.ReadByte()", label="Entry Nancy.IO.RequestStream.ReadByte()", span="267-267"];
d256 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_read_byte_from_underlaying_stream_when_readbyte_is_called()", label="Exit Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_read_byte_from_underlaying_stream_when_readbyte_is_called()", span="352-352"];
d265 [cluster="Nancy.IO.RequestStream.Close()", label="Entry Nancy.IO.RequestStream.Close()", span="176-176"];
d270 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_read_from_underlaying_stream_when_read_is_called()", label="Entry Nancy.Tests.Unit.IO.RequestStreamFixture.Should_read_from_underlaying_stream_when_read_is_called()", span="379-379"];
d276 [cluster="Nancy.IO.RequestStream.Read(byte[], int, int)", label="Entry Nancy.IO.RequestStream.Read(byte[], int, int)", span="258-258"];
d281 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_result_from_reading_underlaying_stream()", label="Entry Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_result_from_reading_underlaying_stream()", span="393-393"];
d291 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_write_to_underlaying_stream_when_write_is_called()", label="Entry Nancy.Tests.Unit.IO.RequestStreamFixture.Should_write_to_underlaying_stream_when_write_is_called()", span="408-408"];
d297 [cluster="Nancy.IO.RequestStream.Write(byte[], int, int)", label="Entry Nancy.IO.RequestStream.Write(byte[], int, int)", span="300-300"];
d305 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_no_longer_be_in_memory_if_expected_length_is_greater_or_equal_to_threshold_length()", label="Exit Nancy.Tests.Unit.IO.RequestStreamFixture.Should_no_longer_be_in_memory_if_expected_length_is_greater_or_equal_to_threshold_length()", span="422-422"];
d61 [cluster="bool.ShouldBeFalse()", label="Entry bool.ShouldBeFalse()", span="90-90"];
d306 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_no_longer_be_in_memory_when_more_bytes_have_been_written_to_stream_then_size_of_the_threshold_and_stream_swapping_is_enabled()", label="Entry Nancy.Tests.Unit.IO.RequestStreamFixture.Should_no_longer_be_in_memory_when_more_bytes_have_been_written_to_stream_then_size_of_the_threshold_and_stream_swapping_is_enabled()", span="432-432"];
d312 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_no_longer_be_in_memory_when_more_bytes_have_been_written_to_stream_then_size_of_the_threshold_and_stream_swapping_is_enabled()", label="Exit Nancy.Tests.Unit.IO.RequestStreamFixture.Should_no_longer_be_in_memory_when_more_bytes_have_been_written_to_stream_then_size_of_the_threshold_and_stream_swapping_is_enabled()", span="432-432"];
d316 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_still_be_in_memory_when_more_bytes_have_been_written_to_stream_than_size_of_threshold_and_stream_swapping_is_disabled()", label="Entry Nancy.Tests.Unit.IO.RequestStreamFixture.Should_still_be_in_memory_when_more_bytes_have_been_written_to_stream_than_size_of_threshold_and_stream_swapping_is_disabled()", span="447-447"];
d322 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_still_be_in_memory_when_more_bytes_have_been_written_to_stream_than_size_of_threshold_and_stream_swapping_is_disabled()", label="Exit Nancy.Tests.Unit.IO.RequestStreamFixture.Should_still_be_in_memory_when_more_bytes_have_been_written_to_stream_than_size_of_threshold_and_stream_swapping_is_disabled()", span="447-447"];
d326 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_call_beginread_on_underlaying_stream_when_beginread_is_called()", label="Entry Nancy.Tests.Unit.IO.RequestStreamFixture.Should_call_beginread_on_underlaying_stream_when_beginread_is_called()", span="462-462"];
d366 [cluster="Nancy.IO.RequestStream.BeginWrite(byte[], int, int, System.AsyncCallback, object)", label="Entry Nancy.IO.RequestStream.BeginWrite(byte[], int, int, System.AsyncCallback, object)", span="168-168"];
d358 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_call_beginwrite_on_underlaying_stream_when_beginwrite_is_called()", label="Entry Nancy.Tests.Unit.IO.RequestStreamFixture.Should_call_beginwrite_on_underlaying_stream_when_beginwrite_is_called()", span="496-496"];
d56 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_move_stream_out_of_memory_if_longer_than_threshold_and_stream_switching_is_enabled()", label="var inputStream = new MemoryStream(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 })", span="67-67"];
d58 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_move_stream_out_of_memory_if_longer_than_threshold_and_stream_switching_is_enabled()", label="result.IsInMemory.ShouldBeFalse()", span="73-73"];
d63 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_not_move_stream_out_of_memory_if_longer_than_threshold_and_stream_switching_is_disabled()", label="var inputStream = new MemoryStream(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 })", span="80-80"];
d65 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_not_move_stream_out_of_memory_if_longer_than_threshold_and_stream_switching_is_disabled()", label="result.IsInMemory.ShouldBeTrue()", span="86-86"];
d13 [cluster="Unk.Implements", label="Entry Unk.Implements", span=""];
d106 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_work_even_with_a_non_seekable_stream()", label="result.ShouldBeTrue()", span="146-146"];
d287 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_result_from_reading_underlaying_stream()", label="Exit Nancy.Tests.Unit.IO.RequestStreamFixture.Should_return_result_from_reading_underlaying_stream()", span="393-393"];
d55 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_move_stream_out_of_memory_if_longer_than_threshold_and_stream_switching_is_enabled()", label="Entry Nancy.Tests.Unit.IO.RequestStreamFixture.Should_move_stream_out_of_memory_if_longer_than_threshold_and_stream_switching_is_enabled()", span="64-64"];
d60 [cluster="System.IO.MemoryStream.MemoryStream(byte[])", label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0"];
d59 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_move_stream_out_of_memory_if_longer_than_threshold_and_stream_switching_is_enabled()", label="Exit Nancy.Tests.Unit.IO.RequestStreamFixture.Should_move_stream_out_of_memory_if_longer_than_threshold_and_stream_switching_is_enabled()", span="64-64"];
d62 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_not_move_stream_out_of_memory_if_longer_than_threshold_and_stream_switching_is_disabled()", label="Entry Nancy.Tests.Unit.IO.RequestStreamFixture.Should_not_move_stream_out_of_memory_if_longer_than_threshold_and_stream_switching_is_disabled()", span="77-77"];
d66 [cluster="Nancy.Tests.Unit.IO.RequestStreamFixture.Should_not_move_stream_out_of_memory_if_longer_than_threshold_and_stream_switching_is_disabled()", label="Exit Nancy.Tests.Unit.IO.RequestStreamFixture.Should_not_move_stream_out_of_memory_if_longer_than_threshold_and_stream_switching_is_disabled()", span="77-77"];
m0_22 [cluster="Nancy.ErrorHandling.IStatusCodeHandler.Handle(Nancy.HttpStatusCode, Nancy.NancyContext)", file="DefaultStatusCodeHandlerFixture.cs", label="Entry Nancy.ErrorHandling.IStatusCodeHandler.Handle(Nancy.HttpStatusCode, Nancy.NancyContext)", span="20-20"];
m0_23 [cluster="object.ShouldBeNull()", file="DefaultStatusCodeHandlerFixture.cs", label="Entry object.ShouldBeNull()", span="146-146"];
m0_0 [cluster="Nancy.Tests.Unit.ErrorHandling.DefaultStatusCodeHandlerFixture.DefaultStatusCodeHandlerFixture()", file="DefaultStatusCodeHandlerFixture.cs", label="Entry Nancy.Tests.Unit.ErrorHandling.DefaultStatusCodeHandlerFixture.DefaultStatusCodeHandlerFixture()", span="17-17"];
m0_1 [cluster="Nancy.Tests.Unit.ErrorHandling.DefaultStatusCodeHandlerFixture.DefaultStatusCodeHandlerFixture()", file="DefaultStatusCodeHandlerFixture.cs", label="var environment =\r\n                new DefaultNancyEnvironment()", span="19-20"];
m0_2 [cluster="Nancy.Tests.Unit.ErrorHandling.DefaultStatusCodeHandlerFixture.DefaultStatusCodeHandlerFixture()", file="DefaultStatusCodeHandlerFixture.cs", label="environment.Tracing(\r\n                enabled: true,\r\n                displayErrorTraces: true)", span="22-24"];
m0_4 [cluster="Nancy.Tests.Unit.ErrorHandling.DefaultStatusCodeHandlerFixture.DefaultStatusCodeHandlerFixture()", file="DefaultStatusCodeHandlerFixture.cs", label="this.statusCodeHandler = new DefaultStatusCodeHandler(this.responseNegotiator, environment)", span="27-27"];
m0_3 [cluster="Nancy.Tests.Unit.ErrorHandling.DefaultStatusCodeHandlerFixture.DefaultStatusCodeHandlerFixture()", file="DefaultStatusCodeHandlerFixture.cs", label="this.responseNegotiator = A.Fake<IResponseNegotiator>()", span="26-26"];
m0_5 [cluster="Nancy.Tests.Unit.ErrorHandling.DefaultStatusCodeHandlerFixture.DefaultStatusCodeHandlerFixture()", file="DefaultStatusCodeHandlerFixture.cs", label="Exit Nancy.Tests.Unit.ErrorHandling.DefaultStatusCodeHandlerFixture.DefaultStatusCodeHandlerFixture()", span="17-17"];
m0_133 [cluster="Nancy.IO.RequestStream.MoveStreamContentsInto(System.IO.Stream)", file="DefaultStatusCodeHandlerFixture.cs", label="Entry Nancy.IO.RequestStream.MoveStreamContentsInto(System.IO.Stream)", span="397-397"];
m0_140 [cluster="Nancy.IO.RequestStream.MoveStreamContentsInto(System.IO.Stream)", file="DefaultStatusCodeHandlerFixture.cs", label="IsStreamSeekableAndSwitchingDisabled()", span="399-399"];
m0_142 [cluster="Nancy.IO.RequestStream.MoveStreamContentsInto(System.IO.Stream)", file="DefaultStatusCodeHandlerFixture.cs", label="this.isSafeToDisposeStream = true", span="404-404"];
m0_143 [cluster="Nancy.IO.RequestStream.MoveStreamContentsInto(System.IO.Stream)", file="DefaultStatusCodeHandlerFixture.cs", label="this.stream.CanSeek && this.stream.Length == 0", span="406-406"];
m0_144 [cluster="Nancy.IO.RequestStream.MoveStreamContentsInto(System.IO.Stream)", file="DefaultStatusCodeHandlerFixture.cs", label="this.stream.Close()", span="408-408"];
m0_145 [cluster="Nancy.IO.RequestStream.MoveStreamContentsInto(System.IO.Stream)", file="DefaultStatusCodeHandlerFixture.cs", label="this.stream = target", span="409-409"];
m0_147 [cluster="Nancy.IO.RequestStream.MoveStreamContentsInto(System.IO.Stream)", file="DefaultStatusCodeHandlerFixture.cs", label="this.stream.CopyTo(target, 8196)", span="413-413"];
m0_148 [cluster="Nancy.IO.RequestStream.MoveStreamContentsInto(System.IO.Stream)", file="DefaultStatusCodeHandlerFixture.cs", label="this.stream.CanSeek", span="414-414"];
m0_149 [cluster="Nancy.IO.RequestStream.MoveStreamContentsInto(System.IO.Stream)", file="DefaultStatusCodeHandlerFixture.cs", label="this.stream.Flush()", span="416-416"];
m0_151 [cluster="Nancy.IO.RequestStream.MoveStreamContentsInto(System.IO.Stream)", file="DefaultStatusCodeHandlerFixture.cs", label="this.stream = target", span="420-420"];
m0_141 [cluster="Nancy.IO.RequestStream.MoveStreamContentsInto(System.IO.Stream)", file="DefaultStatusCodeHandlerFixture.cs", label="return;", span="401-401"];
m0_146 [cluster="Nancy.IO.RequestStream.MoveStreamContentsInto(System.IO.Stream)", file="DefaultStatusCodeHandlerFixture.cs", label="return;", span="410-410"];
m0_150 [cluster="Nancy.IO.RequestStream.MoveStreamContentsInto(System.IO.Stream)", file="DefaultStatusCodeHandlerFixture.cs", label="target.Position = 0", span="419-419"];
m0_152 [cluster="Nancy.IO.RequestStream.MoveStreamContentsInto(System.IO.Stream)", file="DefaultStatusCodeHandlerFixture.cs", label="Exit Nancy.IO.RequestStream.MoveStreamContentsInto(System.IO.Stream)", span="397-397"];
m0_6 [cluster="Nancy.IO.RequestStream.RequestStream(System.IO.Stream, long, long, bool)", file="DefaultStatusCodeHandlerFixture.cs", label="Entry Nancy.IO.RequestStream.RequestStream(System.IO.Stream, long, long, bool)", span="56-56"];
m0_137 [cluster="Nancy.IO.RequestStream.IsStreamSeekableAndSwitchingDisabled()", file="DefaultStatusCodeHandlerFixture.cs", label="Entry Nancy.IO.RequestStream.IsStreamSeekableAndSwitchingDisabled()", span="392-392"];
m0_138 [cluster="Nancy.IO.RequestStream.IsStreamSeekableAndSwitchingDisabled()", file="DefaultStatusCodeHandlerFixture.cs", label="return this.disableStreamSwitching && this.stream.CanSeek;", span="394-394"];
m0_139 [cluster="Nancy.IO.RequestStream.IsStreamSeekableAndSwitchingDisabled()", file="DefaultStatusCodeHandlerFixture.cs", label="Exit Nancy.IO.RequestStream.IsStreamSeekableAndSwitchingDisabled()", span="392-392"];
m0_42 [cluster="Nancy.IO.RequestStream.DeleteTemporaryFile(string)", file="DefaultStatusCodeHandlerFixture.cs", label="Entry Nancy.IO.RequestStream.DeleteTemporaryFile(string)", span="342-342"];
m0_43 [cluster="System.IO.Stream.Dispose(bool)", file="DefaultStatusCodeHandlerFixture.cs", label="Entry System.IO.Stream.Dispose(bool)", span="0-0"];
m0_44 [cluster="Nancy.IO.RequestStream.EndRead(System.IAsyncResult)", file="DefaultStatusCodeHandlerFixture.cs", label="Entry Nancy.IO.RequestStream.EndRead(System.IAsyncResult)", span="204-204"];
m0_45 [cluster="Nancy.IO.RequestStream.EndRead(System.IAsyncResult)", file="DefaultStatusCodeHandlerFixture.cs", label="return this.stream.EndRead(asyncResult);", span="206-206"];
m0_46 [cluster="Nancy.IO.RequestStream.EndRead(System.IAsyncResult)", file="DefaultStatusCodeHandlerFixture.cs", label="Exit Nancy.IO.RequestStream.EndRead(System.IAsyncResult)", span="204-204"];
m0_48 [cluster="Nancy.IO.RequestStream.EndWrite(System.IAsyncResult)", file="DefaultStatusCodeHandlerFixture.cs", label="Entry Nancy.IO.RequestStream.EndWrite(System.IAsyncResult)", span="213-213"];
m0_47 [cluster="System.IO.Stream.EndRead(System.IAsyncResult)", file="DefaultStatusCodeHandlerFixture.cs", label="Entry System.IO.Stream.EndRead(System.IAsyncResult)", span="0-0"];
m0_49 [cluster="Nancy.IO.RequestStream.EndWrite(System.IAsyncResult)", color=green, community=0, file="DefaultStatusCodeHandlerFixture.cs", label="3: this.stream.EndWrite(asyncResult)", span="215-215"];
m0_50 [cluster="Nancy.IO.RequestStream.EndWrite(System.IAsyncResult)", file="DefaultStatusCodeHandlerFixture.cs", label="Exit Nancy.IO.RequestStream.EndWrite(System.IAsyncResult)", span="213-213"];
m0_59 [cluster="lambda expression", file="DefaultStatusCodeHandlerFixture.cs", label="this.responseNegotiator.NegotiateResponse(A<DefaultStatusCodeHandler.DefaultStatusCodeHandlerResult>._, context)", span="132-132"];
m0_69 [cluster="Nancy.Tests.Unit.ErrorHandling.DefaultStatusCodeHandlerFixture.Should_leave_reponse_stream_open_if_response_is_InternalServerError()", file="DefaultStatusCodeHandlerFixture.cs", label="var memoryStream = new MemoryStream()", span="163-163"];
m0_70 [cluster="Nancy.Tests.Unit.ErrorHandling.DefaultStatusCodeHandlerFixture.Should_leave_reponse_stream_open_if_response_is_InternalServerError()", file="DefaultStatusCodeHandlerFixture.cs", label="this.statusCodeHandler.Handle(HttpStatusCode.InternalServerError, context)", span="166-166"];
m0_105 [cluster="System.IO.Path.Combine(string, string)", file="DefaultStatusCodeHandlerFixture.cs", label=context, span=""];
m0_56 [cluster="Nancy.IO.RequestStream.FromStream(System.IO.Stream)", file="DefaultStatusCodeHandlerFixture.cs", label="Entry Nancy.IO.RequestStream.FromStream(System.IO.Stream)", span="226-226"];
m0_52 [cluster="Nancy.ViewEngines.ViewNotFoundException.ViewNotFoundException(string)", file="DefaultStatusCodeHandlerFixture.cs", label="Entry Nancy.ViewEngines.ViewNotFoundException.ViewNotFoundException(string)", span="87-87"];
m0_53 [cluster="Unk.Throws", file="DefaultStatusCodeHandlerFixture.cs", label="Entry Unk.Throws", span=""];
m0_54 [cluster="System.IO.MemoryStream.MemoryStream()", file="DefaultStatusCodeHandlerFixture.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m0_41 [cluster="lambda expression", file="DefaultStatusCodeHandlerFixture.cs", label="Exit lambda expression", span="116-116"];
m0_24 [cluster="System.IO.Stream.BeginRead(byte[], int, int, System.AsyncCallback, object)", file="DefaultStatusCodeHandlerFixture.cs", label="Entry System.IO.Stream.BeginRead(byte[], int, int, System.AsyncCallback, object)", span="0-0"];
m0_25 [cluster="Nancy.IO.RequestStream.BeginWrite(byte[], int, int, System.AsyncCallback, object)", file="DefaultStatusCodeHandlerFixture.cs", label="Entry Nancy.IO.RequestStream.BeginWrite(byte[], int, int, System.AsyncCallback, object)", span="168-168"];
m0_26 [cluster="Nancy.IO.RequestStream.BeginWrite(byte[], int, int, System.AsyncCallback, object)", file="DefaultStatusCodeHandlerFixture.cs", label="return this.stream.BeginWrite(buffer, offset, count, callback, state);", span="170-170"];
m0_27 [cluster="Nancy.IO.RequestStream.BeginWrite(byte[], int, int, System.AsyncCallback, object)", file="DefaultStatusCodeHandlerFixture.cs", label="Exit Nancy.IO.RequestStream.BeginWrite(byte[], int, int, System.AsyncCallback, object)", span="168-168"];
m0_28 [cluster="System.IO.Stream.BeginWrite(byte[], int, int, System.AsyncCallback, object)", file="DefaultStatusCodeHandlerFixture.cs", label="Entry System.IO.Stream.BeginWrite(byte[], int, int, System.AsyncCallback, object)", span="0-0"];
m0_29 [cluster="Nancy.IO.RequestStream.Close()", file="DefaultStatusCodeHandlerFixture.cs", label="Entry Nancy.IO.RequestStream.Close()", span="176-176"];
m0_30 [cluster="Nancy.IO.RequestStream.Close()", file="DefaultStatusCodeHandlerFixture.cs", label="this.stream.Close()", span="178-178"];
m0_14 [cluster="Nancy.IO.RequestStream.RequestStream(System.IO.Stream, long, long, bool)", file="DefaultStatusCodeHandlerFixture.cs", label="this.stream.Position = 0", span="68-68"];
m0_119 [cluster="System.IO.File.Exists(string)", file="DefaultStatusCodeHandlerFixture.cs", label="Entry System.IO.File.Exists(string)", span="0-0"];
m0_31 [cluster="Nancy.IO.RequestStream.Close()", file="DefaultStatusCodeHandlerFixture.cs", label="Exit Nancy.IO.RequestStream.Close()", span="176-176"];
m0_63 [cluster="Nancy.Tests.Unit.ErrorHandling.DefaultStatusCodeHandlerFixture.Should_create_response_if_it_doesnt_exist_in_context()", file="DefaultStatusCodeHandlerFixture.cs", label="var context = new NancyContext()", span="149-149"];
m0_64 [cluster="Nancy.Tests.Unit.ErrorHandling.DefaultStatusCodeHandlerFixture.Should_create_response_if_it_doesnt_exist_in_context()", file="DefaultStatusCodeHandlerFixture.cs", label="this.statusCodeHandler.Handle(HttpStatusCode.NotFound, context)", span="152-152"];
m0_65 [cluster="Nancy.Tests.Unit.ErrorHandling.DefaultStatusCodeHandlerFixture.Should_create_response_if_it_doesnt_exist_in_context()", file="DefaultStatusCodeHandlerFixture.cs", label="context.Response.ShouldNotBeNull()", span="155-155"];
m0_75 [cluster="Nancy.IO.RequestStream.ReadByte()", file="DefaultStatusCodeHandlerFixture.cs", label="Entry Nancy.IO.RequestStream.ReadByte()", span="267-267"];
m0_76 [cluster="Nancy.IO.RequestStream.ReadByte()", file="DefaultStatusCodeHandlerFixture.cs", label="return this.stream.ReadByte();", span="269-269"];
m0_77 [cluster="Nancy.IO.RequestStream.ReadByte()", file="DefaultStatusCodeHandlerFixture.cs", label="Exit Nancy.IO.RequestStream.ReadByte()", span="267-267"];
m0_78 [cluster="System.IO.Stream.ReadByte()", file="DefaultStatusCodeHandlerFixture.cs", label="Entry System.IO.Stream.ReadByte()", span="0-0"];
m0_79 [cluster="Nancy.IO.RequestStream.Seek(long, System.IO.SeekOrigin)", file="DefaultStatusCodeHandlerFixture.cs", label="Entry Nancy.IO.RequestStream.Seek(long, System.IO.SeekOrigin)", span="278-278"];
m0_103 [cluster="System.IO.Path.GetTempFileName()", file="DefaultStatusCodeHandlerFixture.cs", label=context, span=""];
m0_82 [cluster="lambda expression", file="DefaultStatusCodeHandlerFixture.cs", label="this.responseNegotiator.NegotiateResponse(A<DefaultStatusCodeHandler.DefaultStatusCodeHandlerResult>._, context)", span="183-183"];
m0_16 [cluster="Nancy.IO.RequestStream.CreateDefaultMemoryStream(long)", file="DefaultStatusCodeHandlerFixture.cs", label="Entry Nancy.IO.RequestStream.CreateDefaultMemoryStream(long)", span="328-328"];
m0_17 [cluster="Nancy.IO.RequestStream.ThrowExceptionIfCtorParametersWereInvalid(System.IO.Stream, long, long)", file="DefaultStatusCodeHandlerFixture.cs", label="Entry Nancy.IO.RequestStream.ThrowExceptionIfCtorParametersWereInvalid(System.IO.Stream, long, long)", span="423-423"];
m0_18 [cluster="Nancy.IO.RequestStream.EnsureStreamIsSeekable()", file="DefaultStatusCodeHandlerFixture.cs", label="Entry Nancy.IO.RequestStream.EnsureStreamIsSeekable()", span="358-358"];
m0_19 [cluster="Nancy.IO.RequestStream.MoveStreamOutOfMemoryIfExpectedLengthExceedExpectedLength(long)", file="DefaultStatusCodeHandlerFixture.cs", label="Entry Nancy.IO.RequestStream.MoveStreamOutOfMemoryIfExpectedLengthExceedExpectedLength(long)", span="374-374"];
m0_20 [cluster="Nancy.IO.RequestStream.MoveStreamOutOfMemoryIfContentsLengthExceedThresholdAndSwitchingIsEnabled()", file="DefaultStatusCodeHandlerFixture.cs", label="Entry Nancy.IO.RequestStream.MoveStreamOutOfMemoryIfContentsLengthExceedThresholdAndSwitchingIsEnabled()", span="366-366"];
m0_106 [cluster="System.IO.FileStream.FileStream(string, System.IO.FileMode, System.IO.FileAccess, System.IO.FileShare, int, bool)", file="DefaultStatusCodeHandlerFixture.cs", label="Entry System.IO.FileStream.FileStream(string, System.IO.FileMode, System.IO.FileAccess, System.IO.FileShare, int, bool)", span="0-0"];
m0_113 [cluster="System.IO.MemoryStream.MemoryStream(int)", file="DefaultStatusCodeHandlerFixture.cs", label="Entry System.IO.MemoryStream.MemoryStream(int)", span="0-0"];
m0_162 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, object, string)", file="DefaultStatusCodeHandlerFixture.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, object, string)", span="0-0"];
m0_128 [cluster="Nancy.IO.RequestStream.MoveStreamOutOfMemoryIfExpectedLengthExceedExpectedLength(long)", file="DefaultStatusCodeHandlerFixture.cs", label="expectedLength >= this.thresholdLength", span="376-376"];
m0_129 [cluster="Nancy.IO.RequestStream.MoveStreamOutOfMemoryIfExpectedLengthExceedExpectedLength(long)", file="DefaultStatusCodeHandlerFixture.cs", label="this.MoveStreamContentsToFileStream()", span="378-378"];
m0_130 [cluster="Nancy.IO.RequestStream.MoveStreamOutOfMemoryIfExpectedLengthExceedExpectedLength(long)", file="DefaultStatusCodeHandlerFixture.cs", label="Exit Nancy.IO.RequestStream.MoveStreamOutOfMemoryIfExpectedLengthExceedExpectedLength(long)", span="374-374"];
m0_10 [cluster="Nancy.IO.RequestStream.RequestStream(System.IO.Stream, long, long, bool)", file="DefaultStatusCodeHandlerFixture.cs", label="ThrowExceptionIfCtorParametersWereInvalid(this.stream, expectedLength, this.thresholdLength)", span="62-62"];
m0_11 [cluster="Nancy.IO.RequestStream.RequestStream(System.IO.Stream, long, long, bool)", file="DefaultStatusCodeHandlerFixture.cs", label="this.EnsureStreamIsSeekable()", span="64-64"];
m0_12 [cluster="Nancy.IO.RequestStream.RequestStream(System.IO.Stream, long, long, bool)", file="DefaultStatusCodeHandlerFixture.cs", label="this.MoveStreamOutOfMemoryIfExpectedLengthExceedExpectedLength(expectedLength)", span="65-65"];
m0_13 [cluster="Nancy.IO.RequestStream.RequestStream(System.IO.Stream, long, long, bool)", file="DefaultStatusCodeHandlerFixture.cs", label="this.MoveStreamOutOfMemoryIfContentsLengthExceedThresholdAndSwitchingIsEnabled()", span="66-66"];
m0_91 [cluster="Nancy.IO.RequestStream.Write(byte[], int, int)", file="DefaultStatusCodeHandlerFixture.cs", label="this.stream.Length >= this.thresholdLength", span="309-309"];
m0_40 [cluster="Nancy.IO.RequestStream.Dispose(bool)", file="DefaultStatusCodeHandlerFixture.cs", label="Exit Nancy.IO.RequestStream.Dispose(bool)", span="181-181"];
m0_58 [cluster="Nancy.IO.RequestStream.FromStream(System.IO.Stream)", file="DefaultStatusCodeHandlerFixture.cs", label="Exit Nancy.IO.RequestStream.FromStream(System.IO.Stream)", span="226-226"];
m0_60 [cluster="Nancy.IO.RequestStream.FromStream(System.IO.Stream, long)", file="DefaultStatusCodeHandlerFixture.cs", label="Entry Nancy.IO.RequestStream.FromStream(System.IO.Stream, long)", span="231-231"];
m0_81 [cluster="Nancy.IO.RequestStream.Seek(long, System.IO.SeekOrigin)", file="DefaultStatusCodeHandlerFixture.cs", label="Exit Nancy.IO.RequestStream.Seek(long, System.IO.SeekOrigin)", span="278-278"];
m0_83 [cluster="lambda expression", file="DefaultStatusCodeHandlerFixture.cs", label="Exit lambda expression", span="183-183"];
m0_92 [cluster="Nancy.IO.RequestStream.Write(byte[], int, int)", file="DefaultStatusCodeHandlerFixture.cs", label="var old = this.stream", span="314-314"];
m0_93 [cluster="Nancy.IO.RequestStream.Write(byte[], int, int)", file="DefaultStatusCodeHandlerFixture.cs", label="this.MoveStreamContentsToFileStream()", span="315-315"];
m0_121 [cluster="Nancy.IO.RequestStream.EnsureStreamIsSeekable()", file="DefaultStatusCodeHandlerFixture.cs", label="!this.stream.CanSeek", span="360-360"];
m0_122 [cluster="Nancy.IO.RequestStream.EnsureStreamIsSeekable()", file="DefaultStatusCodeHandlerFixture.cs", label="this.MoveStreamContentsToMemoryStream()", span="362-362"];
m0_123 [cluster="Nancy.IO.RequestStream.EnsureStreamIsSeekable()", file="DefaultStatusCodeHandlerFixture.cs", label="Exit Nancy.IO.RequestStream.EnsureStreamIsSeekable()", span="358-358"];
m0_7 [cluster="Nancy.IO.RequestStream.RequestStream(System.IO.Stream, long, long, bool)", file="DefaultStatusCodeHandlerFixture.cs", label="this.thresholdLength = thresholdLength", span="58-58"];
m0_136 [cluster="System.IO.MemoryStream.MemoryStream()", file="DefaultStatusCodeHandlerFixture.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m0_80 [cluster="Unk.MustHaveHappened", file="DefaultStatusCodeHandlerFixture.cs", label="Entry Unk.MustHaveHappened", span=""];
m0_51 [cluster="Unk.CallTo", file="DefaultStatusCodeHandlerFixture.cs", label="Entry Unk.CallTo", span=""];
m0_153 [cluster="System.IO.Stream.CopyTo(System.IO.Stream, int)", file="DefaultStatusCodeHandlerFixture.cs", label="Entry System.IO.Stream.CopyTo(System.IO.Stream, int)", span="0-0"];
m0_62 [cluster="Nancy.IO.RequestStream.FromStream(System.IO.Stream, long)", file="DefaultStatusCodeHandlerFixture.cs", label="Exit Nancy.IO.RequestStream.FromStream(System.IO.Stream, long)", span="231-231"];
m0_66 [cluster="Nancy.IO.RequestStream.FromStream(System.IO.Stream, long, bool)", file="DefaultStatusCodeHandlerFixture.cs", label="Entry Nancy.IO.RequestStream.FromStream(System.IO.Stream, long, bool)", span="241-241"];
m0_87 [cluster="Nancy.Tests.Unit.ErrorHandling.DefaultStatusCodeHandlerFixture.Should_render_html_response_from_static_resources()", file="DefaultStatusCodeHandlerFixture.cs", label="this.statusCodeHandler.Handle(HttpStatusCode.InternalServerError, context)", span="194-194"];
m0_88 [cluster="Nancy.Tests.Unit.ErrorHandling.DefaultStatusCodeHandlerFixture.Should_render_html_response_from_static_resources()", file="DefaultStatusCodeHandlerFixture.cs", label="Assert.Equal(''text/html'', context.Response.ContentType)", span="197-197"];
m0_89 [cluster="Nancy.Tests.Unit.ErrorHandling.DefaultStatusCodeHandlerFixture.Should_render_html_response_from_static_resources()", file="DefaultStatusCodeHandlerFixture.cs", label="Exit Nancy.Tests.Unit.ErrorHandling.DefaultStatusCodeHandlerFixture.Should_render_html_response_from_static_resources()", span="187-187"];
m0_90 [cluster="Unk.Equal", file="DefaultStatusCodeHandlerFixture.cs", label="Entry Unk.Equal", span=""];
m0_94 [cluster="Nancy.Tests.Unit.ErrorHandling.DefaultStatusCodeHandlerFixture.Should_reset_negotiation_context()", file="DefaultStatusCodeHandlerFixture.cs", label="Entry Nancy.Tests.Unit.ErrorHandling.DefaultStatusCodeHandlerFixture.Should_reset_negotiation_context()", span="201-201"];
m0_95 [cluster="Nancy.Tests.Unit.ErrorHandling.DefaultStatusCodeHandlerFixture.Should_reset_negotiation_context()", file="DefaultStatusCodeHandlerFixture.cs", label="var context = new NancyContext()", span="204-204"];
m0_8 [cluster="Unk.>", file="DefaultStatusCodeHandlerFixture.cs", label="Entry Unk.>", span=""];
m0_9 [cluster="Nancy.ErrorHandling.DefaultStatusCodeHandler.DefaultStatusCodeHandler(Nancy.Responses.Negotiation.IResponseNegotiator, Nancy.Configuration.INancyEnvironment)", file="DefaultStatusCodeHandlerFixture.cs", label="Entry Nancy.ErrorHandling.DefaultStatusCodeHandler.DefaultStatusCodeHandler(Nancy.Responses.Negotiation.IResponseNegotiator, Nancy.Configuration.INancyEnvironment)", span="31-31"];
m0_15 [cluster="bool.ShouldBeFalse()", file="DefaultStatusCodeHandlerFixture.cs", label="Entry bool.ShouldBeFalse()", span="101-101"];
m0_39 [cluster="Nancy.IO.RequestStream.Dispose(bool)", file="DefaultStatusCodeHandlerFixture.cs", label="base.Dispose(disposing)", span="194-194"];
m0_57 [cluster="Nancy.IO.RequestStream.FromStream(System.IO.Stream)", file="DefaultStatusCodeHandlerFixture.cs", label="return FromStream(stream, 0, DEFAULT_SWITCHOVER_THRESHOLD, false);", span="228-228"];
m0_104 [cluster="System.IO.Path.GetTempPath()", file="DefaultStatusCodeHandlerFixture.cs", label=context, span=""];
m0_67 [cluster="Nancy.IO.RequestStream.FromStream(System.IO.Stream, long, bool)", file="DefaultStatusCodeHandlerFixture.cs", label="return FromStream(stream, expectedLength, DEFAULT_SWITCHOVER_THRESHOLD, disableStreamSwitching);", span="243-243"];
m0_68 [cluster="Nancy.IO.RequestStream.FromStream(System.IO.Stream, long, bool)", file="DefaultStatusCodeHandlerFixture.cs", label="Exit Nancy.IO.RequestStream.FromStream(System.IO.Stream, long, bool)", span="241-241"];
m0_71 [cluster="Nancy.IO.RequestStream.Read(byte[], int, int)", file="DefaultStatusCodeHandlerFixture.cs", label="Entry Nancy.IO.RequestStream.Read(byte[], int, int)", span="258-258"];
m0_72 [cluster="Nancy.IO.RequestStream.Read(byte[], int, int)", file="DefaultStatusCodeHandlerFixture.cs", label="return this.stream.Read(buffer, offset, count);", span="260-260"];
m0_73 [cluster="Nancy.IO.RequestStream.Read(byte[], int, int)", file="DefaultStatusCodeHandlerFixture.cs", label="Exit Nancy.IO.RequestStream.Read(byte[], int, int)", span="258-258"];
m0_61 [cluster="Nancy.IO.RequestStream.FromStream(System.IO.Stream, long)", file="DefaultStatusCodeHandlerFixture.cs", label="return FromStream(stream, expectedLength, DEFAULT_SWITCHOVER_THRESHOLD, false);", span="233-233"];
m0_55 [cluster="System.IO.Stream.Flush()", file="DefaultStatusCodeHandlerFixture.cs", label="Entry System.IO.Stream.Flush()", span="0-0"];
m0_161 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="DefaultStatusCodeHandlerFixture.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m0_32 [cluster="Nancy.Tests.Unit.ErrorHandling.DefaultStatusCodeHandlerFixture.Should_not_overwrite_response_contents()", file="DefaultStatusCodeHandlerFixture.cs", label="Entry Nancy.Tests.Unit.ErrorHandling.DefaultStatusCodeHandlerFixture.Should_not_overwrite_response_contents()", span="112-112"];
m0_74 [cluster="bool.ShouldBeTrue()", file="DefaultStatusCodeHandlerFixture.cs", label="Entry bool.ShouldBeTrue()", span="96-96"];
m0_97 [cluster="Nancy.Tests.Unit.ErrorHandling.DefaultStatusCodeHandlerFixture.Should_reset_negotiation_context()", file="DefaultStatusCodeHandlerFixture.cs", label="context.NegotiationContext = negotiationContext", span="206-206"];
m0_131 [cluster="Nancy.IO.RequestStream.MoveStreamContentsToFileStream()", file="DefaultStatusCodeHandlerFixture.cs", label="MoveStreamContentsInto(CreateTemporaryFileStream())", span="384-384"];
m0_132 [cluster="Nancy.IO.RequestStream.MoveStreamContentsToFileStream()", file="DefaultStatusCodeHandlerFixture.cs", label="Exit Nancy.IO.RequestStream.MoveStreamContentsToFileStream()", span="382-382"];
m0_125 [cluster="Nancy.IO.RequestStream.MoveStreamOutOfMemoryIfContentsLengthExceedThresholdAndSwitchingIsEnabled()", file="DefaultStatusCodeHandlerFixture.cs", label="(this.stream.Length > this.thresholdLength) && !this.disableStreamSwitching", span="368-368"];
m0_126 [cluster="Nancy.IO.RequestStream.MoveStreamOutOfMemoryIfContentsLengthExceedThresholdAndSwitchingIsEnabled()", file="DefaultStatusCodeHandlerFixture.cs", label="this.MoveStreamContentsToFileStream()", span="370-370"];
m0_127 [cluster="Nancy.IO.RequestStream.MoveStreamOutOfMemoryIfContentsLengthExceedThresholdAndSwitchingIsEnabled()", file="DefaultStatusCodeHandlerFixture.cs", label="Exit Nancy.IO.RequestStream.MoveStreamOutOfMemoryIfContentsLengthExceedThresholdAndSwitchingIsEnabled()", span="366-366"];
m0_154 [cluster="Nancy.IO.RequestStream.ThrowExceptionIfCtorParametersWereInvalid(System.IO.Stream, long, long)", file="DefaultStatusCodeHandlerFixture.cs", label="!stream.CanRead", span="425-425"];
m0_156 [cluster="Nancy.IO.RequestStream.ThrowExceptionIfCtorParametersWereInvalid(System.IO.Stream, long, long)", file="DefaultStatusCodeHandlerFixture.cs", label="expectedLength < 0", span="430-430"];
m0_157 [cluster="Nancy.IO.RequestStream.ThrowExceptionIfCtorParametersWereInvalid(System.IO.Stream, long, long)", file="DefaultStatusCodeHandlerFixture.cs", label="throw new ArgumentOutOfRangeException(''expectedLength'', expectedLength, ''The value of the expectedLength parameter cannot be less than zero.'');", span="432-432"];
m0_158 [cluster="Nancy.IO.RequestStream.ThrowExceptionIfCtorParametersWereInvalid(System.IO.Stream, long, long)", file="DefaultStatusCodeHandlerFixture.cs", label="thresholdLength < 0", span="435-435"];
m0_159 [cluster="Nancy.IO.RequestStream.ThrowExceptionIfCtorParametersWereInvalid(System.IO.Stream, long, long)", file="DefaultStatusCodeHandlerFixture.cs", label="throw new ArgumentOutOfRangeException(''thresholdLength'', thresholdLength, ''The value of the threshHoldLength parameter cannot be less than zero.'');", span="437-437"];
m0_155 [cluster="Nancy.IO.RequestStream.ThrowExceptionIfCtorParametersWereInvalid(System.IO.Stream, long, long)", file="DefaultStatusCodeHandlerFixture.cs", label="throw new InvalidOperationException(''The stream must support reading.'');", span="427-427"];
m0_160 [cluster="Nancy.IO.RequestStream.ThrowExceptionIfCtorParametersWereInvalid(System.IO.Stream, long, long)", file="DefaultStatusCodeHandlerFixture.cs", label="Exit Nancy.IO.RequestStream.ThrowExceptionIfCtorParametersWereInvalid(System.IO.Stream, long, long)", span="423-423"];
m0_124 [cluster="Nancy.IO.RequestStream.MoveStreamContentsToMemoryStream()", file="DefaultStatusCodeHandlerFixture.cs", label="Entry Nancy.IO.RequestStream.MoveStreamContentsToMemoryStream()", span="387-387"];
m0_134 [cluster="Nancy.IO.RequestStream.MoveStreamContentsToMemoryStream()", file="DefaultStatusCodeHandlerFixture.cs", label="MoveStreamContentsInto(new MemoryStream())", span="389-389"];
m0_135 [cluster="Nancy.IO.RequestStream.MoveStreamContentsToMemoryStream()", file="DefaultStatusCodeHandlerFixture.cs", label="Exit Nancy.IO.RequestStream.MoveStreamContentsToMemoryStream()", span="387-387"];
m0_114 [cluster="Nancy.IO.RequestStream.DeleteTemporaryFile(string)", file="DefaultStatusCodeHandlerFixture.cs", label="!string.IsNullOrEmpty(fileName) || !File.Exists(fileName)", span="344-344"];
m0_116 [cluster="Nancy.IO.RequestStream.DeleteTemporaryFile(string)", file="DefaultStatusCodeHandlerFixture.cs", label="File.Delete(fileName)", span="351-351"];
m0_115 [cluster="Nancy.IO.RequestStream.DeleteTemporaryFile(string)", file="DefaultStatusCodeHandlerFixture.cs", label="return;", span="346-346"];
m0_117 [cluster="Nancy.IO.RequestStream.DeleteTemporaryFile(string)", file="DefaultStatusCodeHandlerFixture.cs", label="Exit Nancy.IO.RequestStream.DeleteTemporaryFile(string)", span="342-342"];
m0_33 [cluster="Nancy.Tests.Unit.ErrorHandling.DefaultStatusCodeHandlerFixture.Should_not_overwrite_response_contents()", file="DefaultStatusCodeHandlerFixture.cs", label="var context = new NancyContext()", span="115-115"];
m0_34 [cluster="Nancy.Tests.Unit.ErrorHandling.DefaultStatusCodeHandlerFixture.Should_not_overwrite_response_contents()", file="DefaultStatusCodeHandlerFixture.cs", label="Action<Stream> contents = stream => { }", span="116-116"];
m0_35 [cluster="Nancy.Tests.Unit.ErrorHandling.DefaultStatusCodeHandlerFixture.Should_not_overwrite_response_contents()", file="DefaultStatusCodeHandlerFixture.cs", label="context.Response = new Response() { StatusCode = HttpStatusCode.NotFound, Contents = contents }", span="117-117"];
m0_36 [cluster="Nancy.Tests.Unit.ErrorHandling.DefaultStatusCodeHandlerFixture.Should_not_overwrite_response_contents()", file="DefaultStatusCodeHandlerFixture.cs", label="this.statusCodeHandler.Handle(HttpStatusCode.NotFound, context)", span="120-120"];
m0_37 [cluster="Nancy.Tests.Unit.ErrorHandling.DefaultStatusCodeHandlerFixture.Should_not_overwrite_response_contents()", file="DefaultStatusCodeHandlerFixture.cs", label="context.Response.Contents.ShouldEqual(contents)", span="123-123"];
m0_38 [cluster="Nancy.Tests.Unit.ErrorHandling.DefaultStatusCodeHandlerFixture.Should_not_overwrite_response_contents()", file="DefaultStatusCodeHandlerFixture.cs", label="Exit Nancy.Tests.Unit.ErrorHandling.DefaultStatusCodeHandlerFixture.Should_not_overwrite_response_contents()", span="112-112"];
m0_101 [cluster="Nancy.IO.RequestStream.CreateTemporaryFileStream()", file="DefaultStatusCodeHandlerFixture.cs", label="return new FileStream(filePath, FileMode.Create, FileAccess.ReadWrite, FileShare.None, 8192, true);", span="325-325"];
m0_96 [cluster="System.IO.Stream.Write(byte[], int, int)", file="DefaultStatusCodeHandlerFixture.cs", label="Entry System.IO.Stream.Write(byte[], int, int)", span="0-0"];
m0_98 [cluster="Nancy.IO.RequestStream.CreateTemporaryFileStream()", file="DefaultStatusCodeHandlerFixture.cs", label="Entry Nancy.IO.RequestStream.CreateTemporaryFileStream()", span="320-320"];
m0_99 [cluster="Nancy.IO.RequestStream.CreateTemporaryFileStream()", color=red, community=0, file="DefaultStatusCodeHandlerFixture.cs", label="5: var fileName = Path.GetTempFileName()", span="322-322"];
m0_100 [cluster="Nancy.IO.RequestStream.CreateTemporaryFileStream()", file="DefaultStatusCodeHandlerFixture.cs", label="var filePath = Path.Combine(Path.GetTempPath(), fileName)", span="323-323"];
m0_84 [cluster="Nancy.Tests.Unit.ErrorHandling.DefaultStatusCodeHandlerFixture.Should_render_html_response_from_static_resources()", file="DefaultStatusCodeHandlerFixture.cs", label="Entry Nancy.Tests.Unit.ErrorHandling.DefaultStatusCodeHandlerFixture.Should_render_html_response_from_static_resources()", span="187-187"];
m0_85 [cluster="Nancy.Tests.Unit.ErrorHandling.DefaultStatusCodeHandlerFixture.Should_render_html_response_from_static_resources()", file="DefaultStatusCodeHandlerFixture.cs", label="var context = new NancyContext()", span="190-190"];
m0_86 [cluster="Nancy.Tests.Unit.ErrorHandling.DefaultStatusCodeHandlerFixture.Should_render_html_response_from_static_resources()", file="DefaultStatusCodeHandlerFixture.cs", label="A.CallTo(() => this.responseNegotiator.NegotiateResponse(A<DefaultStatusCodeHandler.DefaultStatusCodeHandlerResult>._, context)).Throws(new ViewNotFoundException(string.Empty))", span="191-191"];
m0_118 [cluster="string.IsNullOrEmpty(string)", file="DefaultStatusCodeHandlerFixture.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m0_21 [cluster="Nancy.NancyContext.NancyContext()", file="DefaultStatusCodeHandlerFixture.cs", label="Entry Nancy.NancyContext.NancyContext()", span="26-26"];
m0_107 [cluster="Nancy.IO.RequestStream.CreateDefaultMemoryStream(long)", file="DefaultStatusCodeHandlerFixture.cs", label="this.isSafeToDisposeStream = true", span="330-330"];
m0_108 [cluster="Nancy.IO.RequestStream.CreateDefaultMemoryStream(long)", file="DefaultStatusCodeHandlerFixture.cs", label="this.disableStreamSwitching || expectedLength < this.thresholdLength", span="332-332"];
m0_110 [cluster="Nancy.IO.RequestStream.CreateDefaultMemoryStream(long)", file="DefaultStatusCodeHandlerFixture.cs", label="this.disableStreamSwitching = true", span="337-337"];
m0_109 [cluster="Nancy.IO.RequestStream.CreateDefaultMemoryStream(long)", file="DefaultStatusCodeHandlerFixture.cs", label="return new MemoryStream((int)expectedLength);", span="334-334"];
m0_111 [cluster="Nancy.IO.RequestStream.CreateDefaultMemoryStream(long)", file="DefaultStatusCodeHandlerFixture.cs", label="return CreateTemporaryFileStream();", span="339-339"];
m0_112 [cluster="Nancy.IO.RequestStream.CreateDefaultMemoryStream(long)", file="DefaultStatusCodeHandlerFixture.cs", label="Exit Nancy.IO.RequestStream.CreateDefaultMemoryStream(long)", span="328-328"];
m0_102 [cluster="Nancy.IO.RequestStream.CreateTemporaryFileStream()", file="DefaultStatusCodeHandlerFixture.cs", label="Nancy.Tests.Unit.ErrorHandling.DefaultStatusCodeHandlerFixture", span=""];
m0_120 [cluster="System.IO.File.Delete(string)", file="DefaultStatusCodeHandlerFixture.cs", label="Entry System.IO.File.Delete(string)", span="0-0"];
m0_163 [file="DefaultStatusCodeHandlerFixture.cs", label="Nancy.IO.RequestStream", span=""];
m1_57 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_unwrap_dynamicdictionaryvalue_when_model_is_dynamicdictionary()", file="DynamicDropFixture.cs", label="Entry Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_unwrap_dynamicdictionaryvalue_when_model_is_dynamicdictionary()", span="130-130"];
m1_58 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_unwrap_dynamicdictionaryvalue_when_model_is_dynamicdictionary()", file="DynamicDropFixture.cs", label="var model = new DynamicDictionary()", span="133-133"];
m1_59 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_unwrap_dynamicdictionaryvalue_when_model_is_dynamicdictionary()", file="DynamicDropFixture.cs", label="model[''Name''] = ''Nancy''", span="134-134"];
m1_60 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_unwrap_dynamicdictionaryvalue_when_model_is_dynamicdictionary()", file="DynamicDropFixture.cs", label="var drop = new DynamicDrop(model)", span="136-136"];
m1_61 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_unwrap_dynamicdictionaryvalue_when_model_is_dynamicdictionary()", file="DynamicDropFixture.cs", label="var result = drop.BeforeMethod(''Name'')", span="139-139"];
m1_62 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_unwrap_dynamicdictionaryvalue_when_model_is_dynamicdictionary()", file="DynamicDropFixture.cs", label="result.ShouldBeOfType<string>()", span="142-142"];
m1_63 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_unwrap_dynamicdictionaryvalue_when_model_is_dynamicdictionary()", file="DynamicDropFixture.cs", label="Exit Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_unwrap_dynamicdictionaryvalue_when_model_is_dynamicdictionary()", span="130-130"];
m1_8 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_null_when_property_name_is_empty()", file="DynamicDropFixture.cs", label="Entry Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_null_when_property_name_is_empty()", span="24-24"];
m1_9 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_null_when_property_name_is_empty()", file="DynamicDropFixture.cs", label="var drop = new DynamicDrop(new object())", span="27-27"];
m1_10 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_null_when_property_name_is_empty()", file="DynamicDropFixture.cs", label="var result = drop.BeforeMethod(string.Empty)", span="30-30"];
m1_11 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_null_when_property_name_is_empty()", file="DynamicDropFixture.cs", label="result.ShouldBeNull()", span="33-33"];
m1_12 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_null_when_property_name_is_empty()", file="DynamicDropFixture.cs", label="Exit Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_null_when_property_name_is_empty()", span="24-24"];
m1_0 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_null_when_model_is_null()", file="DynamicDropFixture.cs", label="Entry Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_null_when_model_is_null()", span="11-11"];
m1_1 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_null_when_model_is_null()", file="DynamicDropFixture.cs", label="var drop = new DynamicDrop(null)", span="14-14"];
m1_2 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_null_when_model_is_null()", file="DynamicDropFixture.cs", label="var result = drop.BeforeMethod(string.Empty)", span="17-17"];
m1_3 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_null_when_model_is_null()", file="DynamicDropFixture.cs", label="result.ShouldBeNull()", span="20-20"];
m1_4 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_null_when_model_is_null()", file="DynamicDropFixture.cs", label="Exit Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_null_when_model_is_null()", span="11-11"];
m1_7 [cluster="object.ShouldBeNull()", file="DynamicDropFixture.cs", label="Entry object.ShouldBeNull()", span="146-146"];
m1_6 [cluster="Nancy.ViewEngines.DotLiquid.DynamicDrop.BeforeMethod(string)", file="DynamicDropFixture.cs", label="Entry Nancy.ViewEngines.DotLiquid.DynamicDrop.BeforeMethod(string)", span="21-21"];
m1_27 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_model_value_when_property_name_is_valid_and_model_is_expandoobject()", file="DynamicDropFixture.cs", label="Entry Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_model_value_when_property_name_is_valid_and_model_is_expandoobject()", span="66-66"];
m1_28 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_model_value_when_property_name_is_valid_and_model_is_expandoobject()", file="DynamicDropFixture.cs", label="dynamic model = new ExpandoObject()", span="69-69"];
m1_29 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_model_value_when_property_name_is_valid_and_model_is_expandoobject()", file="DynamicDropFixture.cs", label="model.Name = ''Nancy''", span="70-70"];
m1_30 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_model_value_when_property_name_is_valid_and_model_is_expandoobject()", file="DynamicDropFixture.cs", label="var drop = new DynamicDrop(model)", span="72-72"];
m1_31 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_model_value_when_property_name_is_valid_and_model_is_expandoobject()", file="DynamicDropFixture.cs", label="var result = drop.BeforeMethod(''Name'')", span="75-75"];
m1_32 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_model_value_when_property_name_is_valid_and_model_is_expandoobject()", file="DynamicDropFixture.cs", label="result.ShouldEqual(''Nancy'')", span="78-78"];
m1_33 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_model_value_when_property_name_is_valid_and_model_is_expandoobject()", file="DynamicDropFixture.cs", label="Exit Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_model_value_when_property_name_is_valid_and_model_is_expandoobject()", span="66-66"];
m1_13 [cluster="object.Object()", file="DynamicDropFixture.cs", label="Entry object.Object()", span="0-0"];
m1_26 [cluster="System.Dynamic.ExpandoObject.ExpandoObject()", file="DynamicDropFixture.cs", label="Entry System.Dynamic.ExpandoObject.ExpandoObject()", span="0-0"];
m1_42 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_null_when_called_with_invalid_property_name_and_model_is_dynamicdictionary()", file="DynamicDropFixture.cs", label="Entry Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_null_when_called_with_invalid_property_name_and_model_is_dynamicdictionary()", span="98-98"];
m1_43 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_null_when_called_with_invalid_property_name_and_model_is_dynamicdictionary()", file="DynamicDropFixture.cs", label="var model = new DynamicDictionary()", span="101-101"];
m1_44 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_null_when_called_with_invalid_property_name_and_model_is_dynamicdictionary()", file="DynamicDropFixture.cs", label="model[''Name''] = ''Nancy''", span="102-102"];
m1_45 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_null_when_called_with_invalid_property_name_and_model_is_dynamicdictionary()", file="DynamicDropFixture.cs", label="var drop = new DynamicDrop(model)", span="104-104"];
m1_46 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_null_when_called_with_invalid_property_name_and_model_is_dynamicdictionary()", file="DynamicDropFixture.cs", label="var result = drop.BeforeMethod(''age'')", span="107-107"];
m1_47 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_null_when_called_with_invalid_property_name_and_model_is_dynamicdictionary()", file="DynamicDropFixture.cs", label="result.ShouldBeNull()", span="110-110"];
m1_48 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_null_when_called_with_invalid_property_name_and_model_is_dynamicdictionary()", file="DynamicDropFixture.cs", label="Exit Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_null_when_called_with_invalid_property_name_and_model_is_dynamicdictionary()", span="98-98"];
m1_19 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_null_when_called_with_invalid_property_name_and_model_is_expandoobject()", file="DynamicDropFixture.cs", label="Entry Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_null_when_called_with_invalid_property_name_and_model_is_expandoobject()", span="50-50"];
m1_20 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_null_when_called_with_invalid_property_name_and_model_is_expandoobject()", file="DynamicDropFixture.cs", label="dynamic model = new ExpandoObject()", span="53-53"];
m1_21 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_null_when_called_with_invalid_property_name_and_model_is_expandoobject()", file="DynamicDropFixture.cs", label="model.Name = ''Nancy''", span="54-54"];
m1_22 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_null_when_called_with_invalid_property_name_and_model_is_expandoobject()", file="DynamicDropFixture.cs", label="var drop = new DynamicDrop(model)", span="56-56"];
m1_23 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_null_when_called_with_invalid_property_name_and_model_is_expandoobject()", file="DynamicDropFixture.cs", label="var result = drop.BeforeMethod(''age'')", span="59-59"];
m1_24 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_null_when_called_with_invalid_property_name_and_model_is_expandoobject()", file="DynamicDropFixture.cs", label="result.ShouldBeNull()", span="62-62"];
m1_25 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_null_when_called_with_invalid_property_name_and_model_is_expandoobject()", file="DynamicDropFixture.cs", label="Exit Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_null_when_called_with_invalid_property_name_and_model_is_expandoobject()", span="50-50"];
m1_50 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_model_value_when_property_name_is_valid_and_model_is_dynamicdictionary()", file="DynamicDropFixture.cs", label="Entry Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_model_value_when_property_name_is_valid_and_model_is_dynamicdictionary()", span="114-114"];
m1_51 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_model_value_when_property_name_is_valid_and_model_is_dynamicdictionary()", file="DynamicDropFixture.cs", label="var model = new DynamicDictionary()", span="117-117"];
m1_52 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_model_value_when_property_name_is_valid_and_model_is_dynamicdictionary()", file="DynamicDropFixture.cs", label="model[''Name''] = ''Nancy''", span="118-118"];
m1_53 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_model_value_when_property_name_is_valid_and_model_is_dynamicdictionary()", file="DynamicDropFixture.cs", label="var drop = new DynamicDrop(model)", span="120-120"];
m1_54 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_model_value_when_property_name_is_valid_and_model_is_dynamicdictionary()", file="DynamicDropFixture.cs", label="var result = drop.BeforeMethod(''Name'')", span="123-123"];
m1_55 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_model_value_when_property_name_is_valid_and_model_is_dynamicdictionary()", file="DynamicDropFixture.cs", label="result.ShouldEqual(''Nancy'')", span="126-126"];
m1_56 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_model_value_when_property_name_is_valid_and_model_is_dynamicdictionary()", file="DynamicDropFixture.cs", label="Exit Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_model_value_when_property_name_is_valid_and_model_is_dynamicdictionary()", span="114-114"];
m1_14 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_null_when_property_name_is_null()", file="DynamicDropFixture.cs", label="Entry Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_null_when_property_name_is_null()", span="37-37"];
m1_15 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_null_when_property_name_is_null()", file="DynamicDropFixture.cs", label="var drop = new DynamicDrop(new object())", span="40-40"];
m1_16 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_null_when_property_name_is_null()", file="DynamicDropFixture.cs", label="var result = drop.BeforeMethod(null)", span="43-43"];
m1_17 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_null_when_property_name_is_null()", file="DynamicDropFixture.cs", label="result.ShouldBeNull()", span="46-46"];
m1_18 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_null_when_property_name_is_null()", file="DynamicDropFixture.cs", label="Exit Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_null_when_property_name_is_null()", span="37-37"];
m1_49 [cluster="Nancy.DynamicDictionary.DynamicDictionary()", file="DynamicDropFixture.cs", label="Entry Nancy.DynamicDictionary.DynamicDictionary()", span="24-24"];
m1_71 [cluster="Nancy.ViewEngines.DotLiquid.Tests.FakeModel.FakeModel()", file="DynamicDropFixture.cs", label="Entry Nancy.ViewEngines.DotLiquid.Tests.FakeModel.FakeModel()", span="2-2"];
m1_72 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_model_value_when_property_name_is_valid_and_model_is_object()", file="DynamicDropFixture.cs", label="Entry Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_model_value_when_property_name_is_valid_and_model_is_object()", span="159-159"];
m1_73 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_model_value_when_property_name_is_valid_and_model_is_object()", file="DynamicDropFixture.cs", label="var model = new FakeModel { Name = ''Nancy'' }", span="162-162"];
m1_74 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_model_value_when_property_name_is_valid_and_model_is_object()", file="DynamicDropFixture.cs", label="var drop = new DynamicDrop(model)", span="163-163"];
m1_75 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_model_value_when_property_name_is_valid_and_model_is_object()", file="DynamicDropFixture.cs", label="var result = drop.BeforeMethod(''Name'')", span="166-166"];
m1_76 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_model_value_when_property_name_is_valid_and_model_is_object()", file="DynamicDropFixture.cs", label="result.ShouldEqual(''Nancy'')", span="169-169"];
m1_77 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_model_value_when_property_name_is_valid_and_model_is_object()", file="DynamicDropFixture.cs", label="Exit Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_model_value_when_property_name_is_valid_and_model_is_object()", span="159-159"];
m1_65 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_null_when_called_with_invalid_property_name_and_model_is_object()", file="DynamicDropFixture.cs", label="Entry Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_null_when_called_with_invalid_property_name_and_model_is_object()", span="146-146"];
m1_66 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_null_when_called_with_invalid_property_name_and_model_is_object()", file="DynamicDropFixture.cs", label="var model = new FakeModel { Name = ''Nancy'' }", span="149-149"];
m1_67 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_null_when_called_with_invalid_property_name_and_model_is_object()", file="DynamicDropFixture.cs", label="var drop = new DynamicDrop(model)", span="150-150"];
m1_68 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_null_when_called_with_invalid_property_name_and_model_is_object()", file="DynamicDropFixture.cs", label="var result = drop.BeforeMethod(''age'')", span="153-153"];
m1_69 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_null_when_called_with_invalid_property_name_and_model_is_object()", file="DynamicDropFixture.cs", label="result.ShouldBeNull()", span="156-156"];
m1_70 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_null_when_called_with_invalid_property_name_and_model_is_object()", file="DynamicDropFixture.cs", label="Exit Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_null_when_called_with_invalid_property_name_and_model_is_object()", span="146-146"];
m1_5 [cluster="Nancy.ViewEngines.DotLiquid.DynamicDrop.DynamicDrop(dynamic)", file="DynamicDropFixture.cs", label="Entry Nancy.ViewEngines.DotLiquid.DynamicDrop.DynamicDrop(dynamic)", span="16-16"];
m1_35 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_model_value_when_property_name_is_wrong_case_and_model_is_expandoobject()", file="DynamicDropFixture.cs", label="Entry Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_model_value_when_property_name_is_wrong_case_and_model_is_expandoobject()", span="82-82"];
m1_36 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_model_value_when_property_name_is_wrong_case_and_model_is_expandoobject()", file="DynamicDropFixture.cs", label="dynamic model = new ExpandoObject()", span="85-85"];
m1_37 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_model_value_when_property_name_is_wrong_case_and_model_is_expandoobject()", file="DynamicDropFixture.cs", label="model.Name = ''Nancy''", span="86-86"];
m1_38 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_model_value_when_property_name_is_wrong_case_and_model_is_expandoobject()", file="DynamicDropFixture.cs", label="var drop = new DynamicDrop(model)", span="88-88"];
m1_39 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_model_value_when_property_name_is_wrong_case_and_model_is_expandoobject()", file="DynamicDropFixture.cs", label="var result = drop.BeforeMethod(''name'')", span="91-91"];
m1_40 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_model_value_when_property_name_is_wrong_case_and_model_is_expandoobject()", file="DynamicDropFixture.cs", label="result.ShouldEqual(''Nancy'')", span="94-94"];
m1_41 [cluster="Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_model_value_when_property_name_is_wrong_case_and_model_is_expandoobject()", file="DynamicDropFixture.cs", label="Exit Nancy.ViewEngines.DotLiquid.Tests.DynamicDropFixture.Should_return_model_value_when_property_name_is_wrong_case_and_model_is_expandoobject()", span="82-82"];
m1_64 [cluster="object.ShouldBeOfType<T>()", file="DynamicDropFixture.cs", label="Entry object.ShouldBeOfType<T>()", span="161-161"];
m4_18 [cluster="Nancy.ViewEngines.DotLiquid.Tests.Functional.PartialRenderingFixture.Should_render_view_with_singlequoted_partial()", file="PartialRenderingFixture.cs", label="Entry Nancy.ViewEngines.DotLiquid.Tests.Functional.PartialRenderingFixture.Should_render_view_with_singlequoted_partial()", span="34-34"];
m4_19 [cluster="Nancy.ViewEngines.DotLiquid.Tests.Functional.PartialRenderingFixture.Should_render_view_with_singlequoted_partial()", file="PartialRenderingFixture.cs", label="var result = await this.browser.Get(''/singlequotedpartial'')", span="38-38"];
m4_20 [cluster="Nancy.ViewEngines.DotLiquid.Tests.Functional.PartialRenderingFixture.Should_render_view_with_singlequoted_partial()", color=red, community=0, file="PartialRenderingFixture.cs", label="3: Assert.Equal(result.StatusCode, HttpStatusCode.OK)", span="41-41"];
m4_21 [cluster="Nancy.ViewEngines.DotLiquid.Tests.Functional.PartialRenderingFixture.Should_render_view_with_singlequoted_partial()", color=red, community=0, file="PartialRenderingFixture.cs", label="7: Assert.Equal(result.Body.AsString(), ''This content is from the partial'')", span="42-42"];
m4_22 [cluster="Nancy.ViewEngines.DotLiquid.Tests.Functional.PartialRenderingFixture.Should_render_view_with_singlequoted_partial()", file="PartialRenderingFixture.cs", label="Exit Nancy.ViewEngines.DotLiquid.Tests.Functional.PartialRenderingFixture.Should_render_view_with_singlequoted_partial()", span="34-34"];
m4_0 [cluster="Nancy.ViewEngines.DotLiquid.Tests.Functional.PartialRenderingFixture.PartialRenderingFixture()", file="PartialRenderingFixture.cs", label="Entry Nancy.ViewEngines.DotLiquid.Tests.Functional.PartialRenderingFixture.PartialRenderingFixture()", span="11-11"];
m4_1 [cluster="Nancy.ViewEngines.DotLiquid.Tests.Functional.PartialRenderingFixture.PartialRenderingFixture()", file="PartialRenderingFixture.cs", label="var bootstrapper = new ConfigurableBootstrapper(with => {\r\n                with.Module<PartialRenderingModule>();\r\n            })", span="13-15"];
m4_2 [cluster="Nancy.ViewEngines.DotLiquid.Tests.Functional.PartialRenderingFixture.PartialRenderingFixture()", file="PartialRenderingFixture.cs", label="this.browser =\r\n                new Browser(bootstrapper)", span="17-18"];
m4_3 [cluster="Nancy.ViewEngines.DotLiquid.Tests.Functional.PartialRenderingFixture.PartialRenderingFixture()", file="PartialRenderingFixture.cs", label="Exit Nancy.ViewEngines.DotLiquid.Tests.Functional.PartialRenderingFixture.PartialRenderingFixture()", span="11-11"];
m4_10 [cluster="Nancy.ViewEngines.DotLiquid.Tests.Functional.PartialRenderingFixture.Should_render_view_with_unquoted_partial()", file="PartialRenderingFixture.cs", label="Entry Nancy.ViewEngines.DotLiquid.Tests.Functional.PartialRenderingFixture.Should_render_view_with_unquoted_partial()", span="22-22"];
m4_11 [cluster="Nancy.ViewEngines.DotLiquid.Tests.Functional.PartialRenderingFixture.Should_render_view_with_unquoted_partial()", file="PartialRenderingFixture.cs", label="var result = await this.browser.Get(''/unquotedpartial'')", span="26-26"];
m4_12 [cluster="Nancy.ViewEngines.DotLiquid.Tests.Functional.PartialRenderingFixture.Should_render_view_with_unquoted_partial()", color=red, community=0, file="PartialRenderingFixture.cs", label="3: Assert.Equal(result.StatusCode, HttpStatusCode.OK)", span="29-29"];
m4_13 [cluster="Nancy.ViewEngines.DotLiquid.Tests.Functional.PartialRenderingFixture.Should_render_view_with_unquoted_partial()", color=red, community=0, file="PartialRenderingFixture.cs", label="7: Assert.Equal(result.Body.AsString(), ''This content is from the partial'')", span="30-30"];
m4_14 [cluster="Nancy.ViewEngines.DotLiquid.Tests.Functional.PartialRenderingFixture.Should_render_view_with_unquoted_partial()", file="PartialRenderingFixture.cs", label="Exit Nancy.ViewEngines.DotLiquid.Tests.Functional.PartialRenderingFixture.Should_render_view_with_unquoted_partial()", span="22-22"];
m4_9 [cluster="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.Module<T>()", file="PartialRenderingFixture.cs", label="Entry Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.Module<T>()", span="983-983"];
m4_15 [cluster="Nancy.Testing.Browser.Get(string, System.Action<Nancy.Testing.BrowserContext>)", file="PartialRenderingFixture.cs", label="Entry Nancy.Testing.Browser.Get(string, System.Action<Nancy.Testing.BrowserContext>)", span="76-76"];
m4_17 [cluster="Nancy.Testing.BrowserResponseBodyWrapper.AsString()", file="PartialRenderingFixture.cs", label="Entry Nancy.Testing.BrowserResponseBodyWrapper.AsString()", span="30-30"];
m4_4 [cluster="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapper(System.Action<Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator>)", file="PartialRenderingFixture.cs", label="Entry Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapper(System.Action<Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator>)", span="64-64"];
m4_16 [cluster="Unk.Equal", file="PartialRenderingFixture.cs", label="Entry Unk.Equal", span=""];
m4_28 [cluster="Nancy.ViewEngines.DotLiquid.Tests.Functional.PartialRenderingModule.PartialRenderingModule()", file="PartialRenderingFixture.cs", label="Entry Nancy.ViewEngines.DotLiquid.Tests.Functional.PartialRenderingModule.PartialRenderingModule()", span="60-60"];
m4_29 [cluster="Nancy.ViewEngines.DotLiquid.Tests.Functional.PartialRenderingModule.PartialRenderingModule()", file="PartialRenderingFixture.cs", label="Get(''/unquotedpartial'', args => View[''unquotedpartial''])", span="62-62"];
m4_30 [cluster="Nancy.ViewEngines.DotLiquid.Tests.Functional.PartialRenderingModule.PartialRenderingModule()", file="PartialRenderingFixture.cs", label="Get(''/doublequotedpartial'', args => View[''doublequotedpartial''])", span="64-64"];
m4_31 [cluster="Nancy.ViewEngines.DotLiquid.Tests.Functional.PartialRenderingModule.PartialRenderingModule()", file="PartialRenderingFixture.cs", label="Get(''/singlequotedpartial'', args => View[''singlequotedpartial''])", span="66-66"];
m4_32 [cluster="Nancy.ViewEngines.DotLiquid.Tests.Functional.PartialRenderingModule.PartialRenderingModule()", file="PartialRenderingFixture.cs", label="Exit Nancy.ViewEngines.DotLiquid.Tests.Functional.PartialRenderingModule.PartialRenderingModule()", span="60-60"];
m4_33 [cluster="Nancy.NancyModule.Get<T>(string, System.Func<dynamic, T>, System.Func<Nancy.NancyContext, bool>, string)", file="PartialRenderingFixture.cs", label="Entry Nancy.NancyModule.Get<T>(string, System.Func<dynamic, T>, System.Func<Nancy.NancyContext, bool>, string)", span="154-154"];
m4_40 [cluster="lambda expression", file="PartialRenderingFixture.cs", label="Entry lambda expression", span="66-66"];
m4_7 [cluster="lambda expression", file="PartialRenderingFixture.cs", label="with.Module<PartialRenderingModule>()", span="14-14"];
m4_6 [cluster="lambda expression", file="PartialRenderingFixture.cs", label="Entry lambda expression", span="13-15"];
m4_8 [cluster="lambda expression", file="PartialRenderingFixture.cs", label="Exit lambda expression", span="13-15"];
m4_34 [cluster="lambda expression", file="PartialRenderingFixture.cs", label="Entry lambda expression", span="62-62"];
m4_37 [cluster="lambda expression", file="PartialRenderingFixture.cs", label="Entry lambda expression", span="64-64"];
m4_35 [cluster="lambda expression", file="PartialRenderingFixture.cs", label="View[''unquotedpartial'']", span="62-62"];
m4_36 [cluster="lambda expression", file="PartialRenderingFixture.cs", label="Exit lambda expression", span="62-62"];
m4_38 [cluster="lambda expression", file="PartialRenderingFixture.cs", label="View[''doublequotedpartial'']", span="64-64"];
m4_39 [cluster="lambda expression", file="PartialRenderingFixture.cs", label="Exit lambda expression", span="64-64"];
m4_41 [cluster="lambda expression", file="PartialRenderingFixture.cs", label="View[''singlequotedpartial'']", span="66-66"];
m4_42 [cluster="lambda expression", file="PartialRenderingFixture.cs", label="Exit lambda expression", span="66-66"];
m4_23 [cluster="Nancy.ViewEngines.DotLiquid.Tests.Functional.PartialRenderingFixture.Should_render_view_with_doublequoted_partial()", file="PartialRenderingFixture.cs", label="Entry Nancy.ViewEngines.DotLiquid.Tests.Functional.PartialRenderingFixture.Should_render_view_with_doublequoted_partial()", span="46-46"];
m4_24 [cluster="Nancy.ViewEngines.DotLiquid.Tests.Functional.PartialRenderingFixture.Should_render_view_with_doublequoted_partial()", file="PartialRenderingFixture.cs", label="var result = await this.browser.Get(''/doublequotedpartial'')", span="50-50"];
m4_25 [cluster="Nancy.ViewEngines.DotLiquid.Tests.Functional.PartialRenderingFixture.Should_render_view_with_doublequoted_partial()", color=red, community=0, file="PartialRenderingFixture.cs", label="1: Assert.Equal(result.StatusCode, HttpStatusCode.OK)", span="53-53"];
m4_26 [cluster="Nancy.ViewEngines.DotLiquid.Tests.Functional.PartialRenderingFixture.Should_render_view_with_doublequoted_partial()", color=red, community=0, file="PartialRenderingFixture.cs", label="6: Assert.Equal(result.Body.AsString(), ''This content is from the partial'')", span="54-54"];
m4_27 [cluster="Nancy.ViewEngines.DotLiquid.Tests.Functional.PartialRenderingFixture.Should_render_view_with_doublequoted_partial()", file="PartialRenderingFixture.cs", label="Exit Nancy.ViewEngines.DotLiquid.Tests.Functional.PartialRenderingFixture.Should_render_view_with_doublequoted_partial()", span="46-46"];
m4_5 [cluster="Nancy.Testing.Browser.Browser(Nancy.Bootstrapper.INancyBootstrapper, System.Action<Nancy.Testing.BrowserContext>)", file="PartialRenderingFixture.cs", label="Entry Nancy.Testing.Browser.Browser(Nancy.Bootstrapper.INancyBootstrapper, System.Action<Nancy.Testing.BrowserContext>)", span="40-40"];
m4_43 [file="PartialRenderingFixture.cs", label="Nancy.ViewEngines.DotLiquid.Tests.Functional.PartialRenderingFixture", span=""];
m4_44 [file="PartialRenderingFixture.cs", label="Nancy.ViewEngines.DotLiquid.Tests.Functional.PartialRenderingModule", span=""];
m5_70 [cluster="System.Collections.Generic.List<T>.List()", file="RouteConstraintTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m5_71 [cluster="Nancy.Diagnostics.Modules.InteractiveModule.ConvertArgument(string, System.Type)", file="RouteConstraintTests.cs", label="Entry Nancy.Diagnostics.Modules.InteractiveModule.ConvertArgument(string, System.Type)", span="131-131"];
m5_74 [cluster="Nancy.Diagnostics.Modules.InteractiveModule.ConvertArgument(string, System.Type)", file="RouteConstraintTests.cs", label="var converter = \r\n                TypeDescriptor.GetConverter(destinationType)", span="133-134"];
m5_77 [cluster="Nancy.Diagnostics.Modules.InteractiveModule.ConvertArgument(string, System.Type)", file="RouteConstraintTests.cs", label="return converter.ConvertFrom(value);", span="143-143"];
m5_76 [cluster="Nancy.Diagnostics.Modules.InteractiveModule.ConvertArgument(string, System.Type)", file="RouteConstraintTests.cs", label="return null;", span="138-138"];
m5_79 [cluster="Nancy.Diagnostics.Modules.InteractiveModule.ConvertArgument(string, System.Type)", file="RouteConstraintTests.cs", label="return null;", span="147-147"];
m5_75 [cluster="Nancy.Diagnostics.Modules.InteractiveModule.ConvertArgument(string, System.Type)", file="RouteConstraintTests.cs", label="converter == null || !converter.CanConvertFrom(typeof(string))", span="136-136"];
m5_78 [cluster="Nancy.Diagnostics.Modules.InteractiveModule.ConvertArgument(string, System.Type)", file="RouteConstraintTests.cs", label=FormatException, span="145-145"];
m5_80 [cluster="Nancy.Diagnostics.Modules.InteractiveModule.ConvertArgument(string, System.Type)", file="RouteConstraintTests.cs", label="Exit Nancy.Diagnostics.Modules.InteractiveModule.ConvertArgument(string, System.Type)", span="131-131"];
m5_21 [cluster="object.GetType()", file="RouteConstraintTests.cs", label="Entry object.GetType()", span="0-0"];
m5_17 [cluster="Unk.AsJson", file="RouteConstraintTests.cs", label="Entry Unk.AsJson", span=""];
m5_31 [cluster="Nancy.Helpers.HttpUtility.UrlDecode(string)", file="RouteConstraintTests.cs", label="Entry Nancy.Helpers.HttpUtility.UrlDecode(string)", span="108-108"];
m5_36 [cluster="System.Type.ToString()", file="RouteConstraintTests.cs", label="Entry System.Type.ToString()", span="0-0"];
m5_64 [cluster="Nancy.Diagnostics.IInteractiveDiagnostics.GetTemplate(Nancy.Diagnostics.InteractiveDiagnosticMethod)", file="RouteConstraintTests.cs", label="Entry Nancy.Diagnostics.IInteractiveDiagnostics.GetTemplate(Nancy.Diagnostics.InteractiveDiagnosticMethod)", span="10-10"];
m5_16 [cluster="Unk.ToArray", file="RouteConstraintTests.cs", label="Entry Unk.ToArray", span=""];
m5_82 [cluster="System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)", file="RouteConstraintTests.cs", label="Entry System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)", span="0-0"];
m5_81 [cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="RouteConstraintTests.cs", label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0"];
m5_52 [cluster="Nancy.IResponseFormatter.AsJson<TModel>(TModel, Nancy.HttpStatusCode)", file="RouteConstraintTests.cs", label="Entry Nancy.IResponseFormatter.AsJson<TModel>(TModel, Nancy.HttpStatusCode)", span="40-40"];
m5_73 [cluster="System.Collections.Generic.List<T>.ToArray()", file="RouteConstraintTests.cs", label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0"];
m5_32 [cluster="Nancy.Diagnostics.IInteractiveDiagnostics.GetDiagnostic(string)", file="RouteConstraintTests.cs", label="Entry Nancy.Diagnostics.IInteractiveDiagnostics.GetDiagnostic(string)", span="12-12"];
m5_83 [cluster="System.ComponentModel.TypeConverter.ConvertFrom(object)", file="RouteConstraintTests.cs", label="Entry System.ComponentModel.TypeConverter.ConvertFrom(object)", span="0-0"];
m5_22 [cluster="System.Reflection.Assembly.GetName()", file="RouteConstraintTests.cs", label="Entry System.Reflection.Assembly.GetName()", span="0-0"];
m5_18 [cluster="lambda expression", file="RouteConstraintTests.cs", label="Entry lambda expression", span="26-33"];
m5_24 [cluster="lambda expression", file="RouteConstraintTests.cs", label="var providerName =\r\n                    HttpUtility.UrlDecode((string)ctx.providerName)", span="41-42"];
m5_41 [cluster="lambda expression", file="RouteConstraintTests.cs", label="var providerName =\r\n                    HttpUtility.UrlDecode((string)ctx.providerName)", span="71-72"];
m5_42 [cluster="lambda expression", file="RouteConstraintTests.cs", label="var methodName =\r\n                    HttpUtility.UrlDecode((string)ctx.methodName)", span="74-75"];
m5_54 [cluster="lambda expression", file="RouteConstraintTests.cs", label="var providerName =\r\n                    HttpUtility.UrlDecode((string)ctx.providerName)", span="93-94"];
m5_55 [cluster="lambda expression", file="RouteConstraintTests.cs", label="var methodName =\r\n                    HttpUtility.UrlDecode((string)ctx.methodName)", span="96-97"];
m5_28 [cluster="lambda expression", color=green, community=0, file="RouteConstraintTests.cs", label="6: var methods = diagnostic.Methods\r\n                    .Select(m => new\r\n                        {\r\n                            m.MethodName, \r\n                            ReturnType = m.ReturnType.ToString(), \r\n                            m.Description,\r\n                            Arguments = m.Arguments.Select(a => new\r\n                            {\r\n                                ArgumentName = a.Item1, \r\n                                ArgumentType = a.Item2.ToString()\r\n                            })\r\n                        })\r\n                    .ToArray()", span="52-64"];
m5_25 [cluster="lambda expression", file="RouteConstraintTests.cs", label="var diagnostic = \r\n                    this.interactiveDiagnostics.GetDiagnostic(providerName)", span="44-45"];
m5_26 [cluster="lambda expression", file="RouteConstraintTests.cs", label="diagnostic == null", span="47-47"];
m5_29 [cluster="lambda expression", file="RouteConstraintTests.cs", label="return this.Response.AsJson(methods);", span="66-66"];
m5_33 [cluster="lambda expression", file="RouteConstraintTests.cs", label="Entry lambda expression", span="53-63"];
m5_27 [cluster="lambda expression", color=green, community=0, file="RouteConstraintTests.cs", label="7: return HttpStatusCode.NotFound;", span="49-49"];
m5_30 [cluster="lambda expression", file="RouteConstraintTests.cs", label="Exit lambda expression", span="39-67"];
m5_34 [cluster="lambda expression", color=green, community=0, file="RouteConstraintTests.cs", label="0: new\r\n                        {\r\n                            m.MethodName, \r\n                            ReturnType = m.ReturnType.ToString(), \r\n                            m.Description,\r\n                            Arguments = m.Arguments.Select(a => new\r\n                            {\r\n                                ArgumentName = a.Item1, \r\n                                ArgumentType = a.Item2.ToString()\r\n                            })\r\n                        }", span="53-63"];
m5_35 [cluster="lambda expression", file="RouteConstraintTests.cs", label="Exit lambda expression", span="53-63"];
m5_37 [cluster="lambda expression", file="RouteConstraintTests.cs", label="Entry lambda expression", span="58-62"];
m5_38 [cluster="lambda expression", color=green, community=0, file="RouteConstraintTests.cs", label="0: new\r\n                            {\r\n                                ArgumentName = a.Item1, \r\n                                ArgumentType = a.Item2.ToString()\r\n                            }", span="58-62"];
m5_39 [cluster="lambda expression", file="RouteConstraintTests.cs", label="Exit lambda expression", span="58-62"];
m5_9 [cluster="lambda expression", file="RouteConstraintTests.cs", label="return View[''InteractiveDiagnostics''];", span="19-19"];
m5_12 [cluster="lambda expression", file="RouteConstraintTests.cs", label="var providers = this.interactiveDiagnostics\r\n                    .AvailableDiagnostics\r\n                    .Select(p => new\r\n                        {\r\n                            p.Name, \r\n                            p.Description, \r\n                            Type = p.GetType().Name, \r\n                            p.GetType().Namespace, \r\n                            Assembly = p.GetType().Assembly.GetName().Name\r\n                        })\r\n                    .ToArray()", span="24-34"];
m5_13 [cluster="lambda expression", file="RouteConstraintTests.cs", label="return this.Response.AsJson(providers);", span="36-36"];
m5_43 [cluster="lambda expression", file="RouteConstraintTests.cs", label="var method = \r\n                    this.interactiveDiagnostics.GetMethod(providerName, methodName)", span="77-78"];
m5_46 [cluster="lambda expression", file="RouteConstraintTests.cs", label="object[] arguments = \r\n                    GetArguments(method, this.Request.Query)", span="85-86"];
m5_47 [cluster="lambda expression", file="RouteConstraintTests.cs", label="return this.Response.AsJson(new { Result = this.interactiveDiagnostics.ExecuteDiagnostic(method, arguments) });", span="88-88"];
m5_56 [cluster="lambda expression", file="RouteConstraintTests.cs", label="var method = \r\n                    this.interactiveDiagnostics.GetMethod(providerName, methodName)", span="99-100"];
m5_59 [cluster="lambda expression", file="RouteConstraintTests.cs", label="var template = \r\n                    this.interactiveDiagnostics.GetTemplate(method)", span="107-108"];
m5_23 [cluster="lambda expression", file="RouteConstraintTests.cs", label="Entry lambda expression", span="39-67"];
m5_40 [cluster="lambda expression", file="RouteConstraintTests.cs", label="Entry lambda expression", span="69-89"];
m5_53 [cluster="lambda expression", file="RouteConstraintTests.cs", label="Entry lambda expression", span="91-116"];
m5_8 [cluster="lambda expression", file="RouteConstraintTests.cs", label="Entry lambda expression", span="17-20"];
m5_10 [cluster="lambda expression", file="RouteConstraintTests.cs", label="Exit lambda expression", span="17-20"];
m5_11 [cluster="lambda expression", file="RouteConstraintTests.cs", label="Entry lambda expression", span="22-37"];
m5_14 [cluster="lambda expression", file="RouteConstraintTests.cs", label="Exit lambda expression", span="22-37"];
m5_44 [cluster="lambda expression", file="RouteConstraintTests.cs", label="method == null", span="80-80"];
m5_48 [cluster="lambda expression", file="RouteConstraintTests.cs", label="Exit lambda expression", span="69-89"];
m5_57 [cluster="lambda expression", file="RouteConstraintTests.cs", label="method == null", span="102-102"];
m5_60 [cluster="lambda expression", file="RouteConstraintTests.cs", label="template == null", span="110-110"];
m5_62 [cluster="lambda expression", file="RouteConstraintTests.cs", label="return template;", span="115-115"];
m5_63 [cluster="lambda expression", file="RouteConstraintTests.cs", label="Exit lambda expression", span="91-116"];
m5_19 [cluster="lambda expression", file="RouteConstraintTests.cs", label="new\r\n                        {\r\n                            p.Name, \r\n                            p.Description, \r\n                            Type = p.GetType().Name, \r\n                            p.GetType().Namespace, \r\n                            Assembly = p.GetType().Assembly.GetName().Name\r\n                        }", span="26-33"];
m5_45 [cluster="lambda expression", file="RouteConstraintTests.cs", label="return HttpStatusCode.NotFound;", span="82-82"];
m5_58 [cluster="lambda expression", file="RouteConstraintTests.cs", label="return HttpStatusCode.NotFound;", span="104-104"];
m5_61 [cluster="lambda expression", file="RouteConstraintTests.cs", label="return HttpStatusCode.NotFound;", span="112-112"];
m5_20 [cluster="lambda expression", file="RouteConstraintTests.cs", label="Exit lambda expression", span="26-33"];
m5_15 [cluster="Unk.Select", file="RouteConstraintTests.cs", label="Entry Unk.Select", span=""];
m5_0 [cluster="Nancy.Diagnostics.Modules.InteractiveModule.InteractiveModule(Nancy.Diagnostics.IInteractiveDiagnostics)", file="RouteConstraintTests.cs", label="Entry Nancy.Diagnostics.Modules.InteractiveModule.InteractiveModule(Nancy.Diagnostics.IInteractiveDiagnostics)", span="12-12"];
m5_4 [cluster="Nancy.Diagnostics.Modules.InteractiveModule.InteractiveModule(Nancy.Diagnostics.IInteractiveDiagnostics)", color=green, community=0, file="RouteConstraintTests.cs", label="7: Get[''/providers/{providerName}''] = ctx =>\r\n            {\r\n                var providerName =\r\n                    HttpUtility.UrlDecode((string)ctx.providerName);\r\n\r\n                var diagnostic = \r\n                    this.interactiveDiagnostics.GetDiagnostic(providerName);\r\n\r\n                if (diagnostic == null)\r\n                {\r\n                    return HttpStatusCode.NotFound;\r\n                }\r\n\r\n                var methods = diagnostic.Methods\r\n                    .Select(m => new\r\n                        {\r\n                            m.MethodName, \r\n                            ReturnType = m.ReturnType.ToString(), \r\n                            m.Description,\r\n                            Arguments = m.Arguments.Select(a => new\r\n                            {\r\n                                ArgumentName = a.Item1, \r\n                                ArgumentType = a.Item2.ToString()\r\n                            })\r\n                        })\r\n                    .ToArray();\r\n\r\n                return this.Response.AsJson(methods);\r\n            }", span="39-67"];
m5_3 [cluster="Nancy.Diagnostics.Modules.InteractiveModule.InteractiveModule(Nancy.Diagnostics.IInteractiveDiagnostics)", file="RouteConstraintTests.cs", label="Get[''/providers''] = _ =>\r\n            {\r\n                var providers = this.interactiveDiagnostics\r\n                    .AvailableDiagnostics\r\n                    .Select(p => new\r\n                        {\r\n                            p.Name, \r\n                            p.Description, \r\n                            Type = p.GetType().Name, \r\n                            p.GetType().Namespace, \r\n                            Assembly = p.GetType().Assembly.GetName().Name\r\n                        })\r\n                    .ToArray();\r\n\r\n                return this.Response.AsJson(providers);\r\n            }", span="22-37"];
m5_5 [cluster="Nancy.Diagnostics.Modules.InteractiveModule.InteractiveModule(Nancy.Diagnostics.IInteractiveDiagnostics)", color=green, community=0, file="RouteConstraintTests.cs", label="6: Get[''/providers/{providerName}/{methodName}''] = ctx =>\r\n            {\r\n                var providerName =\r\n                    HttpUtility.UrlDecode((string)ctx.providerName);\r\n\r\n                var methodName =\r\n                    HttpUtility.UrlDecode((string)ctx.methodName);\r\n\r\n                var method = \r\n                    this.interactiveDiagnostics.GetMethod(providerName, methodName);\r\n\r\n                if (method == null)\r\n                {\r\n                    return HttpStatusCode.NotFound;\r\n                }\r\n\r\n                object[] arguments = \r\n                    GetArguments(method, this.Request.Query);\r\n\r\n                return this.Response.AsJson(new { Result = this.interactiveDiagnostics.ExecuteDiagnostic(method, arguments) });\r\n            }", span="69-89"];
m5_6 [cluster="Nancy.Diagnostics.Modules.InteractiveModule.InteractiveModule(Nancy.Diagnostics.IInteractiveDiagnostics)", color=green, community=0, file="RouteConstraintTests.cs", label="7: Get[''/templates/{providerName}/{methodName}''] = ctx =>\r\n            {\r\n                var providerName =\r\n                    HttpUtility.UrlDecode((string)ctx.providerName);\r\n\r\n                var methodName =\r\n                    HttpUtility.UrlDecode((string)ctx.methodName);\r\n\r\n                var method = \r\n                    this.interactiveDiagnostics.GetMethod(providerName, methodName);\r\n\r\n                if (method == null)\r\n                {\r\n                    return HttpStatusCode.NotFound;\r\n                }\r\n\r\n                var template = \r\n                    this.interactiveDiagnostics.GetTemplate(method);\r\n\r\n                if (template == null)\r\n                {\r\n                    return HttpStatusCode.NotFound;\r\n                }\r\n\r\n                return template;\r\n            }", span="91-116"];
m5_1 [cluster="Nancy.Diagnostics.Modules.InteractiveModule.InteractiveModule(Nancy.Diagnostics.IInteractiveDiagnostics)", file="RouteConstraintTests.cs", label="this.interactiveDiagnostics = interactiveDiagnostics", span="15-15"];
m5_2 [cluster="Nancy.Diagnostics.Modules.InteractiveModule.InteractiveModule(Nancy.Diagnostics.IInteractiveDiagnostics)", file="RouteConstraintTests.cs", label="Get[''/''] = _ =>\r\n            {\r\n                return View[''InteractiveDiagnostics''];\r\n            }", span="17-20"];
m5_7 [cluster="Nancy.Diagnostics.Modules.InteractiveModule.InteractiveModule(Nancy.Diagnostics.IInteractiveDiagnostics)", file="RouteConstraintTests.cs", label="Exit Nancy.Diagnostics.Modules.InteractiveModule.InteractiveModule(Nancy.Diagnostics.IInteractiveDiagnostics)", span="12-12"];
m5_50 [cluster="Nancy.Diagnostics.Modules.InteractiveModule.GetArguments(Nancy.Diagnostics.InteractiveDiagnosticMethod, dynamic)", file="RouteConstraintTests.cs", label="Entry Nancy.Diagnostics.Modules.InteractiveModule.GetArguments(Nancy.Diagnostics.InteractiveDiagnosticMethod, dynamic)", span="119-119"];
m5_65 [cluster="Nancy.Diagnostics.Modules.InteractiveModule.GetArguments(Nancy.Diagnostics.InteractiveDiagnosticMethod, dynamic)", file="RouteConstraintTests.cs", label="var arguments = new List<object>()", span="121-121"];
m5_66 [cluster="Nancy.Diagnostics.Modules.InteractiveModule.GetArguments(Nancy.Diagnostics.InteractiveDiagnosticMethod, dynamic)", file="RouteConstraintTests.cs", label="method.Arguments", span="123-123"];
m5_67 [cluster="Nancy.Diagnostics.Modules.InteractiveModule.GetArguments(Nancy.Diagnostics.InteractiveDiagnosticMethod, dynamic)", file="RouteConstraintTests.cs", label="arguments.Add(ConvertArgument((string)query[argument.Item1].Value, argument.Item2))", span="125-125"];
m5_68 [cluster="Nancy.Diagnostics.Modules.InteractiveModule.GetArguments(Nancy.Diagnostics.InteractiveDiagnosticMethod, dynamic)", file="RouteConstraintTests.cs", label="return arguments.ToArray();", span="128-128"];
m5_69 [cluster="Nancy.Diagnostics.Modules.InteractiveModule.GetArguments(Nancy.Diagnostics.InteractiveDiagnosticMethod, dynamic)", file="RouteConstraintTests.cs", label="Exit Nancy.Diagnostics.Modules.InteractiveModule.GetArguments(Nancy.Diagnostics.InteractiveDiagnosticMethod, dynamic)", span="119-119"];
m5_72 [cluster="System.Collections.Generic.List<T>.Add(T)", file="RouteConstraintTests.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m5_51 [cluster="Nancy.Diagnostics.IInteractiveDiagnostics.ExecuteDiagnostic(Nancy.Diagnostics.InteractiveDiagnosticMethod, object[])", file="RouteConstraintTests.cs", label="Entry Nancy.Diagnostics.IInteractiveDiagnostics.ExecuteDiagnostic(Nancy.Diagnostics.InteractiveDiagnosticMethod, object[])", span="8-8"];
m5_49 [cluster="Nancy.Diagnostics.IInteractiveDiagnostics.GetMethod(string, string)", file="RouteConstraintTests.cs", label="Entry Nancy.Diagnostics.IInteractiveDiagnostics.GetMethod(string, string)", span="14-14"];
m5_84 [file="RouteConstraintTests.cs", label="Nancy.Diagnostics.Modules.InteractiveModule", span=""];
m6_5 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SerializeTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m6_7 [cluster="Nancy.NancyContext.Dispose()", file="SerializeTests.cs", label="Entry Nancy.NancyContext.Dispose()", span="79-79"];
m6_8 [cluster="Nancy.NancyContext.Dispose()", file="SerializeTests.cs", label="this.Items.Values.OfType<IDisposable>()", span="81-81"];
m6_9 [cluster="Nancy.NancyContext.Dispose()", file="SerializeTests.cs", label="disposableItem.Dispose()", span="83-83"];
m6_10 [cluster="Nancy.NancyContext.Dispose()", file="SerializeTests.cs", label="this.Items.Clear()", span="86-86"];
m6_11 [cluster="Nancy.NancyContext.Dispose()", file="SerializeTests.cs", label="((IDisposable)this.request).Dispose()", span="88-88"];
m6_12 [cluster="Nancy.NancyContext.Dispose()", file="SerializeTests.cs", label="Exit Nancy.NancyContext.Dispose()", span="79-79"];
m6_6 [cluster="Nancy.Diagnostics.RequestTrace.RequestTrace()", file="SerializeTests.cs", label="Entry Nancy.Diagnostics.RequestTrace.RequestTrace()", span="27-27"];
m6_15 [cluster="System.Collections.Generic.ICollection<T>.Clear()", file="SerializeTests.cs", label="Entry System.Collections.Generic.ICollection<T>.Clear()", span="0-0"];
m6_0 [cluster="Nancy.NancyContext.NancyContext()", file="SerializeTests.cs", label="Entry Nancy.NancyContext.NancyContext()", span="19-19"];
m6_1 [cluster="Nancy.NancyContext.NancyContext()", file="SerializeTests.cs", label="this.Items = new Dictionary<string, object>()", span="21-21"];
m6_2 [cluster="Nancy.NancyContext.NancyContext()", file="SerializeTests.cs", label="this.Trace = new RequestTrace()", span="22-22"];
m6_3 [cluster="Nancy.NancyContext.NancyContext()", file="SerializeTests.cs", label="this.ControlPanelEnabled = true", span="25-25"];
m6_4 [cluster="Nancy.NancyContext.NancyContext()", file="SerializeTests.cs", label="Exit Nancy.NancyContext.NancyContext()", span="19-19"];
m6_13 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="SerializeTests.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m6_16 [file="SerializeTests.cs", label="Nancy.NancyContext", span=""];
m7_132 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_most_parameter_captures_when_multiple_matches_with_parameters_are_available()", file="SparkViewEngineFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_most_parameter_captures_when_multiple_matches_with_parameters_are_available()", span="123-123"];
m7_133 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_most_parameter_captures_when_multiple_matches_with_parameters_are_available()", file="SparkViewEngineFixture.cs", label="var request = new FakeRequest(''get'', ''/foo/bar/foo'')", span="126-126"];
m7_134 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_most_parameter_captures_when_multiple_matches_with_parameters_are_available()", file="SparkViewEngineFixture.cs", label="var context = new NancyContext { Request = request }", span="127-127"];
m7_136 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_most_parameter_captures_when_multiple_matches_with_parameters_are_available()", file="SparkViewEngineFixture.cs", label="A.CallTo(() => this.matcher.Match(request.Path, ''/foo/{bar}'', null)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(true).AddParameter(''bar'', ''fake value'')))", span="134-135"];
m7_137 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_most_parameter_captures_when_multiple_matches_with_parameters_are_available()", file="SparkViewEngineFixture.cs", label="A.CallTo(() => this.matcher.Match(request.Path, ''/foo/{bar}/{foo}'', A<NancyContext>.Ignored)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(true)\r\n                    .AddParameter(''foo'', ''fake value'')\r\n                    .AddParameter(''bar'', ''fake value 2'')))", span="137-140"];
m7_135 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_most_parameter_captures_when_multiple_matches_with_parameters_are_available()", file="SparkViewEngineFixture.cs", label="var resolver = CreateResolver(x => {\r\n                x.AddGetRoute(''/foo/{bar}/{foo}'', ''module-key-two-parameters'');\r\n                x.AddGetRoute(''/foo/{bar}'', ''module-key-one-parameter'');\r\n            })", span="129-132"];
m7_138 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_most_parameter_captures_when_multiple_matches_with_parameters_are_available()", file="SparkViewEngineFixture.cs", label="resolver.Resolve(context)", span="143-143"];
m7_139 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_most_parameter_captures_when_multiple_matches_with_parameters_are_available()", color=red, community=0, file="SparkViewEngineFixture.cs", label="1: A.CallTo(() => this.catalog.GetModuleByKey(''module-key-two-parameters'', context)).MustHaveHappened()", span="146-146"];
m7_140 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_most_parameter_captures_when_multiple_matches_with_parameters_are_available()", file="SparkViewEngineFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_most_parameter_captures_when_multiple_matches_with_parameters_are_available()", span="123-123"];
m7_22 [cluster="Unk.BuildModule", file="SparkViewEngineFixture.cs", label="Entry Unk.BuildModule", span=""];
m7_320 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_ignore_method_casing_when_resolving_routes()", file="SparkViewEngineFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_ignore_method_casing_when_resolving_routes()", span="297-297"];
m7_321 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_ignore_method_casing_when_resolving_routes()", file="SparkViewEngineFixture.cs", label="var request = new FakeRequest(''GeT'', ''/foo/bar'')", span="300-300"];
m7_322 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_ignore_method_casing_when_resolving_routes()", file="SparkViewEngineFixture.cs", label="var context = new NancyContext { Request = request }", span="301-301"];
m7_323 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_ignore_method_casing_when_resolving_routes()", file="SparkViewEngineFixture.cs", label="var resolver = CreateResolver(x => x.AddGetRoute(''/foo/bar''))", span="302-302"];
m7_324 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_ignore_method_casing_when_resolving_routes()", file="SparkViewEngineFixture.cs", label="var resolvedRoute = resolver.Resolve(context)", span="305-305"];
m7_325 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_ignore_method_casing_when_resolving_routes()", file="SparkViewEngineFixture.cs", label="resolvedRoute.ShouldNotBeNull()", span="308-308"];
m7_326 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_ignore_method_casing_when_resolving_routes()", file="SparkViewEngineFixture.cs", label="resolvedRoute.ShouldNotBeOfType<NotFoundRoute>()", span="309-309"];
m7_327 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_ignore_method_casing_when_resolving_routes()", file="SparkViewEngineFixture.cs", label="resolvedRoute.ShouldNotBeOfType<MethodNotAllowedRoute>()", span="310-310"];
m7_328 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_ignore_method_casing_when_resolving_routes()", file="SparkViewEngineFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_ignore_method_casing_when_resolving_routes()", span="297-297"];
m7_85 [cluster="Nancy.Routing.DefaultRouteResolver.Resolve(Nancy.NancyContext)", file="SparkViewEngineFixture.cs", label="Entry Nancy.Routing.DefaultRouteResolver.Resolve(Nancy.NancyContext)", span="40-40"];
m7_361 [cluster="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator.AddPutRoute(string)", file="SparkViewEngineFixture.cs", label="Entry Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator.AddPutRoute(string)", span="82-82"];
m7_73 [cluster="Nancy.Routing.DefaultRouteResolver.DefaultRouteResolver(Nancy.INancyModuleCatalog, Nancy.Routing.IRoutePatternMatcher, Nancy.Routing.INancyModuleBuilder, Nancy.Routing.IRouteCache)", file="SparkViewEngineFixture.cs", label="Entry Nancy.Routing.DefaultRouteResolver.DefaultRouteResolver(Nancy.INancyModuleCatalog, Nancy.Routing.IRoutePatternMatcher, Nancy.Routing.INancyModuleBuilder, Nancy.Routing.IRouteCache)", span="26-26"];
m7_101 [cluster="object.ShouldBeSameAs(object)", file="SparkViewEngineFixture.cs", label="Entry object.ShouldBeSameAs(object)", span="130-130"];
m7_270 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_request_uri()", file="SparkViewEngineFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_request_uri()", span="245-245"];
m7_271 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_request_uri()", file="SparkViewEngineFixture.cs", label="var request = new FakeRequest(''get'', ''/foo/bar'')", span="248-248"];
m7_272 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_request_uri()", file="SparkViewEngineFixture.cs", label="var context = new NancyContext {Request = request}", span="249-249"];
m7_275 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_request_uri()", file="SparkViewEngineFixture.cs", label="A.CallTo(() => this.matcher.Match(request.Path, A<string>.Ignored, A<NancyContext>.Ignored)).MustHaveHappened()", span="256-256"];
m7_273 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_request_uri()", file="SparkViewEngineFixture.cs", label="var resolver = CreateResolver(x => x.AddGetRoute(''/foo/bar''))", span="250-250"];
m7_274 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_request_uri()", file="SparkViewEngineFixture.cs", label="resolver.Resolve(context)", span="253-253"];
m7_276 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_request_uri()", file="SparkViewEngineFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_request_uri()", span="245-245"];
m7_61 [cluster="Unk.GetKeyForModuleType", file="SparkViewEngineFixture.cs", label="Entry Unk.GetKeyForModuleType", span=""];
m7_453 [cluster="Nancy.Tests.Fakes.FakeModuleCatalog.FakeModuleCatalog()", file="SparkViewEngineFixture.cs", label="Entry Nancy.Tests.Fakes.FakeModuleCatalog.FakeModuleCatalog()", span="13-13"];
m7_29 [cluster="Unk.GetModuleByKey", file="SparkViewEngineFixture.cs", label="Entry Unk.GetModuleByKey", span=""];
m7_444 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_a_route_if_matching_and_the_filter_returns_false()", file="SparkViewEngineFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_a_route_if_matching_and_the_filter_returns_false()", span="454-454"];
m7_445 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_a_route_if_matching_and_the_filter_returns_false()", file="SparkViewEngineFixture.cs", label="var moduleCatalog = new FakeModuleCatalog()", span="457-457"];
m7_446 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_a_route_if_matching_and_the_filter_returns_false()", file="SparkViewEngineFixture.cs", label="var routeCache = new RouteCache(moduleCatalog, new FakeModuleKeyGenerator(), A.Fake<INancyContextFactory>())", span="458-458"];
m7_447 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_a_route_if_matching_and_the_filter_returns_false()", file="SparkViewEngineFixture.cs", label="var specificResolver = new DefaultRouteResolver(moduleCatalog, this.matcher, this.moduleBuilder, routeCache)", span="459-459"];
m7_448 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_a_route_if_matching_and_the_filter_returns_false()", file="SparkViewEngineFixture.cs", label="var request = new FakeRequest(''GET'', ''/filtered'')", span="460-460"];
m7_450 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_a_route_if_matching_and_the_filter_returns_false()", file="SparkViewEngineFixture.cs", label="var route = specificResolver.Resolve(context).Item1", span="464-464"];
m7_449 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_a_route_if_matching_and_the_filter_returns_false()", file="SparkViewEngineFixture.cs", label="var context = new NancyContext { Request = request }", span="461-461"];
m7_451 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_a_route_if_matching_and_the_filter_returns_false()", file="SparkViewEngineFixture.cs", label="route.ShouldBeOfType(typeof(NotFoundRoute))", span="467-467"];
m7_452 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_a_route_if_matching_and_the_filter_returns_false()", file="SparkViewEngineFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_a_route_if_matching_and_the_filter_returns_false()", span="454-454"];
m7_55 [cluster="string.Equals(string)", file="SparkViewEngineFixture.cs", label="Entry string.Equals(string)", span="0-0"];
m7_161 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", file="SparkViewEngineFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", span="150-150"];
m7_162 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", color=red, community=0, file="SparkViewEngineFixture.cs", label="4: var request = new FakeRequest(''get'', ''/foo/bar'')", span="153-153"];
m7_163 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", color=red, community=0, file="SparkViewEngineFixture.cs", label="5: var context = new NancyContext { Request = request }", span="154-154"];
m7_165 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", color=red, community=0, file="SparkViewEngineFixture.cs", label="0: A.CallTo(() => this.matcher.Match(request.Path, ''/foo/bar'', null)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(true)))", span="166-167"];
m7_166 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", file="SparkViewEngineFixture.cs", label="A.CallTo(() => this.matcher.Match(request.Path, ''/foo/{bar}'', null)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(true).AddParameter(''bar'', ''fake value'')))", span="169-170"];
m7_167 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", file="SparkViewEngineFixture.cs", label="A.CallTo(() => this.matcher.Match(request.Path, ''/foo/{bar}'', null)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(true)\r\n                    .AddParameter(''foo'', ''fake value'')\r\n                    .AddParameter(''bar'', ''fake value'')))", span="172-175"];
m7_164 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", color=red, community=0, file="SparkViewEngineFixture.cs", label="0: var resolver = CreateResolver(x =>\r\n            {\r\n                x.AddGetRoute(''/foo/{bar}'', ''module-key-parameters'');\r\n                x.AddGetRoute(''/{foo}/{bar}'', ''module-key-two-parameters'');\r\n                x.AddGetRoute(''/foo/bar'', ''module-key-no-parameters'');\r\n                x.AddGetRoute(''/foo/bar'', ''module-key-no-parameters-second'');\r\n                x.AddGetRoute(''/foo/{bar}'', ''module-key-parameters'');\r\n                x.AddGetRoute(''/{foo}/{bar}'', ''module-key-two-parameters'');\r\n            })", span="156-164"];
m7_168 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", file="SparkViewEngineFixture.cs", label="resolver.Resolve(context)", span="177-177"];
m7_169 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", file="SparkViewEngineFixture.cs", label="A.CallTo(() => this.catalog.GetModuleByKey(''module-key-no-parameters'', context)).MustHaveHappened()", span="180-180"];
m7_170 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", file="SparkViewEngineFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_first_route_that_is_an_exact_match_over_any_other()", span="150-150"];
m7_87 [cluster="object.ShouldEqual(object)", file="SparkViewEngineFixture.cs", label="Entry object.ShouldEqual(object)", span="95-95"];
m7_14 [cluster="Unk.>", file="SparkViewEngineFixture.cs", label="Entry Unk.>", span=""];
m7_375 [cluster="Nancy.Routing.INancyModuleBuilder.BuildModule(Nancy.NancyModule, Nancy.NancyContext)", file="SparkViewEngineFixture.cs", label="Entry Nancy.Routing.INancyModuleBuilder.BuildModule(Nancy.NancyModule, Nancy.NancyContext)", span="13-13"];
m7_457 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_a_route_if_matching_and_the_filter_returns_true()", file="SparkViewEngineFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_a_route_if_matching_and_the_filter_returns_true()", span="471-471"];
m7_458 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_a_route_if_matching_and_the_filter_returns_true()", file="SparkViewEngineFixture.cs", label="var moduleCatalog = new FakeModuleCatalog()", span="474-474"];
m7_459 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_a_route_if_matching_and_the_filter_returns_true()", file="SparkViewEngineFixture.cs", label="var routeCache = new RouteCache(moduleCatalog, new FakeModuleKeyGenerator(), A.Fake<INancyContextFactory>())", span="475-475"];
m7_460 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_a_route_if_matching_and_the_filter_returns_true()", file="SparkViewEngineFixture.cs", label="var specificResolver = new DefaultRouteResolver(moduleCatalog, this.matcher, this.moduleBuilder, routeCache)", span="476-476"];
m7_461 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_a_route_if_matching_and_the_filter_returns_true()", file="SparkViewEngineFixture.cs", label="var request = new FakeRequest(''GET'', ''/notfiltered'')", span="477-477"];
m7_463 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_a_route_if_matching_and_the_filter_returns_true()", file="SparkViewEngineFixture.cs", label="var route = specificResolver.Resolve(context).Item1", span="481-481"];
m7_462 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_a_route_if_matching_and_the_filter_returns_true()", file="SparkViewEngineFixture.cs", label="var context = new NancyContext { Request = request }", span="478-478"];
m7_464 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_a_route_if_matching_and_the_filter_returns_true()", file="SparkViewEngineFixture.cs", label="route.ShouldBeOfType(typeof(Route))", span="484-484"];
m7_465 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_a_route_if_matching_and_the_filter_returns_true()", file="SparkViewEngineFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_a_route_if_matching_and_the_filter_returns_true()", span="471-471"];
m7_475 [cluster="System.Func<T, TResult>.Invoke(T)", file="SparkViewEngineFixture.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m7_477 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="SparkViewEngineFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", span="505-505"];
m7_478 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="SparkViewEngineFixture.cs", label="var moduleCatalog = A.Fake<INancyModuleCatalog>()", span="508-508"];
m7_479 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="SparkViewEngineFixture.cs", label="A.CallTo(() => moduleCatalog.GetAllModules(A<NancyContext>.Ignored)).Returns(new[] { new FakeNancyModuleWithPreAndPostHooks() })", span="509-509"];
m7_480 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="SparkViewEngineFixture.cs", label="A.CallTo(() => moduleCatalog.GetModuleByKey(A<string>.Ignored, A<NancyContext>.Ignored)).Returns(\r\n                new FakeNancyModuleWithPreAndPostHooks())", span="510-511"];
m7_481 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="SparkViewEngineFixture.cs", label="var routeCache = new RouteCache(moduleCatalog, new FakeModuleKeyGenerator(), A.Fake<INancyContextFactory>())", span="513-513"];
m7_482 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="SparkViewEngineFixture.cs", label="var specificResolver = new DefaultRouteResolver(moduleCatalog, this.matcher, this.moduleBuilder, routeCache)", span="514-514"];
m7_483 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="SparkViewEngineFixture.cs", label="var request = new FakeRequest(''GET'', ''/PrePost'')", span="515-515"];
m7_485 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="SparkViewEngineFixture.cs", label="var result = specificResolver.Resolve(context)", span="519-519"];
m7_484 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="SparkViewEngineFixture.cs", label="var context = new NancyContext { Request = request }", span="516-516"];
m7_486 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="SparkViewEngineFixture.cs", label="result.Item3.ShouldNotBeNull()", span="522-522"];
m7_487 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="SparkViewEngineFixture.cs", label="result.Item4.ShouldNotBeNull()", span="523-523"];
m7_488 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", file="SparkViewEngineFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_prereq_and_postreq_from_module()", span="505-505"];
m7_18 [cluster="Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModule(System.Action<Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModuleConfigurator>)", file="SparkViewEngineFixture.cs", label="Entry Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModule(System.Action<Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModuleConfigurator>)", span="10-10"];
m7_494 [cluster="Unk.GetAllModules", file="SparkViewEngineFixture.cs", label="Entry Unk.GetAllModules", span=""];
m7_333 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_path_set_to_request_uri_when_matched_route_was_for_wrong_request_method()", file="SparkViewEngineFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_path_set_to_request_uri_when_matched_route_was_for_wrong_request_method()", span="314-314"];
m7_334 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_path_set_to_request_uri_when_matched_route_was_for_wrong_request_method()", file="SparkViewEngineFixture.cs", label="var request = new FakeRequest(''POST'', ''/foo/bar'')", span="317-317"];
m7_335 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_path_set_to_request_uri_when_matched_route_was_for_wrong_request_method()", file="SparkViewEngineFixture.cs", label="var context = new NancyContext { Request = request }", span="318-318"];
m7_340 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_path_set_to_request_uri_when_matched_route_was_for_wrong_request_method()", file="SparkViewEngineFixture.cs", label="route.Description.Path.ShouldEqual(request.Path)", span="327-327"];
m7_336 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_path_set_to_request_uri_when_matched_route_was_for_wrong_request_method()", file="SparkViewEngineFixture.cs", label="var resolver = CreateResolver(x => x.AddGetRoute(''/foo/bar''))", span="319-319"];
m7_337 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_path_set_to_request_uri_when_matched_route_was_for_wrong_request_method()", file="SparkViewEngineFixture.cs", label="var route = resolver.Resolve(context).Item1", span="322-322"];
m7_338 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_path_set_to_request_uri_when_matched_route_was_for_wrong_request_method()", file="SparkViewEngineFixture.cs", label="route.ShouldNotBeNull()", span="325-325"];
m7_339 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_path_set_to_request_uri_when_matched_route_was_for_wrong_request_method()", file="SparkViewEngineFixture.cs", label="route.ShouldBeOfType<MethodNotAllowedRoute>()", span="326-326"];
m7_341 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_path_set_to_request_uri_when_matched_route_was_for_wrong_request_method()", file="SparkViewEngineFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_path_set_to_request_uri_when_matched_route_was_for_wrong_request_method()", span="314-314"];
m7_56 [cluster="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator.IsMatch(bool)", file="SparkViewEngineFixture.cs", label="Entry Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator.IsMatch(bool)", span="49-49"];
m7_57 [cluster="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator.AddParameter(string, object)", file="SparkViewEngineFixture.cs", label="Entry Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator.AddParameter(string, object)", span="55-55"];
m7_148 [cluster="Nancy.Routing.IRoutePatternMatcher.Match(string, string, Nancy.NancyContext)", file="SparkViewEngineFixture.cs", label="Entry Nancy.Routing.IRoutePatternMatcher.Match(string, string, Nancy.NancyContext)", span="15-15"];
m7_455 [cluster="Nancy.Tests.Fakes.FakeModuleKeyGenerator.FakeModuleKeyGenerator()", file="SparkViewEngineFixture.cs", label="Entry Nancy.Tests.Fakes.FakeModuleKeyGenerator.FakeModuleKeyGenerator()", span="4-4"];
m7_346 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_allow_header_set_to_allowed_methods_matching_request_route()", file="SparkViewEngineFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_allow_header_set_to_allowed_methods_matching_request_route()", span="331-331"];
m7_347 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_allow_header_set_to_allowed_methods_matching_request_route()", file="SparkViewEngineFixture.cs", label="var request = new FakeRequest(''POST'', ''/foo/bar'')", span="334-334"];
m7_348 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_allow_header_set_to_allowed_methods_matching_request_route()", file="SparkViewEngineFixture.cs", label="var context = new NancyContext { Request = request }", span="335-335"];
m7_349 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_allow_header_set_to_allowed_methods_matching_request_route()", file="SparkViewEngineFixture.cs", label="var resolver = CreateResolver(x => {\r\n                x.AddGetRoute(''/foo/bar'');\r\n                x.AddPutRoute(''/foo/bar'');\r\n            })", span="337-340"];
m7_350 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_allow_header_set_to_allowed_methods_matching_request_route()", file="SparkViewEngineFixture.cs", label="var route = resolver.Resolve(context).Item1", span="343-343"];
m7_351 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_allow_header_set_to_allowed_methods_matching_request_route()", file="SparkViewEngineFixture.cs", label="route.ShouldNotBeNull()", span="346-346"];
m7_352 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_allow_header_set_to_allowed_methods_matching_request_route()", file="SparkViewEngineFixture.cs", label="route.ShouldBeOfType<MethodNotAllowedRoute>()", span="347-347"];
m7_353 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_allow_header_set_to_allowed_methods_matching_request_route()", file="SparkViewEngineFixture.cs", label="route.Invoke(new DynamicDictionary()).Headers[''Allow''].ShouldEqual(''GET, PUT'')", span="348-348"];
m7_354 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_allow_header_set_to_allowed_methods_matching_request_route()", file="SparkViewEngineFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_methodnotallowedroute_with_allow_header_set_to_allowed_methods_matching_request_route()", span="331-331"];
m7_284 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_context()", file="SparkViewEngineFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_context()", span="260-260"];
m7_285 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_context()", file="SparkViewEngineFixture.cs", label="var request = new FakeRequest(''get'', ''/foo/bar'')", span="263-263"];
m7_286 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_context()", file="SparkViewEngineFixture.cs", label="var context = new NancyContext { Request = request }", span="264-264"];
m7_287 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_context()", file="SparkViewEngineFixture.cs", label="var resolver = CreateResolver(x => x.AddGetRoute(''/foo/bar''))", span="265-265"];
m7_288 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_context()", file="SparkViewEngineFixture.cs", label="resolver.Resolve(context)", span="268-268"];
m7_289 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_context()", file="SparkViewEngineFixture.cs", label="A.CallTo(() => this.matcher.Match(A<string>.Ignored, A<string>.Ignored, context)).MustHaveHappened()", span="271-271"];
m7_290 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_context()", file="SparkViewEngineFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_with_context()", span="260-260"];
m7_454 [cluster="RouteCache.cstr", file="SparkViewEngineFixture.cs", label="Entry RouteCache.cstr", span=""];
m7_490 [cluster="DefaultRouteResolver.cstr", file="SparkViewEngineFixture.cs", label="Entry DefaultRouteResolver.cstr", span=""];
m7_83 [cluster="Nancy.Tests.Fakes.FakeRequest.FakeRequest(string, string)", file="SparkViewEngineFixture.cs", label="Entry Nancy.Tests.Fakes.FakeRequest.FakeRequest(string, string)", span="8-8"];
m7_131 [cluster="Nancy.INancyModuleCatalog.GetModuleByKey(string, Nancy.NancyContext)", file="SparkViewEngineFixture.cs", label="Entry Nancy.INancyModuleCatalog.GetModuleByKey(string, Nancy.NancyContext)", span="22-22"];
m7_92 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_action_on_resolved_route()", file="SparkViewEngineFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_action_on_resolved_route()", span="80-80"];
m7_93 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_action_on_resolved_route()", file="SparkViewEngineFixture.cs", label="var request = new FakeRequest(''get'', ''/foo/bar'')", span="83-83"];
m7_94 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_action_on_resolved_route()", file="SparkViewEngineFixture.cs", label="var context = new NancyContext { Request = request }", span="84-84"];
m7_95 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_action_on_resolved_route()", file="SparkViewEngineFixture.cs", label="var resolver =\r\n                CreateResolver(x => x.AddGetRoute(''/foo/bar'', ''module-key''))", span="86-87"];
m7_96 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_action_on_resolved_route()", file="SparkViewEngineFixture.cs", label="var resolvedRoute = resolver.Resolve(context).Item1", span="90-90"];
m7_97 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_action_on_resolved_route()", file="SparkViewEngineFixture.cs", label="resolvedRoute.ShouldNotBeOfType<NotFoundRoute>()", span="93-93"];
m7_98 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_action_on_resolved_route()", file="SparkViewEngineFixture.cs", label="resolvedRoute.ShouldNotBeOfType<MethodNotAllowedRoute>()", span="94-94"];
m7_99 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_action_on_resolved_route()", file="SparkViewEngineFixture.cs", label="resolvedRoute.Action.ShouldBeSameAs(this.expectedAction)", span="95-95"];
m7_100 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_action_on_resolved_route()", file="SparkViewEngineFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_action_on_resolved_route()", span="80-80"];
m7_297 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_for_all_entries_in_route_cache()", file="SparkViewEngineFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_for_all_entries_in_route_cache()", span="275-275"];
m7_298 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_for_all_entries_in_route_cache()", file="SparkViewEngineFixture.cs", label="var request = new FakeRequest(''get'', ''/foo/bar'')", span="278-278"];
m7_299 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_for_all_entries_in_route_cache()", file="SparkViewEngineFixture.cs", label="var context = new NancyContext { Request = request }", span="279-279"];
m7_300 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_for_all_entries_in_route_cache()", file="SparkViewEngineFixture.cs", label="var resolver = CreateResolver(x => {\r\n                x.AddGetRoute(''/foo/bar'');\r\n                x.AddGetRoute(''/bar/foo'');\r\n                x.AddGetRoute(''/foobar'');\r\n            })", span="281-285"];
m7_301 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_for_all_entries_in_route_cache()", file="SparkViewEngineFixture.cs", label="resolver.Resolve(context)", span="288-288"];
m7_302 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_for_all_entries_in_route_cache()", file="SparkViewEngineFixture.cs", label="A.CallTo(() => this.matcher.Match(A<string>.Ignored, ''/foo/bar'', A<NancyContext>.Ignored)).MustHaveHappened()", span="291-291"];
m7_303 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_for_all_entries_in_route_cache()", file="SparkViewEngineFixture.cs", label="A.CallTo(() => this.matcher.Match(A<string>.Ignored, ''/bar/foo'', A<NancyContext>.Ignored)).MustHaveHappened()", span="292-292"];
m7_304 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_for_all_entries_in_route_cache()", file="SparkViewEngineFixture.cs", label="A.CallTo(() => this.matcher.Match(A<string>.Ignored, ''/foobar'', A<NancyContext>.Ignored)).MustHaveHappened()", span="293-293"];
m7_305 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_for_all_entries_in_route_cache()", file="SparkViewEngineFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_pattern_matcher_for_all_entries_in_route_cache()", span="275-275"];
m7_342 [cluster="object.ShouldBeOfType<T>()", file="SparkViewEngineFixture.cs", label="Entry object.ShouldBeOfType<T>()", span="150-150"];
m7_362 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_module_builder_with_context_and_resolved_module()", file="SparkViewEngineFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_module_builder_with_context_and_resolved_module()", span="352-352"];
m7_363 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_module_builder_with_context_and_resolved_module()", file="SparkViewEngineFixture.cs", label="var request = new FakeRequest(''GET'', ''/foo/bar'')", span="355-355"];
m7_364 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_module_builder_with_context_and_resolved_module()", file="SparkViewEngineFixture.cs", label="var context = new NancyContext { Request = request }", span="356-356"];
m7_365 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_module_builder_with_context_and_resolved_module()", file="SparkViewEngineFixture.cs", label="var resolver = CreateResolver(x => x.AddGetRoute(''/foo/bar''))", span="357-357"];
m7_366 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_module_builder_with_context_and_resolved_module()", file="SparkViewEngineFixture.cs", label="resolver.Resolve(context)", span="360-360"];
m7_367 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_module_builder_with_context_and_resolved_module()", file="SparkViewEngineFixture.cs", label="A.CallTo(() => this.moduleBuilder.BuildModule(this.expectedModule, context)).MustHaveHappened()", span="363-363"];
m7_368 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_module_builder_with_context_and_resolved_module()", file="SparkViewEngineFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_invoke_module_builder_with_context_and_resolved_module()", span="352-352"];
m7_476 [cluster="bool.ShouldBeTrue()", file="SparkViewEngineFixture.cs", label="Entry bool.ShouldBeTrue()", span="85-85"];
m7_105 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_first_route_with_when_multiple_matches_are_available_and_contains_same_number_of_parameter_captures()", file="SparkViewEngineFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_first_route_with_when_multiple_matches_are_available_and_contains_same_number_of_parameter_captures()", span="99-99"];
m7_106 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_first_route_with_when_multiple_matches_are_available_and_contains_same_number_of_parameter_captures()", file="SparkViewEngineFixture.cs", label="var request = new FakeRequest(''get'', ''/foo/bar'')", span="102-102"];
m7_107 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_first_route_with_when_multiple_matches_are_available_and_contains_same_number_of_parameter_captures()", file="SparkViewEngineFixture.cs", label="var context = new NancyContext { Request = request }", span="103-103"];
m7_110 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_first_route_with_when_multiple_matches_are_available_and_contains_same_number_of_parameter_captures()", file="SparkViewEngineFixture.cs", label="A.CallTo(() => this.matcher.Match(request.Path, ''/foo/{bar}'', A<NancyContext>.Ignored)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(true).AddParameter(''bar'', ''fake value'')))", span="112-113"];
m7_108 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_first_route_with_when_multiple_matches_are_available_and_contains_same_number_of_parameter_captures()", file="SparkViewEngineFixture.cs", label="var resolver = CreateResolver(x => {\r\n                x.AddGetRoute(''/foo/{bar}'', ''first-module-key-parameters'');\r\n                x.AddGetRoute(''/foo/{bar}'', ''second-module-key-parameters'');\r\n            })", span="105-108"];
m7_111 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_first_route_with_when_multiple_matches_are_available_and_contains_same_number_of_parameter_captures()", file="SparkViewEngineFixture.cs", label="resolver.Resolve(context)", span="116-116"];
m7_112 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_first_route_with_when_multiple_matches_are_available_and_contains_same_number_of_parameter_captures()", file="SparkViewEngineFixture.cs", label="A.CallTo(() => this.catalog.GetModuleByKey(''first-module-key-parameters'', context)).MustHaveHappened()", span="119-119"];
m7_109 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_first_route_with_when_multiple_matches_are_available_and_contains_same_number_of_parameter_captures()", file="SparkViewEngineFixture.cs", label="this.expectedModule = new FakeNancyModule(x => x.AddGetRoute(''/foo/{bar}'', this.expectedAction))", span="110-110"];
m7_113 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_first_route_with_when_multiple_matches_are_available_and_contains_same_number_of_parameter_captures()", file="SparkViewEngineFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_first_route_with_when_multiple_matches_are_available_and_contains_same_number_of_parameter_captures()", span="99-99"];
m7_414 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_notfoundroute_with_path_set_to_request_uri_when_route_could_not_be_resolved()", file="SparkViewEngineFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_notfoundroute_with_path_set_to_request_uri_when_route_could_not_be_resolved()", span="418-418"];
m7_415 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_notfoundroute_with_path_set_to_request_uri_when_route_could_not_be_resolved()", file="SparkViewEngineFixture.cs", label="var request = new FakeRequest(''GET'', ''/foo/bar'')", span="421-421"];
m7_416 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_notfoundroute_with_path_set_to_request_uri_when_route_could_not_be_resolved()", file="SparkViewEngineFixture.cs", label="var context = new NancyContext { Request = request }", span="422-422"];
m7_421 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_notfoundroute_with_path_set_to_request_uri_when_route_could_not_be_resolved()", file="SparkViewEngineFixture.cs", label="resolvedRoute.Description.Path.ShouldEqual(request.Path)", span="433-433"];
m7_417 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_notfoundroute_with_path_set_to_request_uri_when_route_could_not_be_resolved()", file="SparkViewEngineFixture.cs", label="var resolver = CreateResolver(x => x.AddGetRoute(''/bar/foo''))", span="423-423"];
m7_419 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_notfoundroute_with_path_set_to_request_uri_when_route_could_not_be_resolved()", file="SparkViewEngineFixture.cs", label="var resolvedRoute = resolver.Resolve(context).Item1", span="429-429"];
m7_418 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_notfoundroute_with_path_set_to_request_uri_when_route_could_not_be_resolved()", file="SparkViewEngineFixture.cs", label="A.CallTo(() => this.matcher.Match(''/foo/bar'', ''/bar/foo'', null)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(false)))", span="425-426"];
m7_420 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_notfoundroute_with_path_set_to_request_uri_when_route_could_not_be_resolved()", file="SparkViewEngineFixture.cs", label="resolvedRoute.ShouldBeOfType<NotFoundRoute>()", span="432-432"];
m7_422 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_notfoundroute_with_path_set_to_request_uri_when_route_could_not_be_resolved()", file="SparkViewEngineFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_notfoundroute_with_path_set_to_request_uri_when_route_could_not_be_resolved()", span="418-418"];
m7_86 [cluster="object.ShouldNotBeOfType<T>()", file="SparkViewEngineFixture.cs", label="Entry object.ShouldNotBeOfType<T>()", span="160-160"];
m7_15 [cluster="Unk.CallTo", file="SparkViewEngineFixture.cs", label="Entry Unk.CallTo", span=""];
m7_69 [cluster="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCache(System.Action<Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator>)", file="SparkViewEngineFixture.cs", label="Entry Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCache(System.Action<Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator>)", span="16-16"];
m7_84 [cluster="Nancy.NancyContext.NancyContext()", file="SparkViewEngineFixture.cs", label="Entry Nancy.NancyContext.NancyContext()", span="19-19"];
m7_91 [cluster="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator.AddGetRoute(string, string)", file="SparkViewEngineFixture.cs", label="Entry Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator.AddGetRoute(string, string)", span="61-61"];
m7_495 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="510-510"];
m7_19 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="23-23"];
m7_23 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="24-24"];
m7_26 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="27-27"];
m7_34 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="x.AddGetRoute(''/foo/bar'', this.expectedAction)", span="30-30"];
m7_37 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="32-32"];
m7_40 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="32-32"];
m7_43 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="35-35"];
m7_47 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="35-40"];
m7_58 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="44-44"];
m7_62 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="44-44"];
m7_20 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="this.moduleBuilder.BuildModule(A<NancyModule>.Ignored, A<NancyContext>.Ignored)", span="23-23"];
m7_21 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="23-23"];
m7_24 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="r.Arguments[0] as NancyModule", span="24-24"];
m7_25 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="24-24"];
m7_27 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="this.catalog.GetModuleByKey(A<string>.Ignored, A<NancyContext>.Ignored)", span="27-27"];
m7_28 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="27-27"];
m7_30 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="29-29"];
m7_31 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="HttpStatusCode.OK", span="29-29"];
m7_32 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="29-29"];
m7_33 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="30-30"];
m7_35 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="30-30"];
m7_38 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="this.catalog.GetModuleByKey(A<string>.Ignored, A<NancyContext>.Ignored)", span="32-32"];
m7_39 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="32-32"];
m7_41 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="this.expectedModule", span="32-32"];
m7_42 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="32-32"];
m7_44 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="this.matcher.Match(A<string>.Ignored, A<string>.Ignored, A<NancyContext>.Ignored)", span="35-35"];
m7_45 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="35-35"];
m7_48 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="new FakeRoutePatternMatchResult(c =>\r\n                {\r\n                    c.IsMatch(((string)x.Arguments[0]).Equals(((string)x.Arguments[1])));\r\n                    c.AddParameter(''foo'', ''bar'');\r\n                })", span="36-40"];
m7_52 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="c.IsMatch(((string)x.Arguments[0]).Equals(((string)x.Arguments[1])))", span="38-38"];
m7_49 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="35-40"];
m7_53 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="c.AddParameter(''foo'', ''bar'')", span="39-39"];
m7_51 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="36-40"];
m7_54 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="36-40"];
m7_59 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="moduleKeyGenerator.GetKeyForModuleType(A<Type>._)", span="44-44"];
m7_60 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="44-44"];
m7_63 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="(string) x.Arguments[0]", span="44-44"];
m7_64 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="44-44"];
m7_88 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="68-68"];
m7_89 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="x.AddGetRoute(''/foo/bar'', ''module-key'')", span="68-68"];
m7_90 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="68-68"];
m7_102 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="87-87"];
m7_103 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="x.AddGetRoute(''/foo/bar'', ''module-key'')", span="87-87"];
m7_104 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="87-87"];
m7_123 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="this.matcher.Match(request.Path, ''/foo/{bar}'', A<NancyContext>.Ignored)", span="112-112"];
m7_129 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="this.catalog.GetModuleByKey(''first-module-key-parameters'', context)", span="119-119"];
m7_115 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="105-108"];
m7_120 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="x.AddGetRoute(''/foo/{bar}'', this.expectedAction)", span="110-110"];
m7_122 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="112-112"];
m7_126 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="x.IsMatch(true).AddParameter(''bar'', ''fake value'')", span="113-113"];
m7_128 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="119-119"];
m7_116 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="x.AddGetRoute(''/foo/{bar}'', ''first-module-key-parameters'')", span="106-106"];
m7_117 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="x.AddGetRoute(''/foo/{bar}'', ''second-module-key-parameters'')", span="107-107"];
m7_118 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="105-108"];
m7_119 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="110-110"];
m7_121 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="110-110"];
m7_124 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="112-112"];
m7_125 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="113-113"];
m7_127 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="113-113"];
m7_130 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="119-119"];
m7_146 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="this.matcher.Match(request.Path, ''/foo/{bar}'', null)", span="134-134"];
m7_153 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="this.matcher.Match(request.Path, ''/foo/{bar}/{foo}'', A<NancyContext>.Ignored)", span="137-137"];
m7_159 [cluster="lambda expression", color=red, community=0, file="SparkViewEngineFixture.cs", label="8: this.catalog.GetModuleByKey(''module-key-two-parameters'', context)", span="146-146"];
m7_141 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="129-132"];
m7_145 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="134-134"];
m7_150 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="x.IsMatch(true).AddParameter(''bar'', ''fake value'')", span="135-135"];
m7_152 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="137-137"];
m7_156 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="x.IsMatch(true)\r\n                    .AddParameter(''foo'', ''fake value'')\r\n                    .AddParameter(''bar'', ''fake value 2'')", span="138-140"];
m7_158 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="146-146"];
m7_142 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="x.AddGetRoute(''/foo/{bar}/{foo}'', ''module-key-two-parameters'')", span="130-130"];
m7_143 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="x.AddGetRoute(''/foo/{bar}'', ''module-key-one-parameter'')", span="131-131"];
m7_144 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="129-132"];
m7_147 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="134-134"];
m7_149 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="135-135"];
m7_151 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="135-135"];
m7_154 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="137-137"];
m7_155 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="138-140"];
m7_157 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="138-140"];
m7_160 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="146-146"];
m7_180 [cluster="lambda expression", color=red, community=0, file="SparkViewEngineFixture.cs", label="0: this.matcher.Match(request.Path, ''/foo/bar'', null)", span="166-166"];
m7_186 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="this.matcher.Match(request.Path, ''/foo/{bar}'', null)", span="169-169"];
m7_192 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="this.matcher.Match(request.Path, ''/foo/{bar}'', null)", span="172-172"];
m7_198 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="this.catalog.GetModuleByKey(''module-key-no-parameters'', context)", span="180-180"];
m7_171 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="156-164"];
m7_179 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="166-166"];
m7_183 [cluster="lambda expression", color=red, community=0, file="SparkViewEngineFixture.cs", label="7: x.IsMatch(true)", span="167-167"];
m7_185 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="169-169"];
m7_189 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="x.IsMatch(true).AddParameter(''bar'', ''fake value'')", span="170-170"];
m7_191 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="172-172"];
m7_195 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="x.IsMatch(true)\r\n                    .AddParameter(''foo'', ''fake value'')\r\n                    .AddParameter(''bar'', ''fake value'')", span="173-175"];
m7_197 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="180-180"];
m7_172 [cluster="lambda expression", color=red, community=0, file="SparkViewEngineFixture.cs", label="4: x.AddGetRoute(''/foo/{bar}'', ''module-key-parameters'')", span="158-158"];
m7_173 [cluster="lambda expression", color=red, community=0, file="SparkViewEngineFixture.cs", label="0: x.AddGetRoute(''/{foo}/{bar}'', ''module-key-two-parameters'')", span="159-159"];
m7_174 [cluster="lambda expression", color=red, community=0, file="SparkViewEngineFixture.cs", label="0: x.AddGetRoute(''/foo/bar'', ''module-key-no-parameters'')", span="160-160"];
m7_175 [cluster="lambda expression", color=red, community=0, file="SparkViewEngineFixture.cs", label="0: x.AddGetRoute(''/foo/bar'', ''module-key-no-parameters-second'')", span="161-161"];
m7_176 [cluster="lambda expression", color=red, community=0, file="SparkViewEngineFixture.cs", label="0: x.AddGetRoute(''/foo/{bar}'', ''module-key-parameters'')", span="162-162"];
m7_177 [cluster="lambda expression", color=red, community=0, file="SparkViewEngineFixture.cs", label="0: x.AddGetRoute(''/{foo}/{bar}'', ''module-key-two-parameters'')", span="163-163"];
m7_178 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="156-164"];
m7_181 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="166-166"];
m7_182 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="167-167"];
m7_184 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="167-167"];
m7_187 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="169-169"];
m7_188 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="170-170"];
m7_190 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="170-170"];
m7_193 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="172-172"];
m7_194 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="173-175"];
m7_196 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="173-175"];
m7_199 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="180-180"];
m7_221 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="this.matcher.Match(request.Path, ''/foo/bar/{two}'', A<NancyContext>.Ignored)", span="202-202"];
m7_227 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="this.matcher.Match(request.Path, ''/foo/{bar}/{two}'', A<NancyContext>.Ignored)", span="205-205"];
m7_233 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="this.matcher.Match(request.Path, ''/foo/{bar}'', A<NancyContext>.Ignored)", span="210-210"];
m7_239 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="this.catalog.GetModuleByKey(''module-key-second'', context)", span="217-217"];
m7_211 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="192-198"];
m7_218 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="x.AddGetRoute(''/foo/bar/{two}'', this.expectedAction)", span="200-200"];
m7_220 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="202-202"];
m7_224 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="x.IsMatch(true).AddParameter(''two'', ''fake values'')", span="203-203"];
m7_226 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="205-205"];
m7_230 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="x.IsMatch(true)\r\n                    .AddParameter(''bar'', ''fake values'')\r\n                    .AddParameter(''two'', ''fake values'')", span="206-208"];
m7_232 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="210-210"];
m7_236 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="x.IsMatch(true).AddParameter(''bar'', ''fake value'')", span="211-211"];
m7_238 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="217-217"];
m7_212 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="x.AddGetRoute(''/foo/{bar}'', ''module-key-first'')", span="194-194"];
m7_213 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="x.AddGetRoute(''/foo/{bar}/{two}'', ''module-key-third'')", span="195-195"];
m7_214 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="x.AddGetRoute(''/foo/bar/{two}'', ''module-key-second'')", span="196-196"];
m7_215 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="x.AddGetRoute(''/foo/{bar}/{two}'', ''module-key-third'')", span="197-197"];
m7_216 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="192-198"];
m7_217 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="200-200"];
m7_219 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="200-200"];
m7_222 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="202-202"];
m7_223 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="203-203"];
m7_225 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="203-203"];
m7_228 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="205-205"];
m7_229 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="206-208"];
m7_231 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="206-208"];
m7_234 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="210-210"];
m7_235 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="211-211"];
m7_237 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="211-211"];
m7_240 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="217-217"];
m7_256 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="this.matcher.Match(request.Path, ''/'', A<NancyContext>.Ignored)", span="232-232"];
m7_262 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="this.matcher.Match(request.Path, ''/{name}'', A<NancyContext>.Ignored)", span="234-234"];
m7_268 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="this.catalog.GetModuleByKey(''module-key-first'', context)", span="241-241"];
m7_250 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="226-230"];
m7_255 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="232-232"];
m7_259 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="x.IsMatch(true)", span="233-233"];
m7_261 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="234-234"];
m7_265 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="x.IsMatch(true).AddParameter(''name'', ''fake values'')", span="235-235"];
m7_267 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="241-241"];
m7_251 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="x.AddGetRoute(''/{name}'', ''module-key-second'')", span="227-227"];
m7_252 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="x.AddGetRoute(''/'', ''module-key-first'')", span="228-228"];
m7_253 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="x.AddGetRoute(''/{name}'', ''module-key-second'')", span="229-229"];
m7_254 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="226-230"];
m7_257 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="232-232"];
m7_258 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="233-233"];
m7_260 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="233-233"];
m7_263 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="234-234"];
m7_264 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="235-235"];
m7_266 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="235-235"];
m7_269 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="241-241"];
m7_282 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="this.matcher.Match(request.Path, A<string>.Ignored, A<NancyContext>.Ignored)", span="256-256"];
m7_277 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="250-250"];
m7_281 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="256-256"];
m7_278 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="x.AddGetRoute(''/foo/bar'')", span="250-250"];
m7_279 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="250-250"];
m7_283 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="256-256"];
m7_295 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="this.matcher.Match(A<string>.Ignored, A<string>.Ignored, context)", span="271-271"];
m7_291 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="265-265"];
m7_294 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="271-271"];
m7_292 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="x.AddGetRoute(''/foo/bar'')", span="265-265"];
m7_293 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="265-265"];
m7_296 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="271-271"];
m7_306 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="281-285"];
m7_311 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="291-291"];
m7_314 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="292-292"];
m7_317 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="293-293"];
m7_307 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="x.AddGetRoute(''/foo/bar'')", span="282-282"];
m7_308 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="x.AddGetRoute(''/bar/foo'')", span="283-283"];
m7_309 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="x.AddGetRoute(''/foobar'')", span="284-284"];
m7_310 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="281-285"];
m7_312 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="this.matcher.Match(A<string>.Ignored, ''/foo/bar'', A<NancyContext>.Ignored)", span="291-291"];
m7_313 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="291-291"];
m7_315 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="this.matcher.Match(A<string>.Ignored, ''/bar/foo'', A<NancyContext>.Ignored)", span="292-292"];
m7_316 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="292-292"];
m7_318 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="this.matcher.Match(A<string>.Ignored, ''/foobar'', A<NancyContext>.Ignored)", span="293-293"];
m7_319 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="293-293"];
m7_330 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="302-302"];
m7_331 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="x.AddGetRoute(''/foo/bar'')", span="302-302"];
m7_332 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="302-302"];
m7_343 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="319-319"];
m7_344 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="x.AddGetRoute(''/foo/bar'')", span="319-319"];
m7_345 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="319-319"];
m7_357 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="337-340"];
m7_358 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="x.AddGetRoute(''/foo/bar'')", span="338-338"];
m7_359 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="x.AddPutRoute(''/foo/bar'')", span="339-339"];
m7_360 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="337-340"];
m7_373 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="this.moduleBuilder.BuildModule(this.expectedModule, context)", span="363-363"];
m7_369 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="357-357"];
m7_372 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="363-363"];
m7_370 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="x.AddGetRoute(''/foo/bar'')", span="357-357"];
m7_371 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="357-357"];
m7_374 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="363-363"];
m7_385 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="372-372"];
m7_389 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="x.AddGetRoute(''/bar/foo'')", span="374-374"];
m7_392 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="375-375"];
m7_386 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="x.AddGetRoute(''/foo/bar'')", span="372-372"];
m7_387 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="372-372"];
m7_388 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="374-374"];
m7_390 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="374-374"];
m7_393 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="this.moduleBuilder.BuildModule(A<NancyModule>.Ignored, A<NancyContext>.Ignored)", span="375-375"];
m7_394 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="375-375"];
m7_403 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="391-391"];
m7_404 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="x.AddGetRoute(''/foo/bar'')", span="391-391"];
m7_405 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="391-391"];
m7_423 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="423-423"];
m7_426 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="425-425"];
m7_430 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="x.IsMatch(false)", span="426-426"];
m7_424 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="x.AddGetRoute(''/bar/foo'')", span="423-423"];
m7_425 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="423-423"];
m7_427 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="this.matcher.Match(''/foo/bar'', ''/bar/foo'', null)", span="425-425"];
m7_428 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="425-425"];
m7_429 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="426-426"];
m7_431 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="426-426"];
m7_441 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="442-442"];
m7_442 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="x.AddGetRoute(''/bar/foo'')", span="442-442"];
m7_443 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="442-442"];
m7_492 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="moduleCatalog.GetAllModules(A<NancyContext>.Ignored)", span="509-509"];
m7_496 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="moduleCatalog.GetModuleByKey(A<string>.Ignored, A<NancyContext>.Ignored)", span="510-510"];
m7_491 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Entry lambda expression", span="509-509"];
m7_493 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="509-509"];
m7_497 [cluster="lambda expression", file="SparkViewEngineFixture.cs", label="Exit lambda expression", span="510-510"];
m7_200 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", file="SparkViewEngineFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", span="184-184"];
m7_201 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", file="SparkViewEngineFixture.cs", label="var request = new FakeRequest(''get'', ''/foo/bar/me'')", span="189-189"];
m7_202 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", file="SparkViewEngineFixture.cs", label="var context = new NancyContext { Request = request }", span="190-190"];
m7_205 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", file="SparkViewEngineFixture.cs", label="A.CallTo(() => this.matcher.Match(request.Path, ''/foo/bar/{two}'', A<NancyContext>.Ignored)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(true).AddParameter(''two'', ''fake values'')))", span="202-203"];
m7_206 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", file="SparkViewEngineFixture.cs", label="A.CallTo(() => this.matcher.Match(request.Path, ''/foo/{bar}/{two}'', A<NancyContext>.Ignored)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(true)\r\n                    .AddParameter(''bar'', ''fake values'')\r\n                    .AddParameter(''two'', ''fake values'')))", span="205-208"];
m7_207 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", file="SparkViewEngineFixture.cs", label="A.CallTo(() => this.matcher.Match(request.Path, ''/foo/{bar}'', A<NancyContext>.Ignored)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(true).AddParameter(''bar'', ''fake value'')))", span="210-211"];
m7_203 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", file="SparkViewEngineFixture.cs", label="var resolver = CreateResolver(x =>\r\n            {\r\n                x.AddGetRoute(''/foo/{bar}'', ''module-key-first'');\r\n                x.AddGetRoute(''/foo/{bar}/{two}'', ''module-key-third'');\r\n                x.AddGetRoute(''/foo/bar/{two}'', ''module-key-second'');\r\n                x.AddGetRoute(''/foo/{bar}/{two}'', ''module-key-third'');\r\n            })", span="192-198"];
m7_208 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", file="SparkViewEngineFixture.cs", label="resolver.Resolve(context)", span="214-214"];
m7_209 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", file="SparkViewEngineFixture.cs", label="A.CallTo(() => this.catalog.GetModuleByKey(''module-key-second'', context)).MustHaveHappened()", span="217-217"];
m7_204 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", file="SparkViewEngineFixture.cs", label="this.expectedModule = new FakeNancyModule(x => x.AddGetRoute(''/foo/bar/{two}'', this.expectedAction))", span="200-200"];
m7_210 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", file="SparkViewEngineFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_the_route_with_the_most_specific_path_matches()", span="184-184"];
m7_391 [cluster="Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModuleConfigurator.AddGetRoute(string)", file="SparkViewEngineFixture.cs", label="Entry Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModuleConfigurator.AddGetRoute(string)", span="36-36"];
m7_395 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_path_set_to_request_uri_when_single_route_could_be_resolved()", file="SparkViewEngineFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_path_set_to_request_uri_when_single_route_could_be_resolved()", span="386-386"];
m7_396 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_path_set_to_request_uri_when_single_route_could_be_resolved()", file="SparkViewEngineFixture.cs", label="var request = new FakeRequest(''GET'', ''/foo/bar'')", span="389-389"];
m7_397 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_path_set_to_request_uri_when_single_route_could_be_resolved()", file="SparkViewEngineFixture.cs", label="var context = new NancyContext { Request = request }", span="390-390"];
m7_401 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_path_set_to_request_uri_when_single_route_could_be_resolved()", file="SparkViewEngineFixture.cs", label="resolvedRoute.Item1.Description.Path.ShouldEqual(request.Path)", span="398-398"];
m7_398 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_path_set_to_request_uri_when_single_route_could_be_resolved()", file="SparkViewEngineFixture.cs", label="var resolver = CreateResolver(x => x.AddGetRoute(''/foo/bar''))", span="391-391"];
m7_399 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_path_set_to_request_uri_when_single_route_could_be_resolved()", file="SparkViewEngineFixture.cs", label="var resolvedRoute = resolver.Resolve(context)", span="394-394"];
m7_400 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_path_set_to_request_uri_when_single_route_could_be_resolved()", file="SparkViewEngineFixture.cs", label="resolvedRoute.ShouldNotBeOfType<NotFoundRoute>()", span="397-397"];
m7_402 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_path_set_to_request_uri_when_single_route_could_be_resolved()", file="SparkViewEngineFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_path_set_to_request_uri_when_single_route_could_be_resolved()", span="386-386"];
m7_329 [cluster="object.ShouldNotBeNull()", file="SparkViewEngineFixture.cs", label="Entry object.ShouldNotBeNull()", span="140-140"];
m7_65 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.CreateResolver(System.Action<Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator>)", file="SparkViewEngineFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.CreateResolver(System.Action<Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator>)", span="47-47"];
m7_66 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.CreateResolver(System.Action<Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator>)", file="SparkViewEngineFixture.cs", label="var cache = \r\n                new FakeRouteCache(closure)", span="49-50"];
m7_67 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.CreateResolver(System.Action<Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator>)", file="SparkViewEngineFixture.cs", label="return CreateResolver(cache);", span="52-52"];
m7_68 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.CreateResolver(System.Action<Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator>)", file="SparkViewEngineFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.CreateResolver(System.Action<Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator>)", span="47-47"];
m7_356 [cluster="Nancy.Routing.Route.Invoke(Nancy.DynamicDictionary)", file="SparkViewEngineFixture.cs", label="Entry Nancy.Routing.Route.Invoke(Nancy.DynamicDictionary)", span="54-54"];
m7_0 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", file="SparkViewEngineFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", span="20-20"];
m7_1 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", file="SparkViewEngineFixture.cs", label="this.moduleBuilder = A.Fake<INancyModuleBuilder>()", span="22-22"];
m7_2 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", file="SparkViewEngineFixture.cs", label="A.CallTo(() => this.moduleBuilder.BuildModule(A<NancyModule>.Ignored, A<NancyContext>.Ignored)).\r\n                ReturnsLazily(r => r.Arguments[0] as NancyModule)", span="23-24"];
m7_3 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", file="SparkViewEngineFixture.cs", label="this.catalog = A.Fake<INancyModuleCatalog>()", span="26-26"];
m7_4 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", file="SparkViewEngineFixture.cs", label="A.CallTo(() => this.catalog.GetModuleByKey(A<string>.Ignored, A<NancyContext>.Ignored)).Returns(expectedModule)", span="27-27"];
m7_5 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", file="SparkViewEngineFixture.cs", label="this.expectedAction = x => HttpStatusCode.OK", span="29-29"];
m7_6 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", file="SparkViewEngineFixture.cs", label="this.expectedModule = new FakeNancyModule(x => x.AddGetRoute(''/foo/bar'', this.expectedAction))", span="30-30"];
m7_7 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", file="SparkViewEngineFixture.cs", label="A.CallTo(() => this.catalog.GetModuleByKey(A<string>.Ignored, A<NancyContext>.Ignored)).ReturnsLazily(() => this.expectedModule)", span="32-32"];
m7_8 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", file="SparkViewEngineFixture.cs", label="this.matcher = A.Fake<IRoutePatternMatcher>()", span="34-34"];
m7_9 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", file="SparkViewEngineFixture.cs", label="A.CallTo(() => this.matcher.Match(A<string>.Ignored, A<string>.Ignored, A<NancyContext>.Ignored)).ReturnsLazily(x =>\r\n                new FakeRoutePatternMatchResult(c =>\r\n                {\r\n                    c.IsMatch(((string)x.Arguments[0]).Equals(((string)x.Arguments[1])));\r\n                    c.AddParameter(''foo'', ''bar'');\r\n                }))", span="35-40"];
m7_10 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", file="SparkViewEngineFixture.cs", label="this.contextFactory = A.Fake<INancyContextFactory>()", span="42-42"];
m7_11 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", file="SparkViewEngineFixture.cs", label="this.moduleKeyGenerator = A.Fake<IModuleKeyGenerator>()", span="43-43"];
m7_12 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", file="SparkViewEngineFixture.cs", label="A.CallTo(() => moduleKeyGenerator.GetKeyForModuleType(A<Type>._)).ReturnsLazily(x => (string) x.Arguments[0])", span="44-44"];
m7_13 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", file="SparkViewEngineFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", span="20-20"];
m7_406 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.should_return_notfoundroute_with_path_set_to_request_uri_when_route_cache_is_empty()", file="SparkViewEngineFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.should_return_notfoundroute_with_path_set_to_request_uri_when_route_cache_is_empty()", span="402-402"];
m7_407 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.should_return_notfoundroute_with_path_set_to_request_uri_when_route_cache_is_empty()", file="SparkViewEngineFixture.cs", label="var request = new FakeRequest(''GET'', ''/foo/bar'')", span="405-405"];
m7_408 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.should_return_notfoundroute_with_path_set_to_request_uri_when_route_cache_is_empty()", file="SparkViewEngineFixture.cs", label="var context = new NancyContext { Request = request }", span="406-406"];
m7_412 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.should_return_notfoundroute_with_path_set_to_request_uri_when_route_cache_is_empty()", file="SparkViewEngineFixture.cs", label="resolvedRoute.Description.Path.ShouldEqual(request.Path)", span="414-414"];
m7_409 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.should_return_notfoundroute_with_path_set_to_request_uri_when_route_cache_is_empty()", file="SparkViewEngineFixture.cs", label="var resolver = CreateResolver(FakeRouteCache.Empty)", span="407-407"];
m7_410 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.should_return_notfoundroute_with_path_set_to_request_uri_when_route_cache_is_empty()", file="SparkViewEngineFixture.cs", label="var resolvedRoute = resolver.Resolve(context).Item1", span="410-410"];
m7_411 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.should_return_notfoundroute_with_path_set_to_request_uri_when_route_cache_is_empty()", file="SparkViewEngineFixture.cs", label="resolvedRoute.ShouldBeOfType<NotFoundRoute>()", span="413-413"];
m7_413 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.should_return_notfoundroute_with_path_set_to_request_uri_when_route_cache_is_empty()", file="SparkViewEngineFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.should_return_notfoundroute_with_path_set_to_request_uri_when_route_cache_is_empty()", span="402-402"];
m7_432 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_head_request_when_route_is_defined_for_get()", file="SparkViewEngineFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_head_request_when_route_is_defined_for_get()", span="437-437"];
m7_433 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_head_request_when_route_is_defined_for_get()", file="SparkViewEngineFixture.cs", label="var request = new FakeRequest(''HEAD'', ''/foo/bar'')", span="440-440"];
m7_434 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_head_request_when_route_is_defined_for_get()", file="SparkViewEngineFixture.cs", label="var context = new NancyContext { Request = request }", span="441-441"];
m7_435 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_head_request_when_route_is_defined_for_get()", file="SparkViewEngineFixture.cs", label="var resolver = CreateResolver(x => x.AddGetRoute(''/bar/foo''))", span="442-442"];
m7_436 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_head_request_when_route_is_defined_for_get()", file="SparkViewEngineFixture.cs", label="var resolvedRoute = resolver.Resolve(context)", span="445-445"];
m7_437 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_head_request_when_route_is_defined_for_get()", file="SparkViewEngineFixture.cs", label="resolvedRoute.ShouldNotBeNull()", span="448-448"];
m7_438 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_head_request_when_route_is_defined_for_get()", file="SparkViewEngineFixture.cs", label="resolvedRoute.ShouldNotBeOfType<NotFoundRoute>()", span="449-449"];
m7_439 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_head_request_when_route_is_defined_for_get()", file="SparkViewEngineFixture.cs", label="resolvedRoute.ShouldNotBeOfType<MethodNotAllowedRoute>()", span="450-450"];
m7_440 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_head_request_when_route_is_defined_for_get()", file="SparkViewEngineFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_allow_head_request_when_route_is_defined_for_get()", span="437-437"];
m7_376 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_module_returned_by_module_builder()", file="SparkViewEngineFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_module_returned_by_module_builder()", span="367-367"];
m7_377 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_module_returned_by_module_builder()", file="SparkViewEngineFixture.cs", label="var request = new FakeRequest(''GET'', ''/foo/bar'')", span="370-370"];
m7_378 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_module_returned_by_module_builder()", file="SparkViewEngineFixture.cs", label="var context = new NancyContext { Request = request }", span="371-371"];
m7_379 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_module_returned_by_module_builder()", file="SparkViewEngineFixture.cs", label="var resolver = CreateResolver(x => x.AddGetRoute(''/foo/bar''))", span="372-372"];
m7_382 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_module_returned_by_module_builder()", file="SparkViewEngineFixture.cs", label="var route = resolver.Resolve(context)", span="379-379"];
m7_380 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_module_returned_by_module_builder()", file="SparkViewEngineFixture.cs", label="var moduleReturnedByBuilder = new FakeNancyModule(x => x.AddGetRoute(''/bar/foo''))", span="374-374"];
m7_381 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_module_returned_by_module_builder()", file="SparkViewEngineFixture.cs", label="A.CallTo(() => this.moduleBuilder.BuildModule(A<NancyModule>.Ignored, A<NancyContext>.Ignored)).Returns(\r\n                moduleReturnedByBuilder)", span="375-376"];
m7_383 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_module_returned_by_module_builder()", file="SparkViewEngineFixture.cs", label="route.Item1.Description.Path.ShouldEqual(''/bar/foo'')", span="382-382"];
m7_384 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_module_returned_by_module_builder()", file="SparkViewEngineFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_with_module_returned_by_module_builder()", span="367-367"];
m7_16 [cluster="Unk.ReturnsLazily", file="SparkViewEngineFixture.cs", label="Entry Unk.ReturnsLazily", span=""];
m7_241 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_choose_root_route_over_one_with_capture_if_requesting_root_uri()", file="SparkViewEngineFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_choose_root_route_over_one_with_capture_if_requesting_root_uri()", span="221-221"];
m7_242 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_choose_root_route_over_one_with_capture_if_requesting_root_uri()", file="SparkViewEngineFixture.cs", label="var request = new FakeRequest(''get'', ''/'')", span="223-223"];
m7_243 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_choose_root_route_over_one_with_capture_if_requesting_root_uri()", file="SparkViewEngineFixture.cs", label="var context = new NancyContext { Request = request }", span="224-224"];
m7_245 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_choose_root_route_over_one_with_capture_if_requesting_root_uri()", file="SparkViewEngineFixture.cs", label="A.CallTo(() => this.matcher.Match(request.Path, ''/'', A<NancyContext>.Ignored)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(true)))", span="232-233"];
m7_246 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_choose_root_route_over_one_with_capture_if_requesting_root_uri()", file="SparkViewEngineFixture.cs", label="A.CallTo(() => this.matcher.Match(request.Path, ''/{name}'', A<NancyContext>.Ignored)).Returns(\r\n                new FakeRoutePatternMatchResult(x => x.IsMatch(true).AddParameter(''name'', ''fake values'')))", span="234-235"];
m7_244 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_choose_root_route_over_one_with_capture_if_requesting_root_uri()", file="SparkViewEngineFixture.cs", label="var resolver = CreateResolver(x => {\r\n                x.AddGetRoute(''/{name}'', ''module-key-second'');\r\n                x.AddGetRoute(''/'', ''module-key-first'');\r\n                x.AddGetRoute(''/{name}'', ''module-key-second'');\r\n            })", span="226-230"];
m7_247 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_choose_root_route_over_one_with_capture_if_requesting_root_uri()", file="SparkViewEngineFixture.cs", label="resolver.Resolve(context)", span="238-238"];
m7_248 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_choose_root_route_over_one_with_capture_if_requesting_root_uri()", file="SparkViewEngineFixture.cs", label="A.CallTo(() => this.catalog.GetModuleByKey(''module-key-first'', context)).MustHaveHappened()", span="241-241"];
m7_249 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_choose_root_route_over_one_with_capture_if_requesting_root_uri()", file="SparkViewEngineFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_choose_root_route_over_one_with_capture_if_requesting_root_uri()", span="221-221"];
m7_466 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_whos_filter_returns_true_when_there_is_also_a_matching_route_with_a_failing_filter()", file="SparkViewEngineFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_whos_filter_returns_true_when_there_is_also_a_matching_route_with_a_failing_filter()", span="488-488"];
m7_467 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_whos_filter_returns_true_when_there_is_also_a_matching_route_with_a_failing_filter()", file="SparkViewEngineFixture.cs", label="var moduleCatalog = new FakeModuleCatalog()", span="491-491"];
m7_468 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_whos_filter_returns_true_when_there_is_also_a_matching_route_with_a_failing_filter()", file="SparkViewEngineFixture.cs", label="var routeCache = new RouteCache(moduleCatalog, new FakeModuleKeyGenerator(), A.Fake<INancyContextFactory>())", span="492-492"];
m7_469 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_whos_filter_returns_true_when_there_is_also_a_matching_route_with_a_failing_filter()", file="SparkViewEngineFixture.cs", label="var specificResolver = new DefaultRouteResolver(moduleCatalog, this.matcher, this.moduleBuilder, routeCache)", span="493-493"];
m7_470 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_whos_filter_returns_true_when_there_is_also_a_matching_route_with_a_failing_filter()", file="SparkViewEngineFixture.cs", label="var request = new FakeRequest(''GET'', ''/filt'')", span="494-494"];
m7_472 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_whos_filter_returns_true_when_there_is_also_a_matching_route_with_a_failing_filter()", file="SparkViewEngineFixture.cs", label="var route = specificResolver.Resolve(context).Item1", span="498-498"];
m7_471 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_whos_filter_returns_true_when_there_is_also_a_matching_route_with_a_failing_filter()", file="SparkViewEngineFixture.cs", label="var context = new NancyContext { Request = request }", span="495-495"];
m7_473 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_whos_filter_returns_true_when_there_is_also_a_matching_route_with_a_failing_filter()", file="SparkViewEngineFixture.cs", label="route.Description.Condition(context).ShouldBeTrue()", span="501-501"];
m7_474 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_whos_filter_returns_true_when_there_is_also_a_matching_route_with_a_failing_filter()", file="SparkViewEngineFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_route_whos_filter_returns_true_when_there_is_also_a_matching_route_with_a_failing_filter()", span="488-488"];
m7_280 [cluster="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator.AddGetRoute(string)", file="SparkViewEngineFixture.cs", label="Entry Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator.AddGetRoute(string)", span="54-54"];
m7_489 [cluster="Nancy.Tests.Fakes.FakeNancyModuleWithPreAndPostHooks.FakeNancyModuleWithPreAndPostHooks()", file="SparkViewEngineFixture.cs", label="Entry Nancy.Tests.Fakes.FakeNancyModuleWithPreAndPostHooks.FakeNancyModuleWithPreAndPostHooks()", span="4-4"];
m7_17 [cluster="Unk.Returns", file="SparkViewEngineFixture.cs", label="Entry Unk.Returns", span=""];
m7_456 [cluster="object.ShouldBeOfType(System.Type)", file="SparkViewEngineFixture.cs", label="Entry object.ShouldBeOfType(System.Type)", span="155-155"];
m7_355 [cluster="Nancy.DynamicDictionary.DynamicDictionary()", file="SparkViewEngineFixture.cs", label="Entry Nancy.DynamicDictionary.DynamicDictionary()", span="7-7"];
m7_46 [cluster="Unk.Match", file="SparkViewEngineFixture.cs", label="Entry Unk.Match", span=""];
m7_50 [cluster="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResult(System.Action<Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator>)", file="SparkViewEngineFixture.cs", label="Entry Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResult(System.Action<Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator>)", span="13-13"];
m7_70 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.CreateResolver(Nancy.Routing.IRouteCache)", file="SparkViewEngineFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.CreateResolver(Nancy.Routing.IRouteCache)", span="55-55"];
m7_71 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.CreateResolver(Nancy.Routing.IRouteCache)", file="SparkViewEngineFixture.cs", label="return new DefaultRouteResolver(this.catalog, this.matcher, this.moduleBuilder, cache);", span="57-57"];
m7_72 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.CreateResolver(Nancy.Routing.IRouteCache)", file="SparkViewEngineFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.CreateResolver(Nancy.Routing.IRouteCache)", span="55-55"];
m7_74 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_parameters_on_resolved_route_to_parameteres_that_was_matched()", file="SparkViewEngineFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_parameters_on_resolved_route_to_parameteres_that_was_matched()", span="61-61"];
m7_75 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_parameters_on_resolved_route_to_parameteres_that_was_matched()", file="SparkViewEngineFixture.cs", label="var request = new FakeRequest(''get'', ''/foo/bar'')", span="64-64"];
m7_76 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_parameters_on_resolved_route_to_parameteres_that_was_matched()", file="SparkViewEngineFixture.cs", label="var context = new NancyContext {Request = request}", span="65-65"];
m7_77 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_parameters_on_resolved_route_to_parameteres_that_was_matched()", file="SparkViewEngineFixture.cs", label="var resolver = \r\n                CreateResolver(x => x.AddGetRoute(''/foo/bar'', ''module-key''))", span="67-68"];
m7_78 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_parameters_on_resolved_route_to_parameteres_that_was_matched()", file="SparkViewEngineFixture.cs", label="var resolvedRoute = resolver.Resolve(context)", span="71-71"];
m7_79 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_parameters_on_resolved_route_to_parameteres_that_was_matched()", file="SparkViewEngineFixture.cs", label="resolvedRoute.ShouldNotBeOfType<NotFoundRoute>()", span="74-74"];
m7_80 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_parameters_on_resolved_route_to_parameteres_that_was_matched()", file="SparkViewEngineFixture.cs", label="resolvedRoute.ShouldNotBeOfType<MethodNotAllowedRoute>()", span="75-75"];
m7_81 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_parameters_on_resolved_route_to_parameteres_that_was_matched()", file="SparkViewEngineFixture.cs", label="((string)resolvedRoute.Item2[''foo'']).ShouldEqual(''bar'')", span="76-76"];
m7_82 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_parameters_on_resolved_route_to_parameteres_that_was_matched()", file="SparkViewEngineFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_parameters_on_resolved_route_to_parameteres_that_was_matched()", span="61-61"];
m7_36 [cluster="Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModuleConfigurator.AddGetRoute(string, System.Func<object, Nancy.Response>)", file="SparkViewEngineFixture.cs", label="Entry Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModuleConfigurator.AddGetRoute(string, System.Func<object, Nancy.Response>)", span="41-41"];
m7_498 [file="SparkViewEngineFixture.cs", label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", span=""];
m7_499 [file="SparkViewEngineFixture.cs", label="?", span=""];
m7_500 [file="SparkViewEngineFixture.cs", label=request, span=""];
m7_501 [file="SparkViewEngineFixture.cs", label=context, span=""];
m7_502 [file="SparkViewEngineFixture.cs", label=request, span=""];
m7_503 [file="SparkViewEngineFixture.cs", label=context, span=""];
m7_504 [file="SparkViewEngineFixture.cs", label=request, span=""];
m7_505 [file="SparkViewEngineFixture.cs", label=context, span=""];
m7_506 [file="SparkViewEngineFixture.cs", label=request, span=""];
m7_507 [file="SparkViewEngineFixture.cs", label=context, span=""];
m7_508 [file="SparkViewEngineFixture.cs", label=request, span=""];
m7_509 [file="SparkViewEngineFixture.cs", label=context, span=""];
m7_510 [file="SparkViewEngineFixture.cs", label=request, span=""];
m7_511 [file="SparkViewEngineFixture.cs", label=context, span=""];
m7_512 [file="SparkViewEngineFixture.cs", label=context, span=""];
m7_513 [file="SparkViewEngineFixture.cs", label=moduleCatalog, span=""];
m8_27 [cluster="Nancy.ViewEngines.Razor.Tests.TextResourceFinderFixture.Should_invoke_text_resource_with_member_name_when_not_chained()", file="TextResourceFinderFixture.cs", label="var result = (string)finder.foo", span="53-53"];
m8_113 [cluster="System.Collections.Generic.List<T>.List()", file="TextResourceFinderFixture.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m8_18 [cluster="Nancy.Request.Request(string, Nancy.Url, Nancy.IO.RequestStream, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, string, byte[])", file="TextResourceFinderFixture.cs", label="certificate != null && certificate.Length != 0", span="80-80"];
m8_19 [cluster="Nancy.Request.Request(string, Nancy.Url, Nancy.IO.RequestStream, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, string, byte[])", file="TextResourceFinderFixture.cs", label="this.ClientCertificate = new X509Certificate2(certificate)", span="82-82"];
m8_20 [cluster="Nancy.Request.Request(string, Nancy.Url, Nancy.IO.RequestStream, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, string, byte[])", color=red, community=0, file="TextResourceFinderFixture.cs", label="4: String.IsNullOrEmpty(this.Url.Path)", span="85-85"];
m8_21 [cluster="Nancy.Request.Request(string, Nancy.Url, Nancy.IO.RequestStream, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, string, byte[])", file="TextResourceFinderFixture.cs", label="this.Url.Path = ''/''", span="87-87"];
m8_116 [cluster="Unk.Any", file="TextResourceFinderFixture.cs", label="Entry Unk.Any", span=""];
m8_40 [cluster="Nancy.Request.GetCookieData()", file="TextResourceFinderFixture.cs", label="return cookieDictionary;", span="162-162"];
m8_41 [cluster="Nancy.Request.GetCookieData()", file="TextResourceFinderFixture.cs", label="var values = this.Headers[''cookie''].First().TrimEnd(';').Split(';')", span="165-165"];
m8_42 [cluster="Nancy.Request.GetCookieData()", file="TextResourceFinderFixture.cs", label="values.Select(c => c.Split(new[] { '=' }, 2))", span="166-166"];
m8_43 [cluster="Nancy.Request.GetCookieData()", file="TextResourceFinderFixture.cs", label="var cookieName = parts[0].Trim()", span="168-168"];
m8_35 [cluster="Nancy.ViewEngines.Razor.Tests.TextResourceFinderFixture.Should_invoke_text_resource_with_member_name_when_chained()", color=red, community=0, file="TextResourceFinderFixture.cs", label="1: A.CallTo(() => this.textResource[''foo.bar.other'', A<NancyContext>._]).MustHaveHappened()", span="67-67"];
m8_65 [cluster="Nancy.Request.ParseFormData()", file="TextResourceFinderFixture.cs", label="string.IsNullOrEmpty(this.Headers.ContentType)", span="218-218"];
m8_79 [cluster="Nancy.Request.ParseFormData()", file="TextResourceFinderFixture.cs", label="string.IsNullOrEmpty(httpMultipartBoundary.Filename)", span="245-245"];
m8_67 [cluster="Nancy.Request.ParseFormData()", file="TextResourceFinderFixture.cs", label="var contentType = this.Headers[''content-type''].First()", span="223-223"];
m8_70 [cluster="Nancy.Request.ParseFormData()", file="TextResourceFinderFixture.cs", label="var reader = new StreamReader(this.Body)", span="227-227"];
m8_71 [cluster="Nancy.Request.ParseFormData()", file="TextResourceFinderFixture.cs", label="this.form = reader.ReadToEnd().AsQueryDictionary()", span="228-228"];
m8_72 [cluster="Nancy.Request.ParseFormData()", file="TextResourceFinderFixture.cs", label="this.Body.Position = 0", span="229-229"];
m8_76 [cluster="Nancy.Request.ParseFormData()", file="TextResourceFinderFixture.cs", label="var multipart = new HttpMultipart(this.Body, boundary)", span="238-238"];
m8_82 [cluster="Nancy.Request.ParseFormData()", file="TextResourceFinderFixture.cs", label="this.files.Add(new HttpFile(httpMultipartBoundary))", span="254-254"];
m8_84 [cluster="Nancy.Request.ParseFormData()", file="TextResourceFinderFixture.cs", label="this.form[key] = formValues[key]", span="260-260"];
m8_85 [cluster="Nancy.Request.ParseFormData()", file="TextResourceFinderFixture.cs", label="this.Body.Position = 0", span="263-263"];
m8_66 [cluster="Nancy.Request.ParseFormData()", file="TextResourceFinderFixture.cs", label="return;", span="220-220"];
m8_78 [cluster="Nancy.Request.ParseFormData()", file="TextResourceFinderFixture.cs", label="multipart.GetBoundaries()", span="243-243"];
m8_80 [cluster="Nancy.Request.ParseFormData()", file="TextResourceFinderFixture.cs", label="var reader =\r\n                        new StreamReader(httpMultipartBoundary.Value)", span="247-248"];
m8_68 [cluster="Nancy.Request.ParseFormData()", file="TextResourceFinderFixture.cs", label="var mimeType = contentType.Split(';').First()", span="224-224"];
m8_75 [cluster="Nancy.Request.ParseFormData()", file="TextResourceFinderFixture.cs", label="var boundary = Regex.Match(contentType, @''boundary=''''?(?<token>[^\n\;\'''' ]*)'').Groups[''token''].Value", span="237-237"];
m8_69 [cluster="Nancy.Request.ParseFormData()", file="TextResourceFinderFixture.cs", label="mimeType.Equals(''application/x-www-form-urlencoded'', StringComparison.OrdinalIgnoreCase)", span="225-225"];
m8_73 [cluster="Nancy.Request.ParseFormData()", file="TextResourceFinderFixture.cs", label="!mimeType.Equals(''multipart/form-data'', StringComparison.OrdinalIgnoreCase)", span="232-232"];
m8_77 [cluster="Nancy.Request.ParseFormData()", file="TextResourceFinderFixture.cs", label="var formValues =\r\n                new NameValueCollection(StaticConfiguration.CaseSensitive ? StringComparer.InvariantCulture : StringComparer.InvariantCultureIgnoreCase)", span="240-241"];
m8_83 [cluster="Nancy.Request.ParseFormData()", file="TextResourceFinderFixture.cs", label="formValues.AllKeys.Where(key => key != null)", span="258-258"];
m8_81 [cluster="Nancy.Request.ParseFormData()", file="TextResourceFinderFixture.cs", label="formValues.Add(httpMultipartBoundary.Name, reader.ReadToEnd())", span="249-249"];
m8_74 [cluster="Nancy.Request.ParseFormData()", file="TextResourceFinderFixture.cs", label="return;", span="234-234"];
m8_86 [cluster="Nancy.Request.ParseFormData()", file="TextResourceFinderFixture.cs", label="Exit Nancy.Request.ParseFormData()", span="216-216"];
m8_118 [cluster="Unk.Join", file="TextResourceFinderFixture.cs", label="Entry Unk.Join", span=""];
m8_119 [cluster="string.Format(string, object)", file="TextResourceFinderFixture.cs", label="Entry string.Format(string, object)", span="0-0"];
m8_34 [cluster="Nancy.ViewEngines.Razor.Tests.TextResourceFinderFixture.Should_invoke_text_resource_with_member_name_when_chained()", file="TextResourceFinderFixture.cs", label="var result = (string)finder.foo.bar.other", span="64-64"];
m8_14 [cluster="Nancy.Request.Request(string, Nancy.Url, Nancy.IO.RequestStream, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, string, byte[])", file="TextResourceFinderFixture.cs", label="this.Query = url.Query.AsQueryDictionary()", span="72-72"];
m8_5 [cluster="Nancy.Request.Request(string, Nancy.Url, Nancy.IO.RequestStream, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, string, byte[])", file="TextResourceFinderFixture.cs", label="url == null", span="51-51"];
m8_49 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IEqualityComparer<TKey>)", file="TextResourceFinderFixture.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0"];
m8_115 [cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="TextResourceFinderFixture.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0"];
m8_93 [cluster="Nancy.HttpMultipart.GetBoundaries()", file="TextResourceFinderFixture.cs", label="Entry Nancy.HttpMultipart.GetBoundaries()", span="37-37"];
m8_50 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="TextResourceFinderFixture.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m8_55 [cluster="Unk.Trim", file="TextResourceFinderFixture.cs", label="Entry Unk.Trim", span=""];
m8_33 [cluster="Nancy.ViewEngines.Razor.Tests.TextResourceFinderFixture.Should_invoke_text_resource_with_member_name_when_chained()", file="TextResourceFinderFixture.cs", label="Entry Nancy.ViewEngines.Razor.Tests.TextResourceFinderFixture.Should_invoke_text_resource_with_member_name_when_chained()", span="60-60"];
m8_6 [cluster="Nancy.Request.Request(string, Nancy.Url, Nancy.IO.RequestStream, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, string, byte[])", file="TextResourceFinderFixture.cs", label="throw new ArgumentNullException(''url'');", span="53-53"];
m8_2 [cluster="Nancy.ViewEngines.Razor.Tests.TextResourceFinderFixture.TextResourceFinderFixture()", file="TextResourceFinderFixture.cs", label="this.textResource = A.Fake<ITextResource>()", span="18-18"];
m8_7 [cluster="Nancy.ViewEngines.Razor.Tests.TextResourceFinderFixture.Should_return_result_of_text_resource(string)", color=green, community=0, file="TextResourceFinderFixture.cs", label="8: Entry Nancy.ViewEngines.Razor.Tests.TextResourceFinderFixture.Should_return_result_of_text_resource(string)", span="25-25"];
m8_8 [cluster="Nancy.ViewEngines.Razor.Tests.TextResourceFinderFixture.Should_return_result_of_text_resource(string)", color=red, community=0, file="TextResourceFinderFixture.cs", label="8: A.CallTo(() => this.textResource[A<string>._, A<NancyContext>._]).Returns(text)", span="28-28"];
m8_9 [cluster="Nancy.ViewEngines.Razor.Tests.TextResourceFinderFixture.Should_return_result_of_text_resource(string)", file="TextResourceFinderFixture.cs", label="var result = (string)finder.name", span="31-31"];
m8_3 [cluster="Nancy.ViewEngines.Razor.Tests.TextResourceFinderFixture.TextResourceFinderFixture()", file="TextResourceFinderFixture.cs", label="this.finder = new TextResourceFinder(textResource, context)", span="19-19"];
m8_11 [cluster="Nancy.ViewEngines.Razor.Tests.TextResourceFinderFixture.Should_return_result_of_text_resource(string)", file="TextResourceFinderFixture.cs", label="Exit Nancy.ViewEngines.Razor.Tests.TextResourceFinderFixture.Should_return_result_of_text_resource(string)", span="25-25"];
m8_12 [cluster="Unk.CallTo", file="TextResourceFinderFixture.cs", label="Entry Unk.CallTo", span=""];
m8_13 [cluster="Unk.Returns", file="TextResourceFinderFixture.cs", label="Entry Unk.Returns", span=""];
m8_15 [cluster="lambda expression", file="TextResourceFinderFixture.cs", label="Entry lambda expression", span="28-28"];
m8_16 [cluster="lambda expression", color=red, community=0, file="TextResourceFinderFixture.cs", label="4: this.textResource[A<string>._, A<NancyContext>._]", span="28-28"];
m8_10 [cluster="Nancy.ViewEngines.Razor.Tests.TextResourceFinderFixture.Should_return_result_of_text_resource(string)", file="TextResourceFinderFixture.cs", label="result.ShouldEqual(text)", span="34-34"];
m8_4 [cluster="Nancy.ViewEngines.Razor.Tests.TextResourceFinderFixture.TextResourceFinderFixture()", file="TextResourceFinderFixture.cs", label="Exit Nancy.ViewEngines.Razor.Tests.TextResourceFinderFixture.TextResourceFinderFixture()", span="15-15"];
m8_23 [cluster="lambda expression", file="TextResourceFinderFixture.cs", label="Entry lambda expression", span="45-45"];
m8_17 [cluster="lambda expression", file="TextResourceFinderFixture.cs", label="Exit lambda expression", span="28-28"];
m8_22 [cluster="Nancy.Request.Request(string, Nancy.Url, Nancy.IO.RequestStream, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, string, byte[])", file="TextResourceFinderFixture.cs", label="this.ParseFormData()", span="90-90"];
m8_24 [cluster="lambda expression", color=red, community=0, file="TextResourceFinderFixture.cs", label="8: this.textResource[A<string>._, this.context]", span="45-45"];
m8_36 [cluster="Nancy.Request.RewriteMethod()", file="TextResourceFinderFixture.cs", label="Entry Nancy.Request.RewriteMethod()", span="266-266"];
m8_52 [cluster="string.TrimEnd(params char[])", file="TextResourceFinderFixture.cs", label="Entry string.TrimEnd(params char[])", span="0-0"];
m8_92 [cluster="System.Collections.Specialized.NameValueCollection.NameValueCollection(System.Collections.IEqualityComparer)", file="TextResourceFinderFixture.cs", label="Entry System.Collections.Specialized.NameValueCollection.NameValueCollection(System.Collections.IEqualityComparer)", span="0-0"];
m8_97 [cluster="Unk.Where", file="TextResourceFinderFixture.cs", label="Entry Unk.Where", span=""];
m8_101 [cluster="Nancy.Request.RewriteMethod()", file="TextResourceFinderFixture.cs", label="!this.Method.Equals(''POST'', StringComparison.OrdinalIgnoreCase)", span="268-268"];
m8_103 [cluster="Nancy.Request.RewriteMethod()", file="TextResourceFinderFixture.cs", label="var overrides =\r\n                new List<Tuple<string, string>>\r\n                {\r\n                    Tuple.Create(''_method form input element'', (string)this.Form[''_method'']),\r\n                    Tuple.Create(''X-HTTP-Method-Override form input element'', (string)this.Form[''X-HTTP-Method-Override'']),\r\n                    Tuple.Create(''X-HTTP-Method-Override header'', this.Headers[''X-HTTP-Method-Override''].FirstOrDefault())\r\n                }", span="273-279"];
m8_111 [cluster="Nancy.Request.RewriteMethod()", file="TextResourceFinderFixture.cs", label="this.Method = providedOverride.Single().Item2", span="300-300"];
m8_102 [cluster="Nancy.Request.RewriteMethod()", file="TextResourceFinderFixture.cs", label="return;", span="270-270"];
m8_104 [cluster="Nancy.Request.RewriteMethod()", file="TextResourceFinderFixture.cs", label="var providedOverride =\r\n                overrides.Where(x => !string.IsNullOrEmpty(x.Item2))", span="281-282"];
m8_107 [cluster="Nancy.Request.RewriteMethod()", file="TextResourceFinderFixture.cs", label="providedOverride.Count() > 1", span="289-289"];
m8_106 [cluster="Nancy.Request.RewriteMethod()", file="TextResourceFinderFixture.cs", label="return;", span="286-286"];
m8_110 [cluster="Nancy.Request.RewriteMethod()", file="TextResourceFinderFixture.cs", label="throw new InvalidOperationException(errorMessage);", span="297-297"];
m8_105 [cluster="Nancy.Request.RewriteMethod()", file="TextResourceFinderFixture.cs", label="!providedOverride.Any()", span="284-284"];
m8_108 [cluster="Nancy.Request.RewriteMethod()", file="TextResourceFinderFixture.cs", label="var overrideSources =\r\n                    string.Join('', '', providedOverride)", span="291-292"];
m8_109 [cluster="Nancy.Request.RewriteMethod()", file="TextResourceFinderFixture.cs", label="var errorMessage =\r\n                    string.Format(''More than one HTTP method override was provided. The provided values where: {0}'', overrideSources)", span="294-295"];
m8_112 [cluster="Nancy.Request.RewriteMethod()", file="TextResourceFinderFixture.cs", label="Exit Nancy.Request.RewriteMethod()", span="266-266"];
m8_120 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="TextResourceFinderFixture.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m8_91 [cluster="Nancy.HttpMultipart.HttpMultipart(System.IO.Stream, string)", file="TextResourceFinderFixture.cs", label="Entry Nancy.HttpMultipart.HttpMultipart(System.IO.Stream, string)", span="25-25"];
m8_28 [cluster="Nancy.ViewEngines.Razor.Tests.TextResourceFinderFixture.Should_invoke_text_resource_with_member_name_when_not_chained()", color=red, community=0, file="TextResourceFinderFixture.cs", label="1: A.CallTo(() => this.textResource[''foo'', A<NancyContext>._]).MustHaveHappened()", span="56-56"];
m8_114 [cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="TextResourceFinderFixture.cs", label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0"];
m8_32 [cluster="lambda expression", file="TextResourceFinderFixture.cs", label="Exit lambda expression", span="56-56"];
m8_25 [cluster="lambda expression", file="TextResourceFinderFixture.cs", label="Exit lambda expression", span="45-45"];
m8_90 [cluster="System.Text.RegularExpressions.Regex.Match(string, string)", file="TextResourceFinderFixture.cs", label="Entry System.Text.RegularExpressions.Regex.Match(string, string)", span="0-0"];
m8_31 [cluster="lambda expression", color=red, community=0, file="TextResourceFinderFixture.cs", label="2: this.textResource[''foo'', A<NancyContext>._]", span="56-56"];
m8_117 [cluster="Unk.Count", file="TextResourceFinderFixture.cs", label="Entry Unk.Count", span=""];
m8_51 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="TextResourceFinderFixture.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m8_45 [cluster="Nancy.Request.GetCookieData()", file="TextResourceFinderFixture.cs", label="cookieName.Equals(''HttpOnly'', StringComparison.InvariantCultureIgnoreCase) ||\r\n                        cookieName.Equals(''Secure'', StringComparison.InvariantCultureIgnoreCase)", span="172-173"];
m8_30 [cluster="Nancy.IO.RequestStream.FromStream(System.IO.Stream)", file="TextResourceFinderFixture.cs", label="Entry Nancy.IO.RequestStream.FromStream(System.IO.Stream)", span="258-258"];
m8_37 [cluster="Nancy.Request.GetCookieData()", file="TextResourceFinderFixture.cs", label="Entry Nancy.Request.GetCookieData()", span="156-156"];
m8_38 [cluster="Nancy.Request.GetCookieData()", color=red, community=0, file="TextResourceFinderFixture.cs", label="4: var cookieDictionary = new Dictionary<string, string>(StringComparer.OrdinalIgnoreCase)", span="158-158"];
m8_39 [cluster="Nancy.Request.GetCookieData()", file="TextResourceFinderFixture.cs", label="!this.Headers.Cookie.Any()", span="160-160"];
m8_46 [cluster="Nancy.Request.GetCookieData()", file="TextResourceFinderFixture.cs", label="cookieDictionary[cookieName] = parts[1]", span="179-179"];
m8_123 [cluster="lambda expression", file="TextResourceFinderFixture.cs", label="!string.IsNullOrEmpty(x.Item2)", span="282-282"];
m8_47 [cluster="Nancy.Request.GetCookieData()", file="TextResourceFinderFixture.cs", label="return cookieDictionary;", span="182-182"];
m8_87 [cluster="string.Equals(string, System.StringComparison)", file="TextResourceFinderFixture.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m8_26 [cluster="Nancy.ViewEngines.Razor.Tests.TextResourceFinderFixture.Should_invoke_text_resource_with_member_name_when_not_chained()", file="TextResourceFinderFixture.cs", label="Entry Nancy.ViewEngines.Razor.Tests.TextResourceFinderFixture.Should_invoke_text_resource_with_member_name_when_not_chained()", span="49-49"];
m8_29 [cluster="Nancy.ViewEngines.Razor.Tests.TextResourceFinderFixture.Should_invoke_text_resource_with_member_name_when_not_chained()", file="TextResourceFinderFixture.cs", label="Exit Nancy.ViewEngines.Razor.Tests.TextResourceFinderFixture.Should_invoke_text_resource_with_member_name_when_not_chained()", span="49-49"];
m8_53 [cluster="string.Split(params char[])", file="TextResourceFinderFixture.cs", label="Entry string.Split(params char[])", span="0-0"];
m8_54 [cluster="Unk.Select", file="TextResourceFinderFixture.cs", label="Entry Unk.Select", span=""];
m8_44 [cluster="Nancy.Request.GetCookieData()", file="TextResourceFinderFixture.cs", label="parts.Length == 1", span="170-170"];
m8_88 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="TextResourceFinderFixture.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m8_121 [cluster="Unk.Single", file="TextResourceFinderFixture.cs", label="Entry Unk.Single", span=""];
m8_96 [cluster="System.Collections.Generic.List<T>.Add(T)", file="TextResourceFinderFixture.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m8_61 [cluster="Nancy.Request.Dispose()", file="TextResourceFinderFixture.cs", label="Entry Nancy.Request.Dispose()", span="211-211"];
m8_62 [cluster="Nancy.Request.Dispose()", file="TextResourceFinderFixture.cs", label="((IDisposable)this.Body).Dispose()", span="213-213"];
m8_63 [cluster="Nancy.Request.Dispose()", file="TextResourceFinderFixture.cs", label="Exit Nancy.Request.Dispose()", span="211-211"];
m8_89 [cluster="System.IO.StreamReader.ReadToEnd()", file="TextResourceFinderFixture.cs", label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0"];
m8_0 [cluster="Nancy.ViewEngines.Razor.Tests.TextResourceFinderFixture.TextResourceFinderFixture()", file="TextResourceFinderFixture.cs", label="Entry Nancy.ViewEngines.Razor.Tests.TextResourceFinderFixture.TextResourceFinderFixture()", span="15-15"];
m8_1 [cluster="Nancy.ViewEngines.Razor.Tests.TextResourceFinderFixture.TextResourceFinderFixture()", file="TextResourceFinderFixture.cs", label="this.context = A.Dummy<NancyContext>()", span="17-17"];
m8_64 [cluster="System.IDisposable.Dispose()", file="TextResourceFinderFixture.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m8_48 [cluster="Nancy.Request.GetCookieData()", file="TextResourceFinderFixture.cs", label="Nancy.ViewEngines.Razor.Tests.TextResourceFinderFixture", span=""];
m8_95 [cluster="Nancy.HttpFile.HttpFile(Nancy.HttpMultipartBoundary)", file="TextResourceFinderFixture.cs", label="Entry Nancy.HttpFile.HttpFile(Nancy.HttpMultipartBoundary)", span="14-14"];
m8_94 [cluster="System.Collections.Specialized.NameValueCollection.Add(string, string)", file="TextResourceFinderFixture.cs", label="Entry System.Collections.Specialized.NameValueCollection.Add(string, string)", span="0-0"];
m8_56 [cluster="Unk.Equals", file="TextResourceFinderFixture.cs", label="Entry Unk.Equals", span=""];
m8_125 [file="TextResourceFinderFixture.cs", label="Nancy.Request", span=""];
n21 -> n1  [color=darkseagreen4, key=1, label="Nancy.ViewEngines.DefaultResourceReader", style=dashed];
n22 -> n10  [color=darkseagreen4, key=1, label="System.Reflection.Assembly", style=dashed];
n23 -> n10  [color=darkseagreen4, key=1, label=resourceName, style=dashed];
n0 -> n1  [key=0, style=solid];
n0 -> n10  [color=darkseagreen4, key=1, label="System.Reflection.Assembly", style=dashed];
n1 -> n2  [key=0, style=solid];
n1 -> n4  [key=2, style=dotted];
n1 -> n5  [key=2, style=dotted];
n1 -> n6  [key=2, style=dotted];
n1 -> n7  [key=2, style=dotted];
n1 -> n1  [color=darkseagreen4, key=1, label=resourceName, style=dashed];
n1 -> n10  [color=darkseagreen4, key=1, label=resourceName, style=dashed];
n10 -> n11  [key=0, style=solid];
n10 -> n12  [key=2, style=dotted];
n10 -> n13  [key=2, style=dotted];
n2 -> n3  [key=0, style=solid];
n2 -> n8  [key=2, style=dotted];
n3 -> n0  [color=blue, key=0, style=bold];
n9 -> n10  [key=0, style=solid];
n11 -> n9  [color=blue, key=0, style=bold];
n14 -> n15  [key=0, style=solid];
n15 -> n16  [key=0, style=solid];
n15 -> n18  [key=2, style=dotted];
n16 -> n17  [key=0, style=solid];
n16 -> n19  [key=2, style=dotted];
n16 -> n20  [key=2, style=dotted];
n17 -> n14  [color=blue, key=0, style=bold];
d343 -> d344  [color=green, key=0, style=solid];
d343 -> d348  [color=green, key=1, label=buffer, style=dashed];
d343 -> d356  [color=green, key=1, label=buffer, style=dashed];
d343 -> d349  [color=green, key=1, label=buffer, style=dashed];
d342 -> d343  [color=green, key=0, style=solid];
d344 -> d345  [key=0, style=solid];
d344 -> d7  [key=2, style=dotted];
d344 -> d348  [color=darkseagreen4, key=1, label=asyncResult, style=dashed];
d344 -> d350  [color=darkseagreen4, key=1, label=asyncResult, style=dashed];
d348 -> d349  [key=0, style=solid];
d348 -> d8  [key=2, style=dotted];
d348 -> d9  [key=2, style=dotted];
d348 -> d355  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d356 -> d357  [key=0, style=solid];
d356 -> d341  [key=2, style=dotted];
d349 -> d350  [key=0, style=solid];
d349 -> d335  [key=2, style=dotted];
d351 -> d342  [color=blue, key=0, style=bold];
d345 -> d348  [color=darkseagreen4, key=1, label=callback, style=dashed];
d345 -> d356  [color=darkseagreen4, key=1, label=callback, style=dashed];
d345 -> d349  [color=darkseagreen4, key=1, label=callback, style=dashed];
d345 -> d346  [key=0, style=solid];
d350 -> d351  [key=0, style=solid];
d350 -> d352  [key=2, style=dotted];
d418 -> d348  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d356  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d1  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d2  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d15  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d3  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d18  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d4  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d21  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d5  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d24  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d27  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d29  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d35  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d41  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d44  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d47  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d53  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d48  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d68  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d74  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d69  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d77  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d82  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d86  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d91  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d95  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d122  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d127  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d133  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d128  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d136  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d141  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d146  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d153  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d147  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d156  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d157  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d162  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d165  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d171  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d166  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d168  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d174  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d182  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d188  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d183  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d194  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d196  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d201  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d205  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d214  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d219  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d215  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d216  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d222  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d224  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d228  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d232  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d238  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d233  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d242  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d244  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d248  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d252  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d258  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d253  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d261  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d263  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d267  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d272  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d274  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d278  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d283  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d284  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d289  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d293  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d295  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d299  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d303  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d308  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d309  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d314  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d318  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d319  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d324  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d330  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d332  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d339  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d347  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d362  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d364  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d370  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d378  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d379  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d386  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d390  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d392  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d396  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d400  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d401  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d406  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d410  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d412  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d418 -> d416  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.IO.RequestStreamFixture", style=dashed];
d346 -> d348  [color=darkseagreen4, key=1, label=state, style=dashed];
d346 -> d356  [color=darkseagreen4, key=1, label=state, style=dashed];
d346 -> d349  [color=darkseagreen4, key=1, label=state, style=dashed];
d346 -> d347  [key=0, style=solid];
d346 -> d334  [key=2, style=dotted];
d347 -> d348  [key=0, style=solid];
d347 -> d349  [color=darkseagreen4, key=1, label=request, style=dashed];
d347 -> d31  [key=2, style=dotted];
d355 -> d356  [key=0, style=solid];
d431 -> d356  [color=darkseagreen4, key=1, label=buffer, style=dashed];
d432 -> d356  [color=darkseagreen4, key=1, label=callback, style=dashed];
d433 -> d356  [color=darkseagreen4, key=1, label=state, style=dashed];
d357 -> d355  [color=blue, key=0, style=bold];
d1 -> d7  [key=2, style=dotted];
d1 -> d2  [key=0, style=solid];
d1 -> d10  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d70 -> d7  [key=2, style=dotted];
d70 -> d71  [key=0, style=solid];
d83 -> d7  [key=2, style=dotted];
d83 -> d84  [key=0, style=solid];
d92 -> d7  [key=2, style=dotted];
d92 -> d93  [key=0, style=solid];
d99 -> d7  [key=2, style=dotted];
d99 -> d100  [key=0, style=solid];
d99 -> d110  [color=darkseagreen4, key=1, label=str, style=dashed];
d99 -> d101  [color=darkseagreen4, key=1, label=str, style=dashed];
d99 -> d113  [color=darkseagreen4, key=1, label=str, style=dashed];
d99 -> d102  [color=darkseagreen4, key=1, label=str, style=dashed];
d99 -> d116  [color=darkseagreen4, key=1, label=str, style=dashed];
d99 -> d103  [color=darkseagreen4, key=1, label=str, style=dashed];
d99 -> d119  [color=darkseagreen4, key=1, label=str, style=dashed];
d99 -> d104  [color=darkseagreen4, key=1, label=str, style=dashed];
d176 -> d7  [key=2, style=dotted];
d176 -> d177  [key=0, style=solid];
d185 -> d7  [key=2, style=dotted];
d185 -> d186  [key=0, style=solid];
d207 -> d7  [key=2, style=dotted];
d207 -> d208  [key=0, style=solid];
d375 -> d7  [key=2, style=dotted];
d375 -> d375  [color=darkorchid, key=3, label="Local variable string expectedHeaderValue", style=bold];
d375 -> d376  [key=0, style=solid];
d375 -> d379  [color=darkseagreen4, key=1, label=asyncResult, style=dashed];
d375 -> d381  [color=darkseagreen4, key=1, label=asyncResult, style=dashed];
d389 -> d7  [key=2, style=dotted];
d389 -> d390  [key=0, style=solid];
d389 -> d391  [color=darkseagreen4, key=1, label=asyncResult, style=dashed];
d389 -> d392  [color=darkseagreen4, key=1, label=asyncResult, style=dashed];
d389 -> d396  [color=darkseagreen4, key=1, label=asyncResult, style=dashed];
d399 -> d7  [key=2, style=dotted];
d399 -> d400  [key=0, style=solid];
d399 -> d402  [color=darkseagreen4, key=1, label=asyncResult, style=dashed];
d409 -> d7  [key=2, style=dotted];
d409 -> d410  [key=0, style=solid];
d409 -> d411  [color=darkseagreen4, key=1, label=asyncResult, style=dashed];
d409 -> d412  [color=darkseagreen4, key=1, label=asyncResult, style=dashed];
d409 -> d416  [color=darkseagreen4, key=1, label=asyncResult, style=dashed];
d2 -> d8  [key=2, style=dotted];
d2 -> d9  [key=2, style=dotted];
d2 -> d3  [key=0, style=solid];
d2 -> d14  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d15 -> d16  [key=0, style=solid];
d3 -> d8  [key=2, style=dotted];
d3 -> d9  [key=2, style=dotted];
d3 -> d4  [key=0, style=solid];
d3 -> d17  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d18 -> d19  [key=0, style=solid];
d4 -> d8  [key=2, style=dotted];
d4 -> d9  [key=2, style=dotted];
d4 -> d5  [key=0, style=solid];
d4 -> d20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d21 -> d22  [key=0, style=solid];
d5 -> d8  [key=2, style=dotted];
d5 -> d9  [key=2, style=dotted];
d5 -> d6  [key=0, style=solid];
d5 -> d23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d24 -> d25  [key=0, style=solid];
d27 -> d28  [key=0, style=solid];
d27 -> d31  [key=2, style=dotted];
d29 -> d8  [key=2, style=dotted];
d29 -> d30  [key=0, style=solid];
d29 -> d33  [key=2, style=dotted];
d29 -> d34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d35 -> d36  [key=0, style=solid];
d35 -> d37  [key=2, style=dotted];
d41 -> d8  [key=2, style=dotted];
d41 -> d42  [key=0, style=solid];
d41 -> d33  [key=2, style=dotted];
d41 -> d43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d44 -> d45  [key=0, style=solid];
d44 -> d37  [key=2, style=dotted];
d47 -> d8  [key=2, style=dotted];
d47 -> d9  [key=2, style=dotted];
d47 -> d48  [key=0, style=solid];
d47 -> d52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d53 -> d54  [key=0, style=solid];
d48 -> d49  [key=0, style=solid];
d48 -> d31  [key=2, style=dotted];
d68 -> d8  [key=2, style=dotted];
d68 -> d9  [key=2, style=dotted];
d68 -> d69  [key=0, style=solid];
d68 -> d73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d74 -> d75  [key=0, style=solid];
d69 -> d70  [key=0, style=solid];
d69 -> d72  [key=2, style=dotted];
d69 -> d76  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d77 -> d78  [key=0, style=solid];
d77 -> d79  [key=2, style=dotted];
d82 -> d83  [key=0, style=solid];
d82 -> d72  [key=2, style=dotted];
d82 -> d85  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d86 -> d87  [key=0, style=solid];
d86 -> d88  [key=2, style=dotted];
d91 -> d92  [key=0, style=solid];
d91 -> d72  [key=2, style=dotted];
d91 -> d94  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d95 -> d96  [key=0, style=solid];
d95 -> d97  [key=2, style=dotted];
d122 -> d123  [key=0, style=solid];
d122 -> d31  [key=2, style=dotted];
d127 -> d8  [key=2, style=dotted];
d127 -> d9  [key=2, style=dotted];
d127 -> d128  [key=0, style=solid];
d127 -> d132  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d133 -> d134  [key=0, style=solid];
d128 -> d129  [key=0, style=solid];
d128 -> d31  [key=2, style=dotted];
d136 -> d137  [key=0, style=solid];
d136 -> d31  [key=2, style=dotted];
d141 -> d142  [key=0, style=solid];
d141 -> d31  [key=2, style=dotted];
d146 -> d8  [key=2, style=dotted];
d146 -> d9  [key=2, style=dotted];
d146 -> d147  [key=0, style=solid];
d146 -> d152  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d153 -> d154  [key=0, style=solid];
d147 -> d148  [key=0, style=solid];
d147 -> d31  [key=2, style=dotted];
d156 -> d147  [color=darkorchid, key=3, label="Local variable Nancy.Testing.IBrowserContextValues values", style=bold];
d156 -> d157  [key=0, style=solid];
d156 -> d31  [key=2, style=dotted];
d156 -> d158  [color=darkseagreen4, key=1, label=request, style=dashed];
d157 -> d8  [key=2, style=dotted];
d157 -> d9  [key=2, style=dotted];
d157 -> d158  [key=0, style=solid];
d157 -> d161  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d162 -> d163  [key=0, style=solid];
d165 -> d8  [key=2, style=dotted];
d165 -> d9  [key=2, style=dotted];
d165 -> d166  [key=0, style=solid];
d165 -> d170  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d171 -> d172  [key=0, style=solid];
d166 -> d167  [key=0, style=solid];
d166 -> d31  [key=2, style=dotted];
d168 -> d169  [key=0, style=solid];
d168 -> d151  [key=2, style=dotted];
d174 -> d175  [key=0, style=solid];
d174 -> d31  [key=2, style=dotted];
d174 -> d179  [color=darkseagreen4, key=1, label=request, style=dashed];
d182 -> d8  [key=2, style=dotted];
d182 -> d9  [key=2, style=dotted];
d182 -> d183  [key=0, style=solid];
d182 -> d187  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d188 -> d189  [key=0, style=solid];
d183 -> d184  [key=0, style=solid];
d183 -> d31  [key=2, style=dotted];
d183 -> d191  [color=darkseagreen4, key=1, label=request, style=dashed];
d194 -> d195  [key=0, style=solid];
d194 -> d31  [key=2, style=dotted];
d196 -> d8  [key=2, style=dotted];
d196 -> d197  [key=0, style=solid];
d196 -> d199  [key=2, style=dotted];
d196 -> d200  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d201 -> d202  [key=0, style=solid];
d201 -> d203  [key=2, style=dotted];
d205 -> d206  [key=0, style=solid];
d205 -> d31  [key=2, style=dotted];
d205 -> d210  [color=darkseagreen4, key=1, label=request, style=dashed];
d214 -> d8  [key=2, style=dotted];
d214 -> d9  [key=2, style=dotted];
d214 -> d215  [key=0, style=solid];
d214 -> d218  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d219 -> d220  [key=0, style=solid];
d215 -> d216  [key=0, style=solid];
d215 -> d31  [key=2, style=dotted];
d216 -> d217  [key=0, style=solid];
d216 -> d151  [key=2, style=dotted];
d222 -> d223  [key=0, style=solid];
d222 -> d31  [key=2, style=dotted];
d224 -> d8  [key=2, style=dotted];
d224 -> d225  [key=0, style=solid];
d224 -> d199  [key=2, style=dotted];
d224 -> d227  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d228 -> d229  [key=0, style=solid];
d228 -> d230  [key=2, style=dotted];
d232 -> d8  [key=2, style=dotted];
d232 -> d9  [key=2, style=dotted];
d232 -> d233  [key=0, style=solid];
d232 -> d237  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d238 -> d239  [key=0, style=solid];
d238 -> d240  [key=2, style=dotted];
d233 -> d234  [key=0, style=solid];
d233 -> d31  [key=2, style=dotted];
d242 -> d243  [key=0, style=solid];
d242 -> d31  [key=2, style=dotted];
d244 -> d8  [key=2, style=dotted];
d244 -> d245  [key=0, style=solid];
d244 -> d199  [key=2, style=dotted];
d244 -> d247  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d248 -> d249  [key=0, style=solid];
d248 -> d250  [key=2, style=dotted];
d252 -> d8  [key=2, style=dotted];
d252 -> d9  [key=2, style=dotted];
d252 -> d253  [key=0, style=solid];
d252 -> d257  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d258 -> d259  [key=0, style=solid];
d258 -> d250  [key=2, style=dotted];
d253 -> d254  [key=0, style=solid];
d253 -> d31  [key=2, style=dotted];
d261 -> d262  [key=0, style=solid];
d261 -> d31  [key=2, style=dotted];
d263 -> d8  [key=2, style=dotted];
d263 -> d264  [key=0, style=solid];
d263 -> d199  [key=2, style=dotted];
d263 -> d266  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d267 -> d268  [key=0, style=solid];
d267 -> d269  [key=2, style=dotted];
d272 -> d273  [key=0, style=solid];
d272 -> d31  [key=2, style=dotted];
d274 -> d8  [key=2, style=dotted];
d274 -> d275  [key=0, style=solid];
d274 -> d199  [key=2, style=dotted];
d274 -> d277  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d278 -> d279  [key=0, style=solid];
d278 -> d280  [key=2, style=dotted];
d283 -> d284  [key=0, style=solid];
d283 -> d31  [key=2, style=dotted];
d283 -> d285  [color=darkseagreen4, key=1, label=request, style=dashed];
d284 -> d8  [key=2, style=dotted];
d284 -> d9  [key=2, style=dotted];
d284 -> d285  [key=0, style=solid];
d284 -> d288  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d289 -> d290  [key=0, style=solid];
d289 -> d280  [key=2, style=dotted];
d293 -> d294  [key=0, style=solid];
d293 -> d31  [key=2, style=dotted];
d295 -> d8  [key=2, style=dotted];
d295 -> d296  [key=0, style=solid];
d295 -> d199  [key=2, style=dotted];
d295 -> d298  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d299 -> d300  [key=0, style=solid];
d299 -> d301  [key=2, style=dotted];
d303 -> d304  [key=0, style=solid];
d303 -> d31  [key=2, style=dotted];
d308 -> d309  [key=0, style=solid];
d308 -> d31  [key=2, style=dotted];
d308 -> d310  [color=darkseagreen4, key=1, label=request, style=dashed];
d308 -> d311  [color=darkseagreen4, key=1, label=request, style=dashed];
d309 -> d8  [key=2, style=dotted];
d309 -> d9  [key=2, style=dotted];
d309 -> d310  [key=0, style=solid];
d309 -> d313  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d314 -> d315  [key=0, style=solid];
d318 -> d319  [key=0, style=solid];
d318 -> d31  [key=2, style=dotted];
d318 -> d320  [color=darkseagreen4, key=1, label=request, style=dashed];
d318 -> d321  [color=darkseagreen4, key=1, label=request, style=dashed];
d319 -> d8  [key=2, style=dotted];
d319 -> d9  [key=2, style=dotted];
d319 -> d320  [key=0, style=solid];
d319 -> d323  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d324 -> d325  [key=0, style=solid];
d330 -> d331  [key=0, style=solid];
d330 -> d31  [key=2, style=dotted];
d332 -> d8  [key=2, style=dotted];
d332 -> d333  [key=0, style=solid];
d332 -> d199  [key=2, style=dotted];
d332 -> d338  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d339 -> d341  [key=2, style=dotted];
d339 -> d340  [key=0, style=solid];
d362 -> d363  [key=0, style=solid];
d362 -> d31  [key=2, style=dotted];
d364 -> d8  [key=2, style=dotted];
d364 -> d365  [key=0, style=solid];
d364 -> d199  [key=2, style=dotted];
d364 -> d369  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d370 -> d371  [key=0, style=solid];
d370 -> d372  [key=2, style=dotted];
d378 -> d379  [key=0, style=solid];
d378 -> d31  [key=2, style=dotted];
d378 -> d380  [color=darkseagreen4, key=1, label=request, style=dashed];
d379 -> d8  [key=2, style=dotted];
d379 -> d9  [key=2, style=dotted];
d379 -> d380  [key=0, style=solid];
d379 -> d385  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d386 -> d387  [key=0, style=solid];
d386 -> d372  [key=2, style=dotted];
d390 -> d391  [key=0, style=solid];
d390 -> d31  [key=2, style=dotted];
d392 -> d8  [key=2, style=dotted];
d392 -> d393  [key=0, style=solid];
d392 -> d199  [key=2, style=dotted];
d392 -> d395  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d396 -> d397  [key=0, style=solid];
d396 -> d394  [key=2, style=dotted];
d400 -> d401  [key=0, style=solid];
d400 -> d31  [key=2, style=dotted];
d400 -> d402  [color=darkseagreen4, key=1, label=request, style=dashed];
d401 -> d8  [key=2, style=dotted];
d401 -> d9  [key=2, style=dotted];
d401 -> d402  [key=0, style=solid];
d401 -> d405  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d406 -> d407  [key=0, style=solid];
d406 -> d394  [key=2, style=dotted];
d410 -> d411  [key=0, style=solid];
d410 -> d31  [key=2, style=dotted];
d412 -> d8  [key=2, style=dotted];
d412 -> d413  [key=0, style=solid];
d412 -> d199  [key=2, style=dotted];
d412 -> d415  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d416 -> d417  [key=0, style=solid];
d416 -> d414  [key=2, style=dotted];
d100 -> d8  [key=2, style=dotted];
d100 -> d9  [key=2, style=dotted];
d100 -> d101  [key=0, style=solid];
d100 -> d109  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d101 -> d8  [key=2, style=dotted];
d101 -> d9  [key=2, style=dotted];
d101 -> d102  [key=0, style=solid];
d101 -> d112  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d102 -> d8  [key=2, style=dotted];
d102 -> d9  [key=2, style=dotted];
d102 -> d103  [key=0, style=solid];
d102 -> d115  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d103 -> d8  [key=2, style=dotted];
d103 -> d9  [key=2, style=dotted];
d103 -> d104  [key=0, style=solid];
d103 -> d118  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d331 -> d335  [key=2, style=dotted];
d331 -> d332  [key=0, style=solid];
d0 -> d1  [key=0, style=solid];
d10 -> d11  [key=0, style=solid];
d71 -> d67  [color=blue, key=0, style=bold];
d84 -> d80  [color=blue, key=0, style=bold];
d93 -> d89  [color=blue, key=0, style=bold];
d98 -> d99  [key=0, style=solid];
d110 -> d111  [key=0, style=solid];
d113 -> d114  [key=0, style=solid];
d116 -> d117  [key=0, style=solid];
d119 -> d120  [key=0, style=solid];
d104 -> d105  [key=0, style=solid];
d104 -> d108  [key=2, style=dotted];
d175 -> d176  [key=0, style=solid];
d175 -> d72  [key=2, style=dotted];
d175 -> d178  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d177 -> d173  [color=blue, key=0, style=bold];
d184 -> d185  [key=0, style=solid];
d184 -> d72  [key=2, style=dotted];
d184 -> d190  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d186 -> d181  [color=blue, key=0, style=bold];
d206 -> d207  [key=0, style=solid];
d206 -> d72  [key=2, style=dotted];
d206 -> d209  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d208 -> d204  [color=blue, key=0, style=bold];
d374 -> d375  [key=0, style=solid];
d374 -> d379  [color=darkseagreen4, key=1, label=buffer, style=dashed];
d374 -> d386  [color=darkseagreen4, key=1, label=buffer, style=dashed];
d374 -> d380  [color=darkseagreen4, key=1, label=buffer, style=dashed];
d376 -> d379  [color=darkseagreen4, key=1, label=callback, style=dashed];
d376 -> d386  [color=darkseagreen4, key=1, label=callback, style=dashed];
d376 -> d377  [key=0, style=solid];
d376 -> d380  [color=darkseagreen4, key=1, label=callback, style=dashed];
d381 -> d352  [key=2, style=dotted];
d381 -> d382  [key=0, style=solid];
d388 -> d389  [key=0, style=solid];
d391 -> d392  [key=0, style=solid];
d391 -> d394  [key=2, style=dotted];
d398 -> d399  [key=0, style=solid];
d402 -> d403  [key=0, style=solid];
d402 -> d394  [key=2, style=dotted];
d408 -> d409  [key=0, style=solid];
d411 -> d412  [key=0, style=solid];
d411 -> d414  [key=2, style=dotted];
d14 -> d15  [key=0, style=solid];
d16 -> d14  [color=blue, key=0, style=bold];
d17 -> d18  [key=0, style=solid];
d19 -> d17  [color=blue, key=0, style=bold];
d20 -> d21  [key=0, style=solid];
d22 -> d20  [color=blue, key=0, style=bold];
d6 -> d0  [color=blue, key=0, style=bold];
d23 -> d24  [key=0, style=solid];
d25 -> d23  [color=blue, key=0, style=bold];
d26 -> d27  [key=0, style=solid];
d28 -> d29  [key=0, style=solid];
d28 -> d32  [key=2, style=dotted];
d30 -> d26  [color=blue, key=0, style=bold];
d34 -> d35  [key=0, style=solid];
d36 -> d34  [color=blue, key=0, style=bold];
d40 -> d41  [key=0, style=solid];
d40 -> d32  [key=2, style=dotted];
d42 -> d38  [color=blue, key=0, style=bold];
d43 -> d44  [key=0, style=solid];
d45 -> d43  [color=blue, key=0, style=bold];
d46 -> d47  [key=0, style=solid];
d52 -> d53  [key=0, style=solid];
d54 -> d52  [color=blue, key=0, style=bold];
d49 -> d50  [key=0, style=solid];
d49 -> d51  [key=2, style=dotted];
d67 -> d68  [key=0, style=solid];
d73 -> d74  [key=0, style=solid];
d75 -> d73  [color=blue, key=0, style=bold];
d76 -> d77  [key=0, style=solid];
d78 -> d76  [color=blue, key=0, style=bold];
d81 -> d82  [key=0, style=solid];
d81 -> d86  [color=darkseagreen4, key=1, label=expectedLength, style=dashed];
d85 -> d86  [key=0, style=solid];
d419 -> d86  [color=darkseagreen4, key=1, label=expectedLength, style=dashed];
d87 -> d85  [color=blue, key=0, style=bold];
d90 -> d91  [key=0, style=solid];
d90 -> d95  [color=darkseagreen4, key=1, label=tresholdLength, style=dashed];
d94 -> d95  [key=0, style=solid];
d420 -> d95  [color=darkseagreen4, key=1, label=tresholdLength, style=dashed];
d96 -> d94  [color=blue, key=0, style=bold];
d121 -> d122  [key=0, style=solid];
d123 -> d124  [key=0, style=solid];
d126 -> d127  [key=0, style=solid];
d132 -> d133  [key=0, style=solid];
d134 -> d132  [color=blue, key=0, style=bold];
d129 -> d130  [key=0, style=solid];
d135 -> d136  [key=0, style=solid];
d137 -> d138  [key=0, style=solid];
d140 -> d141  [key=0, style=solid];
d142 -> d143  [key=0, style=solid];
d145 -> d146  [key=0, style=solid];
d152 -> d153  [key=0, style=solid];
d154 -> d152  [color=blue, key=0, style=bold];
d148 -> d149  [key=0, style=solid];
d155 -> d156  [key=0, style=solid];
d158 -> d159  [key=0, style=solid];
d161 -> d162  [key=0, style=solid];
d163 -> d161  [color=blue, key=0, style=bold];
d164 -> d165  [key=0, style=solid];
d170 -> d171  [key=0, style=solid];
d172 -> d170  [color=blue, key=0, style=bold];
d167 -> d168  [key=0, style=solid];
d169 -> d164  [color=blue, key=0, style=bold];
d173 -> d174  [key=0, style=solid];
d179 -> d180  [key=0, style=solid];
d181 -> d182  [key=0, style=solid];
d187 -> d188  [key=0, style=solid];
d189 -> d187  [color=blue, key=0, style=bold];
d191 -> d192  [key=0, style=solid];
d193 -> d194  [key=0, style=solid];
d195 -> d196  [key=0, style=solid];
d195 -> d198  [key=2, style=dotted];
d197 -> d193  [color=blue, key=0, style=bold];
d200 -> d201  [key=0, style=solid];
d202 -> d200  [color=blue, key=0, style=bold];
d204 -> d205  [key=0, style=solid];
d210 -> d211  [key=0, style=solid];
d210 -> d212  [key=2, style=dotted];
d213 -> d214  [key=0, style=solid];
d218 -> d219  [key=0, style=solid];
d220 -> d218  [color=blue, key=0, style=bold];
d217 -> d213  [color=blue, key=0, style=bold];
d221 -> d222  [key=0, style=solid];
d223 -> d224  [key=0, style=solid];
d223 -> d226  [key=2, style=dotted];
d225 -> d221  [color=blue, key=0, style=bold];
d227 -> d228  [key=0, style=solid];
d229 -> d227  [color=blue, key=0, style=bold];
d231 -> d232  [key=0, style=solid];
d237 -> d238  [key=0, style=solid];
d239 -> d237  [color=blue, key=0, style=bold];
d234 -> d235  [key=0, style=solid];
d234 -> d226  [key=2, style=dotted];
d241 -> d242  [key=0, style=solid];
d243 -> d244  [key=0, style=solid];
d243 -> d246  [key=2, style=dotted];
d245 -> d241  [color=blue, key=0, style=bold];
d247 -> d248  [key=0, style=solid];
d249 -> d247  [color=blue, key=0, style=bold];
d251 -> d252  [key=0, style=solid];
d257 -> d258  [key=0, style=solid];
d259 -> d257  [color=blue, key=0, style=bold];
d254 -> d255  [key=0, style=solid];
d254 -> d246  [key=2, style=dotted];
d260 -> d261  [key=0, style=solid];
d262 -> d263  [key=0, style=solid];
d262 -> d265  [key=2, style=dotted];
d264 -> d260  [color=blue, key=0, style=bold];
d266 -> d267  [key=0, style=solid];
d268 -> d266  [color=blue, key=0, style=bold];
d271 -> d272  [key=0, style=solid];
d271 -> d274  [color=darkseagreen4, key=1, label=buffer, style=dashed];
d271 -> d278  [color=darkseagreen4, key=1, label=buffer, style=dashed];
d271 -> d273  [color=darkseagreen4, key=1, label=buffer, style=dashed];
d273 -> d274  [key=0, style=solid];
d273 -> d276  [key=2, style=dotted];
d275 -> d270  [color=blue, key=0, style=bold];
d277 -> d278  [key=0, style=solid];
d425 -> d278  [color=darkseagreen4, key=1, label=buffer, style=dashed];
d279 -> d277  [color=blue, key=0, style=bold];
d282 -> d283  [key=0, style=solid];
d282 -> d284  [color=darkseagreen4, key=1, label=buffer, style=dashed];
d282 -> d289  [color=darkseagreen4, key=1, label=buffer, style=dashed];
d282 -> d285  [color=darkseagreen4, key=1, label=buffer, style=dashed];
d285 -> d286  [key=0, style=solid];
d285 -> d276  [key=2, style=dotted];
d288 -> d289  [key=0, style=solid];
d426 -> d289  [color=darkseagreen4, key=1, label=buffer, style=dashed];
d290 -> d288  [color=blue, key=0, style=bold];
d292 -> d293  [key=0, style=solid];
d292 -> d295  [color=darkseagreen4, key=1, label=buffer, style=dashed];
d292 -> d299  [color=darkseagreen4, key=1, label=buffer, style=dashed];
d292 -> d294  [color=darkseagreen4, key=1, label=buffer, style=dashed];
d294 -> d295  [key=0, style=solid];
d294 -> d297  [key=2, style=dotted];
d296 -> d291  [color=blue, key=0, style=bold];
d298 -> d299  [key=0, style=solid];
d427 -> d299  [color=darkseagreen4, key=1, label=buffer, style=dashed];
d300 -> d298  [color=blue, key=0, style=bold];
d302 -> d303  [key=0, style=solid];
d304 -> d305  [key=0, style=solid];
d304 -> d61  [key=2, style=dotted];
d307 -> d308  [key=0, style=solid];
d307 -> d310  [color=darkseagreen4, key=1, label=buffer, style=dashed];
d310 -> d311  [key=0, style=solid];
d310 -> d297  [key=2, style=dotted];
d311 -> d312  [key=0, style=solid];
d311 -> d61  [key=2, style=dotted];
d313 -> d314  [key=0, style=solid];
d315 -> d313  [color=blue, key=0, style=bold];
d317 -> d318  [key=0, style=solid];
d317 -> d320  [color=darkseagreen4, key=1, label=buffer, style=dashed];
d320 -> d321  [key=0, style=solid];
d320 -> d297  [key=2, style=dotted];
d321 -> d322  [key=0, style=solid];
d321 -> d51  [key=2, style=dotted];
d323 -> d324  [key=0, style=solid];
d325 -> d323  [color=blue, key=0, style=bold];
d329 -> d330  [key=0, style=solid];
d329 -> d332  [color=darkseagreen4, key=1, label=state, style=dashed];
d329 -> d339  [color=darkseagreen4, key=1, label=state, style=dashed];
d329 -> d334  [key=2, style=dotted];
d329 -> d331  [color=darkseagreen4, key=1, label=state, style=dashed];
d327 -> d332  [color=darkseagreen4, key=1, label=buffer, style=dashed];
d327 -> d339  [color=darkseagreen4, key=1, label=buffer, style=dashed];
d327 -> d331  [color=darkseagreen4, key=1, label=buffer, style=dashed];
d327 -> d328  [key=0, style=solid];
d328 -> d332  [color=darkseagreen4, key=1, label=callback, style=dashed];
d328 -> d339  [color=darkseagreen4, key=1, label=callback, style=dashed];
d328 -> d331  [color=darkseagreen4, key=1, label=callback, style=dashed];
d328 -> d329  [key=0, style=solid];
d333 -> d326  [color=blue, key=0, style=bold];
d338 -> d339  [key=0, style=solid];
d428 -> d339  [color=darkseagreen4, key=1, label=buffer, style=dashed];
d429 -> d339  [color=darkseagreen4, key=1, label=callback, style=dashed];
d430 -> d339  [color=darkseagreen4, key=1, label=state, style=dashed];
d340 -> d338  [color=blue, key=0, style=bold];
d361 -> d362  [key=0, style=solid];
d361 -> d364  [color=darkseagreen4, key=1, label=state, style=dashed];
d361 -> d370  [color=darkseagreen4, key=1, label=state, style=dashed];
d361 -> d334  [key=2, style=dotted];
d361 -> d363  [color=darkseagreen4, key=1, label=state, style=dashed];
d363 -> d364  [key=0, style=solid];
d363 -> d366  [key=2, style=dotted];
d359 -> d364  [color=darkseagreen4, key=1, label=buffer, style=dashed];
d359 -> d370  [color=darkseagreen4, key=1, label=buffer, style=dashed];
d359 -> d363  [color=darkseagreen4, key=1, label=buffer, style=dashed];
d359 -> d360  [key=0, style=solid];
d360 -> d364  [color=darkseagreen4, key=1, label=callback, style=dashed];
d360 -> d370  [color=darkseagreen4, key=1, label=callback, style=dashed];
d360 -> d361  [key=0, style=solid];
d360 -> d363  [color=darkseagreen4, key=1, label=callback, style=dashed];
d365 -> d358  [color=blue, key=0, style=bold];
d369 -> d370  [key=0, style=solid];
d434 -> d370  [color=darkseagreen4, key=1, label=buffer, style=dashed];
d435 -> d370  [color=darkseagreen4, key=1, label=callback, style=dashed];
d436 -> d370  [color=darkseagreen4, key=1, label=state, style=dashed];
d371 -> d369  [color=blue, key=0, style=bold];
d377 -> d378  [key=0, style=solid];
d377 -> d379  [color=darkseagreen4, key=1, label=state, style=dashed];
d377 -> d386  [color=darkseagreen4, key=1, label=state, style=dashed];
d377 -> d334  [key=2, style=dotted];
d377 -> d380  [color=darkseagreen4, key=1, label=state, style=dashed];
d380 -> d381  [key=0, style=solid];
d380 -> d366  [key=2, style=dotted];
d385 -> d386  [key=0, style=solid];
d437 -> d386  [color=darkseagreen4, key=1, label=buffer, style=dashed];
d438 -> d386  [color=darkseagreen4, key=1, label=callback, style=dashed];
d439 -> d386  [color=darkseagreen4, key=1, label=state, style=dashed];
d387 -> d385  [color=blue, key=0, style=bold];
d393 -> d388  [color=blue, key=0, style=bold];
d395 -> d396  [key=0, style=solid];
d440 -> d396  [color=darkseagreen4, key=1, label=asyncResult, style=dashed];
d397 -> d395  [color=blue, key=0, style=bold];
d405 -> d406  [key=0, style=solid];
d407 -> d405  [color=blue, key=0, style=bold];
d413 -> d408  [color=blue, key=0, style=bold];
d415 -> d416  [key=0, style=solid];
d441 -> d416  [color=darkseagreen4, key=1, label=asyncResult, style=dashed];
d417 -> d415  [color=blue, key=0, style=bold];
d39 -> d31  [key=2, style=dotted];
d39 -> d40  [key=0, style=solid];
d57 -> d31  [key=2, style=dotted];
d57 -> d58  [key=0, style=solid];
d64 -> d31  [key=2, style=dotted];
d64 -> d65  [key=0, style=solid];
d109 -> d110  [key=0, style=solid];
d112 -> d113  [key=0, style=solid];
d115 -> d116  [key=0, style=solid];
d118 -> d119  [key=0, style=solid];
d12 -> d10  [color=blue, key=0, style=bold];
d11 -> d12  [key=0, style=solid];
d11 -> d13  [key=2, style=dotted];
d80 -> d81  [key=0, style=solid];
d89 -> d90  [key=0, style=solid];
d107 -> d98  [color=blue, key=0, style=bold];
d421 -> d110  [color=darkseagreen4, key=1, label=str, style=dashed];
d421 -> d113  [color=darkseagreen4, key=1, label=str, style=dashed];
d421 -> d116  [color=darkseagreen4, key=1, label=str, style=dashed];
d421 -> d119  [color=darkseagreen4, key=1, label=str, style=dashed];
d111 -> d109  [color=blue, key=0, style=bold];
d114 -> d112  [color=blue, key=0, style=bold];
d117 -> d115  [color=blue, key=0, style=bold];
d120 -> d118  [color=blue, key=0, style=bold];
d105 -> d106  [key=0, style=solid];
d178 -> d179  [key=0, style=solid];
d190 -> d191  [key=0, style=solid];
d209 -> d210  [key=0, style=solid];
d373 -> d374  [key=0, style=solid];
d382 -> d373  [color=blue, key=0, style=bold];
d404 -> d398  [color=blue, key=0, style=bold];
d403 -> d151  [key=2, style=dotted];
d403 -> d404  [key=0, style=solid];
d38 -> d39  [key=0, style=solid];
d38 -> d38  [color=darkorchid, key=3, label="Local variable string thisIsMyRequestBody", style=bold];
d50 -> d46  [color=blue, key=0, style=bold];
d125 -> d121  [color=blue, key=0, style=bold];
d124 -> d51  [key=2, style=dotted];
d124 -> d125  [key=0, style=solid];
d131 -> d126  [color=blue, key=0, style=bold];
d130 -> d51  [key=2, style=dotted];
d130 -> d131  [key=0, style=solid];
d139 -> d135  [color=blue, key=0, style=bold];
d138 -> d51  [key=2, style=dotted];
d138 -> d139  [key=0, style=solid];
d144 -> d140  [color=blue, key=0, style=bold];
d143 -> d144  [key=0, style=solid];
d143 -> d61  [key=2, style=dotted];
d150 -> d145  [color=blue, key=0, style=bold];
d149 -> d151  [key=2, style=dotted];
d149 -> d150  [key=0, style=solid];
d160 -> d155  [color=blue, key=0, style=bold];
d159 -> d151  [key=2, style=dotted];
d159 -> d160  [key=0, style=solid];
d235 -> d151  [key=2, style=dotted];
d235 -> d236  [key=0, style=solid];
d255 -> d151  [key=2, style=dotted];
d255 -> d256  [key=0, style=solid];
d286 -> d151  [key=2, style=dotted];
d286 -> d287  [key=0, style=solid];
d422 -> d179  [color=darkseagreen4, key=1, label=request, style=dashed];
d180 -> d178  [color=blue, key=0, style=bold];
d423 -> d191  [color=darkseagreen4, key=1, label=request, style=dashed];
d192 -> d190  [color=blue, key=0, style=bold];
d424 -> d210  [color=darkseagreen4, key=1, label=request, style=dashed];
d211 -> d209  [color=blue, key=0, style=bold];
d236 -> d231  [color=blue, key=0, style=bold];
d256 -> d251  [color=blue, key=0, style=bold];
d270 -> d271  [key=0, style=solid];
d281 -> d282  [key=0, style=solid];
d291 -> d292  [key=0, style=solid];
d305 -> d302  [color=blue, key=0, style=bold];
d61 -> d61  [color=darkorchid, key=3, label="Local variable string userHostAddress", style=bold];
d306 -> d307  [key=0, style=solid];
d312 -> d306  [color=blue, key=0, style=bold];
d316 -> d317  [key=0, style=solid];
d322 -> d316  [color=blue, key=0, style=bold];
d326 -> d327  [key=0, style=solid];
d358 -> d359  [key=0, style=solid];
d56 -> d57  [key=0, style=solid];
d56 -> d60  [key=2, style=dotted];
d58 -> d61  [key=2, style=dotted];
d58 -> d59  [key=0, style=solid];
d63 -> d64  [key=0, style=solid];
d63 -> d60  [key=2, style=dotted];
d65 -> d51  [key=2, style=dotted];
d65 -> d66  [key=0, style=solid];
d106 -> d107  [key=0, style=solid];
d106 -> d51  [key=2, style=dotted];
d287 -> d281  [color=blue, key=0, style=bold];
d55 -> d56  [key=0, style=solid];
d59 -> d55  [color=blue, key=0, style=bold];
d62 -> d63  [key=0, style=solid];
d66 -> d62  [color=blue, key=0, style=bold];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_24  [key=2, style=dotted];
m0_23 -> d335  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_6  [key=2, style=dotted];
m0_1 -> m0_4  [color=darkseagreen4, key=1, label=environment, style=dashed];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_7  [key=2, style=dotted];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_9  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_8  [key=2, style=dotted];
m0_5 -> m0_0  [color=blue, key=0, style=bold];
m0_133 -> m0_140  [key=0, style=solid];
m0_133 -> m0_145  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
m0_133 -> m0_147  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
m0_133 -> m0_151  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
m0_133 -> m0_150  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
m0_140 -> m0_141  [key=0, style=solid];
m0_140 -> m0_142  [key=0, style=solid];
m0_140 -> m0_137  [key=2, style=dotted];
m0_142 -> m0_143  [key=0, style=solid];
m0_143 -> m0_144  [key=0, style=solid];
m0_143 -> m0_147  [key=0, style=solid];
m0_144 -> m0_145  [key=0, style=solid];
m0_144 -> m0_32  [key=2, style=dotted];
m0_145 -> m0_146  [key=0, style=solid];
m0_147 -> m0_148  [key=0, style=solid];
m0_147 -> m0_153  [key=2, style=dotted];
m0_148 -> m0_149  [key=0, style=solid];
m0_148 -> m0_150  [key=0, style=solid];
m0_149 -> m0_150  [key=0, style=solid];
m0_149 -> m0_55  [key=2, style=dotted];
m0_151 -> m0_152  [key=0, style=solid];
m0_141 -> m0_152  [key=0, style=solid];
m0_146 -> m0_152  [key=0, style=solid];
m0_150 -> m0_151  [key=0, style=solid];
m0_152 -> m0_133  [color=blue, key=0, style=bold];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_8  [color=darkseagreen4, key=1, label=bool, style=dashed];
m0_6 -> m0_9  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
m0_6 -> m0_10  [color=darkseagreen4, key=1, label=long, style=dashed];
m0_6 -> m0_12  [color=darkseagreen4, key=1, label=long, style=dashed];
m0_137 -> m0_138  [key=0, style=solid];
m0_138 -> m0_139  [key=0, style=solid];
m0_139 -> m0_137  [color=blue, key=0, style=bold];
m0_42 -> m0_43  [key=0, style=solid];
m0_42 -> m0_114  [key=0, style=solid];
m0_42 -> m0_116  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_43 -> m0_44  [key=0, style=solid];
m0_43 -> m0_21  [key=2, style=dotted];
m0_43 -> m0_45  [color=darkseagreen4, key=1, label=context, style=dashed];
m0_43 -> m0_59  [color=darkseagreen4, key=1, label=context, style=dashed];
m0_43 -> m0_46  [color=darkseagreen4, key=1, label=context, style=dashed];
m0_43 -> m0_48  [color=darkseagreen4, key=1, label=context, style=dashed];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_30  [key=2, style=dotted];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_51  [key=2, style=dotted];
m0_45 -> m0_52  [key=2, style=dotted];
m0_45 -> m0_53  [key=2, style=dotted];
m0_45 -> m0_58  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_45 -> m0_47  [key=2, style=dotted];
m0_46 -> m0_47  [key=0, style=solid];
m0_46 -> m0_22  [key=2, style=dotted];
m0_46 -> m0_44  [color=blue, key=0, style=bold];
m0_48 -> m0_49  [color=green, key=0, style=solid];
m0_48 -> m0_55  [key=2, style=dotted];
m0_47 -> m0_48  [key=0, style=solid];
m0_47 -> m0_54  [key=2, style=dotted];
m0_47 -> m0_49  [color=darkseagreen4, key=1, label=stream, style=dashed];
m0_49 -> m0_50  [color=green, key=0, style=solid];
m0_49 -> m0_56  [key=2, style=dotted];
m0_49 -> m0_57  [key=2, style=dotted];
m0_49 -> m0_51  [color=green, key=2, style=dotted];
m0_50 -> m0_42  [color=blue, key=0, style=bold];
m0_50 -> m0_48  [color=blue, key=0, style=bold];
m0_59 -> m0_69  [key=0, style=solid];
m0_59 -> m0_60  [key=0, style=solid];
m0_59 -> m0_61  [key=2, style=dotted];
m0_69 -> m0_6  [key=2, style=dotted];
m0_69 -> m0_70  [key=0, style=solid];
m0_69 -> m0_54  [key=2, style=dotted];
m0_69 -> m0_71  [color=darkseagreen4, key=1, label=memoryStream, style=dashed];
m0_69 -> m0_72  [color=darkseagreen4, key=1, label=memoryStream, style=dashed];
m0_70 -> m0_59  [color=blue, key=0, style=bold];
m0_70 -> m0_71  [key=0, style=solid];
m0_70 -> m0_22  [key=2, style=dotted];
m0_105 -> m0_92  [color=darkseagreen4, key=1, label=context, style=dashed];
m0_56 -> m0_57  [key=0, style=solid];
m0_52 -> m0_53  [key=0, style=solid];
m0_53 -> m0_54  [key=0, style=solid];
m0_53 -> m0_55  [key=2, style=dotted];
m0_54 -> m0_52  [color=blue, key=0, style=bold];
m0_41 -> m0_40  [color=blue, key=0, style=bold];
m0_24 -> m0_25  [key=0, style=solid];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_21  [key=2, style=dotted];
m0_25 -> m0_27  [color=darkseagreen4, key=1, label=context, style=dashed];
m0_25 -> m0_28  [color=darkseagreen4, key=1, label=context, style=dashed];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_30  [key=2, style=dotted];
m0_26 -> m0_28  [key=2, style=dotted];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_22  [key=2, style=dotted];
m0_27 -> m0_25  [color=blue, key=0, style=bold];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_31  [key=2, style=dotted];
m0_29 -> m0_24  [color=blue, key=0, style=bold];
m0_29 -> m0_30  [key=0, style=solid];
m0_30 -> m0_31  [key=0, style=solid];
m0_30 -> m0_32  [key=2, style=dotted];
m0_14 -> m0_15  [key=0, style=solid];
m0_31 -> m0_29  [color=blue, key=0, style=bold];
m0_63 -> m0_64  [key=0, style=solid];
m0_63 -> m0_21  [key=2, style=dotted];
m0_63 -> m0_65  [color=darkseagreen4, key=1, label=context, style=dashed];
m0_64 -> m0_59  [key=2, style=dotted];
m0_64 -> m0_65  [key=0, style=solid];
m0_64 -> m0_22  [key=2, style=dotted];
m0_65 -> m0_63  [color=blue, key=0, style=bold];
m0_65 -> m0_66  [key=0, style=solid];
m0_65 -> m0_31  [key=2, style=dotted];
m0_75 -> m0_76  [key=0, style=solid];
m0_76 -> m0_77  [key=0, style=solid];
m0_76 -> m0_21  [key=2, style=dotted];
m0_76 -> m0_78  [color=darkseagreen4, key=1, label=context, style=dashed];
m0_76 -> m0_82  [color=darkseagreen4, key=1, label=context, style=dashed];
m0_77 -> m0_78  [key=0, style=solid];
m0_77 -> m0_22  [key=2, style=dotted];
m0_77 -> m0_75  [color=blue, key=0, style=bold];
m0_78 -> m0_79  [key=0, style=solid];
m0_78 -> m0_51  [key=2, style=dotted];
m0_78 -> m0_80  [key=2, style=dotted];
m0_78 -> m0_81  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_79 -> m0_75  [color=blue, key=0, style=bold];
m0_79 -> m0_80  [key=0, style=solid];
m0_103 -> m0_59  [color=darkseagreen4, key=1, label=context, style=dashed];
m0_82 -> m0_83  [key=0, style=solid];
m0_82 -> m0_61  [key=2, style=dotted];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_18  [color=darkseagreen4, key=1, label="Nancy.HttpStatusCode", style=dashed];
m0_16 -> m0_107  [key=0, style=solid];
m0_16 -> m0_108  [color=darkseagreen4, key=1, label=long, style=dashed];
m0_16 -> m0_109  [color=darkseagreen4, key=1, label=long, style=dashed];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_21  [key=2, style=dotted];
m0_17 -> m0_19  [color=darkseagreen4, key=1, label=context, style=dashed];
m0_17 -> m0_154  [key=0, style=solid];
m0_17 -> m0_156  [color=darkseagreen4, key=1, label=long, style=dashed];
m0_17 -> m0_157  [color=darkseagreen4, key=1, label=long, style=dashed];
m0_17 -> m0_158  [color=darkseagreen4, key=1, label=long, style=dashed];
m0_17 -> m0_159  [color=darkseagreen4, key=1, label=long, style=dashed];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_22  [key=2, style=dotted];
m0_18 -> m0_121  [key=0, style=solid];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_23  [key=2, style=dotted];
m0_19 -> m0_128  [key=0, style=solid];
m0_20 -> m0_16  [color=blue, key=0, style=bold];
m0_20 -> m0_125  [key=0, style=solid];
m0_128 -> m0_129  [key=0, style=solid];
m0_128 -> m0_130  [key=0, style=solid];
m0_129 -> m0_130  [key=0, style=solid];
m0_129 -> m0_97  [key=2, style=dotted];
m0_130 -> m0_19  [color=blue, key=0, style=bold];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_17  [key=2, style=dotted];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_14  [key=2, style=dotted];
m0_11 -> m0_18  [key=2, style=dotted];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_15  [key=2, style=dotted];
m0_12 -> m0_19  [key=2, style=dotted];
m0_13 -> m0_10  [color=blue, key=0, style=bold];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_20  [key=2, style=dotted];
m0_91 -> m0_92  [key=0, style=solid];
m0_91 -> m0_95  [key=0, style=solid];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_33  [color=blue, key=0, style=bold];
m0_58 -> m0_59  [key=0, style=solid];
m0_58 -> m0_56  [color=blue, key=0, style=bold];
m0_60 -> m0_58  [color=blue, key=0, style=bold];
m0_60 -> m0_61  [key=0, style=solid];
m0_81 -> m0_82  [key=0, style=solid];
m0_81 -> m0_79  [color=blue, key=0, style=bold];
m0_83 -> m0_81  [color=blue, key=0, style=bold];
m0_92 -> m0_93  [key=0, style=solid];
m0_92 -> m0_61  [key=2, style=dotted];
m0_92 -> m0_94  [color=darkseagreen4, key=1, label=old, style=dashed];
m0_93 -> m0_91  [color=blue, key=0, style=bold];
m0_93 -> m0_94  [key=0, style=solid];
m0_93 -> m0_97  [key=2, style=dotted];
m0_121 -> m0_122  [key=0, style=solid];
m0_121 -> m0_123  [key=0, style=solid];
m0_122 -> m0_123  [key=0, style=solid];
m0_122 -> m0_124  [key=2, style=dotted];
m0_123 -> m0_18  [color=blue, key=0, style=bold];
m0_7 -> m0_8  [key=0, style=solid];
m0_80 -> m0_81  [key=0, style=solid];
m0_80 -> m0_82  [key=2, style=dotted];
m0_62 -> m0_63  [key=0, style=solid];
m0_62 -> m0_60  [color=blue, key=0, style=bold];
m0_66 -> m0_62  [color=blue, key=0, style=bold];
m0_66 -> m0_67  [key=0, style=solid];
m0_87 -> m0_88  [key=0, style=solid];
m0_87 -> m0_22  [key=2, style=dotted];
m0_88 -> m0_89  [key=0, style=solid];
m0_88 -> m0_96  [key=2, style=dotted];
m0_88 -> m0_90  [key=2, style=dotted];
m0_89 -> m0_90  [key=0, style=solid];
m0_89 -> m0_91  [key=0, style=solid];
m0_89 -> m0_84  [color=blue, key=0, style=bold];
m0_90 -> m0_95  [key=0, style=solid];
m0_94 -> m0_32  [key=2, style=dotted];
m0_94 -> m0_95  [key=0, style=solid];
m0_95 -> m0_87  [color=blue, key=0, style=bold];
m0_95 -> m0_96  [key=0, style=solid];
m0_95 -> m0_21  [key=2, style=dotted];
m0_95 -> m0_97  [color=darkseagreen4, key=1, label=context, style=dashed];
m0_95 -> m0_98  [color=darkseagreen4, key=1, label=context, style=dashed];
m0_95 -> m0_99  [color=red, key=1, label=context, style=dashed];
m0_8 -> m0_9  [key=0, style=solid];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_16  [key=2, style=dotted];
m0_15 -> m0_6  [color=blue, key=0, style=bold];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_43  [key=2, style=dotted];
m0_57 -> m0_59  [key=2, style=dotted];
m0_57 -> m0_58  [key=0, style=solid];
m0_104 -> m0_82  [color=darkseagreen4, key=1, label=context, style=dashed];
m0_67 -> m0_68  [key=0, style=solid];
m0_67 -> m0_59  [key=2, style=dotted];
m0_68 -> m0_69  [key=0, style=solid];
m0_68 -> m0_21  [key=2, style=dotted];
m0_68 -> m0_70  [color=darkseagreen4, key=1, label=context, style=dashed];
m0_68 -> m0_71  [color=darkseagreen4, key=1, label=context, style=dashed];
m0_68 -> m0_66  [color=blue, key=0, style=bold];
m0_71 -> m0_72  [key=0, style=solid];
m0_71 -> m0_55  [key=2, style=dotted];
m0_72 -> m0_73  [key=0, style=solid];
m0_72 -> m0_74  [key=2, style=dotted];
m0_73 -> m0_67  [color=blue, key=0, style=bold];
m0_73 -> m0_71  [color=blue, key=0, style=bold];
m0_61 -> m0_59  [key=2, style=dotted];
m0_61 -> m0_62  [key=0, style=solid];
m0_32 -> m0_33  [key=0, style=solid];
m0_97 -> m0_131  [key=0, style=solid];
m0_97 -> m0_98  [key=0, style=solid];
m0_131 -> m0_132  [key=0, style=solid];
m0_131 -> m0_98  [key=2, style=dotted];
m0_131 -> m0_133  [key=2, style=dotted];
m0_132 -> m0_97  [color=blue, key=0, style=bold];
m0_125 -> m0_126  [key=0, style=solid];
m0_125 -> m0_127  [key=0, style=solid];
m0_126 -> m0_127  [key=0, style=solid];
m0_126 -> m0_97  [key=2, style=dotted];
m0_127 -> m0_20  [color=blue, key=0, style=bold];
m0_154 -> m0_155  [key=0, style=solid];
m0_154 -> m0_156  [key=0, style=solid];
m0_156 -> m0_157  [key=0, style=solid];
m0_156 -> m0_158  [key=0, style=solid];
m0_157 -> m0_160  [key=0, style=solid];
m0_157 -> m0_162  [key=2, style=dotted];
m0_158 -> m0_160  [key=0, style=solid];
m0_158 -> m0_159  [key=0, style=solid];
m0_159 -> m0_160  [key=0, style=solid];
m0_159 -> m0_162  [key=2, style=dotted];
m0_155 -> m0_160  [key=0, style=solid];
m0_155 -> m0_161  [key=2, style=dotted];
m0_160 -> m0_17  [color=blue, key=0, style=bold];
m0_124 -> m0_134  [key=0, style=solid];
m0_134 -> m0_135  [key=0, style=solid];
m0_134 -> m0_136  [key=2, style=dotted];
m0_134 -> m0_133  [key=2, style=dotted];
m0_135 -> m0_124  [color=blue, key=0, style=bold];
m0_114 -> m0_115  [key=0, style=solid];
m0_114 -> m0_116  [key=0, style=solid];
m0_114 -> m0_118  [key=2, style=dotted];
m0_114 -> m0_119  [key=2, style=dotted];
m0_116 -> m0_117  [key=0, style=solid];
m0_116 -> m0_120  [key=2, style=dotted];
m0_115 -> m0_117  [key=0, style=solid];
m0_117 -> m0_42  [color=blue, key=0, style=bold];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_39  [color=darkseagreen4, key=1, label=bool, style=dashed];
m0_33 -> m0_21  [key=2, style=dotted];
m0_33 -> m0_35  [color=darkseagreen4, key=1, label=context, style=dashed];
m0_33 -> m0_36  [color=darkseagreen4, key=1, label=context, style=dashed];
m0_33 -> m0_37  [color=darkseagreen4, key=1, label=context, style=dashed];
m0_34 -> m0_35  [key=0, style=solid];
m0_34 -> m0_39  [key=0, style=solid];
m0_34 -> m0_37  [color=darkseagreen4, key=1, label=contents, style=dashed];
m0_34 -> m0_34  [color=darkorchid, key=3, label="Local variable System.Action<System.IO.Stream> contents", style=bold];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_41  [key=2, style=dotted];
m0_35 -> m0_30  [key=2, style=dotted];
m0_36 -> m0_37  [key=0, style=solid];
m0_36 -> m0_38  [color=darkseagreen4, key=1, label=fileStream, style=dashed];
m0_36 -> m0_22  [key=2, style=dotted];
m0_37 -> m0_39  [key=0, style=solid];
m0_37 -> m0_38  [key=0, style=solid];
m0_38 -> m0_39  [key=0, style=solid];
m0_38 -> m0_42  [key=2, style=dotted];
m0_38 -> m0_32  [color=blue, key=0, style=bold];
m0_101 -> m0_102  [key=0, style=solid];
m0_101 -> m0_106  [key=2, style=dotted];
m0_96 -> m0_97  [key=0, style=solid];
m0_96 -> m0_101  [key=2, style=dotted];
m0_98 -> m0_99  [color=red, key=0, style=solid];
m0_98 -> m0_22  [key=2, style=dotted];
m0_99 -> m0_100  [color=red, key=0, style=solid];
m0_99 -> m0_90  [color=red, key=2, style=dotted];
m0_99 -> m0_103  [key=2, style=dotted];
m0_100 -> m0_94  [color=blue, key=0, style=bold];
m0_100 -> m0_101  [key=0, style=solid];
m0_100 -> m0_104  [key=2, style=dotted];
m0_100 -> m0_105  [key=2, style=dotted];
m0_84 -> m0_85  [key=0, style=solid];
m0_85 -> m0_86  [key=0, style=solid];
m0_85 -> m0_21  [key=2, style=dotted];
m0_85 -> m0_92  [color=darkseagreen4, key=1, label=context, style=dashed];
m0_85 -> m0_87  [color=darkseagreen4, key=1, label=context, style=dashed];
m0_85 -> m0_88  [color=darkseagreen4, key=1, label=context, style=dashed];
m0_86 -> m0_87  [key=0, style=solid];
m0_86 -> m0_51  [key=2, style=dotted];
m0_86 -> m0_52  [key=2, style=dotted];
m0_86 -> m0_53  [key=2, style=dotted];
m0_86 -> m0_91  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_107 -> m0_108  [key=0, style=solid];
m0_108 -> m0_109  [key=0, style=solid];
m0_108 -> m0_110  [key=0, style=solid];
m0_110 -> m0_111  [key=0, style=solid];
m0_109 -> m0_112  [key=0, style=solid];
m0_109 -> m0_113  [key=2, style=dotted];
m0_111 -> m0_112  [key=0, style=solid];
m0_111 -> m0_98  [key=2, style=dotted];
m0_112 -> m0_16  [color=blue, key=0, style=bold];
m0_102 -> m0_98  [color=blue, key=0, style=bold];
m0_102 -> m0_3  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ErrorHandling.DefaultStatusCodeHandlerFixture", style=dashed];
m0_102 -> m0_4  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ErrorHandling.DefaultStatusCodeHandlerFixture", style=dashed];
m0_102 -> m0_11  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ErrorHandling.DefaultStatusCodeHandlerFixture", style=dashed];
m0_102 -> m0_18  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ErrorHandling.DefaultStatusCodeHandlerFixture", style=dashed];
m0_102 -> m0_27  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ErrorHandling.DefaultStatusCodeHandlerFixture", style=dashed];
m0_102 -> m0_36  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ErrorHandling.DefaultStatusCodeHandlerFixture", style=dashed];
m0_102 -> m0_45  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ErrorHandling.DefaultStatusCodeHandlerFixture", style=dashed];
m0_102 -> m0_59  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ErrorHandling.DefaultStatusCodeHandlerFixture", style=dashed];
m0_102 -> m0_46  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ErrorHandling.DefaultStatusCodeHandlerFixture", style=dashed];
m0_102 -> m0_64  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ErrorHandling.DefaultStatusCodeHandlerFixture", style=dashed];
m0_102 -> m0_70  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ErrorHandling.DefaultStatusCodeHandlerFixture", style=dashed];
m0_102 -> m0_77  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ErrorHandling.DefaultStatusCodeHandlerFixture", style=dashed];
m0_102 -> m0_78  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ErrorHandling.DefaultStatusCodeHandlerFixture", style=dashed];
m0_102 -> m0_82  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ErrorHandling.DefaultStatusCodeHandlerFixture", style=dashed];
m0_102 -> m0_86  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ErrorHandling.DefaultStatusCodeHandlerFixture", style=dashed];
m0_102 -> m0_92  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ErrorHandling.DefaultStatusCodeHandlerFixture", style=dashed];
m0_102 -> m0_87  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ErrorHandling.DefaultStatusCodeHandlerFixture", style=dashed];
m0_163 -> m0_49  [color=green, key=1, label="Nancy.IO.RequestStream", style=dashed];
m0_163 -> m0_7  [color=darkseagreen4, key=1, label="Nancy.IO.RequestStream", style=dashed];
m0_163 -> m0_8  [color=darkseagreen4, key=1, label="Nancy.IO.RequestStream", style=dashed];
m0_163 -> m0_9  [color=darkseagreen4, key=1, label="Nancy.IO.RequestStream", style=dashed];
m0_163 -> m0_10  [color=darkseagreen4, key=1, label="Nancy.IO.RequestStream", style=dashed];
m0_163 -> m0_11  [color=darkseagreen4, key=1, label="Nancy.IO.RequestStream", style=dashed];
m0_163 -> m0_12  [color=darkseagreen4, key=1, label="Nancy.IO.RequestStream", style=dashed];
m0_163 -> m0_13  [color=darkseagreen4, key=1, label="Nancy.IO.RequestStream", style=dashed];
m0_163 -> m0_14  [color=darkseagreen4, key=1, label="Nancy.IO.RequestStream", style=dashed];
m0_163 -> m0_22  [color=darkseagreen4, key=1, label="Nancy.IO.RequestStream", style=dashed];
m0_163 -> m0_26  [color=darkseagreen4, key=1, label="Nancy.IO.RequestStream", style=dashed];
m0_163 -> m0_30  [color=darkseagreen4, key=1, label="Nancy.IO.RequestStream", style=dashed];
m0_163 -> m0_34  [color=darkseagreen4, key=1, label="Nancy.IO.RequestStream", style=dashed];
m0_163 -> m0_35  [color=darkseagreen4, key=1, label="Nancy.IO.RequestStream", style=dashed];
m0_163 -> m0_36  [color=darkseagreen4, key=1, label="Nancy.IO.RequestStream", style=dashed];
m0_163 -> m0_39  [color=darkseagreen4, key=1, label="Nancy.IO.RequestStream", style=dashed];
m0_163 -> m0_45  [color=darkseagreen4, key=1, label="Nancy.IO.RequestStream", style=dashed];
m0_163 -> m0_53  [color=darkseagreen4, key=1, label="Nancy.IO.RequestStream", style=dashed];
m0_163 -> m0_72  [color=darkseagreen4, key=1, label="Nancy.IO.RequestStream", style=dashed];
m0_163 -> m0_76  [color=darkseagreen4, key=1, label="Nancy.IO.RequestStream", style=dashed];
m0_163 -> m0_80  [color=darkseagreen4, key=1, label="Nancy.IO.RequestStream", style=dashed];
m0_163 -> m0_88  [color=darkseagreen4, key=1, label="Nancy.IO.RequestStream", style=dashed];
m0_163 -> m0_89  [color=darkseagreen4, key=1, label="Nancy.IO.RequestStream", style=dashed];
m0_163 -> m0_91  [color=darkseagreen4, key=1, label="Nancy.IO.RequestStream", style=dashed];
m0_163 -> m0_92  [color=darkseagreen4, key=1, label="Nancy.IO.RequestStream", style=dashed];
m0_163 -> m0_93  [color=darkseagreen4, key=1, label="Nancy.IO.RequestStream", style=dashed];
m0_163 -> m0_107  [color=darkseagreen4, key=1, label="Nancy.IO.RequestStream", style=dashed];
m0_163 -> m0_108  [color=darkseagreen4, key=1, label="Nancy.IO.RequestStream", style=dashed];
m0_163 -> m0_110  [color=darkseagreen4, key=1, label="Nancy.IO.RequestStream", style=dashed];
m0_163 -> m0_121  [color=darkseagreen4, key=1, label="Nancy.IO.RequestStream", style=dashed];
m0_163 -> m0_122  [color=darkseagreen4, key=1, label="Nancy.IO.RequestStream", style=dashed];
m0_163 -> m0_125  [color=darkseagreen4, key=1, label="Nancy.IO.RequestStream", style=dashed];
m0_163 -> m0_126  [color=darkseagreen4, key=1, label="Nancy.IO.RequestStream", style=dashed];
m0_163 -> m0_128  [color=darkseagreen4, key=1, label="Nancy.IO.RequestStream", style=dashed];
m0_163 -> m0_129  [color=darkseagreen4, key=1, label="Nancy.IO.RequestStream", style=dashed];
m0_163 -> m0_131  [color=darkseagreen4, key=1, label="Nancy.IO.RequestStream", style=dashed];
m0_163 -> m0_134  [color=darkseagreen4, key=1, label="Nancy.IO.RequestStream", style=dashed];
m0_163 -> m0_138  [color=darkseagreen4, key=1, label="Nancy.IO.RequestStream", style=dashed];
m0_163 -> m0_140  [color=darkseagreen4, key=1, label="Nancy.IO.RequestStream", style=dashed];
m0_163 -> m0_142  [color=darkseagreen4, key=1, label="Nancy.IO.RequestStream", style=dashed];
m0_163 -> m0_143  [color=darkseagreen4, key=1, label="Nancy.IO.RequestStream", style=dashed];
m0_163 -> m0_144  [color=darkseagreen4, key=1, label="Nancy.IO.RequestStream", style=dashed];
m0_163 -> m0_145  [color=darkseagreen4, key=1, label="Nancy.IO.RequestStream", style=dashed];
m0_163 -> m0_147  [color=darkseagreen4, key=1, label="Nancy.IO.RequestStream", style=dashed];
m0_163 -> m0_148  [color=darkseagreen4, key=1, label="Nancy.IO.RequestStream", style=dashed];
m0_163 -> m0_149  [color=darkseagreen4, key=1, label="Nancy.IO.RequestStream", style=dashed];
m0_163 -> m0_151  [color=darkseagreen4, key=1, label="Nancy.IO.RequestStream", style=dashed];
m1_57 -> m1_58  [key=0, style=solid];
m1_58 -> m1_59  [key=0, style=solid];
m1_58 -> m1_49  [key=2, style=dotted];
m1_58 -> m1_60  [color=darkseagreen4, key=1, label=model, style=dashed];
m1_59 -> m1_60  [key=0, style=solid];
m1_60 -> m1_61  [key=0, style=solid];
m1_60 -> m1_5  [key=2, style=dotted];
m1_61 -> m1_62  [key=0, style=solid];
m1_61 -> m1_6  [key=2, style=dotted];
m1_62 -> m1_63  [key=0, style=solid];
m1_62 -> m1_64  [key=2, style=dotted];
m1_63 -> m1_57  [color=blue, key=0, style=bold];
m1_8 -> m1_9  [key=0, style=solid];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_5  [key=2, style=dotted];
m1_9 -> m1_13  [key=2, style=dotted];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_6  [key=2, style=dotted];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_7  [key=2, style=dotted];
m1_12 -> m1_8  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_5  [key=2, style=dotted];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_6  [key=2, style=dotted];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_7  [key=2, style=dotted];
m1_4 -> m1_0  [color=blue, key=0, style=bold];
m1_27 -> m1_28  [key=0, style=solid];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_26  [key=2, style=dotted];
m1_28 -> m1_30  [color=darkseagreen4, key=1, label=model, style=dashed];
m1_29 -> m1_30  [key=0, style=solid];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_5  [key=2, style=dotted];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_6  [key=2, style=dotted];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> d151  [key=2, style=dotted];
m1_33 -> m1_27  [color=blue, key=0, style=bold];
m1_42 -> m1_43  [key=0, style=solid];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_49  [key=2, style=dotted];
m1_43 -> m1_45  [color=darkseagreen4, key=1, label=model, style=dashed];
m1_44 -> m1_45  [key=0, style=solid];
m1_45 -> m1_46  [key=0, style=solid];
m1_45 -> m1_5  [key=2, style=dotted];
m1_46 -> m1_47  [key=0, style=solid];
m1_46 -> m1_6  [key=2, style=dotted];
m1_47 -> m1_48  [key=0, style=solid];
m1_47 -> m1_7  [key=2, style=dotted];
m1_48 -> m1_42  [color=blue, key=0, style=bold];
m1_19 -> m1_20  [key=0, style=solid];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_26  [key=2, style=dotted];
m1_20 -> m1_22  [color=darkseagreen4, key=1, label=model, style=dashed];
m1_21 -> m1_22  [key=0, style=solid];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_5  [key=2, style=dotted];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_6  [key=2, style=dotted];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_7  [key=2, style=dotted];
m1_25 -> m1_19  [color=blue, key=0, style=bold];
m1_50 -> m1_51  [key=0, style=solid];
m1_51 -> m1_52  [key=0, style=solid];
m1_51 -> m1_49  [key=2, style=dotted];
m1_51 -> m1_53  [color=darkseagreen4, key=1, label=model, style=dashed];
m1_52 -> m1_53  [key=0, style=solid];
m1_53 -> m1_54  [key=0, style=solid];
m1_53 -> m1_5  [key=2, style=dotted];
m1_54 -> m1_55  [key=0, style=solid];
m1_54 -> m1_6  [key=2, style=dotted];
m1_55 -> m1_56  [key=0, style=solid];
m1_55 -> d151  [key=2, style=dotted];
m1_56 -> m1_50  [color=blue, key=0, style=bold];
m1_14 -> m1_15  [key=0, style=solid];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_5  [key=2, style=dotted];
m1_15 -> m1_13  [key=2, style=dotted];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_6  [key=2, style=dotted];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_7  [key=2, style=dotted];
m1_18 -> m1_14  [color=blue, key=0, style=bold];
m1_72 -> m1_73  [key=0, style=solid];
m1_73 -> m1_74  [key=0, style=solid];
m1_73 -> m1_71  [key=2, style=dotted];
m1_74 -> m1_75  [key=0, style=solid];
m1_74 -> m1_5  [key=2, style=dotted];
m1_75 -> m1_76  [key=0, style=solid];
m1_75 -> m1_6  [key=2, style=dotted];
m1_76 -> m1_77  [key=0, style=solid];
m1_76 -> d151  [key=2, style=dotted];
m1_77 -> m1_72  [color=blue, key=0, style=bold];
m1_65 -> m1_66  [key=0, style=solid];
m1_66 -> m1_67  [key=0, style=solid];
m1_66 -> m1_71  [key=2, style=dotted];
m1_67 -> m1_68  [key=0, style=solid];
m1_67 -> m1_5  [key=2, style=dotted];
m1_68 -> m1_69  [key=0, style=solid];
m1_68 -> m1_6  [key=2, style=dotted];
m1_69 -> m1_70  [key=0, style=solid];
m1_69 -> m1_7  [key=2, style=dotted];
m1_70 -> m1_65  [color=blue, key=0, style=bold];
m1_35 -> m1_36  [key=0, style=solid];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_26  [key=2, style=dotted];
m1_36 -> m1_38  [color=darkseagreen4, key=1, label=model, style=dashed];
m1_37 -> m1_38  [key=0, style=solid];
m1_38 -> m1_39  [key=0, style=solid];
m1_38 -> m1_5  [key=2, style=dotted];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_6  [key=2, style=dotted];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> d151  [key=2, style=dotted];
m1_41 -> m1_35  [color=blue, key=0, style=bold];
m4_18 -> m4_19  [key=0, style=solid];
m4_19 -> m4_20  [color=red, key=0, style=solid];
m4_19 -> m4_15  [key=2, style=dotted];
m4_19 -> m4_21  [color=red, key=1, label=result, style=dashed];
m4_20 -> m4_21  [color=red, key=0, style=solid];
m4_20 -> m4_16  [color=red, key=2, style=dotted];
m4_21 -> m4_22  [color=red, key=0, style=solid];
m4_21 -> m4_17  [color=red, key=2, style=dotted];
m4_21 -> m4_16  [color=red, key=2, style=dotted];
m4_22 -> m4_18  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_4  [key=2, style=dotted];
m4_1 -> m4_7  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_5  [key=2, style=dotted];
m4_3 -> m4_0  [color=blue, key=0, style=bold];
m4_10 -> m4_11  [key=0, style=solid];
m4_11 -> m4_12  [color=red, key=0, style=solid];
m4_11 -> m4_15  [key=2, style=dotted];
m4_11 -> m4_13  [color=red, key=1, label=result, style=dashed];
m4_12 -> m4_13  [color=red, key=0, style=solid];
m4_12 -> m4_16  [color=red, key=2, style=dotted];
m4_13 -> m4_14  [color=red, key=0, style=solid];
m4_13 -> m4_17  [color=red, key=2, style=dotted];
m4_13 -> m4_16  [color=red, key=2, style=dotted];
m4_14 -> m4_10  [color=blue, key=0, style=bold];
m4_28 -> m4_29  [key=0, style=solid];
m4_29 -> m4_30  [key=0, style=solid];
m4_29 -> m4_33  [key=2, style=dotted];
m4_29 -> m4_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_30 -> m4_31  [key=0, style=solid];
m4_30 -> m4_33  [key=2, style=dotted];
m4_30 -> m4_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_31 -> m4_32  [key=0, style=solid];
m4_31 -> m4_33  [key=2, style=dotted];
m4_31 -> m4_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_32 -> m4_28  [color=blue, key=0, style=bold];
m4_40 -> m4_41  [key=0, style=solid];
m4_7 -> m4_8  [key=0, style=solid];
m4_7 -> m4_9  [key=2, style=dotted];
m4_6 -> m4_7  [key=0, style=solid];
m4_8 -> m4_6  [color=blue, key=0, style=bold];
m4_34 -> m4_35  [key=0, style=solid];
m4_37 -> m4_38  [key=0, style=solid];
m4_35 -> m4_36  [key=0, style=solid];
m4_36 -> m4_34  [color=blue, key=0, style=bold];
m4_38 -> m4_39  [key=0, style=solid];
m4_39 -> m4_37  [color=blue, key=0, style=bold];
m4_41 -> m4_42  [key=0, style=solid];
m4_42 -> m4_40  [color=blue, key=0, style=bold];
m4_23 -> m4_24  [key=0, style=solid];
m4_24 -> m4_25  [color=red, key=0, style=solid];
m4_24 -> m4_15  [key=2, style=dotted];
m4_24 -> m4_26  [color=red, key=1, label=result, style=dashed];
m4_25 -> m4_26  [color=red, key=0, style=solid];
m4_25 -> m4_16  [color=red, key=2, style=dotted];
m4_26 -> m4_27  [color=red, key=0, style=solid];
m4_26 -> m4_17  [color=red, key=2, style=dotted];
m4_26 -> m4_16  [color=red, key=2, style=dotted];
m4_27 -> m4_23  [color=blue, key=0, style=bold];
m4_43 -> m4_2  [color=darkseagreen4, key=1, label="Nancy.ViewEngines.DotLiquid.Tests.Functional.PartialRenderingFixture", style=dashed];
m4_43 -> m4_11  [color=darkseagreen4, key=1, label="Nancy.ViewEngines.DotLiquid.Tests.Functional.PartialRenderingFixture", style=dashed];
m4_43 -> m4_19  [color=darkseagreen4, key=1, label="Nancy.ViewEngines.DotLiquid.Tests.Functional.PartialRenderingFixture", style=dashed];
m4_43 -> m4_24  [color=darkseagreen4, key=1, label="Nancy.ViewEngines.DotLiquid.Tests.Functional.PartialRenderingFixture", style=dashed];
m4_44 -> m4_29  [color=darkseagreen4, key=1, label="Nancy.ViewEngines.DotLiquid.Tests.Functional.PartialRenderingModule", style=dashed];
m4_44 -> m4_35  [color=darkseagreen4, key=1, label="Nancy.ViewEngines.DotLiquid.Tests.Functional.PartialRenderingModule", style=dashed];
m4_44 -> m4_30  [color=darkseagreen4, key=1, label="Nancy.ViewEngines.DotLiquid.Tests.Functional.PartialRenderingModule", style=dashed];
m4_44 -> m4_38  [color=darkseagreen4, key=1, label="Nancy.ViewEngines.DotLiquid.Tests.Functional.PartialRenderingModule", style=dashed];
m4_44 -> m4_31  [color=darkseagreen4, key=1, label="Nancy.ViewEngines.DotLiquid.Tests.Functional.PartialRenderingModule", style=dashed];
m4_44 -> m4_41  [color=darkseagreen4, key=1, label="Nancy.ViewEngines.DotLiquid.Tests.Functional.PartialRenderingModule", style=dashed];
m5_71 -> m5_74  [key=0, style=solid];
m5_71 -> m5_77  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_74 -> m5_75  [key=0, style=solid];
m5_74 -> m5_81  [key=2, style=dotted];
m5_74 -> m5_77  [color=darkseagreen4, key=1, label=converter, style=dashed];
m5_77 -> m5_80  [key=0, style=solid];
m5_77 -> m5_83  [key=2, style=dotted];
m5_76 -> m5_80  [key=0, style=solid];
m5_79 -> m5_80  [key=0, style=solid];
m5_75 -> m5_77  [key=0, style=solid];
m5_75 -> m5_76  [key=0, style=solid];
m5_75 -> m5_82  [key=2, style=dotted];
m5_78 -> m5_79  [key=0, style=solid];
m5_80 -> m5_71  [color=blue, key=0, style=bold];
m5_18 -> m5_19  [key=0, style=solid];
m5_24 -> m5_25  [key=0, style=solid];
m5_24 -> m5_31  [key=2, style=dotted];
m5_41 -> m5_42  [key=0, style=solid];
m5_41 -> m5_31  [key=2, style=dotted];
m5_41 -> m5_43  [color=darkseagreen4, key=1, label=providerName, style=dashed];
m5_42 -> m5_43  [key=0, style=solid];
m5_42 -> m5_31  [key=2, style=dotted];
m5_54 -> m5_55  [key=0, style=solid];
m5_54 -> m5_31  [key=2, style=dotted];
m5_54 -> m5_56  [color=darkseagreen4, key=1, label=providerName, style=dashed];
m5_55 -> m5_56  [key=0, style=solid];
m5_55 -> m5_31  [key=2, style=dotted];
m5_28 -> m5_29  [color=green, key=0, style=solid];
m5_28 -> m5_15  [color=green, key=2, style=dotted];
m5_28 -> m5_16  [color=green, key=2, style=dotted];
m5_28 -> m5_33  [color=green, key=1, label="lambda expression", style=dashed];
m5_25 -> m5_28  [color=green, key=1, label=diagnostic, style=dashed];
m5_25 -> m5_26  [key=0, style=solid];
m5_25 -> m5_32  [key=2, style=dotted];
m5_26 -> m5_28  [color=green, key=0, style=solid];
m5_26 -> m5_27  [color=green, key=0, style=solid];
m5_29 -> m5_30  [key=0, style=solid];
m5_29 -> m5_17  [key=2, style=dotted];
m5_33 -> m5_34  [color=green, key=0, style=solid];
m5_27 -> m5_30  [color=green, key=0, style=solid];
m5_30 -> m5_23  [color=blue, key=0, style=bold];
m5_34 -> m5_35  [color=green, key=0, style=solid];
m5_34 -> m5_36  [color=green, key=2, style=dotted];
m5_34 -> m5_15  [color=green, key=2, style=dotted];
m5_34 -> m5_37  [color=green, key=1, label="lambda expression", style=dashed];
m5_35 -> m5_33  [color=blue, key=0, style=bold];
m5_37 -> m5_38  [color=green, key=0, style=solid];
m5_38 -> m5_39  [color=green, key=0, style=solid];
m5_38 -> m5_36  [color=green, key=2, style=dotted];
m5_39 -> m5_37  [color=blue, key=0, style=bold];
m5_9 -> m5_10  [key=0, style=solid];
m5_12 -> m5_15  [key=2, style=dotted];
m5_12 -> m5_16  [key=2, style=dotted];
m5_12 -> m5_13  [key=0, style=solid];
m5_12 -> m5_18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_13 -> m5_14  [key=0, style=solid];
m5_13 -> m5_17  [key=2, style=dotted];
m5_43 -> m5_44  [key=0, style=solid];
m5_43 -> m5_49  [key=2, style=dotted];
m5_43 -> m5_46  [color=darkseagreen4, key=1, label=method, style=dashed];
m5_43 -> m5_47  [color=darkseagreen4, key=1, label=method, style=dashed];
m5_46 -> m5_47  [key=0, style=solid];
m5_46 -> m5_50  [key=2, style=dotted];
m5_47 -> m5_48  [key=0, style=solid];
m5_47 -> m5_51  [key=2, style=dotted];
m5_47 -> m5_52  [key=2, style=dotted];
m5_56 -> m5_57  [key=0, style=solid];
m5_56 -> m5_49  [key=2, style=dotted];
m5_56 -> m5_59  [color=darkseagreen4, key=1, label=method, style=dashed];
m5_59 -> m5_60  [key=0, style=solid];
m5_59 -> m5_64  [key=2, style=dotted];
m5_59 -> m5_62  [color=darkseagreen4, key=1, label=template, style=dashed];
m5_23 -> m5_24  [key=0, style=solid];
m5_40 -> m5_41  [key=0, style=solid];
m5_40 -> m5_42  [color=darkseagreen4, key=1, label=dynamic, style=dashed];
m5_53 -> m5_54  [key=0, style=solid];
m5_53 -> m5_55  [color=darkseagreen4, key=1, label=dynamic, style=dashed];
m5_8 -> m5_9  [key=0, style=solid];
m5_10 -> m5_8  [color=blue, key=0, style=bold];
m5_11 -> m5_12  [key=0, style=solid];
m5_14 -> m5_11  [color=blue, key=0, style=bold];
m5_44 -> m5_46  [key=0, style=solid];
m5_44 -> m5_45  [key=0, style=solid];
m5_48 -> m5_40  [color=blue, key=0, style=bold];
m5_57 -> m5_59  [key=0, style=solid];
m5_57 -> m5_58  [key=0, style=solid];
m5_60 -> m5_61  [key=0, style=solid];
m5_60 -> m5_62  [key=0, style=solid];
m5_62 -> m5_63  [key=0, style=solid];
m5_63 -> m5_53  [color=blue, key=0, style=bold];
m5_19 -> m5_20  [key=0, style=solid];
m5_19 -> m5_21  [key=2, style=dotted];
m5_19 -> m5_22  [key=2, style=dotted];
m5_45 -> m5_48  [key=0, style=solid];
m5_58 -> m5_63  [key=0, style=solid];
m5_61 -> m5_63  [key=0, style=solid];
m5_20 -> m5_18  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [key=0, style=solid];
m5_4 -> m5_5  [color=green, key=0, style=solid];
m5_4 -> m5_24  [color=green, key=1, label=dynamic, style=dashed];
m5_3 -> m5_4  [color=green, key=0, style=solid];
m5_5 -> m5_6  [color=green, key=0, style=solid];
m5_5 -> m5_41  [color=green, key=1, label=dynamic, style=dashed];
m5_5 -> m5_42  [color=green, key=1, label=dynamic, style=dashed];
m5_6 -> m5_7  [color=green, key=0, style=solid];
m5_6 -> m5_54  [color=green, key=1, label=dynamic, style=dashed];
m5_6 -> m5_55  [color=green, key=1, label=dynamic, style=dashed];
m5_1 -> m5_2  [key=0, style=solid];
m5_2 -> m5_3  [key=0, style=solid];
m5_7 -> m5_0  [color=blue, key=0, style=bold];
m5_50 -> m5_65  [key=0, style=solid];
m5_50 -> m5_66  [color=darkseagreen4, key=1, label="Nancy.Diagnostics.InteractiveDiagnosticMethod", style=dashed];
m5_50 -> m5_67  [color=darkseagreen4, key=1, label=dynamic, style=dashed];
m5_65 -> m5_66  [key=0, style=solid];
m5_65 -> m5_70  [key=2, style=dotted];
m5_65 -> m5_67  [color=darkseagreen4, key=1, label=arguments, style=dashed];
m5_65 -> m5_68  [color=darkseagreen4, key=1, label=arguments, style=dashed];
m5_66 -> m5_67  [key=0, style=solid];
m5_66 -> m5_68  [key=0, style=solid];
m5_67 -> m5_66  [key=0, style=solid];
m5_67 -> m5_71  [key=2, style=dotted];
m5_67 -> m5_72  [key=2, style=dotted];
m5_68 -> m5_69  [key=0, style=solid];
m5_68 -> m5_73  [key=2, style=dotted];
m5_69 -> m5_50  [color=blue, key=0, style=bold];
m5_84 -> m5_4  [color=green, key=1, label="Nancy.Diagnostics.Modules.InteractiveModule", style=dashed];
m5_84 -> m5_5  [color=green, key=1, label="Nancy.Diagnostics.Modules.InteractiveModule", style=dashed];
m5_84 -> m5_6  [color=green, key=1, label="Nancy.Diagnostics.Modules.InteractiveModule", style=dashed];
m5_84 -> m5_1  [color=darkseagreen4, key=1, label="Nancy.Diagnostics.Modules.InteractiveModule", style=dashed];
m5_84 -> m5_2  [color=darkseagreen4, key=1, label="Nancy.Diagnostics.Modules.InteractiveModule", style=dashed];
m5_84 -> m5_9  [color=darkseagreen4, key=1, label="Nancy.Diagnostics.Modules.InteractiveModule", style=dashed];
m5_84 -> m5_3  [color=darkseagreen4, key=1, label="Nancy.Diagnostics.Modules.InteractiveModule", style=dashed];
m5_84 -> m5_12  [color=darkseagreen4, key=1, label="Nancy.Diagnostics.Modules.InteractiveModule", style=dashed];
m5_84 -> m5_13  [color=darkseagreen4, key=1, label="Nancy.Diagnostics.Modules.InteractiveModule", style=dashed];
m5_84 -> m5_25  [color=darkseagreen4, key=1, label="Nancy.Diagnostics.Modules.InteractiveModule", style=dashed];
m5_84 -> m5_29  [color=darkseagreen4, key=1, label="Nancy.Diagnostics.Modules.InteractiveModule", style=dashed];
m5_84 -> m5_43  [color=darkseagreen4, key=1, label="Nancy.Diagnostics.Modules.InteractiveModule", style=dashed];
m5_84 -> m5_46  [color=darkseagreen4, key=1, label="Nancy.Diagnostics.Modules.InteractiveModule", style=dashed];
m5_84 -> m5_47  [color=darkseagreen4, key=1, label="Nancy.Diagnostics.Modules.InteractiveModule", style=dashed];
m5_84 -> m5_56  [color=darkseagreen4, key=1, label="Nancy.Diagnostics.Modules.InteractiveModule", style=dashed];
m5_84 -> m5_59  [color=darkseagreen4, key=1, label="Nancy.Diagnostics.Modules.InteractiveModule", style=dashed];
m6_7 -> m6_8  [key=0, style=solid];
m6_8 -> m6_9  [key=0, style=solid];
m6_8 -> m6_10  [key=0, style=solid];
m6_8 -> m6_13  [key=2, style=dotted];
m6_9 -> m6_8  [key=0, style=solid];
m6_9 -> d37  [key=2, style=dotted];
m6_10 -> m6_11  [key=0, style=solid];
m6_10 -> m6_15  [key=2, style=dotted];
m6_11 -> m6_12  [key=0, style=solid];
m6_11 -> d37  [key=2, style=dotted];
m6_12 -> m6_7  [color=blue, key=0, style=bold];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_5  [key=2, style=dotted];
m6_2 -> m6_3  [key=0, style=solid];
m6_2 -> m6_6  [key=2, style=dotted];
m6_3 -> m6_4  [key=0, style=solid];
m6_4 -> m6_0  [color=blue, key=0, style=bold];
m6_16 -> m6_1  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m6_16 -> m6_2  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m6_16 -> m6_3  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m6_16 -> m6_8  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m6_16 -> m6_10  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m6_16 -> m6_11  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m7_132 -> m7_133  [key=0, style=solid];
m7_133 -> m7_134  [key=0, style=solid];
m7_133 -> m7_83  [key=2, style=dotted];
m7_133 -> m7_136  [color=darkseagreen4, key=1, label=request, style=dashed];
m7_133 -> m7_146  [color=darkseagreen4, key=1, label=request, style=dashed];
m7_133 -> m7_137  [color=darkseagreen4, key=1, label=request, style=dashed];
m7_133 -> m7_153  [color=darkseagreen4, key=1, label=request, style=dashed];
m7_134 -> m7_135  [key=0, style=solid];
m7_134 -> m7_84  [key=2, style=dotted];
m7_134 -> m7_138  [color=darkseagreen4, key=1, label=context, style=dashed];
m7_134 -> m7_139  [color=red, key=1, label=context, style=dashed];
m7_134 -> m7_159  [color=red, key=1, label=context, style=dashed];
m7_136 -> m7_137  [key=0, style=solid];
m7_136 -> m7_15  [key=2, style=dotted];
m7_136 -> m7_50  [key=2, style=dotted];
m7_136 -> m7_17  [key=2, style=dotted];
m7_136 -> m7_145  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_136 -> m7_150  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator", style=dashed];
m7_137 -> m7_138  [key=0, style=solid];
m7_137 -> m7_15  [key=2, style=dotted];
m7_137 -> m7_50  [key=2, style=dotted];
m7_137 -> m7_17  [key=2, style=dotted];
m7_137 -> m7_152  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_137 -> m7_156  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator", style=dashed];
m7_135 -> m7_136  [key=0, style=solid];
m7_135 -> m7_65  [key=2, style=dotted];
m7_135 -> m7_141  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_135 -> m7_138  [color=darkseagreen4, key=1, label=resolver, style=dashed];
m7_138 -> m7_139  [color=red, key=0, style=solid];
m7_138 -> m7_85  [key=2, style=dotted];
m7_139 -> m7_140  [color=red, key=0, style=solid];
m7_139 -> m7_15  [color=red, key=2, style=dotted];
m7_139 -> d199  [color=red, key=2, style=dotted];
m7_139 -> m7_158  [color=red, key=1, label="lambda expression", style=dashed];
m7_140 -> m7_132  [color=blue, key=0, style=bold];
m7_320 -> m7_321  [key=0, style=solid];
m7_321 -> m7_322  [key=0, style=solid];
m7_321 -> m7_83  [key=2, style=dotted];
m7_322 -> m7_323  [key=0, style=solid];
m7_322 -> m7_84  [key=2, style=dotted];
m7_322 -> m7_324  [color=darkseagreen4, key=1, label=context, style=dashed];
m7_323 -> m7_324  [key=0, style=solid];
m7_323 -> m7_65  [key=2, style=dotted];
m7_323 -> m7_330  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_324 -> m7_325  [key=0, style=solid];
m7_324 -> m7_85  [key=2, style=dotted];
m7_324 -> m7_326  [color=darkseagreen4, key=1, label=resolvedRoute, style=dashed];
m7_324 -> m7_327  [color=darkseagreen4, key=1, label=resolvedRoute, style=dashed];
m7_325 -> m7_326  [key=0, style=solid];
m7_325 -> m7_329  [key=2, style=dotted];
m7_326 -> m7_327  [key=0, style=solid];
m7_326 -> m7_86  [key=2, style=dotted];
m7_327 -> m7_328  [key=0, style=solid];
m7_327 -> m7_86  [key=2, style=dotted];
m7_328 -> m7_320  [color=blue, key=0, style=bold];
m7_270 -> m7_271  [key=0, style=solid];
m7_271 -> m7_272  [key=0, style=solid];
m7_271 -> m7_83  [key=2, style=dotted];
m7_271 -> m7_275  [color=darkseagreen4, key=1, label=request, style=dashed];
m7_271 -> m7_282  [color=darkseagreen4, key=1, label=request, style=dashed];
m7_272 -> m7_273  [key=0, style=solid];
m7_272 -> m7_84  [key=2, style=dotted];
m7_272 -> m7_274  [color=darkseagreen4, key=1, label=context, style=dashed];
m7_275 -> m7_276  [key=0, style=solid];
m7_275 -> m7_15  [key=2, style=dotted];
m7_275 -> d199  [key=2, style=dotted];
m7_275 -> m7_281  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_273 -> m7_274  [key=0, style=solid];
m7_273 -> m7_65  [key=2, style=dotted];
m7_273 -> m7_277  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_274 -> m7_275  [key=0, style=solid];
m7_274 -> m7_85  [key=2, style=dotted];
m7_276 -> m7_270  [color=blue, key=0, style=bold];
m7_444 -> m7_445  [key=0, style=solid];
m7_445 -> m7_446  [key=0, style=solid];
m7_445 -> m7_453  [key=2, style=dotted];
m7_445 -> m7_447  [color=darkseagreen4, key=1, label=moduleCatalog, style=dashed];
m7_446 -> m7_447  [key=0, style=solid];
m7_446 -> m7_454  [key=2, style=dotted];
m7_446 -> m7_455  [key=2, style=dotted];
m7_446 -> m7_14  [key=2, style=dotted];
m7_447 -> m7_448  [key=0, style=solid];
m7_447 -> m7_73  [key=2, style=dotted];
m7_447 -> m7_450  [color=darkseagreen4, key=1, label=specificResolver, style=dashed];
m7_448 -> m7_449  [key=0, style=solid];
m7_448 -> m7_83  [key=2, style=dotted];
m7_450 -> m7_451  [key=0, style=solid];
m7_450 -> m7_85  [key=2, style=dotted];
m7_449 -> m7_450  [key=0, style=solid];
m7_449 -> m7_84  [key=2, style=dotted];
m7_451 -> m7_452  [key=0, style=solid];
m7_451 -> m7_456  [key=2, style=dotted];
m7_452 -> m7_444  [color=blue, key=0, style=bold];
m7_161 -> m7_162  [color=red, key=0, style=solid];
m7_162 -> m7_163  [color=red, key=0, style=solid];
m7_162 -> m7_83  [color=red, key=2, style=dotted];
m7_162 -> m7_165  [color=red, key=1, label=request, style=dashed];
m7_162 -> m7_180  [color=red, key=1, label=request, style=dashed];
m7_162 -> m7_166  [color=red, key=1, label=request, style=dashed];
m7_162 -> m7_186  [color=red, key=1, label=request, style=dashed];
m7_162 -> m7_167  [color=red, key=1, label=request, style=dashed];
m7_162 -> m7_192  [color=red, key=1, label=request, style=dashed];
m7_163 -> m7_164  [color=red, key=0, style=solid];
m7_163 -> m7_84  [color=red, key=2, style=dotted];
m7_163 -> m7_168  [color=red, key=1, label=context, style=dashed];
m7_163 -> m7_169  [color=red, key=1, label=context, style=dashed];
m7_163 -> m7_198  [color=red, key=1, label=context, style=dashed];
m7_165 -> m7_166  [color=red, key=0, style=solid];
m7_165 -> m7_15  [color=red, key=2, style=dotted];
m7_165 -> m7_50  [color=red, key=2, style=dotted];
m7_165 -> m7_17  [color=red, key=2, style=dotted];
m7_165 -> m7_179  [color=red, key=1, label="lambda expression", style=dashed];
m7_165 -> m7_183  [color=red, key=1, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator", style=dashed];
m7_166 -> m7_167  [key=0, style=solid];
m7_166 -> m7_15  [key=2, style=dotted];
m7_166 -> m7_50  [key=2, style=dotted];
m7_166 -> m7_17  [key=2, style=dotted];
m7_166 -> m7_185  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_166 -> m7_189  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator", style=dashed];
m7_167 -> m7_168  [key=0, style=solid];
m7_167 -> m7_15  [key=2, style=dotted];
m7_167 -> m7_50  [key=2, style=dotted];
m7_167 -> m7_17  [key=2, style=dotted];
m7_167 -> m7_191  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_167 -> m7_195  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator", style=dashed];
m7_164 -> m7_165  [color=red, key=0, style=solid];
m7_164 -> m7_65  [color=red, key=2, style=dotted];
m7_164 -> m7_171  [color=red, key=1, label="lambda expression", style=dashed];
m7_164 -> m7_168  [color=red, key=1, label=resolver, style=dashed];
m7_168 -> m7_169  [key=0, style=solid];
m7_168 -> m7_85  [key=2, style=dotted];
m7_169 -> m7_170  [key=0, style=solid];
m7_169 -> m7_15  [key=2, style=dotted];
m7_169 -> d199  [key=2, style=dotted];
m7_169 -> m7_197  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_170 -> m7_161  [color=blue, key=0, style=bold];
m7_457 -> m7_458  [key=0, style=solid];
m7_458 -> m7_459  [key=0, style=solid];
m7_458 -> m7_453  [key=2, style=dotted];
m7_458 -> m7_460  [color=darkseagreen4, key=1, label=moduleCatalog, style=dashed];
m7_459 -> m7_460  [key=0, style=solid];
m7_459 -> m7_454  [key=2, style=dotted];
m7_459 -> m7_455  [key=2, style=dotted];
m7_459 -> m7_14  [key=2, style=dotted];
m7_460 -> m7_461  [key=0, style=solid];
m7_460 -> m7_73  [key=2, style=dotted];
m7_460 -> m7_463  [color=darkseagreen4, key=1, label=specificResolver, style=dashed];
m7_461 -> m7_462  [key=0, style=solid];
m7_461 -> m7_83  [key=2, style=dotted];
m7_463 -> m7_464  [key=0, style=solid];
m7_463 -> m7_85  [key=2, style=dotted];
m7_462 -> m7_463  [key=0, style=solid];
m7_462 -> m7_84  [key=2, style=dotted];
m7_464 -> m7_465  [key=0, style=solid];
m7_464 -> m7_456  [key=2, style=dotted];
m7_465 -> m7_457  [color=blue, key=0, style=bold];
m7_477 -> m7_478  [key=0, style=solid];
m7_478 -> m7_479  [key=0, style=solid];
m7_478 -> m7_14  [key=2, style=dotted];
m7_478 -> m7_492  [color=darkseagreen4, key=1, label=moduleCatalog, style=dashed];
m7_478 -> m7_480  [color=darkseagreen4, key=1, label=moduleCatalog, style=dashed];
m7_478 -> m7_496  [color=darkseagreen4, key=1, label=moduleCatalog, style=dashed];
m7_478 -> m7_481  [color=darkseagreen4, key=1, label=moduleCatalog, style=dashed];
m7_478 -> m7_482  [color=darkseagreen4, key=1, label=moduleCatalog, style=dashed];
m7_479 -> m7_480  [key=0, style=solid];
m7_479 -> m7_15  [key=2, style=dotted];
m7_479 -> m7_489  [key=2, style=dotted];
m7_479 -> m7_17  [key=2, style=dotted];
m7_479 -> m7_491  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_480 -> m7_481  [key=0, style=solid];
m7_480 -> m7_15  [key=2, style=dotted];
m7_480 -> m7_489  [key=2, style=dotted];
m7_480 -> m7_17  [key=2, style=dotted];
m7_480 -> m7_495  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_481 -> m7_482  [key=0, style=solid];
m7_481 -> m7_454  [key=2, style=dotted];
m7_481 -> m7_455  [key=2, style=dotted];
m7_481 -> m7_14  [key=2, style=dotted];
m7_482 -> m7_483  [key=0, style=solid];
m7_482 -> m7_490  [key=2, style=dotted];
m7_482 -> m7_485  [color=darkseagreen4, key=1, label=specificResolver, style=dashed];
m7_483 -> m7_484  [key=0, style=solid];
m7_483 -> m7_83  [key=2, style=dotted];
m7_485 -> m7_486  [key=0, style=solid];
m7_485 -> m7_85  [key=2, style=dotted];
m7_485 -> m7_487  [color=darkseagreen4, key=1, label=result, style=dashed];
m7_484 -> m7_485  [key=0, style=solid];
m7_484 -> m7_84  [key=2, style=dotted];
m7_486 -> m7_487  [key=0, style=solid];
m7_486 -> m7_329  [key=2, style=dotted];
m7_487 -> m7_488  [key=0, style=solid];
m7_487 -> m7_329  [key=2, style=dotted];
m7_488 -> m7_477  [color=blue, key=0, style=bold];
m7_333 -> m7_334  [key=0, style=solid];
m7_334 -> m7_335  [key=0, style=solid];
m7_334 -> m7_83  [key=2, style=dotted];
m7_334 -> m7_340  [color=darkseagreen4, key=1, label=request, style=dashed];
m7_335 -> m7_336  [key=0, style=solid];
m7_335 -> m7_84  [key=2, style=dotted];
m7_335 -> m7_337  [color=darkseagreen4, key=1, label=context, style=dashed];
m7_340 -> m7_341  [key=0, style=solid];
m7_340 -> m7_87  [key=2, style=dotted];
m7_336 -> m7_337  [key=0, style=solid];
m7_336 -> m7_65  [key=2, style=dotted];
m7_336 -> m7_343  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_337 -> m7_338  [key=0, style=solid];
m7_337 -> m7_85  [key=2, style=dotted];
m7_337 -> m7_339  [color=darkseagreen4, key=1, label=route, style=dashed];
m7_337 -> m7_340  [color=darkseagreen4, key=1, label=route, style=dashed];
m7_338 -> m7_339  [key=0, style=solid];
m7_338 -> m7_329  [key=2, style=dotted];
m7_339 -> m7_340  [key=0, style=solid];
m7_339 -> m7_342  [key=2, style=dotted];
m7_341 -> m7_333  [color=blue, key=0, style=bold];
m7_346 -> m7_347  [key=0, style=solid];
m7_347 -> m7_348  [key=0, style=solid];
m7_347 -> m7_83  [key=2, style=dotted];
m7_348 -> m7_349  [key=0, style=solid];
m7_348 -> m7_84  [key=2, style=dotted];
m7_348 -> m7_350  [color=darkseagreen4, key=1, label=context, style=dashed];
m7_349 -> m7_350  [key=0, style=solid];
m7_349 -> m7_65  [key=2, style=dotted];
m7_349 -> m7_357  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_350 -> m7_351  [key=0, style=solid];
m7_350 -> m7_85  [key=2, style=dotted];
m7_350 -> m7_352  [color=darkseagreen4, key=1, label=route, style=dashed];
m7_350 -> m7_353  [color=darkseagreen4, key=1, label=route, style=dashed];
m7_351 -> m7_352  [key=0, style=solid];
m7_351 -> m7_329  [key=2, style=dotted];
m7_352 -> m7_353  [key=0, style=solid];
m7_352 -> m7_342  [key=2, style=dotted];
m7_353 -> m7_354  [key=0, style=solid];
m7_353 -> m7_355  [key=2, style=dotted];
m7_353 -> m7_356  [key=2, style=dotted];
m7_353 -> m7_87  [key=2, style=dotted];
m7_354 -> m7_346  [color=blue, key=0, style=bold];
m7_284 -> m7_285  [key=0, style=solid];
m7_285 -> m7_286  [key=0, style=solid];
m7_285 -> m7_83  [key=2, style=dotted];
m7_286 -> m7_287  [key=0, style=solid];
m7_286 -> m7_84  [key=2, style=dotted];
m7_286 -> m7_288  [color=darkseagreen4, key=1, label=context, style=dashed];
m7_286 -> m7_289  [color=darkseagreen4, key=1, label=context, style=dashed];
m7_286 -> m7_295  [color=darkseagreen4, key=1, label=context, style=dashed];
m7_287 -> m7_288  [key=0, style=solid];
m7_287 -> m7_65  [key=2, style=dotted];
m7_287 -> m7_291  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_288 -> m7_289  [key=0, style=solid];
m7_288 -> m7_85  [key=2, style=dotted];
m7_289 -> m7_290  [key=0, style=solid];
m7_289 -> m7_15  [key=2, style=dotted];
m7_289 -> d199  [key=2, style=dotted];
m7_289 -> m7_294  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_290 -> m7_284  [color=blue, key=0, style=bold];
m7_92 -> m7_93  [key=0, style=solid];
m7_93 -> m7_94  [key=0, style=solid];
m7_93 -> m7_83  [key=2, style=dotted];
m7_94 -> m7_95  [key=0, style=solid];
m7_94 -> m7_84  [key=2, style=dotted];
m7_94 -> m7_96  [color=darkseagreen4, key=1, label=context, style=dashed];
m7_95 -> m7_96  [key=0, style=solid];
m7_95 -> m7_65  [key=2, style=dotted];
m7_95 -> m7_102  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_96 -> m7_97  [key=0, style=solid];
m7_96 -> m7_85  [key=2, style=dotted];
m7_96 -> m7_98  [color=darkseagreen4, key=1, label=resolvedRoute, style=dashed];
m7_96 -> m7_99  [color=darkseagreen4, key=1, label=resolvedRoute, style=dashed];
m7_97 -> m7_98  [key=0, style=solid];
m7_97 -> m7_86  [key=2, style=dotted];
m7_98 -> m7_99  [key=0, style=solid];
m7_98 -> m7_86  [key=2, style=dotted];
m7_99 -> m7_100  [key=0, style=solid];
m7_99 -> m7_101  [key=2, style=dotted];
m7_100 -> m7_92  [color=blue, key=0, style=bold];
m7_297 -> m7_298  [key=0, style=solid];
m7_298 -> m7_299  [key=0, style=solid];
m7_298 -> m7_83  [key=2, style=dotted];
m7_299 -> m7_300  [key=0, style=solid];
m7_299 -> m7_84  [key=2, style=dotted];
m7_299 -> m7_301  [color=darkseagreen4, key=1, label=context, style=dashed];
m7_300 -> m7_301  [key=0, style=solid];
m7_300 -> m7_65  [key=2, style=dotted];
m7_300 -> m7_306  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_301 -> m7_302  [key=0, style=solid];
m7_301 -> m7_85  [key=2, style=dotted];
m7_302 -> m7_303  [key=0, style=solid];
m7_302 -> m7_15  [key=2, style=dotted];
m7_302 -> d199  [key=2, style=dotted];
m7_302 -> m7_311  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_303 -> m7_304  [key=0, style=solid];
m7_303 -> m7_15  [key=2, style=dotted];
m7_303 -> d199  [key=2, style=dotted];
m7_303 -> m7_314  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_304 -> m7_305  [key=0, style=solid];
m7_304 -> m7_15  [key=2, style=dotted];
m7_304 -> d199  [key=2, style=dotted];
m7_304 -> m7_317  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_305 -> m7_297  [color=blue, key=0, style=bold];
m7_362 -> m7_363  [key=0, style=solid];
m7_363 -> m7_364  [key=0, style=solid];
m7_363 -> m7_83  [key=2, style=dotted];
m7_364 -> m7_365  [key=0, style=solid];
m7_364 -> m7_84  [key=2, style=dotted];
m7_364 -> m7_366  [color=darkseagreen4, key=1, label=context, style=dashed];
m7_364 -> m7_367  [color=darkseagreen4, key=1, label=context, style=dashed];
m7_364 -> m7_373  [color=darkseagreen4, key=1, label=context, style=dashed];
m7_365 -> m7_366  [key=0, style=solid];
m7_365 -> m7_65  [key=2, style=dotted];
m7_365 -> m7_369  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_366 -> m7_367  [key=0, style=solid];
m7_366 -> m7_85  [key=2, style=dotted];
m7_367 -> m7_368  [key=0, style=solid];
m7_367 -> m7_15  [key=2, style=dotted];
m7_367 -> d199  [key=2, style=dotted];
m7_367 -> m7_372  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_368 -> m7_362  [color=blue, key=0, style=bold];
m7_105 -> m7_106  [key=0, style=solid];
m7_106 -> m7_107  [key=0, style=solid];
m7_106 -> m7_83  [key=2, style=dotted];
m7_106 -> m7_110  [color=darkseagreen4, key=1, label=request, style=dashed];
m7_106 -> m7_123  [color=darkseagreen4, key=1, label=request, style=dashed];
m7_107 -> m7_108  [key=0, style=solid];
m7_107 -> m7_84  [key=2, style=dotted];
m7_107 -> m7_111  [color=darkseagreen4, key=1, label=context, style=dashed];
m7_107 -> m7_112  [color=darkseagreen4, key=1, label=context, style=dashed];
m7_107 -> m7_129  [color=darkseagreen4, key=1, label=context, style=dashed];
m7_110 -> m7_111  [key=0, style=solid];
m7_110 -> m7_15  [key=2, style=dotted];
m7_110 -> m7_50  [key=2, style=dotted];
m7_110 -> m7_17  [key=2, style=dotted];
m7_110 -> m7_122  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_110 -> m7_126  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator", style=dashed];
m7_108 -> m7_109  [key=0, style=solid];
m7_108 -> m7_65  [key=2, style=dotted];
m7_108 -> m7_115  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_108 -> m7_111  [color=darkseagreen4, key=1, label=resolver, style=dashed];
m7_111 -> m7_112  [key=0, style=solid];
m7_111 -> m7_85  [key=2, style=dotted];
m7_112 -> m7_113  [key=0, style=solid];
m7_112 -> m7_15  [key=2, style=dotted];
m7_112 -> d199  [key=2, style=dotted];
m7_112 -> m7_128  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_109 -> m7_110  [key=0, style=solid];
m7_109 -> m7_18  [key=2, style=dotted];
m7_109 -> m7_120  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModuleConfigurator", style=dashed];
m7_113 -> m7_105  [color=blue, key=0, style=bold];
m7_414 -> m7_415  [key=0, style=solid];
m7_415 -> m7_416  [key=0, style=solid];
m7_415 -> m7_83  [key=2, style=dotted];
m7_415 -> m7_421  [color=darkseagreen4, key=1, label=request, style=dashed];
m7_416 -> m7_417  [key=0, style=solid];
m7_416 -> m7_84  [key=2, style=dotted];
m7_416 -> m7_419  [color=darkseagreen4, key=1, label=context, style=dashed];
m7_421 -> m7_422  [key=0, style=solid];
m7_421 -> m7_87  [key=2, style=dotted];
m7_417 -> m7_418  [key=0, style=solid];
m7_417 -> m7_65  [key=2, style=dotted];
m7_417 -> m7_423  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_417 -> m7_419  [color=darkseagreen4, key=1, label=resolver, style=dashed];
m7_419 -> m7_420  [key=0, style=solid];
m7_419 -> m7_85  [key=2, style=dotted];
m7_419 -> m7_421  [color=darkseagreen4, key=1, label=resolvedRoute, style=dashed];
m7_418 -> m7_419  [key=0, style=solid];
m7_418 -> m7_15  [key=2, style=dotted];
m7_418 -> m7_50  [key=2, style=dotted];
m7_418 -> m7_17  [key=2, style=dotted];
m7_418 -> m7_426  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_418 -> m7_430  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator", style=dashed];
m7_420 -> m7_421  [key=0, style=solid];
m7_420 -> m7_342  [key=2, style=dotted];
m7_422 -> m7_414  [color=blue, key=0, style=bold];
m7_495 -> m7_496  [key=0, style=solid];
m7_19 -> m7_20  [key=0, style=solid];
m7_23 -> m7_24  [key=0, style=solid];
m7_26 -> m7_27  [key=0, style=solid];
m7_34 -> m7_35  [key=0, style=solid];
m7_34 -> m7_36  [key=2, style=dotted];
m7_37 -> m7_38  [key=0, style=solid];
m7_40 -> m7_41  [key=0, style=solid];
m7_43 -> m7_44  [key=0, style=solid];
m7_47 -> m7_48  [key=0, style=solid];
m7_47 -> m7_52  [color=darkseagreen4, key=1, label="?", style=dashed];
m7_58 -> m7_59  [key=0, style=solid];
m7_62 -> m7_63  [key=0, style=solid];
m7_20 -> m7_21  [key=0, style=solid];
m7_20 -> m7_22  [key=2, style=dotted];
m7_21 -> m7_19  [color=blue, key=0, style=bold];
m7_24 -> m7_25  [key=0, style=solid];
m7_25 -> m7_23  [color=blue, key=0, style=bold];
m7_27 -> m7_28  [key=0, style=solid];
m7_27 -> m7_29  [key=2, style=dotted];
m7_28 -> m7_26  [color=blue, key=0, style=bold];
m7_30 -> m7_31  [key=0, style=solid];
m7_31 -> m7_32  [key=0, style=solid];
m7_32 -> m7_30  [color=blue, key=0, style=bold];
m7_33 -> m7_34  [key=0, style=solid];
m7_35 -> m7_33  [color=blue, key=0, style=bold];
m7_38 -> m7_39  [key=0, style=solid];
m7_38 -> m7_29  [key=2, style=dotted];
m7_39 -> m7_37  [color=blue, key=0, style=bold];
m7_41 -> m7_42  [key=0, style=solid];
m7_42 -> m7_40  [color=blue, key=0, style=bold];
m7_44 -> m7_45  [key=0, style=solid];
m7_44 -> m7_46  [key=2, style=dotted];
m7_45 -> m7_43  [color=blue, key=0, style=bold];
m7_48 -> m7_49  [key=0, style=solid];
m7_48 -> m7_50  [key=2, style=dotted];
m7_48 -> m7_52  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator", style=dashed];
m7_48 -> m7_53  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator", style=dashed];
m7_52 -> m7_53  [key=0, style=solid];
m7_52 -> m7_55  [key=2, style=dotted];
m7_52 -> m7_56  [key=2, style=dotted];
m7_49 -> m7_47  [color=blue, key=0, style=bold];
m7_53 -> m7_54  [key=0, style=solid];
m7_53 -> m7_57  [key=2, style=dotted];
m7_51 -> m7_52  [key=0, style=solid];
m7_51 -> m7_53  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator", style=dashed];
m7_54 -> m7_51  [color=blue, key=0, style=bold];
m7_59 -> m7_60  [key=0, style=solid];
m7_59 -> m7_61  [key=2, style=dotted];
m7_60 -> m7_58  [color=blue, key=0, style=bold];
m7_63 -> m7_64  [key=0, style=solid];
m7_64 -> m7_62  [color=blue, key=0, style=bold];
m7_88 -> m7_89  [key=0, style=solid];
m7_89 -> m7_90  [key=0, style=solid];
m7_89 -> m7_91  [key=2, style=dotted];
m7_90 -> m7_88  [color=blue, key=0, style=bold];
m7_102 -> m7_103  [key=0, style=solid];
m7_103 -> m7_104  [key=0, style=solid];
m7_103 -> m7_91  [key=2, style=dotted];
m7_104 -> m7_102  [color=blue, key=0, style=bold];
m7_123 -> m7_124  [key=0, style=solid];
m7_123 -> m7_46  [key=2, style=dotted];
m7_129 -> m7_130  [key=0, style=solid];
m7_129 -> m7_131  [key=2, style=dotted];
m7_115 -> m7_116  [key=0, style=solid];
m7_115 -> m7_117  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator", style=dashed];
m7_120 -> m7_121  [key=0, style=solid];
m7_120 -> m7_36  [key=2, style=dotted];
m7_122 -> m7_123  [key=0, style=solid];
m7_126 -> m7_127  [key=0, style=solid];
m7_126 -> m7_56  [key=2, style=dotted];
m7_126 -> m7_57  [key=2, style=dotted];
m7_128 -> m7_129  [key=0, style=solid];
m7_116 -> m7_117  [key=0, style=solid];
m7_116 -> m7_91  [key=2, style=dotted];
m7_117 -> m7_118  [key=0, style=solid];
m7_117 -> m7_91  [key=2, style=dotted];
m7_118 -> m7_115  [color=blue, key=0, style=bold];
m7_119 -> m7_120  [key=0, style=solid];
m7_121 -> m7_119  [color=blue, key=0, style=bold];
m7_124 -> m7_122  [color=blue, key=0, style=bold];
m7_125 -> m7_126  [key=0, style=solid];
m7_127 -> m7_125  [color=blue, key=0, style=bold];
m7_130 -> m7_128  [color=blue, key=0, style=bold];
m7_146 -> m7_147  [key=0, style=solid];
m7_146 -> m7_148  [key=2, style=dotted];
m7_153 -> m7_154  [key=0, style=solid];
m7_153 -> m7_46  [key=2, style=dotted];
m7_159 -> m7_160  [color=red, key=0, style=solid];
m7_159 -> m7_131  [color=red, key=2, style=dotted];
m7_141 -> m7_142  [key=0, style=solid];
m7_141 -> m7_143  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator", style=dashed];
m7_145 -> m7_146  [key=0, style=solid];
m7_150 -> m7_151  [key=0, style=solid];
m7_150 -> m7_56  [key=2, style=dotted];
m7_150 -> m7_57  [key=2, style=dotted];
m7_152 -> m7_153  [key=0, style=solid];
m7_156 -> m7_157  [key=0, style=solid];
m7_156 -> m7_56  [key=2, style=dotted];
m7_156 -> m7_57  [key=2, style=dotted];
m7_158 -> m7_159  [color=red, key=0, style=solid];
m7_142 -> m7_143  [key=0, style=solid];
m7_142 -> m7_91  [key=2, style=dotted];
m7_143 -> m7_144  [key=0, style=solid];
m7_143 -> m7_91  [key=2, style=dotted];
m7_144 -> m7_141  [color=blue, key=0, style=bold];
m7_147 -> m7_145  [color=blue, key=0, style=bold];
m7_149 -> m7_150  [key=0, style=solid];
m7_151 -> m7_149  [color=blue, key=0, style=bold];
m7_154 -> m7_152  [color=blue, key=0, style=bold];
m7_155 -> m7_156  [key=0, style=solid];
m7_157 -> m7_155  [color=blue, key=0, style=bold];
m7_160 -> m7_158  [color=blue, key=0, style=bold];
m7_180 -> m7_181  [color=red, key=0, style=solid];
m7_180 -> m7_148  [color=red, key=2, style=dotted];
m7_186 -> m7_187  [key=0, style=solid];
m7_186 -> m7_148  [key=2, style=dotted];
m7_192 -> m7_193  [key=0, style=solid];
m7_192 -> m7_148  [key=2, style=dotted];
m7_198 -> m7_199  [key=0, style=solid];
m7_198 -> m7_131  [key=2, style=dotted];
m7_171 -> m7_172  [color=red, key=0, style=solid];
m7_171 -> m7_173  [color=red, key=1, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator", style=dashed];
m7_171 -> m7_174  [color=red, key=1, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator", style=dashed];
m7_171 -> m7_175  [color=red, key=1, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator", style=dashed];
m7_171 -> m7_176  [color=red, key=1, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator", style=dashed];
m7_171 -> m7_177  [color=red, key=1, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator", style=dashed];
m7_179 -> m7_180  [color=red, key=0, style=solid];
m7_183 -> m7_184  [color=red, key=0, style=solid];
m7_183 -> m7_56  [color=red, key=2, style=dotted];
m7_185 -> m7_186  [key=0, style=solid];
m7_189 -> m7_190  [key=0, style=solid];
m7_189 -> m7_56  [key=2, style=dotted];
m7_189 -> m7_57  [key=2, style=dotted];
m7_191 -> m7_192  [key=0, style=solid];
m7_195 -> m7_196  [key=0, style=solid];
m7_195 -> m7_56  [key=2, style=dotted];
m7_195 -> m7_57  [key=2, style=dotted];
m7_197 -> m7_198  [key=0, style=solid];
m7_172 -> m7_173  [color=red, key=0, style=solid];
m7_172 -> m7_91  [color=red, key=2, style=dotted];
m7_173 -> m7_174  [color=red, key=0, style=solid];
m7_173 -> m7_91  [color=red, key=2, style=dotted];
m7_174 -> m7_175  [color=red, key=0, style=solid];
m7_174 -> m7_91  [color=red, key=2, style=dotted];
m7_175 -> m7_176  [color=red, key=0, style=solid];
m7_175 -> m7_91  [color=red, key=2, style=dotted];
m7_176 -> m7_177  [color=red, key=0, style=solid];
m7_176 -> m7_91  [color=red, key=2, style=dotted];
m7_177 -> m7_178  [color=red, key=0, style=solid];
m7_177 -> m7_91  [color=red, key=2, style=dotted];
m7_178 -> m7_171  [color=blue, key=0, style=bold];
m7_181 -> m7_179  [color=blue, key=0, style=bold];
m7_182 -> m7_183  [color=red, key=0, style=solid];
m7_184 -> m7_182  [color=blue, key=0, style=bold];
m7_187 -> m7_185  [color=blue, key=0, style=bold];
m7_188 -> m7_189  [key=0, style=solid];
m7_190 -> m7_188  [color=blue, key=0, style=bold];
m7_193 -> m7_191  [color=blue, key=0, style=bold];
m7_194 -> m7_195  [key=0, style=solid];
m7_196 -> m7_194  [color=blue, key=0, style=bold];
m7_199 -> m7_197  [color=blue, key=0, style=bold];
m7_221 -> m7_222  [key=0, style=solid];
m7_221 -> m7_46  [key=2, style=dotted];
m7_227 -> m7_228  [key=0, style=solid];
m7_227 -> m7_46  [key=2, style=dotted];
m7_233 -> m7_234  [key=0, style=solid];
m7_233 -> m7_46  [key=2, style=dotted];
m7_239 -> m7_240  [key=0, style=solid];
m7_239 -> m7_131  [key=2, style=dotted];
m7_211 -> m7_212  [key=0, style=solid];
m7_211 -> m7_213  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator", style=dashed];
m7_211 -> m7_214  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator", style=dashed];
m7_211 -> m7_215  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator", style=dashed];
m7_218 -> m7_219  [key=0, style=solid];
m7_218 -> m7_36  [key=2, style=dotted];
m7_220 -> m7_221  [key=0, style=solid];
m7_224 -> m7_225  [key=0, style=solid];
m7_224 -> m7_56  [key=2, style=dotted];
m7_224 -> m7_57  [key=2, style=dotted];
m7_226 -> m7_227  [key=0, style=solid];
m7_230 -> m7_231  [key=0, style=solid];
m7_230 -> m7_56  [key=2, style=dotted];
m7_230 -> m7_57  [key=2, style=dotted];
m7_232 -> m7_233  [key=0, style=solid];
m7_236 -> m7_237  [key=0, style=solid];
m7_236 -> m7_56  [key=2, style=dotted];
m7_236 -> m7_57  [key=2, style=dotted];
m7_238 -> m7_239  [key=0, style=solid];
m7_212 -> m7_213  [key=0, style=solid];
m7_212 -> m7_91  [key=2, style=dotted];
m7_213 -> m7_214  [key=0, style=solid];
m7_213 -> m7_91  [key=2, style=dotted];
m7_214 -> m7_215  [key=0, style=solid];
m7_214 -> m7_91  [key=2, style=dotted];
m7_215 -> m7_216  [key=0, style=solid];
m7_215 -> m7_91  [key=2, style=dotted];
m7_216 -> m7_211  [color=blue, key=0, style=bold];
m7_217 -> m7_218  [key=0, style=solid];
m7_219 -> m7_217  [color=blue, key=0, style=bold];
m7_222 -> m7_220  [color=blue, key=0, style=bold];
m7_223 -> m7_224  [key=0, style=solid];
m7_225 -> m7_223  [color=blue, key=0, style=bold];
m7_228 -> m7_226  [color=blue, key=0, style=bold];
m7_229 -> m7_230  [key=0, style=solid];
m7_231 -> m7_229  [color=blue, key=0, style=bold];
m7_234 -> m7_232  [color=blue, key=0, style=bold];
m7_235 -> m7_236  [key=0, style=solid];
m7_237 -> m7_235  [color=blue, key=0, style=bold];
m7_240 -> m7_238  [color=blue, key=0, style=bold];
m7_256 -> m7_257  [key=0, style=solid];
m7_256 -> m7_46  [key=2, style=dotted];
m7_262 -> m7_263  [key=0, style=solid];
m7_262 -> m7_46  [key=2, style=dotted];
m7_268 -> m7_269  [key=0, style=solid];
m7_268 -> m7_131  [key=2, style=dotted];
m7_250 -> m7_251  [key=0, style=solid];
m7_250 -> m7_252  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator", style=dashed];
m7_250 -> m7_253  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator", style=dashed];
m7_255 -> m7_256  [key=0, style=solid];
m7_259 -> m7_260  [key=0, style=solid];
m7_259 -> m7_56  [key=2, style=dotted];
m7_261 -> m7_262  [key=0, style=solid];
m7_265 -> m7_266  [key=0, style=solid];
m7_265 -> m7_56  [key=2, style=dotted];
m7_265 -> m7_57  [key=2, style=dotted];
m7_267 -> m7_268  [key=0, style=solid];
m7_251 -> m7_252  [key=0, style=solid];
m7_251 -> m7_91  [key=2, style=dotted];
m7_252 -> m7_253  [key=0, style=solid];
m7_252 -> m7_91  [key=2, style=dotted];
m7_253 -> m7_254  [key=0, style=solid];
m7_253 -> m7_91  [key=2, style=dotted];
m7_254 -> m7_250  [color=blue, key=0, style=bold];
m7_257 -> m7_255  [color=blue, key=0, style=bold];
m7_258 -> m7_259  [key=0, style=solid];
m7_260 -> m7_258  [color=blue, key=0, style=bold];
m7_263 -> m7_261  [color=blue, key=0, style=bold];
m7_264 -> m7_265  [key=0, style=solid];
m7_266 -> m7_264  [color=blue, key=0, style=bold];
m7_269 -> m7_267  [color=blue, key=0, style=bold];
m7_282 -> m7_283  [key=0, style=solid];
m7_282 -> m7_46  [key=2, style=dotted];
m7_277 -> m7_278  [key=0, style=solid];
m7_281 -> m7_282  [key=0, style=solid];
m7_278 -> m7_279  [key=0, style=solid];
m7_278 -> m7_280  [key=2, style=dotted];
m7_279 -> m7_277  [color=blue, key=0, style=bold];
m7_283 -> m7_281  [color=blue, key=0, style=bold];
m7_295 -> m7_296  [key=0, style=solid];
m7_295 -> m7_46  [key=2, style=dotted];
m7_291 -> m7_292  [key=0, style=solid];
m7_294 -> m7_295  [key=0, style=solid];
m7_292 -> m7_293  [key=0, style=solid];
m7_292 -> m7_280  [key=2, style=dotted];
m7_293 -> m7_291  [color=blue, key=0, style=bold];
m7_296 -> m7_294  [color=blue, key=0, style=bold];
m7_306 -> m7_307  [key=0, style=solid];
m7_306 -> m7_308  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator", style=dashed];
m7_306 -> m7_309  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator", style=dashed];
m7_311 -> m7_312  [key=0, style=solid];
m7_314 -> m7_315  [key=0, style=solid];
m7_317 -> m7_318  [key=0, style=solid];
m7_307 -> m7_308  [key=0, style=solid];
m7_307 -> m7_280  [key=2, style=dotted];
m7_308 -> m7_309  [key=0, style=solid];
m7_308 -> m7_280  [key=2, style=dotted];
m7_309 -> m7_310  [key=0, style=solid];
m7_309 -> m7_280  [key=2, style=dotted];
m7_310 -> m7_306  [color=blue, key=0, style=bold];
m7_312 -> m7_313  [key=0, style=solid];
m7_312 -> m7_46  [key=2, style=dotted];
m7_313 -> m7_311  [color=blue, key=0, style=bold];
m7_315 -> m7_316  [key=0, style=solid];
m7_315 -> m7_46  [key=2, style=dotted];
m7_316 -> m7_314  [color=blue, key=0, style=bold];
m7_318 -> m7_319  [key=0, style=solid];
m7_318 -> m7_46  [key=2, style=dotted];
m7_319 -> m7_317  [color=blue, key=0, style=bold];
m7_330 -> m7_331  [key=0, style=solid];
m7_331 -> m7_332  [key=0, style=solid];
m7_331 -> m7_280  [key=2, style=dotted];
m7_332 -> m7_330  [color=blue, key=0, style=bold];
m7_343 -> m7_344  [key=0, style=solid];
m7_344 -> m7_345  [key=0, style=solid];
m7_344 -> m7_280  [key=2, style=dotted];
m7_345 -> m7_343  [color=blue, key=0, style=bold];
m7_357 -> m7_358  [key=0, style=solid];
m7_357 -> m7_359  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRouteCache.FakeRouteCacheConfigurator", style=dashed];
m7_358 -> m7_359  [key=0, style=solid];
m7_358 -> m7_280  [key=2, style=dotted];
m7_359 -> m7_360  [key=0, style=solid];
m7_359 -> m7_361  [key=2, style=dotted];
m7_360 -> m7_357  [color=blue, key=0, style=bold];
m7_373 -> m7_374  [key=0, style=solid];
m7_373 -> m7_375  [key=2, style=dotted];
m7_369 -> m7_370  [key=0, style=solid];
m7_372 -> m7_373  [key=0, style=solid];
m7_370 -> m7_371  [key=0, style=solid];
m7_370 -> m7_280  [key=2, style=dotted];
m7_371 -> m7_369  [color=blue, key=0, style=bold];
m7_374 -> m7_372  [color=blue, key=0, style=bold];
m7_385 -> m7_386  [key=0, style=solid];
m7_389 -> m7_390  [key=0, style=solid];
m7_389 -> m7_391  [key=2, style=dotted];
m7_392 -> m7_393  [key=0, style=solid];
m7_386 -> m7_387  [key=0, style=solid];
m7_386 -> m7_280  [key=2, style=dotted];
m7_387 -> m7_385  [color=blue, key=0, style=bold];
m7_388 -> m7_389  [key=0, style=solid];
m7_390 -> m7_388  [color=blue, key=0, style=bold];
m7_393 -> m7_394  [key=0, style=solid];
m7_393 -> m7_22  [key=2, style=dotted];
m7_394 -> m7_392  [color=blue, key=0, style=bold];
m7_403 -> m7_404  [key=0, style=solid];
m7_404 -> m7_405  [key=0, style=solid];
m7_404 -> m7_280  [key=2, style=dotted];
m7_405 -> m7_403  [color=blue, key=0, style=bold];
m7_423 -> m7_424  [key=0, style=solid];
m7_426 -> m7_427  [key=0, style=solid];
m7_430 -> m7_431  [key=0, style=solid];
m7_430 -> m7_56  [key=2, style=dotted];
m7_424 -> m7_425  [key=0, style=solid];
m7_424 -> m7_280  [key=2, style=dotted];
m7_425 -> m7_423  [color=blue, key=0, style=bold];
m7_427 -> m7_428  [key=0, style=solid];
m7_427 -> m7_148  [key=2, style=dotted];
m7_428 -> m7_426  [color=blue, key=0, style=bold];
m7_429 -> m7_430  [key=0, style=solid];
m7_431 -> m7_429  [color=blue, key=0, style=bold];
m7_441 -> m7_442  [key=0, style=solid];
m7_442 -> m7_443  [key=0, style=solid];
m7_442 -> m7_280  [key=2, style=dotted];
m7_443 -> m7_441  [color=blue, key=0, style=bold];
m7_492 -> m7_493  [key=0, style=solid];
m7_492 -> m7_494  [key=2, style=dotted];
m7_496 -> m7_497  [key=0, style=solid];
m7_496 -> m7_29  [key=2, style=dotted];
m7_491 -> m7_492  [key=0, style=solid];
m7_493 -> m7_491  [color=blue, key=0, style=bold];
m7_497 -> m7_495  [color=blue, key=0, style=bold];
m7_200 -> m7_201  [key=0, style=solid];
m7_201 -> m7_202  [key=0, style=solid];
m7_201 -> m7_83  [key=2, style=dotted];
m7_201 -> m7_205  [color=darkseagreen4, key=1, label=request, style=dashed];
m7_201 -> m7_221  [color=darkseagreen4, key=1, label=request, style=dashed];
m7_201 -> m7_206  [color=darkseagreen4, key=1, label=request, style=dashed];
m7_201 -> m7_227  [color=darkseagreen4, key=1, label=request, style=dashed];
m7_201 -> m7_207  [color=darkseagreen4, key=1, label=request, style=dashed];
m7_201 -> m7_233  [color=darkseagreen4, key=1, label=request, style=dashed];
m7_202 -> m7_203  [key=0, style=solid];
m7_202 -> m7_84  [key=2, style=dotted];
m7_202 -> m7_208  [color=darkseagreen4, key=1, label=context, style=dashed];
m7_202 -> m7_209  [color=darkseagreen4, key=1, label=context, style=dashed];
m7_202 -> m7_239  [color=darkseagreen4, key=1, label=context, style=dashed];
m7_205 -> m7_206  [key=0, style=solid];
m7_205 -> m7_15  [key=2, style=dotted];
m7_205 -> m7_50  [key=2, style=dotted];
m7_205 -> m7_17  [key=2, style=dotted];
m7_205 -> m7_220  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_205 -> m7_224  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator", style=dashed];
m7_206 -> m7_207  [key=0, style=solid];
m7_206 -> m7_15  [key=2, style=dotted];
m7_206 -> m7_50  [key=2, style=dotted];
m7_206 -> m7_17  [key=2, style=dotted];
m7_206 -> m7_226  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_206 -> m7_230  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator", style=dashed];
m7_207 -> m7_208  [key=0, style=solid];
m7_207 -> m7_15  [key=2, style=dotted];
m7_207 -> m7_50  [key=2, style=dotted];
m7_207 -> m7_17  [key=2, style=dotted];
m7_207 -> m7_232  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_207 -> m7_236  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator", style=dashed];
m7_203 -> m7_204  [key=0, style=solid];
m7_203 -> m7_65  [key=2, style=dotted];
m7_203 -> m7_211  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_203 -> m7_208  [color=darkseagreen4, key=1, label=resolver, style=dashed];
m7_208 -> m7_209  [key=0, style=solid];
m7_208 -> m7_85  [key=2, style=dotted];
m7_209 -> m7_210  [key=0, style=solid];
m7_209 -> m7_15  [key=2, style=dotted];
m7_209 -> d199  [key=2, style=dotted];
m7_209 -> m7_238  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_204 -> m7_205  [key=0, style=solid];
m7_204 -> m7_18  [key=2, style=dotted];
m7_204 -> m7_218  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModuleConfigurator", style=dashed];
m7_210 -> m7_200  [color=blue, key=0, style=bold];
m7_395 -> m7_396  [key=0, style=solid];
m7_396 -> m7_397  [key=0, style=solid];
m7_396 -> m7_83  [key=2, style=dotted];
m7_396 -> m7_401  [color=darkseagreen4, key=1, label=request, style=dashed];
m7_397 -> m7_398  [key=0, style=solid];
m7_397 -> m7_84  [key=2, style=dotted];
m7_397 -> m7_399  [color=darkseagreen4, key=1, label=context, style=dashed];
m7_401 -> m7_402  [key=0, style=solid];
m7_401 -> m7_87  [key=2, style=dotted];
m7_398 -> m7_399  [key=0, style=solid];
m7_398 -> m7_65  [key=2, style=dotted];
m7_398 -> m7_403  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_399 -> m7_400  [key=0, style=solid];
m7_399 -> m7_85  [key=2, style=dotted];
m7_399 -> m7_401  [color=darkseagreen4, key=1, label=resolvedRoute, style=dashed];
m7_400 -> m7_401  [key=0, style=solid];
m7_400 -> m7_86  [key=2, style=dotted];
m7_402 -> m7_395  [color=blue, key=0, style=bold];
m7_65 -> m7_66  [key=0, style=solid];
m7_66 -> m7_67  [key=0, style=solid];
m7_66 -> m7_69  [key=2, style=dotted];
m7_67 -> m7_68  [key=0, style=solid];
m7_67 -> m7_70  [key=2, style=dotted];
m7_68 -> m7_65  [color=blue, key=0, style=bold];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_14  [key=2, style=dotted];
m7_2 -> m7_3  [key=0, style=solid];
m7_2 -> m7_15  [key=2, style=dotted];
m7_2 -> m7_16  [key=2, style=dotted];
m7_2 -> m7_19  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_2 -> m7_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_14  [key=2, style=dotted];
m7_4 -> m7_5  [key=0, style=solid];
m7_4 -> m7_15  [key=2, style=dotted];
m7_4 -> m7_17  [key=2, style=dotted];
m7_4 -> m7_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_5 -> m7_6  [key=0, style=solid];
m7_6 -> m7_7  [key=0, style=solid];
m7_6 -> m7_18  [key=2, style=dotted];
m7_6 -> m7_34  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModuleConfigurator", style=dashed];
m7_7 -> m7_8  [key=0, style=solid];
m7_7 -> m7_15  [key=2, style=dotted];
m7_7 -> m7_16  [key=2, style=dotted];
m7_7 -> m7_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_7 -> m7_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_8 -> m7_9  [key=0, style=solid];
m7_8 -> m7_14  [key=2, style=dotted];
m7_9 -> m7_10  [key=0, style=solid];
m7_9 -> m7_15  [key=2, style=dotted];
m7_9 -> m7_16  [key=2, style=dotted];
m7_9 -> m7_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_9 -> m7_47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_10 -> m7_11  [key=0, style=solid];
m7_10 -> m7_14  [key=2, style=dotted];
m7_11 -> m7_12  [key=0, style=solid];
m7_11 -> m7_14  [key=2, style=dotted];
m7_12 -> m7_13  [key=0, style=solid];
m7_12 -> m7_15  [key=2, style=dotted];
m7_12 -> m7_16  [key=2, style=dotted];
m7_12 -> m7_58  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_12 -> m7_62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_13 -> m7_0  [color=blue, key=0, style=bold];
m7_406 -> m7_407  [key=0, style=solid];
m7_407 -> m7_408  [key=0, style=solid];
m7_407 -> m7_83  [key=2, style=dotted];
m7_407 -> m7_412  [color=darkseagreen4, key=1, label=request, style=dashed];
m7_408 -> m7_409  [key=0, style=solid];
m7_408 -> m7_84  [key=2, style=dotted];
m7_408 -> m7_410  [color=darkseagreen4, key=1, label=context, style=dashed];
m7_412 -> m7_413  [key=0, style=solid];
m7_412 -> m7_87  [key=2, style=dotted];
m7_409 -> m7_410  [key=0, style=solid];
m7_409 -> m7_70  [key=2, style=dotted];
m7_410 -> m7_411  [key=0, style=solid];
m7_410 -> m7_85  [key=2, style=dotted];
m7_410 -> m7_412  [color=darkseagreen4, key=1, label=resolvedRoute, style=dashed];
m7_411 -> m7_412  [key=0, style=solid];
m7_411 -> m7_342  [key=2, style=dotted];
m7_413 -> m7_406  [color=blue, key=0, style=bold];
m7_432 -> m7_433  [key=0, style=solid];
m7_433 -> m7_434  [key=0, style=solid];
m7_433 -> m7_83  [key=2, style=dotted];
m7_434 -> m7_435  [key=0, style=solid];
m7_434 -> m7_84  [key=2, style=dotted];
m7_434 -> m7_436  [color=darkseagreen4, key=1, label=context, style=dashed];
m7_435 -> m7_436  [key=0, style=solid];
m7_435 -> m7_65  [key=2, style=dotted];
m7_435 -> m7_441  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_436 -> m7_437  [key=0, style=solid];
m7_436 -> m7_85  [key=2, style=dotted];
m7_436 -> m7_438  [color=darkseagreen4, key=1, label=resolvedRoute, style=dashed];
m7_436 -> m7_439  [color=darkseagreen4, key=1, label=resolvedRoute, style=dashed];
m7_437 -> m7_438  [key=0, style=solid];
m7_437 -> m7_329  [key=2, style=dotted];
m7_438 -> m7_439  [key=0, style=solid];
m7_438 -> m7_86  [key=2, style=dotted];
m7_439 -> m7_440  [key=0, style=solid];
m7_439 -> m7_86  [key=2, style=dotted];
m7_440 -> m7_432  [color=blue, key=0, style=bold];
m7_376 -> m7_377  [key=0, style=solid];
m7_377 -> m7_378  [key=0, style=solid];
m7_377 -> m7_83  [key=2, style=dotted];
m7_378 -> m7_379  [key=0, style=solid];
m7_378 -> m7_84  [key=2, style=dotted];
m7_378 -> m7_382  [color=darkseagreen4, key=1, label=context, style=dashed];
m7_379 -> m7_380  [key=0, style=solid];
m7_379 -> m7_65  [key=2, style=dotted];
m7_379 -> m7_385  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_379 -> m7_382  [color=darkseagreen4, key=1, label=resolver, style=dashed];
m7_382 -> m7_383  [key=0, style=solid];
m7_382 -> m7_85  [key=2, style=dotted];
m7_380 -> m7_381  [key=0, style=solid];
m7_380 -> m7_18  [key=2, style=dotted];
m7_380 -> m7_389  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeNancyModule.FakeNancyModuleConfigurator", style=dashed];
m7_381 -> m7_382  [key=0, style=solid];
m7_381 -> m7_15  [key=2, style=dotted];
m7_381 -> m7_17  [key=2, style=dotted];
m7_381 -> m7_392  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_383 -> m7_384  [key=0, style=solid];
m7_383 -> m7_87  [key=2, style=dotted];
m7_384 -> m7_376  [color=blue, key=0, style=bold];
m7_241 -> m7_242  [key=0, style=solid];
m7_242 -> m7_243  [key=0, style=solid];
m7_242 -> m7_83  [key=2, style=dotted];
m7_242 -> m7_245  [color=darkseagreen4, key=1, label=request, style=dashed];
m7_242 -> m7_256  [color=darkseagreen4, key=1, label=request, style=dashed];
m7_242 -> m7_246  [color=darkseagreen4, key=1, label=request, style=dashed];
m7_242 -> m7_262  [color=darkseagreen4, key=1, label=request, style=dashed];
m7_243 -> m7_244  [key=0, style=solid];
m7_243 -> m7_84  [key=2, style=dotted];
m7_243 -> m7_247  [color=darkseagreen4, key=1, label=context, style=dashed];
m7_243 -> m7_248  [color=darkseagreen4, key=1, label=context, style=dashed];
m7_243 -> m7_268  [color=darkseagreen4, key=1, label=context, style=dashed];
m7_245 -> m7_246  [key=0, style=solid];
m7_245 -> m7_15  [key=2, style=dotted];
m7_245 -> m7_50  [key=2, style=dotted];
m7_245 -> m7_17  [key=2, style=dotted];
m7_245 -> m7_255  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_245 -> m7_259  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator", style=dashed];
m7_246 -> m7_247  [key=0, style=solid];
m7_246 -> m7_15  [key=2, style=dotted];
m7_246 -> m7_50  [key=2, style=dotted];
m7_246 -> m7_17  [key=2, style=dotted];
m7_246 -> m7_261  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_246 -> m7_265  [color=darkseagreen4, key=1, label="Nancy.Tests.Fakes.FakeRoutePatternMatchResult.FakeRoutePatternMatchResultConfigurator", style=dashed];
m7_244 -> m7_245  [key=0, style=solid];
m7_244 -> m7_65  [key=2, style=dotted];
m7_244 -> m7_250  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_244 -> m7_247  [color=darkseagreen4, key=1, label=resolver, style=dashed];
m7_247 -> m7_248  [key=0, style=solid];
m7_247 -> m7_85  [key=2, style=dotted];
m7_248 -> m7_249  [key=0, style=solid];
m7_248 -> m7_15  [key=2, style=dotted];
m7_248 -> d199  [key=2, style=dotted];
m7_248 -> m7_267  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_249 -> m7_241  [color=blue, key=0, style=bold];
m7_466 -> m7_467  [key=0, style=solid];
m7_467 -> m7_468  [key=0, style=solid];
m7_467 -> m7_453  [key=2, style=dotted];
m7_467 -> m7_469  [color=darkseagreen4, key=1, label=moduleCatalog, style=dashed];
m7_468 -> m7_469  [key=0, style=solid];
m7_468 -> m7_454  [key=2, style=dotted];
m7_468 -> m7_455  [key=2, style=dotted];
m7_468 -> m7_14  [key=2, style=dotted];
m7_469 -> m7_470  [key=0, style=solid];
m7_469 -> m7_73  [key=2, style=dotted];
m7_469 -> m7_472  [color=darkseagreen4, key=1, label=specificResolver, style=dashed];
m7_470 -> m7_471  [key=0, style=solid];
m7_470 -> m7_83  [key=2, style=dotted];
m7_472 -> m7_473  [key=0, style=solid];
m7_472 -> m7_85  [key=2, style=dotted];
m7_471 -> m7_472  [key=0, style=solid];
m7_471 -> m7_84  [key=2, style=dotted];
m7_471 -> m7_473  [color=darkseagreen4, key=1, label=context, style=dashed];
m7_473 -> m7_474  [key=0, style=solid];
m7_473 -> m7_475  [key=2, style=dotted];
m7_473 -> m7_476  [key=2, style=dotted];
m7_474 -> m7_466  [color=blue, key=0, style=bold];
m7_70 -> m7_71  [key=0, style=solid];
m7_71 -> m7_72  [key=0, style=solid];
m7_71 -> m7_73  [key=2, style=dotted];
m7_72 -> m7_70  [color=blue, key=0, style=bold];
m7_74 -> m7_75  [key=0, style=solid];
m7_75 -> m7_76  [key=0, style=solid];
m7_75 -> m7_83  [key=2, style=dotted];
m7_76 -> m7_77  [key=0, style=solid];
m7_76 -> m7_84  [key=2, style=dotted];
m7_76 -> m7_78  [color=darkseagreen4, key=1, label=context, style=dashed];
m7_77 -> m7_78  [key=0, style=solid];
m7_77 -> m7_65  [key=2, style=dotted];
m7_77 -> m7_88  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_78 -> m7_79  [key=0, style=solid];
m7_78 -> m7_85  [key=2, style=dotted];
m7_78 -> m7_80  [color=darkseagreen4, key=1, label=resolvedRoute, style=dashed];
m7_78 -> m7_81  [color=darkseagreen4, key=1, label=resolvedRoute, style=dashed];
m7_79 -> m7_80  [key=0, style=solid];
m7_79 -> m7_86  [key=2, style=dotted];
m7_80 -> m7_81  [key=0, style=solid];
m7_80 -> m7_86  [key=2, style=dotted];
m7_81 -> m7_82  [key=0, style=solid];
m7_81 -> m7_87  [key=2, style=dotted];
m7_82 -> m7_74  [color=blue, key=0, style=bold];
m7_498 -> m7_1  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_2  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_20  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_3  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_4  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_27  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_5  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_6  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_34  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_7  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_38  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_41  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_8  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_9  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_44  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_10  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_11  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_12  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_59  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_67  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_71  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_77  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_95  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_99  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_108  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_109  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_120  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_110  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_123  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_112  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_129  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_135  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_136  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_146  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_137  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_153  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_139  [color=red, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_159  [color=red, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_164  [color=red, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_165  [color=red, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_180  [color=red, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_166  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_186  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_167  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_192  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_169  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_198  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_203  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_204  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_218  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_205  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_221  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_206  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_227  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_207  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_233  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_209  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_239  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_244  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_245  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_256  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_246  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_262  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_248  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_268  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_273  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_275  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_282  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_287  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_289  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_295  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_300  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_302  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_312  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_303  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_315  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_304  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_318  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_323  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_336  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_349  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_365  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_367  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_373  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_379  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_381  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_393  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_398  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_409  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_417  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_418  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_427  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_435  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_447  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_460  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_469  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_498 -> m7_482  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m7_499 -> m7_52  [color=darkseagreen4, key=1, label="?", style=dashed];
m7_500 -> m7_123  [color=darkseagreen4, key=1, label=request, style=dashed];
m7_501 -> m7_129  [color=darkseagreen4, key=1, label=context, style=dashed];
m7_502 -> m7_146  [color=darkseagreen4, key=1, label=request, style=dashed];
m7_502 -> m7_153  [color=darkseagreen4, key=1, label=request, style=dashed];
m7_503 -> m7_159  [color=red, key=1, label=context, style=dashed];
m7_504 -> m7_180  [color=red, key=1, label=request, style=dashed];
m7_504 -> m7_186  [color=darkseagreen4, key=1, label=request, style=dashed];
m7_504 -> m7_192  [color=darkseagreen4, key=1, label=request, style=dashed];
m7_505 -> m7_198  [color=darkseagreen4, key=1, label=context, style=dashed];
m7_506 -> m7_221  [color=darkseagreen4, key=1, label=request, style=dashed];
m7_506 -> m7_227  [color=darkseagreen4, key=1, label=request, style=dashed];
m7_506 -> m7_233  [color=darkseagreen4, key=1, label=request, style=dashed];
m7_507 -> m7_239  [color=darkseagreen4, key=1, label=context, style=dashed];
m7_508 -> m7_256  [color=darkseagreen4, key=1, label=request, style=dashed];
m7_508 -> m7_262  [color=darkseagreen4, key=1, label=request, style=dashed];
m7_509 -> m7_268  [color=darkseagreen4, key=1, label=context, style=dashed];
m7_510 -> m7_282  [color=darkseagreen4, key=1, label=request, style=dashed];
m7_511 -> m7_295  [color=darkseagreen4, key=1, label=context, style=dashed];
m7_512 -> m7_373  [color=darkseagreen4, key=1, label=context, style=dashed];
m7_513 -> m7_492  [color=darkseagreen4, key=1, label=moduleCatalog, style=dashed];
m7_513 -> m7_496  [color=darkseagreen4, key=1, label=moduleCatalog, style=dashed];
m8_27 -> m8_28  [color=red, key=0, style=solid];
m8_18 -> m8_19  [key=0, style=solid];
m8_18 -> m8_20  [key=0, style=solid];
m8_19 -> m8_20  [color=red, key=0, style=solid];
m8_19 -> m8_34  [key=2, style=dotted];
m8_20 -> m8_21  [color=red, key=0, style=solid];
m8_20 -> m8_12  [color=red, key=2, style=dotted];
m8_20 -> d199  [color=red, key=2, style=dotted];
m8_20 -> m8_23  [color=red, key=1, label="lambda expression", style=dashed];
m8_20 -> m8_25  [key=2, style=dotted];
m8_20 -> m8_22  [key=0, style=solid];
m8_21 -> m8_18  [color=blue, key=0, style=bold];
m8_21 -> m8_22  [key=0, style=solid];
m8_40 -> m8_41  [key=0, style=solid];
m8_40 -> m8_48  [key=0, style=solid];
m8_41 -> m8_42  [key=0, style=solid];
m8_41 -> m8_44  [key=2, style=dotted];
m8_41 -> m8_45  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_41 -> m8_51  [key=2, style=dotted];
m8_41 -> m8_52  [key=2, style=dotted];
m8_41 -> m8_53  [key=2, style=dotted];
m8_42 -> m8_43  [key=0, style=solid];
m8_42 -> m8_5  [key=2, style=dotted];
m8_42 -> m8_47  [key=0, style=solid];
m8_42 -> m8_54  [key=2, style=dotted];
m8_42 -> m8_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_42 -> m8_44  [color=darkseagreen4, key=1, label=parts, style=dashed];
m8_42 -> m8_46  [color=darkseagreen4, key=1, label=parts, style=dashed];
m8_43 -> m8_40  [color=blue, key=0, style=bold];
m8_43 -> m8_46  [color=darkseagreen4, key=1, label=cookieName, style=dashed];
m8_43 -> m8_45  [color=darkseagreen4, key=1, label=cookieName, style=dashed];
m8_43 -> m8_44  [key=0, style=solid];
m8_43 -> m8_55  [key=2, style=dotted];
m8_35 -> m8_65  [key=0, style=solid];
m8_35 -> m8_36  [color=red, key=0, style=solid];
m8_35 -> m8_12  [color=red, key=2, style=dotted];
m8_35 -> d199  [color=red, key=2, style=dotted];
m8_35 -> m8_37  [color=red, key=1, label="lambda expression", style=dashed];
m8_65 -> m8_25  [key=2, style=dotted];
m8_65 -> m8_66  [key=0, style=solid];
m8_65 -> m8_67  [key=0, style=solid];
m8_79 -> m8_25  [key=2, style=dotted];
m8_79 -> m8_80  [key=0, style=solid];
m8_79 -> m8_82  [key=0, style=solid];
m8_67 -> m8_68  [key=0, style=solid];
m8_67 -> m8_51  [key=2, style=dotted];
m8_67 -> m8_75  [color=darkseagreen4, key=1, label=contentType, style=dashed];
m8_70 -> m8_71  [key=0, style=solid];
m8_70 -> m8_88  [key=2, style=dotted];
m8_71 -> m8_28  [key=2, style=dotted];
m8_71 -> m8_72  [key=0, style=solid];
m8_71 -> m8_89  [key=2, style=dotted];
m8_72 -> m8_73  [key=0, style=solid];
m8_76 -> m8_77  [key=0, style=solid];
m8_76 -> m8_91  [key=2, style=dotted];
m8_76 -> m8_78  [color=darkseagreen4, key=1, label=multipart, style=dashed];
m8_82 -> m8_78  [key=0, style=solid];
m8_82 -> m8_95  [key=2, style=dotted];
m8_82 -> m8_96  [key=2, style=dotted];
m8_84 -> m8_83  [key=0, style=solid];
m8_85 -> m8_86  [key=0, style=solid];
m8_66 -> m8_86  [key=0, style=solid];
m8_78 -> m8_79  [key=0, style=solid];
m8_78 -> m8_82  [color=darkseagreen4, key=1, label=httpMultipartBoundary, style=dashed];
m8_78 -> m8_83  [key=0, style=solid];
m8_78 -> m8_93  [key=2, style=dotted];
m8_78 -> m8_80  [color=darkseagreen4, key=1, label=httpMultipartBoundary, style=dashed];
m8_78 -> m8_81  [color=darkseagreen4, key=1, label=httpMultipartBoundary, style=dashed];
m8_80 -> m8_81  [key=0, style=solid];
m8_80 -> m8_88  [key=2, style=dotted];
m8_68 -> m8_51  [key=2, style=dotted];
m8_68 -> m8_53  [key=2, style=dotted];
m8_68 -> m8_69  [key=0, style=solid];
m8_68 -> m8_73  [color=darkseagreen4, key=1, label=mimeType, style=dashed];
m8_75 -> m8_76  [key=0, style=solid];
m8_75 -> m8_90  [key=2, style=dotted];
m8_69 -> m8_70  [key=0, style=solid];
m8_69 -> m8_73  [key=0, style=solid];
m8_69 -> m8_87  [key=2, style=dotted];
m8_73 -> m8_75  [key=0, style=solid];
m8_73 -> m8_74  [key=0, style=solid];
m8_73 -> m8_87  [key=2, style=dotted];
m8_77 -> m8_84  [color=darkseagreen4, key=1, label=formValues, style=dashed];
m8_77 -> m8_78  [key=0, style=solid];
m8_77 -> m8_92  [key=2, style=dotted];
m8_77 -> m8_81  [color=darkseagreen4, key=1, label=formValues, style=dashed];
m8_77 -> m8_83  [color=darkseagreen4, key=1, label=formValues, style=dashed];
m8_83 -> m8_84  [key=0, style=solid];
m8_83 -> m8_85  [key=0, style=solid];
m8_83 -> m8_97  [key=2, style=dotted];
m8_83 -> m8_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_81 -> m8_78  [key=0, style=solid];
m8_81 -> m8_89  [key=2, style=dotted];
m8_81 -> m8_94  [key=2, style=dotted];
m8_74 -> m8_86  [key=0, style=solid];
m8_86 -> m8_35  [color=blue, key=0, style=bold];
m8_34 -> m8_35  [color=red, key=0, style=solid];
m8_14 -> m8_15  [key=0, style=solid];
m8_14 -> m8_28  [key=2, style=dotted];
m8_5 -> m8_7  [color=green, key=0, style=solid];
m8_5 -> m8_6  [key=0, style=solid];
m8_33 -> m8_34  [key=0, style=solid];
m8_6 -> m8_24  [key=0, style=solid];
m8_6 -> m8_27  [key=2, style=dotted];
m8_2 -> m8_7  [color=green, key=1, label="Nancy.Url", style=dashed];
m8_2 -> m8_3  [key=0, style=solid];
m8_2 -> m8_5  [color=darkseagreen4, key=1, label="Nancy.Url", style=dashed];
m8_2 -> m8_9  [color=darkseagreen4, key=1, label="Nancy.Url", style=dashed];
m8_2 -> m8_11  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_2 -> m8_12  [color=darkseagreen4, key=1, label="Nancy.Url", style=dashed];
m8_2 -> m8_13  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_2 -> m8_14  [color=darkseagreen4, key=1, label="Nancy.Url", style=dashed];
m8_2 -> m8_15  [color=darkseagreen4, key=1, label="Nancy.IO.RequestStream", style=dashed];
m8_2 -> m8_16  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>", style=dashed];
m8_2 -> m8_18  [color=darkseagreen4, key=1, label="byte[]", style=dashed];
m8_2 -> m8_19  [color=darkseagreen4, key=1, label="byte[]", style=dashed];
m8_7 -> m8_8  [color=red, key=0, style=solid];
m8_7 -> m8_9  [color=green, key=0, style=solid];
m8_7 -> m8_10  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_8 -> m8_24  [key=0, style=solid];
m8_8 -> m8_27  [key=2, style=dotted];
m8_8 -> m8_9  [color=red, key=0, style=solid];
m8_8 -> m8_12  [color=red, key=2, style=dotted];
m8_8 -> m8_13  [color=red, key=2, style=dotted];
m8_8 -> m8_15  [color=red, key=1, label="lambda expression", style=dashed];
m8_9 -> m8_10  [key=0, style=solid];
m8_9 -> m8_11  [key=0, style=solid];
m8_9 -> m8_25  [key=2, style=dotted];
m8_3 -> m8_5  [key=0, style=solid];
m8_3 -> m8_4  [key=0, style=solid];
m8_3 -> m8_25  [key=2, style=dotted];
m8_3 -> m8_6  [key=2, style=dotted];
m8_11 -> m8_12  [key=0, style=solid];
m8_11 -> m8_7  [color=blue, key=0, style=bold];
m8_12 -> m8_13  [key=0, style=solid];
m8_13 -> m8_14  [key=0, style=solid];
m8_15 -> m8_16  [color=red, key=0, style=solid];
m8_15 -> m8_29  [key=2, style=dotted];
m8_15 -> m8_30  [key=2, style=dotted];
m8_16 -> m8_17  [color=red, key=0, style=solid];
m8_16 -> m8_31  [key=2, style=dotted];
m8_16 -> m8_32  [key=2, style=dotted];
m8_10 -> m8_24  [key=0, style=solid];
m8_10 -> m8_26  [key=2, style=dotted];
m8_10 -> m8_11  [key=0, style=solid];
m8_10 -> m8_14  [key=2, style=dotted];
m8_4 -> m8_24  [key=0, style=solid];
m8_4 -> m8_26  [key=2, style=dotted];
m8_4 -> m8_0  [color=blue, key=0, style=bold];
m8_23 -> m8_24  [color=red, key=0, style=solid];
m8_23 -> m8_36  [key=2, style=dotted];
m8_17 -> m8_18  [key=0, style=solid];
m8_17 -> m8_33  [key=2, style=dotted];
m8_17 -> m8_15  [color=blue, key=0, style=bold];
m8_22 -> m8_23  [key=0, style=solid];
m8_22 -> m8_35  [key=2, style=dotted];
m8_24 -> m8_2  [color=blue, key=0, style=bold];
m8_24 -> m8_25  [color=red, key=0, style=solid];
m8_36 -> m8_33  [color=blue, key=0, style=bold];
m8_36 -> m8_101  [key=0, style=solid];
m8_101 -> m8_102  [key=0, style=solid];
m8_101 -> m8_103  [key=0, style=solid];
m8_101 -> m8_87  [key=2, style=dotted];
m8_103 -> m8_104  [key=0, style=solid];
m8_103 -> m8_113  [key=2, style=dotted];
m8_103 -> m8_114  [key=2, style=dotted];
m8_103 -> m8_115  [key=2, style=dotted];
m8_111 -> m8_112  [key=0, style=solid];
m8_111 -> m8_121  [key=2, style=dotted];
m8_102 -> m8_112  [key=0, style=solid];
m8_104 -> m8_111  [color=darkseagreen4, key=1, label=providedOverride, style=dashed];
m8_104 -> m8_105  [key=0, style=solid];
m8_104 -> m8_97  [key=2, style=dotted];
m8_104 -> m8_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_104 -> m8_107  [color=darkseagreen4, key=1, label=providedOverride, style=dashed];
m8_104 -> m8_108  [color=darkseagreen4, key=1, label=providedOverride, style=dashed];
m8_107 -> m8_111  [key=0, style=solid];
m8_107 -> m8_108  [key=0, style=solid];
m8_107 -> m8_117  [key=2, style=dotted];
m8_106 -> m8_112  [key=0, style=solid];
m8_110 -> m8_112  [key=0, style=solid];
m8_110 -> m8_120  [key=2, style=dotted];
m8_105 -> m8_107  [key=0, style=solid];
m8_105 -> m8_106  [key=0, style=solid];
m8_105 -> m8_116  [key=2, style=dotted];
m8_108 -> m8_109  [key=0, style=solid];
m8_108 -> m8_118  [key=2, style=dotted];
m8_109 -> m8_110  [key=0, style=solid];
m8_109 -> m8_119  [key=2, style=dotted];
m8_112 -> m8_36  [color=blue, key=0, style=bold];
m8_28 -> m8_29  [color=red, key=0, style=solid];
m8_28 -> m8_12  [color=red, key=2, style=dotted];
m8_28 -> d199  [color=red, key=2, style=dotted];
m8_28 -> m8_30  [color=red, key=1, label="lambda expression", style=dashed];
m8_32 -> m8_30  [color=blue, key=0, style=bold];
m8_25 -> m8_23  [color=blue, key=0, style=bold];
m8_31 -> m8_32  [color=red, key=0, style=solid];
m8_45 -> m8_46  [key=0, style=solid];
m8_45 -> m8_42  [key=0, style=solid];
m8_45 -> m8_56  [key=2, style=dotted];
m8_30 -> m8_31  [color=red, key=0, style=solid];
m8_30 -> m8_123  [key=0, style=solid];
m8_37 -> m8_38  [color=red, key=0, style=solid];
m8_38 -> m8_39  [color=red, key=0, style=solid];
m8_38 -> m8_49  [key=2, style=dotted];
m8_38 -> m8_40  [color=darkseagreen4, key=1, label=cookieDictionary, style=dashed];
m8_38 -> m8_46  [color=darkseagreen4, key=1, label=cookieDictionary, style=dashed];
m8_38 -> m8_47  [color=darkseagreen4, key=1, label=cookieDictionary, style=dashed];
m8_39 -> m8_37  [color=blue, key=0, style=bold];
m8_39 -> m8_40  [key=0, style=solid];
m8_39 -> m8_41  [key=0, style=solid];
m8_39 -> m8_50  [key=2, style=dotted];
m8_46 -> m8_47  [key=0, style=solid];
m8_46 -> m8_42  [key=0, style=solid];
m8_123 -> m8_25  [key=2, style=dotted];
m8_123 -> m8_32  [key=0, style=solid];
m8_47 -> m8_45  [color=blue, key=0, style=bold];
m8_47 -> m8_48  [key=0, style=solid];
m8_26 -> m8_27  [key=0, style=solid];
m8_29 -> m8_26  [color=blue, key=0, style=bold];
m8_44 -> m8_46  [key=0, style=solid];
m8_44 -> m8_45  [key=0, style=solid];
m8_61 -> m8_62  [key=0, style=solid];
m8_62 -> m8_63  [key=0, style=solid];
m8_62 -> m8_64  [key=2, style=dotted];
m8_63 -> m8_61  [color=blue, key=0, style=bold];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_5  [key=2, style=dotted];
m8_48 -> m8_37  [color=blue, key=0, style=bold];
m8_48 -> m8_1  [color=darkseagreen4, key=1, label="Nancy.ViewEngines.Razor.Tests.TextResourceFinderFixture", style=dashed];
m8_48 -> m8_2  [color=darkseagreen4, key=1, label="Nancy.ViewEngines.Razor.Tests.TextResourceFinderFixture", style=dashed];
m8_48 -> m8_3  [color=darkseagreen4, key=1, label="Nancy.ViewEngines.Razor.Tests.TextResourceFinderFixture", style=dashed];
m8_48 -> m8_8  [color=red, key=1, label="Nancy.ViewEngines.Razor.Tests.TextResourceFinderFixture", style=dashed];
m8_48 -> m8_16  [color=red, key=1, label="Nancy.ViewEngines.Razor.Tests.TextResourceFinderFixture", style=dashed];
m8_48 -> m8_9  [color=darkseagreen4, key=1, label="Nancy.ViewEngines.Razor.Tests.TextResourceFinderFixture", style=dashed];
m8_48 -> m8_19  [color=darkseagreen4, key=1, label="Nancy.ViewEngines.Razor.Tests.TextResourceFinderFixture", style=dashed];
m8_48 -> m8_20  [color=red, key=1, label="Nancy.ViewEngines.Razor.Tests.TextResourceFinderFixture", style=dashed];
m8_48 -> m8_24  [color=red, key=1, label="Nancy.ViewEngines.Razor.Tests.TextResourceFinderFixture", style=dashed];
m8_48 -> m8_27  [color=darkseagreen4, key=1, label="Nancy.ViewEngines.Razor.Tests.TextResourceFinderFixture", style=dashed];
m8_48 -> m8_28  [color=red, key=1, label="Nancy.ViewEngines.Razor.Tests.TextResourceFinderFixture", style=dashed];
m8_48 -> m8_31  [color=red, key=1, label="Nancy.ViewEngines.Razor.Tests.TextResourceFinderFixture", style=dashed];
m8_48 -> m8_34  [color=darkseagreen4, key=1, label="Nancy.ViewEngines.Razor.Tests.TextResourceFinderFixture", style=dashed];
m8_48 -> m8_35  [color=red, key=1, label="Nancy.ViewEngines.Razor.Tests.TextResourceFinderFixture", style=dashed];
m8_48 -> m8_38  [color=red, key=1, label="Nancy.ViewEngines.Razor.Tests.TextResourceFinderFixture", style=dashed];
m8_48 -> m8_41  [color=darkseagreen4, key=1, label="Nancy.ViewEngines.Razor.Tests.TextResourceFinderFixture", style=dashed];
m8_48 -> m8_46  [color=darkseagreen4, key=1, label="Nancy.ViewEngines.Razor.Tests.TextResourceFinderFixture", style=dashed];
m8_125 -> m8_11  [color=darkseagreen4, key=1, label="Nancy.Request", style=dashed];
m8_125 -> m8_12  [color=darkseagreen4, key=1, label="Nancy.Request", style=dashed];
m8_125 -> m8_13  [color=darkseagreen4, key=1, label="Nancy.Request", style=dashed];
m8_125 -> m8_14  [color=darkseagreen4, key=1, label="Nancy.Request", style=dashed];
m8_125 -> m8_15  [color=darkseagreen4, key=1, label="Nancy.Request", style=dashed];
m8_125 -> m8_16  [color=darkseagreen4, key=1, label="Nancy.Request", style=dashed];
m8_125 -> m8_19  [color=darkseagreen4, key=1, label="Nancy.Request", style=dashed];
m8_125 -> m8_23  [color=darkseagreen4, key=1, label="Nancy.Request", style=dashed];
m8_125 -> m8_17  [color=darkseagreen4, key=1, label="Nancy.Request", style=dashed];
m8_125 -> m8_20  [color=darkseagreen4, key=1, label="Nancy.Request", style=dashed];
m8_125 -> m8_21  [color=darkseagreen4, key=1, label="Nancy.Request", style=dashed];
m8_125 -> m8_22  [color=darkseagreen4, key=1, label="Nancy.Request", style=dashed];
m8_125 -> m8_39  [color=darkseagreen4, key=1, label="Nancy.Request", style=dashed];
m8_125 -> m8_41  [color=darkseagreen4, key=1, label="Nancy.Request", style=dashed];
m8_125 -> m8_62  [color=darkseagreen4, key=1, label="Nancy.Request", style=dashed];
m8_125 -> m8_65  [color=darkseagreen4, key=1, label="Nancy.Request", style=dashed];
m8_125 -> m8_67  [color=darkseagreen4, key=1, label="Nancy.Request", style=dashed];
m8_125 -> m8_70  [color=darkseagreen4, key=1, label="Nancy.Request", style=dashed];
m8_125 -> m8_71  [color=darkseagreen4, key=1, label="Nancy.Request", style=dashed];
m8_125 -> m8_72  [color=darkseagreen4, key=1, label="Nancy.Request", style=dashed];
m8_125 -> m8_76  [color=darkseagreen4, key=1, label="Nancy.Request", style=dashed];
m8_125 -> m8_82  [color=darkseagreen4, key=1, label="Nancy.Request", style=dashed];
m8_125 -> m8_84  [color=darkseagreen4, key=1, label="Nancy.Request", style=dashed];
m8_125 -> m8_85  [color=darkseagreen4, key=1, label="Nancy.Request", style=dashed];
m8_125 -> m8_101  [color=darkseagreen4, key=1, label="Nancy.Request", style=dashed];
m8_125 -> m8_103  [color=darkseagreen4, key=1, label="Nancy.Request", style=dashed];
m8_125 -> m8_111  [color=darkseagreen4, key=1, label="Nancy.Request", style=dashed];
}
