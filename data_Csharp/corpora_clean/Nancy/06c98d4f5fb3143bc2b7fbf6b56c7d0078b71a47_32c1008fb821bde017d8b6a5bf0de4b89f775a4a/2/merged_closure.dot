digraph  {
n0 [cluster="Nancy.Testing.Tests.AndConnectorTests.Should_allow_chaining_of_asserts_and_still_pass()", label="Entry Nancy.Testing.Tests.AndConnectorTests.Should_allow_chaining_of_asserts_and_still_pass()", span="9-9"];
n1 [cluster="Nancy.Testing.Tests.AndConnectorTests.Should_allow_chaining_of_asserts_and_still_pass()", label="string input = @''<html><head></head><body><div id='testId' class='myClass'>Test</div></body></html>''", span="11-11"];
n2 [cluster="Nancy.Testing.Tests.AndConnectorTests.Should_allow_chaining_of_asserts_and_still_pass()", label="var document = new DocumentWrapper(input)", span="12-12"];
n3 [cluster="Nancy.Testing.Tests.AndConnectorTests.Should_allow_chaining_of_asserts_and_still_pass()", label="document[''#testId''].ShouldExist().And.ShouldBeOfClass(''myClass'')", span="14-14"];
n5 [cluster="Nancy.Testing.DocumentWrapper.DocumentWrapper(string)", label="Entry Nancy.Testing.DocumentWrapper.DocumentWrapper(string)", span="47-47"];
n4 [cluster="Nancy.Testing.Tests.AndConnectorTests.Should_allow_chaining_of_asserts_and_still_pass()", label="Exit Nancy.Testing.Tests.AndConnectorTests.Should_allow_chaining_of_asserts_and_still_pass()", span="9-9"];
n6 [cluster="Nancy.Testing.QueryWrapper.ShouldExist()", label="Entry Nancy.Testing.QueryWrapper.ShouldExist()", span="26-26"];
n7 [cluster="Nancy.Testing.QueryWrapper.ShouldBeOfClass(string)", label="Entry Nancy.Testing.QueryWrapper.ShouldBeOfClass(string)", span="54-54"];
n8 [cluster="Nancy.Testing.Tests.AndConnectorTests.Should_allow_chaining_of_asserts_and_fail_where_appropriate()", label="Entry Nancy.Testing.Tests.AndConnectorTests.Should_allow_chaining_of_asserts_and_fail_where_appropriate()", span="18-18"];
n9 [cluster="Nancy.Testing.Tests.AndConnectorTests.Should_allow_chaining_of_asserts_and_fail_where_appropriate()", label="var result = Record.Exception(\r\n                () =>\r\n                    {\r\n                        const string input =\r\n                            @''<html><head></head><body><div id='testId' class='myOtherClass'>Test</div></body></html>'';\r\n                        var document = new DocumentWrapper(input);\r\n                        document[''#testId''].ShouldExist().And.ShouldBeOfClass(''myClass'');\r\n                    })", span="20-27"];
n12 [cluster="Unk.Exception", label="Entry Unk.Exception", span=""];
n14 [cluster="lambda expression", label="Entry lambda expression", span="21-27"];
n11 [cluster="Nancy.Testing.Tests.AndConnectorTests.Should_allow_chaining_of_asserts_and_fail_where_appropriate()", label="Exit Nancy.Testing.Tests.AndConnectorTests.Should_allow_chaining_of_asserts_and_fail_where_appropriate()", span="18-18"];
n13 [cluster="Unk.>", label="Entry Unk.>", span=""];
n15 [cluster="lambda expression", label="string input =\r\n                            @''<html><head></head><body><div id='testId' class='myOtherClass'>Test</div></body></html>''", span="23-24"];
n16 [cluster="lambda expression", label="var document = new DocumentWrapper(input)", span="25-25"];
n17 [cluster="lambda expression", label="document[''#testId''].ShouldExist().And.ShouldBeOfClass(''myClass'')", span="26-26"];
n18 [cluster="lambda expression", label="Exit lambda expression", span="21-27"];
d13 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.PlusEquals_with_func_add_item_to_end_of_pipeline()", color=green, community=0, label="Assert.Equal(2, pipeline.PipelineDelegates.Count())", prediction=0, span="29-29"];
d119 [label="Nancy.Tests.Unit.AfterPipelineFixture", span=""];
d12 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.PlusEquals_with_func_add_item_to_end_of_pipeline()", label="pipeline += item1", span="27-27"];
d14 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.PlusEquals_with_func_add_item_to_end_of_pipeline()", label="Assert.Same(item1, pipeline.PipelineDelegates.Last())", span="30-30"];
d17 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
d18 [cluster="Unk.Equal", label="Entry Unk.Equal", span=""];
d5 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.AfterPipelineFixture()", label="pipeline = new AfterPipeline()", span="17-17"];
d11 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.PlusEquals_with_func_add_item_to_end_of_pipeline()", label="pipeline.AddItemToEndOfPipeline(item2)", span="25-25"];
d28 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.PlusEquals_with_another_pipeline_adds_those_pipeline_items_to_end_of_pipeline()", label="pipeline.AddItemToEndOfPipeline(item1)", span="38-38"];
d29 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.PlusEquals_with_another_pipeline_adds_those_pipeline_items_to_end_of_pipeline()", label="pipeline.AddItemToEndOfPipeline(item2)", span="39-39"];
d35 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.PlusEquals_with_another_pipeline_adds_those_pipeline_items_to_end_of_pipeline()", label="pipeline += pipeline2", span="46-46"];
d36 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.PlusEquals_with_another_pipeline_adds_those_pipeline_items_to_end_of_pipeline()", label="Assert.Equal(4, pipeline.PipelineItems.Count())", span="48-48"];
d37 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.PlusEquals_with_another_pipeline_adds_those_pipeline_items_to_end_of_pipeline()", label="Assert.Same(item3, pipeline.PipelineDelegates.ElementAt(2))", span="49-49"];
d38 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.PlusEquals_with_another_pipeline_adds_those_pipeline_items_to_end_of_pipeline()", label="Assert.Same(item4, pipeline.PipelineDelegates.Last())", span="50-50"];
d56 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.When_cast_to_func_and_invoked_members_are_invoked()", label="pipeline.AddItemToEndOfPipeline(item1)", span="62-62"];
d57 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.When_cast_to_func_and_invoked_members_are_invoked()", label="pipeline.AddItemToEndOfPipeline(item2)", span="63-63"];
d58 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.When_cast_to_func_and_invoked_members_are_invoked()", label="pipeline.AddItemToEndOfPipeline(item3)", span="64-64"];
d59 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.When_cast_to_func_and_invoked_members_are_invoked()", label="Action<NancyContext> func = pipeline", span="66-66"];
d94 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", label="pipeline += item1", span="96-96"];
d95 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", label="pipeline += item2", span="97-97"];
d99 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", label="pipeline.AddItemToEndOfPipeline(subPipeline)", span="102-102"];
d100 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", label="pipeline.Invoke(CreateContext())", span="103-103"];
d9 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.PlusEquals_with_func_add_item_to_end_of_pipeline()", label="Action<NancyContext> item1 = (r) => { }", span="23-23"];
d15 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.PlusEquals_with_func_add_item_to_end_of_pipeline()", label="Exit Nancy.Tests.Unit.AfterPipelineFixture.PlusEquals_with_func_add_item_to_end_of_pipeline()", span="21-21"];
d19 [cluster="System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", span="0-0"];
d20 [cluster="Unk.Same", label="Entry Unk.Same", span=""];
d79 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.When_cast_from_func_creates_a_pipeline_with_one_item()", label="Assert.Equal(1, castPipeline.PipelineDelegates.Count())", span="81-81"];
d4 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.AfterPipelineFixture()", label="Entry Nancy.Tests.Unit.AfterPipelineFixture.AfterPipelineFixture()", span="15-15"];
d6 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.AfterPipelineFixture()", label="Exit Nancy.Tests.Unit.AfterPipelineFixture.AfterPipelineFixture()", span="15-15"];
d7 [cluster="Nancy.AfterPipeline.AfterPipeline()", label="Entry Nancy.AfterPipeline.AfterPipeline()", span="17-17"];
d10 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.PlusEquals_with_func_add_item_to_end_of_pipeline()", label="Action<NancyContext> item2 = (r) => { }", span="24-24"];
d16 [cluster="Nancy.NamedPipelineBase<TDelegate>.AddItemToEndOfPipeline(TDelegate)", label="Entry Nancy.NamedPipelineBase<TDelegate>.AddItemToEndOfPipeline(TDelegate)", span="67-67"];
d26 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.PlusEquals_with_another_pipeline_adds_those_pipeline_items_to_end_of_pipeline()", label="Action<NancyContext> item1 = (r) => { }", span="36-36"];
d27 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.PlusEquals_with_another_pipeline_adds_those_pipeline_items_to_end_of_pipeline()", label="Action<NancyContext> item2 = (r) => { }", span="37-37"];
d30 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.PlusEquals_with_another_pipeline_adds_those_pipeline_items_to_end_of_pipeline()", label="Action<NancyContext> item3 = (r) => { }", span="40-40"];
d32 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.PlusEquals_with_another_pipeline_adds_those_pipeline_items_to_end_of_pipeline()", label="var pipeline2 = new AfterPipeline()", span="42-42"];
d34 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.PlusEquals_with_another_pipeline_adds_those_pipeline_items_to_end_of_pipeline()", label="pipeline2.AddItemToEndOfPipeline(item4)", span="44-44"];
d40 [cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0"];
d31 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.PlusEquals_with_another_pipeline_adds_those_pipeline_items_to_end_of_pipeline()", label="Action<NancyContext> item4 = (r) => { }", span="41-41"];
d39 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.PlusEquals_with_another_pipeline_adds_those_pipeline_items_to_end_of_pipeline()", label="Exit Nancy.Tests.Unit.AfterPipelineFixture.PlusEquals_with_another_pipeline_adds_those_pipeline_items_to_end_of_pipeline()", span="34-34"];
d51 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.When_cast_to_func_and_invoked_members_are_invoked()", label="Action<NancyContext> item1 = (r) => { item1Called = true; }", span="57-57"];
d55 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.When_cast_to_func_and_invoked_members_are_invoked()", label="Action<NancyContext> item3 = (r) => { item3Called = true; }", span="61-61"];
d53 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.When_cast_to_func_and_invoked_members_are_invoked()", label="Action<NancyContext> item2 = (r) => { item2Called = true; }", span="59-59"];
d60 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.When_cast_to_func_and_invoked_members_are_invoked()", label="func.Invoke(CreateContext())", span="67-67"];
d87 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", label="Action<NancyContext> item1 = (r) => { item1Called = true; }", span="89-89"];
d93 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", label="Action<NancyContext> item4 = (r) => { item4Called = true; }", span="95-95"];
d89 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", label="Action<NancyContext> item2 = (r) => { item2Called = true; }", span="91-91"];
d96 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", label="var subPipeline = new AfterPipeline()", span="98-98"];
d98 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", label="subPipeline += item4", span="100-100"];
d101 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", label="Assert.True(item1Called)", span="105-105"];
d0 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.CreateContext()", label="Entry Nancy.Tests.Unit.AfterPipelineFixture.CreateContext()", span="10-10"];
d106 [cluster="Nancy.AfterPipeline.Invoke(Nancy.NancyContext)", label="Entry Nancy.AfterPipeline.Invoke(Nancy.NancyContext)", span="53-53"];
d8 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.PlusEquals_with_func_add_item_to_end_of_pipeline()", label="Entry Nancy.Tests.Unit.AfterPipelineFixture.PlusEquals_with_func_add_item_to_end_of_pipeline()", span="21-21"];
d80 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.When_cast_from_func_creates_a_pipeline_with_one_item()", label="Assert.Same(item1, castPipeline.PipelineDelegates.First())", span="82-82"];
d78 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.When_cast_from_func_creates_a_pipeline_with_one_item()", label="AfterPipeline castPipeline = item1", span="79-79"];
d33 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.PlusEquals_with_another_pipeline_adds_those_pipeline_items_to_end_of_pipeline()", label="pipeline2.AddItemToEndOfPipeline(item3)", span="43-43"];
d25 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.PlusEquals_with_another_pipeline_adds_those_pipeline_items_to_end_of_pipeline()", label="Entry Nancy.Tests.Unit.AfterPipelineFixture.PlusEquals_with_another_pipeline_adds_those_pipeline_items_to_end_of_pipeline()", span="34-34"];
d50 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.When_cast_to_func_and_invoked_members_are_invoked()", label="var item1Called = false", span="56-56"];
d52 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.When_cast_to_func_and_invoked_members_are_invoked()", label="var item2Called = false", span="58-58"];
d54 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.When_cast_to_func_and_invoked_members_are_invoked()", label="var item3Called = false", span="60-60"];
d61 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.When_cast_to_func_and_invoked_members_are_invoked()", label="Assert.True(item1Called)", span="69-69"];
d65 [cluster="System.Action<T>.Invoke(T)", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
d86 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", label="var item1Called = false", span="88-88"];
d88 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", label="var item2Called = false", span="90-90"];
d92 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", label="var item4Called = false", span="94-94"];
d90 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", label="var item3Called = false", span="92-92"];
d97 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", label="subPipeline += item3", span="99-99"];
d108 [cluster="lambda expression", label="item1Called = true", span="89-89"];
d102 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", label="Assert.True(item2Called)", span="106-106"];
d66 [cluster="Unk.True", label="Entry Unk.True", span=""];
d2 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.CreateContext()", label="Exit Nancy.Tests.Unit.AfterPipelineFixture.CreateContext()", span="10-10"];
d1 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.CreateContext()", label="return new NancyContext();", span="12-12"];
d77 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.When_cast_from_func_creates_a_pipeline_with_one_item()", label="Action<NancyContext> item1 = (r) => { }", span="77-77"];
d81 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.When_cast_from_func_creates_a_pipeline_with_one_item()", label="Exit Nancy.Tests.Unit.AfterPipelineFixture.When_cast_from_func_creates_a_pipeline_with_one_item()", span="75-75"];
d82 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
d49 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.When_cast_to_func_and_invoked_members_are_invoked()", label="Entry Nancy.Tests.Unit.AfterPipelineFixture.When_cast_to_func_and_invoked_members_are_invoked()", span="54-54"];
d68 [cluster="lambda expression", label="item1Called = true", span="57-57"];
d62 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.When_cast_to_func_and_invoked_members_are_invoked()", label="Assert.True(item2Called)", span="70-70"];
d85 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", label="Entry Nancy.Tests.Unit.AfterPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", span="86-86"];
d91 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", label="Action<NancyContext> item3 = (r) => { item3Called = true; }", span="93-93"];
d107 [cluster="lambda expression", label="Entry lambda expression", span="89-89"];
d109 [cluster="lambda expression", label="Exit lambda expression", span="89-89"];
d111 [cluster="lambda expression", label="item2Called = true", span="91-91"];
d103 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", label="Assert.True(item3Called)", span="107-107"];
d63 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.When_cast_to_func_and_invoked_members_are_invoked()", label="Assert.True(item3Called)", span="71-71"];
d104 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", label="Assert.True(item4Called)", span="108-108"];
d3 [cluster="Nancy.NancyContext.NancyContext()", label="Entry Nancy.NancyContext.NancyContext()", span="24-24"];
d76 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.When_cast_from_func_creates_a_pipeline_with_one_item()", label="Entry Nancy.Tests.Unit.AfterPipelineFixture.When_cast_from_func_creates_a_pipeline_with_one_item()", span="75-75"];
d64 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.When_cast_to_func_and_invoked_members_are_invoked()", label="Exit Nancy.Tests.Unit.AfterPipelineFixture.When_cast_to_func_and_invoked_members_are_invoked()", span="54-54"];
d67 [cluster="lambda expression", label="Entry lambda expression", span="57-57"];
d69 [cluster="lambda expression", label="Exit lambda expression", span="57-57"];
d71 [cluster="lambda expression", label="item2Called = true", span="59-59"];
d105 [cluster="Nancy.Tests.Unit.AfterPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", label="Exit Nancy.Tests.Unit.AfterPipelineFixture.Pipeline_containing_another_pipeline_will_invoke_items_in_both_pipelines()", span="86-86"];
d110 [cluster="lambda expression", label="Entry lambda expression", span="91-91"];
d112 [cluster="lambda expression", label="Exit lambda expression", span="91-91"];
d114 [cluster="lambda expression", label="item3Called = true", span="93-93"];
d74 [cluster="lambda expression", label="item3Called = true", span="61-61"];
d117 [cluster="lambda expression", label="item4Called = true", span="95-95"];
d70 [cluster="lambda expression", label="Entry lambda expression", span="59-59"];
d72 [cluster="lambda expression", label="Exit lambda expression", span="59-59"];
d113 [cluster="lambda expression", label="Entry lambda expression", span="93-93"];
d115 [cluster="lambda expression", label="Exit lambda expression", span="93-93"];
d73 [cluster="lambda expression", label="Entry lambda expression", span="61-61"];
d75 [cluster="lambda expression", label="Exit lambda expression", span="61-61"];
d116 [cluster="lambda expression", label="Entry lambda expression", span="95-95"];
d118 [cluster="lambda expression", label="Exit lambda expression", span="95-95"];
m1_6 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="AssertExtensions.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m1_0 [cluster="Nancy.Responses.RedirectResponse.RedirectResponse(string)", file="AssertExtensions.cs", label="Entry Nancy.Responses.RedirectResponse.RedirectResponse(string)", span="4-4"];
m1_2 [cluster="Nancy.Responses.RedirectResponse.RedirectResponse(string)", file="AssertExtensions.cs", label="this.Contents = GetStringContents(string.Empty)", span="7-7"];
m1_3 [cluster="Nancy.Responses.RedirectResponse.RedirectResponse(string)", file="AssertExtensions.cs", label="this.ContentType = ''text/html''", span="8-8"];
m1_4 [cluster="Nancy.Responses.RedirectResponse.RedirectResponse(string)", file="AssertExtensions.cs", label="this.StatusCode = HttpStatusCode.SeeOther", span="9-9"];
m1_5 [cluster="Nancy.Responses.RedirectResponse.RedirectResponse(string)", file="AssertExtensions.cs", label="Exit Nancy.Responses.RedirectResponse.RedirectResponse(string)", span="4-4"];
m1_7 [cluster="Nancy.Response.GetStringContents(string)", file="AssertExtensions.cs", label="Entry Nancy.Response.GetStringContents(string)", span="93-93"];
m1_8 [file="AssertExtensions.cs", label="Nancy.Responses.RedirectResponse", span=""];
m2_16 [cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", file="BrowserResponseBodyWrapperFixture.cs", label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0"];
m2_9 [cluster="Unk.SequenceEqual", file="BrowserResponseBodyWrapperFixture.cs", label="Entry Unk.SequenceEqual", span=""];
m2_10 [cluster="bool.ShouldBeTrue()", file="BrowserResponseBodyWrapperFixture.cs", label="Entry bool.ShouldBeTrue()", span="85-85"];
m2_17 [cluster="System.IO.StreamWriter.Write(string)", file="BrowserResponseBodyWrapperFixture.cs", label="Entry System.IO.StreamWriter.Write(string)", span="0-0"];
m2_0 [cluster="Nancy.Testing.Tests.BrowserResponseBodyWrapperFixture.Should_contain_response_body()", file="BrowserResponseBodyWrapperFixture.cs", label="Entry Nancy.Testing.Tests.BrowserResponseBodyWrapperFixture.Should_contain_response_body()", span="12-12"];
m2_1 [cluster="Nancy.Testing.Tests.BrowserResponseBodyWrapperFixture.Should_contain_response_body()", color=green, community=0, file="BrowserResponseBodyWrapperFixture.cs", label="var body = new BrowserResponseBodyWrapper(new Response\r\n            {\r\n                Contents = stream =>\r\n                {\r\n                    var writer = new StreamWriter(stream);\r\n                    writer.Write(''This is the content'');\r\n                    writer.Flush();\r\n                }\r\n            })", prediction=1, span="15-23"];
m2_2 [cluster="Nancy.Testing.Tests.BrowserResponseBodyWrapperFixture.Should_contain_response_body()", file="BrowserResponseBodyWrapperFixture.cs", label="var content = Encoding.ASCII.GetBytes(''This is the content'')", span="25-25"];
m2_3 [cluster="Nancy.Testing.Tests.BrowserResponseBodyWrapperFixture.Should_contain_response_body()", file="BrowserResponseBodyWrapperFixture.cs", label="var result = body.SequenceEqual(content)", span="28-28"];
m2_4 [cluster="Nancy.Testing.Tests.BrowserResponseBodyWrapperFixture.Should_contain_response_body()", file="BrowserResponseBodyWrapperFixture.cs", label="result.ShouldBeTrue()", span="31-31"];
m2_5 [cluster="Nancy.Testing.Tests.BrowserResponseBodyWrapperFixture.Should_contain_response_body()", file="BrowserResponseBodyWrapperFixture.cs", label="Exit Nancy.Testing.Tests.BrowserResponseBodyWrapperFixture.Should_contain_response_body()", span="12-12"];
m2_6 [cluster="Nancy.Testing.BrowserResponseBodyWrapper.BrowserResponseBodyWrapper(Nancy.Response)", file="BrowserResponseBodyWrapperFixture.cs", label="Entry Nancy.Testing.BrowserResponseBodyWrapper.BrowserResponseBodyWrapper(Nancy.Response)", span="14-14"];
m2_8 [cluster="System.Text.Encoding.GetBytes(string)", file="BrowserResponseBodyWrapperFixture.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m2_18 [cluster="System.IO.StreamWriter.Flush()", file="BrowserResponseBodyWrapperFixture.cs", label="Entry System.IO.StreamWriter.Flush()", span="0-0"];
m2_19 [cluster="Nancy.Testing.Tests.BrowserResponseBodyWrapperFixture.Should_return_querywrapper_for_css_selector_match()", file="BrowserResponseBodyWrapperFixture.cs", label="Entry Nancy.Testing.Tests.BrowserResponseBodyWrapperFixture.Should_return_querywrapper_for_css_selector_match()", span="35-35"];
m2_20 [cluster="Nancy.Testing.Tests.BrowserResponseBodyWrapperFixture.Should_return_querywrapper_for_css_selector_match()", file="BrowserResponseBodyWrapperFixture.cs", label="var body = new BrowserResponseBodyWrapper(new Response\r\n            {\r\n                Contents = stream =>\r\n                {\r\n                    var writer = new StreamWriter(stream);\r\n                    writer.Write(''<div>Outer and <div id='#bar'>inner</div></div>'');\r\n                    writer.Flush();\r\n                }\r\n            })", span="38-46"];
m2_21 [cluster="Nancy.Testing.Tests.BrowserResponseBodyWrapperFixture.Should_return_querywrapper_for_css_selector_match()", file="BrowserResponseBodyWrapperFixture.cs", label="var result = body[''#bar'']", span="49-49"];
m2_22 [cluster="Nancy.Testing.Tests.BrowserResponseBodyWrapperFixture.Should_return_querywrapper_for_css_selector_match()", color=green, community=1, file="BrowserResponseBodyWrapperFixture.cs", label="result.ShouldContain(''inner'')", prediction=2, span="55-55"];
m2_23 [cluster="Nancy.Testing.Tests.BrowserResponseBodyWrapperFixture.Should_return_querywrapper_for_css_selector_match()", file="BrowserResponseBodyWrapperFixture.cs", label="Exit Nancy.Testing.Tests.BrowserResponseBodyWrapperFixture.Should_return_querywrapper_for_css_selector_match()", span="35-35"];
m2_24 [cluster="Nancy.Testing.QueryWrapper.ShouldContain(string, System.StringComparison)", file="BrowserResponseBodyWrapperFixture.cs", label="Entry Nancy.Testing.QueryWrapper.ShouldContain(string, System.StringComparison)", span="77-77"];
m2_7 [cluster="Nancy.Response.Response()", file="BrowserResponseBodyWrapperFixture.cs", label="Entry Nancy.Response.Response()", span="20-20"];
m2_25 [cluster="lambda expression", file="BrowserResponseBodyWrapperFixture.cs", label="Entry lambda expression", span="40-45"];
m2_12 [cluster="lambda expression", file="BrowserResponseBodyWrapperFixture.cs", label="var writer = new StreamWriter(stream)", span="19-19"];
m2_11 [cluster="lambda expression", file="BrowserResponseBodyWrapperFixture.cs", label="Entry lambda expression", span="17-22"];
m2_13 [cluster="lambda expression", file="BrowserResponseBodyWrapperFixture.cs", label="writer.Write(''This is the content'')", span="20-20"];
m2_14 [cluster="lambda expression", file="BrowserResponseBodyWrapperFixture.cs", label="writer.Flush()", span="21-21"];
m2_15 [cluster="lambda expression", file="BrowserResponseBodyWrapperFixture.cs", label="Exit lambda expression", span="17-22"];
m2_26 [cluster="lambda expression", file="BrowserResponseBodyWrapperFixture.cs", label="var writer = new StreamWriter(stream)", span="42-42"];
m2_27 [cluster="lambda expression", file="BrowserResponseBodyWrapperFixture.cs", label="writer.Write(''<div>Outer and <div id='#bar'>inner</div></div>'')", span="43-43"];
m2_28 [cluster="lambda expression", file="BrowserResponseBodyWrapperFixture.cs", label="writer.Flush()", span="44-44"];
m2_29 [cluster="lambda expression", file="BrowserResponseBodyWrapperFixture.cs", label="Exit lambda expression", span="40-45"];
m3_11 [cluster="Nancy.Tests.Extensions.EnvironmentExtensionsFixture.Should_set_uri()", file="ConfigurableBootstrapper.cs", label="Entry Nancy.Tests.Extensions.EnvironmentExtensionsFixture.Should_set_uri()", span="41-41"];
m3_12 [cluster="Nancy.Tests.Extensions.EnvironmentExtensionsFixture.Should_set_uri()", file="ConfigurableBootstrapper.cs", label="var result = environment.AsNancyRequestParameters()", span="43-43"];
m3_13 [cluster="Nancy.Tests.Extensions.EnvironmentExtensionsFixture.Should_set_uri()", file="ConfigurableBootstrapper.cs", label="result.Uri.ShouldEqual(''/root/test'')", span="45-45"];
m3_14 [cluster="Nancy.Tests.Extensions.EnvironmentExtensionsFixture.Should_set_uri()", file="ConfigurableBootstrapper.cs", label="Exit Nancy.Tests.Extensions.EnvironmentExtensionsFixture.Should_set_uri()", span="41-41"];
m3_5 [cluster="Nancy.Tests.Extensions.EnvironmentExtensionsFixture.Should_set_method()", file="ConfigurableBootstrapper.cs", label="Entry Nancy.Tests.Extensions.EnvironmentExtensionsFixture.Should_set_method()", span="33-33"];
m3_6 [cluster="Nancy.Tests.Extensions.EnvironmentExtensionsFixture.Should_set_method()", file="ConfigurableBootstrapper.cs", label="var result = environment.AsNancyRequestParameters()", span="35-35"];
m3_7 [cluster="Nancy.Tests.Extensions.EnvironmentExtensionsFixture.Should_set_method()", file="ConfigurableBootstrapper.cs", label="result.Method.ShouldEqual(''GET'')", span="37-37"];
m3_8 [cluster="Nancy.Tests.Extensions.EnvironmentExtensionsFixture.Should_set_method()", file="ConfigurableBootstrapper.cs", label="Exit Nancy.Tests.Extensions.EnvironmentExtensionsFixture.Should_set_method()", span="33-33"];
m3_10 [cluster="object.ShouldEqual(object)", file="ConfigurableBootstrapper.cs", label="Entry object.ShouldEqual(object)", span="80-80"];
m3_4 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ConfigurableBootstrapper.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m3_15 [cluster="Nancy.Tests.Extensions.EnvironmentExtensionsFixture.Should_create_ienumerable_for_headers_with_multiple_values()", file="ConfigurableBootstrapper.cs", label="Entry Nancy.Tests.Extensions.EnvironmentExtensionsFixture.Should_create_ienumerable_for_headers_with_multiple_values()", span="49-49"];
m3_16 [cluster="Nancy.Tests.Extensions.EnvironmentExtensionsFixture.Should_create_ienumerable_for_headers_with_multiple_values()", file="ConfigurableBootstrapper.cs", label="var req = environment.AsNancyRequestParameters()", span="51-51"];
m3_17 [cluster="Nancy.Tests.Extensions.EnvironmentExtensionsFixture.Should_create_ienumerable_for_headers_with_multiple_values()", file="ConfigurableBootstrapper.cs", label="var result = req.Headers[''Header'']", span="53-53"];
m3_18 [cluster="Nancy.Tests.Extensions.EnvironmentExtensionsFixture.Should_create_ienumerable_for_headers_with_multiple_values()", file="ConfigurableBootstrapper.cs", label="result.Count().ShouldEqual(2)", span="55-55"];
m3_19 [cluster="Nancy.Tests.Extensions.EnvironmentExtensionsFixture.Should_create_ienumerable_for_headers_with_multiple_values()", file="ConfigurableBootstrapper.cs", label="result.Contains(''Value1'').ShouldBeTrue()", span="56-56"];
m3_20 [cluster="Nancy.Tests.Extensions.EnvironmentExtensionsFixture.Should_create_ienumerable_for_headers_with_multiple_values()", file="ConfigurableBootstrapper.cs", label="result.Contains(''Value2'').ShouldBeTrue()", span="57-57"];
m3_21 [cluster="Nancy.Tests.Extensions.EnvironmentExtensionsFixture.Should_create_ienumerable_for_headers_with_multiple_values()", file="ConfigurableBootstrapper.cs", label="Exit Nancy.Tests.Extensions.EnvironmentExtensionsFixture.Should_create_ienumerable_for_headers_with_multiple_values()", span="49-49"];
m3_9 [cluster="System.Collections.Generic.IDictionary<string, object>.AsNancyRequestParameters()", file="ConfigurableBootstrapper.cs", label="Entry System.Collections.Generic.IDictionary<string, object>.AsNancyRequestParameters()", span="14-14"];
m3_23 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="ConfigurableBootstrapper.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0"];
m3_24 [cluster="bool.ShouldBeTrue()", file="ConfigurableBootstrapper.cs", label="Entry bool.ShouldBeTrue()", span="70-70"];
m3_25 [cluster="Nancy.Tests.Extensions.EnvironmentExtensionsFixture.Should_set_protocol()", file="ConfigurableBootstrapper.cs", label="Entry Nancy.Tests.Extensions.EnvironmentExtensionsFixture.Should_set_protocol()", span="61-61"];
m3_26 [cluster="Nancy.Tests.Extensions.EnvironmentExtensionsFixture.Should_set_protocol()", file="ConfigurableBootstrapper.cs", label="var result = environment.AsNancyRequestParameters()", span="63-63"];
m3_27 [cluster="Nancy.Tests.Extensions.EnvironmentExtensionsFixture.Should_set_protocol()", file="ConfigurableBootstrapper.cs", label="result.Protocol.ShouldEqual(''http'')", span="65-65"];
m3_28 [cluster="Nancy.Tests.Extensions.EnvironmentExtensionsFixture.Should_set_protocol()", file="ConfigurableBootstrapper.cs", label="Exit Nancy.Tests.Extensions.EnvironmentExtensionsFixture.Should_set_protocol()", span="61-61"];
m3_29 [cluster="Nancy.Tests.Extensions.EnvironmentExtensionsFixture.Should_set_querystring()", file="ConfigurableBootstrapper.cs", label="Entry Nancy.Tests.Extensions.EnvironmentExtensionsFixture.Should_set_querystring()", span="69-69"];
m3_30 [cluster="Nancy.Tests.Extensions.EnvironmentExtensionsFixture.Should_set_querystring()", file="ConfigurableBootstrapper.cs", label="var result = environment.AsNancyRequestParameters()", span="71-71"];
m3_31 [cluster="Nancy.Tests.Extensions.EnvironmentExtensionsFixture.Should_set_querystring()", file="ConfigurableBootstrapper.cs", label="result.Query.ShouldEqual(''var=value'')", span="73-73"];
m3_32 [cluster="Nancy.Tests.Extensions.EnvironmentExtensionsFixture.Should_set_querystring()", file="ConfigurableBootstrapper.cs", label="Exit Nancy.Tests.Extensions.EnvironmentExtensionsFixture.Should_set_querystring()", span="69-69"];
m3_0 [cluster="Nancy.Tests.Extensions.EnvironmentExtensionsFixture.EnvironmentExtensionsFixture()", file="ConfigurableBootstrapper.cs", label="Entry Nancy.Tests.Extensions.EnvironmentExtensionsFixture.EnvironmentExtensionsFixture()", span="11-11"];
m3_1 [cluster="Nancy.Tests.Extensions.EnvironmentExtensionsFixture.EnvironmentExtensionsFixture()", file="ConfigurableBootstrapper.cs", label="IDictionary<string, string> requestHeaders = new Dictionary<string, string>()\r\n                                                             {\r\n                                                                 { ''Content-Length'', ''500'' },\r\n                                                                 { ''Header'', ''Value1,Value2'' },\r\n                                                             }", span="13-17"];
m3_2 [cluster="Nancy.Tests.Extensions.EnvironmentExtensionsFixture.EnvironmentExtensionsFixture()", file="ConfigurableBootstrapper.cs", label="this.environment = new Dictionary<string, object>()\r\n                                   {\r\n                                       { ''owin.RequestMethod'', ''GET'' },\r\n                                       { ''owin.RequestPath'', ''/test'' },\r\n                                       { ''owin.RequestPathBase'', ''/root'' },\r\n                                       { ''owin.RequestQueryString'', ''var=value'' },\r\n                                       { ''owin.RequestHeaders'', requestHeaders },\r\n                                       { ''owin.RequestBody'', null },\r\n                                       { ''owin.RequestScheme'', ''http'' },\r\n                                       { ''owin.Version'', ''1.0'' }\r\n                                   }", span="19-29"];
m3_3 [cluster="Nancy.Tests.Extensions.EnvironmentExtensionsFixture.EnvironmentExtensionsFixture()", file="ConfigurableBootstrapper.cs", label="Exit Nancy.Tests.Extensions.EnvironmentExtensionsFixture.EnvironmentExtensionsFixture()", span="11-11"];
m3_33 [cluster="Nancy.Tests.Extensions.EnvironmentExtensionsFixture.Should_initialise_requeststream_using_content_length_header()", file="ConfigurableBootstrapper.cs", label="Entry Nancy.Tests.Extensions.EnvironmentExtensionsFixture.Should_initialise_requeststream_using_content_length_header()", span="77-77"];
m3_34 [cluster="Nancy.Tests.Extensions.EnvironmentExtensionsFixture.Should_initialise_requeststream_using_content_length_header()", file="ConfigurableBootstrapper.cs", label="var result = environment.AsNancyRequestParameters()", span="79-79"];
m3_35 [cluster="Nancy.Tests.Extensions.EnvironmentExtensionsFixture.Should_initialise_requeststream_using_content_length_header()", file="ConfigurableBootstrapper.cs", label="Exit Nancy.Tests.Extensions.EnvironmentExtensionsFixture.Should_initialise_requeststream_using_content_length_header()", span="77-77"];
m3_36 [file="ConfigurableBootstrapper.cs", label="Nancy.Tests.Extensions.EnvironmentExtensionsFixture", span=""];
m4_0 [cluster="Nancy.Tests.Unit.Extensions.ContextExtensionsFixture.IsAjaxRequest_should_return_true_if_request_is_ajax()", file="ConfigurableBootstrapperFixture.cs", label="Entry Nancy.Tests.Unit.Extensions.ContextExtensionsFixture.IsAjaxRequest_should_return_true_if_request_is_ajax()", span="10-10"];
m4_1 [cluster="Nancy.Tests.Unit.Extensions.ContextExtensionsFixture.IsAjaxRequest_should_return_true_if_request_is_ajax()", color=green, community=0, file="ConfigurableBootstrapperFixture.cs", label="var headers =\r\n                new Dictionary<string, IEnumerable<string>>\r\n                    {\r\n                        { ''X-Requested-With'', new[] { ''XMLHttpRequest'' } }\r\n                    }", prediction=3, span="13-17"];
m4_2 [cluster="Nancy.Tests.Unit.Extensions.ContextExtensionsFixture.IsAjaxRequest_should_return_true_if_request_is_ajax()", color=green, community=0, file="ConfigurableBootstrapperFixture.cs", label="var context = new NancyContext\r\n                              {\r\n                                  Request = new FakeRequest(''POST'', ''/'', headers)\r\n                              }", prediction=4, span="20-23"];
m4_3 [cluster="Nancy.Tests.Unit.Extensions.ContextExtensionsFixture.IsAjaxRequest_should_return_true_if_request_is_ajax()", color=green, community=0, file="ConfigurableBootstrapperFixture.cs", label="Assert.True(context.IsAjaxRequest())", prediction=5, span="26-26"];
m4_4 [cluster="Nancy.Tests.Unit.Extensions.ContextExtensionsFixture.IsAjaxRequest_should_return_true_if_request_is_ajax()", file="ConfigurableBootstrapperFixture.cs", label="Exit Nancy.Tests.Unit.Extensions.ContextExtensionsFixture.IsAjaxRequest_should_return_true_if_request_is_ajax()", span="10-10"];
m4_5 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ConfigurableBootstrapperFixture.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m4_10 [cluster="Nancy.Tests.Unit.Extensions.ContextExtensionsFixture.IsAjaxRequest_should_return_false_if_request_is_null()", file="ConfigurableBootstrapperFixture.cs", label="Entry Nancy.Tests.Unit.Extensions.ContextExtensionsFixture.IsAjaxRequest_should_return_false_if_request_is_null()", span="30-30"];
m4_11 [cluster="Nancy.Tests.Unit.Extensions.ContextExtensionsFixture.IsAjaxRequest_should_return_false_if_request_is_null()", color=green, community=0, file="ConfigurableBootstrapperFixture.cs", label="var context = new NancyContext()", prediction=6, span="33-33"];
m4_12 [cluster="Nancy.Tests.Unit.Extensions.ContextExtensionsFixture.IsAjaxRequest_should_return_false_if_request_is_null()", color=green, community=0, file="ConfigurableBootstrapperFixture.cs", label="Assert.False(context.IsAjaxRequest())", prediction=7, span="36-36"];
m4_13 [cluster="Nancy.Tests.Unit.Extensions.ContextExtensionsFixture.IsAjaxRequest_should_return_false_if_request_is_null()", file="ConfigurableBootstrapperFixture.cs", label="Exit Nancy.Tests.Unit.Extensions.ContextExtensionsFixture.IsAjaxRequest_should_return_false_if_request_is_null()", span="30-30"];
m4_14 [cluster="Unk.False", file="ConfigurableBootstrapperFixture.cs", label="Entry Unk.False", span=""];
m4_15 [cluster="Nancy.Tests.Unit.Extensions.ContextExtensionsFixture.IsAjaxRequest_should_return_false_if_request_is_not_ajax()", file="ConfigurableBootstrapperFixture.cs", label="Entry Nancy.Tests.Unit.Extensions.ContextExtensionsFixture.IsAjaxRequest_should_return_false_if_request_is_not_ajax()", span="40-40"];
m4_16 [cluster="Nancy.Tests.Unit.Extensions.ContextExtensionsFixture.IsAjaxRequest_should_return_false_if_request_is_not_ajax()", color=green, community=0, file="ConfigurableBootstrapperFixture.cs", label="var context = new NancyContext\r\n                              {\r\n                                  Request = new FakeRequest(''POST'', ''/'')\r\n                              }", prediction=8, span="43-46"];
m4_17 [cluster="Nancy.Tests.Unit.Extensions.ContextExtensionsFixture.IsAjaxRequest_should_return_false_if_request_is_not_ajax()", color=green, community=0, file="ConfigurableBootstrapperFixture.cs", label="Assert.False(context.IsAjaxRequest())", prediction=9, span="49-49"];
m4_18 [cluster="Nancy.Tests.Unit.Extensions.ContextExtensionsFixture.IsAjaxRequest_should_return_false_if_request_is_not_ajax()", file="ConfigurableBootstrapperFixture.cs", label="Exit Nancy.Tests.Unit.Extensions.ContextExtensionsFixture.IsAjaxRequest_should_return_false_if_request_is_not_ajax()", span="40-40"];
m4_8 [cluster="Nancy.NancyContext.IsAjaxRequest()", file="ConfigurableBootstrapperFixture.cs", label="Entry Nancy.NancyContext.IsAjaxRequest()", span="12-12"];
m4_6 [cluster="Nancy.NancyContext.NancyContext()", file="ConfigurableBootstrapperFixture.cs", label="Entry Nancy.NancyContext.NancyContext()", span="14-14"];
m4_7 [cluster="Nancy.Tests.Fakes.FakeRequest.FakeRequest(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="ConfigurableBootstrapperFixture.cs", label="Entry Nancy.Tests.Fakes.FakeRequest.FakeRequest(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", span="13-13"];
m4_19 [cluster="Nancy.Tests.Fakes.FakeRequest.FakeRequest(string, string)", file="ConfigurableBootstrapperFixture.cs", label="Entry Nancy.Tests.Fakes.FakeRequest.FakeRequest(string, string)", span="8-8"];
n9 -> n14  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d119 -> d13  [color=green, key=1, label="Nancy.Tests.Unit.AfterPipelineFixture", style=dashed];
d119 -> d11  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.AfterPipelineFixture", style=dashed];
d119 -> d14  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.AfterPipelineFixture", style=dashed];
d119 -> d28  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.AfterPipelineFixture", style=dashed];
d119 -> d29  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.AfterPipelineFixture", style=dashed];
d119 -> d36  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.AfterPipelineFixture", style=dashed];
d119 -> d37  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.AfterPipelineFixture", style=dashed];
d119 -> d38  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.AfterPipelineFixture", style=dashed];
d119 -> d56  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.AfterPipelineFixture", style=dashed];
d119 -> d57  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.AfterPipelineFixture", style=dashed];
d119 -> d58  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.AfterPipelineFixture", style=dashed];
d119 -> d99  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.AfterPipelineFixture", style=dashed];
d119 -> d100  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.AfterPipelineFixture", style=dashed];
d9 -> d14  [color=darkseagreen4, key=1, label=item1, style=dashed];
d26 -> d28  [color=darkseagreen4, key=1, label=item1, style=dashed];
d27 -> d29  [color=darkseagreen4, key=1, label=item2, style=dashed];
d30 -> d37  [color=darkseagreen4, key=1, label=item3, style=dashed];
d30 -> d33  [color=darkseagreen4, key=1, label=item3, style=dashed];
d32 -> d34  [color=darkseagreen4, key=1, label=pipeline2, style=dashed];
d31 -> d38  [color=darkseagreen4, key=1, label=item4, style=dashed];
d31 -> d34  [color=darkseagreen4, key=1, label=item4, style=dashed];
d51 -> d56  [color=darkseagreen4, key=1, label=item1, style=dashed];
d55 -> d58  [color=darkseagreen4, key=1, label=item3, style=dashed];
d53 -> d57  [color=darkseagreen4, key=1, label=item2, style=dashed];
d78 -> d80  [color=darkseagreen4, key=1, label=castPipeline, style=dashed];
d108 -> d101  [color=darkseagreen4, key=1, label=item1Called, style=dashed];
d77 -> d80  [color=darkseagreen4, key=1, label=item1, style=dashed];
d68 -> d61  [color=darkseagreen4, key=1, label=item1Called, style=dashed];
d111 -> d102  [color=darkseagreen4, key=1, label=item2Called, style=dashed];
d71 -> d62  [color=darkseagreen4, key=1, label=item2Called, style=dashed];
d114 -> d103  [color=darkseagreen4, key=1, label=item3Called, style=dashed];
d74 -> d63  [color=darkseagreen4, key=1, label=item3Called, style=dashed];
d117 -> d104  [color=darkseagreen4, key=1, label=item4Called, style=dashed];
m2_12 -> m2_14  [color=darkseagreen4, key=1, label=writer, style=dashed];
m2_26 -> m2_28  [color=darkseagreen4, key=1, label=writer, style=dashed];
m3_17 -> m3_19  [color=darkseagreen4, key=1, label=result, style=dashed];
m3_17 -> m3_20  [color=darkseagreen4, key=1, label=result, style=dashed];
}
