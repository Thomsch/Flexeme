digraph  {
m0_45 [cluster="string.Trim(params char[])", file="CaptureNodeWithMultipleParameters.cs", label="Entry string.Trim(params char[])", span="0-0"];
m0_18 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.Match(string)", file="CaptureNodeWithMultipleParameters.cs", label="Entry Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.Match(string)", span="65-65"];
m0_19 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.Match(string)", color=green, community=0, file="CaptureNodeWithMultipleParameters.cs", label="0: var match = SegmentMatch.NoMatch", span="67-67"];
m0_20 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.Match(string)", color=green, community=0, file="CaptureNodeWithMultipleParameters.cs", label="0: var regex = new Regex(builtRegex)", span="68-68"];
m0_28 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.Match(string)", color=green, community=0, file="CaptureNodeWithMultipleParameters.cs", label="2: return match;", span="79-79"];
m0_21 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.Match(string)", color=green, community=0, file="CaptureNodeWithMultipleParameters.cs", label="0: regex.IsMatch(segment)", span="70-70"];
m0_22 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.Match(string)", color=green, community=0, file="CaptureNodeWithMultipleParameters.cs", label="0: match = new SegmentMatch(true)", span="72-72"];
m0_23 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.Match(string)", color=green, community=0, file="CaptureNodeWithMultipleParameters.cs", label="0: var regexMatch = regex.Match(segment)", span="73-73"];
m0_24 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.Match(string)", color=green, community=0, file="CaptureNodeWithMultipleParameters.cs", label="0: var i = 1", span="74-74"];
m0_25 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.Match(string)", color=green, community=0, file="CaptureNodeWithMultipleParameters.cs", label="0: i < regexMatch.Groups.Count", span="74-74"];
m0_26 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.Match(string)", color=green, community=0, file="CaptureNodeWithMultipleParameters.cs", label="0: match.CapturedParameters.Add(parameterNames[i - 1], regexMatch.Groups[i].Value)", span="76-76"];
m0_27 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.Match(string)", color=green, community=0, file="CaptureNodeWithMultipleParameters.cs", label="0: i++", span="74-74"];
m0_29 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.Match(string)", file="CaptureNodeWithMultipleParameters.cs", label="Exit Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.Match(string)", span="65-65"];
m0_3 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.ExtractParameterNames()", file="CaptureNodeWithMultipleParameters.cs", label="Entry Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.ExtractParameterNames()", span="85-85"];
m0_35 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.ExtractParameterNames()", color=green, community=0, file="CaptureNodeWithMultipleParameters.cs", label="0: var matches = MatchRegex.Matches(this.RouteDefinitionSegment)", span="87-87"];
m0_36 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.ExtractParameterNames()", color=green, community=0, file="CaptureNodeWithMultipleParameters.cs", label="2: this.BuildRegex(AssertStart)", span="88-88"];
m0_37 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.ExtractParameterNames()", color=green, community=0, file="CaptureNodeWithMultipleParameters.cs", label="0: matches", span="89-89"];
m0_41 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.ExtractParameterNames()", color=green, community=0, file="CaptureNodeWithMultipleParameters.cs", label="0: this.BuildRegex(Regex.Escape(match.Value))", span="98-98"];
m0_40 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.ExtractParameterNames()", color=green, community=0, file="CaptureNodeWithMultipleParameters.cs", label="2: this.BuildRegex(MatchParameter)", span="94-94"];
m0_38 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.ExtractParameterNames()", color=green, community=0, file="CaptureNodeWithMultipleParameters.cs", label="0: IsParameterCapture(match)", span="91-91"];
m0_42 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.ExtractParameterNames()", color=green, community=0, file="CaptureNodeWithMultipleParameters.cs", label="0: this.BuildRegex(AssertEnd)", span="101-101"];
m0_39 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.ExtractParameterNames()", color=green, community=0, file="CaptureNodeWithMultipleParameters.cs", label="0: parameterNames.Add(match.Value.Trim('{', '}'))", span="93-93"];
m0_43 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.ExtractParameterNames()", file="CaptureNodeWithMultipleParameters.cs", label="Exit Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.ExtractParameterNames()", span="85-85"];
m0_17 [cluster="string.EndsWith(string)", file="CaptureNodeWithMultipleParameters.cs", label="Entry string.EndsWith(string)", span="0-0"];
m0_31 [cluster="System.Text.RegularExpressions.Regex.IsMatch(string)", file="CaptureNodeWithMultipleParameters.cs", label="Entry System.Text.RegularExpressions.Regex.IsMatch(string)", span="0-0"];
m0_33 [cluster="System.Text.RegularExpressions.Regex.Match(string)", file="CaptureNodeWithMultipleParameters.cs", label="Entry System.Text.RegularExpressions.Regex.Match(string)", span="0-0"];
m0_44 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.BuildRegex(string)", file="CaptureNodeWithMultipleParameters.cs", label="Entry Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.BuildRegex(string)", span="104-104"];
m0_48 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.BuildRegex(string)", color=green, community=0, file="CaptureNodeWithMultipleParameters.cs", label="5: this.builtRegex += regexSegment", span="106-106"];
m0_49 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.BuildRegex(string)", file="CaptureNodeWithMultipleParameters.cs", label="Exit Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.BuildRegex(string)", span="104-104"];
m0_46 [cluster="System.Collections.Generic.List<T>.Add(T)", file="CaptureNodeWithMultipleParameters.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m0_16 [cluster="string.StartsWith(string)", file="CaptureNodeWithMultipleParameters.cs", label="Entry string.StartsWith(string)", span="0-0"];
m0_47 [cluster="System.Text.RegularExpressions.Regex.Escape(string)", file="CaptureNodeWithMultipleParameters.cs", label="Entry System.Text.RegularExpressions.Regex.Escape(string)", span="0-0"];
m0_9 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>(System.Func<TSource, bool>)", file="CaptureNodeWithMultipleParameters.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>(System.Func<TSource, bool>)", span="0-0"];
m0_0 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.CaptureNodeWithMultipleParameters(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory)", file="CaptureNodeWithMultipleParameters.cs", label="Entry Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.CaptureNodeWithMultipleParameters(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory)", span="31-31"];
m0_1 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.CaptureNodeWithMultipleParameters(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory)", color=green, community=0, file="CaptureNodeWithMultipleParameters.cs", label="2: this.ExtractParameterNames()", span="34-34"];
m0_2 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.CaptureNodeWithMultipleParameters(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory)", file="CaptureNodeWithMultipleParameters.cs", label="Exit Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.CaptureNodeWithMultipleParameters(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory)", span="31-31"];
m0_30 [cluster="System.Text.RegularExpressions.Regex.Regex(string)", file="CaptureNodeWithMultipleParameters.cs", label="Entry System.Text.RegularExpressions.Regex.Regex(string)", span="0-0"];
m0_8 [cluster="System.Collections.IEnumerable.Cast<TResult>()", file="CaptureNodeWithMultipleParameters.cs", label="Entry System.Collections.IEnumerable.Cast<TResult>()", span="0-0"];
m0_34 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="CaptureNodeWithMultipleParameters.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m0_13 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.IsParameterCapture(System.Text.RegularExpressions.Capture)", file="CaptureNodeWithMultipleParameters.cs", label="Entry Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.IsParameterCapture(System.Text.RegularExpressions.Capture)", span="47-47"];
m0_14 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.IsParameterCapture(System.Text.RegularExpressions.Capture)", color=green, community=0, file="CaptureNodeWithMultipleParameters.cs", label="0: return match.Value.StartsWith(''{'') && match.Value.EndsWith(''}'');", span="49-49"];
m0_15 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.IsParameterCapture(System.Text.RegularExpressions.Capture)", file="CaptureNodeWithMultipleParameters.cs", label="Exit Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.IsParameterCapture(System.Text.RegularExpressions.Capture)", span="47-47"];
m0_10 [cluster="lambda expression", file="CaptureNodeWithMultipleParameters.cs", label="Entry lambda expression", span="44-44"];
m0_11 [cluster="lambda expression", color=green, community=0, file="CaptureNodeWithMultipleParameters.cs", label="5: g.Value != string.Empty", span="44-44"];
m0_12 [cluster="lambda expression", file="CaptureNodeWithMultipleParameters.cs", label="Exit lambda expression", span="44-44"];
m0_32 [cluster="Nancy.Routing.Trie.SegmentMatch.SegmentMatch(bool)", file="CaptureNodeWithMultipleParameters.cs", label="Entry Nancy.Routing.Trie.SegmentMatch.SegmentMatch(bool)", span="26-26"];
m0_4 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.IsMatch(string)", file="CaptureNodeWithMultipleParameters.cs", label="Entry Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.IsMatch(string)", span="42-42"];
m0_5 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.IsMatch(string)", color=green, community=0, file="CaptureNodeWithMultipleParameters.cs", label="0: return MatchRegex.Matches(segment).Cast<Group>().Count(g => g.Value != string.Empty) > 1;", span="44-44"];
m0_6 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.IsMatch(string)", file="CaptureNodeWithMultipleParameters.cs", label="Exit Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters.IsMatch(string)", span="42-42"];
m0_7 [cluster="System.Text.RegularExpressions.Regex.Matches(string)", file="CaptureNodeWithMultipleParameters.cs", label="Entry System.Text.RegularExpressions.Regex.Matches(string)", span="0-0"];
m0_50 [file="CaptureNodeWithMultipleParameters.cs", label="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters", span=""];
m2_491 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_multiple_Form_properties_to_list()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_multiple_Form_properties_to_list()", span="571-571"];
m2_492 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_multiple_Form_properties_to_list()", file="DefaultBinderFixture.cs", label="var typeConverters = new ITypeConverter[] { new CollectionConverter(), new FallbackConverter() }", span="574-574"];
m2_493 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_multiple_Form_properties_to_list()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder(typeConverters)", span="575-575"];
m2_494 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_multiple_Form_properties_to_list()", file="DefaultBinderFixture.cs", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/x-www-form-urlencoded'' })", span="577-577"];
m2_499 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_multiple_Form_properties_to_list()", file="DefaultBinderFixture.cs", label="var result = (List<TestModel>)binder.Bind(context, typeof(List<TestModel>), null, BindingConfig.Default)", span="584-584"];
m2_495 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_multiple_Form_properties_to_list()", file="DefaultBinderFixture.cs", label="context.Request.Form[''StringProperty_0''] = ''Test''", span="578-578"];
m2_496 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_multiple_Form_properties_to_list()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty_0''] = ''1''", span="579-579"];
m2_497 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_multiple_Form_properties_to_list()", file="DefaultBinderFixture.cs", label="context.Request.Form[''StringProperty_1''] = ''Test2''", span="580-580"];
m2_498 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_multiple_Form_properties_to_list()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty_1''] = ''2''", span="581-581"];
m2_500 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_multiple_Form_properties_to_list()", file="DefaultBinderFixture.cs", label="result.First().StringProperty.ShouldEqual(''Test'')", span="587-587"];
m2_501 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_multiple_Form_properties_to_list()", file="DefaultBinderFixture.cs", label="result.First().IntProperty.ShouldEqual(1)", span="588-588"];
m2_502 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_multiple_Form_properties_to_list()", file="DefaultBinderFixture.cs", label="result.Last().StringProperty.ShouldEqual(''Test2'')", span="589-589"];
m2_503 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_multiple_Form_properties_to_list()", file="DefaultBinderFixture.cs", label="result.Last().IntProperty.ShouldEqual(2)", span="590-590"];
m2_504 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_multiple_Form_properties_to_list()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_multiple_Form_properties_to_list()", span="571-571"];
m2_629 [cluster="System.Collections.Generic.List<T>.List()", file="DefaultBinderFixture.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m2_508 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list()", span="594-594"];
m2_509 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list()", file="DefaultBinderFixture.cs", label="var typeConverters = new ITypeConverter[] { new CollectionConverter(), new FallbackConverter() }", span="597-597"];
m2_510 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder(typeConverters)", span="598-598"];
m2_511 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list()", file="DefaultBinderFixture.cs", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/x-www-form-urlencoded'' })", span="600-600"];
m2_525 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list()", file="DefaultBinderFixture.cs", label="var result = (List<TestModel>)binder.Bind(context, typeof(List<TestModel>), null, BindingConfig.Default)", span="616-616"];
m2_512 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty_0''] = ''1''", span="601-601"];
m2_513 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty_01''] = ''2''", span="602-602"];
m2_514 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty_02''] = ''3''", span="603-603"];
m2_515 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty_03''] = ''4''", span="604-604"];
m2_516 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty_04''] = ''5''", span="605-605"];
m2_517 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty_05''] = ''6''", span="606-606"];
m2_518 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty_06''] = ''7''", span="607-607"];
m2_519 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty_07''] = ''8''", span="608-608"];
m2_520 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty_08''] = ''9''", span="609-609"];
m2_521 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty_09''] = ''10''", span="610-610"];
m2_522 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty_10''] = ''11''", span="611-611"];
m2_523 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty_11''] = ''12''", span="612-612"];
m2_524 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty_12''] = ''13''", span="613-613"];
m2_526 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list()", file="DefaultBinderFixture.cs", label="result.First().IntProperty.ShouldEqual(1)", span="619-619"];
m2_527 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list()", file="DefaultBinderFixture.cs", label="result.ElementAt(1).IntProperty.ShouldEqual(2)", span="620-620"];
m2_528 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list()", file="DefaultBinderFixture.cs", label="result.Last().IntProperty.ShouldEqual(13)", span="621-621"];
m2_529 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list()", span="594-594"];
m2_100 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_request_content_type_to_can_deserialize()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_request_content_type_to_can_deserialize()", span="120-120"];
m2_101 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_request_content_type_to_can_deserialize()", file="DefaultBinderFixture.cs", label="var deserializer = A.Fake<IBodyDeserializer>()", span="123-123"];
m2_102 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_request_content_type_to_can_deserialize()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder(bodyDeserializers: new[] { deserializer })", span="124-124"];
m2_105 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_request_content_type_to_can_deserialize()", file="DefaultBinderFixture.cs", label="A.CallTo(() => deserializer.CanDeserialize(''application/xml'', A<BindingContext>._))\r\n                .MustHaveHappened(Repeated.Exactly.Once)", span="132-133"];
m2_103 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_request_content_type_to_can_deserialize()", file="DefaultBinderFixture.cs", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="126-126"];
m2_104 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_request_content_type_to_can_deserialize()", file="DefaultBinderFixture.cs", label="binder.Bind(context, this.GetType(), null, BindingConfig.Default)", span="129-129"];
m2_106 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_request_content_type_to_can_deserialize()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_request_content_type_to_can_deserialize()", span="120-120"];
m2_297 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_binding_context_to_default_deserializer()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_binding_context_to_default_deserializer()", span="354-354"];
m2_298 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_binding_context_to_default_deserializer()", file="DefaultBinderFixture.cs", label="var deserializer = A.Fake<IBodyDeserializer>()", span="357-357"];
m2_299 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_binding_context_to_default_deserializer()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder()", span="358-358"];
m2_301 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_binding_context_to_default_deserializer()", file="DefaultBinderFixture.cs", label="A.CallTo(() => this.emptyDefaults.DefaultBodyDeserializers).Returns(new[] { deserializer })", span="361-361"];
m2_303 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_binding_context_to_default_deserializer()", file="DefaultBinderFixture.cs", label="A.CallTo(() => deserializer.CanDeserialize(''application/xml'', A<BindingContext>.That.Not.IsNull()))\r\n                .MustHaveHappened(Repeated.Exactly.Once)", span="367-368"];
m2_300 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_binding_context_to_default_deserializer()", file="DefaultBinderFixture.cs", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="360-360"];
m2_302 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_binding_context_to_default_deserializer()", file="DefaultBinderFixture.cs", label="binder.Bind(context, this.GetType(), null, BindingConfig.Default)", span="364-364"];
m2_304 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_binding_context_to_default_deserializer()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_binding_context_to_default_deserializer()", span="354-354"];
m2_756 [cluster="System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", file="DefaultBinderFixture.cs", label="Entry System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m2_21 [cluster="Nancy.ModelBinding.IFieldNameConverter.Convert(string)", file="DefaultBinderFixture.cs", label="Entry Nancy.ModelBinding.IFieldNameConverter.Convert(string)", span="13-13"];
m2_74 [cluster="object.GetType()", file="DefaultBinderFixture.cs", label="Entry object.GetType()", span="0-0"];
m2_399 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_body_serializer_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_body_serializer_should_take_precedence_over_default_one()", span="468-468"];
m2_400 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_body_serializer_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs", label="var userDeserializer = A.Fake<IBodyDeserializer>()", span="471-471"];
m2_401 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_body_serializer_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs", label="A.CallTo(() => userDeserializer.CanDeserialize(null, A<BindingContext>._)).WithAnyArguments().Returns(true)", span="472-472"];
m2_405 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_body_serializer_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder(bodyDeserializers: new[] { userDeserializer })", span="478-478"];
m2_408 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_body_serializer_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs", label="A.CallTo(() => userDeserializer.Deserialize(null, null, null)).WithAnyArguments()\r\n                .MustHaveHappened(Repeated.Exactly.Once)", span="486-487"];
m2_402 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_body_serializer_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs", label="var defaultDeserializer = A.Fake<IBodyDeserializer>()", span="474-474"];
m2_403 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_body_serializer_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs", label="A.CallTo(() => defaultDeserializer.CanDeserialize(null, A<BindingContext>._)).WithAnyArguments().Returns(true)", span="475-475"];
m2_404 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_body_serializer_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs", label="A.CallTo(() => this.emptyDefaults.DefaultBodyDeserializers).Returns(new[] { defaultDeserializer })", span="477-477"];
m2_409 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_body_serializer_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs", label="A.CallTo(() => defaultDeserializer.Deserialize(null, null, null)).WithAnyArguments()\r\n                .MustNotHaveHappened()", span="488-489"];
m2_406 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_body_serializer_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="480-480"];
m2_407 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_body_serializer_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs", label="binder.Bind(context, this.GetType(), null, BindingConfig.Default)", span="483-483"];
m2_410 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_body_serializer_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_body_serializer_should_take_precedence_over_default_one()", span="468-468"];
m2_227 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.GetBinder(System.Collections.Generic.IEnumerable<Nancy.ModelBinding.ITypeConverter>, System.Collections.Generic.IEnumerable<Nancy.ModelBinding.IBodyDeserializer>, Nancy.ModelBinding.IFieldNameConverter, Nancy.ModelBinding.BindingDefaults)", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.GetBinder(System.Collections.Generic.IEnumerable<Nancy.ModelBinding.ITypeConverter>, System.Collections.Generic.IEnumerable<Nancy.ModelBinding.IBodyDeserializer>, Nancy.ModelBinding.IFieldNameConverter, Nancy.ModelBinding.BindingDefaults)", span="1259-1259"];
m2_883 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.GetBinder(System.Collections.Generic.IEnumerable<Nancy.ModelBinding.ITypeConverter>, System.Collections.Generic.IEnumerable<Nancy.ModelBinding.IBodyDeserializer>, Nancy.ModelBinding.IFieldNameConverter, Nancy.ModelBinding.BindingDefaults)", file="DefaultBinderFixture.cs", label="var converters = typeConverters ?? new ITypeConverter[] { new DateTimeConverter(), new NumericConverter(), new FallbackConverter() }", span="1261-1261"];
m2_884 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.GetBinder(System.Collections.Generic.IEnumerable<Nancy.ModelBinding.ITypeConverter>, System.Collections.Generic.IEnumerable<Nancy.ModelBinding.IBodyDeserializer>, Nancy.ModelBinding.IFieldNameConverter, Nancy.ModelBinding.BindingDefaults)", file="DefaultBinderFixture.cs", label="var deserializers = bodyDeserializers ?? new IBodyDeserializer[] { }", span="1262-1262"];
m2_885 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.GetBinder(System.Collections.Generic.IEnumerable<Nancy.ModelBinding.ITypeConverter>, System.Collections.Generic.IEnumerable<Nancy.ModelBinding.IBodyDeserializer>, Nancy.ModelBinding.IFieldNameConverter, Nancy.ModelBinding.BindingDefaults)", file="DefaultBinderFixture.cs", label="var converter = nameConverter ?? this.passthroughNameConverter", span="1263-1263"];
m2_886 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.GetBinder(System.Collections.Generic.IEnumerable<Nancy.ModelBinding.ITypeConverter>, System.Collections.Generic.IEnumerable<Nancy.ModelBinding.IBodyDeserializer>, Nancy.ModelBinding.IFieldNameConverter, Nancy.ModelBinding.BindingDefaults)", file="DefaultBinderFixture.cs", label="var defaults = bindingDefaults ?? this.emptyDefaults", span="1264-1264"];
m2_887 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.GetBinder(System.Collections.Generic.IEnumerable<Nancy.ModelBinding.ITypeConverter>, System.Collections.Generic.IEnumerable<Nancy.ModelBinding.IBodyDeserializer>, Nancy.ModelBinding.IFieldNameConverter, Nancy.ModelBinding.BindingDefaults)", file="DefaultBinderFixture.cs", label="return new DefaultBinder(converters, deserializers, converter, defaults);", span="1266-1266"];
m2_888 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.GetBinder(System.Collections.Generic.IEnumerable<Nancy.ModelBinding.ITypeConverter>, System.Collections.Generic.IEnumerable<Nancy.ModelBinding.IBodyDeserializer>, Nancy.ModelBinding.IFieldNameConverter, Nancy.ModelBinding.BindingDefaults)", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.GetBinder(System.Collections.Generic.IEnumerable<Nancy.ModelBinding.ITypeConverter>, System.Collections.Generic.IEnumerable<Nancy.ModelBinding.IBodyDeserializer>, Nancy.ModelBinding.IFieldNameConverter, Nancy.ModelBinding.BindingDefaults)", span="1259-1259"];
m2_311 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_field_name_converter_for_each_field()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_field_name_converter_for_each_field()", span="372-372"];
m2_312 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_field_name_converter_for_each_field()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder()", span="375-375"];
m2_313 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_field_name_converter_for_each_field()", file="DefaultBinderFixture.cs", label="var context = new NancyContext { Request = new FakeRequest(''GET'', ''/'') }", span="376-376"];
m2_316 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_field_name_converter_for_each_field()", file="DefaultBinderFixture.cs", label="binder.Bind(context, typeof(TestModel), null, BindingConfig.Default)", span="381-381"];
m2_314 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_field_name_converter_for_each_field()", file="DefaultBinderFixture.cs", label="context.Request.Form[''StringProperty''] = ''Test''", span="377-377"];
m2_315 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_field_name_converter_for_each_field()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty''] = ''12''", span="378-378"];
m2_317 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_field_name_converter_for_each_field()", file="DefaultBinderFixture.cs", label="A.CallTo(() => this.passthroughNameConverter.Convert(null)).WithAnyArguments()\r\n                .MustHaveHappened(Repeated.Exactly.Times(2))", span="384-385"];
m2_318 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_field_name_converter_for_each_field()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_field_name_converter_for_each_field()", span="372-372"];
m2_889 [cluster="Nancy.ModelBinding.DefaultConverters.DateTimeConverter.DateTimeConverter()", file="DefaultBinderFixture.cs", label="Entry Nancy.ModelBinding.DefaultConverters.DateTimeConverter.DateTimeConverter()", span="7-7"];
m2_250 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_throw_ModelBindingException_if_convertion_of_property_fails_and_ignore_error_is_true()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_throw_ModelBindingException_if_convertion_of_property_fails_and_ignore_error_is_true()", span="294-294"];
m2_251 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_throw_ModelBindingException_if_convertion_of_property_fails_and_ignore_error_is_true()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder(typeConverters: new[] { new FallbackConverter() })", span="297-297"];
m2_252 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_throw_ModelBindingException_if_convertion_of_property_fails_and_ignore_error_is_true()", file="DefaultBinderFixture.cs", label="var context = new NancyContext { Request = new FakeRequest(''GET'', ''/'') }", span="298-298"];
m2_256 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_throw_ModelBindingException_if_convertion_of_property_fails_and_ignore_error_is_true()", file="DefaultBinderFixture.cs", label="Assert.DoesNotThrow(() => binder.Bind(context, typeof(TestModel), null, config))", span="306-306"];
m2_253 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_throw_ModelBindingException_if_convertion_of_property_fails_and_ignore_error_is_true()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty''] = ''badint''", span="299-299"];
m2_254 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_throw_ModelBindingException_if_convertion_of_property_fails_and_ignore_error_is_true()", file="DefaultBinderFixture.cs", label="context.Request.Form[''AnotherIntProperty''] = ''morebad''", span="300-300"];
m2_255 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_throw_ModelBindingException_if_convertion_of_property_fails_and_ignore_error_is_true()", file="DefaultBinderFixture.cs", label="var config = new BindingConfig {IgnoreErrors = true}", span="302-302"];
m2_257 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_throw_ModelBindingException_if_convertion_of_property_fails_and_ignore_error_is_true()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_throw_ModelBindingException_if_convertion_of_property_fails_and_ignore_error_is_true()", span="294-294"];
m2_834 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_be_ignored_in_body_only_mode_when_there_is_a_body()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_be_ignored_in_body_only_mode_when_there_is_a_body()", span="1176-1176"];
m2_835 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_be_ignored_in_body_only_mode_when_there_is_a_body()", file="DefaultBinderFixture.cs", label="var typeConverters = new ITypeConverter[] { new CollectionConverter(), new FallbackConverter() }", span="1179-1179"];
m2_836 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_be_ignored_in_body_only_mode_when_there_is_a_body()", file="DefaultBinderFixture.cs", label="var bodyDeserializers = new IBodyDeserializer[] { new XmlBodyDeserializer() }", span="1180-1180"];
m2_837 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_be_ignored_in_body_only_mode_when_there_is_a_body()", file="DefaultBinderFixture.cs", label="var binder = GetBinder(typeConverters, bodyDeserializers)", span="1181-1181"];
m2_838 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_be_ignored_in_body_only_mode_when_there_is_a_body()", file="DefaultBinderFixture.cs", label="var body = XmlBodyDeserializerFixture.ToXmlString(new TestModel { IntProperty = 2, StringProperty = ''From body'' })", span="1182-1182"];
m2_843 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_be_ignored_in_body_only_mode_when_there_is_a_body()", file="DefaultBinderFixture.cs", label="var result = (TestModel)binder.Bind(context, typeof(TestModel), null, new BindingConfig { BodyOnly = true })", span="1191-1191"];
m2_839 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_be_ignored_in_body_only_mode_when_there_is_a_body()", file="DefaultBinderFixture.cs", label="var context = CreateContextWithHeaderAndBody(''Content-Type'', new[] { ''application/xml'' }, body)", span="1184-1184"];
m2_840 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_be_ignored_in_body_only_mode_when_there_is_a_body()", file="DefaultBinderFixture.cs", label="context.Request.Form[''StringProperty''] = ''From form''", span="1186-1186"];
m2_841 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_be_ignored_in_body_only_mode_when_there_is_a_body()", file="DefaultBinderFixture.cs", label="context.Request.Query[''IntProperty''] = ''1''", span="1187-1187"];
m2_842 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_be_ignored_in_body_only_mode_when_there_is_a_body()", file="DefaultBinderFixture.cs", label="context.Parameters[''AnotherStringProprety''] = ''From context''", span="1188-1188"];
m2_844 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_be_ignored_in_body_only_mode_when_there_is_a_body()", file="DefaultBinderFixture.cs", label="result.StringProperty.ShouldEqual(''From body'')", span="1194-1194"];
m2_845 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_be_ignored_in_body_only_mode_when_there_is_a_body()", file="DefaultBinderFixture.cs", label="result.AnotherStringProprety.ShouldBeNull()", span="1195-1195"];
m2_846 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_be_ignored_in_body_only_mode_when_there_is_a_body()", file="DefaultBinderFixture.cs", label="result.IntProperty.ShouldEqual(2)", span="1196-1196"];
m2_847 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_be_ignored_in_body_only_mode_when_there_is_a_body()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_be_ignored_in_body_only_mode_when_there_is_a_body()", span="1176-1176"];
m2_72 [cluster="Unk.GetBinder", file="DefaultBinderFixture.cs", label="Entry Unk.GetBinder", span=""];
m2_187 [cluster="Unk.Times", file="DefaultBinderFixture.cs", label="Entry Unk.Times", span=""];
m2_881 [cluster="object.Object()", file="DefaultBinderFixture.cs", label="Entry object.Object()", span="0-0"];
m2_675 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_culturally_aware_form_properties_if_numeric(string, double)", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_culturally_aware_form_properties_if_numeric(string, double)", span="866-866"];
m2_676 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_culturally_aware_form_properties_if_numeric(string, double)", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder()", span="869-869"];
m2_678 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_culturally_aware_form_properties_if_numeric(string, double)", file="DefaultBinderFixture.cs", label="context.Culture = new CultureInfo(culture)", span="872-872"];
m2_681 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_culturally_aware_form_properties_if_numeric(string, double)", file="DefaultBinderFixture.cs", label="result.DoubleProperty.ShouldEqual(expected)", span="879-879"];
m2_677 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_culturally_aware_form_properties_if_numeric(string, double)", file="DefaultBinderFixture.cs", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="871-871"];
m2_680 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_culturally_aware_form_properties_if_numeric(string, double)", file="DefaultBinderFixture.cs", label="var result = (TestModel)binder.Bind(context, typeof(TestModel), null, BindingConfig.Default)", span="876-876"];
m2_679 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_culturally_aware_form_properties_if_numeric(string, double)", file="DefaultBinderFixture.cs", label="context.Request.Form[''DoubleProperty''] = ''4,50''", span="873-873"];
m2_682 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_culturally_aware_form_properties_if_numeric(string, double)", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_culturally_aware_form_properties_if_numeric(string, double)", span="866-866"];
m2_35 [cluster="Unk.Exception", file="DefaultBinderFixture.cs", label="Entry Unk.Exception", span=""];
m2_263 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_set_remaining_properties_when_one_fails_and_ignore_error_is_enabled()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_set_remaining_properties_when_one_fails_and_ignore_error_is_enabled()", span="310-310"];
m2_264 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_set_remaining_properties_when_one_fails_and_ignore_error_is_enabled()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder(typeConverters: new[] { new FallbackConverter() })", span="313-313"];
m2_265 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_set_remaining_properties_when_one_fails_and_ignore_error_is_enabled()", file="DefaultBinderFixture.cs", label="var context = new NancyContext { Request = new FakeRequest(''GET'', ''/'') }", span="314-314"];
m2_269 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_set_remaining_properties_when_one_fails_and_ignore_error_is_enabled()", file="DefaultBinderFixture.cs", label="var model = binder.Bind(context, typeof(TestModel), null, config) as TestModel", span="321-321"];
m2_266 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_set_remaining_properties_when_one_fails_and_ignore_error_is_enabled()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty''] = ''badint''", span="315-315"];
m2_267 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_set_remaining_properties_when_one_fails_and_ignore_error_is_enabled()", file="DefaultBinderFixture.cs", label="context.Request.Form[''AnotherIntProperty''] = 10", span="316-316"];
m2_268 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_set_remaining_properties_when_one_fails_and_ignore_error_is_enabled()", file="DefaultBinderFixture.cs", label="var config = new BindingConfig { IgnoreErrors = true }", span="318-318"];
m2_270 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_set_remaining_properties_when_one_fails_and_ignore_error_is_enabled()", file="DefaultBinderFixture.cs", label="model.AnotherIntProperty.ShouldEqual(10)", span="324-324"];
m2_271 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_set_remaining_properties_when_one_fails_and_ignore_error_is_enabled()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_set_remaining_properties_when_one_fails_and_ignore_error_is_enabled()", span="310-310"];
m2_684 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_culturally_aware_form_properties_if_datetime(string, int, int, int, string)", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_culturally_aware_form_properties_if_datetime(string, int, int, int, string)", span="891-891"];
m2_685 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_culturally_aware_form_properties_if_datetime(string, int, int, int, string)", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder()", span="894-894"];
m2_687 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_culturally_aware_form_properties_if_datetime(string, int, int, int, string)", file="DefaultBinderFixture.cs", label="context.Culture = new CultureInfo(culture)", span="897-897"];
m2_688 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_culturally_aware_form_properties_if_datetime(string, int, int, int, string)", file="DefaultBinderFixture.cs", label="context.Request.Form[''DateProperty''] = date", span="898-898"];
m2_690 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_culturally_aware_form_properties_if_datetime(string, int, int, int, string)", file="DefaultBinderFixture.cs", label="result.DateProperty.Date.Month.ShouldEqual(month)", span="904-904"];
m2_691 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_culturally_aware_form_properties_if_datetime(string, int, int, int, string)", file="DefaultBinderFixture.cs", label="result.DateProperty.Date.Day.ShouldEqual(day)", span="905-905"];
m2_692 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_culturally_aware_form_properties_if_datetime(string, int, int, int, string)", file="DefaultBinderFixture.cs", label="result.DateProperty.Date.Year.ShouldEqual(year)", span="906-906"];
m2_686 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_culturally_aware_form_properties_if_datetime(string, int, int, int, string)", file="DefaultBinderFixture.cs", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="896-896"];
m2_689 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_culturally_aware_form_properties_if_datetime(string, int, int, int, string)", file="DefaultBinderFixture.cs", label="var result = (TestModel)binder.Bind(context, typeof(TestModel), null, BindingConfig.Default)", span="901-901"];
m2_693 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_culturally_aware_form_properties_if_datetime(string, int, int, int, string)", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_culturally_aware_form_properties_if_datetime(string, int, int, int, string)", span="891-891"];
m2_132 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.TestModel.TestModel()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.TestModel.TestModel()", span="1302-1302"];
m2_905 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.TestModel.TestModel()", file="DefaultBinderFixture.cs", label="this.StringPropertyWithDefaultValue = ''Default Value''", span="1304-1304"];
m2_906 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.TestModel.TestModel()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.TestModel.TestModel()", span="1302-1302"];
m2_703 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_overwrite_nullable_property_if_already_set_and_overwriting_is_not_allowed()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_overwrite_nullable_property_if_already_set_and_overwriting_is_not_allowed()", span="928-928"];
m2_704 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_overwrite_nullable_property_if_already_set_and_overwriting_is_not_allowed()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder()", span="931-931"];
m2_705 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_overwrite_nullable_property_if_already_set_and_overwriting_is_not_allowed()", file="DefaultBinderFixture.cs", label="var existing = new TestModel { StringProperty = ''Existing Value'' }", span="932-932"];
m2_711 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_overwrite_nullable_property_if_already_set_and_overwriting_is_not_allowed()", file="DefaultBinderFixture.cs", label="var result = (TestModel)binder.Bind(context, typeof(TestModel), existing, BindingConfig.NoOverwrite)", span="942-942"];
m2_706 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_overwrite_nullable_property_if_already_set_and_overwriting_is_not_allowed()", file="DefaultBinderFixture.cs", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="934-934"];
m2_707 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_overwrite_nullable_property_if_already_set_and_overwriting_is_not_allowed()", file="DefaultBinderFixture.cs", label="context.Request.Query[''StringProperty''] = ''Test''", span="936-936"];
m2_708 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_overwrite_nullable_property_if_already_set_and_overwriting_is_not_allowed()", file="DefaultBinderFixture.cs", label="context.Request.Query[''IntProperty''] = ''12''", span="937-937"];
m2_709 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_overwrite_nullable_property_if_already_set_and_overwriting_is_not_allowed()", file="DefaultBinderFixture.cs", label="context.Parameters[''StringProperty''] = ''Test2''", span="938-938"];
m2_710 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_overwrite_nullable_property_if_already_set_and_overwriting_is_not_allowed()", file="DefaultBinderFixture.cs", label="context.Parameters[''IntProperty''] = ''1''", span="939-939"];
m2_712 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_overwrite_nullable_property_if_already_set_and_overwriting_is_not_allowed()", file="DefaultBinderFixture.cs", label="result.StringProperty.ShouldEqual(''Existing Value'')", span="945-945"];
m2_713 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_overwrite_nullable_property_if_already_set_and_overwriting_is_not_allowed()", file="DefaultBinderFixture.cs", label="result.IntProperty.ShouldEqual(12)", span="946-946"];
m2_714 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_overwrite_nullable_property_if_already_set_and_overwriting_is_not_allowed()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_overwrite_nullable_property_if_already_set_and_overwriting_is_not_allowed()", span="928-928"];
m2_376 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_type_converter_if_one_found()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_type_converter_if_one_found()", span="448-448"];
m2_377 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_type_converter_if_one_found()", file="DefaultBinderFixture.cs", label="var typeConverter = A.Fake<ITypeConverter>()", span="451-451"];
m2_378 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_type_converter_if_one_found()", file="DefaultBinderFixture.cs", label="A.CallTo(() => typeConverter.CanConvertTo(typeof(string), null)).WithAnyArguments().Returns(true)", span="452-452"];
m2_379 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_type_converter_if_one_found()", file="DefaultBinderFixture.cs", label="A.CallTo(() => typeConverter.Convert(null, null, null)).WithAnyArguments().Returns(null)", span="453-453"];
m2_380 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_type_converter_if_one_found()", file="DefaultBinderFixture.cs", label="A.CallTo(() => this.emptyDefaults.DefaultTypeConverters).Returns(new[] { typeConverter })", span="454-454"];
m2_385 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_type_converter_if_one_found()", file="DefaultBinderFixture.cs", label="A.CallTo(() => typeConverter.Convert(null, null, null)).WithAnyArguments()\r\n                .MustHaveHappened(Repeated.Exactly.Once)", span="463-464"];
m2_381 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_type_converter_if_one_found()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder(new ITypeConverter[] { })", span="455-455"];
m2_382 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_type_converter_if_one_found()", file="DefaultBinderFixture.cs", label="var context = new NancyContext { Request = new FakeRequest(''GET'', ''/'') }", span="456-456"];
m2_384 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_type_converter_if_one_found()", file="DefaultBinderFixture.cs", label="binder.Bind(context, typeof(TestModel), null, BindingConfig.Default)", span="460-460"];
m2_383 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_type_converter_if_one_found()", file="DefaultBinderFixture.cs", label="context.Request.Form[''StringProperty''] = ''Test''", span="457-457"];
m2_386 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_type_converter_if_one_found()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_type_converter_if_one_found()", span="448-448"];
m2_505 [cluster="Nancy.ModelBinding.DefaultConverters.CollectionConverter.CollectionConverter()", file="DefaultBinderFixture.cs", label="Entry Nancy.ModelBinding.DefaultConverters.CollectionConverter.CollectionConverter()", span="10-10"];
m2_666 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_from_form_and_request_simultaneously()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_from_form_and_request_simultaneously()", span="842-842"];
m2_667 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_from_form_and_request_simultaneously()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder()", span="845-845"];
m2_668 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_from_form_and_request_simultaneously()", file="DefaultBinderFixture.cs", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="847-847"];
m2_671 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_from_form_and_request_simultaneously()", file="DefaultBinderFixture.cs", label="var result = (TestModel)binder.Bind(context, typeof(TestModel), null, BindingConfig.Default)", span="852-852"];
m2_669 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_from_form_and_request_simultaneously()", file="DefaultBinderFixture.cs", label="context.Request.Form[''StringProperty''] = ''Test''", span="848-848"];
m2_670 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_from_form_and_request_simultaneously()", file="DefaultBinderFixture.cs", label="context.Request.Query[''IntProperty''] = ''12''", span="849-849"];
m2_672 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_from_form_and_request_simultaneously()", file="DefaultBinderFixture.cs", label="result.StringProperty.ShouldEqual(''Test'')", span="855-855"];
m2_673 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_from_form_and_request_simultaneously()", file="DefaultBinderFixture.cs", label="result.IntProperty.ShouldEqual(12)", span="856-856"];
m2_674 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_from_form_and_request_simultaneously()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_from_form_and_request_simultaneously()", span="842-842"];
m2_10 [cluster="Nancy.ModelBinding.BindingContext.BindingContext()", file="DefaultBinderFixture.cs", label="Entry Nancy.ModelBinding.BindingContext.BindingContext()", span="9-9"];
m2_820 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_take_precedence_over_body_properties()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_take_precedence_over_body_properties()", span="1152-1152"];
m2_821 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_take_precedence_over_body_properties()", file="DefaultBinderFixture.cs", label="var typeConverters = new ITypeConverter[] { new CollectionConverter(), new FallbackConverter() }", span="1155-1155"];
m2_822 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_take_precedence_over_body_properties()", file="DefaultBinderFixture.cs", label="var bodyDeserializers = new IBodyDeserializer[] { new XmlBodyDeserializer() }", span="1156-1156"];
m2_823 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_take_precedence_over_body_properties()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder(typeConverters, bodyDeserializers)", span="1157-1157"];
m2_824 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_take_precedence_over_body_properties()", file="DefaultBinderFixture.cs", label="var body = XmlBodyDeserializerFixture.ToXmlString(new TestModel { IntProperty = 0, StringProperty = ''From body'' })", span="1158-1158"];
m2_829 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_take_precedence_over_body_properties()", file="DefaultBinderFixture.cs", label="var result = (TestModel)binder.Bind(context, typeof(TestModel), null, BindingConfig.Default)", span="1167-1167"];
m2_825 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_take_precedence_over_body_properties()", file="DefaultBinderFixture.cs", label="var context = CreateContextWithHeaderAndBody(''Content-Type'', new[] { ''application/xml'' }, body)", span="1160-1160"];
m2_826 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_take_precedence_over_body_properties()", file="DefaultBinderFixture.cs", label="context.Request.Form[''StringProperty''] = ''From form''", span="1162-1162"];
m2_827 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_take_precedence_over_body_properties()", file="DefaultBinderFixture.cs", label="context.Request.Query[''IntProperty''] = ''1''", span="1163-1163"];
m2_828 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_take_precedence_over_body_properties()", file="DefaultBinderFixture.cs", label="context.Parameters[''AnotherStringProprety''] = ''From context''", span="1164-1164"];
m2_830 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_take_precedence_over_body_properties()", file="DefaultBinderFixture.cs", label="result.StringProperty.ShouldEqual(''From form'')", span="1170-1170"];
m2_831 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_take_precedence_over_body_properties()", file="DefaultBinderFixture.cs", label="result.AnotherStringProprety.ShouldEqual(''From context'')", span="1171-1171"];
m2_832 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_take_precedence_over_body_properties()", file="DefaultBinderFixture.cs", label="result.IntProperty.ShouldEqual(1)", span="1172-1172"];
m2_833 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_take_precedence_over_body_properties()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_take_precedence_over_body_properties()", span="1152-1152"];
m2_759 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_array_model_from_body()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_array_model_from_body()", span="1030-1030"];
m2_760 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_array_model_from_body()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder(null, new List<IBodyDeserializer> { new XmlBodyDeserializer() })", span="1033-1033"];
m2_761 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_array_model_from_body()", file="DefaultBinderFixture.cs", label="var body = XmlBodyDeserializerFixture.ToXmlString(new List<TestModel>(new[] { new TestModel { StringProperty = ''Test'' }, new TestModel { StringProperty = ''AnotherTest'' } }))", span="1034-1034"];
m2_763 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_array_model_from_body()", file="DefaultBinderFixture.cs", label="var result = (TestModel[])binder.Bind(context, typeof(TestModel[]), null, BindingConfig.Default)", span="1039-1039"];
m2_762 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_array_model_from_body()", file="DefaultBinderFixture.cs", label="var context = CreateContextWithHeaderAndBody(''Content-Type'', new[] { ''application/xml'' }, body)", span="1036-1036"];
m2_764 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_array_model_from_body()", file="DefaultBinderFixture.cs", label="result.First().StringProperty.ShouldEqual(''Test'')", span="1042-1042"];
m2_765 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_array_model_from_body()", file="DefaultBinderFixture.cs", label="result.Last().StringProperty.ShouldEqual(''AnotherTest'')", span="1043-1043"];
m2_766 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_array_model_from_body()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_array_model_from_body()", span="1030-1030"];
m2_462 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_request()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_request()", span="518-518"];
m2_463 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_request()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder()", span="521-521"];
m2_464 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_request()", file="DefaultBinderFixture.cs", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="522-522"];
m2_467 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_request()", file="DefaultBinderFixture.cs", label="var result = (TestModel)binder.Bind(context, typeof(TestModel), null, BindingConfig.Default)", span="527-527"];
m2_465 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_request()", file="DefaultBinderFixture.cs", label="context.Request.Query[''StringProperty''] = ''Test''", span="523-523"];
m2_466 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_request()", file="DefaultBinderFixture.cs", label="context.Request.Query[''IntProperty''] = ''3''", span="524-524"];
m2_468 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_request()", file="DefaultBinderFixture.cs", label="result.StringProperty.ShouldEqual(''Test'')", span="530-530"];
m2_469 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_request()", file="DefaultBinderFixture.cs", label="result.IntProperty.ShouldEqual(3)", span="531-531"];
m2_470 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_request()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_request()", span="518-518"];
m2_57 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_defaults_is_null()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_defaults_is_null()", span="74-74"];
m2_58 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_defaults_is_null()", file="DefaultBinderFixture.cs", label="var result = Record.Exception(() => new DefaultBinder(new ITypeConverter[] { }, new IBodyDeserializer[] { }, A.Fake<IFieldNameConverter>(), null))", span="77-77"];
m2_59 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_defaults_is_null()", file="DefaultBinderFixture.cs", label="result.ShouldBeOfType(typeof(ArgumentNullException))", span="80-80"];
m2_60 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_defaults_is_null()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_defaults_is_null()", span="74-74"];
m2_755 [cluster="Nancy.ModelBinding.DefaultBodyDeserializers.XmlBodyDeserializer.XmlBodyDeserializer()", file="DefaultBinderFixture.cs", label="Entry Nancy.ModelBinding.DefaultBodyDeserializers.XmlBodyDeserializer.XmlBodyDeserializer()", span="9-9"];
m2_802 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_body_that_contains_an_array()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_body_that_contains_an_array()", span="1110-1110"];
m2_803 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_body_that_contains_an_array()", file="DefaultBinderFixture.cs", label="var typeConverters = new ITypeConverter[] { new CollectionConverter(), new FallbackConverter() }", span="1113-1113"];
m2_804 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_body_that_contains_an_array()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder(typeConverters, new List<IBodyDeserializer> { new JsonBodyDeserializer() })", span="1114-1114"];
m2_805 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_body_that_contains_an_array()", file="DefaultBinderFixture.cs", label="var body = serializer.Serialize(new TestModel {StringProperty = ''Test'', SomeStrings = new[] {''E'', ''A'', ''D'', ''G'', ''B'', ''E''}})", span="1115-1115"];
m2_807 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_body_that_contains_an_array()", file="DefaultBinderFixture.cs", label="var result = (TestModel)binder.Bind(context, typeof(TestModel), null, BindingConfig.Default)", span="1120-1120"];
m2_806 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_body_that_contains_an_array()", file="DefaultBinderFixture.cs", label="var context = CreateContextWithHeaderAndBody(''Content-Type'', new[] { ''application/json'' }, body)", span="1117-1117"];
m2_808 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_body_that_contains_an_array()", file="DefaultBinderFixture.cs", label="result.SomeStrings.ShouldHaveCount(6)", span="1123-1123"];
m2_809 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_body_that_contains_an_array()", file="DefaultBinderFixture.cs", label="result.SomeStrings.ShouldEqualSequence(new[] { ''E'', ''A'', ''D'', ''G'', ''B'', ''E'' })", span="1124-1124"];
m2_810 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_body_that_contains_an_array()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_body_that_contains_an_array()", span="1110-1110"];
m2_36 [cluster="Unk.ShouldBeOfType", file="DefaultBinderFixture.cs", label="Entry Unk.ShouldBeOfType", span=""];
m2_811 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_array_model_from_body_that_contains_an_array()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_array_model_from_body_that_contains_an_array()", span="1129-1129"];
m2_812 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_array_model_from_body_that_contains_an_array()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder(null, new List<IBodyDeserializer> { new JsonBodyDeserializer() })", span="1132-1132"];
m2_813 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_array_model_from_body_that_contains_an_array()", file="DefaultBinderFixture.cs", label="var body =\r\n                serializer.Serialize(new[]\r\n                {\r\n                    new TestModel {StringProperty = ''Test'', SomeStrings = new[] {''E'', ''A'', ''D'', ''G'', ''B'', ''E''}},\r\n                    new TestModel {StringProperty = ''AnotherTest'', SomeStrings = new[] {''E'', ''A'', ''D'', ''G'', ''B'', ''E''}}\r\n                })", span="1133-1138"];
m2_815 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_array_model_from_body_that_contains_an_array()", file="DefaultBinderFixture.cs", label="var result = (TestModel[])binder.Bind(context, typeof(TestModel[]), null, BindingConfig.Default, ''SomeStrings'')", span="1143-1143"];
m2_814 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_array_model_from_body_that_contains_an_array()", file="DefaultBinderFixture.cs", label="var context = CreateContextWithHeaderAndBody(''Content-Type'', new[] { ''application/json'' }, body)", span="1140-1140"];
m2_816 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_array_model_from_body_that_contains_an_array()", file="DefaultBinderFixture.cs", label="result.First().SomeStrings.ShouldBeNull()", span="1146-1146"];
m2_817 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_array_model_from_body_that_contains_an_array()", file="DefaultBinderFixture.cs", label="result.Last().SomeStrings.ShouldBeNull()", span="1147-1147"];
m2_818 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_array_model_from_body_that_contains_an_array()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_array_model_from_body_that_contains_an_array()", span="1129-1129"];
m2_902 [cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="DefaultBinderFixture.cs", label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0"];
m2_49 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_field_name_converter_is_null()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_field_name_converter_is_null()", span="64-64"];
m2_50 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_field_name_converter_is_null()", file="DefaultBinderFixture.cs", label="var result = Record.Exception(() => new DefaultBinder(new ITypeConverter[] { }, new IBodyDeserializer[] { }, null, new BindingDefaults()))", span="67-67"];
m2_51 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_field_name_converter_is_null()", file="DefaultBinderFixture.cs", label="result.ShouldBeOfType(typeof(ArgumentNullException))", span="70-70"];
m2_52 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_field_name_converter_is_null()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_field_name_converter_is_null()", span="64-64"];
m2_895 [cluster="Nancy.Tests.Fakes.FakeRequest.FakeRequest(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Fakes.FakeRequest.FakeRequest(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", span="13-13"];
m2_777 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_ienumerable_model_with_instance_from_body()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_ienumerable_model_with_instance_from_body()", span="1065-1065"];
m2_778 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_ienumerable_model_with_instance_from_body()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder(null, new List<IBodyDeserializer> { new JsonBodyDeserializer() })", span="1068-1068"];
m2_779 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_ienumerable_model_with_instance_from_body()", file="DefaultBinderFixture.cs", label="var body = serializer.Serialize(new List<TestModel>(new[] { new TestModel { StringProperty = ''Test'' }, new TestModel { StringProperty = ''AnotherTest'' } }))", span="1069-1069"];
m2_783 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_ienumerable_model_with_instance_from_body()", file="DefaultBinderFixture.cs", label="var result = (IEnumerable<TestModel>)binder.Bind(context, typeof(IEnumerable<TestModel>), instance, new BindingConfig{Overwrite = false})", span="1077-1077"];
m2_780 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_ienumerable_model_with_instance_from_body()", file="DefaultBinderFixture.cs", label="var context = CreateContextWithHeaderAndBody(''Content-Type'', new[] { ''application/json'' }, body)", span="1071-1071"];
m2_781 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_ienumerable_model_with_instance_from_body()", file="DefaultBinderFixture.cs", label="var then = DateTime.Now", span="1073-1073"];
m2_782 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_ienumerable_model_with_instance_from_body()", file="DefaultBinderFixture.cs", label="var instance = new List<TestModel> { new TestModel{ DateProperty = then }, new TestModel { IntProperty = 9, AnotherStringProprety = ''Bananas'' } }", span="1074-1074"];
m2_785 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_ienumerable_model_with_instance_from_body()", file="DefaultBinderFixture.cs", label="result.First().DateProperty.ShouldEqual(then)", span="1081-1081"];
m2_784 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_ienumerable_model_with_instance_from_body()", file="DefaultBinderFixture.cs", label="result.First().StringProperty.ShouldEqual(''Test'')", span="1080-1080"];
m2_786 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_ienumerable_model_with_instance_from_body()", file="DefaultBinderFixture.cs", label="result.Last().StringProperty.ShouldEqual(''AnotherTest'')", span="1082-1082"];
m2_787 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_ienumerable_model_with_instance_from_body()", file="DefaultBinderFixture.cs", label="result.Last().IntProperty.ShouldEqual(9)", span="1083-1083"];
m2_788 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_ienumerable_model_with_instance_from_body()", file="DefaultBinderFixture.cs", label="result.Last().AnotherStringProprety.ShouldEqual(''Bananas'')", span="1084-1084"];
m2_789 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_ienumerable_model_with_instance_from_body()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_ienumerable_model_with_instance_from_body()", span="1065-1065"];
m2_40 [cluster="DefaultBinder.cstr", file="DefaultBinderFixture.cs", label="Entry DefaultBinder.cstr", span=""];
m2_358 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_body_deserializer_if_one_found()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_body_deserializer_if_one_found()", span="429-429"];
m2_359 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_body_deserializer_if_one_found()", file="DefaultBinderFixture.cs", label="var deserializer = A.Fake<IBodyDeserializer>()", span="432-432"];
m2_360 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_body_deserializer_if_one_found()", file="DefaultBinderFixture.cs", label="A.CallTo(() => deserializer.CanDeserialize(null, A<BindingContext>._)).WithAnyArguments().Returns(true)", span="433-433"];
m2_361 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_body_deserializer_if_one_found()", file="DefaultBinderFixture.cs", label="A.CallTo(() => this.emptyDefaults.DefaultBodyDeserializers).Returns(new[] { deserializer })", span="434-434"];
m2_365 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_body_deserializer_if_one_found()", file="DefaultBinderFixture.cs", label="A.CallTo(() => deserializer.Deserialize(null, null, null)).WithAnyArguments()\r\n                .MustHaveHappened(Repeated.Exactly.Once)", span="443-444"];
m2_362 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_body_deserializer_if_one_found()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder()", span="435-435"];
m2_363 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_body_deserializer_if_one_found()", file="DefaultBinderFixture.cs", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="437-437"];
m2_364 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_body_deserializer_if_one_found()", file="DefaultBinderFixture.cs", label="binder.Bind(context, this.GetType(), null, BindingConfig.Default)", span="440-440"];
m2_366 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_body_deserializer_if_one_found()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_default_body_deserializer_if_one_found()", span="429-429"];
m2_158 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned_and_not_overwrite_when_not_allowed()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned_and_not_overwrite_when_not_allowed()", span="194-194"];
m2_159 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned_and_not_overwrite_when_not_allowed()", file="DefaultBinderFixture.cs", label="var modelObject = new TestModel { StringPropertyWithDefaultValue = ''Hello!'' }", span="197-197"];
m2_160 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned_and_not_overwrite_when_not_allowed()", file="DefaultBinderFixture.cs", label="var deserializer = A.Fake<IBodyDeserializer>()", span="198-198"];
m2_162 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned_and_not_overwrite_when_not_allowed()", file="DefaultBinderFixture.cs", label="A.CallTo(() => deserializer.Deserialize(null, null, null)).WithAnyArguments().Returns(modelObject)", span="200-200"];
m2_161 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned_and_not_overwrite_when_not_allowed()", file="DefaultBinderFixture.cs", label="A.CallTo(() => deserializer.CanDeserialize(null, A<BindingContext>._)).WithAnyArguments().Returns(true)", span="199-199"];
m2_163 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned_and_not_overwrite_when_not_allowed()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder(bodyDeserializers: new[] { deserializer })", span="201-201"];
m2_164 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned_and_not_overwrite_when_not_allowed()", file="DefaultBinderFixture.cs", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="203-203"];
m2_165 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned_and_not_overwrite_when_not_allowed()", file="DefaultBinderFixture.cs", label="var result = binder.Bind(context, typeof(TestModel), null, BindingConfig.NoOverwrite)", span="206-206"];
m2_166 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned_and_not_overwrite_when_not_allowed()", file="DefaultBinderFixture.cs", label="result.ShouldBeOfType<TestModel>()", span="209-209"];
m2_167 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned_and_not_overwrite_when_not_allowed()", file="DefaultBinderFixture.cs", label="((TestModel)result).StringPropertyWithDefaultValue.ShouldEqual(''Default Value'')", span="210-210"];
m2_168 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned_and_not_overwrite_when_not_allowed()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned_and_not_overwrite_when_not_allowed()", span="194-194"];
m2_331 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist_when_the_blacklist_is_specified_by_expressions()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist_when_the_blacklist_is_specified_by_expressions()", span="406-406"];
m2_332 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist_when_the_blacklist_is_specified_by_expressions()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder(typeConverters: new[] { new FallbackConverter() })", span="409-409"];
m2_333 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist_when_the_blacklist_is_specified_by_expressions()", file="DefaultBinderFixture.cs", label="var context = new NancyContext { Request = new FakeRequest(''GET'', ''/'') }", span="410-410"];
m2_340 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist_when_the_blacklist_is_specified_by_expressions()", file="DefaultBinderFixture.cs", label="A.CallTo(() => fakeModelBinderLocator.GetBinderForType(typeof (TestModel), context)).Returns(binder)", span="418-418"];
m2_334 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist_when_the_blacklist_is_specified_by_expressions()", file="DefaultBinderFixture.cs", label="context.Request.Form[''StringProperty''] = ''Test''", span="411-411"];
m2_335 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist_when_the_blacklist_is_specified_by_expressions()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty''] = ''12''", span="412-412"];
m2_338 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist_when_the_blacklist_is_specified_by_expressions()", file="DefaultBinderFixture.cs", label="A.CallTo(() => fakeModule.Context).Returns(context)", span="416-416"];
m2_336 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist_when_the_blacklist_is_specified_by_expressions()", file="DefaultBinderFixture.cs", label="var fakeModule = A.Fake<INancyModule>()", span="414-414"];
m2_337 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist_when_the_blacklist_is_specified_by_expressions()", file="DefaultBinderFixture.cs", label="var fakeModelBinderLocator = A.Fake<IModelBinderLocator>()", span="415-415"];
m2_339 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist_when_the_blacklist_is_specified_by_expressions()", file="DefaultBinderFixture.cs", label="A.CallTo(() => fakeModule.ModelBinderLocator).Returns(fakeModelBinderLocator)", span="417-417"];
m2_341 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist_when_the_blacklist_is_specified_by_expressions()", file="DefaultBinderFixture.cs", label="var result = fakeModule.Bind<TestModel>(tm => tm.IntProperty)", span="421-421"];
m2_342 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist_when_the_blacklist_is_specified_by_expressions()", file="DefaultBinderFixture.cs", label="result.StringProperty.ShouldEqual(''Test'')", span="424-424"];
m2_343 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist_when_the_blacklist_is_specified_by_expressions()", file="DefaultBinderFixture.cs", label="result.IntProperty.ShouldEqual(0)", span="425-425"];
m2_344 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist_when_the_blacklist_is_specified_by_expressions()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist_when_the_blacklist_is_specified_by_expressions()", span="406-406"];
m2_93 [cluster="Unk.MustNotHaveHappened", file="DefaultBinderFixture.cs", label="Entry Unk.MustNotHaveHappened", span=""];
m2_211 [cluster="Unk.Convert", file="DefaultBinderFixture.cs", label="Entry Unk.Convert", span=""];
m2_120 [cluster="Unk.IsNull", file="DefaultBinderFixture.cs", label="Entry Unk.IsNull", span=""];
m2_747 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_list_model_from_body()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_list_model_from_body()", span="1012-1012"];
m2_748 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_list_model_from_body()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder(null, new List<IBodyDeserializer> { new XmlBodyDeserializer() })", span="1015-1015"];
m2_749 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_list_model_from_body()", file="DefaultBinderFixture.cs", label="var body = XmlBodyDeserializerFixture.ToXmlString(new List<TestModel>(new[] { new TestModel { StringProperty = ''Test'' }, new TestModel { StringProperty = ''AnotherTest'' } }))", span="1016-1016"];
m2_751 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_list_model_from_body()", file="DefaultBinderFixture.cs", label="var result = (List<TestModel>)binder.Bind(context, typeof(List<TestModel>), null, BindingConfig.Default)", span="1021-1021"];
m2_750 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_list_model_from_body()", file="DefaultBinderFixture.cs", label="var context = CreateContextWithHeaderAndBody(''Content-Type'', new[] { ''application/xml'' }, body)", span="1018-1018"];
m2_752 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_list_model_from_body()", file="DefaultBinderFixture.cs", label="result.First().StringProperty.ShouldEqual(''Test'')", span="1024-1024"];
m2_753 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_list_model_from_body()", file="DefaultBinderFixture.cs", label="result.Last().StringProperty.ShouldEqual(''AnotherTest'')", span="1025-1025"];
m2_754 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_list_model_from_body()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_list_model_from_body()", span="1012-1012"];
m2_507 [cluster="System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", file="DefaultBinderFixture.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", span="0-0"];
m2_75 [cluster="Nancy.ModelBinding.IBinder.Bind(Nancy.NancyContext, System.Type, object, Nancy.ModelBinding.BindingConfig, params string[])", file="DefaultBinderFixture.cs", label="Entry Nancy.ModelBinding.IBinder.Bind(Nancy.NancyContext, System.Type, object, Nancy.ModelBinding.BindingConfig, params string[])", span="18-18"];
m2_874 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_existing_instance_if_type_doesnt_match()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_existing_instance_if_type_doesnt_match()", span="1245-1245"];
m2_875 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_existing_instance_if_type_doesnt_match()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder()", span="1248-1248"];
m2_876 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_existing_instance_if_type_doesnt_match()", file="DefaultBinderFixture.cs", label="var existing = new object()", span="1249-1249"];
m2_878 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_existing_instance_if_type_doesnt_match()", file="DefaultBinderFixture.cs", label="var result = (TestModel)binder.Bind(context, typeof(TestModel), existing, BindingConfig.Default)", span="1253-1253"];
m2_877 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_existing_instance_if_type_doesnt_match()", file="DefaultBinderFixture.cs", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="1250-1250"];
m2_879 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_existing_instance_if_type_doesnt_match()", file="DefaultBinderFixture.cs", label="result.ShouldNotBeSameAs(existing)", span="1256-1256"];
m2_880 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_existing_instance_if_type_doesnt_match()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_existing_instance_if_type_doesnt_match()", span="1245-1245"];
m2_258 [cluster="Nancy.ModelBinding.BindingConfig.BindingConfig()", file="DefaultBinderFixture.cs", label="Entry Nancy.ModelBinding.BindingConfig.BindingConfig()", span="10-10"];
m2_175 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_see_if_a_type_converter_is_available_for_each_property_on_the_model_where_incoming_value_exists()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_see_if_a_type_converter_is_available_for_each_property_on_the_model_where_incoming_value_exists()", span="214-214"];
m2_176 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_see_if_a_type_converter_is_available_for_each_property_on_the_model_where_incoming_value_exists()", file="DefaultBinderFixture.cs", label="var typeConverter = A.Fake<ITypeConverter>()", span="217-217"];
m2_177 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_see_if_a_type_converter_is_available_for_each_property_on_the_model_where_incoming_value_exists()", file="DefaultBinderFixture.cs", label="A.CallTo(() => typeConverter.CanConvertTo(null, null)).WithAnyArguments().Returns(false)", span="218-218"];
m2_178 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_see_if_a_type_converter_is_available_for_each_property_on_the_model_where_incoming_value_exists()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder(typeConverters: new[] { typeConverter })", span="219-219"];
m2_183 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_see_if_a_type_converter_is_available_for_each_property_on_the_model_where_incoming_value_exists()", file="DefaultBinderFixture.cs", label="A.CallTo(() => typeConverter.CanConvertTo(null, null)).WithAnyArguments()\r\n                .MustHaveHappened(Repeated.Exactly.Times(2))", span="228-229"];
m2_179 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_see_if_a_type_converter_is_available_for_each_property_on_the_model_where_incoming_value_exists()", file="DefaultBinderFixture.cs", label="var context = new NancyContext { Request = new FakeRequest(''GET'', ''/'') }", span="220-220"];
m2_182 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_see_if_a_type_converter_is_available_for_each_property_on_the_model_where_incoming_value_exists()", file="DefaultBinderFixture.cs", label="binder.Bind(context, typeof(TestModel), null, BindingConfig.Default)", span="225-225"];
m2_180 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_see_if_a_type_converter_is_available_for_each_property_on_the_model_where_incoming_value_exists()", file="DefaultBinderFixture.cs", label="context.Request.Form[''StringProperty''] = ''Test''", span="221-221"];
m2_181 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_see_if_a_type_converter_is_available_for_each_property_on_the_model_where_incoming_value_exists()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty''] = ''12''", span="222-222"];
m2_184 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_see_if_a_type_converter_is_available_for_each_property_on_the_model_where_incoming_value_exists()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_see_if_a_type_converter_is_available_for_each_property_on_the_model_where_incoming_value_exists()", span="214-214"];
m2_694 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_from_request_and_context_simultaneously()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_from_request_and_context_simultaneously()", span="910-910"];
m2_695 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_from_request_and_context_simultaneously()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder()", span="913-913"];
m2_696 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_from_request_and_context_simultaneously()", file="DefaultBinderFixture.cs", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="915-915"];
m2_699 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_from_request_and_context_simultaneously()", file="DefaultBinderFixture.cs", label="var result = (TestModel)binder.Bind(context, typeof(TestModel), null, BindingConfig.Default)", span="920-920"];
m2_697 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_from_request_and_context_simultaneously()", file="DefaultBinderFixture.cs", label="context.Request.Query[''StringProperty''] = ''Test''", span="916-916"];
m2_698 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_from_request_and_context_simultaneously()", file="DefaultBinderFixture.cs", label="context.Parameters[''IntProperty''] = ''12''", span="917-917"];
m2_700 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_from_request_and_context_simultaneously()", file="DefaultBinderFixture.cs", label="result.StringProperty.ShouldEqual(''Test'')", span="923-923"];
m2_701 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_from_request_and_context_simultaneously()", file="DefaultBinderFixture.cs", label="result.IntProperty.ShouldEqual(12)", span="924-924"];
m2_702 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_from_request_and_context_simultaneously()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_from_request_and_context_simultaneously()", span="910-910"];
m2_506 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="DefaultBinderFixture.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m2_459 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="513-513"];
m2_18 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="32-32"];
m2_22 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="33-33"];
m2_25 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="36-36"];
m2_28 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="37-37"];
m2_19 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="this.passthroughNameConverter.Convert(null)", span="32-32"];
m2_20 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="32-32"];
m2_23 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="(string)f.Arguments[0]", span="33-33"];
m2_24 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="33-33"];
m2_26 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="this.emptyDefaults.DefaultBodyDeserializers", span="36-36"];
m2_27 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="36-36"];
m2_29 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="this.emptyDefaults.DefaultTypeConverters", span="37-37"];
m2_30 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="37-37"];
m2_37 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="47-47"];
m2_38 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="new DefaultBinder(null, new IBodyDeserializer[] { }, A.Fake<IFieldNameConverter>(), new BindingDefaults())", span="47-47"];
m2_39 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="47-47"];
m2_46 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="57-57"];
m2_47 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="new DefaultBinder(new ITypeConverter[] { }, null, A.Fake<IFieldNameConverter>(), new BindingDefaults())", span="57-57"];
m2_48 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="57-57"];
m2_53 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="67-67"];
m2_54 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="new DefaultBinder(new ITypeConverter[] { }, new IBodyDeserializer[] { }, null, new BindingDefaults())", span="67-67"];
m2_55 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="67-67"];
m2_61 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="77-77"];
m2_62 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="new DefaultBinder(new ITypeConverter[] { }, new IBodyDeserializer[] { }, A.Fake<IFieldNameConverter>(), null)", span="77-77"];
m2_63 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="77-77"];
m2_78 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="deserializer.CanDeserialize(null, A<BindingContext>._)", span="88-88"];
m2_82 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="deserializer.Deserialize(null, null, null)", span="97-97"];
m2_77 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="88-88"];
m2_81 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="97-97"];
m2_79 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="88-88"];
m2_83 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="97-97"];
m2_95 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="deserializer.CanDeserialize(null, A<BindingContext>._)", span="106-106"];
m2_98 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="deserializer.Deserialize(null, null, null)", span="115-115"];
m2_94 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="106-106"];
m2_97 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="115-115"];
m2_96 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="106-106"];
m2_99 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="115-115"];
m2_108 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="deserializer.CanDeserialize(''application/xml'', A<BindingContext>._)", span="132-132"];
m2_107 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="132-132"];
m2_109 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="132-132"];
m2_118 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="deserializer.CanDeserialize(''application/xml'', A<BindingContext>.That.Not.IsNull())", span="149-149"];
m2_117 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="149-149"];
m2_119 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="149-149"];
m2_136 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="deserializer.CanDeserialize(null, A<BindingContext>._)", span="159-159"];
m2_139 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="deserializer.Deserialize(null, null, null)", span="160-160"];
m2_135 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="159-159"];
m2_138 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="160-160"];
m2_137 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="159-159"];
m2_140 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="160-160"];
m2_153 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="deserializer.CanDeserialize(null, A<BindingContext>._)", span="179-179"];
m2_156 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="deserializer.Deserialize(null, null, null)", span="180-180"];
m2_152 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="179-179"];
m2_155 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="180-180"];
m2_154 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="179-179"];
m2_157 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="180-180"];
m2_170 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="deserializer.CanDeserialize(null, A<BindingContext>._)", span="199-199"];
m2_173 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="deserializer.Deserialize(null, null, null)", span="200-200"];
m2_169 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="199-199"];
m2_172 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="200-200"];
m2_171 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="199-199"];
m2_174 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="200-200"];
m2_189 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="typeConverter.CanConvertTo(null, null)", span="218-218"];
m2_193 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="typeConverter.CanConvertTo(null, null)", span="228-228"];
m2_188 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="218-218"];
m2_192 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="228-228"];
m2_190 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="218-218"];
m2_194 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="228-228"];
m2_206 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="typeConverter.CanConvertTo(typeof(string), null)", span="237-237"];
m2_209 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="typeConverter.Convert(null, null, null)", span="238-238"];
m2_213 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="typeConverter.Convert(null, null, null)", span="247-247"];
m2_205 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="237-237"];
m2_208 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="238-238"];
m2_212 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="247-247"];
m2_207 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="237-237"];
m2_210 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="238-238"];
m2_214 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="247-247"];
m2_238 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="binder.Bind(context, typeof(TestModel), null, BindingConfig.Default)", span="280-280"];
m2_237 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="280-280"];
m2_240 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="281-290"];
m2_239 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="280-280"];
m2_241 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="exception.BoundType == typeof(TestModel)\r\n                             && exception.PropertyBindingExceptions.Any(pe =>\r\n                                                                        pe.PropertyName == ''IntProperty''\r\n                                                                        && pe.AttemptedValue == ''badint''\r\n                                                                        && pe.InnerException.Message == ''badint is not a valid value for Int32.'')\r\n                             && exception.PropertyBindingExceptions.Any(pe =>\r\n                                                                        pe.PropertyName == ''AnotherIntProperty''\r\n                                                                        && pe.AttemptedValue == ''morebad''\r\n                                                                        && pe.InnerException.Message == ''morebad is not a valid value for Int32.'')", span="282-290"];
m2_242 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="281-290"];
m2_244 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="283-286"];
m2_247 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="287-290"];
m2_245 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="pe.PropertyName == ''IntProperty''\r\n                                                                        && pe.AttemptedValue == ''badint''\r\n                                                                        && pe.InnerException.Message == ''badint is not a valid value for Int32.''", span="284-286"];
m2_246 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="283-286"];
m2_248 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="pe.PropertyName == ''AnotherIntProperty''\r\n                                                                        && pe.AttemptedValue == ''morebad''\r\n                                                                        && pe.InnerException.Message == ''morebad is not a valid value for Int32.''", span="288-290"];
m2_249 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="287-290"];
m2_261 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="binder.Bind(context, typeof(TestModel), null, config)", span="306-306"];
m2_260 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="306-306"];
m2_262 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="306-306"];
m2_285 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="deserializer.CanDeserialize(A<string>.Ignored, A<BindingContext>._)", span="336-336"];
m2_288 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="deserializer.Deserialize(A<string>.Ignored, A<Stream>.Ignored, A<BindingContext>.Ignored)", span="337-337"];
m2_284 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="336-336"];
m2_287 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="337-337"];
m2_290 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="338-341"];
m2_294 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="344-344"];
m2_286 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="336-336"];
m2_289 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="337-337"];
m2_291 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="validProperties = f.Arguments.Get<BindingContext>(2).ValidModelProperties.Count()", span="340-340"];
m2_292 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="338-341"];
m2_295 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="this.emptyDefaults.DefaultBodyDeserializers", span="344-344"];
m2_296 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="344-344"];
m2_309 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="deserializer.CanDeserialize(''application/xml'', A<BindingContext>.That.Not.IsNull())", span="367-367"];
m2_305 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="361-361"];
m2_308 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="367-367"];
m2_306 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="this.emptyDefaults.DefaultBodyDeserializers", span="361-361"];
m2_307 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="361-361"];
m2_310 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="367-367"];
m2_319 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="384-384"];
m2_320 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="this.passthroughNameConverter.Convert(null)", span="384-384"];
m2_321 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="384-384"];
m2_352 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="fakeModelBinderLocator.GetBinderForType(typeof (TestModel), context)", span="418-418"];
m2_346 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="fakeModule.Context", span="416-416"];
m2_349 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="fakeModule.ModelBinderLocator", span="417-417"];
m2_345 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="416-416"];
m2_348 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="417-417"];
m2_351 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="418-418"];
m2_355 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="421-421"];
m2_347 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="416-416"];
m2_350 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="417-417"];
m2_353 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="418-418"];
m2_356 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="tm.IntProperty", span="421-421"];
m2_357 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="421-421"];
m2_368 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="deserializer.CanDeserialize(null, A<BindingContext>._)", span="433-433"];
m2_374 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="deserializer.Deserialize(null, null, null)", span="443-443"];
m2_367 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="433-433"];
m2_370 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="434-434"];
m2_373 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="443-443"];
m2_369 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="433-433"];
m2_371 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="this.emptyDefaults.DefaultBodyDeserializers", span="434-434"];
m2_372 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="434-434"];
m2_375 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="443-443"];
m2_388 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="typeConverter.CanConvertTo(typeof(string), null)", span="452-452"];
m2_391 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="typeConverter.Convert(null, null, null)", span="453-453"];
m2_397 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="typeConverter.Convert(null, null, null)", span="463-463"];
m2_387 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="452-452"];
m2_390 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="453-453"];
m2_393 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="454-454"];
m2_396 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="463-463"];
m2_389 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="452-452"];
m2_392 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="453-453"];
m2_394 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="this.emptyDefaults.DefaultTypeConverters", span="454-454"];
m2_395 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="454-454"];
m2_398 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="463-463"];
m2_412 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="userDeserializer.CanDeserialize(null, A<BindingContext>._)", span="472-472"];
m2_421 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="userDeserializer.Deserialize(null, null, null)", span="486-486"];
m2_411 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="472-472"];
m2_415 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="defaultDeserializer.CanDeserialize(null, A<BindingContext>._)", span="475-475"];
m2_424 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="defaultDeserializer.Deserialize(null, null, null)", span="488-488"];
m2_414 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="475-475"];
m2_417 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="477-477"];
m2_420 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="486-486"];
m2_423 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="488-488"];
m2_413 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="472-472"];
m2_416 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="475-475"];
m2_418 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="this.emptyDefaults.DefaultBodyDeserializers", span="477-477"];
m2_419 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="477-477"];
m2_422 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="486-486"];
m2_425 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="488-488"];
m2_442 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="userTypeConverter.CanConvertTo(typeof(string), null)", span="497-497"];
m2_445 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="userTypeConverter.Convert(null, null, null)", span="498-498"];
m2_457 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="userTypeConverter.Convert(null, null, null)", span="511-511"];
m2_441 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="497-497"];
m2_444 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="498-498"];
m2_448 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="defaultTypeConverter.CanConvertTo(typeof(string), null)", span="500-500"];
m2_451 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="defaultTypeConverter.Convert(null, null, null)", span="501-501"];
m2_460 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="defaultTypeConverter.Convert(null, null, null)", span="513-513"];
m2_447 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="500-500"];
m2_450 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="501-501"];
m2_453 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="502-502"];
m2_456 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Entry lambda expression", span="511-511"];
m2_443 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="497-497"];
m2_446 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="498-498"];
m2_449 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="500-500"];
m2_452 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="501-501"];
m2_454 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="this.emptyDefaults.DefaultTypeConverters", span="502-502"];
m2_455 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="502-502"];
m2_458 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="511-511"];
m2_461 [cluster="lambda expression", file="DefaultBinderFixture.cs", label="Exit lambda expression", span="513-513"];
m2_594 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form()", span="715-715"];
m2_595 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form()", file="DefaultBinderFixture.cs", label="var typeConverters = new ITypeConverter[] { new CollectionConverter(), new FallbackConverter() }", span="718-718"];
m2_596 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder(typeConverters)", span="719-719"];
m2_597 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form()", file="DefaultBinderFixture.cs", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/x-www-form-urlencoded'' })", span="721-721"];
m2_599 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form()", file="DefaultBinderFixture.cs", label="var result = (TestModel)binder.Bind(context, typeof(TestModel), null, BindingConfig.Default)", span="726-726"];
m2_598 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntValues''] = ''1,2,3,4''", span="723-723"];
m2_600 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form()", file="DefaultBinderFixture.cs", label="result.IntValues.ShouldHaveCount(4)", span="729-729"];
m2_601 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form()", span="715-715"];
m2_64 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_body_deserializer_if_one_matches()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_body_deserializer_if_one_matches()", span="84-84"];
m2_65 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_body_deserializer_if_one_matches()", file="DefaultBinderFixture.cs", label="var deserializer = A.Fake<IBodyDeserializer>()", span="87-87"];
m2_66 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_body_deserializer_if_one_matches()", file="DefaultBinderFixture.cs", label="A.CallTo(() => deserializer.CanDeserialize(null, A<BindingContext>._)).WithAnyArguments().Returns(true)", span="88-88"];
m2_67 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_body_deserializer_if_one_matches()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder(bodyDeserializers: new[] { deserializer })", span="89-89"];
m2_70 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_body_deserializer_if_one_matches()", file="DefaultBinderFixture.cs", label="A.CallTo(() => deserializer.Deserialize(null, null, null)).WithAnyArguments()\r\n                .MustHaveHappened(Repeated.Exactly.Once)", span="97-98"];
m2_68 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_body_deserializer_if_one_matches()", file="DefaultBinderFixture.cs", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="91-91"];
m2_69 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_body_deserializer_if_one_matches()", file="DefaultBinderFixture.cs", label="binder.Bind(context, this.GetType(), null, BindingConfig.Default)", span="94-94"];
m2_71 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_body_deserializer_if_one_matches()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_body_deserializer_if_one_matches()", span="84-84"];
m2_191 [cluster="Unk.CanConvertTo", file="DefaultBinderFixture.cs", label="Entry Unk.CanConvertTo", span=""];
m2_226 [cluster="Nancy.ModelBinding.DefaultConverters.FallbackConverter.FallbackConverter()", file="DefaultBinderFixture.cs", label="Entry Nancy.ModelBinding.DefaultConverters.FallbackConverter.FallbackConverter()", span="9-9"];
m2_16 [cluster="Nancy.Json.JavaScriptSerializer.JavaScriptSerializer()", file="DefaultBinderFixture.cs", label="Entry Nancy.Json.JavaScriptSerializer.JavaScriptSerializer()", span="64-64"];
m2_41 [cluster="Nancy.ModelBinding.BindingDefaults.BindingDefaults()", file="DefaultBinderFixture.cs", label="Entry Nancy.ModelBinding.BindingDefaults.BindingDefaults()", span="20-20"];
m2_56 [cluster="Nancy.ModelBinding.DefaultBinder.DefaultBinder(System.Collections.Generic.IEnumerable<Nancy.ModelBinding.ITypeConverter>, System.Collections.Generic.IEnumerable<Nancy.ModelBinding.IBodyDeserializer>, Nancy.ModelBinding.IFieldNameConverter, Nancy.ModelBinding.BindingDefaults)", file="DefaultBinderFixture.cs", label="Entry Nancy.ModelBinding.DefaultBinder.DefaultBinder(System.Collections.Generic.IEnumerable<Nancy.ModelBinding.ITypeConverter>, System.Collections.Generic.IEnumerable<Nancy.ModelBinding.IBodyDeserializer>, Nancy.ModelBinding.IFieldNameConverter, Nancy.ModelBinding.BindingDefaults)", span="31-31"];
m2_552 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_counting_from_1()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_counting_from_1()", span="655-655"];
m2_553 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_counting_from_1()", file="DefaultBinderFixture.cs", label="var typeConverters = new ITypeConverter[] { new CollectionConverter(), new FallbackConverter() }", span="658-658"];
m2_554 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_counting_from_1()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder(typeConverters)", span="659-659"];
m2_555 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_counting_from_1()", file="DefaultBinderFixture.cs", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/x-www-form-urlencoded'' })", span="661-661"];
m2_568 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_counting_from_1()", file="DefaultBinderFixture.cs", label="var result = (List<TestModel>)binder.Bind(context, typeof(List<TestModel>), null, BindingConfig.Default)", span="676-676"];
m2_556 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_counting_from_1()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty_01''] = ''1''", span="662-662"];
m2_557 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_counting_from_1()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty_02''] = ''2''", span="663-663"];
m2_558 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_counting_from_1()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty_03''] = ''3''", span="664-664"];
m2_559 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_counting_from_1()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty_04''] = ''4''", span="665-665"];
m2_560 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_counting_from_1()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty_05''] = ''5''", span="666-666"];
m2_561 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_counting_from_1()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty_06''] = ''6''", span="667-667"];
m2_562 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_counting_from_1()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty_07''] = ''7''", span="668-668"];
m2_563 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_counting_from_1()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty_08''] = ''8''", span="669-669"];
m2_564 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_counting_from_1()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty_09''] = ''9''", span="670-670"];
m2_565 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_counting_from_1()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty_10''] = ''10''", span="671-671"];
m2_566 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_counting_from_1()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty_11''] = ''11''", span="672-672"];
m2_567 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_counting_from_1()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty_12''] = ''12''", span="673-673"];
m2_569 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_counting_from_1()", file="DefaultBinderFixture.cs", label="result.First().IntProperty.ShouldEqual(1)", span="679-679"];
m2_570 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_counting_from_1()", file="DefaultBinderFixture.cs", label="result.Last().IntProperty.ShouldEqual(12)", span="680-680"];
m2_571 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_counting_from_1()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_counting_from_1()", span="655-655"];
m2_141 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned_and_overwrite_when_allowed()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned_and_overwrite_when_allowed()", span="174-174"];
m2_142 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned_and_overwrite_when_allowed()", file="DefaultBinderFixture.cs", label="var modelObject = new TestModel { StringPropertyWithDefaultValue = ''Hello!'' }", span="177-177"];
m2_143 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned_and_overwrite_when_allowed()", file="DefaultBinderFixture.cs", label="var deserializer = A.Fake<IBodyDeserializer>()", span="178-178"];
m2_145 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned_and_overwrite_when_allowed()", file="DefaultBinderFixture.cs", label="A.CallTo(() => deserializer.Deserialize(null, null, null)).WithAnyArguments().Returns(modelObject)", span="180-180"];
m2_144 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned_and_overwrite_when_allowed()", file="DefaultBinderFixture.cs", label="A.CallTo(() => deserializer.CanDeserialize(null, A<BindingContext>._)).WithAnyArguments().Returns(true)", span="179-179"];
m2_146 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned_and_overwrite_when_allowed()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder(bodyDeserializers: new[] { deserializer })", span="181-181"];
m2_147 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned_and_overwrite_when_allowed()", file="DefaultBinderFixture.cs", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="183-183"];
m2_148 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned_and_overwrite_when_allowed()", file="DefaultBinderFixture.cs", label="var result = binder.Bind(context, typeof(TestModel), null, BindingConfig.Default)", span="186-186"];
m2_149 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned_and_overwrite_when_allowed()", file="DefaultBinderFixture.cs", label="result.ShouldBeOfType<TestModel>()", span="189-189"];
m2_150 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned_and_overwrite_when_allowed()", file="DefaultBinderFixture.cs", label="((TestModel)result).StringPropertyWithDefaultValue.ShouldEqual(''Hello!'')", span="190-190"];
m2_151 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned_and_overwrite_when_allowed()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned_and_overwrite_when_allowed()", span="174-174"];
m2_15 [cluster="Unk.Returns", file="DefaultBinderFixture.cs", label="Entry Unk.Returns", span=""];
m2_228 [cluster="System.DateTime.ShouldEqual(System.DateTime)", file="DefaultBinderFixture.cs", label="Entry System.DateTime.ShouldEqual(System.DateTime)", span="100-100"];
m2_530 [cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="DefaultBinderFixture.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0"];
m2_121 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned()", span="154-154"];
m2_122 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned()", file="DefaultBinderFixture.cs", label="var modelObject = new TestModel { StringProperty = ''Hello!'' }", span="157-157"];
m2_123 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned()", file="DefaultBinderFixture.cs", label="var deserializer = A.Fake<IBodyDeserializer>()", span="158-158"];
m2_125 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned()", file="DefaultBinderFixture.cs", label="A.CallTo(() => deserializer.Deserialize(null, null, null)).WithAnyArguments().Returns(modelObject)", span="160-160"];
m2_124 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned()", file="DefaultBinderFixture.cs", label="A.CallTo(() => deserializer.CanDeserialize(null, A<BindingContext>._)).WithAnyArguments().Returns(true)", span="159-159"];
m2_126 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder(bodyDeserializers: new[] { deserializer })", span="161-161"];
m2_127 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned()", file="DefaultBinderFixture.cs", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="163-163"];
m2_128 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned()", file="DefaultBinderFixture.cs", label="var result = binder.Bind(context, typeof(TestModel), null, BindingConfig.Default)", span="166-166"];
m2_129 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned()", file="DefaultBinderFixture.cs", label="result.ShouldBeOfType<TestModel>()", span="169-169"];
m2_130 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned()", file="DefaultBinderFixture.cs", label="((TestModel)result).StringProperty.ShouldEqual(''Hello!'')", span="170-170"];
m2_131 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_use_object_from_deserializer_if_one_returned()", span="154-154"];
m2_229 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_ModelBindingException_if_convertion_of_a_property_fails()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_ModelBindingException_if_convertion_of_a_property_fails()", span="271-271"];
m2_230 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_ModelBindingException_if_convertion_of_a_property_fails()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder(typeConverters: new[] { new FallbackConverter() })", span="274-274"];
m2_231 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_ModelBindingException_if_convertion_of_a_property_fails()", file="DefaultBinderFixture.cs", label="var context = new NancyContext { Request = new FakeRequest(''GET'', ''/'') }", span="275-275"];
m2_234 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_ModelBindingException_if_convertion_of_a_property_fails()", file="DefaultBinderFixture.cs", label="Assert.Throws<ModelBindingException>(() => binder.Bind(context, typeof(TestModel), null, BindingConfig.Default))\r\n                .ShouldMatch(exception =>\r\n                             exception.BoundType == typeof(TestModel)\r\n                             && exception.PropertyBindingExceptions.Any(pe =>\r\n                                                                        pe.PropertyName == ''IntProperty''\r\n                                                                        && pe.AttemptedValue == ''badint''\r\n                                                                        && pe.InnerException.Message == ''badint is not a valid value for Int32.'')\r\n                             && exception.PropertyBindingExceptions.Any(pe =>\r\n                                                                        pe.PropertyName == ''AnotherIntProperty''\r\n                                                                        && pe.AttemptedValue == ''morebad''\r\n                                                                        && pe.InnerException.Message == ''morebad is not a valid value for Int32.''))", span="280-290"];
m2_232 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_ModelBindingException_if_convertion_of_a_property_fails()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty''] = ''badint''", span="276-276"];
m2_233 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_ModelBindingException_if_convertion_of_a_property_fails()", file="DefaultBinderFixture.cs", label="context.Request.Form[''AnotherIntProperty''] = ''morebad''", span="277-277"];
m2_235 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_ModelBindingException_if_convertion_of_a_property_fails()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_ModelBindingException_if_convertion_of_a_property_fails()", span="271-271"];
m2_14 [cluster="Unk.ReturnsLazily", file="DefaultBinderFixture.cs", label="Entry Unk.ReturnsLazily", span=""];
m2_715 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_overwrite_non_nullable_property_if_already_set_and_overwriting_is_not_allowed()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_overwrite_non_nullable_property_if_already_set_and_overwriting_is_not_allowed()", span="950-950"];
m2_716 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_overwrite_non_nullable_property_if_already_set_and_overwriting_is_not_allowed()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder()", span="953-953"];
m2_717 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_overwrite_non_nullable_property_if_already_set_and_overwriting_is_not_allowed()", file="DefaultBinderFixture.cs", label="var existing = new TestModel { IntProperty = 27 }", span="954-954"];
m2_723 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_overwrite_non_nullable_property_if_already_set_and_overwriting_is_not_allowed()", file="DefaultBinderFixture.cs", label="var result = (TestModel)binder.Bind(context, typeof(TestModel), existing, BindingConfig.NoOverwrite)", span="964-964"];
m2_718 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_overwrite_non_nullable_property_if_already_set_and_overwriting_is_not_allowed()", file="DefaultBinderFixture.cs", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="956-956"];
m2_719 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_overwrite_non_nullable_property_if_already_set_and_overwriting_is_not_allowed()", file="DefaultBinderFixture.cs", label="context.Request.Query[''StringProperty''] = ''Test''", span="958-958"];
m2_720 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_overwrite_non_nullable_property_if_already_set_and_overwriting_is_not_allowed()", file="DefaultBinderFixture.cs", label="context.Request.Query[''IntProperty''] = ''12''", span="959-959"];
m2_721 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_overwrite_non_nullable_property_if_already_set_and_overwriting_is_not_allowed()", file="DefaultBinderFixture.cs", label="context.Parameters[''StringProperty''] = ''Test2''", span="960-960"];
m2_722 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_overwrite_non_nullable_property_if_already_set_and_overwriting_is_not_allowed()", file="DefaultBinderFixture.cs", label="context.Parameters[''IntProperty''] = ''1''", span="961-961"];
m2_724 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_overwrite_non_nullable_property_if_already_set_and_overwriting_is_not_allowed()", file="DefaultBinderFixture.cs", label="result.StringProperty.ShouldEqual(''Test'')", span="967-967"];
m2_725 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_overwrite_non_nullable_property_if_already_set_and_overwriting_is_not_allowed()", file="DefaultBinderFixture.cs", label="result.IntProperty.ShouldEqual(27)", span="968-968"];
m2_726 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_overwrite_non_nullable_property_if_already_set_and_overwriting_is_not_allowed()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_overwrite_non_nullable_property_if_already_set_and_overwriting_is_not_allowed()", span="950-950"];
m2_882 [cluster="object.ShouldNotBeSameAs(object)", file="DefaultBinderFixture.cs", label="Entry object.ShouldNotBeSameAs(object)", span="125-125"];
m2_243 [cluster="Unk.Any", file="DefaultBinderFixture.cs", label="Entry Unk.Any", span=""];
m2_76 [cluster="Unk.MustHaveHappened", file="DefaultBinderFixture.cs", label="Entry Unk.MustHaveHappened", span=""];
m2_84 [cluster="Unk.Deserialize", file="DefaultBinderFixture.cs", label="Entry Unk.Deserialize", span=""];
m2_737 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_overwrite_non_nullable_property_if_already_set_and_overwriting_is_allowed()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_overwrite_non_nullable_property_if_already_set_and_overwriting_is_allowed()", span="992-992"];
m2_738 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_overwrite_non_nullable_property_if_already_set_and_overwriting_is_allowed()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder()", span="995-995"];
m2_739 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_overwrite_non_nullable_property_if_already_set_and_overwriting_is_allowed()", file="DefaultBinderFixture.cs", label="var existing = new TestModel { IntProperty = 27 }", span="996-996"];
m2_743 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_overwrite_non_nullable_property_if_already_set_and_overwriting_is_allowed()", file="DefaultBinderFixture.cs", label="var result = (TestModel)binder.Bind(context, typeof(TestModel), existing, BindingConfig.Default)", span="1004-1004"];
m2_740 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_overwrite_non_nullable_property_if_already_set_and_overwriting_is_allowed()", file="DefaultBinderFixture.cs", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="998-998"];
m2_741 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_overwrite_non_nullable_property_if_already_set_and_overwriting_is_allowed()", file="DefaultBinderFixture.cs", label="context.Parameters[''StringProperty''] = ''Test2''", span="1000-1000"];
m2_742 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_overwrite_non_nullable_property_if_already_set_and_overwriting_is_allowed()", file="DefaultBinderFixture.cs", label="context.Parameters[''IntProperty''] = ''1''", span="1001-1001"];
m2_744 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_overwrite_non_nullable_property_if_already_set_and_overwriting_is_allowed()", file="DefaultBinderFixture.cs", label="result.StringProperty.ShouldEqual(''Test2'')", span="1007-1007"];
m2_745 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_overwrite_non_nullable_property_if_already_set_and_overwriting_is_allowed()", file="DefaultBinderFixture.cs", label="result.IntProperty.ShouldEqual(1)", span="1008-1008"];
m2_746 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_overwrite_non_nullable_property_if_already_set_and_overwriting_is_allowed()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_overwrite_non_nullable_property_if_already_set_and_overwriting_is_allowed()", span="992-992"];
m2_283 [cluster="Unk.Invokes", file="DefaultBinderFixture.cs", label="Entry Unk.Invokes", span=""];
m2_630 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs_using_brackets()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs_using_brackets()", span="779-779"];
m2_631 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs_using_brackets()", file="DefaultBinderFixture.cs", label="var typeConverters = new ITypeConverter[] { new CollectionConverter(), new FallbackConverter() }", span="782-782"];
m2_632 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs_using_brackets()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder(typeConverters)", span="783-783"];
m2_633 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs_using_brackets()", file="DefaultBinderFixture.cs", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/x-www-form-urlencoded'' })", span="785-785"];
m2_636 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs_using_brackets()", file="DefaultBinderFixture.cs", label="var result = (List<TestModel>)binder.Bind(context, typeof(List<TestModel>), null, BindingConfig.Default)", span="791-791"];
m2_634 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs_using_brackets()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntValues[0]''] = ''1,2,3,4''", span="787-787"];
m2_635 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs_using_brackets()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntValues[1]''] = ''5,6,7,8''", span="788-788"];
m2_637 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs_using_brackets()", file="DefaultBinderFixture.cs", label="result.First().IntValues.ShouldHaveCount(4)", span="794-794"];
m2_638 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs_using_brackets()", file="DefaultBinderFixture.cs", label="result.First().IntValues.ShouldEqualSequence(new[] { 1, 2, 3, 4 })", span="795-795"];
m2_639 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs_using_brackets()", file="DefaultBinderFixture.cs", label="result.Last().IntValues.ShouldHaveCount(4)", span="796-796"];
m2_640 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs_using_brackets()", file="DefaultBinderFixture.cs", label="result.Last().IntValues.ShouldEqualSequence(new[] { 5, 6, 7, 8 })", span="797-797"];
m2_641 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs_using_brackets()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs_using_brackets()", span="779-779"];
m2_31 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_type_converters_is_null()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_type_converters_is_null()", span="44-44"];
m2_32 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_type_converters_is_null()", file="DefaultBinderFixture.cs", label="var result = Record.Exception(() => new DefaultBinder(null, new IBodyDeserializer[] { }, A.Fake<IFieldNameConverter>(), new BindingDefaults()))", span="47-47"];
m2_33 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_type_converters_is_null()", file="DefaultBinderFixture.cs", label="result.ShouldBeOfType(typeof(ArgumentNullException))", span="50-50"];
m2_34 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_type_converters_is_null()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_type_converters_is_null()", span="44-44"];
m2_134 [cluster="object.ShouldEqual(object)", file="DefaultBinderFixture.cs", label="Entry object.ShouldEqual(object)", span="95-95"];
m2_642 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_properties_should_take_precendence_over_request_properties_and_context_properties()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_properties_should_take_precendence_over_request_properties_and_context_properties()", span="801-801"];
m2_643 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_properties_should_take_precendence_over_request_properties_and_context_properties()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder()", span="804-804"];
m2_644 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_properties_should_take_precendence_over_request_properties_and_context_properties()", file="DefaultBinderFixture.cs", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="806-806"];
m2_651 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_properties_should_take_precendence_over_request_properties_and_context_properties()", file="DefaultBinderFixture.cs", label="var result = (TestModel)binder.Bind(context, typeof(TestModel), null, BindingConfig.Default)", span="815-815"];
m2_645 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_properties_should_take_precendence_over_request_properties_and_context_properties()", file="DefaultBinderFixture.cs", label="context.Request.Form[''StringProperty''] = ''Test''", span="807-807"];
m2_646 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_properties_should_take_precendence_over_request_properties_and_context_properties()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty''] = ''3''", span="808-808"];
m2_647 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_properties_should_take_precendence_over_request_properties_and_context_properties()", file="DefaultBinderFixture.cs", label="context.Request.Query[''StringProperty''] = ''Test2''", span="809-809"];
m2_648 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_properties_should_take_precendence_over_request_properties_and_context_properties()", file="DefaultBinderFixture.cs", label="context.Request.Query[''IntProperty''] = ''1''", span="810-810"];
m2_649 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_properties_should_take_precendence_over_request_properties_and_context_properties()", file="DefaultBinderFixture.cs", label="context.Parameters[''StringProperty''] = ''Test3''", span="811-811"];
m2_650 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_properties_should_take_precendence_over_request_properties_and_context_properties()", file="DefaultBinderFixture.cs", label="context.Parameters[''IntProperty''] = ''2''", span="812-812"];
m2_652 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_properties_should_take_precendence_over_request_properties_and_context_properties()", file="DefaultBinderFixture.cs", label="result.StringProperty.ShouldEqual(''Test'')", span="817-817"];
m2_653 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_properties_should_take_precendence_over_request_properties_and_context_properties()", file="DefaultBinderFixture.cs", label="result.IntProperty.ShouldEqual(3)", span="818-818"];
m2_654 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_properties_should_take_precendence_over_request_properties_and_context_properties()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_properties_should_take_precendence_over_request_properties_and_context_properties()", span="801-801"];
m2_480 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_properties_should_take_precendence_over_request_properties()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_properties_should_take_precendence_over_request_properties()", span="552-552"];
m2_481 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_properties_should_take_precendence_over_request_properties()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder()", span="555-555"];
m2_482 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_properties_should_take_precendence_over_request_properties()", file="DefaultBinderFixture.cs", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="556-556"];
m2_487 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_properties_should_take_precendence_over_request_properties()", file="DefaultBinderFixture.cs", label="var result = (TestModel)binder.Bind(context, typeof(TestModel), null, BindingConfig.Default)", span="563-563"];
m2_483 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_properties_should_take_precendence_over_request_properties()", file="DefaultBinderFixture.cs", label="context.Request.Form[''StringProperty''] = ''Test''", span="557-557"];
m2_484 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_properties_should_take_precendence_over_request_properties()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty''] = ''3''", span="558-558"];
m2_485 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_properties_should_take_precendence_over_request_properties()", file="DefaultBinderFixture.cs", label="context.Request.Query[''StringProperty''] = ''Test2''", span="559-559"];
m2_486 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_properties_should_take_precendence_over_request_properties()", file="DefaultBinderFixture.cs", label="context.Request.Query[''IntProperty''] = ''1''", span="560-560"];
m2_488 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_properties_should_take_precendence_over_request_properties()", file="DefaultBinderFixture.cs", label="result.StringProperty.ShouldEqual(''Test'')", span="566-566"];
m2_489 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_properties_should_take_precendence_over_request_properties()", file="DefaultBinderFixture.cs", label="result.IntProperty.ShouldEqual(3)", span="567-567"];
m2_490 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_properties_should_take_precendence_over_request_properties()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_properties_should_take_precendence_over_request_properties()", span="552-552"];
m2_790 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_with_instance_from_body()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_with_instance_from_body()", span="1088-1088"];
m2_791 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_with_instance_from_body()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder(null, new List<IBodyDeserializer> { new XmlBodyDeserializer() })", span="1091-1091"];
m2_792 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_with_instance_from_body()", file="DefaultBinderFixture.cs", label="var body = XmlBodyDeserializerFixture.ToXmlString(new TestModel { StringProperty = ''Test'' })", span="1092-1092"];
m2_796 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_with_instance_from_body()", file="DefaultBinderFixture.cs", label="var result = (TestModel)binder.Bind(context, typeof(TestModel), instance, new BindingConfig { Overwrite = false })", span="1100-1100"];
m2_793 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_with_instance_from_body()", file="DefaultBinderFixture.cs", label="var context = CreateContextWithHeaderAndBody(''Content-Type'', new[] { ''application/xml'' }, body)", span="1094-1094"];
m2_794 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_with_instance_from_body()", file="DefaultBinderFixture.cs", label="var then = DateTime.Now", span="1096-1096"];
m2_795 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_with_instance_from_body()", file="DefaultBinderFixture.cs", label="var instance = new TestModel { DateProperty = then, IntProperty = 6, AnotherStringProprety = ''Beers'' }", span="1097-1097"];
m2_798 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_with_instance_from_body()", file="DefaultBinderFixture.cs", label="result.DateProperty.ShouldEqual(then)", span="1104-1104"];
m2_797 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_with_instance_from_body()", file="DefaultBinderFixture.cs", label="result.StringProperty.ShouldEqual(''Test'')", span="1103-1103"];
m2_799 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_with_instance_from_body()", file="DefaultBinderFixture.cs", label="result.IntProperty.ShouldEqual(6)", span="1105-1105"];
m2_800 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_with_instance_from_body()", file="DefaultBinderFixture.cs", label="result.AnotherStringProprety.ShouldEqual(''Beers'')", span="1106-1106"];
m2_801 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_with_instance_from_body()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_with_instance_from_body()", span="1088-1088"];
m2_85 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_call_body_deserializer_if_doesnt_match()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_call_body_deserializer_if_doesnt_match()", span="102-102"];
m2_86 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_call_body_deserializer_if_doesnt_match()", file="DefaultBinderFixture.cs", label="var deserializer = A.Fake<IBodyDeserializer>()", span="105-105"];
m2_87 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_call_body_deserializer_if_doesnt_match()", file="DefaultBinderFixture.cs", label="A.CallTo(() => deserializer.CanDeserialize(null, A<BindingContext>._)).WithAnyArguments().Returns(false)", span="106-106"];
m2_88 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_call_body_deserializer_if_doesnt_match()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder(bodyDeserializers: new[] { deserializer })", span="107-107"];
m2_91 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_call_body_deserializer_if_doesnt_match()", file="DefaultBinderFixture.cs", label="A.CallTo(() => deserializer.Deserialize(null, null, null)).WithAnyArguments()\r\n                .MustNotHaveHappened()", span="115-116"];
m2_89 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_call_body_deserializer_if_doesnt_match()", file="DefaultBinderFixture.cs", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="109-109"];
m2_90 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_call_body_deserializer_if_doesnt_match()", file="DefaultBinderFixture.cs", label="binder.Bind(context, this.GetType(), null, BindingConfig.Default)", span="112-112"];
m2_92 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_call_body_deserializer_if_doesnt_match()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_call_body_deserializer_if_doesnt_match()", span="102-102"];
m2_531 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_should_work_with_padded_zeros()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_should_work_with_padded_zeros()", span="625-625"];
m2_532 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_should_work_with_padded_zeros()", file="DefaultBinderFixture.cs", label="var typeConverters = new ITypeConverter[] { new CollectionConverter(), new FallbackConverter() }", span="628-628"];
m2_533 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_should_work_with_padded_zeros()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder(typeConverters)", span="629-629"];
m2_534 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_should_work_with_padded_zeros()", file="DefaultBinderFixture.cs", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/x-www-form-urlencoded'' })", span="631-631"];
m2_548 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_should_work_with_padded_zeros()", file="DefaultBinderFixture.cs", label="var result = (List<TestModel>)binder.Bind(context, typeof(List<TestModel>), null, BindingConfig.Default)", span="647-647"];
m2_535 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_should_work_with_padded_zeros()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty_00''] = ''1''", span="632-632"];
m2_536 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_should_work_with_padded_zeros()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty_01''] = ''2''", span="633-633"];
m2_537 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_should_work_with_padded_zeros()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty_02''] = ''3''", span="634-634"];
m2_538 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_should_work_with_padded_zeros()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty_03''] = ''4''", span="635-635"];
m2_539 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_should_work_with_padded_zeros()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty_04''] = ''5''", span="636-636"];
m2_540 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_should_work_with_padded_zeros()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty_05''] = ''6''", span="637-637"];
m2_541 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_should_work_with_padded_zeros()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty_06''] = ''7''", span="638-638"];
m2_542 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_should_work_with_padded_zeros()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty_07''] = ''8''", span="639-639"];
m2_543 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_should_work_with_padded_zeros()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty_08''] = ''9''", span="640-640"];
m2_544 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_should_work_with_padded_zeros()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty_09''] = ''10''", span="641-641"];
m2_545 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_should_work_with_padded_zeros()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty_10''] = ''11''", span="642-642"];
m2_546 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_should_work_with_padded_zeros()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty_11''] = ''12''", span="643-643"];
m2_547 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_should_work_with_padded_zeros()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty_12''] = ''13''", span="644-644"];
m2_549 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_should_work_with_padded_zeros()", file="DefaultBinderFixture.cs", label="result.First().IntProperty.ShouldEqual(1)", span="650-650"];
m2_550 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_should_work_with_padded_zeros()", file="DefaultBinderFixture.cs", label="result.Last().IntProperty.ShouldEqual(13)", span="651-651"];
m2_551 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_should_work_with_padded_zeros()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_should_work_with_padded_zeros()", span="625-625"];
m2_12 [cluster="Unk.CallTo", file="DefaultBinderFixture.cs", label="Entry Unk.CallTo", span=""];
m2_293 [cluster="Unk.Count", file="DefaultBinderFixture.cs", label="Entry Unk.Count", span=""];
m2_860 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_body_request_form_and_context_properties()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_body_request_form_and_context_properties()", span="1222-1222"];
m2_861 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_body_request_form_and_context_properties()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder(null, new List<IBodyDeserializer> { new XmlBodyDeserializer() })", span="1225-1225"];
m2_862 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_body_request_form_and_context_properties()", file="DefaultBinderFixture.cs", label="var body = XmlBodyDeserializerFixture.ToXmlString(new TestModel { DateProperty = new DateTime(2012, 8, 16) })", span="1226-1226"];
m2_867 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_body_request_form_and_context_properties()", file="DefaultBinderFixture.cs", label="var result = (TestModel)binder.Bind(context, typeof(TestModel), null, BindingConfig.Default)", span="1235-1235"];
m2_863 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_body_request_form_and_context_properties()", file="DefaultBinderFixture.cs", label="var context = CreateContextWithHeaderAndBody(''Content-Type'', new[] { ''application/xml'' }, body)", span="1228-1228"];
m2_864 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_body_request_form_and_context_properties()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty''] = ''0''", span="1230-1230"];
m2_865 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_body_request_form_and_context_properties()", file="DefaultBinderFixture.cs", label="context.Request.Query[''StringProperty''] = ''From Query''", span="1231-1231"];
m2_866 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_body_request_form_and_context_properties()", file="DefaultBinderFixture.cs", label="context.Parameters[''AnotherStringProprety''] = ''From Context''", span="1232-1232"];
m2_868 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_body_request_form_and_context_properties()", file="DefaultBinderFixture.cs", label="result.StringProperty.ShouldEqual(''From Query'')", span="1238-1238"];
m2_869 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_body_request_form_and_context_properties()", file="DefaultBinderFixture.cs", label="result.IntProperty.ShouldEqual(0)", span="1239-1239"];
m2_870 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_body_request_form_and_context_properties()", file="DefaultBinderFixture.cs", label="result.DateProperty.ShouldEqual(new DateTime(2012, 8, 16))", span="1240-1240"];
m2_871 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_body_request_form_and_context_properties()", file="DefaultBinderFixture.cs", label="result.AnotherStringProprety.ShouldEqual(''From Context'')", span="1241-1241"];
m2_872 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_body_request_form_and_context_properties()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_be_able_to_bind_body_request_form_and_context_properties()", span="1222-1222"];
m2_354 [cluster="Unk.GetBinderForType", file="DefaultBinderFixture.cs", label="Entry Unk.GetBinderForType", span=""];
m2_42 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_body_deserializers_is_null()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_body_deserializers_is_null()", span="54-54"];
m2_43 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_body_deserializers_is_null()", file="DefaultBinderFixture.cs", label="var result = Record.Exception(() => new DefaultBinder(new ITypeConverter[] { }, null, A.Fake<IFieldNameConverter>(), new BindingDefaults()))", span="57-57"];
m2_44 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_body_deserializers_is_null()", file="DefaultBinderFixture.cs", label="result.ShouldBeOfType(typeof(ArgumentNullException))", span="60-60"];
m2_45 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_body_deserializers_is_null()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_throw_if_body_deserializers_is_null()", span="54-54"];
m2_215 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_properties_that_cannot_be_converted()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_properties_that_cannot_be_converted()", span="252-252"];
m2_216 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_properties_that_cannot_be_converted()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder(typeConverters: new[] { new FallbackConverter() })", span="255-255"];
m2_217 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_properties_that_cannot_be_converted()", file="DefaultBinderFixture.cs", label="var context = new NancyContext { Request = new FakeRequest(''GET'', ''/'') }", span="256-256"];
m2_221 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_properties_that_cannot_be_converted()", file="DefaultBinderFixture.cs", label="var result = (TestModel)binder.Bind(context, typeof(TestModel), null, BindingConfig.Default)", span="262-262"];
m2_218 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_properties_that_cannot_be_converted()", file="DefaultBinderFixture.cs", label="context.Request.Form[''StringProperty''] = ''Test''", span="257-257"];
m2_219 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_properties_that_cannot_be_converted()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty''] = ''12''", span="258-258"];
m2_220 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_properties_that_cannot_be_converted()", file="DefaultBinderFixture.cs", label="context.Request.Form[''DateProperty''] = ''Broken''", span="259-259"];
m2_222 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_properties_that_cannot_be_converted()", file="DefaultBinderFixture.cs", label="result.StringProperty.ShouldEqual(''Test'')", span="265-265"];
m2_223 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_properties_that_cannot_be_converted()", file="DefaultBinderFixture.cs", label="result.IntProperty.ShouldEqual(12)", span="266-266"];
m2_224 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_properties_that_cannot_be_converted()", file="DefaultBinderFixture.cs", label="result.DateProperty.ShouldEqual(default(DateTime))", span="267-267"];
m2_225 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_properties_that_cannot_be_converted()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_properties_that_cannot_be_converted()", span="252-252"];
m2_272 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_indexer_properties()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_indexer_properties()", span="328-328"];
m2_273 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_indexer_properties()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder(typeConverters: new[] { new FallbackConverter() })", span="331-331"];
m2_274 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_indexer_properties()", file="DefaultBinderFixture.cs", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="332-332"];
m2_280 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_indexer_properties()", file="DefaultBinderFixture.cs", label="binder.Bind(context, typeof(TestModel), null, BindingConfig.Default)", span="347-347"];
m2_275 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_indexer_properties()", file="DefaultBinderFixture.cs", label="var validProperties = 0", span="334-334"];
m2_276 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_indexer_properties()", file="DefaultBinderFixture.cs", label="var deserializer = A.Fake<IBodyDeserializer>()", span="335-335"];
m2_277 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_indexer_properties()", file="DefaultBinderFixture.cs", label="A.CallTo(() => deserializer.CanDeserialize(A<string>.Ignored, A<BindingContext>._)).Returns(true)", span="336-336"];
m2_278 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_indexer_properties()", file="DefaultBinderFixture.cs", label="A.CallTo(() => deserializer.Deserialize(A<string>.Ignored, A<Stream>.Ignored, A<BindingContext>.Ignored))\r\n                                       .Invokes(f =>\r\n                                           {\r\n                                               validProperties = f.Arguments.Get<BindingContext>(2).ValidModelProperties.Count();\r\n                                           })\r\n                                       .Returns(new TestModel())", span="337-342"];
m2_279 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_indexer_properties()", file="DefaultBinderFixture.cs", label="A.CallTo(() => this.emptyDefaults.DefaultBodyDeserializers).Returns(new[] { deserializer })", span="344-344"];
m2_281 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_indexer_properties()", color=red, community=0, file="DefaultBinderFixture.cs", label="0: validProperties.ShouldEqual(9)", span="350-350"];
m2_282 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_indexer_properties()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_ignore_indexer_properties()", span="328-328"];
m2_615 [cluster="System.Collections.Generic.IEnumerable<T>.ShouldEqualSequence<T>(System.Collections.Generic.IEnumerable<T>)", file="DefaultBinderFixture.cs", label="Entry System.Collections.Generic.IEnumerable<T>.ShouldEqualSequence<T>(System.Collections.Generic.IEnumerable<T>)", span="110-110"];
m2_757 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBodyDeserializers.XmlBodyDeserializerFixture.ToXmlString<T>(T)", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBodyDeserializers.XmlBodyDeserializerFixture.ToXmlString<T>(T)", span="97-97"];
m2_426 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", span="493-493"];
m2_427 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs", label="var userTypeConverter = A.Fake<ITypeConverter>()", span="496-496"];
m2_428 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs", label="A.CallTo(() => userTypeConverter.CanConvertTo(typeof(string), null)).WithAnyArguments().Returns(true)", span="497-497"];
m2_429 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs", label="A.CallTo(() => userTypeConverter.Convert(null, null, null)).WithAnyArguments().Returns(null)", span="498-498"];
m2_434 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder(new[] { userTypeConverter })", span="503-503"];
m2_438 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs", label="A.CallTo(() => userTypeConverter.Convert(null, null, null)).WithAnyArguments()\r\n                .MustHaveHappened(Repeated.Exactly.Once)", span="511-512"];
m2_430 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs", label="var defaultTypeConverter = A.Fake<ITypeConverter>()", span="499-499"];
m2_431 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs", label="A.CallTo(() => defaultTypeConverter.CanConvertTo(typeof(string), null)).WithAnyArguments().Returns(true)", span="500-500"];
m2_432 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs", label="A.CallTo(() => defaultTypeConverter.Convert(null, null, null)).WithAnyArguments().Returns(null)", span="501-501"];
m2_433 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs", label="A.CallTo(() => this.emptyDefaults.DefaultTypeConverters).Returns(new[] { defaultTypeConverter })", span="502-502"];
m2_439 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs", label="A.CallTo(() => defaultTypeConverter.Convert(null, null, null)).WithAnyArguments()\r\n                .MustNotHaveHappened()", span="513-514"];
m2_435 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs", label="var context = new NancyContext { Request = new FakeRequest(''GET'', ''/'') }", span="504-504"];
m2_437 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs", label="binder.Bind(context, typeof(TestModel), null, BindingConfig.Default)", span="508-508"];
m2_436 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs", label="context.Request.Form[''StringProperty''] = ''Test''", span="505-505"];
m2_440 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.User_type_converter_should_take_precedence_over_default_one()", span="493-493"];
m2_848 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_NOT_be_used_in_body_only_mode_if_there_is_no_body()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_NOT_be_used_in_body_only_mode_if_there_is_no_body()", span="1200-1200"];
m2_849 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_NOT_be_used_in_body_only_mode_if_there_is_no_body()", file="DefaultBinderFixture.cs", label="var typeConverters = new ITypeConverter[] { new CollectionConverter(), new FallbackConverter() }", span="1203-1203"];
m2_850 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_NOT_be_used_in_body_only_mode_if_there_is_no_body()", file="DefaultBinderFixture.cs", label="var binder = GetBinder(typeConverters)", span="1204-1204"];
m2_851 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_NOT_be_used_in_body_only_mode_if_there_is_no_body()", file="DefaultBinderFixture.cs", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="1206-1206"];
m2_855 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_NOT_be_used_in_body_only_mode_if_there_is_no_body()", file="DefaultBinderFixture.cs", label="var result = (TestModel)binder.Bind(context, typeof(TestModel), null, new BindingConfig { BodyOnly = true })", span="1212-1212"];
m2_852 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_NOT_be_used_in_body_only_mode_if_there_is_no_body()", file="DefaultBinderFixture.cs", label="context.Request.Form[''StringProperty''] = ''From form''", span="1207-1207"];
m2_853 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_NOT_be_used_in_body_only_mode_if_there_is_no_body()", file="DefaultBinderFixture.cs", label="context.Request.Query[''IntProperty''] = ''1''", span="1208-1208"];
m2_854 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_NOT_be_used_in_body_only_mode_if_there_is_no_body()", file="DefaultBinderFixture.cs", label="context.Parameters[''AnotherStringProprety''] = ''From context''", span="1209-1209"];
m2_856 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_NOT_be_used_in_body_only_mode_if_there_is_no_body()", file="DefaultBinderFixture.cs", label="result.StringProperty.ShouldEqual(null)", span="1215-1215"];
m2_857 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_NOT_be_used_in_body_only_mode_if_there_is_no_body()", file="DefaultBinderFixture.cs", label="result.AnotherStringProprety.ShouldEqual(null)", span="1216-1216"];
m2_858 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_NOT_be_used_in_body_only_mode_if_there_is_no_body()", file="DefaultBinderFixture.cs", label="result.IntProperty.ShouldEqual(0)", span="1217-1217"];
m2_859 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_NOT_be_used_in_body_only_mode_if_there_is_no_body()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Form_request_and_context_properties_should_NOT_be_used_in_body_only_mode_if_there_is_no_body()", span="1200-1200"];
m2_727 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_overwrite_nullable_property_if_already_set_and_overwriting_is_allowed()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_overwrite_nullable_property_if_already_set_and_overwriting_is_allowed()", span="972-972"];
m2_728 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_overwrite_nullable_property_if_already_set_and_overwriting_is_allowed()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder()", span="975-975"];
m2_729 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_overwrite_nullable_property_if_already_set_and_overwriting_is_allowed()", file="DefaultBinderFixture.cs", label="var existing = new TestModel { StringProperty = ''Existing Value'' }", span="976-976"];
m2_733 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_overwrite_nullable_property_if_already_set_and_overwriting_is_allowed()", file="DefaultBinderFixture.cs", label="var result = (TestModel)binder.Bind(context, typeof(TestModel), existing, BindingConfig.Default)", span="984-984"];
m2_730 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_overwrite_nullable_property_if_already_set_and_overwriting_is_allowed()", file="DefaultBinderFixture.cs", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="978-978"];
m2_731 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_overwrite_nullable_property_if_already_set_and_overwriting_is_allowed()", file="DefaultBinderFixture.cs", label="context.Parameters[''StringProperty''] = ''Test2''", span="980-980"];
m2_732 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_overwrite_nullable_property_if_already_set_and_overwriting_is_allowed()", file="DefaultBinderFixture.cs", label="context.Parameters[''IntProperty''] = ''1''", span="981-981"];
m2_734 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_overwrite_nullable_property_if_already_set_and_overwriting_is_allowed()", file="DefaultBinderFixture.cs", label="result.StringProperty.ShouldEqual(''Test2'')", span="987-987"];
m2_735 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_overwrite_nullable_property_if_already_set_and_overwriting_is_allowed()", file="DefaultBinderFixture.cs", label="result.IntProperty.ShouldEqual(1)", span="988-988"];
m2_736 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_overwrite_nullable_property_if_already_set_and_overwriting_is_allowed()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_overwrite_nullable_property_if_already_set_and_overwriting_is_allowed()", span="972-972"];
m2_110 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_binding_context_to_can_deserialize()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_binding_context_to_can_deserialize()", span="137-137"];
m2_111 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_binding_context_to_can_deserialize()", file="DefaultBinderFixture.cs", label="var deserializer = A.Fake<IBodyDeserializer>()", span="140-140"];
m2_112 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_binding_context_to_can_deserialize()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder(bodyDeserializers: new[] { deserializer })", span="141-141"];
m2_115 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_binding_context_to_can_deserialize()", file="DefaultBinderFixture.cs", label="A.CallTo(() => deserializer.CanDeserialize(''application/xml'', A<BindingContext>.That.Not.IsNull()))\r\n                .MustHaveHappened(Repeated.Exactly.Once)", span="149-150"];
m2_113 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_binding_context_to_can_deserialize()", file="DefaultBinderFixture.cs", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="143-143"];
m2_114 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_binding_context_to_can_deserialize()", file="DefaultBinderFixture.cs", label="binder.Bind(context, this.GetType(), null, BindingConfig.Default)", span="146-146"];
m2_116 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_binding_context_to_can_deserialize()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_pass_binding_context_to_can_deserialize()", span="137-137"];
m2_776 [cluster="Nancy.Json.JavaScriptSerializer.Serialize(object)", file="DefaultBinderFixture.cs", label="Entry Nancy.Json.JavaScriptSerializer.Serialize(object)", span="453-453"];
m2_603 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs()", span="733-733"];
m2_604 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs()", file="DefaultBinderFixture.cs", label="var typeConverters = new ITypeConverter[] { new CollectionConverter(), new FallbackConverter() }", span="736-736"];
m2_605 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder(typeConverters)", span="737-737"];
m2_606 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs()", file="DefaultBinderFixture.cs", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/x-www-form-urlencoded'' })", span="739-739"];
m2_609 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs()", file="DefaultBinderFixture.cs", label="var result = (List<TestModel>)binder.Bind(context, typeof(List<TestModel>), null, BindingConfig.Default)", span="745-745"];
m2_607 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntValues_0''] = ''1,2,3,4''", span="741-741"];
m2_608 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntValues_1''] = ''5,6,7,8''", span="742-742"];
m2_610 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs()", file="DefaultBinderFixture.cs", label="result.First().IntValues.ShouldHaveCount(4)", span="748-748"];
m2_611 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs()", file="DefaultBinderFixture.cs", label="result.First().IntValues.ShouldEqualSequence(new[] { 1, 2, 3, 4 })", span="749-749"];
m2_612 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs()", file="DefaultBinderFixture.cs", label="result.Last().IntValues.ShouldHaveCount(4)", span="750-750"];
m2_613 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs()", file="DefaultBinderFixture.cs", label="result.Last().IntValues.ShouldEqualSequence(new[] { 5, 6, 7, 8 })", span="751-751"];
m2_614 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs()", span="733-733"];
m2_259 [cluster="Unk.DoesNotThrow", file="DefaultBinderFixture.cs", label="Entry Unk.DoesNotThrow", span=""];
m2_873 [cluster="System.DateTime.DateTime(int, int, int)", file="DefaultBinderFixture.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m2_11 [cluster="Unk.>", file="DefaultBinderFixture.cs", label="Entry Unk.>", span=""];
m2_0 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.DefaultBinderFixture()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.DefaultBinderFixture()", span="27-27"];
m2_1 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.DefaultBinderFixture()", file="DefaultBinderFixture.cs", label="this.defaultBindingContext = new BindingContext()", span="29-29"];
m2_2 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.DefaultBinderFixture()", file="DefaultBinderFixture.cs", label="this.passthroughNameConverter = A.Fake<IFieldNameConverter>()", span="31-31"];
m2_3 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.DefaultBinderFixture()", file="DefaultBinderFixture.cs", label="A.CallTo(() => this.passthroughNameConverter.Convert(null)).WithAnyArguments()\r\n                .ReturnsLazily(f => (string)f.Arguments[0])", span="32-33"];
m2_4 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.DefaultBinderFixture()", file="DefaultBinderFixture.cs", label="this.emptyDefaults = A.Fake<BindingDefaults>()", span="35-35"];
m2_5 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.DefaultBinderFixture()", file="DefaultBinderFixture.cs", label="A.CallTo(() => this.emptyDefaults.DefaultBodyDeserializers).Returns(new IBodyDeserializer[] { })", span="36-36"];
m2_6 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.DefaultBinderFixture()", file="DefaultBinderFixture.cs", label="A.CallTo(() => this.emptyDefaults.DefaultTypeConverters).Returns(new ITypeConverter[] { })", span="37-37"];
m2_7 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.DefaultBinderFixture()", file="DefaultBinderFixture.cs", label="this.serializer = new JavaScriptSerializer()", span="39-39"];
m2_8 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.DefaultBinderFixture()", file="DefaultBinderFixture.cs", label="this.serializer.RegisterConverters(JsonSettings.Converters)", span="40-40"];
m2_9 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.DefaultBinderFixture()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.DefaultBinderFixture()", span="27-27"];
m2_602 [cluster="System.Collections.Generic.IEnumerable<T>.ShouldHaveCount<T>(int)", file="DefaultBinderFixture.cs", label="Entry System.Collections.Generic.IEnumerable<T>.ShouldHaveCount<T>(int)", span="80-80"];
m2_13 [cluster="Unk.WithAnyArguments", file="DefaultBinderFixture.cs", label="Entry Unk.WithAnyArguments", span=""];
m2_195 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_convert_on_type_converter_if_available()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_convert_on_type_converter_if_available()", span="233-233"];
m2_196 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_convert_on_type_converter_if_available()", file="DefaultBinderFixture.cs", label="var typeConverter = A.Fake<ITypeConverter>()", span="236-236"];
m2_197 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_convert_on_type_converter_if_available()", file="DefaultBinderFixture.cs", label="A.CallTo(() => typeConverter.CanConvertTo(typeof(string), null)).WithAnyArguments().Returns(true)", span="237-237"];
m2_198 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_convert_on_type_converter_if_available()", file="DefaultBinderFixture.cs", label="A.CallTo(() => typeConverter.Convert(null, null, null)).WithAnyArguments().Returns(null)", span="238-238"];
m2_199 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_convert_on_type_converter_if_available()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder(typeConverters: new[] { typeConverter })", span="239-239"];
m2_203 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_convert_on_type_converter_if_available()", file="DefaultBinderFixture.cs", label="A.CallTo(() => typeConverter.Convert(null, null, null)).WithAnyArguments()\r\n                .MustHaveHappened(Repeated.Exactly.Once)", span="247-248"];
m2_200 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_convert_on_type_converter_if_available()", file="DefaultBinderFixture.cs", label="var context = new NancyContext { Request = new FakeRequest(''GET'', ''/'') }", span="240-240"];
m2_202 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_convert_on_type_converter_if_available()", file="DefaultBinderFixture.cs", label="binder.Bind(context, typeof(TestModel), null, BindingConfig.Default)", span="244-244"];
m2_201 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_convert_on_type_converter_if_available()", file="DefaultBinderFixture.cs", label="context.Request.Form[''StringProperty''] = ''Test''", span="241-241"];
m2_204 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_convert_on_type_converter_if_available()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_call_convert_on_type_converter_if_available()", span="233-233"];
m2_17 [cluster="Nancy.Json.JavaScriptSerializer.RegisterConverters(System.Collections.Generic.IEnumerable<Nancy.Json.JavaScriptConverter>)", file="DefaultBinderFixture.cs", label="Entry Nancy.Json.JavaScriptSerializer.RegisterConverters(System.Collections.Generic.IEnumerable<Nancy.Json.JavaScriptConverter>)", span="429-429"];
m2_683 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="DefaultBinderFixture.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m2_133 [cluster="object.ShouldBeOfType<T>()", file="DefaultBinderFixture.cs", label="Entry object.ShouldBeOfType<T>()", span="150-150"];
m2_186 [cluster="Nancy.Tests.Fakes.FakeRequest.FakeRequest(string, string)", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Fakes.FakeRequest.FakeRequest(string, string)", span="8-8"];
m2_894 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="DefaultBinderFixture.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m2_819 [cluster="object.ShouldBeNull()", file="DefaultBinderFixture.cs", label="Entry object.ShouldBeNull()", span="135-135"];
m2_911 [cluster="bool.ShouldBeTrue()", file="DefaultBinderFixture.cs", label="Entry bool.ShouldBeTrue()", span="85-85"];
m2_616 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs_using_brackets_and_specifying_an_instance()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs_using_brackets_and_specifying_an_instance()", span="756-756"];
m2_617 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs_using_brackets_and_specifying_an_instance()", file="DefaultBinderFixture.cs", label="var typeConverters = new ITypeConverter[] { new CollectionConverter(), new FallbackConverter() }", span="759-759"];
m2_618 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs_using_brackets_and_specifying_an_instance()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder(typeConverters)", span="760-760"];
m2_619 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs_using_brackets_and_specifying_an_instance()", file="DefaultBinderFixture.cs", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/x-www-form-urlencoded'' })", span="762-762"];
m2_622 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs_using_brackets_and_specifying_an_instance()", file="DefaultBinderFixture.cs", label="var result = (List<TestModel>)binder.Bind(context, typeof(List<TestModel>), new List<TestModel> { new TestModel {AnotherStringProprety = ''Test''} }, new BindingConfig { Overwrite = false})", span="768-768"];
m2_620 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs_using_brackets_and_specifying_an_instance()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntValues[0]''] = ''1,2,3,4''", span="764-764"];
m2_621 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs_using_brackets_and_specifying_an_instance()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntValues[1]''] = ''5,6,7,8''", span="765-765"];
m2_623 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs_using_brackets_and_specifying_an_instance()", file="DefaultBinderFixture.cs", label="result.First().AnotherStringProprety.ShouldEqual(''Test'')", span="771-771"];
m2_624 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs_using_brackets_and_specifying_an_instance()", file="DefaultBinderFixture.cs", label="result.First().IntValues.ShouldHaveCount(4)", span="772-772"];
m2_625 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs_using_brackets_and_specifying_an_instance()", file="DefaultBinderFixture.cs", label="result.First().IntValues.ShouldEqualSequence(new[] { 1, 2, 3, 4 })", span="773-773"];
m2_626 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs_using_brackets_and_specifying_an_instance()", file="DefaultBinderFixture.cs", label="result.Last().IntValues.ShouldHaveCount(4)", span="774-774"];
m2_627 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs_using_brackets_and_specifying_an_instance()", file="DefaultBinderFixture.cs", label="result.Last().IntValues.ShouldEqualSequence(new[] { 5, 6, 7, 8 })", span="775-775"];
m2_628 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs_using_brackets_and_specifying_an_instance()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_to_IEnumerable_from_Form_with_multiple_inputs_using_brackets_and_specifying_an_instance()", span="756-756"];
m2_655 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Request_properties_should_take_precendence_over_context_properties()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Request_properties_should_take_precendence_over_context_properties()", span="822-822"];
m2_656 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Request_properties_should_take_precendence_over_context_properties()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder()", span="825-825"];
m2_657 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Request_properties_should_take_precendence_over_context_properties()", file="DefaultBinderFixture.cs", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="827-827"];
m2_662 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Request_properties_should_take_precendence_over_context_properties()", file="DefaultBinderFixture.cs", label="var result = (TestModel)binder.Bind(context, typeof(TestModel), null, BindingConfig.Default)", span="835-835"];
m2_658 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Request_properties_should_take_precendence_over_context_properties()", file="DefaultBinderFixture.cs", label="context.Request.Query[''StringProperty''] = ''Test''", span="829-829"];
m2_659 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Request_properties_should_take_precendence_over_context_properties()", file="DefaultBinderFixture.cs", label="context.Request.Query[''IntProperty''] = ''12''", span="830-830"];
m2_660 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Request_properties_should_take_precendence_over_context_properties()", file="DefaultBinderFixture.cs", label="context.Parameters[''StringProperty''] = ''Test2''", span="831-831"];
m2_661 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Request_properties_should_take_precendence_over_context_properties()", file="DefaultBinderFixture.cs", label="context.Parameters[''IntProperty''] = ''13''", span="832-832"];
m2_663 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Request_properties_should_take_precendence_over_context_properties()", file="DefaultBinderFixture.cs", label="result.StringProperty.ShouldEqual(''Test'')", span="837-837"];
m2_664 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Request_properties_should_take_precendence_over_context_properties()", file="DefaultBinderFixture.cs", label="result.IntProperty.ShouldEqual(12)", span="838-838"];
m2_665 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Request_properties_should_take_precendence_over_context_properties()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Request_properties_should_take_precendence_over_context_properties()", span="822-822"];
m2_758 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.CreateContextWithHeaderAndBody(string, System.Collections.Generic.IEnumerable<string>, string)", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.CreateContextWithHeaderAndBody(string, System.Collections.Generic.IEnumerable<string>, string)", span="1283-1283"];
m2_896 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.CreateContextWithHeaderAndBody(string, System.Collections.Generic.IEnumerable<string>, string)", file="DefaultBinderFixture.cs", label="var header = new Dictionary<string, IEnumerable<string>>\r\n            {\r\n                { name, values }\r\n            }", span="1285-1288"];
m2_897 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.CreateContextWithHeaderAndBody(string, System.Collections.Generic.IEnumerable<string>, string)", file="DefaultBinderFixture.cs", label="byte[] byteArray = Encoding.UTF8.GetBytes(body)", span="1290-1290"];
m2_899 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.CreateContextWithHeaderAndBody(string, System.Collections.Generic.IEnumerable<string>, string)", file="DefaultBinderFixture.cs", label="return new NancyContext\r\n            {\r\n                Request = new FakeRequest(''GET'', ''/'', header, bodyStream, ''http'', string.Empty),\r\n                Parameters = DynamicDictionary.Empty\r\n            };", span="1293-1297"];
m2_898 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.CreateContextWithHeaderAndBody(string, System.Collections.Generic.IEnumerable<string>, string)", file="DefaultBinderFixture.cs", label="var bodyStream = RequestStream.FromStream(new MemoryStream(byteArray))", span="1291-1291"];
m2_900 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.CreateContextWithHeaderAndBody(string, System.Collections.Generic.IEnumerable<string>, string)", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.CreateContextWithHeaderAndBody(string, System.Collections.Generic.IEnumerable<string>, string)", span="1283-1283"];
m2_185 [cluster="Nancy.NancyContext.NancyContext()", file="DefaultBinderFixture.cs", label="Entry Nancy.NancyContext.NancyContext()", span="25-25"];
m2_775 [cluster="Nancy.ModelBinding.DefaultBodyDeserializers.JsonBodyDeserializer.JsonBodyDeserializer()", file="DefaultBinderFixture.cs", label="Entry Nancy.ModelBinding.DefaultBodyDeserializers.JsonBodyDeserializer.JsonBodyDeserializer()", span="12-12"];
m2_73 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.CreateContextWithHeader(string, System.Collections.Generic.IEnumerable<string>)", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.CreateContextWithHeader(string, System.Collections.Generic.IEnumerable<string>)", span="1269-1269"];
m2_891 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.CreateContextWithHeader(string, System.Collections.Generic.IEnumerable<string>)", file="DefaultBinderFixture.cs", label="var header = new Dictionary<string, IEnumerable<string>>\r\n            {\r\n                { name, values }\r\n            }", span="1271-1274"];
m2_892 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.CreateContextWithHeader(string, System.Collections.Generic.IEnumerable<string>)", file="DefaultBinderFixture.cs", label="return new NancyContext\r\n            {\r\n                Request = new FakeRequest(''GET'', ''/'', header),\r\n                Parameters = DynamicDictionary.Empty\r\n            };", span="1276-1280"];
m2_893 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.CreateContextWithHeader(string, System.Collections.Generic.IEnumerable<string>)", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.CreateContextWithHeader(string, System.Collections.Generic.IEnumerable<string>)", span="1269-1269"];
m2_80 [cluster="Unk.CanDeserialize", file="DefaultBinderFixture.cs", label="Entry Unk.CanDeserialize", span=""];
m2_890 [cluster="Nancy.ModelBinding.DefaultConverters.NumericConverter.NumericConverter()", file="DefaultBinderFixture.cs", label="Entry Nancy.ModelBinding.DefaultConverters.NumericConverter.NumericConverter()", span="8-8"];
m2_572 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_with_jagged_ids()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_with_jagged_ids()", span="684-684"];
m2_573 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_with_jagged_ids()", file="DefaultBinderFixture.cs", label="var typeConverters = new ITypeConverter[] { new CollectionConverter(), new FallbackConverter() }", span="687-687"];
m2_574 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_with_jagged_ids()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder(typeConverters)", span="688-688"];
m2_575 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_with_jagged_ids()", file="DefaultBinderFixture.cs", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/x-www-form-urlencoded'' })", span="690-690"];
m2_589 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_with_jagged_ids()", file="DefaultBinderFixture.cs", label="var result = (List<TestModel>)binder.Bind(context, typeof(List<TestModel>), null, BindingConfig.Default)", span="706-706"];
m2_576 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_with_jagged_ids()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty_01''] = ''1''", span="691-691"];
m2_577 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_with_jagged_ids()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty_04''] = ''2''", span="692-692"];
m2_578 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_with_jagged_ids()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty_05''] = ''3''", span="693-693"];
m2_579 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_with_jagged_ids()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty_06''] = ''4''", span="694-694"];
m2_580 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_with_jagged_ids()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty_09''] = ''5''", span="695-695"];
m2_581 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_with_jagged_ids()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty_11''] = ''6''", span="696-696"];
m2_582 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_with_jagged_ids()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty_57''] = ''7''", span="697-697"];
m2_583 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_with_jagged_ids()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty_199''] = ''8''", span="698-698"];
m2_584 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_with_jagged_ids()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty_1599''] = ''9''", span="699-699"];
m2_585 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_with_jagged_ids()", file="DefaultBinderFixture.cs", label="context.Request.Form[''StringProperty_1599''] = ''nine''", span="700-700"];
m2_586 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_with_jagged_ids()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty_233''] = ''10''", span="701-701"];
m2_587 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_with_jagged_ids()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty_14''] = ''11''", span="702-702"];
m2_588 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_with_jagged_ids()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty_12''] = ''12''", span="703-703"];
m2_590 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_with_jagged_ids()", file="DefaultBinderFixture.cs", label="result.First().IntProperty.ShouldEqual(1)", span="709-709"];
m2_591 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_with_jagged_ids()", file="DefaultBinderFixture.cs", label="result.Last().IntProperty.ShouldEqual(9)", span="710-710"];
m2_592 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_with_jagged_ids()", file="DefaultBinderFixture.cs", label="result.Last().StringProperty.ShouldEqual(''nine'')", span="711-711"];
m2_593 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_with_jagged_ids()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_more_than_10_multiple_Form_properties_to_list_starting_with_jagged_ids()", span="684-684"];
m2_471 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_context_parameters()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_context_parameters()", span="535-535"];
m2_472 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_context_parameters()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder()", span="538-538"];
m2_473 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_context_parameters()", file="DefaultBinderFixture.cs", label="var context = CreateContextWithHeader(''Content-Type'', new[] { ''application/xml'' })", span="539-539"];
m2_476 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_context_parameters()", file="DefaultBinderFixture.cs", label="var result = (TestModel)binder.Bind(context, typeof(TestModel), null, BindingConfig.Default)", span="544-544"];
m2_474 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_context_parameters()", file="DefaultBinderFixture.cs", label="context.Parameters[''StringProperty''] = ''Test''", span="540-540"];
m2_475 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_context_parameters()", file="DefaultBinderFixture.cs", label="context.Parameters[''IntProperty''] = ''3''", span="541-541"];
m2_477 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_context_parameters()", file="DefaultBinderFixture.cs", label="result.StringProperty.ShouldEqual(''Test'')", span="547-547"];
m2_478 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_context_parameters()", file="DefaultBinderFixture.cs", label="result.IntProperty.ShouldEqual(3)", span="548-548"];
m2_479 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_context_parameters()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_model_from_context_parameters()", span="535-535"];
m2_901 [cluster="System.Text.Encoding.GetBytes(string)", file="DefaultBinderFixture.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m2_236 [cluster="Unk.ShouldMatch", file="DefaultBinderFixture.cs", label="Entry Unk.ShouldMatch", span=""];
m2_903 [cluster="Nancy.IO.RequestStream.FromStream(System.IO.Stream)", file="DefaultBinderFixture.cs", label="Entry Nancy.IO.RequestStream.FromStream(System.IO.Stream)", span="258-258"];
m2_767 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_ienumerable_model_from_body()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_ienumerable_model_from_body()", span="1047-1047"];
m2_768 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_ienumerable_model_from_body()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder(null, new List<IBodyDeserializer> { new JsonBodyDeserializer() })", span="1050-1050"];
m2_769 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_ienumerable_model_from_body()", file="DefaultBinderFixture.cs", label="var body = serializer.Serialize(new List<TestModel>(new[] { new TestModel { StringProperty = ''Test'' }, new TestModel { StringProperty = ''AnotherTest'' } }))", span="1051-1051"];
m2_771 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_ienumerable_model_from_body()", file="DefaultBinderFixture.cs", label="var result = (IEnumerable<TestModel>)binder.Bind(context, typeof(IEnumerable<TestModel>), null, BindingConfig.Default)", span="1056-1056"];
m2_770 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_ienumerable_model_from_body()", file="DefaultBinderFixture.cs", label="var context = CreateContextWithHeaderAndBody(''Content-Type'', new[] { ''application/json'' }, body)", span="1053-1053"];
m2_772 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_ienumerable_model_from_body()", file="DefaultBinderFixture.cs", label="result.First().StringProperty.ShouldEqual(''Test'')", span="1059-1059"];
m2_773 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_ienumerable_model_from_body()", file="DefaultBinderFixture.cs", label="result.Last().StringProperty.ShouldEqual(''AnotherTest'')", span="1060-1060"];
m2_774 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_ienumerable_model_from_body()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_bind_ienumerable_model_from_body()", span="1047-1047"];
m2_907 [cluster="Nancy.Tests.Unit.ModelBinding.BindingConfigFixture.Should_allow_overwrite_on_new_instance()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.BindingConfigFixture.Should_allow_overwrite_on_new_instance()", span="1337-1337"];
m2_908 [cluster="Nancy.Tests.Unit.ModelBinding.BindingConfigFixture.Should_allow_overwrite_on_new_instance()", file="DefaultBinderFixture.cs", label="var instance = new BindingConfig()", span="1341-1341"];
m2_909 [cluster="Nancy.Tests.Unit.ModelBinding.BindingConfigFixture.Should_allow_overwrite_on_new_instance()", file="DefaultBinderFixture.cs", label="instance.Overwrite.ShouldBeTrue()", span="1344-1344"];
m2_910 [cluster="Nancy.Tests.Unit.ModelBinding.BindingConfigFixture.Should_allow_overwrite_on_new_instance()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.BindingConfigFixture.Should_allow_overwrite_on_new_instance()", span="1337-1337"];
m2_904 [cluster="Nancy.Tests.Fakes.FakeRequest.FakeRequest(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, Nancy.IO.RequestStream, string, string)", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Fakes.FakeRequest.FakeRequest(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, Nancy.IO.RequestStream, string, string)", span="23-23"];
m2_322 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist()", file="DefaultBinderFixture.cs", label="Entry Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist()", span="389-389"];
m2_323 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist()", file="DefaultBinderFixture.cs", label="var binder = this.GetBinder(typeConverters: new[] { new FallbackConverter() })", span="392-392"];
m2_324 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist()", file="DefaultBinderFixture.cs", label="var context = new NancyContext { Request = new FakeRequest(''GET'', ''/'') }", span="393-393"];
m2_327 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist()", file="DefaultBinderFixture.cs", label="var result = (TestModel)binder.Bind(context, typeof(TestModel), null, BindingConfig.Default, ''IntProperty'')", span="398-398"];
m2_325 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist()", file="DefaultBinderFixture.cs", label="context.Request.Form[''StringProperty''] = ''Test''", span="394-394"];
m2_326 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist()", file="DefaultBinderFixture.cs", label="context.Request.Form[''IntProperty''] = ''12''", span="395-395"];
m2_328 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist()", file="DefaultBinderFixture.cs", label="result.StringProperty.ShouldEqual(''Test'')", span="401-401"];
m2_329 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist()", file="DefaultBinderFixture.cs", label="result.IntProperty.ShouldEqual(0)", span="402-402"];
m2_330 [cluster="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist()", file="DefaultBinderFixture.cs", label="Exit Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.Should_not_bind_anything_on_blacklist()", span="389-389"];
m2_912 [file="DefaultBinderFixture.cs", label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", span=""];
m2_913 [file="DefaultBinderFixture.cs", label=deserializer, span=""];
m2_914 [file="DefaultBinderFixture.cs", label=deserializer, span=""];
m2_915 [file="DefaultBinderFixture.cs", label=deserializer, span=""];
m2_916 [file="DefaultBinderFixture.cs", label=deserializer, span=""];
m2_917 [file="DefaultBinderFixture.cs", label=deserializer, span=""];
m2_918 [file="DefaultBinderFixture.cs", label=deserializer, span=""];
m2_919 [file="DefaultBinderFixture.cs", label=deserializer, span=""];
m2_920 [file="DefaultBinderFixture.cs", label=typeConverter, span=""];
m2_921 [file="DefaultBinderFixture.cs", label=typeConverter, span=""];
m2_922 [file="DefaultBinderFixture.cs", label=binder, span=""];
m2_923 [file="DefaultBinderFixture.cs", label=context, span=""];
m2_924 [file="DefaultBinderFixture.cs", label=binder, span=""];
m2_925 [file="DefaultBinderFixture.cs", label=context, span=""];
m2_926 [file="DefaultBinderFixture.cs", label=config, span=""];
m2_927 [file="DefaultBinderFixture.cs", label=deserializer, span=""];
m2_928 [file="DefaultBinderFixture.cs", label=deserializer, span=""];
m2_929 [file="DefaultBinderFixture.cs", label=fakeModule, span=""];
m2_930 [file="DefaultBinderFixture.cs", label=context, span=""];
m2_931 [file="DefaultBinderFixture.cs", label=fakeModelBinderLocator, span=""];
m2_932 [file="DefaultBinderFixture.cs", label=deserializer, span=""];
m2_933 [file="DefaultBinderFixture.cs", label=typeConverter, span=""];
m2_934 [file="DefaultBinderFixture.cs", label=userDeserializer, span=""];
m2_935 [file="DefaultBinderFixture.cs", label=defaultDeserializer, span=""];
m2_936 [file="DefaultBinderFixture.cs", label=userTypeConverter, span=""];
m2_937 [file="DefaultBinderFixture.cs", label=defaultTypeConverter, span=""];
m2_938 [file="DefaultBinderFixture.cs", label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.TestModel", span=""];
m3_9 [cluster="Nancy.Routing.Route.Invoke(Nancy.DynamicDictionary)", file="DefaultRoutePatternMatcherFixture.cs", label="Entry Nancy.Routing.Route.Invoke(Nancy.DynamicDictionary)", span="54-54"];
m3_10 [cluster="Nancy.Routing.Route.Invoke(Nancy.DynamicDictionary)", file="DefaultRoutePatternMatcherFixture.cs", label="return this.Action.Invoke(parameters);", span="56-56"];
m3_11 [cluster="Nancy.Routing.Route.Invoke(Nancy.DynamicDictionary)", file="DefaultRoutePatternMatcherFixture.cs", label="Exit Nancy.Routing.Route.Invoke(Nancy.DynamicDictionary)", span="54-54"];
m3_6 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="DefaultRoutePatternMatcherFixture.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m3_12 [cluster="System.Func<T, TResult>.Invoke(T)", file="DefaultRoutePatternMatcherFixture.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m3_0 [cluster="Nancy.Routing.Route.Route(Nancy.Routing.RouteDescription, System.Func<dynamic, dynamic>)", file="DefaultRoutePatternMatcherFixture.cs", label="Entry Nancy.Routing.Route.Route(Nancy.Routing.RouteDescription, System.Func<dynamic, dynamic>)", span="14-14"];
m3_1 [cluster="Nancy.Routing.Route.Route(Nancy.Routing.RouteDescription, System.Func<dynamic, dynamic>)", file="DefaultRoutePatternMatcherFixture.cs", label="action == null", span="16-16"];
m3_3 [cluster="Nancy.Routing.Route.Route(Nancy.Routing.RouteDescription, System.Func<dynamic, dynamic>)", file="DefaultRoutePatternMatcherFixture.cs", label="this.Description = description", span="21-21"];
m3_4 [cluster="Nancy.Routing.Route.Route(Nancy.Routing.RouteDescription, System.Func<dynamic, dynamic>)", file="DefaultRoutePatternMatcherFixture.cs", label="this.Action = action", span="22-22"];
m3_2 [cluster="Nancy.Routing.Route.Route(Nancy.Routing.RouteDescription, System.Func<dynamic, dynamic>)", file="DefaultRoutePatternMatcherFixture.cs", label="throw new ArgumentNullException(''action'');", span="18-18"];
m3_5 [cluster="Nancy.Routing.Route.Route(Nancy.Routing.RouteDescription, System.Func<dynamic, dynamic>)", file="DefaultRoutePatternMatcherFixture.cs", label="Exit Nancy.Routing.Route.Route(Nancy.Routing.RouteDescription, System.Func<dynamic, dynamic>)", span="14-14"];
m3_7 [cluster="Nancy.Routing.Route.Route(string, string, System.Func<Nancy.NancyContext, bool>, System.Func<dynamic, dynamic>)", file="DefaultRoutePatternMatcherFixture.cs", label="Entry Nancy.Routing.Route.Route(string, string, System.Func<Nancy.NancyContext, bool>, System.Func<dynamic, dynamic>)", span="32-32"];
m3_8 [cluster="Nancy.Routing.Route.Route(string, string, System.Func<Nancy.NancyContext, bool>, System.Func<dynamic, dynamic>)", file="DefaultRoutePatternMatcherFixture.cs", label="Exit Nancy.Routing.Route.Route(string, string, System.Func<Nancy.NancyContext, bool>, System.Func<dynamic, dynamic>)", span="32-32"];
m3_13 [file="DefaultRoutePatternMatcherFixture.cs", label="Nancy.Routing.Route", span=""];
m4_104 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_allowed_method_on_response_when_returning_405()", file="DefaultRouteResolverFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_allowed_method_on_response_when_returning_405()", span="224-224"];
m4_107 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_allowed_method_on_response_when_returning_405()", file="DefaultRouteResolverFixture.cs", label="var result = localBrowser.Get(''/'')", span="231-231"];
m4_108 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_allowed_method_on_response_when_returning_405()", file="DefaultRouteResolverFixture.cs", label="result.Headers[''Allow''].ShouldEqual(''DELETE, POST'')", span="234-234"];
m4_106 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_allowed_method_on_response_when_returning_405()", file="DefaultRouteResolverFixture.cs", label="var localBrowser = new Browser(with => with.Module<MethodNotAllowedModule>())", span="228-228"];
m4_105 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_allowed_method_on_response_when_returning_405()", file="DefaultRouteResolverFixture.cs", label="StaticConfiguration.DisableMethodNotAllowedResponses = false", span="227-227"];
m4_109 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_allowed_method_on_response_when_returning_405()", file="DefaultRouteResolverFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_set_allowed_method_on_response_when_returning_405()", span="224-224"];
m4_26 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_resolve_multi_literal()", file="DefaultRouteResolverFixture.cs", label="result.Body.AsString().ShouldEqual(''MultipleLiteral'')", span="55-55"];
m4_95 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_405_if_requested_method_is_not_permitted_but_others_are_available_and_disabled()", file="DefaultRouteResolverFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_405_if_requested_method_is_not_permitted_but_others_are_available_and_disabled()", span="210-210"];
m4_98 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_405_if_requested_method_is_not_permitted_but_others_are_available_and_disabled()", file="DefaultRouteResolverFixture.cs", label="var result = localBrowser.Get(''/'')", span="217-217"];
m4_99 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_405_if_requested_method_is_not_permitted_but_others_are_available_and_disabled()", file="DefaultRouteResolverFixture.cs", label="result.StatusCode.ShouldEqual(HttpStatusCode.NotFound)", span="220-220"];
m4_97 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_405_if_requested_method_is_not_permitted_but_others_are_available_and_disabled()", file="DefaultRouteResolverFixture.cs", label="var localBrowser = new Browser(with => with.Module<MethodNotAllowedModule>())", span="214-214"];
m4_96 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_405_if_requested_method_is_not_permitted_but_others_are_available_and_disabled()", file="DefaultRouteResolverFixture.cs", label="StaticConfiguration.DisableMethodNotAllowedResponses = true", span="213-213"];
m4_100 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_405_if_requested_method_is_not_permitted_but_others_are_available_and_disabled()", file="DefaultRouteResolverFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_not_return_405_if_requested_method_is_not_permitted_but_others_are_available_and_disabled()", span="210-210"];
m4_12 [cluster="lambda expression", file="DefaultRouteResolverFixture.cs", label="Exit lambda expression", span="14-28"];
m4_52 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_capture_greedy_in_middle()", file="DefaultRouteResolverFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_capture_greedy_in_middle()", span="125-125"];
m4_53 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_capture_greedy_in_middle()", file="DefaultRouteResolverFixture.cs", label="var result = this.browser.Get(''/bleh/this/is/some/stuff/bar'')", span="129-129"];
m4_54 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_capture_greedy_in_middle()", file="DefaultRouteResolverFixture.cs", label="result.Body.AsString().ShouldEqual(''GreedyInMiddle this/is/some/stuff'')", span="132-132"];
m4_55 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_capture_greedy_in_middle()", file="DefaultRouteResolverFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_capture_greedy_in_middle()", span="125-125"];
m4_40 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_resolve_optional_capture_with_default_with_optional_specified()", file="DefaultRouteResolverFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_resolve_optional_capture_with_default_with_optional_specified()", span="92-92"];
m4_41 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_resolve_optional_capture_with_default_with_optional_specified()", file="DefaultRouteResolverFixture.cs", label="var result = this.browser.Get(''/boo/badger/laa'')", span="96-96"];
m4_42 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_resolve_optional_capture_with_default_with_optional_specified()", file="DefaultRouteResolverFixture.cs", label="result.Body.AsString().ShouldEqual(''OptionalCaptureWithDefault badger'')", span="99-99"];
m4_43 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_resolve_optional_capture_with_default_with_optional_specified()", file="DefaultRouteResolverFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_resolve_optional_capture_with_default_with_optional_specified()", span="92-92"];
m4_19 [cluster="Nancy.Responses.RedirectResponse.RedirectResponse(string)", file="DefaultRouteResolverFixture.cs", label="Entry Nancy.Responses.RedirectResponse.RedirectResponse(string)", span="15-15"];
m4_77 [cluster="string.ShouldContain(string)", file="DefaultRouteResolverFixture.cs", label="Entry string.ShouldContain(string)", span="65-65"];
m4_8 [cluster="lambda expression", color=red, community=0, file="DefaultRouteResolverFixture.cs", label="0: username.HasValue", span="21-21"];
m4_9 [cluster="lambda expression", file="DefaultRouteResolverFixture.cs", label="ctx.Items[Nancy.Security.SecurityConventions.AuthenticatedUsernameKey] = username.ToString()", span="23-23"];
m4_10 [cluster="lambda expression", file="DefaultRouteResolverFixture.cs", label="ctx.Items[Nancy.Security.SecurityConventions.AuthenticatedClaimsKey] = BuildClaims(username.ToString())", span="24-24"];
m4_11 [cluster="lambda expression", file="DefaultRouteResolverFixture.cs", label="return null;", span="27-27"];
m4_0 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", file="DefaultRouteResolverFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", span="9-9"];
m4_1 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", file="DefaultRouteResolverFixture.cs", label="this.browser = new Browser(with => with.Module<TestModule>())", span="11-11"];
m4_2 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", color=red, community=0, file="DefaultRouteResolverFixture.cs", label="0: Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.DefaultRouteResolverFixture()", span="9-9"];
m4_3 [cluster="Nancy.Testing.Browser.Browser(System.Action<Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator>)", color=red, community=0, file="DefaultRouteResolverFixture.cs", label="0: Entry Nancy.Testing.Browser.Browser(System.Action<Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator>)", span="26-26"];
m4_4 [cluster="lambda expression", file="DefaultRouteResolverFixture.cs", label="Entry lambda expression", span="11-11"];
m4_86 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_405_if_requested_method_is_not_permitted_but_others_are_available_and_not_disabled()", file="DefaultRouteResolverFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_405_if_requested_method_is_not_permitted_but_others_are_available_and_not_disabled()", span="196-196"];
m4_89 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_405_if_requested_method_is_not_permitted_but_others_are_available_and_not_disabled()", file="DefaultRouteResolverFixture.cs", label="var result = localBrowser.Get(''/'')", span="203-203"];
m4_90 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_405_if_requested_method_is_not_permitted_but_others_are_available_and_not_disabled()", file="DefaultRouteResolverFixture.cs", label="result.StatusCode.ShouldEqual(HttpStatusCode.MethodNotAllowed)", span="206-206"];
m4_88 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_405_if_requested_method_is_not_permitted_but_others_are_available_and_not_disabled()", file="DefaultRouteResolverFixture.cs", label="var localBrowser = new Browser(with => with.Module<MethodNotAllowedModule>())", span="200-200"];
m4_87 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_405_if_requested_method_is_not_permitted_but_others_are_available_and_not_disabled()", file="DefaultRouteResolverFixture.cs", label="StaticConfiguration.DisableMethodNotAllowedResponses = false", span="199-199"];
m4_91 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_405_if_requested_method_is_not_permitted_but_others_are_available_and_not_disabled()", file="DefaultRouteResolverFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_405_if_requested_method_is_not_permitted_but_others_are_available_and_not_disabled()", span="196-196"];
m4_14 [cluster="Nancy.Demo.Authentication.AuthenticationBootstrapper.BuildClaims(string)", file="DefaultRouteResolverFixture.cs", label="Entry Nancy.Demo.Authentication.AuthenticationBootstrapper.BuildClaims(string)", span="46-46"];
m4_69 [cluster="Nancy.Testing.Browser.Head(string, System.Action<Nancy.Testing.BrowserContext>)", file="DefaultRouteResolverFixture.cs", label="Entry Nancy.Testing.Browser.Head(string, System.Action<Nancy.Testing.BrowserContext>)", span="70-70"];
m4_7 [cluster="lambda expression", file="DefaultRouteResolverFixture.cs", label="var username = ctx.Request.Query.username", span="19-19"];
m4_15 [cluster="lambda expression", file="DefaultRouteResolverFixture.cs", label="Entry lambda expression", span="30-38"];
m4_16 [cluster="lambda expression", color=green, community=0, file="DefaultRouteResolverFixture.cs", label="0: ctx.Response.StatusCode == HttpStatusCode.Unauthorized", span="34-34"];
m4_17 [cluster="lambda expression", file="DefaultRouteResolverFixture.cs", label="ctx.Response = new RedirectResponse(''/login?returnUrl='' + Uri.EscapeDataString(ctx.Request.Path))", span="36-36"];
m4_18 [cluster="lambda expression", file="DefaultRouteResolverFixture.cs", label="Exit lambda expression", span="30-38"];
m4_13 [cluster="Unk.ToString", file="DefaultRouteResolverFixture.cs", label="Entry Unk.ToString", span=""];
m4_20 [cluster="System.Uri.EscapeDataString(string)", file="DefaultRouteResolverFixture.cs", label="Entry System.Uri.EscapeDataString(string)", span="0-0"];
m4_21 [cluster="Nancy.Demo.Authentication.AuthenticationBootstrapper.BuildClaims(string)", color=green, community=0, file="DefaultRouteResolverFixture.cs", label="0: var claims = new List<string>()", span="48-48"];
m4_22 [cluster="Nancy.Demo.Authentication.AuthenticationBootstrapper.BuildClaims(string)", color=red, community=0, file="DefaultRouteResolverFixture.cs", label="0: String.Equals(userName, ''bob'', StringComparison.InvariantCultureIgnoreCase)", span="51-51"];
m4_23 [cluster="Nancy.Demo.Authentication.AuthenticationBootstrapper.BuildClaims(string)", file="DefaultRouteResolverFixture.cs", label="claims.Add(''SuperSecure'')", span="53-53"];
m4_24 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_resolve_multi_literal()", file="DefaultRouteResolverFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_resolve_multi_literal()", span="48-48"];
m4_25 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_resolve_multi_literal()", color=green, community=0, file="DefaultRouteResolverFixture.cs", label="0: var result = this.browser.Get(''/foo/bar/baz'')", span="52-52"];
m4_36 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_resolve_optional_capture_with_optional_not_specified()", file="DefaultRouteResolverFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_resolve_optional_capture_with_optional_not_specified()", span="81-81"];
m4_37 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_resolve_optional_capture_with_optional_not_specified()", file="DefaultRouteResolverFixture.cs", label="var result = this.browser.Get(''/moo/moo'')", span="85-85"];
m4_38 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_resolve_optional_capture_with_optional_not_specified()", file="DefaultRouteResolverFixture.cs", label="result.Body.AsString().ShouldEqual(''OptionalCapture default'')", span="88-88"];
m4_39 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_resolve_optional_capture_with_optional_not_specified()", file="DefaultRouteResolverFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_resolve_optional_capture_with_optional_not_specified()", span="81-81"];
m4_56 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_capture_greedy_and_normal_capture()", file="DefaultRouteResolverFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_capture_greedy_and_normal_capture()", span="136-136"];
m4_57 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_capture_greedy_and_normal_capture()", color=green, community=0, file="DefaultRouteResolverFixture.cs", label="0: var result = this.browser.Get(''/greedy/this/is/some/stuff/badger/blah'')", span="140-140"];
m4_58 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_capture_greedy_and_normal_capture()", color=green, community=0, file="DefaultRouteResolverFixture.cs", label="0: result.Body.AsString().ShouldEqual(''GreedyAndCapture this/is/some/stuff blah'')", span="143-143"];
m4_59 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_capture_greedy_and_normal_capture()", file="DefaultRouteResolverFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_capture_greedy_and_normal_capture()", span="136-136"];
m4_60 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_capture_regex()", file="DefaultRouteResolverFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_capture_regex()", span="147-147"];
m4_61 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_capture_regex()", color=green, community=0, file="DefaultRouteResolverFixture.cs", label="0: var result = this.browser.Get(''/regex/123/moo'')", span="151-151"];
m4_62 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_capture_regex()", color=green, community=0, file="DefaultRouteResolverFixture.cs", label="0: result.Body.AsString().ShouldEqual(''RegEx 123 moo'')", span="154-154"];
m4_63 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_capture_regex()", file="DefaultRouteResolverFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_capture_regex()", span="147-147"];
m4_78 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_404_if_no_root_found_when_requesting_it()", file="DefaultRouteResolverFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_404_if_no_root_found_when_requesting_it()", span="183-183"];
m4_81 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_404_if_no_root_found_when_requesting_it()", color=green, community=0, file="DefaultRouteResolverFixture.cs", label="2: result.StatusCode.ShouldEqual(HttpStatusCode.NotFound)", span="192-192"];
m4_80 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_404_if_no_root_found_when_requesting_it()", file="DefaultRouteResolverFixture.cs", label="var result = localBrowser.Get(''/'')", span="189-189"];
m4_79 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_404_if_no_root_found_when_requesting_it()", file="DefaultRouteResolverFixture.cs", label="var localBrowser = new Browser(with => with.Module<NoRootModule>())", span="186-186"];
m4_82 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_404_if_no_root_found_when_requesting_it()", file="DefaultRouteResolverFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_return_404_if_no_root_found_when_requesting_it()", span="183-183"];
m4_44 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_resolve_optional_capture_with_default_with_optional_not_specified()", file="DefaultRouteResolverFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_resolve_optional_capture_with_default_with_optional_not_specified()", span="103-103"];
m4_45 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_resolve_optional_capture_with_default_with_optional_not_specified()", file="DefaultRouteResolverFixture.cs", label="var result = this.browser.Get(''/boo/laa'')", span="107-107"];
m4_46 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_resolve_optional_capture_with_default_with_optional_not_specified()", file="DefaultRouteResolverFixture.cs", label="result.Body.AsString().ShouldEqual(''OptionalCaptureWithDefault test'')", span="110-110"];
m4_47 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_resolve_optional_capture_with_default_with_optional_not_specified()", file="DefaultRouteResolverFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_resolve_optional_capture_with_default_with_optional_not_specified()", span="103-103"];
m4_5 [cluster="lambda expression", file="DefaultRouteResolverFixture.cs", label="with.Module<TestModule>()", span="11-11"];
m4_110 [cluster="lambda expression", file="DefaultRouteResolverFixture.cs", label="Entry lambda expression", span="228-228"];
m4_6 [cluster="lambda expression", file="DefaultRouteResolverFixture.cs", label="Exit lambda expression", span="11-11"];
m4_84 [cluster="lambda expression", file="DefaultRouteResolverFixture.cs", label="with.Module<NoRootModule>()", span="186-186"];
m4_93 [cluster="lambda expression", file="DefaultRouteResolverFixture.cs", label="with.Module<MethodNotAllowedModule>()", span="200-200"];
m4_102 [cluster="lambda expression", file="DefaultRouteResolverFixture.cs", label="with.Module<MethodNotAllowedModule>()", span="214-214"];
m4_111 [cluster="lambda expression", file="DefaultRouteResolverFixture.cs", label="with.Module<MethodNotAllowedModule>()", span="228-228"];
m4_83 [cluster="lambda expression", file="DefaultRouteResolverFixture.cs", label="Entry lambda expression", span="186-186"];
m4_85 [cluster="lambda expression", file="DefaultRouteResolverFixture.cs", label="Exit lambda expression", span="186-186"];
m4_92 [cluster="lambda expression", file="DefaultRouteResolverFixture.cs", label="Entry lambda expression", span="200-200"];
m4_94 [cluster="lambda expression", file="DefaultRouteResolverFixture.cs", label="Exit lambda expression", span="200-200"];
m4_101 [cluster="lambda expression", file="DefaultRouteResolverFixture.cs", label="Entry lambda expression", span="214-214"];
m4_103 [cluster="lambda expression", file="DefaultRouteResolverFixture.cs", label="Exit lambda expression", span="214-214"];
m4_112 [cluster="lambda expression", file="DefaultRouteResolverFixture.cs", label="Exit lambda expression", span="228-228"];
m4_70 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_handle_options_requests()", file="DefaultRouteResolverFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_handle_options_requests()", span="170-170"];
m4_71 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_handle_options_requests()", color=green, community=0, file="DefaultRouteResolverFixture.cs", label="0: var result = this.browser.Options(''/'')", span="174-174"];
m4_72 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_handle_options_requests()", file="DefaultRouteResolverFixture.cs", label="result.StatusCode.ShouldEqual(HttpStatusCode.OK)", span="177-177"];
m4_73 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_handle_options_requests()", color=green, community=0, file="DefaultRouteResolverFixture.cs", label="0: result.Headers[''Allow''].ShouldContain(''GET'')", span="178-178"];
m4_74 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_handle_options_requests()", color=green, community=0, file="DefaultRouteResolverFixture.cs", label="0: result.Headers[''Allow''].ShouldContain(''POST'')", span="179-179"];
m4_75 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_handle_options_requests()", file="DefaultRouteResolverFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_handle_options_requests()", span="170-170"];
m4_27 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_resolve_multi_literal()", file="DefaultRouteResolverFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_resolve_multi_literal()", span="48-48"];
m4_48 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_capture_greedy_on_end()", file="DefaultRouteResolverFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_capture_greedy_on_end()", span="114-114"];
m4_49 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_capture_greedy_on_end()", file="DefaultRouteResolverFixture.cs", label="var result = this.browser.Get(''/bleh/this/is/some/stuff'')", span="118-118"];
m4_50 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_capture_greedy_on_end()", file="DefaultRouteResolverFixture.cs", label="result.Body.AsString().ShouldEqual(''GreedyOnEnd this/is/some/stuff'')", span="121-121"];
m4_51 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_capture_greedy_on_end()", file="DefaultRouteResolverFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_capture_greedy_on_end()", span="114-114"];
m4_64 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_handle_head_requests()", file="DefaultRouteResolverFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_handle_head_requests()", span="158-158"];
m4_67 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_handle_head_requests()", color=green, community=0, file="DefaultRouteResolverFixture.cs", label="0: result.Body.AsString().ShouldEqual(string.Empty)", span="166-166"];
m4_65 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_handle_head_requests()", file="DefaultRouteResolverFixture.cs", label="var result = this.browser.Head(''/'')", span="162-162"];
m4_66 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_handle_head_requests()", file="DefaultRouteResolverFixture.cs", label="result.StatusCode.ShouldEqual(HttpStatusCode.OK)", span="165-165"];
m4_68 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_handle_head_requests()", file="DefaultRouteResolverFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_handle_head_requests()", span="158-158"];
m4_28 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_resolve_single_capture()", file="DefaultRouteResolverFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_resolve_single_capture()", span="59-59"];
m4_76 [cluster="Nancy.Testing.Browser.Options(string, System.Action<Nancy.Testing.BrowserContext>)", file="DefaultRouteResolverFixture.cs", label="Entry Nancy.Testing.Browser.Options(string, System.Action<Nancy.Testing.BrowserContext>)", span="81-81"];
m4_32 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_resolve_optional_capture_with_optional_specified()", file="DefaultRouteResolverFixture.cs", label="Entry Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_resolve_optional_capture_with_optional_specified()", span="70-70"];
m4_33 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_resolve_optional_capture_with_optional_specified()", color=green, community=0, file="DefaultRouteResolverFixture.cs", label="0: var result = this.browser.Get(''/moo/hoo/moo'')", span="74-74"];
m4_34 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_resolve_optional_capture_with_optional_specified()", file="DefaultRouteResolverFixture.cs", label="result.Body.AsString().ShouldEqual(''OptionalCapture hoo'')", span="77-77"];
m4_35 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_resolve_optional_capture_with_optional_specified()", file="DefaultRouteResolverFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_resolve_optional_capture_with_optional_specified()", span="70-70"];
m4_29 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_resolve_single_capture()", color=green, community=0, file="DefaultRouteResolverFixture.cs", label="0: Nancy.Demo.Authentication.AuthenticationBootstrapper", span=""];
m4_30 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_resolve_single_capture()", file="DefaultRouteResolverFixture.cs", label="result.Body.AsString().ShouldEqual(''Captured testing'')", span="66-66"];
m4_31 [cluster="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_resolve_single_capture()", file="DefaultRouteResolverFixture.cs", label="Exit Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture.Should_resolve_single_capture()", span="59-59"];
m4_185 [file="DefaultRouteResolverFixture.cs", label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", span=""];
m5_3 [cluster="Nancy.Responses.Negotiation.MediaType.Matches(Nancy.Responses.Negotiation.MediaType)", file="MediaRange.cs", label="Entry Nancy.Responses.Negotiation.MediaType.Matches(Nancy.Responses.Negotiation.MediaType)", span="37-37"];
m5_30 [cluster="System.Collections.IEnumerator.MoveNext()", file="MediaRange.cs", label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0"];
m5_19 [cluster="Nancy.BeforePipeline.operator +(Nancy.BeforePipeline, Nancy.BeforePipeline)", file="MediaRange.cs", label="return pipelineToAddTo;", span="64-64"];
m5_20 [cluster="Nancy.BeforePipeline.operator +(Nancy.BeforePipeline, Nancy.BeforePipeline)", file="MediaRange.cs", label="Exit Nancy.BeforePipeline.operator +(Nancy.BeforePipeline, Nancy.BeforePipeline)", span="61-61"];
m5_21 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="MediaRange.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m5_22 [cluster="Nancy.BeforePipeline.Invoke(Nancy.NancyContext)", file="MediaRange.cs", label="Entry Nancy.BeforePipeline.Invoke(Nancy.NancyContext)", span="77-77"];
m5_23 [cluster="Nancy.BeforePipeline.Invoke(Nancy.NancyContext)", color=red, community=0, file="MediaRange.cs", label="1: Response returnValue = null", span="79-79"];
m5_24 [cluster="Nancy.BeforePipeline.Invoke(Nancy.NancyContext)", color=green, community=0, file="MediaRange.cs", label="0: var enumerator = this.PipelineItems.GetEnumerator()", span="81-81"];
m5_17 [cluster="string.Split(params char[])", file="MediaRange.cs", label="Entry string.Split(params char[])", span="0-0"];
m5_18 [cluster="Nancy.Responses.Negotiation.MediaRange.MediaRange()", color=green, community=0, file="MediaRange.cs", label="3: Entry Nancy.Responses.Negotiation.MediaRange.MediaRange()", span="7-7"];
m5_16 [cluster="Nancy.BeforePipeline.operator +(Nancy.BeforePipeline, System.Func<Nancy.NancyContext, Nancy.Response>)", file="MediaRange.cs", label="Exit Nancy.BeforePipeline.operator +(Nancy.BeforePipeline, System.Func<Nancy.NancyContext, Nancy.Response>)", span="55-55"];
m5_4 [cluster="Nancy.BeforePipeline.implicit operator System.Func<Nancy.NancyContext, Nancy.Response>(Nancy.BeforePipeline)", file="MediaRange.cs", label="Entry Nancy.BeforePipeline.implicit operator System.Func<Nancy.NancyContext, Nancy.Response>(Nancy.BeforePipeline)", span="43-43"];
m5_5 [cluster="Nancy.BeforePipeline.implicit operator System.Func<Nancy.NancyContext, Nancy.Response>(Nancy.BeforePipeline)", file="MediaRange.cs", label="return pipeline.Invoke;", span="45-45"];
m5_6 [cluster="Nancy.BeforePipeline.implicit operator System.Func<Nancy.NancyContext, Nancy.Response>(Nancy.BeforePipeline)", file="MediaRange.cs", label="Exit Nancy.BeforePipeline.implicit operator System.Func<Nancy.NancyContext, Nancy.Response>(Nancy.BeforePipeline)", span="43-43"];
m5_7 [cluster="Nancy.BeforePipeline.implicit operator Nancy.BeforePipeline(System.Func<Nancy.NancyContext, Nancy.Response>)", file="MediaRange.cs", label="Entry Nancy.BeforePipeline.implicit operator Nancy.BeforePipeline(System.Func<Nancy.NancyContext, Nancy.Response>)", span="48-48"];
m5_9 [cluster="Nancy.BeforePipeline.implicit operator Nancy.BeforePipeline(System.Func<Nancy.NancyContext, Nancy.Response>)", color=red, community=0, file="MediaRange.cs", label="0: pipeline.AddItemToEndOfPipeline(func)", span="51-51"];
m5_11 [cluster="Nancy.BeforePipeline.implicit operator Nancy.BeforePipeline(System.Func<Nancy.NancyContext, Nancy.Response>)", file="MediaRange.cs", label="Exit Nancy.BeforePipeline.implicit operator Nancy.BeforePipeline(System.Func<Nancy.NancyContext, Nancy.Response>)", span="48-48"];
m5_8 [cluster="Nancy.BeforePipeline.implicit operator Nancy.BeforePipeline(System.Func<Nancy.NancyContext, Nancy.Response>)", file="MediaRange.cs", label="var pipeline = new BeforePipeline()", span="50-50"];
m5_10 [cluster="Nancy.BeforePipeline.implicit operator Nancy.BeforePipeline(System.Func<Nancy.NancyContext, Nancy.Response>)", color=red, community=0, file="MediaRange.cs", label="0: return pipeline;", span="52-52"];
m5_12 [cluster="Nancy.BeforePipeline.AddItemToEndOfPipeline(System.Func<Nancy.NancyContext, Nancy.Response>)", color=red, community=0, file="MediaRange.cs", label="1: Entry Nancy.BeforePipeline.AddItemToEndOfPipeline(System.Func<Nancy.NancyContext, Nancy.Response>)", span="105-105"];
m5_13 [cluster="Nancy.BeforePipeline.operator +(Nancy.BeforePipeline, System.Func<Nancy.NancyContext, Nancy.Response>)", file="MediaRange.cs", label="Entry Nancy.BeforePipeline.operator +(Nancy.BeforePipeline, System.Func<Nancy.NancyContext, Nancy.Response>)", span="55-55"];
m5_0 [cluster="Nancy.Responses.Negotiation.MediaRange.Matches(Nancy.Responses.Negotiation.MediaRange)", file="MediaRange.cs", label="Entry Nancy.Responses.Negotiation.MediaRange.Matches(Nancy.Responses.Negotiation.MediaRange)", span="35-35"];
m5_1 [cluster="Nancy.Responses.Negotiation.MediaRange.Matches(Nancy.Responses.Negotiation.MediaRange)", color=green, community=0, file="MediaRange.cs", label="0: return this.Type.Matches(other.Type) && this.Subtype.Matches(other.Subtype);", span="37-37"];
m5_2 [cluster="Nancy.Responses.Negotiation.MediaRange.Matches(Nancy.Responses.Negotiation.MediaRange)", file="MediaRange.cs", label="Exit Nancy.Responses.Negotiation.MediaRange.Matches(Nancy.Responses.Negotiation.MediaRange)", span="35-35"];
m5_31 [cluster="System.Func<T, TResult>.Invoke(T)", file="MediaRange.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m5_32 [cluster="Nancy.BeforePipeline.AddItemToStartOfPipeline(System.Func<Nancy.NancyContext, Nancy.Response>)", file="MediaRange.cs", label="Entry Nancy.BeforePipeline.AddItemToStartOfPipeline(System.Func<Nancy.NancyContext, Nancy.Response>)", span="96-96"];
m5_33 [cluster="Nancy.BeforePipeline.AddItemToStartOfPipeline(System.Func<Nancy.NancyContext, Nancy.Response>)", color=green, community=0, file="MediaRange.cs", label="1: this.InsertItemAtPipelineIndex(0, item)", span="98-98"];
m5_34 [cluster="Nancy.BeforePipeline.AddItemToStartOfPipeline(System.Func<Nancy.NancyContext, Nancy.Response>)", file="MediaRange.cs", label="Exit Nancy.BeforePipeline.AddItemToStartOfPipeline(System.Func<Nancy.NancyContext, Nancy.Response>)", span="96-96"];
m5_41 [cluster="System.Collections.Generic.List<T>.Insert(int, T)", file="MediaRange.cs", label="Entry System.Collections.Generic.List<T>.Insert(int, T)", span="0-0"];
m5_36 [cluster="Nancy.BeforePipeline.AddItemToEndOfPipeline(System.Func<Nancy.NancyContext, Nancy.Response>)", file="MediaRange.cs", label="this.pipelineItems.Add(item)", span="107-107"];
m5_37 [cluster="Nancy.BeforePipeline.AddItemToEndOfPipeline(System.Func<Nancy.NancyContext, Nancy.Response>)", file="MediaRange.cs", label="Exit Nancy.BeforePipeline.AddItemToEndOfPipeline(System.Func<Nancy.NancyContext, Nancy.Response>)", span="105-105"];
m5_26 [cluster="Nancy.BeforePipeline.Invoke(Nancy.NancyContext)", file="MediaRange.cs", label="returnValue = enumerator.Current.Invoke(context)", span="85-85"];
m5_27 [cluster="Nancy.BeforePipeline.Invoke(Nancy.NancyContext)", file="MediaRange.cs", label="return returnValue;", span="89-89"];
m5_28 [cluster="Nancy.BeforePipeline.Invoke(Nancy.NancyContext)", file="MediaRange.cs", label="Exit Nancy.BeforePipeline.Invoke(Nancy.NancyContext)", span="77-77"];
m5_14 [cluster="Nancy.BeforePipeline.operator +(Nancy.BeforePipeline, System.Func<Nancy.NancyContext, Nancy.Response>)", color=green, community=0, file="MediaRange.cs", label="0: pipeline.AddItemToEndOfPipeline(func)", span="57-57"];
m5_15 [cluster="System.ArgumentException.ArgumentException(string, string)", color=green, community=0, file="MediaRange.cs", label="4: Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m5_25 [cluster="string.Concat(string, string, string)", color=green, community=0, file="MediaRange.cs", label="0: Entry string.Concat(string, string, string)", span="0-0"];
m5_38 [cluster="System.Collections.Generic.List<T>.Add(T)", file="MediaRange.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m5_29 [cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()", file="MediaRange.cs", label="Nancy.Responses.Negotiation.MediaRange", span=""];
m5_35 [cluster="Nancy.BeforePipeline.InsertItemAtPipelineIndex(int, System.Func<Nancy.NancyContext, Nancy.Response>)", file="MediaRange.cs", label="Entry Nancy.BeforePipeline.InsertItemAtPipelineIndex(int, System.Func<Nancy.NancyContext, Nancy.Response>)", span="115-115"];
m5_39 [cluster="Nancy.BeforePipeline.InsertItemAtPipelineIndex(int, System.Func<Nancy.NancyContext, Nancy.Response>)", file="MediaRange.cs", label="this.pipelineItems.Insert(index, item)", span="117-117"];
m5_40 [cluster="Nancy.BeforePipeline.InsertItemAtPipelineIndex(int, System.Func<Nancy.NancyContext, Nancy.Response>)", file="MediaRange.cs", label="Exit Nancy.BeforePipeline.InsertItemAtPipelineIndex(int, System.Func<Nancy.NancyContext, Nancy.Response>)", span="115-115"];
m5_42 [file="MediaRange.cs", label="Nancy.BeforePipeline", span=""];
m8_28 [cluster="Nancy.NancyEngine.HandleRequest(Nancy.Request, System.Func<Nancy.NancyContext, Nancy.NancyContext>)", file="NancyEngine.cs", label="task.Wait()", span="103-103"];
m8_12 [cluster="Nancy.NancyEngine.NancyEngine(Nancy.Routing.IRequestDispatcher, Nancy.INancyContextFactory, System.Collections.Generic.IEnumerable<Nancy.ErrorHandling.IStatusCodeHandler>, Nancy.Diagnostics.IRequestTracing, Nancy.Diagnostics.DiagnosticsConfiguration, Nancy.IStaticContentProvider)", file="NancyEngine.cs", label="this.staticContentProvider = staticContentProvider", span="63-63"];
m8_68 [cluster="Nancy.NancyEngine.ExecuteRoutePreReq(Nancy.NancyContext, System.Func<Nancy.NancyContext, Nancy.Response>)", file="NancyEngine.cs", label="Entry Nancy.NancyEngine.ExecuteRoutePreReq(Nancy.NancyContext, System.Func<Nancy.NancyContext, Nancy.Response>)", span="174-174"];
m8_72 [cluster="lambda expression", file="NancyEngine.cs", label="this.CheckStatusCodeHandler(completeTask.Result)", span="164-164"];
m8_74 [cluster="lambda expression", file="NancyEngine.cs", label="tcs.SetResult(completeTask.Result)", span="168-168"];
m8_76 [cluster="Nancy.NancyEngine.CheckStatusCodeHandler(Nancy.NancyContext)", file="NancyEngine.cs", label="Entry Nancy.NancyEngine.CheckStatusCodeHandler(Nancy.NancyContext)", span="239-239"];
m8_73 [cluster="lambda expression", file="NancyEngine.cs", label="this.SaveTraceInformation(completeTask.Result)", span="166-166"];
m8_75 [cluster="lambda expression", file="NancyEngine.cs", label="Exit lambda expression", span="162-169"];
m8_77 [cluster="Nancy.NancyEngine.SaveTraceInformation(Nancy.NancyContext)", file="NancyEngine.cs", label="Entry Nancy.NancyEngine.SaveTraceInformation(Nancy.NancyContext)", span="179-179"];
m8_176 [cluster="Nancy.BeforePipeline.Invoke(Nancy.NancyContext, System.Threading.CancellationToken)", file="NancyEngine.cs", label="Entry Nancy.BeforePipeline.Invoke(Nancy.NancyContext, System.Threading.CancellationToken)", span="52-52"];
m8_101 [cluster="Nancy.NancyEngine.UpdateTraceCookie(Nancy.NancyContext, System.Guid)", file="NancyEngine.cs", label="Entry Nancy.NancyEngine.UpdateTraceCookie(Nancy.NancyContext, System.Guid)", span="233-233"];
m8_125 [cluster="Nancy.NancyEngine.UpdateTraceCookie(Nancy.NancyContext, System.Guid)", file="NancyEngine.cs", label="var cookie = new NancyCookie(''__NCTRACE'', sessionGuid.ToString(), true) { Expires = DateTime.Now.AddMinutes(30) }", span="235-235"];
m8_126 [cluster="Nancy.NancyEngine.UpdateTraceCookie(Nancy.NancyContext, System.Guid)", file="NancyEngine.cs", label="ctx.Response.AddCookie(cookie)", span="236-236"];
m8_127 [cluster="Nancy.NancyEngine.UpdateTraceCookie(Nancy.NancyContext, System.Guid)", file="NancyEngine.cs", label="Exit Nancy.NancyEngine.UpdateTraceCookie(Nancy.NancyContext, System.Guid)", span="233-233"];
m8_130 [cluster="System.DateTime.AddMinutes(double)", file="NancyEngine.cs", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
m8_49 [cluster="Nancy.NancyEngine.HandleRequestInternal(Nancy.Request, System.Func<Nancy.NancyContext, Nancy.NancyContext>)", file="NancyEngine.cs", label="var context = this.contextFactory.Create(request)", span="137-137"];
m8_56 [cluster="Nancy.NancyEngine.HandleRequestInternal(Nancy.Request, System.Func<Nancy.NancyContext, Nancy.NancyContext>)", file="NancyEngine.cs", label="return tcs.Task;", span="149-149"];
m8_59 [cluster="Nancy.NancyEngine.HandleRequestInternal(Nancy.Request, System.Func<Nancy.NancyContext, Nancy.NancyContext>)", file="NancyEngine.cs", label="context.Items[''CANCELLATION_TOKEN''] = cancellationToken", span="157-157"];
m8_60 [cluster="Nancy.NancyEngine.HandleRequestInternal(Nancy.Request, System.Func<Nancy.NancyContext, Nancy.NancyContext>)", file="NancyEngine.cs", label="var task = this.InvokeRequestLifeCycle(context, cancellationToken, pipelines)", span="159-159"];
m8_61 [cluster="Nancy.NancyEngine.HandleRequestInternal(Nancy.Request, System.Func<Nancy.NancyContext, Nancy.NancyContext>)", file="NancyEngine.cs", label="task.WhenCompleted(\r\n                completeTask =>\r\n                {\r\n                    this.CheckStatusCodeHandler(completeTask.Result);\r\n\r\n                    this.SaveTraceInformation(completeTask.Result);\r\n\r\n                    tcs.SetResult(completeTask.Result);\r\n                },\r\n                errorTask =>\r\n                {\r\n                    tcs.SetException(errorTask.Exception);\r\n                },\r\n                true)", span="161-174"];
m8_62 [cluster="Nancy.NancyEngine.HandleRequestInternal(Nancy.Request, System.Func<Nancy.NancyContext, Nancy.NancyContext>)", file="NancyEngine.cs", label="return tcs.Task;", span="176-176"];
m8_63 [cluster="Nancy.NancyEngine.HandleRequestInternal(Nancy.Request, System.Func<Nancy.NancyContext, Nancy.NancyContext>)", file="NancyEngine.cs", label="Exit Nancy.NancyEngine.HandleRequestInternal(Nancy.Request, System.Func<Nancy.NancyContext, Nancy.NancyContext>)", span="126-126"];
m8_65 [cluster="Nancy.INancyContextFactory.Create(Nancy.Request)", file="NancyEngine.cs", label="Entry Nancy.INancyContextFactory.Create(Nancy.Request)", span="11-11"];
m8_57 [cluster="Nancy.NancyEngine.HandleRequestInternal(Nancy.Request, System.Func<Nancy.NancyContext, Nancy.NancyContext>)", file="NancyEngine.cs", label="var pipelines =\r\n                this.RequestPipelinesFactory.Invoke(context)", span="152-153"];
m8_58 [cluster="Nancy.NancyEngine.HandleRequestInternal(Nancy.Request, System.Func<Nancy.NancyContext, Nancy.NancyContext>)", file="NancyEngine.cs", label="var cancellationToken = new CancellationToken()", span="156-156"];
m8_64 [cluster="System.Threading.Tasks.TaskCompletionSource<TResult>.TaskCompletionSource()", file="NancyEngine.cs", label="Entry System.Threading.Tasks.TaskCompletionSource<TResult>.TaskCompletionSource()", span="0-0"];
m8_66 [cluster="System.Func<T, TResult>.Invoke(T)", file="NancyEngine.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m8_145 [cluster="Nancy.NancyEngine.InvokePreRequestHook(Nancy.NancyContext, System.Threading.CancellationToken, Nancy.BeforePipeline)", file="NancyEngine.cs", label="Entry Nancy.NancyEngine.InvokePreRequestHook(Nancy.NancyContext, System.Threading.CancellationToken, Nancy.BeforePipeline)", span="300-300"];
m8_172 [cluster="Nancy.NancyEngine.InvokePreRequestHook(Nancy.NancyContext, System.Threading.CancellationToken, Nancy.BeforePipeline)", file="NancyEngine.cs", label="pipeline == null", span="302-302"];
m8_174 [cluster="Nancy.NancyEngine.InvokePreRequestHook(Nancy.NancyContext, System.Threading.CancellationToken, Nancy.BeforePipeline)", file="NancyEngine.cs", label="return pipeline.Invoke(context, cancellationToken);", span="307-307"];
m8_173 [cluster="Nancy.NancyEngine.InvokePreRequestHook(Nancy.NancyContext, System.Threading.CancellationToken, Nancy.BeforePipeline)", file="NancyEngine.cs", label="return TaskHelpers.GetCompletedTask<Response>(null);", span="304-304"];
m8_175 [cluster="Nancy.NancyEngine.InvokePreRequestHook(Nancy.NancyContext, System.Threading.CancellationToken, Nancy.BeforePipeline)", file="NancyEngine.cs", label="Exit Nancy.NancyEngine.InvokePreRequestHook(Nancy.NancyContext, System.Threading.CancellationToken, Nancy.BeforePipeline)", span="300-300"];
m8_179 [cluster="Nancy.Helpers.TaskHelpers.GetCompletedTask()", file="NancyEngine.cs", label="Entry Nancy.Helpers.TaskHelpers.GetCompletedTask()", span="10-10"];
m8_14 [cluster="Nancy.NancyEngine.HandleRequest(Nancy.Request)", file="NancyEngine.cs", label="request == null", span="70-70"];
m8_11 [cluster="Nancy.NancyEngine.NancyEngine(Nancy.Routing.IRequestDispatcher, Nancy.INancyContextFactory, System.Collections.Generic.IEnumerable<Nancy.ErrorHandling.IStatusCodeHandler>, Nancy.Diagnostics.IRequestTracing, Nancy.Diagnostics.DiagnosticsConfiguration, Nancy.IStaticContentProvider)", file="NancyEngine.cs", label="this.diagnosticsConfiguration = diagnosticsConfiguration", span="62-62"];
m8_38 [cluster="Nancy.NancyEngine.AddNancyVersionHeaderToResponse(Nancy.NancyContext)", file="NancyEngine.cs", label="context.Response.Headers[''Nancy-Version''] = version.ToString()", span="119-119"];
m8_151 [cluster="Nancy.Helpers.TaskHelpers.GetCompletedTask<T>(T)", file="NancyEngine.cs", label="Entry Nancy.Helpers.TaskHelpers.GetCompletedTask<T>(T)", span="15-15"];
m8_71 [cluster="lambda expression", file="NancyEngine.cs", label="Entry lambda expression", span="162-169"];
m8_134 [cluster="Nancy.NancyEngine.CheckStatusCodeHandler(Nancy.NancyContext)", file="NancyEngine.cs", label="this.statusCodeHandlers", span="246-246"];
m8_132 [cluster="Nancy.NancyEngine.CheckStatusCodeHandler(Nancy.NancyContext)", file="NancyEngine.cs", label="context.Response == null", span="241-241"];
m8_135 [cluster="Nancy.NancyEngine.CheckStatusCodeHandler(Nancy.NancyContext)", file="NancyEngine.cs", label="statusCodeHandler.HandlesStatusCode(context.Response.StatusCode, context)", span="248-248"];
m8_136 [cluster="Nancy.NancyEngine.CheckStatusCodeHandler(Nancy.NancyContext)", file="NancyEngine.cs", label="statusCodeHandler.Handle(context.Response.StatusCode, context)", span="250-250"];
m8_133 [cluster="Nancy.NancyEngine.CheckStatusCodeHandler(Nancy.NancyContext)", file="NancyEngine.cs", label="return;", span="243-243"];
m8_137 [cluster="Nancy.NancyEngine.CheckStatusCodeHandler(Nancy.NancyContext)", file="NancyEngine.cs", label="Exit Nancy.NancyEngine.CheckStatusCodeHandler(Nancy.NancyContext)", span="239-239"];
m8_69 [cluster="Nancy.Routing.Route.Invoke(Nancy.DynamicDictionary)", file="NancyEngine.cs", label="Entry Nancy.Routing.Route.Invoke(Nancy.DynamicDictionary)", span="26-26"];
m8_100 [cluster="Nancy.Diagnostics.IRequestTracing.AddRequestDiagnosticToSession(System.Guid, Nancy.NancyContext)", file="NancyEngine.cs", label="Entry Nancy.Diagnostics.IRequestTracing.AddRequestDiagnosticToSession(System.Guid, Nancy.NancyContext)", span="9-9"];
m8_98 [cluster="object.GetType()", file="NancyEngine.cs", label="Entry object.GetType()", span="0-0"];
m8_139 [cluster="Nancy.ErrorHandling.IStatusCodeHandler.Handle(Nancy.HttpStatusCode, Nancy.NancyContext)", file="NancyEngine.cs", label="Entry Nancy.ErrorHandling.IStatusCodeHandler.Handle(Nancy.HttpStatusCode, Nancy.NancyContext)", span="20-20"];
m8_159 [cluster="System.Threading.Tasks.Task.WhenCompleted(System.Action<System.Threading.Tasks.Task>, System.Action<System.Threading.Tasks.Task>, bool)", file="NancyEngine.cs", label="Entry System.Threading.Tasks.Task.WhenCompleted(System.Action<System.Threading.Tasks.Task>, System.Action<System.Threading.Tasks.Task>, bool)", span="60-60"];
m8_35 [cluster="Nancy.NancyEngine.AddNancyVersionHeaderToResponse(Nancy.NancyContext)", file="NancyEngine.cs", label="context.Response == null", span="111-111"];
m8_128 [cluster="Nancy.Cookies.NancyCookie.NancyCookie(string, string, bool)", file="NancyEngine.cs", label="Entry Nancy.Cookies.NancyCookie.NancyCookie(string, string, bool)", span="15-15"];
m8_23 [cluster="Nancy.NancyEngine.InvokeRequestLifeCycle(Nancy.NancyContext)", file="NancyEngine.cs", label="Entry Nancy.NancyEngine.InvokeRequestLifeCycle(Nancy.NancyContext)", span="122-122"];
m8_25 [cluster="Nancy.NancyEngine.HandleRequest(Nancy.Request, System.Action<Nancy.NancyContext>, System.Action<System.Exception>)", file="NancyEngine.cs", label="Exit Nancy.NancyEngine.HandleRequest(Nancy.Request, System.Action<Nancy.NancyContext>, System.Action<System.Exception>)", span="88-88"];
m8_26 [cluster="Nancy.NancyEngine.HandleRequest(Nancy.Request, System.Func<Nancy.NancyContext, Nancy.NancyContext>, System.Action<Nancy.NancyContext>, System.Action<System.Exception>)", file="NancyEngine.cs", label="Entry Nancy.NancyEngine.HandleRequest(Nancy.Request, System.Func<Nancy.NancyContext, Nancy.NancyContext>, System.Action<Nancy.NancyContext>, System.Action<System.Exception>)", span="120-120"];
m8_27 [cluster="Nancy.NancyEngine.HandleRequest(Nancy.Request, System.Func<Nancy.NancyContext, Nancy.NancyContext>)", file="NancyEngine.cs", label="var task = this.HandleRequestInternal(request, preRequest)", span="101-101"];
m8_24 [cluster="Nancy.NancyEngine.AddNancyVersionHeaderToResponse(Nancy.NancyContext)", file="NancyEngine.cs", label="Entry Nancy.NancyEngine.AddNancyVersionHeaderToResponse(Nancy.NancyContext)", span="109-109"];
m8_0 [cluster="Nancy.NancyEngine.NancyEngine(Nancy.Routing.IRequestDispatcher, Nancy.INancyContextFactory, System.Collections.Generic.IEnumerable<Nancy.ErrorHandling.IStatusCodeHandler>, Nancy.Diagnostics.IRequestTracing, Nancy.Diagnostics.DiagnosticsConfiguration, Nancy.IStaticContentProvider)", file="NancyEngine.cs", label="Entry Nancy.NancyEngine.NancyEngine(Nancy.Routing.IRequestDispatcher, Nancy.INancyContextFactory, System.Collections.Generic.IEnumerable<Nancy.ErrorHandling.IStatusCodeHandler>, Nancy.Diagnostics.IRequestTracing, Nancy.Diagnostics.DiagnosticsConfiguration, Nancy.IStaticContentProvider)", span="41-41"];
m8_1 [cluster="Nancy.NancyEngine.NancyEngine(Nancy.Routing.IRequestDispatcher, Nancy.INancyContextFactory, System.Collections.Generic.IEnumerable<Nancy.ErrorHandling.IStatusCodeHandler>, Nancy.Diagnostics.IRequestTracing, Nancy.Diagnostics.DiagnosticsConfiguration, Nancy.IStaticContentProvider)", file="NancyEngine.cs", label="dispatcher == null", span="43-43"];
m8_3 [cluster="Nancy.NancyEngine.NancyEngine(Nancy.Routing.IRequestDispatcher, Nancy.INancyContextFactory, System.Collections.Generic.IEnumerable<Nancy.ErrorHandling.IStatusCodeHandler>, Nancy.Diagnostics.IRequestTracing, Nancy.Diagnostics.DiagnosticsConfiguration, Nancy.IStaticContentProvider)", file="NancyEngine.cs", label="contextFactory == null", span="48-48"];
m8_5 [cluster="Nancy.NancyEngine.NancyEngine(Nancy.Routing.IRequestDispatcher, Nancy.INancyContextFactory, System.Collections.Generic.IEnumerable<Nancy.ErrorHandling.IStatusCodeHandler>, Nancy.Diagnostics.IRequestTracing, Nancy.Diagnostics.DiagnosticsConfiguration, Nancy.IStaticContentProvider)", file="NancyEngine.cs", label="statusCodeHandlers == null", span="53-53"];
m8_7 [cluster="Nancy.NancyEngine.NancyEngine(Nancy.Routing.IRequestDispatcher, Nancy.INancyContextFactory, System.Collections.Generic.IEnumerable<Nancy.ErrorHandling.IStatusCodeHandler>, Nancy.Diagnostics.IRequestTracing, Nancy.Diagnostics.DiagnosticsConfiguration, Nancy.IStaticContentProvider)", file="NancyEngine.cs", label="this.dispatcher = dispatcher", span="58-58"];
m8_8 [cluster="Nancy.NancyEngine.NancyEngine(Nancy.Routing.IRequestDispatcher, Nancy.INancyContextFactory, System.Collections.Generic.IEnumerable<Nancy.ErrorHandling.IStatusCodeHandler>, Nancy.Diagnostics.IRequestTracing, Nancy.Diagnostics.DiagnosticsConfiguration, Nancy.IStaticContentProvider)", file="NancyEngine.cs", label="this.contextFactory = contextFactory", span="59-59"];
m8_9 [cluster="Nancy.NancyEngine.NancyEngine(Nancy.Routing.IRequestDispatcher, Nancy.INancyContextFactory, System.Collections.Generic.IEnumerable<Nancy.ErrorHandling.IStatusCodeHandler>, Nancy.Diagnostics.IRequestTracing, Nancy.Diagnostics.DiagnosticsConfiguration, Nancy.IStaticContentProvider)", file="NancyEngine.cs", label="this.statusCodeHandlers = statusCodeHandlers", span="60-60"];
m8_2 [cluster="Nancy.NancyEngine.NancyEngine(Nancy.Routing.IRequestDispatcher, Nancy.INancyContextFactory, System.Collections.Generic.IEnumerable<Nancy.ErrorHandling.IStatusCodeHandler>, Nancy.Diagnostics.IRequestTracing, Nancy.Diagnostics.DiagnosticsConfiguration, Nancy.IStaticContentProvider)", file="NancyEngine.cs", label="throw new ArgumentNullException(''dispatcher'', ''The resolver parameter cannot be null.'');", span="45-45"];
m8_4 [cluster="Nancy.NancyEngine.NancyEngine(Nancy.Routing.IRequestDispatcher, Nancy.INancyContextFactory, System.Collections.Generic.IEnumerable<Nancy.ErrorHandling.IStatusCodeHandler>, Nancy.Diagnostics.IRequestTracing, Nancy.Diagnostics.DiagnosticsConfiguration, Nancy.IStaticContentProvider)", file="NancyEngine.cs", label="throw new ArgumentNullException(''contextFactory'');", span="50-50"];
m8_6 [cluster="Nancy.NancyEngine.NancyEngine(Nancy.Routing.IRequestDispatcher, Nancy.INancyContextFactory, System.Collections.Generic.IEnumerable<Nancy.ErrorHandling.IStatusCodeHandler>, Nancy.Diagnostics.IRequestTracing, Nancy.Diagnostics.DiagnosticsConfiguration, Nancy.IStaticContentProvider)", file="NancyEngine.cs", label="throw new ArgumentNullException(''statusCodeHandlers'');", span="55-55"];
m8_10 [cluster="Nancy.NancyEngine.NancyEngine(Nancy.Routing.IRequestDispatcher, Nancy.INancyContextFactory, System.Collections.Generic.IEnumerable<Nancy.ErrorHandling.IStatusCodeHandler>, Nancy.Diagnostics.IRequestTracing, Nancy.Diagnostics.DiagnosticsConfiguration, Nancy.IStaticContentProvider)", file="NancyEngine.cs", label="this.requestTracing = requestTracing", span="61-61"];
m8_41 [cluster="lambda expression", file="NancyEngine.cs", label="Exit lambda expression", span="123-123"];
m8_55 [cluster="Nancy.NancyEngine.HandleRequestInternal(Nancy.Request, System.Func<Nancy.NancyContext, Nancy.NancyContext>)", file="NancyEngine.cs", label="tcs.SetResult(context)", span="148-148"];
m8_96 [cluster="Nancy.NancyEngine.EnableTracing(Nancy.NancyContext)", file="NancyEngine.cs", label="Entry Nancy.NancyEngine.EnableTracing(Nancy.NancyContext)", span="205-205"];
m8_108 [cluster="Nancy.NancyEngine.EnableTracing(Nancy.NancyContext)", file="NancyEngine.cs", label="return StaticConfiguration.EnableRequestTracing &&\r\n                   !ctx.Items.ContainsKey(DiagnosticsHook.ItemsKey);", span="207-208"];
m8_109 [cluster="Nancy.NancyEngine.EnableTracing(Nancy.NancyContext)", file="NancyEngine.cs", label="Exit Nancy.NancyEngine.EnableTracing(Nancy.NancyContext)", span="205-205"];
m8_70 [cluster="Nancy.NancyEngine.InvokeRequestLifeCycle(Nancy.NancyContext, System.Threading.CancellationToken, Nancy.Bootstrapper.IPipelines)", file="NancyEngine.cs", label="Entry Nancy.NancyEngine.InvokeRequestLifeCycle(Nancy.NancyContext, System.Threading.CancellationToken, Nancy.Bootstrapper.IPipelines)", span="255-255"];
m8_48 [cluster="Nancy.NancyEngine.HandleRequestInternal(Nancy.Request, System.Func<Nancy.NancyContext, Nancy.NancyContext>)", file="NancyEngine.cs", label="throw new ArgumentNullException(''request'', ''The request parameter cannot be null.'');", span="134-134"];
m8_50 [cluster="Nancy.NancyEngine.HandleRequestInternal(Nancy.Request, System.Func<Nancy.NancyContext, Nancy.NancyContext>)", file="NancyEngine.cs", label="preRequest != null", span="139-139"];
m8_51 [cluster="Nancy.NancyEngine.HandleRequestInternal(Nancy.Request, System.Func<Nancy.NancyContext, Nancy.NancyContext>)", file="NancyEngine.cs", label="context = preRequest(context)", span="141-141"];
m8_53 [cluster="Nancy.NancyEngine.HandleRequestInternal(Nancy.Request, System.Func<Nancy.NancyContext, Nancy.NancyContext>)", file="NancyEngine.cs", label="staticContentResponse != null", span="145-145"];
m8_52 [cluster="Nancy.NancyEngine.HandleRequestInternal(Nancy.Request, System.Func<Nancy.NancyContext, Nancy.NancyContext>)", file="NancyEngine.cs", label="var staticContentResponse = this.staticContentProvider.GetContent(context)", span="144-144"];
m8_54 [cluster="Nancy.NancyEngine.HandleRequestInternal(Nancy.Request, System.Func<Nancy.NancyContext, Nancy.NancyContext>)", file="NancyEngine.cs", label="context.Response = staticContentResponse", span="147-147"];
m8_171 [cluster="Nancy.NancyEngine.InvokeOnErrorHook(Nancy.NancyContext, Nancy.ErrorPipeline, System.Exception)", file="NancyEngine.cs", label="Entry Nancy.NancyEngine.InvokeOnErrorHook(Nancy.NancyContext, Nancy.ErrorPipeline, System.Exception)", span="315-315"];
m8_181 [cluster="Nancy.NancyEngine.InvokeOnErrorHook(Nancy.NancyContext, Nancy.ErrorPipeline, System.Exception)", file="NancyEngine.cs", label="pipeline == null", span="319-319"];
m8_182 [cluster="Nancy.NancyEngine.InvokeOnErrorHook(Nancy.NancyContext, Nancy.ErrorPipeline, System.Exception)", file="NancyEngine.cs", label="throw new RequestExecutionException(ex);", span="321-321"];
m8_183 [cluster="Nancy.NancyEngine.InvokeOnErrorHook(Nancy.NancyContext, Nancy.ErrorPipeline, System.Exception)", file="NancyEngine.cs", label="var onErrorResponse = pipeline.Invoke(context, ex)", span="324-324"];
m8_185 [cluster="Nancy.NancyEngine.InvokeOnErrorHook(Nancy.NancyContext, Nancy.ErrorPipeline, System.Exception)", file="NancyEngine.cs", label="throw new RequestExecutionException(ex);", span="328-328"];
m8_186 [cluster="Nancy.NancyEngine.InvokeOnErrorHook(Nancy.NancyContext, Nancy.ErrorPipeline, System.Exception)", file="NancyEngine.cs", label="context.Response = onErrorResponse", span="331-331"];
m8_188 [cluster="Nancy.NancyEngine.InvokeOnErrorHook(Nancy.NancyContext, Nancy.ErrorPipeline, System.Exception)", file="NancyEngine.cs", label="context.Response = new Response { StatusCode = HttpStatusCode.InternalServerError }", span="335-335"];
m8_189 [cluster="Nancy.NancyEngine.InvokeOnErrorHook(Nancy.NancyContext, Nancy.ErrorPipeline, System.Exception)", file="NancyEngine.cs", label="context.Items[ERROR_KEY] = e.ToString()", span="336-336"];
m8_190 [cluster="Nancy.NancyEngine.InvokeOnErrorHook(Nancy.NancyContext, Nancy.ErrorPipeline, System.Exception)", file="NancyEngine.cs", label="context.Items[ERROR_EXCEPTION] = e", span="337-337"];
m8_184 [cluster="Nancy.NancyEngine.InvokeOnErrorHook(Nancy.NancyContext, Nancy.ErrorPipeline, System.Exception)", file="NancyEngine.cs", label="onErrorResponse == null", span="326-326"];
m8_187 [cluster="Nancy.NancyEngine.InvokeOnErrorHook(Nancy.NancyContext, Nancy.ErrorPipeline, System.Exception)", file="NancyEngine.cs", label=Exception, span="333-333"];
m8_191 [cluster="Nancy.NancyEngine.InvokeOnErrorHook(Nancy.NancyContext, Nancy.ErrorPipeline, System.Exception)", file="NancyEngine.cs", label="Exit Nancy.NancyEngine.InvokeOnErrorHook(Nancy.NancyContext, Nancy.ErrorPipeline, System.Exception)", span="315-315"];
m8_42 [cluster="Nancy.NancyEngine.InvokeRequestLifeCycle(Nancy.NancyContext)", file="NancyEngine.cs", label="this.InvokePreRequestHook(context)", span="124-124"];
m8_34 [cluster="System.Threading.Tasks.Task.Wait()", file="NancyEngine.cs", label="Entry System.Threading.Tasks.Task.Wait()", span="0-0"];
m8_193 [cluster="Nancy.ErrorPipeline.Invoke(Nancy.NancyContext, System.Exception)", file="NancyEngine.cs", label="Entry Nancy.ErrorPipeline.Invoke(Nancy.NancyContext, System.Exception)", span="67-67"];
m8_129 [cluster="System.Guid.ToString()", file="NancyEngine.cs", label="Entry System.Guid.ToString()", span="0-0"];
m8_142 [cluster="Nancy.NancyEngine.InvokeRequestLifeCycle(Nancy.NancyContext, System.Threading.CancellationToken, Nancy.Bootstrapper.IPipelines)", file="NancyEngine.cs", label="preHookTask.WhenCompleted(t =>\r\n                {\r\n                    var dispatchTask = t.Result != null ? TaskHelpers.GetCompletedTask(t.Result) : this.dispatcher.Dispatch(context, cancellationToken);\r\n\r\n                    dispatchTask.WhenCompleted(\r\n                        completedTask =>\r\n                        {\r\n                            context.Response = completedTask.Result;\r\n\r\n                            var postHookTask = InvokePostRequestHook(context, cancellationToken, pipelines.AfterRequest);\r\n\r\n                            postHookTask.WhenCompleted(\r\n                                completedPostHookTask => tcs.SetResult(context),\r\n                                HandleFaultedTask(context, pipelines, tcs));\r\n                        },\r\n                        HandleFaultedTask(context, pipelines, tcs));\r\n                },\r\n                HandleFaultedTask(context, pipelines, tcs))", span="261-278"];
m8_140 [cluster="Nancy.NancyEngine.InvokeRequestLifeCycle(Nancy.NancyContext, System.Threading.CancellationToken, Nancy.Bootstrapper.IPipelines)", file="NancyEngine.cs", label="var tcs = new TaskCompletionSource<NancyContext>()", span="257-257"];
m8_141 [cluster="Nancy.NancyEngine.InvokeRequestLifeCycle(Nancy.NancyContext, System.Threading.CancellationToken, Nancy.Bootstrapper.IPipelines)", file="NancyEngine.cs", label="var preHookTask = InvokePreRequestHook(context, cancellationToken, pipelines.BeforeRequest)", span="259-259"];
m8_143 [cluster="Nancy.NancyEngine.InvokeRequestLifeCycle(Nancy.NancyContext, System.Threading.CancellationToken, Nancy.Bootstrapper.IPipelines)", file="NancyEngine.cs", label="return tcs.Task;", span="280-280"];
m8_144 [cluster="Nancy.NancyEngine.InvokeRequestLifeCycle(Nancy.NancyContext, System.Threading.CancellationToken, Nancy.Bootstrapper.IPipelines)", file="NancyEngine.cs", label="Exit Nancy.NancyEngine.InvokeRequestLifeCycle(Nancy.NancyContext, System.Threading.CancellationToken, Nancy.Bootstrapper.IPipelines)", span="255-255"];
m8_36 [cluster="Nancy.NancyEngine.HandleRequest(Nancy.Request, System.Func<Nancy.NancyContext, Nancy.NancyContext>, System.Action<Nancy.NancyContext>, System.Action<System.Exception>)", file="NancyEngine.cs", label="this.HandleRequestInternal(request, preRequest)\r\n                .WhenCompleted(t => onComplete(t.Result), t => onError(t.Exception))", span="122-123"];
m8_37 [cluster="Nancy.NancyEngine.HandleRequest(Nancy.Request, System.Func<Nancy.NancyContext, Nancy.NancyContext>, System.Action<Nancy.NancyContext>, System.Action<System.Exception>)", file="NancyEngine.cs", label="Exit Nancy.NancyEngine.HandleRequest(Nancy.Request, System.Func<Nancy.NancyContext, Nancy.NancyContext>, System.Action<Nancy.NancyContext>, System.Action<System.Exception>)", span="120-120"];
m8_39 [cluster="lambda expression", file="NancyEngine.cs", label="Entry lambda expression", span="123-123"];
m8_123 [cluster="System.Guid.TryParse(string, out System.Guid)", file="NancyEngine.cs", label="Entry System.Guid.TryParse(string, out System.Guid)", span="0-0"];
m8_192 [cluster="Nancy.RequestExecutionException.RequestExecutionException(System.Exception)", file="NancyEngine.cs", label="Entry Nancy.RequestExecutionException.RequestExecutionException(System.Exception)", span="15-15"];
m8_158 [cluster="Nancy.NancyEngine.InvokePostRequestHook(Nancy.NancyContext, System.Threading.CancellationToken, Nancy.AfterPipeline)", file="NancyEngine.cs", label="Entry Nancy.NancyEngine.InvokePostRequestHook(Nancy.NancyContext, System.Threading.CancellationToken, Nancy.AfterPipeline)", span="310-310"];
m8_177 [cluster="Nancy.NancyEngine.InvokePostRequestHook(Nancy.NancyContext, System.Threading.CancellationToken, Nancy.AfterPipeline)", file="NancyEngine.cs", label="return pipeline == null ? TaskHelpers.GetCompletedTask() : pipeline.Invoke(context, cancellationToken);", span="312-312"];
m8_178 [cluster="Nancy.NancyEngine.InvokePostRequestHook(Nancy.NancyContext, System.Threading.CancellationToken, Nancy.AfterPipeline)", file="NancyEngine.cs", label="Exit Nancy.NancyEngine.InvokePostRequestHook(Nancy.NancyContext, System.Threading.CancellationToken, Nancy.AfterPipeline)", span="310-310"];
m8_122 [cluster="Nancy.Diagnostics.IRequestTracing.CreateSession()", file="NancyEngine.cs", label="Entry Nancy.Diagnostics.IRequestTracing.CreateSession()", span="7-7"];
m8_124 [cluster="Nancy.Diagnostics.IRequestTracing.IsValidSessionId(System.Guid)", file="NancyEngine.cs", label="Entry Nancy.Diagnostics.IRequestTracing.IsValidSessionId(System.Guid)", span="15-15"];
m8_67 [cluster="Nancy.IStaticContentProvider.GetContent(Nancy.NancyContext)", file="NancyEngine.cs", label="Entry Nancy.IStaticContentProvider.GetContent(Nancy.NancyContext)", span="12-12"];
m8_110 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="NancyEngine.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m8_40 [cluster="lambda expression", file="NancyEngine.cs", label="onComplete(t.Result)", span="123-123"];
m8_146 [cluster="Nancy.NancyEngine.HandleFaultedTask(Nancy.NancyContext, Nancy.Bootstrapper.IPipelines, System.Threading.Tasks.TaskCompletionSource<Nancy.NancyContext>)", file="NancyEngine.cs", label="Entry Nancy.NancyEngine.HandleFaultedTask(Nancy.NancyContext, Nancy.Bootstrapper.IPipelines, System.Threading.Tasks.TaskCompletionSource<Nancy.NancyContext>)", span="283-283"];
m8_163 [cluster="Nancy.NancyEngine.HandleFaultedTask(Nancy.NancyContext, Nancy.Bootstrapper.IPipelines, System.Threading.Tasks.TaskCompletionSource<Nancy.NancyContext>)", color=green, community=0, file="NancyEngine.cs", label="0: return t =>\r\n                {\r\n                    try\r\n                    {\r\n                        InvokeOnErrorHook(context, pipelines.OnError, t.Exception.InnerException);\r\n\r\n                        tcs.SetResult(context);\r\n                    }\r\n                    catch (Exception e)\r\n                    {\r\n                        tcs.SetException(e);\r\n                    }\r\n                };", span="285-297"];
m8_164 [cluster="Nancy.NancyEngine.HandleFaultedTask(Nancy.NancyContext, Nancy.Bootstrapper.IPipelines, System.Threading.Tasks.TaskCompletionSource<Nancy.NancyContext>)", file="NancyEngine.cs", label="Exit Nancy.NancyEngine.HandleFaultedTask(Nancy.NancyContext, Nancy.Bootstrapper.IPipelines, System.Threading.Tasks.TaskCompletionSource<Nancy.NancyContext>)", span="283-283"];
m8_33 [cluster="lambda expression", file="NancyEngine.cs", label="Exit lambda expression", span="96-106"];
m8_46 [cluster="Nancy.NancyEngine.InvokeRequestLifeCycle(Nancy.NancyContext)", file="NancyEngine.cs", label="this.PostRequestHook.Invoke(context)", span="133-133"];
m8_47 [cluster="Nancy.NancyEngine.InvokeRequestLifeCycle(Nancy.NancyContext)", file="NancyEngine.cs", label="Exit Nancy.NancyEngine.InvokeRequestLifeCycle(Nancy.NancyContext)", span="122-122"];
m8_105 [cluster="lambda expression", file="NancyEngine.cs", label="Entry lambda expression", span="197-197"];
m8_30 [cluster="Nancy.NancyEngine.HandleRequest(Nancy.Request, System.Func<Nancy.NancyContext, Nancy.NancyContext>)", file="NancyEngine.cs", label="throw task.Exception ?? new Exception(''Request task faulted'');", span="107-107"];
m8_32 [cluster="Nancy.NancyEngine.HandleRequest(Nancy.Request, System.Func<Nancy.NancyContext, Nancy.NancyContext>)", file="NancyEngine.cs", label="Exit Nancy.NancyEngine.HandleRequest(Nancy.Request, System.Func<Nancy.NancyContext, Nancy.NancyContext>)", span="99-99"];
m8_29 [cluster="Nancy.NancyEngine.HandleRequest(Nancy.Request, System.Func<Nancy.NancyContext, Nancy.NancyContext>)", file="NancyEngine.cs", label="task.IsFaulted", span="105-105"];
m8_31 [cluster="Nancy.NancyEngine.HandleRequest(Nancy.Request, System.Func<Nancy.NancyContext, Nancy.NancyContext>)", file="NancyEngine.cs", label="return task.Result;", span="110-110"];
m8_166 [cluster="lambda expression", color=green, community=0, file="NancyEngine.cs", label="0: InvokeOnErrorHook(context, pipelines.OnError, t.Exception.InnerException)", span="289-289"];
m8_169 [cluster="lambda expression", file="NancyEngine.cs", label="tcs.SetException(e)", span="295-295"];
m8_165 [cluster="lambda expression", file="NancyEngine.cs", label="Entry lambda expression", span="285-297"];
m8_167 [cluster="lambda expression", color=green, community=0, file="NancyEngine.cs", label="2: tcs.SetResult(context)", span="291-291"];
m8_168 [cluster="lambda expression", file="NancyEngine.cs", label=Exception, span="293-293"];
m8_170 [cluster="lambda expression", file="NancyEngine.cs", label="Exit lambda expression", span="285-297"];
m8_149 [cluster="lambda expression", file="NancyEngine.cs", label="dispatchTask.WhenCompleted(\r\n                        completedTask =>\r\n                        {\r\n                            context.Response = completedTask.Result;\r\n\r\n                            var postHookTask = InvokePostRequestHook(context, cancellationToken, pipelines.AfterRequest);\r\n\r\n                            postHookTask.WhenCompleted(\r\n                                completedPostHookTask => tcs.SetResult(context),\r\n                                HandleFaultedTask(context, pipelines, tcs));\r\n                        },\r\n                        HandleFaultedTask(context, pipelines, tcs))", span="265-276"];
m8_156 [cluster="lambda expression", file="NancyEngine.cs", label="postHookTask.WhenCompleted(\r\n                                completedPostHookTask => tcs.SetResult(context),\r\n                                HandleFaultedTask(context, pipelines, tcs))", span="272-274"];
m8_161 [cluster="lambda expression", file="NancyEngine.cs", label="tcs.SetResult(context)", span="273-273"];
m8_147 [cluster="lambda expression", file="NancyEngine.cs", label="Entry lambda expression", span="261-277"];
m8_148 [cluster="lambda expression", file="NancyEngine.cs", label="var dispatchTask = t.Result != null ? TaskHelpers.GetCompletedTask(t.Result) : this.dispatcher.Dispatch(context, cancellationToken)", span="263-263"];
m8_150 [cluster="lambda expression", file="NancyEngine.cs", label="Exit lambda expression", span="261-277"];
m8_153 [cluster="lambda expression", file="NancyEngine.cs", label="Entry lambda expression", span="266-275"];
m8_155 [cluster="lambda expression", file="NancyEngine.cs", label="var postHookTask = InvokePostRequestHook(context, cancellationToken, pipelines.AfterRequest)", span="270-270"];
m8_157 [cluster="lambda expression", file="NancyEngine.cs", label="Exit lambda expression", span="266-275"];
m8_160 [cluster="lambda expression", file="NancyEngine.cs", label="Entry lambda expression", span="273-273"];
m8_154 [cluster="lambda expression", file="NancyEngine.cs", label="context.Response = completedTask.Result", span="268-268"];
m8_79 [cluster="lambda expression", file="NancyEngine.cs", label="Nancy.Request", span=""];
m8_162 [cluster="lambda expression", file="NancyEngine.cs", label="Exit lambda expression", span="273-273"];
m8_78 [cluster="lambda expression", file="NancyEngine.cs", label="Nancy.NancyEngine", span=""];
m8_80 [cluster="lambda expression", file="NancyEngine.cs", label="System.Action<Nancy.NancyContext>", span=""];
m8_20 [cluster="Nancy.NancyEngine.HandleRequest(Nancy.Request)", file="NancyEngine.cs", label="return context;", span="82-82"];
m8_43 [cluster="Nancy.NancyEngine.InvokeRequestLifeCycle(Nancy.NancyContext)", file="NancyEngine.cs", label="context.Response == null", span="126-126"];
m8_22 [cluster="Nancy.INancyContextFactory.Create()", file="NancyEngine.cs", label="Entry Nancy.INancyContextFactory.Create()", span="11-11"];
m8_21 [cluster="Nancy.NancyEngine.HandleRequest(Nancy.Request)", file="NancyEngine.cs", label="Exit Nancy.NancyEngine.HandleRequest(Nancy.Request)", span="68-68"];
m8_44 [cluster="Nancy.NancyEngine.InvokeRequestLifeCycle(Nancy.NancyContext)", file="NancyEngine.cs", label="this.ResolveAndInvokeRoute(context)", span="128-128"];
m8_45 [cluster="Nancy.NancyEngine.InvokeRequestLifeCycle(Nancy.NancyContext)", file="NancyEngine.cs", label="this.PostRequestHook != null", span="131-131"];
m8_102 [cluster="lambda expression", file="NancyEngine.cs", label="Entry lambda expression", span="197-197"];
m8_104 [cluster="lambda expression", file="NancyEngine.cs", label="Exit lambda expression", span="197-197"];
m8_103 [cluster="lambda expression", file="NancyEngine.cs", label="kv.Key", span="197-197"];
m8_106 [cluster="lambda expression", file="NancyEngine.cs", label="kv.Value", span="197-197"];
m8_107 [cluster="lambda expression", file="NancyEngine.cs", label="Exit lambda expression", span="197-197"];
m8_81 [cluster="System.Threading.Tasks.TaskCompletionSource<TResult>.SetException(System.Exception)", file="NancyEngine.cs", label="System.Action<System.Exception>", span=""];
m8_99 [cluster="Unk.ToDictionary", file="NancyEngine.cs", label="Entry Unk.ToDictionary", span=""];
m8_82 [cluster="Nancy.NancyEngine.SaveTraceInformation(Nancy.NancyContext)", file="NancyEngine.cs", label="!this.EnableTracing(ctx)", span="181-181"];
m8_86 [cluster="Nancy.NancyEngine.SaveTraceInformation(Nancy.NancyContext)", file="NancyEngine.cs", label="var sessionGuid = this.GetDiagnosticsSessionGuid(ctx)", span="191-191"];
m8_93 [cluster="Nancy.NancyEngine.SaveTraceInformation(Nancy.NancyContext)", file="NancyEngine.cs", label="this.requestTracing.AddRequestDiagnosticToSession(sessionGuid, ctx)", span="200-200"];
m8_94 [cluster="Nancy.NancyEngine.SaveTraceInformation(Nancy.NancyContext)", file="NancyEngine.cs", label="this.UpdateTraceCookie(ctx, sessionGuid)", span="202-202"];
m8_83 [cluster="Nancy.NancyEngine.SaveTraceInformation(Nancy.NancyContext)", file="NancyEngine.cs", label="return;", span="183-183"];
m8_84 [cluster="Nancy.NancyEngine.SaveTraceInformation(Nancy.NancyContext)", file="NancyEngine.cs", label="ctx.Request == null || ctx.Response == null", span="186-186"];
m8_87 [cluster="Nancy.NancyEngine.SaveTraceInformation(Nancy.NancyContext)", file="NancyEngine.cs", label="ctx.Trace.ResponseType = ctx.Response.GetType()", span="193-193"];
m8_92 [cluster="Nancy.NancyEngine.SaveTraceInformation(Nancy.NancyContext)", file="NancyEngine.cs", label="ctx.Trace.ResponseHeaders = ctx.Response.Headers", span="198-198"];
m8_88 [cluster="Nancy.NancyEngine.SaveTraceInformation(Nancy.NancyContext)", file="NancyEngine.cs", label="ctx.Trace.StatusCode = ctx.Response.StatusCode", span="194-194"];
m8_89 [cluster="Nancy.NancyEngine.SaveTraceInformation(Nancy.NancyContext)", file="NancyEngine.cs", label="ctx.Trace.RequestContentType = ctx.Request.Headers.ContentType", span="195-195"];
m8_90 [cluster="Nancy.NancyEngine.SaveTraceInformation(Nancy.NancyContext)", file="NancyEngine.cs", label="ctx.Trace.ResponseContentType = ctx.Response.ContentType", span="196-196"];
m8_91 [cluster="Nancy.NancyEngine.SaveTraceInformation(Nancy.NancyContext)", file="NancyEngine.cs", label="ctx.Trace.RequestHeaders = ctx.Request.Headers.ToDictionary(kv => kv.Key, kv => kv.Value)", span="197-197"];
m8_85 [cluster="Nancy.NancyEngine.SaveTraceInformation(Nancy.NancyContext)", file="NancyEngine.cs", label="return;", span="188-188"];
m8_95 [cluster="Nancy.NancyEngine.SaveTraceInformation(Nancy.NancyContext)", file="NancyEngine.cs", label="Exit Nancy.NancyEngine.SaveTraceInformation(Nancy.NancyContext)", span="179-179"];
m8_121 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="NancyEngine.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m8_19 [cluster="Nancy.NancyEngine.HandleRequest(Nancy.Request)", file="NancyEngine.cs", label="AddNancyVersionHeaderToResponse(context)", span="80-80"];
m8_180 [cluster="Nancy.AfterPipeline.Invoke(Nancy.NancyContext, System.Threading.CancellationToken)", file="NancyEngine.cs", label="Entry Nancy.AfterPipeline.Invoke(Nancy.NancyContext, System.Threading.CancellationToken)", span="61-61"];
m8_131 [cluster="Nancy.Response.AddCookie(Nancy.Cookies.INancyCookie)", file="NancyEngine.cs", label="Entry Nancy.Response.AddCookie(Nancy.Cookies.INancyCookie)", span="78-78"];
m8_195 [cluster="System.Exception.ToString()", file="NancyEngine.cs", label="Entry System.Exception.ToString()", span="0-0"];
m8_97 [cluster="Nancy.NancyEngine.GetDiagnosticsSessionGuid(Nancy.NancyContext)", file="NancyEngine.cs", label="Entry Nancy.NancyEngine.GetDiagnosticsSessionGuid(Nancy.NancyContext)", span="211-211"];
m8_113 [cluster="Nancy.NancyEngine.GetDiagnosticsSessionGuid(Nancy.NancyContext)", file="NancyEngine.cs", label="return this.requestTracing.CreateSession();", span="216-216"];
m8_116 [cluster="Nancy.NancyEngine.GetDiagnosticsSessionGuid(Nancy.NancyContext)", file="NancyEngine.cs", label="return this.requestTracing.CreateSession();", span="222-222"];
m8_117 [cluster="Nancy.NancyEngine.GetDiagnosticsSessionGuid(Nancy.NancyContext)", file="NancyEngine.cs", label="!this.requestTracing.IsValidSessionId(sessionGuid)", span="225-225"];
m8_118 [cluster="Nancy.NancyEngine.GetDiagnosticsSessionGuid(Nancy.NancyContext)", file="NancyEngine.cs", label="return this.requestTracing.CreateSession();", span="227-227"];
m8_112 [cluster="Nancy.NancyEngine.GetDiagnosticsSessionGuid(Nancy.NancyContext)", file="NancyEngine.cs", label="!ctx.Request.Cookies.TryGetValue(''__NCTRACE'', out sessionId)", span="214-214"];
m8_115 [cluster="Nancy.NancyEngine.GetDiagnosticsSessionGuid(Nancy.NancyContext)", file="NancyEngine.cs", label="!Guid.TryParse(sessionId, out sessionGuid)", span="220-220"];
m8_119 [cluster="Nancy.NancyEngine.GetDiagnosticsSessionGuid(Nancy.NancyContext)", file="NancyEngine.cs", label="return sessionGuid;", span="230-230"];
m8_111 [cluster="Nancy.NancyEngine.GetDiagnosticsSessionGuid(Nancy.NancyContext)", file="NancyEngine.cs", label="string sessionId", span="213-213"];
m8_114 [cluster="Nancy.NancyEngine.GetDiagnosticsSessionGuid(Nancy.NancyContext)", file="NancyEngine.cs", label="Guid sessionGuid", span="219-219"];
m8_120 [cluster="Nancy.NancyEngine.GetDiagnosticsSessionGuid(Nancy.NancyContext)", file="NancyEngine.cs", label="Exit Nancy.NancyEngine.GetDiagnosticsSessionGuid(Nancy.NancyContext)", span="211-211"];
m8_152 [cluster="Nancy.Routing.IRequestDispatcher.Dispatch(Nancy.NancyContext, System.Threading.CancellationToken)", file="NancyEngine.cs", label="Entry Nancy.Routing.IRequestDispatcher.Dispatch(Nancy.NancyContext, System.Threading.CancellationToken)", span="15-15"];
m8_16 [cluster="Nancy.NancyEngine.HandleRequest(Nancy.Request)", file="NancyEngine.cs", label="var context = this.contextFactory.Create()", span="75-75"];
m8_13 [cluster="Nancy.NancyEngine.NancyEngine(Nancy.Routing.IRequestDispatcher, Nancy.INancyContextFactory, System.Collections.Generic.IEnumerable<Nancy.ErrorHandling.IStatusCodeHandler>, Nancy.Diagnostics.IRequestTracing, Nancy.Diagnostics.DiagnosticsConfiguration, Nancy.IStaticContentProvider)", file="NancyEngine.cs", label="Exit Nancy.NancyEngine.NancyEngine(Nancy.Routing.IRequestDispatcher, Nancy.INancyContextFactory, System.Collections.Generic.IEnumerable<Nancy.ErrorHandling.IStatusCodeHandler>, Nancy.Diagnostics.IRequestTracing, Nancy.Diagnostics.DiagnosticsConfiguration, Nancy.IStaticContentProvider)", span="41-41"];
m8_17 [cluster="Nancy.NancyEngine.HandleRequest(Nancy.Request)", file="NancyEngine.cs", label="return this.HandleRequest(request, context => context);", span="79-79"];
m8_15 [cluster="Nancy.NancyEngine.HandleRequest(Nancy.Request)", file="NancyEngine.cs", label="throw new ArgumentNullException(''request'', ''The request parameter cannot be null.'');", span="72-72"];
m8_18 [cluster="Nancy.NancyEngine.HandleRequest(Nancy.Request)", file="NancyEngine.cs", label="Exit Nancy.NancyEngine.HandleRequest(Nancy.Request)", span="77-77"];
m8_194 [cluster="Nancy.Response.Response()", file="NancyEngine.cs", label="Entry Nancy.Response.Response()", span="20-20"];
m8_138 [cluster="Nancy.ErrorHandling.IStatusCodeHandler.HandlesStatusCode(Nancy.HttpStatusCode, Nancy.NancyContext)", file="NancyEngine.cs", label="Entry Nancy.ErrorHandling.IStatusCodeHandler.HandlesStatusCode(Nancy.HttpStatusCode, Nancy.NancyContext)", span="13-13"];
m8_204 [file="NancyEngine.cs", label="Nancy.NancyContext", span=""];
m8_205 [file="NancyEngine.cs", label="Nancy.Bootstrapper.IPipelines", span=""];
m8_206 [file="NancyEngine.cs", label="System.Threading.Tasks.TaskCompletionSource<Nancy.NancyContext>", span=""];
m8_196 [file="NancyEngine.cs", label="Nancy.NancyEngine", span=""];
m8_200 [file="NancyEngine.cs", label="Nancy.NancyContext", span=""];
m8_201 [file="NancyEngine.cs", label="System.Threading.CancellationToken", span=""];
m8_202 [file="NancyEngine.cs", label="Nancy.Bootstrapper.IPipelines", span=""];
m8_203 [file="NancyEngine.cs", label=tcs, span=""];
m8_199 [file="NancyEngine.cs", label=tcs, span=""];
m8_197 [file="NancyEngine.cs", label="System.Action<Nancy.NancyContext>", span=""];
m8_198 [file="NancyEngine.cs", label="System.Action<System.Exception>", span=""];
m9_94 [cluster="Nancy.Request.Request(string, string, string)", file="NancyEngineFixture.cs", label="Entry Nancy.Request.Request(string, string, string)", span="30-30"];
m9_240 [cluster="Unk.Handle", file="NancyEngineFixture.cs", label="Entry Unk.Handle", span=""];
m9_73 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_throw_argumentnullexception_when_created_with_null_status_handler()", file="NancyEngineFixture.cs", label="Entry Nancy.Tests.Unit.NancyEngineFixture.Should_throw_argumentnullexception_when_created_with_null_status_handler()", span="90-90"];
m9_74 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_throw_argumentnullexception_when_created_with_null_status_handler()", file="NancyEngineFixture.cs", label="var exception =\r\n                Record.Exception(() => new NancyEngine(this.requestDispatcher, A.Fake<INancyContextFactory>(), null, A.Fake<IRequestTracing>(), this.diagnosticsConfiguration, new DisabledStaticContentProvider()))", span="93-94"];
m9_75 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_throw_argumentnullexception_when_created_with_null_status_handler()", file="NancyEngineFixture.cs", label="exception.ShouldBeOfType<ArgumentNullException>()", span="97-97"];
m9_76 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_throw_argumentnullexception_when_created_with_null_status_handler()", file="NancyEngineFixture.cs", label="Exit Nancy.Tests.Unit.NancyEngineFixture.Should_throw_argumentnullexception_when_created_with_null_status_handler()", span="90-90"];
m9_453 [cluster="System.Threading.Tasks.TaskCompletionSource<TResult>.SetResult(TResult)", file="NancyEngineFixture.cs", label="Entry System.Threading.Tasks.TaskCompletionSource<TResult>.SetResult(TResult)", span="0-0"];
m9_393 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_add_requestexecutionexception_to_context_when_pipeline_is_null()", file="NancyEngineFixture.cs", label="Entry Nancy.Tests.Unit.NancyEngineFixture.Should_add_requestexecutionexception_to_context_when_pipeline_is_null()", span="496-496"];
m9_394 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_add_requestexecutionexception_to_context_when_pipeline_is_null()", file="NancyEngineFixture.cs", label="var resolvedRoute = new ResolveResult(\r\n               new FakeRoute(),\r\n               DynamicDictionary.Empty,\r\n               null,\r\n               null,\r\n               null)", span="499-504"];
m9_395 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_add_requestexecutionexception_to_context_when_pipeline_is_null()", file="NancyEngineFixture.cs", label="A.CallTo(() => resolver.Resolve(A<NancyContext>.Ignored)).Returns(resolvedRoute)", span="506-506"];
m9_396 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_add_requestexecutionexception_to_context_when_pipeline_is_null()", file="NancyEngineFixture.cs", label="A.CallTo(() => this.requestDispatcher.Dispatch(context, A<CancellationToken>._))\r\n             .Returns(TaskHelpers.GetFaultedTask<Response>(new Exception()))", span="508-509"];
m9_397 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_add_requestexecutionexception_to_context_when_pipeline_is_null()", file="NancyEngineFixture.cs", label="var pipelines = new Pipelines { OnError = null }", span="511-511"];
m9_398 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_add_requestexecutionexception_to_context_when_pipeline_is_null()", file="NancyEngineFixture.cs", label="engine.RequestPipelinesFactory = (ctx) => pipelines", span="512-512"];
m9_399 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_add_requestexecutionexception_to_context_when_pipeline_is_null()", file="NancyEngineFixture.cs", label="var request = new Request(''GET'', ''/'', ''http'')", span="514-514"];
m9_400 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_add_requestexecutionexception_to_context_when_pipeline_is_null()", file="NancyEngineFixture.cs", label="var result = this.engine.HandleRequest(request)", span="517-517"];
m9_401 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_add_requestexecutionexception_to_context_when_pipeline_is_null()", file="NancyEngineFixture.cs", label="result.Items.Keys.Contains(''ERROR_EXCEPTION'').ShouldBeTrue()", span="520-520"];
m9_402 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_add_requestexecutionexception_to_context_when_pipeline_is_null()", file="NancyEngineFixture.cs", label="result.Items[''ERROR_EXCEPTION''].ShouldBeOfType<RequestExecutionException>()", span="521-521"];
m9_403 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_add_requestexecutionexception_to_context_when_pipeline_is_null()", file="NancyEngineFixture.cs", label="Exit Nancy.Tests.Unit.NancyEngineFixture.Should_add_requestexecutionexception_to_context_when_pipeline_is_null()", span="496-496"];
m9_95 [cluster="Unk.MustHaveHappened", file="NancyEngineFixture.cs", label="Entry Unk.MustHaveHappened", span=""];
m9_88 [cluster="Nancy.INancyEngine.HandleRequest(Nancy.Request)", file="NancyEngineFixture.cs", label="Entry Nancy.INancyEngine.HandleRequest(Nancy.Request)", span="21-21"];
m9_264 [cluster="Nancy.Helpers.TaskHelpers.GetFaultedTask<T>(System.Exception)", file="NancyEngineFixture.cs", label="Entry Nancy.Helpers.TaskHelpers.GetFaultedTask<T>(System.Exception)", span="22-22"];
m9_80 [cluster="Nancy.Tests.Unit.NancyEngineFixture.HandleRequest_Should_Throw_ArgumentNullException_When_Given_A_Null_Request()", file="NancyEngineFixture.cs", label="Entry Nancy.Tests.Unit.NancyEngineFixture.HandleRequest_Should_Throw_ArgumentNullException_When_Given_A_Null_Request()", span="101-101"];
m9_81 [cluster="Nancy.Tests.Unit.NancyEngineFixture.HandleRequest_Should_Throw_ArgumentNullException_When_Given_A_Null_Request()", file="NancyEngineFixture.cs", label="Request request = null", span="104-104"];
m9_82 [cluster="Nancy.Tests.Unit.NancyEngineFixture.HandleRequest_Should_Throw_ArgumentNullException_When_Given_A_Null_Request()", file="NancyEngineFixture.cs", label="var exception = Record.Exception(() => engine.HandleRequest(request))", span="107-107"];
m9_83 [cluster="Nancy.Tests.Unit.NancyEngineFixture.HandleRequest_Should_Throw_ArgumentNullException_When_Given_A_Null_Request()", file="NancyEngineFixture.cs", label="exception.ShouldBeOfType<ArgumentNullException>()", span="110-110"];
m9_84 [cluster="Nancy.Tests.Unit.NancyEngineFixture.HandleRequest_Should_Throw_ArgumentNullException_When_Given_A_Null_Request()", file="NancyEngineFixture.cs", label="Exit Nancy.Tests.Unit.NancyEngineFixture.HandleRequest_Should_Throw_ArgumentNullException_When_Given_A_Null_Request()", span="101-101"];
m9_310 [cluster="Unk.Equal", file="NancyEngineFixture.cs", label="Entry Unk.Equal", span=""];
m9_307 [cluster="System.Exception.Exception()", file="NancyEngineFixture.cs", label="Entry System.Exception.Exception()", span="0-0"];
m9_231 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_not_invoke_status_handler_if_not_supported_status_code()", file="NancyEngineFixture.cs", label="Entry Nancy.Tests.Unit.NancyEngineFixture.Should_not_invoke_status_handler_if_not_supported_status_code()", span="307-307"];
m9_232 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_not_invoke_status_handler_if_not_supported_status_code()", file="NancyEngineFixture.cs", label="var request = new Request(''GET'', ''/'', ''http'')", span="310-310"];
m9_233 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_not_invoke_status_handler_if_not_supported_status_code()", file="NancyEngineFixture.cs", label="this.engine.HandleRequest(request)", span="313-313"];
m9_234 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_not_invoke_status_handler_if_not_supported_status_code()", file="NancyEngineFixture.cs", label="A.CallTo(() => this.statusCodeHandler.Handle(A<HttpStatusCode>.Ignored, A<NancyContext>.Ignored)).MustNotHaveHappened()", span="316-316"];
m9_235 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_not_invoke_status_handler_if_not_supported_status_code()", file="NancyEngineFixture.cs", label="Exit Nancy.Tests.Unit.NancyEngineFixture.Should_not_invoke_status_handler_if_not_supported_status_code()", span="307-307"];
m9_280 [cluster="Nancy.NancyContext.GetExceptionDetails()", file="NancyEngineFixture.cs", label="Entry Nancy.NancyContext.GetExceptionDetails()", span="70-70"];
m9_357 [cluster="System.Threading.CancellationToken.CancellationToken()", file="NancyEngineFixture.cs", label="Entry System.Threading.CancellationToken.CancellationToken()", span="0-0"];
m9_281 [cluster="string.ShouldContain(string)", file="NancyEngineFixture.cs", label="Entry string.ShouldContain(string)", span="65-65"];
m9_106 [cluster="object.ShouldBeSameAs(object)", file="NancyEngineFixture.cs", label="Entry object.ShouldBeSameAs(object)", span="130-130"];
m9_342 [cluster="Unk.Invokes", file="NancyEngineFixture.cs", label="Entry Unk.Invokes", span=""];
m9_31 [cluster="Nancy.DisabledStaticContentProvider.DisabledStaticContentProvider()", file="NancyEngineFixture.cs", label="Entry Nancy.DisabledStaticContentProvider.DisabledStaticContentProvider()", span="6-6"];
m9_368 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_persist_original_exception_in_requestexecutionexception()", file="NancyEngineFixture.cs", label="Entry Nancy.Tests.Unit.NancyEngineFixture.Should_persist_original_exception_in_requestexecutionexception()", span="464-464"];
m9_369 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_persist_original_exception_in_requestexecutionexception()", file="NancyEngineFixture.cs", label="var expectedException = new Exception()", span="467-467"];
m9_370 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_persist_original_exception_in_requestexecutionexception()", file="NancyEngineFixture.cs", label="var resolvedRoute = new ResolveResult(\r\n               new FakeRoute(),\r\n               DynamicDictionary.Empty,\r\n               null,\r\n               null,\r\n               null)", span="469-474"];
m9_372 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_persist_original_exception_in_requestexecutionexception()", file="NancyEngineFixture.cs", label="A.CallTo(() => this.requestDispatcher.Dispatch(context, A<CancellationToken>._))\r\n                .Returns(TaskHelpers.GetFaultedTask<Response>(expectedException))", span="478-479"];
m9_379 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_persist_original_exception_in_requestexecutionexception()", file="NancyEngineFixture.cs", label="returnedException.InnerException.ShouldBeSameAs(expectedException)", span="492-492"];
m9_371 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_persist_original_exception_in_requestexecutionexception()", file="NancyEngineFixture.cs", label="A.CallTo(() => resolver.Resolve(A<NancyContext>.Ignored)).Returns(resolvedRoute)", span="476-476"];
m9_373 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_persist_original_exception_in_requestexecutionexception()", file="NancyEngineFixture.cs", label="var pipelines = new Pipelines()", span="481-481"];
m9_374 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_persist_original_exception_in_requestexecutionexception()", file="NancyEngineFixture.cs", label="pipelines.OnError.AddItemToStartOfPipeline((ctx, exception) => null)", span="482-482"];
m9_375 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_persist_original_exception_in_requestexecutionexception()", file="NancyEngineFixture.cs", label="engine.RequestPipelinesFactory = (ctx) => pipelines", span="483-483"];
m9_376 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_persist_original_exception_in_requestexecutionexception()", file="NancyEngineFixture.cs", label="var request = new Request(''GET'', ''/'', ''http'')", span="485-485"];
m9_377 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_persist_original_exception_in_requestexecutionexception()", file="NancyEngineFixture.cs", label="var result = this.engine.HandleRequest(request)", span="488-488"];
m9_378 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_persist_original_exception_in_requestexecutionexception()", file="NancyEngineFixture.cs", label="var returnedException = result.Items[''ERROR_EXCEPTION''] as RequestExecutionException", span="489-489"];
m9_380 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_persist_original_exception_in_requestexecutionexception()", file="NancyEngineFixture.cs", label="Exit Nancy.Tests.Unit.NancyEngineFixture.Should_persist_original_exception_in_requestexecutionexception()", span="464-464"];
m9_145 [cluster="Nancy.AsyncNamedPipelineBase<TAsyncDelegate, TSyncDelegate>.AddItemToStartOfPipeline(TSyncDelegate)", file="NancyEngineFixture.cs", label="Entry Nancy.AsyncNamedPipelineBase<TAsyncDelegate, TSyncDelegate>.AddItemToStartOfPipeline(TSyncDelegate)", span="52-52"];
m9_265 [cluster="object.ShouldEqual(object)", file="NancyEngineFixture.cs", label="Entry object.ShouldEqual(object)", span="95-95"];
m9_19 [cluster="Unk.>", file="NancyEngineFixture.cs", label="Entry Unk.>", span=""];
m9_0 [cluster="Nancy.Tests.Unit.NancyEngineFixture.NancyEngineFixture()", file="NancyEngineFixture.cs", label="Entry Nancy.Tests.Unit.NancyEngineFixture.NancyEngineFixture()", span="30-30"];
m9_1 [cluster="Nancy.Tests.Unit.NancyEngineFixture.NancyEngineFixture()", file="NancyEngineFixture.cs", label="this.resolver = A.Fake<IRouteResolver>()", span="32-32"];
m9_2 [cluster="Nancy.Tests.Unit.NancyEngineFixture.NancyEngineFixture()", file="NancyEngineFixture.cs", label="this.response = new Response()", span="33-33"];
m9_3 [cluster="Nancy.Tests.Unit.NancyEngineFixture.NancyEngineFixture()", file="NancyEngineFixture.cs", label="this.route = new FakeRoute(response)", span="34-34"];
m9_4 [cluster="Nancy.Tests.Unit.NancyEngineFixture.NancyEngineFixture()", file="NancyEngineFixture.cs", label="this.context = new NancyContext()", span="35-35"];
m9_5 [cluster="Nancy.Tests.Unit.NancyEngineFixture.NancyEngineFixture()", file="NancyEngineFixture.cs", label="this.statusCodeHandler = A.Fake<IStatusCodeHandler>()", span="36-36"];
m9_6 [cluster="Nancy.Tests.Unit.NancyEngineFixture.NancyEngineFixture()", file="NancyEngineFixture.cs", label="this.requestDispatcher = A.Fake<IRequestDispatcher>()", span="37-37"];
m9_7 [cluster="Nancy.Tests.Unit.NancyEngineFixture.NancyEngineFixture()", file="NancyEngineFixture.cs", label="this.diagnosticsConfiguration = new DiagnosticsConfiguration()", span="38-38"];
m9_8 [cluster="Nancy.Tests.Unit.NancyEngineFixture.NancyEngineFixture()", file="NancyEngineFixture.cs", label="A.CallTo(() => this.requestDispatcher.Dispatch(A<NancyContext>._, A<CancellationToken>._))\r\n                .Returns(CreateResponseTask(new Response()))", span="40-41"];
m9_9 [cluster="Nancy.Tests.Unit.NancyEngineFixture.NancyEngineFixture()", file="NancyEngineFixture.cs", label="A.CallTo(() => this.statusCodeHandler.HandlesStatusCode(A<HttpStatusCode>.Ignored, A<NancyContext>.Ignored)).Returns(false)", span="43-43"];
m9_10 [cluster="Nancy.Tests.Unit.NancyEngineFixture.NancyEngineFixture()", file="NancyEngineFixture.cs", label="contextFactory = A.Fake<INancyContextFactory>()", span="45-45"];
m9_11 [cluster="Nancy.Tests.Unit.NancyEngineFixture.NancyEngineFixture()", file="NancyEngineFixture.cs", label="A.CallTo(() => contextFactory.Create(A<Request>._)).Returns(context)", span="46-46"];
m9_12 [cluster="Nancy.Tests.Unit.NancyEngineFixture.NancyEngineFixture()", file="NancyEngineFixture.cs", label="var resolveResult = new ResolveResult { Route = route, Parameters = DynamicDictionary.Empty, Before = null, After = null, OnError = null }", span="48-48"];
m9_13 [cluster="Nancy.Tests.Unit.NancyEngineFixture.NancyEngineFixture()", file="NancyEngineFixture.cs", label="A.CallTo(() => resolver.Resolve(A<NancyContext>.Ignored)).Returns(resolveResult)", span="49-49"];
m9_14 [cluster="Nancy.Tests.Unit.NancyEngineFixture.NancyEngineFixture()", file="NancyEngineFixture.cs", label="var applicationPipelines = new Pipelines()", span="51-51"];
m9_15 [cluster="Nancy.Tests.Unit.NancyEngineFixture.NancyEngineFixture()", file="NancyEngineFixture.cs", label="this.routeInvoker = A.Fake<IRouteInvoker>()", span="53-53"];
m9_17 [cluster="Nancy.Tests.Unit.NancyEngineFixture.NancyEngineFixture()", file="NancyEngineFixture.cs", label="this.engine =\r\n                new NancyEngine(this.requestDispatcher, this.contextFactory, new[] { this.statusCodeHandler }, A.Fake<IRequestTracing>(), this.diagnosticsConfiguration, new DisabledStaticContentProvider())\r\n                {\r\n                    RequestPipelinesFactory = ctx => applicationPipelines\r\n                }", span="60-64"];
m9_16 [cluster="Nancy.Tests.Unit.NancyEngineFixture.NancyEngineFixture()", file="NancyEngineFixture.cs", label="A.CallTo(() => this.routeInvoker.Invoke(A<Route>._, A<CancellationToken>._, A<DynamicDictionary>._, A<NancyContext>._)).ReturnsLazily(arg =>\r\n            {\r\n                return ((Route)arg.Arguments[0]).Action.Invoke((DynamicDictionary)arg.Arguments[1], A<CancellationToken>._).Result;\r\n            })", span="55-58"];
m9_18 [cluster="Nancy.Tests.Unit.NancyEngineFixture.NancyEngineFixture()", file="NancyEngineFixture.cs", label="Exit Nancy.Tests.Unit.NancyEngineFixture.NancyEngineFixture()", span="30-30"];
m9_169 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_allow_post_request_hook_to_modify_context_items()", file="NancyEngineFixture.cs", label="Entry Nancy.Tests.Unit.NancyEngineFixture.Should_allow_post_request_hook_to_modify_context_items()", span="231-231"];
m9_170 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_allow_post_request_hook_to_modify_context_items()", file="NancyEngineFixture.cs", label="var pipelines = new Pipelines()", span="234-234"];
m9_171 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_allow_post_request_hook_to_modify_context_items()", file="NancyEngineFixture.cs", label="pipelines.BeforeRequest.AddItemToStartOfPipeline(ctx =>\r\n            {\r\n                ctx.Items.Add(''PostReqTest'', new object());\r\n                return null;\r\n            })", span="235-239"];
m9_172 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_allow_post_request_hook_to_modify_context_items()", file="NancyEngineFixture.cs", label="engine.RequestPipelinesFactory = (ctx) => pipelines", span="241-241"];
m9_173 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_allow_post_request_hook_to_modify_context_items()", file="NancyEngineFixture.cs", label="var request = new Request(''GET'', ''/'', ''http'')", span="243-243"];
m9_174 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_allow_post_request_hook_to_modify_context_items()", file="NancyEngineFixture.cs", label="var result = this.engine.HandleRequest(request)", span="246-246"];
m9_175 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_allow_post_request_hook_to_modify_context_items()", file="NancyEngineFixture.cs", label="result.Items.ContainsKey(''PostReqTest'').ShouldBeTrue()", span="249-249"];
m9_176 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_allow_post_request_hook_to_modify_context_items()", file="NancyEngineFixture.cs", label="Exit Nancy.Tests.Unit.NancyEngineFixture.Should_allow_post_request_hook_to_modify_context_items()", span="231-231"];
m9_47 [cluster="Unk.Resolve", file="NancyEngineFixture.cs", label="Entry Unk.Resolve", span=""];
m9_23 [cluster="Nancy.Diagnostics.DiagnosticsConfiguration.DiagnosticsConfiguration()", file="NancyEngineFixture.cs", label="Entry Nancy.Diagnostics.DiagnosticsConfiguration.DiagnosticsConfiguration()", span="16-16"];
m9_262 [cluster="Nancy.Tests.Fakes.FakeRoute.FakeRoute()", file="NancyEngineFixture.cs", label="Entry Nancy.Tests.Fakes.FakeRoute.FakeRoute()", span="15-15"];
m9_309 [cluster="Nancy.NamedPipelineBase<TDelegate>.AddItemToStartOfPipeline(TDelegate)", file="NancyEngineFixture.cs", label="Entry Nancy.NamedPipelineBase<TDelegate>.AddItemToStartOfPipeline(TDelegate)", span="45-45"];
m9_28 [cluster="Nancy.Bootstrapper.Pipelines.Pipelines()", file="NancyEngineFixture.cs", label="Entry Nancy.Bootstrapper.Pipelines.Pipelines()", span="12-12"];
m9_261 [cluster="Nancy.Routing.ResolveResult.ResolveResult(Nancy.Routing.Route, Nancy.DynamicDictionary, Nancy.BeforePipeline, Nancy.AfterPipeline, System.Func<Nancy.NancyContext, System.Exception, Nancy.Response>)", file="NancyEngineFixture.cs", label="Entry Nancy.Routing.ResolveResult.ResolveResult(Nancy.Routing.Route, Nancy.DynamicDictionary, Nancy.BeforePipeline, Nancy.AfterPipeline, System.Func<Nancy.NancyContext, System.Exception, Nancy.Response>)", span="39-39"];
m9_21 [cluster="Nancy.Tests.Fakes.FakeRoute.FakeRoute(dynamic)", file="NancyEngineFixture.cs", label="Entry Nancy.Tests.Fakes.FakeRoute.FakeRoute(dynamic)", span="20-20"];
m9_100 [cluster="Nancy.Tests.Unit.NancyEngineFixture.HandleRequest_should_set_correct_response_on_returned_context()", file="NancyEngineFixture.cs", label="Entry Nancy.Tests.Unit.NancyEngineFixture.HandleRequest_should_set_correct_response_on_returned_context()", span="127-127"];
m9_101 [cluster="Nancy.Tests.Unit.NancyEngineFixture.HandleRequest_should_set_correct_response_on_returned_context()", file="NancyEngineFixture.cs", label="var request = new Request(''GET'', ''/'', ''http'')", span="130-130"];
m9_102 [cluster="Nancy.Tests.Unit.NancyEngineFixture.HandleRequest_should_set_correct_response_on_returned_context()", file="NancyEngineFixture.cs", label="A.CallTo(() => this.requestDispatcher.Dispatch(this.context, A<CancellationToken>._))\r\n                .Returns(CreateResponseTask(this.response))", span="132-133"];
m9_103 [cluster="Nancy.Tests.Unit.NancyEngineFixture.HandleRequest_should_set_correct_response_on_returned_context()", file="NancyEngineFixture.cs", label="var result = this.engine.HandleRequest(request)", span="136-136"];
m9_104 [cluster="Nancy.Tests.Unit.NancyEngineFixture.HandleRequest_should_set_correct_response_on_returned_context()", file="NancyEngineFixture.cs", label="result.Response.ShouldBeSameAs(this.response)", span="139-139"];
m9_105 [cluster="Nancy.Tests.Unit.NancyEngineFixture.HandleRequest_should_set_correct_response_on_returned_context()", file="NancyEngineFixture.cs", label="Exit Nancy.Tests.Unit.NancyEngineFixture.HandleRequest_should_set_correct_response_on_returned_context()", span="127-127"];
m9_99 [cluster="Nancy.INancyContextFactory.Create(Nancy.Request)", file="NancyEngineFixture.cs", label="Entry Nancy.INancyContextFactory.Create(Nancy.Request)", span="11-11"];
m9_126 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_not_throw_exception_when_handlerequest_is_invoked_and_post_request_hook_is_null()", file="NancyEngineFixture.cs", label="Entry Nancy.Tests.Unit.NancyEngineFixture.Should_not_throw_exception_when_handlerequest_is_invoked_and_post_request_hook_is_null()", span="171-171"];
m9_127 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_not_throw_exception_when_handlerequest_is_invoked_and_post_request_hook_is_null()", file="NancyEngineFixture.cs", label="var pipelines = new Pipelines { AfterRequest = null }", span="174-174"];
m9_128 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_not_throw_exception_when_handlerequest_is_invoked_and_post_request_hook_is_null()", file="NancyEngineFixture.cs", label="engine.RequestPipelinesFactory = (ctx) => pipelines", span="175-175"];
m9_129 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_not_throw_exception_when_handlerequest_is_invoked_and_post_request_hook_is_null()", file="NancyEngineFixture.cs", label="var request = new Request(''GET'', ''/'', ''http'')", span="178-178"];
m9_130 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_not_throw_exception_when_handlerequest_is_invoked_and_post_request_hook_is_null()", file="NancyEngineFixture.cs", label="this.engine.HandleRequest(request)", span="181-181"];
m9_131 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_not_throw_exception_when_handlerequest_is_invoked_and_post_request_hook_is_null()", file="NancyEngineFixture.cs", label="Exit Nancy.Tests.Unit.NancyEngineFixture.Should_not_throw_exception_when_handlerequest_is_invoked_and_post_request_hook_is_null()", span="171-171"];
m9_236 [cluster="Unk.MustNotHaveHappened", file="NancyEngineFixture.cs", label="Entry Unk.MustNotHaveHappened", span=""];
m9_116 [cluster="bool.ShouldBeFalse()", file="NancyEngineFixture.cs", label="Entry bool.ShouldBeFalse()", span="90-90"];
m9_263 [cluster="System.NotImplementedException.NotImplementedException()", file="NancyEngineFixture.cs", label="Entry System.NotImplementedException.NotImplementedException()", span="0-0"];
m9_39 [cluster="Unk.HandlesStatusCode", file="NancyEngineFixture.cs", label="Entry Unk.HandlesStatusCode", span=""];
m9_288 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_invoke_the_error_request_hook_if_one_exists_when_dispatcher_throws()", file="NancyEngineFixture.cs", label="Entry Nancy.Tests.Unit.NancyEngineFixture.Should_invoke_the_error_request_hook_if_one_exists_when_dispatcher_throws()", span="384-384"];
m9_289 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_invoke_the_error_request_hook_if_one_exists_when_dispatcher_throws()", file="NancyEngineFixture.cs", label="var testEx = new Exception()", span="387-387"];
m9_290 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_invoke_the_error_request_hook_if_one_exists_when_dispatcher_throws()", file="NancyEngineFixture.cs", label="var errorRoute =\r\n                new Route(''GET'', ''/'', null, (x,c) => { throw testEx; })", span="389-390"];
m9_293 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_invoke_the_error_request_hook_if_one_exists_when_dispatcher_throws()", file="NancyEngineFixture.cs", label="A.CallTo(() => this.requestDispatcher.Dispatch(context, A<CancellationToken>._))\r\n                .Returns(TaskHelpers.GetFaultedTask<Response>(testEx))", span="401-402"];
m9_303 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_invoke_the_error_request_hook_if_one_exists_when_dispatcher_throws()", file="NancyEngineFixture.cs", label="Assert.Equal(testEx, handledException)", span="426-426"];
m9_291 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_invoke_the_error_request_hook_if_one_exists_when_dispatcher_throws()", file="NancyEngineFixture.cs", label="var resolvedRoute = new ResolveResult(\r\n                errorRoute,\r\n                DynamicDictionary.Empty,\r\n                null,\r\n                null,\r\n                null)", span="392-397"];
m9_292 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_invoke_the_error_request_hook_if_one_exists_when_dispatcher_throws()", file="NancyEngineFixture.cs", label="A.CallTo(() => resolver.Resolve(A<NancyContext>.Ignored)).Returns(resolvedRoute)", span="399-399"];
m9_294 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_invoke_the_error_request_hook_if_one_exists_when_dispatcher_throws()", file="NancyEngineFixture.cs", label="Exception handledException = null", span="404-404"];
m9_295 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_invoke_the_error_request_hook_if_one_exists_when_dispatcher_throws()", file="NancyEngineFixture.cs", label="NancyContext handledContext = null", span="405-405"];
m9_296 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_invoke_the_error_request_hook_if_one_exists_when_dispatcher_throws()", file="NancyEngineFixture.cs", label="var errorResponse = new Response()", span="406-406"];
m9_297 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_invoke_the_error_request_hook_if_one_exists_when_dispatcher_throws()", file="NancyEngineFixture.cs", label="Func<NancyContext, Exception, Response> routeErrorHook = (ctx, ex) =>\r\n            {\r\n                handledContext = ctx;\r\n                handledException = ex;\r\n                return errorResponse;\r\n            }", span="408-413"];
m9_305 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_invoke_the_error_request_hook_if_one_exists_when_dispatcher_throws()", file="NancyEngineFixture.cs", label="Assert.Equal(result.Response, errorResponse)", span="428-428"];
m9_298 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_invoke_the_error_request_hook_if_one_exists_when_dispatcher_throws()", file="NancyEngineFixture.cs", label="var pipelines = new Pipelines()", span="415-415"];
m9_299 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_invoke_the_error_request_hook_if_one_exists_when_dispatcher_throws()", file="NancyEngineFixture.cs", label="pipelines.OnError.AddItemToStartOfPipeline(routeErrorHook)", span="416-416"];
m9_300 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_invoke_the_error_request_hook_if_one_exists_when_dispatcher_throws()", file="NancyEngineFixture.cs", label="engine.RequestPipelinesFactory = (ctx) => pipelines", span="418-418"];
m9_301 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_invoke_the_error_request_hook_if_one_exists_when_dispatcher_throws()", file="NancyEngineFixture.cs", label="var request = new Request(''GET'', ''/'', ''http'')", span="420-420"];
m9_302 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_invoke_the_error_request_hook_if_one_exists_when_dispatcher_throws()", file="NancyEngineFixture.cs", label="var result = this.engine.HandleRequest(request)", span="423-423"];
m9_304 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_invoke_the_error_request_hook_if_one_exists_when_dispatcher_throws()", file="NancyEngineFixture.cs", label="Assert.Equal(result, handledContext)", span="427-427"];
m9_306 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_invoke_the_error_request_hook_if_one_exists_when_dispatcher_throws()", file="NancyEngineFixture.cs", label="Exit Nancy.Tests.Unit.NancyEngineFixture.Should_invoke_the_error_request_hook_if_one_exists_when_dispatcher_throws()", span="384-384"];
m9_344 [cluster="object.ShouldBeOfType<T>()", file="NancyEngineFixture.cs", label="Entry object.ShouldBeOfType<T>()", span="150-150"];
m9_177 [cluster="bool.ShouldBeTrue()", file="NancyEngineFixture.cs", label="Entry bool.ShouldBeTrue()", span="85-85"];
m9_30 [cluster="NancyEngine.cstr", file="NancyEngineFixture.cs", label="Entry NancyEngine.cstr", span=""];
m9_182 [cluster="object.Object()", file="NancyEngineFixture.cs", label="Entry object.Object()", span="0-0"];
m9_25 [cluster="Nancy.Tests.Unit.NancyEngineFixture.CreateResponseTask(Nancy.Response)", file="NancyEngineFixture.cs", label="Entry Nancy.Tests.Unit.NancyEngineFixture.CreateResponseTask(Nancy.Response)", span="576-576"];
m9_448 [cluster="Nancy.Tests.Unit.NancyEngineFixture.CreateResponseTask(Nancy.Response)", file="NancyEngineFixture.cs", label="var tcs =\r\n                new TaskCompletionSource<Response>()", span="578-579"];
m9_449 [cluster="Nancy.Tests.Unit.NancyEngineFixture.CreateResponseTask(Nancy.Response)", file="NancyEngineFixture.cs", label="tcs.SetResult(response)", span="581-581"];
m9_450 [cluster="Nancy.Tests.Unit.NancyEngineFixture.CreateResponseTask(Nancy.Response)", file="NancyEngineFixture.cs", label="return tcs.Task;", span="583-583"];
m9_451 [cluster="Nancy.Tests.Unit.NancyEngineFixture.CreateResponseTask(Nancy.Response)", file="NancyEngineFixture.cs", label="Exit Nancy.Tests.Unit.NancyEngineFixture.CreateResponseTask(Nancy.Response)", span="576-576"];
m9_35 [cluster="Unk.Dispatch", file="NancyEngineFixture.cs", label="Entry Unk.Dispatch", span=""];
m9_27 [cluster="Nancy.Routing.ResolveResult.ResolveResult()", file="NancyEngineFixture.cs", label="Entry Nancy.Routing.ResolveResult.ResolveResult()", span="34-34"];
m9_110 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_not_add_nancy_version_number_header_on_returned_response()", file="NancyEngineFixture.cs", label="Entry Nancy.Tests.Unit.NancyEngineFixture.Should_not_add_nancy_version_number_header_on_returned_response()", span="143-143"];
m9_111 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_not_add_nancy_version_number_header_on_returned_response()", file="NancyEngineFixture.cs", label="var request = new Request(''GET'', ''/'', ''http'')", span="147-147"];
m9_112 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_not_add_nancy_version_number_header_on_returned_response()", file="NancyEngineFixture.cs", label="var result = this.engine.HandleRequest(request)", span="150-150"];
m9_113 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_not_add_nancy_version_number_header_on_returned_response()", file="NancyEngineFixture.cs", label="result.Response.Headers.ContainsKey(''Nancy-Version'').ShouldBeFalse()", span="153-153"];
m9_114 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_not_add_nancy_version_number_header_on_returned_response()", file="NancyEngineFixture.cs", label="Exit Nancy.Tests.Unit.NancyEngineFixture.Should_not_add_nancy_version_number_header_on_returned_response()", span="143-143"];
m9_434 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_return_static_content_response_if_one_returned()", file="NancyEngineFixture.cs", label="Entry Nancy.Tests.Unit.NancyEngineFixture.Should_return_static_content_response_if_one_returned()", span="556-556"];
m9_435 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_return_static_content_response_if_one_returned()", file="NancyEngineFixture.cs", label="var localResponse = new Response()", span="558-558"];
m9_436 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_return_static_content_response_if_one_returned()", file="NancyEngineFixture.cs", label="var staticContent = A.Fake<IStaticContentProvider>()", span="559-559"];
m9_437 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_return_static_content_response_if_one_returned()", file="NancyEngineFixture.cs", label="A.CallTo(() => staticContent.GetContent(A<NancyContext>._))\r\n                        .Returns(localResponse)", span="560-561"];
m9_441 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_return_static_content_response_if_one_returned()", file="NancyEngineFixture.cs", label="result.Response.ShouldBeSameAs(localResponse)", span="573-573"];
m9_438 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_return_static_content_response_if_one_returned()", file="NancyEngineFixture.cs", label="var localEngine = new NancyEngine(\r\n                                    this.requestDispatcher,\r\n                                    this.contextFactory,\r\n                                    new[] { this.statusCodeHandler },\r\n                                    A.Fake<IRequestTracing>(),\r\n                                    this.diagnosticsConfiguration,\r\n                                    staticContent)", span="562-568"];
m9_439 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_return_static_content_response_if_one_returned()", file="NancyEngineFixture.cs", label="var request = new Request(''GET'', ''/'', ''http'')", span="569-569"];
m9_440 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_return_static_content_response_if_one_returned()", file="NancyEngineFixture.cs", label="var result = localEngine.HandleRequest(request)", span="571-571"];
m9_442 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_return_static_content_response_if_one_returned()", file="NancyEngineFixture.cs", label="Exit Nancy.Tests.Unit.NancyEngineFixture.Should_return_static_content_response_if_one_returned()", span="556-556"];
m9_452 [cluster="System.Threading.Tasks.TaskCompletionSource<TResult>.TaskCompletionSource()", file="NancyEngineFixture.cs", label="Entry System.Threading.Tasks.TaskCompletionSource<TResult>.TaskCompletionSource()", span="0-0"];
m9_117 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_not_throw_exception_when_handlerequest_is_invoked_and_pre_request_hook_is_null()", file="NancyEngineFixture.cs", label="Entry Nancy.Tests.Unit.NancyEngineFixture.Should_not_throw_exception_when_handlerequest_is_invoked_and_pre_request_hook_is_null()", span="157-157"];
m9_118 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_not_throw_exception_when_handlerequest_is_invoked_and_pre_request_hook_is_null()", file="NancyEngineFixture.cs", label="var pipelines = new Pipelines { BeforeRequest = null }", span="160-160"];
m9_119 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_not_throw_exception_when_handlerequest_is_invoked_and_pre_request_hook_is_null()", file="NancyEngineFixture.cs", label="engine.RequestPipelinesFactory = (ctx) => pipelines", span="161-161"];
m9_120 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_not_throw_exception_when_handlerequest_is_invoked_and_pre_request_hook_is_null()", file="NancyEngineFixture.cs", label="var request = new Request(''GET'', ''/'', ''http'')", span="164-164"];
m9_121 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_not_throw_exception_when_handlerequest_is_invoked_and_pre_request_hook_is_null()", file="NancyEngineFixture.cs", label="this.engine.HandleRequest(request)", span="167-167"];
m9_122 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_not_throw_exception_when_handlerequest_is_invoked_and_pre_request_hook_is_null()", file="NancyEngineFixture.cs", label="Exit Nancy.Tests.Unit.NancyEngineFixture.Should_not_throw_exception_when_handlerequest_is_invoked_and_pre_request_hook_is_null()", span="157-157"];
m9_51 [cluster="Unk.Invoke", file="NancyEngineFixture.cs", label="Entry Unk.Invoke", span=""];
m9_24 [cluster="Unk.CallTo", file="NancyEngineFixture.cs", label="Entry Unk.CallTo", span=""];
m9_253 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_set_status_code_to_500_if_route_throws()", file="NancyEngineFixture.cs", label="Entry Nancy.Tests.Unit.NancyEngineFixture.Should_set_status_code_to_500_if_route_throws()", span="334-334"];
m9_254 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_set_status_code_to_500_if_route_throws()", file="NancyEngineFixture.cs", label="var resolvedRoute = new ResolveResult(\r\n                new FakeRoute(),\r\n                DynamicDictionary.Empty,\r\n                null,\r\n                null,\r\n                null)", span="337-342"];
m9_255 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_set_status_code_to_500_if_route_throws()", file="NancyEngineFixture.cs", label="A.CallTo(() => resolver.Resolve(A<NancyContext>.Ignored)).Returns(resolvedRoute)", span="344-344"];
m9_256 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_set_status_code_to_500_if_route_throws()", file="NancyEngineFixture.cs", label="A.CallTo(() => this.requestDispatcher.Dispatch(context, A<CancellationToken>._))\r\n                .Returns(TaskHelpers.GetFaultedTask<Response>(new NotImplementedException()))", span="346-347"];
m9_257 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_set_status_code_to_500_if_route_throws()", file="NancyEngineFixture.cs", label="var request = new Request(''GET'', ''/'', ''http'')", span="349-349"];
m9_258 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_set_status_code_to_500_if_route_throws()", file="NancyEngineFixture.cs", label="var result = this.engine.HandleRequest(request)", span="352-352"];
m9_259 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_set_status_code_to_500_if_route_throws()", file="NancyEngineFixture.cs", label="result.Response.StatusCode.ShouldEqual(HttpStatusCode.InternalServerError)", span="355-355"];
m9_260 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_set_status_code_to_500_if_route_throws()", file="NancyEngineFixture.cs", label="Exit Nancy.Tests.Unit.NancyEngineFixture.Should_set_status_code_to_500_if_route_throws()", span="334-334"];
m9_115 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="NancyEngineFixture.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m9_22 [cluster="Nancy.NancyContext.NancyContext()", file="NancyEngineFixture.cs", label="Entry Nancy.NancyContext.NancyContext()", span="25-25"];
m9_162 [cluster="Unk.ShouldBeSameAs", file="NancyEngineFixture.cs", label="Entry Unk.ShouldBeSameAs", span=""];
m9_308 [cluster="Nancy.Routing.Route.Route(string, string, System.Func<Nancy.NancyContext, bool>, System.Func<dynamic, System.Threading.CancellationToken, System.Threading.Tasks.Task<dynamic>>)", file="NancyEngineFixture.cs", label="Entry Nancy.Routing.Route.Route(string, string, System.Func<Nancy.NancyContext, bool>, System.Func<dynamic, System.Threading.CancellationToken, System.Threading.Tasks.Task<dynamic>>)", span="34-34"];
m9_66 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_throw_argumentnullexception_when_created_with_null_context_factory()", file="NancyEngineFixture.cs", label="Entry Nancy.Tests.Unit.NancyEngineFixture.Should_throw_argumentnullexception_when_created_with_null_context_factory()", span="79-79"];
m9_67 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_throw_argumentnullexception_when_created_with_null_context_factory()", file="NancyEngineFixture.cs", label="var exception =\r\n                Record.Exception(() => new NancyEngine(this.requestDispatcher, null, new[] { this.statusCodeHandler }, A.Fake<IRequestTracing>(), this.diagnosticsConfiguration, new DisabledStaticContentProvider()))", span="82-83"];
m9_68 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_throw_argumentnullexception_when_created_with_null_context_factory()", file="NancyEngineFixture.cs", label="exception.ShouldBeOfType<ArgumentNullException>()", span="86-86"];
m9_69 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_throw_argumentnullexception_when_created_with_null_context_factory()", file="NancyEngineFixture.cs", label="Exit Nancy.Tests.Unit.NancyEngineFixture.Should_throw_argumentnullexception_when_created_with_null_context_factory()", span="79-79"];
m9_444 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Entry lambda expression", span="560-560"];
m9_32 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Entry lambda expression", span="40-40"];
m9_36 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Entry lambda expression", span="43-43"];
m9_40 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Entry lambda expression", span="46-46"];
m9_44 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Entry lambda expression", span="49-49"];
m9_56 [cluster="lambda expression", file="NancyEngineFixture.cs", label=applicationPipelines, span="63-63"];
m9_48 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Entry lambda expression", span="55-55"];
m9_52 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Entry lambda expression", span="55-58"];
m9_33 [cluster="lambda expression", file="NancyEngineFixture.cs", label="this.requestDispatcher.Dispatch(A<NancyContext>._, A<CancellationToken>._)", span="40-40"];
m9_34 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Exit lambda expression", span="40-40"];
m9_37 [cluster="lambda expression", file="NancyEngineFixture.cs", label="this.statusCodeHandler.HandlesStatusCode(A<HttpStatusCode>.Ignored, A<NancyContext>.Ignored)", span="43-43"];
m9_38 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Exit lambda expression", span="43-43"];
m9_41 [cluster="lambda expression", file="NancyEngineFixture.cs", label="contextFactory.Create(A<Request>._)", span="46-46"];
m9_42 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Exit lambda expression", span="46-46"];
m9_45 [cluster="lambda expression", file="NancyEngineFixture.cs", label="resolver.Resolve(A<NancyContext>.Ignored)", span="49-49"];
m9_46 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Exit lambda expression", span="49-49"];
m9_49 [cluster="lambda expression", file="NancyEngineFixture.cs", label="this.routeInvoker.Invoke(A<Route>._, A<CancellationToken>._, A<DynamicDictionary>._, A<NancyContext>._)", span="55-55"];
m9_50 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Exit lambda expression", span="55-55"];
m9_53 [cluster="lambda expression", file="NancyEngineFixture.cs", label="return ((Route)arg.Arguments[0]).Action.Invoke((DynamicDictionary)arg.Arguments[1], A<CancellationToken>._).Result;", span="57-57"];
m9_54 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Exit lambda expression", span="55-58"];
m9_55 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Entry lambda expression", span="63-63"];
m9_57 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Exit lambda expression", span="63-63"];
m9_63 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Entry lambda expression", span="72-72"];
m9_64 [cluster="lambda expression", file="NancyEngineFixture.cs", label="new NancyEngine(null, A.Fake<INancyContextFactory>(), new[] { this.statusCodeHandler }, A.Fake<IRequestTracing>(), this.diagnosticsConfiguration, new DisabledStaticContentProvider())", span="72-72"];
m9_65 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Exit lambda expression", span="72-72"];
m9_70 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Entry lambda expression", span="83-83"];
m9_71 [cluster="lambda expression", file="NancyEngineFixture.cs", label="new NancyEngine(this.requestDispatcher, null, new[] { this.statusCodeHandler }, A.Fake<IRequestTracing>(), this.diagnosticsConfiguration, new DisabledStaticContentProvider())", span="83-83"];
m9_72 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Exit lambda expression", span="83-83"];
m9_77 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Entry lambda expression", span="94-94"];
m9_78 [cluster="lambda expression", file="NancyEngineFixture.cs", label="new NancyEngine(this.requestDispatcher, A.Fake<INancyContextFactory>(), null, A.Fake<IRequestTracing>(), this.diagnosticsConfiguration, new DisabledStaticContentProvider())", span="94-94"];
m9_79 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Exit lambda expression", span="94-94"];
m9_86 [cluster="lambda expression", file="NancyEngineFixture.cs", label="engine.HandleRequest(request)", span="107-107"];
m9_85 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Entry lambda expression", span="107-107"];
m9_87 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Exit lambda expression", span="107-107"];
m9_97 [cluster="lambda expression", file="NancyEngineFixture.cs", label="this.contextFactory.Create(request)", span="123-123"];
m9_96 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Entry lambda expression", span="123-123"];
m9_98 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Exit lambda expression", span="123-123"];
m9_107 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Entry lambda expression", span="132-132"];
m9_108 [cluster="lambda expression", file="NancyEngineFixture.cs", label="this.requestDispatcher.Dispatch(this.context, A<CancellationToken>._)", span="132-132"];
m9_109 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Exit lambda expression", span="132-132"];
m9_124 [cluster="lambda expression", file="NancyEngineFixture.cs", label=pipelines, span="161-161"];
m9_123 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Entry lambda expression", span="161-161"];
m9_125 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Exit lambda expression", span="161-161"];
m9_133 [cluster="lambda expression", file="NancyEngineFixture.cs", label=pipelines, span="175-175"];
m9_132 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Entry lambda expression", span="175-175"];
m9_134 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Exit lambda expression", span="175-175"];
m9_151 [cluster="lambda expression", file="NancyEngineFixture.cs", label=pipelines, span="197-197"];
m9_146 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Entry lambda expression", span="191-195"];
m9_147 [cluster="lambda expression", file="NancyEngineFixture.cs", label="passedRequest = ctx.Request", span="193-193"];
m9_148 [cluster="lambda expression", file="NancyEngineFixture.cs", label="return null;", span="194-194"];
m9_149 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Exit lambda expression", span="191-195"];
m9_150 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Entry lambda expression", span="197-197"];
m9_152 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Exit lambda expression", span="197-197"];
m9_164 [cluster="lambda expression", file="NancyEngineFixture.cs", label=returnedResponse, span="217-217"];
m9_167 [cluster="lambda expression", file="NancyEngineFixture.cs", label=pipelines, span="219-219"];
m9_163 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Entry lambda expression", span="217-217"];
m9_165 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Exit lambda expression", span="217-217"];
m9_166 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Entry lambda expression", span="219-219"];
m9_168 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Exit lambda expression", span="219-219"];
m9_185 [cluster="lambda expression", file="NancyEngineFixture.cs", label=pipelines, span="241-241"];
m9_178 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Entry lambda expression", span="235-239"];
m9_179 [cluster="lambda expression", file="NancyEngineFixture.cs", label="ctx.Items.Add(''PostReqTest'', new object())", span="237-237"];
m9_180 [cluster="lambda expression", file="NancyEngineFixture.cs", label="return null;", span="238-238"];
m9_181 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Exit lambda expression", span="235-239"];
m9_184 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Entry lambda expression", span="241-241"];
m9_186 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Exit lambda expression", span="241-241"];
m9_197 [cluster="lambda expression", file="NancyEngineFixture.cs", label="ctx.Response = newResponse", span="259-259"];
m9_200 [cluster="lambda expression", file="NancyEngineFixture.cs", label=pipelines, span="260-260"];
m9_196 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Entry lambda expression", span="259-259"];
m9_198 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Exit lambda expression", span="259-259"];
m9_199 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Entry lambda expression", span="260-260"];
m9_201 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Exit lambda expression", span="260-260"];
m9_215 [cluster="lambda expression", file="NancyEngineFixture.cs", label=returnedResponse, span="279-279"];
m9_221 [cluster="lambda expression", file="NancyEngineFixture.cs", label=pipelines, span="282-282"];
m9_214 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Entry lambda expression", span="279-279"];
m9_217 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Entry lambda expression", span="280-280"];
m9_216 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Exit lambda expression", span="279-279"];
m9_218 [cluster="lambda expression", file="NancyEngineFixture.cs", label="postReqCalled = true", span="280-280"];
m9_219 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Exit lambda expression", span="280-280"];
m9_220 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Entry lambda expression", span="282-282"];
m9_222 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Exit lambda expression", span="282-282"];
m9_228 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Entry lambda expression", span="303-303"];
m9_229 [cluster="lambda expression", file="NancyEngineFixture.cs", label="this.statusCodeHandler.HandlesStatusCode(A<HttpStatusCode>.Ignored, A<NancyContext>.Ignored)", span="303-303"];
m9_230 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Exit lambda expression", span="303-303"];
m9_237 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Entry lambda expression", span="316-316"];
m9_238 [cluster="lambda expression", file="NancyEngineFixture.cs", label="this.statusCodeHandler.Handle(A<HttpStatusCode>.Ignored, A<NancyContext>.Ignored)", span="316-316"];
m9_239 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Exit lambda expression", span="316-316"];
m9_247 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Entry lambda expression", span="324-324"];
m9_250 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Entry lambda expression", span="330-330"];
m9_248 [cluster="lambda expression", file="NancyEngineFixture.cs", label="this.statusCodeHandler.HandlesStatusCode(A<HttpStatusCode>.Ignored, A<NancyContext>.Ignored)", span="324-324"];
m9_249 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Exit lambda expression", span="324-324"];
m9_251 [cluster="lambda expression", file="NancyEngineFixture.cs", label="this.statusCodeHandler.Handle(A<HttpStatusCode>.Ignored, A<NancyContext>.Ignored)", span="330-330"];
m9_252 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Exit lambda expression", span="330-330"];
m9_266 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Entry lambda expression", span="344-344"];
m9_269 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Entry lambda expression", span="346-346"];
m9_267 [cluster="lambda expression", file="NancyEngineFixture.cs", label="resolver.Resolve(A<NancyContext>.Ignored)", span="344-344"];
m9_268 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Exit lambda expression", span="344-344"];
m9_270 [cluster="lambda expression", file="NancyEngineFixture.cs", label="this.requestDispatcher.Dispatch(context, A<CancellationToken>._)", span="346-346"];
m9_271 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Exit lambda expression", span="346-346"];
m9_282 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Entry lambda expression", span="369-369"];
m9_285 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Entry lambda expression", span="371-371"];
m9_283 [cluster="lambda expression", file="NancyEngineFixture.cs", label="resolver.Resolve(A<NancyContext>.Ignored)", span="369-369"];
m9_284 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Exit lambda expression", span="369-369"];
m9_286 [cluster="lambda expression", file="NancyEngineFixture.cs", label="this.requestDispatcher.Dispatch(context, A<CancellationToken>._)", span="371-371"];
m9_287 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Exit lambda expression", span="371-371"];
m9_312 [cluster="lambda expression", file="NancyEngineFixture.cs", label="throw testEx;", span="390-390"];
m9_314 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Entry lambda expression", span="399-399"];
m9_317 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Entry lambda expression", span="401-401"];
m9_323 [cluster="lambda expression", file="NancyEngineFixture.cs", label="return errorResponse;", span="412-412"];
m9_321 [cluster="lambda expression", file="NancyEngineFixture.cs", label="handledContext = ctx", span="410-410"];
m9_322 [cluster="lambda expression", file="NancyEngineFixture.cs", label="handledException = ex", span="411-411"];
m9_326 [cluster="lambda expression", file="NancyEngineFixture.cs", label=pipelines, span="418-418"];
m9_311 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Entry lambda expression", span="390-390"];
m9_313 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Exit lambda expression", span="390-390"];
m9_315 [cluster="lambda expression", file="NancyEngineFixture.cs", label="resolver.Resolve(A<NancyContext>.Ignored)", span="399-399"];
m9_316 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Exit lambda expression", span="399-399"];
m9_318 [cluster="lambda expression", file="NancyEngineFixture.cs", label="this.requestDispatcher.Dispatch(context, A<CancellationToken>._)", span="401-401"];
m9_319 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Exit lambda expression", span="401-401"];
m9_320 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Entry lambda expression", span="408-413"];
m9_324 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Exit lambda expression", span="408-413"];
m9_325 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Entry lambda expression", span="418-418"];
m9_327 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Exit lambda expression", span="418-418"];
m9_355 [cluster="lambda expression", file="NancyEngineFixture.cs", label="routeUnderTest.Action.Invoke(DynamicDictionary.Empty, new CancellationToken())", span="444-444"];
m9_348 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Entry lambda expression", span="441-441"];
m9_351 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Entry lambda expression", span="443-443"];
m9_354 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Entry lambda expression", span="444-444"];
m9_359 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Entry lambda expression", span="446-446"];
m9_366 [cluster="lambda expression", file="NancyEngineFixture.cs", label=pipelines, span="451-451"];
m9_362 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Entry lambda expression", span="450-450"];
m9_345 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Entry lambda expression", span="436-436"];
m9_346 [cluster="lambda expression", file="NancyEngineFixture.cs", label="throw new Exception();", span="436-436"];
m9_347 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Exit lambda expression", span="436-436"];
m9_349 [cluster="lambda expression", file="NancyEngineFixture.cs", label="resolver.Resolve(A<NancyContext>.Ignored)", span="441-441"];
m9_350 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Exit lambda expression", span="441-441"];
m9_352 [cluster="lambda expression", file="NancyEngineFixture.cs", label="this.routeInvoker.Invoke(A<Route>._, A<CancellationToken>._, A<DynamicDictionary>._, A<NancyContext>._)", span="443-443"];
m9_353 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Exit lambda expression", span="443-443"];
m9_356 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Exit lambda expression", span="444-444"];
m9_360 [cluster="lambda expression", file="NancyEngineFixture.cs", label="this.requestDispatcher.Dispatch(context, A<CancellationToken>._)", span="446-446"];
m9_361 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Exit lambda expression", span="446-446"];
m9_363 [cluster="lambda expression", file="NancyEngineFixture.cs", label=null, span="450-450"];
m9_364 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Exit lambda expression", span="450-450"];
m9_365 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Entry lambda expression", span="451-451"];
m9_367 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Exit lambda expression", span="451-451"];
m9_381 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Entry lambda expression", span="476-476"];
m9_384 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Entry lambda expression", span="478-478"];
m9_391 [cluster="lambda expression", file="NancyEngineFixture.cs", label=pipelines, span="483-483"];
m9_387 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Entry lambda expression", span="482-482"];
m9_382 [cluster="lambda expression", file="NancyEngineFixture.cs", label="resolver.Resolve(A<NancyContext>.Ignored)", span="476-476"];
m9_383 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Exit lambda expression", span="476-476"];
m9_385 [cluster="lambda expression", file="NancyEngineFixture.cs", label="this.requestDispatcher.Dispatch(context, A<CancellationToken>._)", span="478-478"];
m9_386 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Exit lambda expression", span="478-478"];
m9_388 [cluster="lambda expression", file="NancyEngineFixture.cs", label=null, span="482-482"];
m9_389 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Exit lambda expression", span="482-482"];
m9_390 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Entry lambda expression", span="483-483"];
m9_392 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Exit lambda expression", span="483-483"];
m9_404 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Entry lambda expression", span="506-506"];
m9_407 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Entry lambda expression", span="508-508"];
m9_411 [cluster="lambda expression", file="NancyEngineFixture.cs", label=pipelines, span="512-512"];
m9_405 [cluster="lambda expression", file="NancyEngineFixture.cs", label="resolver.Resolve(A<NancyContext>.Ignored)", span="506-506"];
m9_406 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Exit lambda expression", span="506-506"];
m9_408 [cluster="lambda expression", file="NancyEngineFixture.cs", label="this.requestDispatcher.Dispatch(context, A<CancellationToken>._)", span="508-508"];
m9_409 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Exit lambda expression", span="508-508"];
m9_410 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Entry lambda expression", span="512-512"];
m9_412 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Exit lambda expression", span="512-512"];
m9_425 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Entry lambda expression", span="537-537"];
m9_428 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Entry lambda expression", span="539-539"];
m9_432 [cluster="lambda expression", file="NancyEngineFixture.cs", label=pipelines, span="543-543"];
m9_426 [cluster="lambda expression", file="NancyEngineFixture.cs", label="resolver.Resolve(A<NancyContext>.Ignored)", span="537-537"];
m9_427 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Exit lambda expression", span="537-537"];
m9_429 [cluster="lambda expression", file="NancyEngineFixture.cs", label="this.requestDispatcher.Dispatch(context, A<CancellationToken>._)", span="539-539"];
m9_430 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Exit lambda expression", span="539-539"];
m9_431 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Entry lambda expression", span="543-543"];
m9_433 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Exit lambda expression", span="543-543"];
m9_445 [cluster="lambda expression", file="NancyEngineFixture.cs", label="staticContent.GetContent(A<NancyContext>._)", span="560-560"];
m9_446 [cluster="lambda expression", file="NancyEngineFixture.cs", label="Exit lambda expression", span="560-560"];
m9_343 [cluster="System.Collections.Generic.ICollection<T>.Contains(T)", file="NancyEngineFixture.cs", label="Entry System.Collections.Generic.ICollection<T>.Contains(T)", span="0-0"];
m9_241 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_invoke_status_handler_if_supported_status_code()", file="NancyEngineFixture.cs", label="Entry Nancy.Tests.Unit.NancyEngineFixture.Should_invoke_status_handler_if_supported_status_code()", span="320-320"];
m9_242 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_invoke_status_handler_if_supported_status_code()", file="NancyEngineFixture.cs", label="var request = new Request(''GET'', ''/'', ''http'')", span="323-323"];
m9_243 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_invoke_status_handler_if_supported_status_code()", file="NancyEngineFixture.cs", label="A.CallTo(() => this.statusCodeHandler.HandlesStatusCode(A<HttpStatusCode>.Ignored, A<NancyContext>.Ignored)).Returns(true)", span="324-324"];
m9_244 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_invoke_status_handler_if_supported_status_code()", file="NancyEngineFixture.cs", label="this.engine.HandleRequest(request)", span="327-327"];
m9_245 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_invoke_status_handler_if_supported_status_code()", file="NancyEngineFixture.cs", label="A.CallTo(() => this.statusCodeHandler.Handle(A<HttpStatusCode>.Ignored, A<NancyContext>.Ignored)).MustHaveHappened(Repeated.Exactly.Once)", span="330-330"];
m9_246 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_invoke_status_handler_if_supported_status_code()", file="NancyEngineFixture.cs", label="Exit Nancy.Tests.Unit.NancyEngineFixture.Should_invoke_status_handler_if_supported_status_code()", span="320-320"];
m9_413 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_persist_original_exception_in_requestexecutionexception_when_pipeline_is_null()", file="NancyEngineFixture.cs", label="Entry Nancy.Tests.Unit.NancyEngineFixture.Should_persist_original_exception_in_requestexecutionexception_when_pipeline_is_null()", span="525-525"];
m9_414 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_persist_original_exception_in_requestexecutionexception_when_pipeline_is_null()", file="NancyEngineFixture.cs", label="var expectedException = new Exception()", span="528-528"];
m9_415 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_persist_original_exception_in_requestexecutionexception_when_pipeline_is_null()", file="NancyEngineFixture.cs", label="var resolvedRoute = new ResolveResult(\r\n                new FakeRoute(),\r\n                DynamicDictionary.Empty,\r\n                null,\r\n                null,\r\n                null)", span="530-535"];
m9_417 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_persist_original_exception_in_requestexecutionexception_when_pipeline_is_null()", file="NancyEngineFixture.cs", label="A.CallTo(() => this.requestDispatcher.Dispatch(context, A<CancellationToken>._))\r\n                .Returns(TaskHelpers.GetFaultedTask<Response>(expectedException))", span="539-540"];
m9_423 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_persist_original_exception_in_requestexecutionexception_when_pipeline_is_null()", file="NancyEngineFixture.cs", label="returnedException.InnerException.ShouldBeSameAs(expectedException)", span="552-552"];
m9_416 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_persist_original_exception_in_requestexecutionexception_when_pipeline_is_null()", file="NancyEngineFixture.cs", label="A.CallTo(() => resolver.Resolve(A<NancyContext>.Ignored)).Returns(resolvedRoute)", span="537-537"];
m9_418 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_persist_original_exception_in_requestexecutionexception_when_pipeline_is_null()", file="NancyEngineFixture.cs", label="var pipelines = new Pipelines { OnError = null }", span="542-542"];
m9_419 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_persist_original_exception_in_requestexecutionexception_when_pipeline_is_null()", file="NancyEngineFixture.cs", label="engine.RequestPipelinesFactory = (ctx) => pipelines", span="543-543"];
m9_420 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_persist_original_exception_in_requestexecutionexception_when_pipeline_is_null()", file="NancyEngineFixture.cs", label="var request = new Request(''GET'', ''/'', ''http'')", span="545-545"];
m9_421 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_persist_original_exception_in_requestexecutionexception_when_pipeline_is_null()", file="NancyEngineFixture.cs", label="var result = this.engine.HandleRequest(request)", span="548-548"];
m9_422 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_persist_original_exception_in_requestexecutionexception_when_pipeline_is_null()", file="NancyEngineFixture.cs", label="var returnedException = result.Items[''ERROR_EXCEPTION''] as RequestExecutionException", span="549-549"];
m9_424 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_persist_original_exception_in_requestexecutionexception_when_pipeline_is_null()", file="NancyEngineFixture.cs", label="Exit Nancy.Tests.Unit.NancyEngineFixture.Should_persist_original_exception_in_requestexecutionexception_when_pipeline_is_null()", span="525-525"];
m9_89 [cluster="Nancy.Tests.Unit.NancyEngineFixture.HandleRequest_should_get_context_from_context_factory()", file="NancyEngineFixture.cs", label="Entry Nancy.Tests.Unit.NancyEngineFixture.HandleRequest_should_get_context_from_context_factory()", span="114-114"];
m9_90 [cluster="Nancy.Tests.Unit.NancyEngineFixture.HandleRequest_should_get_context_from_context_factory()", file="NancyEngineFixture.cs", label="var request = new Request(''GET'', ''/'', ''http'')", span="117-117"];
m9_91 [cluster="Nancy.Tests.Unit.NancyEngineFixture.HandleRequest_should_get_context_from_context_factory()", file="NancyEngineFixture.cs", label="this.engine.HandleRequest(request)", span="120-120"];
m9_92 [cluster="Nancy.Tests.Unit.NancyEngineFixture.HandleRequest_should_get_context_from_context_factory()", file="NancyEngineFixture.cs", label="A.CallTo(() => this.contextFactory.Create(request)).MustHaveHappened(Repeated.Exactly.Once)", span="123-123"];
m9_93 [cluster="Nancy.Tests.Unit.NancyEngineFixture.HandleRequest_should_get_context_from_context_factory()", file="NancyEngineFixture.cs", label="Exit Nancy.Tests.Unit.NancyEngineFixture.HandleRequest_should_get_context_from_context_factory()", span="114-114"];
m9_447 [cluster="Unk.GetContent", file="NancyEngineFixture.cs", label="Entry Unk.GetContent", span=""];
m9_62 [cluster="Unk.Exception", file="NancyEngineFixture.cs", label="Entry Unk.Exception", span=""];
m9_223 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_ask_status_handler_if_it_can_handle_status_code()", file="NancyEngineFixture.cs", label="Entry Nancy.Tests.Unit.NancyEngineFixture.Should_ask_status_handler_if_it_can_handle_status_code()", span="294-294"];
m9_224 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_ask_status_handler_if_it_can_handle_status_code()", file="NancyEngineFixture.cs", label="var request = new Request(''GET'', ''/'', ''http'')", span="297-297"];
m9_225 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_ask_status_handler_if_it_can_handle_status_code()", file="NancyEngineFixture.cs", label="this.engine.HandleRequest(request)", span="300-300"];
m9_226 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_ask_status_handler_if_it_can_handle_status_code()", file="NancyEngineFixture.cs", label="A.CallTo(() => this.statusCodeHandler.HandlesStatusCode(A<HttpStatusCode>.Ignored, A<NancyContext>.Ignored)).MustHaveHappened(Repeated.Exactly.Once)", span="303-303"];
m9_227 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_ask_status_handler_if_it_can_handle_status_code()", file="NancyEngineFixture.cs", label="Exit Nancy.Tests.Unit.NancyEngineFixture.Should_ask_status_handler_if_it_can_handle_status_code()", span="294-294"];
m9_58 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_throw_argumentnullexception_when_created_with_null_dispatcher()", file="NancyEngineFixture.cs", label="Entry Nancy.Tests.Unit.NancyEngineFixture.Should_throw_argumentnullexception_when_created_with_null_dispatcher()", span="68-68"];
m9_59 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_throw_argumentnullexception_when_created_with_null_dispatcher()", file="NancyEngineFixture.cs", label="var exception =\r\n                Record.Exception(() => new NancyEngine(null, A.Fake<INancyContextFactory>(), new[] { this.statusCodeHandler }, A.Fake<IRequestTracing>(), this.diagnosticsConfiguration, new DisabledStaticContentProvider()))", span="71-72"];
m9_60 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_throw_argumentnullexception_when_created_with_null_dispatcher()", file="NancyEngineFixture.cs", label="exception.ShouldBeOfType<ArgumentNullException>()", span="75-75"];
m9_61 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_throw_argumentnullexception_when_created_with_null_dispatcher()", file="NancyEngineFixture.cs", label="Exit Nancy.Tests.Unit.NancyEngineFixture.Should_throw_argumentnullexception_when_created_with_null_dispatcher()", span="68-68"];
m9_135 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_call_pre_request_hook_should_be_invoked_with_request_from_context()", file="NancyEngineFixture.cs", label="Entry Nancy.Tests.Unit.NancyEngineFixture.Should_call_pre_request_hook_should_be_invoked_with_request_from_context()", span="185-185"];
m9_136 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_call_pre_request_hook_should_be_invoked_with_request_from_context()", file="NancyEngineFixture.cs", label="Request passedRequest = null", span="188-188"];
m9_137 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_call_pre_request_hook_should_be_invoked_with_request_from_context()", file="NancyEngineFixture.cs", label="var pipelines = new Pipelines()", span="190-190"];
m9_138 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_call_pre_request_hook_should_be_invoked_with_request_from_context()", file="NancyEngineFixture.cs", label="pipelines.BeforeRequest.AddItemToStartOfPipeline((ctx) =>\r\n            {\r\n                passedRequest = ctx.Request;\r\n                return null;\r\n            })", span="191-195"];
m9_139 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_call_pre_request_hook_should_be_invoked_with_request_from_context()", file="NancyEngineFixture.cs", label="engine.RequestPipelinesFactory = (ctx) => pipelines", span="197-197"];
m9_143 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_call_pre_request_hook_should_be_invoked_with_request_from_context()", file="NancyEngineFixture.cs", label="passedRequest.ShouldBeSameAs(request)", span="207-207"];
m9_140 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_call_pre_request_hook_should_be_invoked_with_request_from_context()", file="NancyEngineFixture.cs", label="var request = new Request(''GET'', ''/'', ''http'')", span="199-199"];
m9_141 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_call_pre_request_hook_should_be_invoked_with_request_from_context()", file="NancyEngineFixture.cs", label="this.context.Request = request", span="201-201"];
m9_142 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_call_pre_request_hook_should_be_invoked_with_request_from_context()", file="NancyEngineFixture.cs", label="this.engine.HandleRequest(request)", span="204-204"];
m9_144 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_call_pre_request_hook_should_be_invoked_with_request_from_context()", file="NancyEngineFixture.cs", label="Exit Nancy.Tests.Unit.NancyEngineFixture.Should_call_pre_request_hook_should_be_invoked_with_request_from_context()", span="185-185"];
m9_153 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_return_response_from_pre_request_hook_when_not_null()", file="NancyEngineFixture.cs", label="Entry Nancy.Tests.Unit.NancyEngineFixture.Should_return_response_from_pre_request_hook_when_not_null()", span="211-211"];
m9_154 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_return_response_from_pre_request_hook_when_not_null()", file="NancyEngineFixture.cs", label="var returnedResponse = A.Fake<Response>()", span="214-214"];
m9_155 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_return_response_from_pre_request_hook_when_not_null()", file="NancyEngineFixture.cs", label="var pipelines = new Pipelines()", span="216-216"];
m9_156 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_return_response_from_pre_request_hook_when_not_null()", file="NancyEngineFixture.cs", label="pipelines.BeforeRequest.AddItemToStartOfPipeline(ctx => returnedResponse)", span="217-217"];
m9_160 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_return_response_from_pre_request_hook_when_not_null()", file="NancyEngineFixture.cs", label="result.Response.ShouldBeSameAs(returnedResponse)", span="227-227"];
m9_157 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_return_response_from_pre_request_hook_when_not_null()", file="NancyEngineFixture.cs", label="engine.RequestPipelinesFactory = (ctx) => pipelines", span="219-219"];
m9_158 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_return_response_from_pre_request_hook_when_not_null()", file="NancyEngineFixture.cs", label="var request = new Request(''GET'', ''/'', ''http'')", span="221-221"];
m9_159 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_return_response_from_pre_request_hook_when_not_null()", file="NancyEngineFixture.cs", label="var result = this.engine.HandleRequest(request)", span="224-224"];
m9_161 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_return_response_from_pre_request_hook_when_not_null()", file="NancyEngineFixture.cs", label="Exit Nancy.Tests.Unit.NancyEngineFixture.Should_return_response_from_pre_request_hook_when_not_null()", span="211-211"];
m9_202 [cluster="Nancy.Tests.Unit.NancyEngineFixture.HandleRequest_prereq_returns_response_should_still_run_postreq()", file="NancyEngineFixture.cs", label="Entry Nancy.Tests.Unit.NancyEngineFixture.HandleRequest_prereq_returns_response_should_still_run_postreq()", span="272-272"];
m9_203 [cluster="Nancy.Tests.Unit.NancyEngineFixture.HandleRequest_prereq_returns_response_should_still_run_postreq()", file="NancyEngineFixture.cs", label="var returnedResponse = A.Fake<Response>()", span="275-275"];
m9_204 [cluster="Nancy.Tests.Unit.NancyEngineFixture.HandleRequest_prereq_returns_response_should_still_run_postreq()", file="NancyEngineFixture.cs", label="var postReqCalled = false", span="276-276"];
m9_206 [cluster="Nancy.Tests.Unit.NancyEngineFixture.HandleRequest_prereq_returns_response_should_still_run_postreq()", file="NancyEngineFixture.cs", label="pipelines.BeforeRequest.AddItemToStartOfPipeline(ctx => returnedResponse)", span="279-279"];
m9_205 [cluster="Nancy.Tests.Unit.NancyEngineFixture.HandleRequest_prereq_returns_response_should_still_run_postreq()", file="NancyEngineFixture.cs", label="var pipelines = new Pipelines()", span="278-278"];
m9_207 [cluster="Nancy.Tests.Unit.NancyEngineFixture.HandleRequest_prereq_returns_response_should_still_run_postreq()", file="NancyEngineFixture.cs", label="pipelines.AfterRequest.AddItemToEndOfPipeline(ctx => postReqCalled = true)", span="280-280"];
m9_208 [cluster="Nancy.Tests.Unit.NancyEngineFixture.HandleRequest_prereq_returns_response_should_still_run_postreq()", file="NancyEngineFixture.cs", label="engine.RequestPipelinesFactory = (ctx) => pipelines", span="282-282"];
m9_211 [cluster="Nancy.Tests.Unit.NancyEngineFixture.HandleRequest_prereq_returns_response_should_still_run_postreq()", file="NancyEngineFixture.cs", label="postReqCalled.ShouldBeTrue()", span="290-290"];
m9_209 [cluster="Nancy.Tests.Unit.NancyEngineFixture.HandleRequest_prereq_returns_response_should_still_run_postreq()", file="NancyEngineFixture.cs", label="var request = new Request(''GET'', ''/'', ''http'')", span="284-284"];
m9_210 [cluster="Nancy.Tests.Unit.NancyEngineFixture.HandleRequest_prereq_returns_response_should_still_run_postreq()", file="NancyEngineFixture.cs", label="this.engine.HandleRequest(request)", span="287-287"];
m9_212 [cluster="Nancy.Tests.Unit.NancyEngineFixture.HandleRequest_prereq_returns_response_should_still_run_postreq()", file="NancyEngineFixture.cs", label="Exit Nancy.Tests.Unit.NancyEngineFixture.HandleRequest_prereq_returns_response_should_still_run_postreq()", span="272-272"];
m9_272 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_store_exception_details_if_dispatcher_throws()", file="NancyEngineFixture.cs", label="Entry Nancy.Tests.Unit.NancyEngineFixture.Should_store_exception_details_if_dispatcher_throws()", span="359-359"];
m9_273 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_store_exception_details_if_dispatcher_throws()", file="NancyEngineFixture.cs", label="var resolvedRoute = new ResolveResult(\r\n                new FakeRoute(),\r\n                DynamicDictionary.Empty,\r\n                null,\r\n                null,\r\n                null)", span="362-367"];
m9_274 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_store_exception_details_if_dispatcher_throws()", file="NancyEngineFixture.cs", label="A.CallTo(() => resolver.Resolve(A<NancyContext>.Ignored)).Returns(resolvedRoute)", span="369-369"];
m9_275 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_store_exception_details_if_dispatcher_throws()", file="NancyEngineFixture.cs", label="A.CallTo(() => this.requestDispatcher.Dispatch(context, A<CancellationToken>._))\r\n                .Returns(TaskHelpers.GetFaultedTask<Response>(new NotImplementedException()))", span="371-372"];
m9_276 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_store_exception_details_if_dispatcher_throws()", file="NancyEngineFixture.cs", label="var request = new Request(''GET'', ''/'', ''http'')", span="374-374"];
m9_277 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_store_exception_details_if_dispatcher_throws()", file="NancyEngineFixture.cs", label="var result = this.engine.HandleRequest(request)", span="377-377"];
m9_278 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_store_exception_details_if_dispatcher_throws()", file="NancyEngineFixture.cs", label="result.GetExceptionDetails().ShouldContain(''NotImplementedException'')", span="380-380"];
m9_279 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_store_exception_details_if_dispatcher_throws()", file="NancyEngineFixture.cs", label="Exit Nancy.Tests.Unit.NancyEngineFixture.Should_store_exception_details_if_dispatcher_throws()", span="359-359"];
m9_43 [cluster="Unk.Create", file="NancyEngineFixture.cs", label="Entry Unk.Create", span=""];
m9_443 [cluster="Nancy.NancyEngine.HandleRequest(Nancy.Request)", file="NancyEngineFixture.cs", label="Entry Nancy.NancyEngine.HandleRequest(Nancy.Request)", span="77-77"];
m9_26 [cluster="Unk.Returns", file="NancyEngineFixture.cs", label="Entry Unk.Returns", span=""];
m9_183 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="NancyEngineFixture.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m9_213 [cluster="Nancy.AsyncNamedPipelineBase<TAsyncDelegate, TSyncDelegate>.AddItemToEndOfPipeline(TSyncDelegate)", file="NancyEngineFixture.cs", label="Entry Nancy.AsyncNamedPipelineBase<TAsyncDelegate, TSyncDelegate>.AddItemToEndOfPipeline(TSyncDelegate)", span="96-96"];
m9_358 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="NancyEngineFixture.cs", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
m9_20 [cluster="Nancy.Response.Response()", file="NancyEngineFixture.cs", label="Entry Nancy.Response.Response()", span="20-20"];
m9_328 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_add_unhandled_exception_to_context_as_requestexecutionexception()", file="NancyEngineFixture.cs", label="Entry Nancy.Tests.Unit.NancyEngineFixture.Should_add_unhandled_exception_to_context_as_requestexecutionexception()", span="432-432"];
m9_329 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_add_unhandled_exception_to_context_as_requestexecutionexception()", file="NancyEngineFixture.cs", label="var routeUnderTest =\r\n                new Route(''GET'', ''/'', null, (x,c) => { throw new Exception(); })", span="435-436"];
m9_330 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_add_unhandled_exception_to_context_as_requestexecutionexception()", file="NancyEngineFixture.cs", label="var resolved =\r\n                new ResolveResult(routeUnderTest, DynamicDictionary.Empty, null, null, null)", span="438-439"];
m9_332 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_add_unhandled_exception_to_context_as_requestexecutionexception()", file="NancyEngineFixture.cs", label="A.CallTo(() => this.routeInvoker.Invoke(A<Route>._, A<CancellationToken>._, A<DynamicDictionary>._, A<NancyContext>._))\r\n                .Invokes((x) => routeUnderTest.Action.Invoke(DynamicDictionary.Empty, new CancellationToken()))", span="443-444"];
m9_331 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_add_unhandled_exception_to_context_as_requestexecutionexception()", file="NancyEngineFixture.cs", label="A.CallTo(() => resolver.Resolve(A<NancyContext>.Ignored)).Returns(resolved)", span="441-441"];
m9_333 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_add_unhandled_exception_to_context_as_requestexecutionexception()", file="NancyEngineFixture.cs", label="A.CallTo(() => this.requestDispatcher.Dispatch(context, A<CancellationToken>._))\r\n                .Returns(TaskHelpers.GetFaultedTask<Response>(new Exception()))", span="446-447"];
m9_334 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_add_unhandled_exception_to_context_as_requestexecutionexception()", file="NancyEngineFixture.cs", label="var pipelines = new Pipelines()", span="449-449"];
m9_335 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_add_unhandled_exception_to_context_as_requestexecutionexception()", file="NancyEngineFixture.cs", label="pipelines.OnError.AddItemToStartOfPipeline((ctx, exception) => null)", span="450-450"];
m9_336 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_add_unhandled_exception_to_context_as_requestexecutionexception()", file="NancyEngineFixture.cs", label="engine.RequestPipelinesFactory = (ctx) => pipelines", span="451-451"];
m9_337 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_add_unhandled_exception_to_context_as_requestexecutionexception()", file="NancyEngineFixture.cs", label="var request = new Request(''GET'', ''/'', ''http'')", span="453-453"];
m9_338 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_add_unhandled_exception_to_context_as_requestexecutionexception()", file="NancyEngineFixture.cs", label="var result = this.engine.HandleRequest(request)", span="456-456"];
m9_339 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_add_unhandled_exception_to_context_as_requestexecutionexception()", file="NancyEngineFixture.cs", label="result.Items.Keys.Contains(''ERROR_EXCEPTION'').ShouldBeTrue()", span="459-459"];
m9_340 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_add_unhandled_exception_to_context_as_requestexecutionexception()", file="NancyEngineFixture.cs", label="result.Items[''ERROR_EXCEPTION''].ShouldBeOfType<RequestExecutionException>()", span="460-460"];
m9_341 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_add_unhandled_exception_to_context_as_requestexecutionexception()", file="NancyEngineFixture.cs", label="Exit Nancy.Tests.Unit.NancyEngineFixture.Should_add_unhandled_exception_to_context_as_requestexecutionexception()", span="432-432"];
m9_29 [cluster="Unk.ReturnsLazily", file="NancyEngineFixture.cs", label="Entry Unk.ReturnsLazily", span=""];
m9_187 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_allow_post_request_hook_to_replace_response()", file="NancyEngineFixture.cs", label="Entry Nancy.Tests.Unit.NancyEngineFixture.Should_allow_post_request_hook_to_replace_response()", span="253-253"];
m9_188 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_allow_post_request_hook_to_replace_response()", file="NancyEngineFixture.cs", label="var newResponse = new Response()", span="256-256"];
m9_189 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_allow_post_request_hook_to_replace_response()", file="NancyEngineFixture.cs", label="var pipelines = new Pipelines()", span="258-258"];
m9_190 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_allow_post_request_hook_to_replace_response()", file="NancyEngineFixture.cs", label="pipelines.BeforeRequest.AddItemToStartOfPipeline(ctx => ctx.Response = newResponse)", span="259-259"];
m9_194 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_allow_post_request_hook_to_replace_response()", file="NancyEngineFixture.cs", label="result.Response.ShouldBeSameAs(newResponse)", span="268-268"];
m9_191 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_allow_post_request_hook_to_replace_response()", file="NancyEngineFixture.cs", label="engine.RequestPipelinesFactory = (ctx) => pipelines", span="260-260"];
m9_192 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_allow_post_request_hook_to_replace_response()", file="NancyEngineFixture.cs", label="var request = new Request(''GET'', ''/'', ''http'')", span="262-262"];
m9_193 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_allow_post_request_hook_to_replace_response()", file="NancyEngineFixture.cs", label="var result = this.engine.HandleRequest(request)", span="265-265"];
m9_195 [cluster="Nancy.Tests.Unit.NancyEngineFixture.Should_allow_post_request_hook_to_replace_response()", file="NancyEngineFixture.cs", label="Exit Nancy.Tests.Unit.NancyEngineFixture.Should_allow_post_request_hook_to_replace_response()", span="253-253"];
m9_454 [file="NancyEngineFixture.cs", label="Nancy.Tests.Unit.NancyEngineFixture", span=""];
m9_455 [file="NancyEngineFixture.cs", label=applicationPipelines, span=""];
m9_456 [file="NancyEngineFixture.cs", label=request, span=""];
m9_457 [file="NancyEngineFixture.cs", label=request, span=""];
m9_458 [file="NancyEngineFixture.cs", label=pipelines, span=""];
m9_459 [file="NancyEngineFixture.cs", label=pipelines, span=""];
m9_460 [file="NancyEngineFixture.cs", label=pipelines, span=""];
m9_461 [file="NancyEngineFixture.cs", label=returnedResponse, span=""];
m9_462 [file="NancyEngineFixture.cs", label=pipelines, span=""];
m9_463 [file="NancyEngineFixture.cs", label=pipelines, span=""];
m9_464 [file="NancyEngineFixture.cs", label=newResponse, span=""];
m9_465 [file="NancyEngineFixture.cs", label=pipelines, span=""];
m9_466 [file="NancyEngineFixture.cs", label=returnedResponse, span=""];
m9_467 [file="NancyEngineFixture.cs", label=pipelines, span=""];
m9_468 [file="NancyEngineFixture.cs", label=testEx, span=""];
m9_469 [file="NancyEngineFixture.cs", label=errorResponse, span=""];
m9_470 [file="NancyEngineFixture.cs", label=pipelines, span=""];
m9_471 [file="NancyEngineFixture.cs", label=routeUnderTest, span=""];
m9_472 [file="NancyEngineFixture.cs", label=pipelines, span=""];
m9_473 [file="NancyEngineFixture.cs", label=pipelines, span=""];
m9_474 [file="NancyEngineFixture.cs", label=pipelines, span=""];
m9_475 [file="NancyEngineFixture.cs", label=pipelines, span=""];
m9_476 [file="NancyEngineFixture.cs", label=staticContent, span=""];
m10_8 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="NegotiationContext.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m10_6 [cluster="System.Collections.Generic.List<T>.List()", file="NegotiationContext.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m10_13 [cluster="Unk.Any", file="NegotiationContext.cs", label="Entry Unk.Any", span=""];
m10_14 [cluster="Unk.First", file="NegotiationContext.cs", label="Entry Unk.First", span=""];
m10_0 [cluster="Nancy.Responses.Negotiation.NegotiationContext.NegotiationContext()", file="NegotiationContext.cs", label="Entry Nancy.Responses.Negotiation.NegotiationContext.NegotiationContext()", span="15-15"];
m10_1 [cluster="Nancy.Responses.Negotiation.NegotiationContext.NegotiationContext()", file="NegotiationContext.cs", label="this.Cookies = new List<INancyCookie>()", span="17-17"];
m10_2 [cluster="Nancy.Responses.Negotiation.NegotiationContext.NegotiationContext()", file="NegotiationContext.cs", label="this.PermissableMediaRanges = new List<MediaRange>(new[] { (MediaRange)''*/*'' })", span="18-18"];
m10_3 [cluster="Nancy.Responses.Negotiation.NegotiationContext.NegotiationContext()", file="NegotiationContext.cs", label="this.MediaRangeModelMappings = new Dictionary<MediaRange, Func<dynamic>>()", span="19-19"];
m10_4 [cluster="Nancy.Responses.Negotiation.NegotiationContext.NegotiationContext()", file="NegotiationContext.cs", label="this.Headers = new Dictionary<string, string>()", span="20-20"];
m10_5 [cluster="Nancy.Responses.Negotiation.NegotiationContext.NegotiationContext()", file="NegotiationContext.cs", label="Exit Nancy.Responses.Negotiation.NegotiationContext.NegotiationContext()", span="15-15"];
m10_15 [cluster="Unk.Invoke", file="NegotiationContext.cs", label="Entry Unk.Invoke", span=""];
m10_7 [cluster="System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", file="NegotiationContext.cs", label="Entry System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m10_9 [cluster="Nancy.Responses.Negotiation.NegotiationContext.GetModelForMediaRange(Nancy.Responses.Negotiation.MediaRange)", file="NegotiationContext.cs", label="Entry Nancy.Responses.Negotiation.NegotiationContext.GetModelForMediaRange(Nancy.Responses.Negotiation.MediaRange)", span="88-88"];
m10_10 [cluster="Nancy.Responses.Negotiation.NegotiationContext.GetModelForMediaRange(Nancy.Responses.Negotiation.MediaRange)", color=green, community=1, file="NegotiationContext.cs", label="0: var matching =\r\n                this.MediaRangeModelMappings.Any(\r\n                    m => mediaRange.Type.Matches(m.Key.Type) && mediaRange.Subtype.Matches(m.Key.Subtype))", span="90-92"];
m10_11 [cluster="Nancy.Responses.Negotiation.NegotiationContext.GetModelForMediaRange(Nancy.Responses.Negotiation.MediaRange)", file="NegotiationContext.cs", label="return matching ?\r\n                this.MediaRangeModelMappings.First(m => mediaRange.Type.Matches(m.Key.Type) && mediaRange.Subtype.Matches(m.Key.Subtype)).Value.Invoke() :\r\n                this.DefaultModel;", span="94-96"];
m10_12 [cluster="Nancy.Responses.Negotiation.NegotiationContext.GetModelForMediaRange(Nancy.Responses.Negotiation.MediaRange)", file="NegotiationContext.cs", label="Exit Nancy.Responses.Negotiation.NegotiationContext.GetModelForMediaRange(Nancy.Responses.Negotiation.MediaRange)", span="88-88"];
m10_20 [cluster="lambda expression", file="NegotiationContext.cs", label="Entry lambda expression", span="95-95"];
m10_16 [cluster="lambda expression", file="NegotiationContext.cs", label="Entry lambda expression", span="92-92"];
m10_17 [cluster="lambda expression", file="NegotiationContext.cs", label="mediaRange.Type.Matches(m.Key.Type) && mediaRange.Subtype.Matches(m.Key.Subtype)", span="92-92"];
m10_21 [cluster="lambda expression", file="NegotiationContext.cs", label="mediaRange.Type.Matches(m.Key.Type) && mediaRange.Subtype.Matches(m.Key.Subtype)", span="95-95"];
m10_18 [cluster="lambda expression", file="NegotiationContext.cs", label="Exit lambda expression", span="92-92"];
m10_22 [cluster="lambda expression", file="NegotiationContext.cs", label="Exit lambda expression", span="95-95"];
m10_19 [cluster="Nancy.Responses.Negotiation.MediaType.Matches(Nancy.Responses.Negotiation.MediaType)", file="NegotiationContext.cs", label="Entry Nancy.Responses.Negotiation.MediaType.Matches(Nancy.Responses.Negotiation.MediaType)", span="37-37"];
m10_23 [file="NegotiationContext.cs", label="Nancy.Responses.Negotiation.NegotiationContext", span=""];
m10_24 [file="NegotiationContext.cs", label="Nancy.Responses.Negotiation.MediaRange", span=""];
m11_90 [cluster="lambda expression", file="RequestHeaders.cs", label="x.First()", span="231-231"];
m11_163 [cluster="Nancy.Routing.DefaultRouteResolver.DefaultRouteResolverDiagnosticsProvider.CreateContext(string, string)", file="RequestHeaders.cs", label="Entry Nancy.Routing.DefaultRouteResolver.DefaultRouteResolverDiagnosticsProvider.CreateContext(string, string)", span="326-326"];
m11_164 [cluster="Nancy.Routing.DefaultRouteResolver.DefaultRouteResolverDiagnosticsProvider.CreateContext(string, string)", file="RequestHeaders.cs", label="return new NancyContext { Request = new Request(method, path, ''http'')};", span="328-328"];
m11_166 [cluster="Nancy.NancyContext.NancyContext()", file="RequestHeaders.cs", label="Entry Nancy.NancyContext.NancyContext()", span="20-20"];
m11_165 [cluster="Nancy.Routing.DefaultRouteResolver.DefaultRouteResolverDiagnosticsProvider.CreateContext(string, string)", file="RequestHeaders.cs", label="Exit Nancy.Routing.DefaultRouteResolver.DefaultRouteResolverDiagnosticsProvider.CreateContext(string, string)", span="326-326"];
m11_167 [cluster="Nancy.Request.Request(string, string, string)", file="RequestHeaders.cs", label="Entry Nancy.Request.Request(string, string, string)", span="27-27"];
m11_40 [cluster="Nancy.Routing.DefaultRouteResolver.GetTopRouteMatchesNew(System.Tuple<System.Collections.Generic.List<System.Tuple<string, int, Nancy.Routing.RouteDescription, Nancy.Routing.IRoutePatternMatchResult>>, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<System.Tuple<string, int, Nancy.Routing.RouteDescription, Nancy.Routing.IRoutePatternMatchResult>>>>)", file="RequestHeaders.cs", label="yield break;", span="100-100"];
m11_194 [cluster="Nancy.RequestHeaders.ParseDateTime(string)", file="RequestHeaders.cs", label="DateTime result", span="382-382"];
m11_195 [cluster="Nancy.RequestHeaders.ParseDateTime(string)", file="RequestHeaders.cs", label="DateTime.TryParseExact(value, ''R'', CultureInfo.InvariantCulture, DateTimeStyles.None, out result)", span="384-384"];
m11_196 [cluster="Nancy.RequestHeaders.ParseDateTime(string)", file="RequestHeaders.cs", label="return result;", span="386-386"];
m11_197 [cluster="Nancy.RequestHeaders.ParseDateTime(string)", file="RequestHeaders.cs", label="return null;", span="388-388"];
m11_198 [cluster="Nancy.RequestHeaders.ParseDateTime(string)", file="RequestHeaders.cs", label="Exit Nancy.RequestHeaders.ParseDateTime(string)", span="380-380"];
m11_161 [cluster="Nancy.Routing.DefaultRouteResolver.DefaultRouteResolverDiagnosticsProvider.ResolveRoute(string, string)", file="RequestHeaders.cs", label="return from result in results.Rejected\r\n                       select new {\r\n                            Reason = result.Key,\r\n                            Routes = from route in result.Value\r\n                                     select new\r\n                                                {\r\n                                                    route.Item3.Method,\r\n                                                    route.Item3.Path,\r\n                                                    Module = route.Item1\r\n                                                }\r\n                       };", span="313-323"];
m11_45 [cluster="lambda expression", file="RequestHeaders.cs", label="Entry lambda expression", span="141-141"];
m11_131 [cluster="lambda expression", file="RequestHeaders.cs", label="var index = 1", span="302-302"];
m11_207 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Remove(TKey)", file="RequestHeaders.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m11_143 [cluster="lambda expression", file="RequestHeaders.cs", label="var routeIsExactMatch =\r\n                        !route.Item4.Parameters.GetDynamicMemberNames().Any()", span="211-212"];
m11_110 [cluster="lambda expression", file="RequestHeaders.cs", label="Exit lambda expression", span="126-134"];
m11_159 [cluster="Nancy.Routing.DefaultRouteResolver.DefaultRouteResolverDiagnosticsProvider.ResolveRoute(string, string)", file="RequestHeaders.cs", label="var context =\r\n                    CreateContext(method, path)", span="307-308"];
m11_191 [cluster="Nancy.RequestHeaders.IsGenericEnumerable(System.Type)", file="RequestHeaders.cs", label="return !(T == typeof(string)) && T.IsGenericType && T.GetGenericTypeDefinition() == typeof(IEnumerable<>);", span="377-377"];
m11_192 [cluster="Nancy.RequestHeaders.IsGenericEnumerable(System.Type)", file="RequestHeaders.cs", label="Exit Nancy.RequestHeaders.IsGenericEnumerable(System.Type)", span="375-375"];
m11_30 [cluster="Nancy.INancyModuleCatalog.GetModuleByKey(string, Nancy.NancyContext)", file="RequestHeaders.cs", label="Entry Nancy.INancyModuleCatalog.GetModuleByKey(string, Nancy.NancyContext)", span="22-22"];
m11_59 [cluster="lambda expression", file="RequestHeaders.cs", label="Exit lambda expression", span="162-162"];
m11_106 [cluster="Nancy.RequestHeaders.GetSplitValues(string)", file="RequestHeaders.cs", label="var values = this.GetValue(header)", span="284-284"];
m11_98 [cluster="Unk.Distinct", file="RequestHeaders.cs", label="Entry Unk.Distinct", span=""];
m11_7 [cluster="lambda expression", file="RequestHeaders.cs", label="Entry lambda expression", span="72-72"];
m11_8 [cluster="lambda expression", file="RequestHeaders.cs", label="x.First()", span="72-72"];
m11_10 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="RequestHeaders.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m11_11 [cluster="lambda expression", file="RequestHeaders.cs", label="Entry lambda expression", span="73-73"];
m11_12 [cluster="lambda expression", file="RequestHeaders.cs", label="new[] { x }", span="73-73"];
m11_9 [cluster="lambda expression", file="RequestHeaders.cs", label="Exit lambda expression", span="72-72"];
m11_13 [cluster="lambda expression", file="RequestHeaders.cs", label="Exit lambda expression", span="73-73"];
m11_14 [cluster="lambda expression", file="RequestHeaders.cs", label="Entry lambda expression", span="83-83"];
m11_99 [cluster="Nancy.RequestHeaders.System.Collections.IEnumerable.GetEnumerator()", file="RequestHeaders.cs", label="Entry Nancy.RequestHeaders.System.Collections.IEnumerable.GetEnumerator()", span="257-257"];
m11_182 [cluster="System.Func<T, TResult>.Invoke(T)", file="RequestHeaders.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m11_111 [cluster="Unk.Select", file="RequestHeaders.cs", label="Entry Unk.Select", span=""];
m11_158 [cluster="Nancy.RequestHeaders.GetDefaultValue(System.Type)", file="RequestHeaders.cs", label="Exit Nancy.RequestHeaders.GetDefaultValue(System.Type)", span="324-324"];
m11_160 [cluster="System.Type.GetGenericArguments()", file="RequestHeaders.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m11_162 [cluster="System.Activator.CreateInstance(System.Type)", file="RequestHeaders.cs", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m11_206 [cluster="System.Collections.Generic.EqualityComparer<T>.Equals(T, T)", file="RequestHeaders.cs", label="Entry System.Collections.Generic.EqualityComparer<T>.Equals(T, T)", span="0-0"];
m11_48 [cluster="lambda expression", file="RequestHeaders.cs", label="Entry lambda expression", span="142-142"];
m11_96 [cluster="Nancy.RequestHeaders.GetEnumerator()", file="RequestHeaders.cs", label="return this.headers.GetEnumerator();", span="250-250"];
m11_92 [cluster="lambda expression", file="RequestHeaders.cs", label="Entry lambda expression", span="232-232"];
m11_152 [cluster="Nancy.RequestHeaders.GetDefaultValue(System.Type)", file="RequestHeaders.cs", label="var enumerableType = T.GetGenericArguments().First()", span="328-328"];
m11_153 [cluster="Nancy.RequestHeaders.GetDefaultValue(System.Type)", file="RequestHeaders.cs", label="var x = typeof(List<>).MakeGenericType(new[] { enumerableType })", span="329-329"];
m11_109 [cluster="lambda expression", file="RequestHeaders.cs", label="return new Tuple<bool, RouteCandidate>(\r\n                        validCondition,\r\n                        route\r\n                    );", span="130-133"];
m11_171 [cluster="Nancy.RequestHeaders.GetValue(string)", file="RequestHeaders.cs", label="Nancy.Routing.DefaultRouteResolver.ResolveResults", span=""];
m11_172 [cluster="Nancy.RequestHeaders.GetValue(string)", file="RequestHeaders.cs", label="Nancy.Routing.DefaultRouteResolver.DefaultRouteResolverDiagnosticsProvider", span=""];
m11_105 [cluster="lambda expression", file="RequestHeaders.cs", label="Exit lambda expression", span="114-114"];
m11_107 [cluster="lambda expression", file="RequestHeaders.cs", label="Entry lambda expression", span="126-134"];
m11_108 [cluster="lambda expression", file="RequestHeaders.cs", label="var validCondition =\r\n                        ((route.Item3.Condition == null) || (route.Item3.Condition(ctx)))", span="127-128"];
m11_3 [cluster="Nancy.Routing.DefaultRouteResolver.DefaultRouteResolver(Nancy.INancyModuleCatalog, Nancy.Routing.IRoutePatternMatcher, Nancy.Routing.INancyModuleBuilder, Nancy.Routing.IRouteCache, System.Collections.Generic.IEnumerable<Nancy.Responses.Negotiation.IResponseProcessor>)", file="RequestHeaders.cs", label="this.moduleBuilder = moduleBuilder", span="34-34"];
m11_94 [cluster="lambda expression", file="RequestHeaders.cs", label="Exit lambda expression", span="232-232"];
m11_26 [cluster="System.Convert.ToInt64(string)", file="RequestHeaders.cs", label="Entry System.Convert.ToInt64(string)", span="0-0"];
m11_116 [cluster="lambda expression", file="RequestHeaders.cs", label="Entry lambda expression", span="148-159"];
m11_102 [cluster="Nancy.RequestHeaders.GetDateAsString(System.DateTime?)", file="RequestHeaders.cs", label="return !value.HasValue ? null : value.Value.ToString(''R'', CultureInfo.InvariantCulture);", span="279-279"];
m11_89 [cluster="Nancy.Routing.DefaultRouteResolver.Resolve(string, Nancy.NancyContext, Nancy.Routing.IRouteCache)", file="RequestHeaders.cs", label="Exit Nancy.Routing.DefaultRouteResolver.Resolve(string, Nancy.NancyContext, Nancy.Routing.IRouteCache)", span="110-110"];
m11_50 [cluster="lambda expression", file="RequestHeaders.cs", label="Exit lambda expression", span="142-142"];
m11_53 [cluster="lambda expression", file="RequestHeaders.cs", label="Exit lambda expression", span="152-152"];
m11_60 [cluster="lambda expression", file="RequestHeaders.cs", label="Entry lambda expression", span="172-172"];
m11_51 [cluster="lambda expression", file="RequestHeaders.cs", label="Entry lambda expression", span="152-152"];
m11_52 [cluster="lambda expression", file="RequestHeaders.cs", label=x, span="152-152"];
m11_54 [cluster="lambda expression", file="RequestHeaders.cs", label="Entry lambda expression", span="161-161"];
m11_55 [cluster="lambda expression", file="RequestHeaders.cs", label="ParseDateTime(x.First())", span="161-161"];
m11_56 [cluster="lambda expression", file="RequestHeaders.cs", label="Exit lambda expression", span="161-161"];
m11_57 [cluster="lambda expression", file="RequestHeaders.cs", label="Entry lambda expression", span="162-162"];
m11_58 [cluster="lambda expression", file="RequestHeaders.cs", label="new[] { GetDateAsString(value) }", span="162-162"];
m11_61 [cluster="lambda expression", file="RequestHeaders.cs", label=x, span="172-172"];
m11_62 [cluster="lambda expression", file="RequestHeaders.cs", label="Exit lambda expression", span="172-172"];
m11_117 [cluster="lambda expression", file="RequestHeaders.cs", label="Entry lambda expression", span="288-288"];
m11_103 [cluster="Nancy.RequestHeaders.GetDateAsString(System.DateTime?)", file="RequestHeaders.cs", label="Exit Nancy.RequestHeaders.GetDateAsString(System.DateTime?)", span="277-277"];
m11_113 [cluster="lambda expression", file="RequestHeaders.cs", label="Entry lambda expression", span="287-287"];
m11_122 [cluster="Nancy.RequestHeaders.GetWeightedValues(string)", file="RequestHeaders.cs", label="var values = this.GetSplitValues(headerName)", span="294-294"];
m11_125 [cluster="Nancy.RequestHeaders.GetWeightedValues(string)", file="RequestHeaders.cs", label="Exit Nancy.RequestHeaders.GetWeightedValues(string)", span="292-292"];
m11_132 [cluster="lambda expression", file="RequestHeaders.cs", label="index < sections.Length", span="302-302"];
m11_139 [cluster="lambda expression", file="RequestHeaders.cs", label="index++", span="302-302"];
m11_142 [cluster="string.Split(string[], System.StringSplitOptions)", file="RequestHeaders.cs", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
m11_146 [cluster="lambda expression", file="RequestHeaders.cs", label="Entry lambda expression", span="222-222"];
m11_149 [cluster="lambda expression", file="RequestHeaders.cs", label="Entry lambda expression", span="234-234"];
m11_104 [cluster="System.DateTime.ToString(string, System.IFormatProvider)", file="RequestHeaders.cs", label="Entry System.DateTime.ToString(string, System.IFormatProvider)", span="0-0"];
m11_114 [cluster="lambda expression", file="RequestHeaders.cs", label="x.Split(new[] { ',' }, StringSplitOptions.RemoveEmptyEntries)", span="287-287"];
m11_115 [cluster="lambda expression", file="RequestHeaders.cs", label="Exit lambda expression", span="287-287"];
m11_118 [cluster="lambda expression", file="RequestHeaders.cs", label="x.Trim()", span="288-288"];
m11_119 [cluster="lambda expression", file="RequestHeaders.cs", label="Exit lambda expression", span="288-288"];
m11_120 [cluster="string.Trim()", file="RequestHeaders.cs", label="Entry string.Trim()", span="0-0"];
m11_123 [cluster="Nancy.RequestHeaders.GetWeightedValues(string)", color=green, community=0, file="RequestHeaders.cs", label="0: var parsed = values.Select(x =>\r\n            {\r\n                var sections = x.Split(new[] { '';'' }, StringSplitOptions.RemoveEmptyEntries);\r\n                var mediaRange = sections[0].Trim();\r\n                var quality = 1m;\r\n\r\n                for (var index = 1; index < sections.Length; index++)\r\n                {\r\n                    var trimmedValue = sections[index].Trim();\r\n                    if (trimmedValue.StartsWith(''q='', StringComparison.OrdinalIgnoreCase))\r\n                    {\r\n                        decimal temp;\r\n                        var stringValue = trimmedValue.Substring(2);\r\n                        if (decimal.TryParse(stringValue, NumberStyles.Number, CultureInfo.InvariantCulture, out temp))\r\n                        {\r\n                            quality = temp;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return new Tuple<string, decimal>(mediaRange, quality);\r\n            })", span="296-318"];
m11_124 [cluster="Nancy.RequestHeaders.GetWeightedValues(string)", file="RequestHeaders.cs", label="return parsed\r\n                    .OrderByDescending(x => x.Item2);", span="320-321"];
m11_126 [cluster="Unk.OrderByDescending", file="RequestHeaders.cs", label="Entry Unk.OrderByDescending", span=""];
m11_127 [cluster="lambda expression", file="RequestHeaders.cs", label="Entry lambda expression", span="296-318"];
m11_129 [cluster="lambda expression", file="RequestHeaders.cs", label="var mediaRange = sections[0].Trim()", span="299-299"];
m11_128 [cluster="lambda expression", file="RequestHeaders.cs", label="var sections = x.Split(new[] { '';'' }, StringSplitOptions.RemoveEmptyEntries)", span="298-298"];
m11_130 [cluster="lambda expression", file="RequestHeaders.cs", label="var quality = 1m", span="300-300"];
m11_133 [cluster="lambda expression", file="RequestHeaders.cs", label="var trimmedValue = sections[index].Trim()", span="304-304"];
m11_134 [cluster="lambda expression", file="RequestHeaders.cs", label="trimmedValue.StartsWith(''q='', StringComparison.OrdinalIgnoreCase)", span="305-305"];
m11_136 [cluster="lambda expression", file="RequestHeaders.cs", label="var stringValue = trimmedValue.Substring(2)", span="308-308"];
m11_137 [cluster="lambda expression", file="RequestHeaders.cs", label="decimal.TryParse(stringValue, NumberStyles.Number, CultureInfo.InvariantCulture, out temp)", span="309-309"];
m11_138 [cluster="lambda expression", file="RequestHeaders.cs", label="quality = temp", span="311-311"];
m11_140 [cluster="lambda expression", color=green, community=0, file="RequestHeaders.cs", label="2: return new Tuple<string, decimal>(mediaRange, quality);", span="317-317"];
m11_141 [cluster="lambda expression", file="RequestHeaders.cs", label="Exit lambda expression", span="296-318"];
m11_144 [cluster="string.Substring(int)", file="RequestHeaders.cs", label="Entry string.Substring(int)", span="0-0"];
m11_145 [cluster="decimal.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out decimal)", file="RequestHeaders.cs", label="Entry decimal.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out decimal)", span="0-0"];
m11_147 [cluster="lambda expression", file="RequestHeaders.cs", label="s.AppendLine(''[DefaultRouteResolver] Found exact match route'')", span="222-222"];
m11_148 [cluster="lambda expression", file="RequestHeaders.cs", label="Exit lambda expression", span="222-222"];
m11_150 [cluster="Nancy.RequestHeaders.GetDefaultValue(System.Type)", file="RequestHeaders.cs", label="Entry Nancy.RequestHeaders.GetDefaultValue(System.Type)", span="324-324"];
m11_151 [cluster="Nancy.RequestHeaders.GetDefaultValue(System.Type)", file="RequestHeaders.cs", label="IsGenericEnumerable(T)", span="326-326"];
m11_42 [cluster="Nancy.Routing.DefaultRouteResolver.GetTopRouteMatchesNew(System.Tuple<System.Collections.Generic.List<System.Tuple<string, int, Nancy.Routing.RouteDescription, Nancy.Routing.IRoutePatternMatchResult>>, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<System.Tuple<string, int, Nancy.Routing.RouteDescription, Nancy.Routing.IRoutePatternMatchResult>>>>)", file="RequestHeaders.cs", label="maxParameters = parameters", span="104-104"];
m11_73 [cluster="Nancy.Routing.DefaultRouteResolver.Resolve(string, Nancy.NancyContext, Nancy.Routing.IRouteCache)", file="RequestHeaders.cs", label="context.Trace.TraceLog.WriteLog(s => s.AppendLine(''[DefaultRouteResolver] No route matched the requested path''))", span="163-163"];
m11_4 [cluster="Nancy.Routing.DefaultRouteResolver.DefaultRouteResolver(Nancy.INancyModuleCatalog, Nancy.Routing.IRoutePatternMatcher, Nancy.Routing.INancyModuleBuilder, Nancy.Routing.IRouteCache, System.Collections.Generic.IEnumerable<Nancy.Responses.Negotiation.IResponseProcessor>)", file="RequestHeaders.cs", label="this.cache = cache", span="35-35"];
m11_186 [cluster="lambda expression", file="RequestHeaders.cs", label="Entry lambda expression", span="372-372"];
m11_41 [cluster="Nancy.Routing.DefaultRouteResolver.GetTopRouteMatchesNew(System.Tuple<System.Collections.Generic.List<System.Tuple<string, int, Nancy.Routing.RouteDescription, Nancy.Routing.IRoutePatternMatchResult>>, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<System.Tuple<string, int, Nancy.Routing.RouteDescription, Nancy.Routing.IRoutePatternMatchResult>>>>)", file="RequestHeaders.cs", label="maxSegments = segments", span="103-103"];
m11_43 [cluster="Nancy.Routing.DefaultRouteResolver.GetTopRouteMatchesNew(System.Tuple<System.Collections.Generic.List<System.Tuple<string, int, Nancy.Routing.RouteDescription, Nancy.Routing.IRoutePatternMatchResult>>, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<System.Tuple<string, int, Nancy.Routing.RouteDescription, Nancy.Routing.IRoutePatternMatchResult>>>>)", file="RequestHeaders.cs", label="yield return tuple;", span="106-106"];
m11_72 [cluster="Nancy.Routing.DefaultRouteResolver.Resolve(string, Nancy.NancyContext, Nancy.Routing.IRouteCache)", file="RequestHeaders.cs", label="!routes.Item1.Any()", span="161-161"];
m11_74 [cluster="Nancy.Routing.DefaultRouteResolver.Resolve(string, Nancy.NancyContext, Nancy.Routing.IRouteCache)", file="RequestHeaders.cs", label="return new ResolveResults\r\n                {\r\n                    Selected = new ResolveResult(new NotFoundRoute(context.Request.Method, path), DynamicDictionary.Empty, null, null),\r\n                    Rejected = routes.Item2\r\n                };", span="164-168"];
m11_174 [cluster="lambda expression", file="RequestHeaders.cs", label="Entry lambda expression", span="357-357"];
m11_6 [cluster="Nancy.Routing.DefaultRouteResolver.DefaultRouteResolver(Nancy.INancyModuleCatalog, Nancy.Routing.IRoutePatternMatcher, Nancy.Routing.INancyModuleBuilder, Nancy.Routing.IRouteCache, System.Collections.Generic.IEnumerable<Nancy.Responses.Negotiation.IResponseProcessor>)", file="RequestHeaders.cs", label="Exit Nancy.Routing.DefaultRouteResolver.DefaultRouteResolver(Nancy.INancyModuleCatalog, Nancy.Routing.IRoutePatternMatcher, Nancy.Routing.INancyModuleBuilder, Nancy.Routing.IRouteCache, System.Collections.Generic.IEnumerable<Nancy.Responses.Negotiation.IResponseProcessor>)", span="30-30"];
m11_5 [cluster="Nancy.Routing.DefaultRouteResolver.DefaultRouteResolver(Nancy.INancyModuleCatalog, Nancy.Routing.IRoutePatternMatcher, Nancy.Routing.INancyModuleBuilder, Nancy.Routing.IRouteCache, System.Collections.Generic.IEnumerable<Nancy.Responses.Negotiation.IResponseProcessor>)", file="RequestHeaders.cs", label="this.responseProcessors = responseProcessors", span="36-36"];
m11_188 [cluster="lambda expression", file="RequestHeaders.cs", label="Exit lambda expression", span="372-372"];
m11_187 [cluster="lambda expression", file="RequestHeaders.cs", label="string.Concat(x.Item1, '';q='', x.Item2.ToString(CultureInfo.InvariantCulture))", span="372-372"];
m11_135 [cluster="Unk.Select", file="RequestHeaders.cs", label="Entry Unk.Select", span=""];
m11_20 [cluster="Nancy.Routing.DefaultRouteResolver.CreateRouteAndParametersFromMatch(Nancy.NancyContext, System.Tuple<string, int, Nancy.Routing.RouteDescription, Nancy.Routing.IRoutePatternMatchResult>)", file="RequestHeaders.cs", label="var associatedModule =\r\n                this.GetInitializedModuleForMatch(context, routeMatchToReturn)", span="63-64"];
m11_27 [cluster="Nancy.Routing.DefaultRouteResolver.GetInitializedModuleForMatch(Nancy.NancyContext, System.Tuple<string, int, Nancy.Routing.RouteDescription, Nancy.Routing.IRoutePatternMatchResult>)", file="RequestHeaders.cs", label="var module =\r\n                this.nancyModuleCatalog.GetModuleByKey(routeMatchToReturn.Item1, context)", span="73-74"];
m11_34 [cluster="Nancy.Routing.DefaultRouteResolver.GetTopRouteMatchesNew(System.Tuple<System.Collections.Generic.List<System.Tuple<string, int, Nancy.Routing.RouteDescription, Nancy.Routing.IRoutePatternMatchResult>>, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<System.Tuple<string, int, Nancy.Routing.RouteDescription, Nancy.Routing.IRoutePatternMatchResult>>>>)", file="RequestHeaders.cs", label="var maxParameters = 0", span="82-82"];
m11_66 [cluster="Nancy.Routing.DefaultRouteResolver.Resolve(string, Nancy.NancyContext, Nancy.Routing.IRouteCache)", file="RequestHeaders.cs", label="var routes =\r\n                routeCache.GetRouteCandidates()", span="121-122"];
m11_79 [cluster="Nancy.Routing.DefaultRouteResolver.Resolve(string, Nancy.NancyContext, Nancy.Routing.IRouteCache)", file="RequestHeaders.cs", label="return new ResolveResults\r\n                    {\r\n                        Selected = new ResolveResult(new OptionsRoute(context.Request.Path, allowedMethods), DynamicDictionary.Empty, null, null),\r\n                        Rejected = routes.Item2\r\n                    };", span="194-198"];
m11_86 [cluster="Nancy.Routing.DefaultRouteResolver.Resolve(string, Nancy.NancyContext, Nancy.Routing.IRouteCache)", file="RequestHeaders.cs", label="var selected =\r\n                GetTopRouteMatchesNew(routes).First()", span="231-232"];
m11_17 [cluster="string.Substring(int, int)", file="RequestHeaders.cs", label="Entry string.Substring(int, int)", span="0-0"];
m11_23 [cluster="Nancy.Routing.DefaultRouteResolver.CreateRouteAndParametersFromMatch(Nancy.NancyContext, System.Tuple<string, int, Nancy.Routing.RouteDescription, Nancy.Routing.IRoutePatternMatchResult>)", file="RequestHeaders.cs", label="Exit Nancy.Routing.DefaultRouteResolver.CreateRouteAndParametersFromMatch(Nancy.NancyContext, System.Tuple<string, int, Nancy.Routing.RouteDescription, Nancy.Routing.IRoutePatternMatchResult>)", span="61-61"];
m11_31 [cluster="Nancy.Routing.INancyModuleBuilder.BuildModule(Nancy.NancyModule, Nancy.NancyContext)", file="RequestHeaders.cs", label="Entry Nancy.Routing.INancyModuleBuilder.BuildModule(Nancy.NancyModule, Nancy.NancyContext)", span="13-13"];
m11_37 [cluster="Nancy.Routing.DefaultRouteResolver.GetTopRouteMatchesNew(System.Tuple<System.Collections.Generic.List<System.Tuple<string, int, Nancy.Routing.RouteDescription, Nancy.Routing.IRoutePatternMatchResult>>, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<System.Tuple<string, int, Nancy.Routing.RouteDescription, Nancy.Routing.IRoutePatternMatchResult>>>>)", file="RequestHeaders.cs", label="var segments = \r\n                    tuple.Item3.Path.Count(c => c == '/')", span="92-93"];
m11_63 [cluster="Nancy.Routing.DefaultRouteResolver.Resolve(string, Nancy.NancyContext, Nancy.Routing.IRouteCache)", file="RequestHeaders.cs", label="routeCache.IsEmpty()", span="112-112"];
m11_69 [cluster="Nancy.Routing.DefaultRouteResolver.Resolve(string, Nancy.NancyContext, Nancy.Routing.IRouteCache)", file="RequestHeaders.cs", label="context.Trace.TraceLog.WriteLog(s => s.AppendLine(''[DefaultRouteResolver] No route had a valid condition''))", span="138-138"];
m11_75 [cluster="Nancy.Routing.DefaultRouteResolver.Resolve(string, Nancy.NancyContext, Nancy.Routing.IRouteCache)", file="RequestHeaders.cs", label="routes =\r\n                routes.Filter(context, ''Request method did not match'', (ctx, route) =>{\r\n                    var routeMethod = \r\n                        route.Item3.Method.ToUpperInvariant();\r\n\r\n                    var requestMethod = \r\n                        ctx.Request.Method.ToUpperInvariant();\r\n                    \r\n                    var methodIsValid =\r\n                        routeMethod.Equals(requestMethod) || (routeMethod.Equals(''GET'') && requestMethod.Equals(''HEAD''));\r\n\r\n                    return new Tuple<bool, RouteCandidate>(\r\n                        methodIsValid,\r\n                        route\r\n                    );\r\n                })", span="172-187"];
m11_83 [cluster="Nancy.Routing.DefaultRouteResolver.Resolve(string, Nancy.NancyContext, Nancy.Routing.IRouteCache)", file="RequestHeaders.cs", label="exactMatchResults.Item1.Any()", span="220-220"];
m11_176 [cluster="lambda expression", file="RequestHeaders.cs", label="Exit lambda expression", span="357-357"];
m11_175 [cluster="lambda expression", file="RequestHeaders.cs", label=x, span="357-357"];
m11_16 [cluster="string.IsNullOrEmpty(string)", file="RequestHeaders.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m11_15 [cluster="System.IO.Path.GetExtension(string)", file="RequestHeaders.cs", label="Entry System.IO.Path.GetExtension(string)", span="0-0"];
m11_22 [cluster="Nancy.Routing.DefaultRouteResolver.CreateRouteAndParametersFromMatch(Nancy.NancyContext, System.Tuple<string, int, Nancy.Routing.RouteDescription, Nancy.Routing.IRoutePatternMatchResult>)", file="RequestHeaders.cs", label="return new ResolveResult(route, routeMatchToReturn.Item4.Parameters, associatedModule.Before, associatedModule.After);", span="68-68"];
m11_21 [cluster="Nancy.Routing.DefaultRouteResolver.CreateRouteAndParametersFromMatch(Nancy.NancyContext, System.Tuple<string, int, Nancy.Routing.RouteDescription, Nancy.Routing.IRoutePatternMatchResult>)", file="RequestHeaders.cs", label="var route = associatedModule.Routes.ElementAt(routeMatchToReturn.Item2)", span="66-66"];
m11_29 [cluster="Nancy.Routing.DefaultRouteResolver.GetInitializedModuleForMatch(Nancy.NancyContext, System.Tuple<string, int, Nancy.Routing.RouteDescription, Nancy.Routing.IRoutePatternMatchResult>)", file="RequestHeaders.cs", label="Exit Nancy.Routing.DefaultRouteResolver.GetInitializedModuleForMatch(Nancy.NancyContext, System.Tuple<string, int, Nancy.Routing.RouteDescription, Nancy.Routing.IRoutePatternMatchResult>)", span="71-71"];
m11_28 [cluster="Nancy.Routing.DefaultRouteResolver.GetInitializedModuleForMatch(Nancy.NancyContext, System.Tuple<string, int, Nancy.Routing.RouteDescription, Nancy.Routing.IRoutePatternMatchResult>)", file="RequestHeaders.cs", label="return this.moduleBuilder.BuildModule(module, context);", span="76-76"];
m11_36 [cluster="Nancy.Routing.DefaultRouteResolver.GetTopRouteMatchesNew(System.Tuple<System.Collections.Generic.List<System.Tuple<string, int, Nancy.Routing.RouteDescription, Nancy.Routing.IRoutePatternMatchResult>>, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<System.Tuple<string, int, Nancy.Routing.RouteDescription, Nancy.Routing.IRoutePatternMatchResult>>>>)", file="RequestHeaders.cs", label=selectedRoutes, span="90-90"];
m11_35 [cluster="Nancy.Routing.DefaultRouteResolver.GetTopRouteMatchesNew(System.Tuple<System.Collections.Generic.List<System.Tuple<string, int, Nancy.Routing.RouteDescription, Nancy.Routing.IRoutePatternMatchResult>>, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<System.Tuple<string, int, Nancy.Routing.RouteDescription, Nancy.Routing.IRoutePatternMatchResult>>>>)", file="RequestHeaders.cs", label="var selectedRoutes = routes.Item1\r\n                .OrderBy(x => x.Item4.Parameters.GetDynamicMemberNames().Count())\r\n                .OrderByDescending(x => x.Item3.Path.Count(c => c.Equals('/')))", span="86-88"];
m11_49 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="RequestHeaders.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m11_68 [cluster="Nancy.Routing.DefaultRouteResolver.Resolve(string, Nancy.NancyContext, Nancy.Routing.IRouteCache)", file="RequestHeaders.cs", label="!routes.Item1.Any()", span="136-136"];
m11_67 [cluster="Nancy.Routing.DefaultRouteResolver.Resolve(string, Nancy.NancyContext, Nancy.Routing.IRouteCache)", file="RequestHeaders.cs", label="routes =\r\n                routes.Filter(context, ''Invalid condition'', (ctx, route) =>{\r\n                    var validCondition =\r\n                        ((route.Item3.Condition == null) || (route.Item3.Condition(ctx)));\r\n\r\n                    return new Tuple<bool, RouteCandidate>(\r\n                        validCondition,\r\n                        route\r\n                    );\r\n                })", span="125-134"];
m11_81 [cluster="Nancy.Routing.DefaultRouteResolver.Resolve(string, Nancy.NancyContext, Nancy.Routing.IRouteCache)", file="RequestHeaders.cs", label="return new ResolveResults\r\n                {\r\n                    Selected = new ResolveResult(new MethodNotAllowedRoute(path, context.Request.Method, allowedMethods), DynamicDictionary.Empty, null, null),\r\n                    Rejected = routes.Item2\r\n                };", span="201-205"];
m11_80 [cluster="Nancy.Routing.DefaultRouteResolver.Resolve(string, Nancy.NancyContext, Nancy.Routing.IRouteCache)", file="RequestHeaders.cs", label="context.Trace.TraceLog.WriteLog(s => s.AppendLine(''[DefaultRouteResolver] Route Matched But Method Not Allowed''))", span="200-200"];
m11_88 [cluster="Nancy.Routing.DefaultRouteResolver.Resolve(string, Nancy.NancyContext, Nancy.Routing.IRouteCache)", file="RequestHeaders.cs", label="return new ResolveResults\r\n            {\r\n                Selected = this.CreateRouteAndParametersFromMatch(context, selected),\r\n                Rejected = exactMatchResults.Item2\r\n            };", span="235-239"];
m11_87 [cluster="Nancy.Routing.DefaultRouteResolver.Resolve(string, Nancy.NancyContext, Nancy.Routing.IRouteCache)", file="RequestHeaders.cs", label="context.Trace.TraceLog.WriteLog(s => s.AppendLine(''[DefaultRouteResolver] Selected best match''))", span="234-234"];
m11_93 [cluster="Nancy.Routing.NotFoundRoute.NotFoundRoute(string, string)", file="RequestHeaders.cs", label="Entry Nancy.Routing.NotFoundRoute.NotFoundRoute(string, string)", span="14-14"];
m11_19 [cluster="Nancy.Routing.DefaultRouteResolver.CreateRouteAndParametersFromMatch(Nancy.NancyContext, System.Tuple<string, int, Nancy.Routing.RouteDescription, Nancy.Routing.IRoutePatternMatchResult>)", file="RequestHeaders.cs", label="Entry Nancy.Routing.DefaultRouteResolver.CreateRouteAndParametersFromMatch(Nancy.NancyContext, System.Tuple<string, int, Nancy.Routing.RouteDescription, Nancy.Routing.IRoutePatternMatchResult>)", span="61-61"];
m11_18 [cluster="Nancy.Routing.DefaultRouteResolver.Resolve(string, Nancy.NancyContext, Nancy.Routing.IRouteCache)", file="RequestHeaders.cs", label="Entry Nancy.Routing.DefaultRouteResolver.Resolve(string, Nancy.NancyContext, Nancy.Routing.IRouteCache)", span="110-110"];
m11_25 [cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="RequestHeaders.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0"];
m11_24 [cluster="Nancy.Routing.DefaultRouteResolver.GetInitializedModuleForMatch(Nancy.NancyContext, System.Tuple<string, int, Nancy.Routing.RouteDescription, Nancy.Routing.IRoutePatternMatchResult>)", file="RequestHeaders.cs", label="Entry Nancy.Routing.DefaultRouteResolver.GetInitializedModuleForMatch(Nancy.NancyContext, System.Tuple<string, int, Nancy.Routing.RouteDescription, Nancy.Routing.IRoutePatternMatchResult>)", span="71-71"];
m11_33 [cluster="Nancy.Routing.DefaultRouteResolver.GetTopRouteMatchesNew(System.Tuple<System.Collections.Generic.List<System.Tuple<string, int, Nancy.Routing.RouteDescription, Nancy.Routing.IRoutePatternMatchResult>>, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<System.Tuple<string, int, Nancy.Routing.RouteDescription, Nancy.Routing.IRoutePatternMatchResult>>>>)", file="RequestHeaders.cs", label="var maxSegments = 0", span="81-81"];
m11_32 [cluster="Nancy.Routing.DefaultRouteResolver.GetTopRouteMatchesNew(System.Tuple<System.Collections.Generic.List<System.Tuple<string, int, Nancy.Routing.RouteDescription, Nancy.Routing.IRoutePatternMatchResult>>, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<System.Tuple<string, int, Nancy.Routing.RouteDescription, Nancy.Routing.IRoutePatternMatchResult>>>>)", file="RequestHeaders.cs", label="Entry Nancy.Routing.DefaultRouteResolver.GetTopRouteMatchesNew(System.Tuple<System.Collections.Generic.List<System.Tuple<string, int, Nancy.Routing.RouteDescription, Nancy.Routing.IRoutePatternMatchResult>>, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<System.Tuple<string, int, Nancy.Routing.RouteDescription, Nancy.Routing.IRoutePatternMatchResult>>>>)", span="79-79"];
m11_39 [cluster="Nancy.Routing.DefaultRouteResolver.GetTopRouteMatchesNew(System.Tuple<System.Collections.Generic.List<System.Tuple<string, int, Nancy.Routing.RouteDescription, Nancy.Routing.IRoutePatternMatchResult>>, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<System.Tuple<string, int, Nancy.Routing.RouteDescription, Nancy.Routing.IRoutePatternMatchResult>>>>)", file="RequestHeaders.cs", label="segments < maxSegments || parameters < maxParameters", span="98-98"];
m11_38 [cluster="Nancy.Routing.DefaultRouteResolver.GetTopRouteMatchesNew(System.Tuple<System.Collections.Generic.List<System.Tuple<string, int, Nancy.Routing.RouteDescription, Nancy.Routing.IRoutePatternMatchResult>>, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<System.Tuple<string, int, Nancy.Routing.RouteDescription, Nancy.Routing.IRoutePatternMatchResult>>>>)", file="RequestHeaders.cs", label="var parameters = \r\n                    tuple.Item4.Parameters.GetDynamicMemberNames().Count()", span="95-96"];
m11_47 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>(System.Func<TSource, bool>)", file="RequestHeaders.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>(System.Func<TSource, bool>)", span="0-0"];
m11_46 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", file="RequestHeaders.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m11_65 [cluster="Nancy.Routing.DefaultRouteResolver.Resolve(string, Nancy.NancyContext, Nancy.Routing.IRouteCache)", file="RequestHeaders.cs", label="return new ResolveResults\r\n                {\r\n                    Selected = new ResolveResult(new NotFoundRoute(context.Request.Method, path), DynamicDictionary.Empty, null, null)\r\n                };", span="115-118"];
m11_64 [cluster="Nancy.Routing.DefaultRouteResolver.Resolve(string, Nancy.NancyContext, Nancy.Routing.IRouteCache)", file="RequestHeaders.cs", label="context.Trace.TraceLog.WriteLog(s => s.AppendLine(''[DefaultRouteResolver] No routes available''))", span="114-114"];
m11_71 [cluster="Nancy.Routing.DefaultRouteResolver.Resolve(string, Nancy.NancyContext, Nancy.Routing.IRouteCache)", file="RequestHeaders.cs", label="routes =\r\n                routes.Filter(context, ''Path did not match'', (ctx, route) => {\r\n                    var validationResult = \r\n                        this.routePatternMatcher.Match(path, route.Item3.Path, context);\r\n\r\n                    var routeToReturn =\r\n                        (validationResult.IsMatch) ? new RouteCandidate(route.Item1, route.Item2, route.Item3, validationResult) : route;\r\n\r\n                    return new Tuple<bool, RouteCandidate>(\r\n                        validationResult.IsMatch,\r\n                        routeToReturn\r\n                    );\r\n                })", span="147-159"];
m11_70 [cluster="Nancy.Routing.DefaultRouteResolver.Resolve(string, Nancy.NancyContext, Nancy.Routing.IRouteCache)", file="RequestHeaders.cs", label="return new ResolveResults\r\n                {\r\n                    Selected = new ResolveResult(new NotFoundRoute(context.Request.Method, path), DynamicDictionary.Empty, null, null),\r\n                    Rejected = routes.Item2\r\n                };", span="139-143"];
m11_77 [cluster="Nancy.Routing.DefaultRouteResolver.Resolve(string, Nancy.NancyContext, Nancy.Routing.IRouteCache)", file="RequestHeaders.cs", label="var allowedMethods = routes.Item2.Values.SelectMany(x => x.Select(y => y.Item3.Method)).Distinct()", span="191-191"];
m11_76 [cluster="Nancy.Routing.DefaultRouteResolver.Resolve(string, Nancy.NancyContext, Nancy.Routing.IRouteCache)", file="RequestHeaders.cs", label="!routes.Item1.Any()", span="189-189"];
m11_85 [cluster="Nancy.Routing.DefaultRouteResolver.Resolve(string, Nancy.NancyContext, Nancy.Routing.IRouteCache)", file="RequestHeaders.cs", label="return new ResolveResults\r\n                {\r\n                    Selected = this.CreateRouteAndParametersFromMatch(context, exactMatchResults.Item1.First()),\r\n                    Rejected = exactMatchResults.Item2\r\n                };", span="223-227"];
m11_84 [cluster="Nancy.Routing.DefaultRouteResolver.Resolve(string, Nancy.NancyContext, Nancy.Routing.IRouteCache)", file="RequestHeaders.cs", label="context.Trace.TraceLog.WriteLog(s => s.AppendLine(''[DefaultRouteResolver] Found exact match route''))", span="222-222"];
m11_91 [cluster="Nancy.Diagnostics.TraceLog.WriteLog(System.Action<System.Text.StringBuilder>)", file="RequestHeaders.cs", label="Entry Nancy.Diagnostics.TraceLog.WriteLog(System.Action<System.Text.StringBuilder>)", span="17-17"];
m11_169 [cluster="string.Split(params char[])", file="RequestHeaders.cs", label=string, span=""];
m11_189 [cluster="decimal.ToString(System.IFormatProvider)", file="RequestHeaders.cs", label="Entry decimal.ToString(System.IFormatProvider)", span="0-0"];
m11_112 [cluster="System.Tuple<T1, T2>.Tuple(T1, T2)", file="RequestHeaders.cs", label="Entry System.Tuple<T1, T2>.Tuple(T1, T2)", span="0-0"];
m11_100 [cluster="OptionsRoute.cstr", file="RequestHeaders.cs", label="Entry OptionsRoute.cstr", span=""];
m11_101 [cluster="MethodNotAllowedRoute.cstr", file="RequestHeaders.cs", label="Entry MethodNotAllowedRoute.cstr", span=""];
m11_193 [cluster="System.Type.GetGenericTypeDefinition()", file="RequestHeaders.cs", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
m11_155 [cluster="Nancy.Routing.DefaultRouteResolver.DefaultRouteResolverDiagnosticsProvider.DefaultRouteResolverDiagnosticsProvider(Nancy.Routing.DefaultRouteResolver)", file="RequestHeaders.cs", label="Entry Nancy.Routing.DefaultRouteResolver.DefaultRouteResolverDiagnosticsProvider.DefaultRouteResolverDiagnosticsProvider(Nancy.Routing.DefaultRouteResolver)", span="300-300"];
m11_157 [cluster="Nancy.Routing.DefaultRouteResolver.DefaultRouteResolverDiagnosticsProvider.DefaultRouteResolverDiagnosticsProvider(Nancy.Routing.DefaultRouteResolver)", file="RequestHeaders.cs", label="Exit Nancy.Routing.DefaultRouteResolver.DefaultRouteResolverDiagnosticsProvider.DefaultRouteResolverDiagnosticsProvider(Nancy.Routing.DefaultRouteResolver)", span="300-300"];
m11_156 [cluster="Nancy.Routing.DefaultRouteResolver.DefaultRouteResolverDiagnosticsProvider.DefaultRouteResolverDiagnosticsProvider(Nancy.Routing.DefaultRouteResolver)", file="RequestHeaders.cs", label="this.resolver = resolver", span="302-302"];
m11_154 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RequestHeaders.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m11_82 [cluster="Nancy.Routing.DefaultRouteResolver.Resolve(string, Nancy.NancyContext, Nancy.Routing.IRouteCache)", file="RequestHeaders.cs", label="var exactMatchResults =\r\n                routes.Filter(context, ''No exact match'', (ctx, route) =>{\r\n                    var routeIsExactMatch =\r\n                        !route.Item4.Parameters.GetDynamicMemberNames().Any();\r\n\r\n                    return new Tuple<bool, RouteCandidate>(\r\n                        routeIsExactMatch,\r\n                        route\r\n                    );\r\n                })", span="209-218"];
m11_95 [cluster="Nancy.RequestHeaders.GetEnumerator()", file="RequestHeaders.cs", label="Entry Nancy.RequestHeaders.GetEnumerator()", span="248-248"];
m11_183 [cluster="Nancy.RequestHeaders.GetWeightedValuesAsStrings(System.Collections.Generic.IEnumerable<System.Tuple<string, decimal>>)", file="RequestHeaders.cs", label="Entry Nancy.RequestHeaders.GetWeightedValuesAsStrings(System.Collections.Generic.IEnumerable<System.Tuple<string, decimal>>)", span="370-370"];
m11_184 [cluster="Nancy.RequestHeaders.GetWeightedValuesAsStrings(System.Collections.Generic.IEnumerable<System.Tuple<string, decimal>>)", file="RequestHeaders.cs", label="return values.Select(x => string.Concat(x.Item1, '';q='', x.Item2.ToString(CultureInfo.InvariantCulture)));", span="372-372"];
m11_185 [cluster="Nancy.RequestHeaders.GetWeightedValuesAsStrings(System.Collections.Generic.IEnumerable<System.Tuple<string, decimal>>)", file="RequestHeaders.cs", label="Exit Nancy.RequestHeaders.GetWeightedValuesAsStrings(System.Collections.Generic.IEnumerable<System.Tuple<string, decimal>>)", span="370-370"];
m11_200 [cluster="Nancy.RequestHeaders.SetHeaderValues<T>(string, T, System.Func<T, System.Collections.Generic.IEnumerable<string>>)", file="RequestHeaders.cs", label="Entry Nancy.RequestHeaders.SetHeaderValues<T>(string, T, System.Func<T, System.Collections.Generic.IEnumerable<string>>)", span="391-391"];
m11_202 [cluster="Nancy.RequestHeaders.SetHeaderValues<T>(string, T, System.Func<T, System.Collections.Generic.IEnumerable<string>>)", file="RequestHeaders.cs", label="this.headers.ContainsKey(header)", span="395-395"];
m11_203 [cluster="Nancy.RequestHeaders.SetHeaderValues<T>(string, T, System.Func<T, System.Collections.Generic.IEnumerable<string>>)", file="RequestHeaders.cs", label="this.headers.Remove(header)", span="397-397"];
m11_204 [cluster="Nancy.RequestHeaders.SetHeaderValues<T>(string, T, System.Func<T, System.Collections.Generic.IEnumerable<string>>)", file="RequestHeaders.cs", label="this.headers[header] = valueTransformer.Invoke(value)", span="402-402"];
m11_201 [cluster="Nancy.RequestHeaders.SetHeaderValues<T>(string, T, System.Func<T, System.Collections.Generic.IEnumerable<string>>)", file="RequestHeaders.cs", label="EqualityComparer<T>.Default.Equals(value, default(T))", span="393-393"];
m11_205 [cluster="Nancy.RequestHeaders.SetHeaderValues<T>(string, T, System.Func<T, System.Collections.Generic.IEnumerable<string>>)", file="RequestHeaders.cs", label="Exit Nancy.RequestHeaders.SetHeaderValues<T>(string, T, System.Func<T, System.Collections.Generic.IEnumerable<string>>)", span="391-391"];
m11_199 [cluster="System.DateTime.TryParseExact(string, string, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTime)", file="RequestHeaders.cs", label="Entry System.DateTime.TryParseExact(string, string, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTime)", span="0-0"];
m11_44 [cluster="Nancy.RequestHeaders.GetDateAsString(System.DateTime?)", file="RequestHeaders.cs", label="Entry Nancy.RequestHeaders.GetDateAsString(System.DateTime?)", span="277-277"];
m11_97 [cluster="Unk.SelectMany", file="RequestHeaders.cs", label="Entry Unk.SelectMany", span=""];
m11_0 [cluster="Nancy.Routing.DefaultRouteResolver.DefaultRouteResolver(Nancy.INancyModuleCatalog, Nancy.Routing.IRoutePatternMatcher, Nancy.Routing.INancyModuleBuilder, Nancy.Routing.IRouteCache, System.Collections.Generic.IEnumerable<Nancy.Responses.Negotiation.IResponseProcessor>)", file="RequestHeaders.cs", label="Entry Nancy.Routing.DefaultRouteResolver.DefaultRouteResolver(Nancy.INancyModuleCatalog, Nancy.Routing.IRoutePatternMatcher, Nancy.Routing.INancyModuleBuilder, Nancy.Routing.IRouteCache, System.Collections.Generic.IEnumerable<Nancy.Responses.Negotiation.IResponseProcessor>)", span="30-30"];
m11_1 [cluster="Nancy.Routing.DefaultRouteResolver.DefaultRouteResolver(Nancy.INancyModuleCatalog, Nancy.Routing.IRoutePatternMatcher, Nancy.Routing.INancyModuleBuilder, Nancy.Routing.IRouteCache, System.Collections.Generic.IEnumerable<Nancy.Responses.Negotiation.IResponseProcessor>)", file="RequestHeaders.cs", label="this.nancyModuleCatalog = nancyModuleCatalog", span="32-32"];
m11_2 [cluster="Nancy.Routing.DefaultRouteResolver.DefaultRouteResolver(Nancy.INancyModuleCatalog, Nancy.Routing.IRoutePatternMatcher, Nancy.Routing.INancyModuleBuilder, Nancy.Routing.IRouteCache, System.Collections.Generic.IEnumerable<Nancy.Responses.Negotiation.IResponseProcessor>)", file="RequestHeaders.cs", label="this.routePatternMatcher = routePatternMatcher", span="33-33"];
m11_181 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="RequestHeaders.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m11_78 [cluster="System.Convert.ToInt32(string)", file="RequestHeaders.cs", label="Entry System.Convert.ToInt32(string)", span="0-0"];
m11_121 [cluster="Nancy.RequestHeaders.GetWeightedValues(string)", file="RequestHeaders.cs", label="Entry Nancy.RequestHeaders.GetWeightedValues(string)", span="292-292"];
m11_173 [cluster="Nancy.RequestHeaders.GetValue<T>(string, System.Func<System.Collections.Generic.IEnumerable<string>, T>)", file="RequestHeaders.cs", label="Entry Nancy.RequestHeaders.GetValue<T>(string, System.Func<System.Collections.Generic.IEnumerable<string>, T>)", span="360-360"];
m11_177 [cluster="Nancy.RequestHeaders.GetValue<T>(string, System.Func<System.Collections.Generic.IEnumerable<string>, T>)", file="RequestHeaders.cs", label="!this.headers.ContainsKey(name)", span="362-362"];
m11_179 [cluster="Nancy.RequestHeaders.GetValue<T>(string, System.Func<System.Collections.Generic.IEnumerable<string>, T>)", file="RequestHeaders.cs", label="return converter.Invoke(this.headers[name]);", span="367-367"];
m11_178 [cluster="Nancy.RequestHeaders.GetValue<T>(string, System.Func<System.Collections.Generic.IEnumerable<string>, T>)", file="RequestHeaders.cs", label="return (T)(GetDefaultValue(typeof(T)) ?? default(T));", span="364-364"];
m11_180 [cluster="Nancy.RequestHeaders.GetValue<T>(string, System.Func<System.Collections.Generic.IEnumerable<string>, T>)", file="RequestHeaders.cs", label="Exit Nancy.RequestHeaders.GetValue<T>(string, System.Func<System.Collections.Generic.IEnumerable<string>, T>)", span="360-360"];
m11_190 [cluster="string.Concat(string, string, string)", file="RequestHeaders.cs", label="Entry string.Concat(string, string, string)", span="0-0"];
m11_170 [cluster="NancyCookie.cstr", file="RequestHeaders.cs", label="Nancy.NancyContext", span=""];
m11_168 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="RequestHeaders.cs", label="Nancy.Routing.DefaultRouteResolver", span=""];
m11_208 [file="RequestHeaders.cs", label="Nancy.RequestHeaders", span=""];
m12_78 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_sort_accept_header_values_decending_based_on_quality()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_sort_accept_header_values_decending_based_on_quality()", span="155-155"];
m12_79 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_sort_accept_header_values_decending_based_on_quality()", file="RequestHeadersFixture.cs", label="var values = new[] { ''text/plain;q=0.3, text/ninja, text/html;q=0.7'' }", span="158-158"];
m12_80 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_sort_accept_header_values_decending_based_on_quality()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { ''Accept'', values } }", span="159-159"];
m12_81 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_sort_accept_header_values_decending_based_on_quality()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders).Accept.ToList()", span="162-162"];
m12_82 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_sort_accept_header_values_decending_based_on_quality()", color=red, community=0, file="RequestHeadersFixture.cs", label="2: headers.Count.ShouldEqual(3)", span="165-165"];
m12_83 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_sort_accept_header_values_decending_based_on_quality()", file="RequestHeadersFixture.cs", label="headers[0].Item1.ShouldEqual(''text/ninja'')", span="166-166"];
m12_84 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_sort_accept_header_values_decending_based_on_quality()", file="RequestHeadersFixture.cs", label="headers[1].Item1.ShouldEqual(''text/html'')", span="167-167"];
m12_85 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_sort_accept_header_values_decending_based_on_quality()", file="RequestHeadersFixture.cs", label="headers[2].Item1.ShouldEqual(''text/plain'')", span="168-168"];
m12_86 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_sort_accept_header_values_decending_based_on_quality()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_sort_accept_header_values_decending_based_on_quality()", span="155-155"];
m12_195 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_accept_language_headers_when_available()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_return_accept_language_headers_when_available()", span="392-392"];
m12_196 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_accept_language_headers_when_available()", file="RequestHeadersFixture.cs", label="var expectedValues = new[] { ''en-US'', ''sv-SE'' }", span="395-395"];
m12_197 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_accept_language_headers_when_available()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { ''Accept-Language'', expectedValues } }", span="396-396"];
m12_198 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_accept_language_headers_when_available()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders).AcceptLanguage.ToList()", span="399-399"];
m12_199 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_accept_language_headers_when_available()", color=red, community=0, file="RequestHeadersFixture.cs", label="2: headers.Count.ShouldEqual(2)", span="402-402"];
m12_200 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_accept_language_headers_when_available()", file="RequestHeadersFixture.cs", label="headers[0].Item1.ShouldEqual(''en-US'')", span="403-403"];
m12_201 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_accept_language_headers_when_available()", file="RequestHeadersFixture.cs", label="headers[1].Item1.ShouldEqual(''sv-SE'')", span="404-404"];
m12_202 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_accept_language_headers_when_available()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_return_accept_language_headers_when_available()", span="392-392"];
m12_482 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_string_when_ifrange_headers_are_not_available()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_string_when_ifrange_headers_are_not_available()", span="1045-1045"];
m12_483 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_string_when_ifrange_headers_are_not_available()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>>()", span="1048-1048"];
m12_484 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_string_when_ifrange_headers_are_not_available()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="1051-1051"];
m12_485 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_string_when_ifrange_headers_are_not_available()", file="RequestHeadersFixture.cs", label="headers.IfRange.ShouldBeEmpty()", span="1054-1054"];
m12_486 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_string_when_ifrange_headers_are_not_available()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_string_when_ifrange_headers_are_not_available()", span="1045-1045"];
m12_292 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_string_when_connection_headers_are_not_available()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_string_when_connection_headers_are_not_available()", span="591-591"];
m12_293 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_string_when_connection_headers_are_not_available()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>>()", span="594-594"];
m12_294 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_string_when_connection_headers_are_not_available()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="597-597"];
m12_295 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_string_when_connection_headers_are_not_available()", file="RequestHeadersFixture.cs", label="headers.Connection.ShouldBeEmpty()", span="600-600"];
m12_296 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_string_when_connection_headers_are_not_available()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_string_when_connection_headers_are_not_available()", span="591-591"];
m12_504 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_date_ifunmodifiedsince_when_available()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_return_date_ifunmodifiedsince_when_available()", span="1101-1101"];
m12_505 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_date_ifunmodifiedsince_when_available()", file="RequestHeadersFixture.cs", label="var expectedDate = new DateTime(2011, 11, 15, 8, 12, 31)", span="1104-1104"];
m12_506 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_date_ifunmodifiedsince_when_available()", file="RequestHeadersFixture.cs", label="var expectedValues = new[] { ''Tue, 15 Nov 2011 08:12:31 GMT'' }", span="1105-1105"];
m12_509 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_date_ifunmodifiedsince_when_available()", file="RequestHeadersFixture.cs", label="headers.IfUnmodifiedSince.ShouldEqual(expectedDate)", span="1112-1112"];
m12_507 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_date_ifunmodifiedsince_when_available()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { ''If-Unmodified-Since'', expectedValues } }", span="1106-1106"];
m12_508 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_date_ifunmodifiedsince_when_available()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="1109-1109"];
m12_510 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_date_ifunmodifiedsince_when_available()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_return_date_ifunmodifiedsince_when_available()", span="1101-1101"];
m12_326 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_string_when_content_type_headers_are_not_available()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_string_when_content_type_headers_are_not_available()", span="677-677"];
m12_327 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_string_when_content_type_headers_are_not_available()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>>()", span="680-680"];
m12_328 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_string_when_content_type_headers_are_not_available()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="683-683"];
m12_329 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_string_when_content_type_headers_are_not_available()", file="RequestHeadersFixture.cs", label="headers.ContentType.ShouldBeEmpty()", span="686-686"];
m12_330 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_string_when_content_type_headers_are_not_available()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_string_when_content_type_headers_are_not_available()", span="677-677"];
m12_94 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_accept_charset_headers_are_not_available()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_accept_charset_headers_are_not_available()", span="189-189"];
m12_95 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_accept_charset_headers_are_not_available()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>>()", span="192-192"];
m12_96 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_accept_charset_headers_are_not_available()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="195-195"];
m12_97 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_accept_charset_headers_are_not_available()", file="RequestHeadersFixture.cs", label="headers.AcceptCharset.ShouldHaveCount(0)", span="198-198"];
m12_98 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_accept_charset_headers_are_not_available()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_accept_charset_headers_are_not_available()", span="189-189"];
m12_107 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_charset_header_values_when_containing_multiple_values()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_charset_header_values_when_containing_multiple_values()", span="218-218"];
m12_108 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_charset_header_values_when_containing_multiple_values()", file="RequestHeadersFixture.cs", label="var values = new[] { ''utf-8, iso-8859-5'' }", span="221-221"];
m12_109 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_charset_header_values_when_containing_multiple_values()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { ''Accept-Charset'', values } }", span="222-222"];
m12_110 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_charset_header_values_when_containing_multiple_values()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders).AcceptCharset.ToList()", span="225-225"];
m12_111 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_charset_header_values_when_containing_multiple_values()", color=red, community=0, file="RequestHeadersFixture.cs", label="2: headers.Count.ShouldEqual(2)", span="228-228"];
m12_112 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_charset_header_values_when_containing_multiple_values()", file="RequestHeadersFixture.cs", label="headers[0].Item1.ShouldEqual(''utf-8'')", span="229-229"];
m12_113 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_charset_header_values_when_containing_multiple_values()", file="RequestHeadersFixture.cs", label="headers[1].Item1.ShouldEqual(''iso-8859-5'')", span="230-230"];
m12_114 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_charset_header_values_when_containing_multiple_values()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_charset_header_values_when_containing_multiple_values()", span="218-218"];
m12_630 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_accept_encoding_headers_to_be_overwritten()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_accept_encoding_headers_to_be_overwritten()", span="1404-1404"];
m12_631 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_accept_encoding_headers_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var expectedValues = new[] {\r\n                ''compress'', \r\n                ''gzip'', \r\n            }", span="1407-1410"];
m12_632 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_accept_encoding_headers_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var rawHeaders =\r\n                new Dictionary<string, IEnumerable<string>> { { ''Accept-Encoding'', new[] { ''sdch'' } } }", span="1412-1413"];
m12_633 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_accept_encoding_headers_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var headers =\r\n                new RequestHeaders(rawHeaders) { AcceptEncoding = expectedValues }", span="1415-1416"];
m12_634 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_accept_encoding_headers_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var values = headers.AcceptEncoding.ToList()", span="1419-1419"];
m12_635 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_accept_encoding_headers_to_be_overwritten()", file="RequestHeadersFixture.cs", label="values[0].ShouldEqual(''compress'')", span="1422-1422"];
m12_636 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_accept_encoding_headers_to_be_overwritten()", file="RequestHeadersFixture.cs", label="values[1].ShouldEqual(''gzip'')", span="1423-1423"];
m12_637 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_accept_encoding_headers_to_be_overwritten()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_accept_encoding_headers_to_be_overwritten()", span="1404-1404"];
m12_511 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_null_ifunmodifiedsince_is_invalid()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_return_null_ifunmodifiedsince_is_invalid()", span="1116-1116"];
m12_512 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_null_ifunmodifiedsince_is_invalid()", file="RequestHeadersFixture.cs", label="var expectedValues = new[] { ''Bad Date'' }", span="1119-1119"];
m12_513 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_null_ifunmodifiedsince_is_invalid()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { ''If-Unmodified-Since'', expectedValues } }", span="1120-1120"];
m12_514 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_null_ifunmodifiedsince_is_invalid()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="1123-1123"];
m12_515 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_null_ifunmodifiedsince_is_invalid()", file="RequestHeadersFixture.cs", label="headers.IfUnmodifiedSince.ShouldBeNull()", span="1126-1126"];
m12_516 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_null_ifunmodifiedsince_is_invalid()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_return_null_ifunmodifiedsince_is_invalid()", span="1116-1116"];
m12_241 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_sort_accept_language_header_values_decending_based_on_quality()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_sort_accept_language_header_values_decending_based_on_quality()", span="472-472"];
m12_242 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_sort_accept_language_header_values_decending_based_on_quality()", file="RequestHeadersFixture.cs", label="var values = new[] { ''en-US;q=0.3, da, sv-SE;q=0.7'' }", span="475-475"];
m12_243 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_sort_accept_language_header_values_decending_based_on_quality()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { ''Accept-Language'', values } }", span="476-476"];
m12_244 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_sort_accept_language_header_values_decending_based_on_quality()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders).AcceptLanguage.ToList()", span="479-479"];
m12_245 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_sort_accept_language_header_values_decending_based_on_quality()", color=red, community=0, file="RequestHeadersFixture.cs", label="2: headers.Count.ShouldEqual(3)", span="482-482"];
m12_246 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_sort_accept_language_header_values_decending_based_on_quality()", file="RequestHeadersFixture.cs", label="headers[0].Item1.ShouldEqual(''da'')", span="483-483"];
m12_247 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_sort_accept_language_header_values_decending_based_on_quality()", file="RequestHeadersFixture.cs", label="headers[1].Item1.ShouldEqual(''sv-SE'')", span="484-484"];
m12_248 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_sort_accept_language_header_values_decending_based_on_quality()", file="RequestHeadersFixture.cs", label="headers[2].Item1.ShouldEqual(''en-US'')", span="485-485"];
m12_249 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_sort_accept_language_header_values_decending_based_on_quality()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_sort_accept_language_header_values_decending_based_on_quality()", span="472-472"];
m12_722 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_date_to_be_overwritten()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_date_to_be_overwritten()", span="1662-1662"];
m12_723 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_date_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var expectedValue =\r\n                new DateTime(2012, 12, 15, 8, 12, 31)", span="1665-1666"];
m12_724 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_date_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var rawHeaders =\r\n                new Dictionary<string, IEnumerable<string>> { { ''Date'', new[] { ''Tue, 15 Nov 2011 08:12:31 GMT'' } } }", span="1668-1669"];
m12_725 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_date_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var headers =\r\n                new RequestHeaders(rawHeaders) { Date = expectedValue }", span="1671-1672"];
m12_727 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_date_to_be_overwritten()", file="RequestHeadersFixture.cs", label="values.ShouldEqual(expectedValue)", span="1678-1678"];
m12_726 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_date_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var values = headers.Date", span="1675-1675"];
m12_728 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_date_to_be_overwritten()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_date_to_be_overwritten()", span="1662-1662"];
m12_17 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_all_header_names_when_keys_are_retrieved()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_return_all_header_names_when_keys_are_retrieved()", span="37-37"];
m12_18 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_all_header_names_when_keys_are_retrieved()", file="RequestHeadersFixture.cs", label="var rawHeaders = \r\n                new Dictionary<string, IEnumerable<string>>\r\n                {\r\n                    {''accept'', null},\r\n                    {''charset'', null}\r\n                }", span="40-45"];
m12_19 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_all_header_names_when_keys_are_retrieved()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="47-47"];
m12_20 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_all_header_names_when_keys_are_retrieved()", file="RequestHeadersFixture.cs", label="var keys = headers.Keys.ToList()", span="50-50"];
m12_21 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_all_header_names_when_keys_are_retrieved()", color=red, community=0, file="RequestHeadersFixture.cs", label="0: keys.Count().ShouldEqual(2)", span="53-53"];
m12_22 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_all_header_names_when_keys_are_retrieved()", file="RequestHeadersFixture.cs", label="keys.First().ShouldEqual(''accept'')", span="54-54"];
m12_23 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_all_header_names_when_keys_are_retrieved()", file="RequestHeadersFixture.cs", label="keys.Last().ShouldEqual(''charset'')", span="55-55"];
m12_24 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_all_header_names_when_keys_are_retrieved()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_return_all_header_names_when_keys_are_retrieved()", span="37-37"];
m12_493 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_ifrange_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_ifrange_header_name_when_retrieving_values(string)", span="1074-1074"];
m12_494 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_ifrange_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var expectedValues = new[] { ''737060cd8c284d8af7ad3082f209582d'' }", span="1077-1077"];
m12_495 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_ifrange_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { headerName, expectedValues } }", span="1078-1078"];
m12_497 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_ifrange_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="headers.IfRange.ShouldEqual(expectedValues[0])", span="1084-1084"];
m12_496 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_ifrange_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="1081-1081"];
m12_498 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_ifrange_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_ifrange_header_name_when_retrieving_values(string)", span="1074-1074"];
m12_31 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_all_accept_headers_when_multiple_are_available()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_return_all_accept_headers_when_multiple_are_available()", span="72-72"];
m12_32 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_all_accept_headers_when_multiple_are_available()", file="RequestHeadersFixture.cs", label="var rawHeaders = \r\n                new Dictionary<string, IEnumerable<string>>\r\n                {\r\n                    { ''Accept'', new[] { ''text/plain'', ''text/ninja'' } }\r\n                }", span="75-79"];
m12_33 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_all_accept_headers_when_multiple_are_available()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders).Accept.ToList()", span="82-82"];
m12_34 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_all_accept_headers_when_multiple_are_available()", color=red, community=0, file="RequestHeadersFixture.cs", label="2: headers.Count.ShouldEqual(2)", span="85-85"];
m12_35 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_all_accept_headers_when_multiple_are_available()", file="RequestHeadersFixture.cs", label="headers[0].Item1.ShouldEqual(''text/plain'')", span="86-86"];
m12_36 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_all_accept_headers_when_multiple_are_available()", file="RequestHeadersFixture.cs", label="headers[1].Item1.ShouldEqual(''text/ninja'')", span="87-87"];
m12_37 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_all_accept_headers_when_multiple_are_available()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_return_all_accept_headers_when_multiple_are_available()", span="72-72"];
m12_303 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_connection_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_connection_header_name_when_retrieving_values(string)", span="620-620"];
m12_304 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_connection_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var expectedValues = new[] { ''closed'' }", span="623-623"];
m12_305 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_connection_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { headerName, expectedValues } }", span="624-624"];
m12_307 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_connection_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="headers.Connection.ShouldBeSameAs(expectedValues[0])", span="630-630"];
m12_306 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_connection_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="627-627"];
m12_308 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_connection_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_connection_header_name_when_retrieving_values(string)", span="620-620"];
m12_46 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_header_value_quality_when_available()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_header_value_quality_when_available()", span="107-107"];
m12_47 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_header_value_quality_when_available()", file="RequestHeadersFixture.cs", label="var values = new[] { ''text/plain;q=0.3'' }", span="110-110"];
m12_48 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_header_value_quality_when_available()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { ''Accept'', values } }", span="111-111"];
m12_49 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_header_value_quality_when_available()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders).Accept.ToList()", span="114-114"];
m12_50 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_header_value_quality_when_available()", color=red, community=0, file="RequestHeadersFixture.cs", label="2: headers.Count.ShouldEqual(1)", span="117-117"];
m12_51 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_header_value_quality_when_available()", file="RequestHeadersFixture.cs", label="headers[0].Item1.ShouldEqual(''text/plain'')", span="118-118"];
m12_52 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_header_value_quality_when_available()", file="RequestHeadersFixture.cs", label="headers[0].Item2.ShouldEqual(0.3m)", span="119-119"];
m12_53 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_header_value_quality_when_available()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_header_value_quality_when_available()", span="107-107"];
m12_529 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_maxforwards_headers_when_available()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_return_maxforwards_headers_when_available()", span="1160-1160"];
m12_530 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_maxforwards_headers_when_available()", file="RequestHeadersFixture.cs", label="var expectedValues = new[] { ''12'' }", span="1163-1163"];
m12_531 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_maxforwards_headers_when_available()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { ''Max-Forwards'', expectedValues } }", span="1164-1164"];
m12_532 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_maxforwards_headers_when_available()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="1167-1167"];
m12_533 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_maxforwards_headers_when_available()", file="RequestHeadersFixture.cs", label="headers.MaxForwards.ShouldEqual(12)", span="1170-1170"];
m12_534 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_maxforwards_headers_when_available()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_return_maxforwards_headers_when_available()", span="1160-1160"];
m12_848 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_user_agent_header_if_assigned_null()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_user_agent_header_if_assigned_null()", span="2012-2012"];
m12_849 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_user_agent_header_if_assigned_null()", file="RequestHeadersFixture.cs", label="var rawHeaders =\r\n                new Dictionary<string, IEnumerable<string>> { { ''User-Agent'', new[] { ''Mozilla/5.0 (Windows NT 5.1) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/14.0.815.0 Safari/535.1'' } } }", span="2015-2016"];
m12_850 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_user_agent_header_if_assigned_null()", file="RequestHeadersFixture.cs", label="var headers =\r\n                new RequestHeaders(rawHeaders) { UserAgent = null }", span="2018-2019"];
m12_851 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_user_agent_header_if_assigned_null()", file="RequestHeadersFixture.cs", label="var values = headers.Keys", span="2022-2022"];
m12_852 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_user_agent_header_if_assigned_null()", file="RequestHeadersFixture.cs", label="values.Contains(''User-Agent'').ShouldBeFalse()", span="2025-2025"];
m12_853 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_user_agent_header_if_assigned_null()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_user_agent_header_if_assigned_null()", span="2012-2012"];
m12_407 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_ifmatch_headers_are_not_available()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_ifmatch_headers_are_not_available()", span="868-868"];
m12_408 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_ifmatch_headers_are_not_available()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>>()", span="871-871"];
m12_409 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_ifmatch_headers_are_not_available()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="874-874"];
m12_410 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_ifmatch_headers_are_not_available()", file="RequestHeadersFixture.cs", label="headers.IfMatch.ShouldHaveCount(0)", span="877-877"];
m12_411 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_ifmatch_headers_are_not_available()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_ifmatch_headers_are_not_available()", span="868-868"];
m12_558 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_string_when_useragent_headers_are_not_available()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_string_when_useragent_headers_are_not_available()", span="1233-1233"];
m12_559 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_string_when_useragent_headers_are_not_available()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>>()", span="1236-1236"];
m12_560 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_string_when_useragent_headers_are_not_available()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="1239-1239"];
m12_561 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_string_when_useragent_headers_are_not_available()", file="RequestHeadersFixture.cs", label="headers.UserAgent.ShouldBeEmpty()", span="1242-1242"];
m12_562 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_string_when_useragent_headers_are_not_available()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_string_when_useragent_headers_are_not_available()", span="1233-1233"];
m12_581 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_header_values_when_available_using_indexer()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_header_values_when_available_using_indexer()", span="1290-1290"];
m12_582 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_header_values_when_available_using_indexer()", file="RequestHeadersFixture.cs", label="var expectedValues = new[] { ''fakeValue1'', ''fakeValue2'' }", span="1293-1293"];
m12_583 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_header_values_when_available_using_indexer()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { ''some-header'', expectedValues } }", span="1294-1294"];
m12_586 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_header_values_when_available_using_indexer()", file="RequestHeadersFixture.cs", label="result.ShouldBeSameAs(expectedValues)", span="1301-1301"];
m12_584 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_header_values_when_available_using_indexer()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="1295-1295"];
m12_585 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_header_values_when_available_using_indexer()", file="RequestHeadersFixture.cs", label="var result = headers[''some-header'']", span="1298-1298"];
m12_587 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_header_values_when_available_using_indexer()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_header_values_when_available_using_indexer()", span="1290-1290"];
m12_854 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_retrieve_weighting_for_accept_headers(string, string, double)", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_retrieve_weighting_for_accept_headers(string, string, double)", span="2034-2034"];
m12_855 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_retrieve_weighting_for_accept_headers(string, string, double)", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { ''Accept'', new[] { header } } }", span="2036-2036"];
m12_857 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_retrieve_weighting_for_accept_headers(string, string, double)", file="RequestHeadersFixture.cs", label="headers.Accept.First(a => a.Item1 == typeToCheck).Item2.ShouldEqual((decimal)weighting)", span="2040-2040"];
m12_856 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_retrieve_weighting_for_accept_headers(string, string, double)", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="2038-2038"];
m12_858 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_retrieve_weighting_for_accept_headers(string, string, double)", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_retrieve_weighting_for_accept_headers(string, string, double)", span="2034-2034"];
m12_87 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_accept_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_accept_header_name_when_retrieving_values(string)", span="174-174"];
m12_88 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_accept_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var expectedValues = new[] { ''text/plain'', ''text/ninja'' }", span="177-177"];
m12_89 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_accept_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { headerName, expectedValues } }", span="178-178"];
m12_90 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_accept_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders).Accept.ToList()", span="181-181"];
m12_91 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_accept_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="headers[0].Item1.ShouldEqual(''text/plain'')", span="184-184"];
m12_92 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_accept_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="headers[1].Item1.ShouldEqual(''text/ninja'')", span="185-185"];
m12_93 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_accept_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_accept_header_name_when_retrieving_values(string)", span="174-174"];
m12_776 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_if_none_match_to_be_overwritten()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_if_none_match_to_be_overwritten()", span="1810-1810"];
m12_777 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_if_none_match_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var expectedValues = new[] {\r\n                ''fsdfsd'', ''c3pdfgdfgjiozzzz'' \r\n            }", span="1813-1815"];
m12_778 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_if_none_match_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var rawHeaders =\r\n                new Dictionary<string, IEnumerable<string>> { { ''If-None-Match'', new[] { ''xyzzy'', ''c3piozzzz'' } } }", span="1817-1818"];
m12_779 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_if_none_match_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var headers =\r\n                new RequestHeaders(rawHeaders) { IfNoneMatch = expectedValues }", span="1820-1821"];
m12_781 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_if_none_match_to_be_overwritten()", file="RequestHeadersFixture.cs", label="values.ShouldEqualSequence(expectedValues)", span="1827-1827"];
m12_780 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_if_none_match_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var values = headers.IfNoneMatch.ToArray()", span="1824-1824"];
m12_782 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_if_none_match_to_be_overwritten()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_if_none_match_to_be_overwritten()", span="1810-1810"];
m12_757 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_if_match_if_assigned_null()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_if_match_if_assigned_null()", span="1756-1756"];
m12_758 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_if_match_if_assigned_null()", file="RequestHeadersFixture.cs", label="var rawHeaders =\r\n                new Dictionary<string, IEnumerable<string>> { { ''If-Match'', new[] { ''fsdfsd'' } } }", span="1759-1760"];
m12_759 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_if_match_if_assigned_null()", file="RequestHeadersFixture.cs", label="var headers =\r\n                new RequestHeaders(rawHeaders) { IfMatch = null }", span="1762-1763"];
m12_760 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_if_match_if_assigned_null()", file="RequestHeadersFixture.cs", label="var values = headers.Keys", span="1766-1766"];
m12_761 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_if_match_if_assigned_null()", file="RequestHeadersFixture.cs", label="values.Contains(''If-Match'').ShouldBeFalse()", span="1769-1769"];
m12_762 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_if_match_if_assigned_null()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_if_match_if_assigned_null()", span="1756-1756"];
m12_12 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="RequestHeadersFixture.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m12_680 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_cache_control_if_assigned_null()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_cache_control_if_assigned_null()", span="1543-1543"];
m12_681 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_cache_control_if_assigned_null()", file="RequestHeadersFixture.cs", label="var rawHeaders =\r\n                new Dictionary<string, IEnumerable<string>> { { ''Cache-Control'', new[] { ''public'' } } }", span="1546-1547"];
m12_682 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_cache_control_if_assigned_null()", file="RequestHeadersFixture.cs", label="var headers =\r\n                new RequestHeaders(rawHeaders) { CacheControl = null }", span="1549-1550"];
m12_683 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_cache_control_if_assigned_null()", file="RequestHeadersFixture.cs", label="var values = headers.Keys", span="1553-1553"];
m12_684 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_cache_control_if_assigned_null()", file="RequestHeadersFixture.cs", label="values.Contains(''Cache-Control'').ShouldBeFalse()", span="1556-1556"];
m12_685 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_cache_control_if_assigned_null()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_cache_control_if_assigned_null()", span="1543-1543"];
m12_672 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_cache_control_headers_to_be_overwritten()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_cache_control_headers_to_be_overwritten()", span="1520-1520"];
m12_673 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_cache_control_headers_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var expectedValues = new[] {\r\n                ''public'', \r\n                ''max-age=123445'', \r\n            }", span="1523-1526"];
m12_674 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_cache_control_headers_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var rawHeaders =\r\n                new Dictionary<string, IEnumerable<string>> { { ''Cache-Control'', new[] { ''no-transform'' } } }", span="1528-1529"];
m12_675 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_cache_control_headers_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var headers =\r\n                new RequestHeaders(rawHeaders) { CacheControl = expectedValues }", span="1531-1532"];
m12_676 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_cache_control_headers_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var values = headers.CacheControl.ToList()", span="1535-1535"];
m12_677 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_cache_control_headers_to_be_overwritten()", file="RequestHeadersFixture.cs", label="values[0].ShouldEqual(''public'')", span="1538-1538"];
m12_678 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_cache_control_headers_to_be_overwritten()", file="RequestHeadersFixture.cs", label="values[1].ShouldEqual(''max-age=123445'')", span="1539-1539"];
m12_679 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_cache_control_headers_to_be_overwritten()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_cache_control_headers_to_be_overwritten()", span="1520-1520"];
m12_314 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_content_length_headers_when_available()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_return_content_length_headers_when_available()", span="647-647"];
m12_315 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_content_length_headers_when_available()", file="RequestHeadersFixture.cs", label="var expectedValues = new[] { ''12345'' }", span="650-650"];
m12_316 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_content_length_headers_when_available()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { ''Content-Length'', expectedValues } }", span="651-651"];
m12_317 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_content_length_headers_when_available()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="654-654"];
m12_318 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_content_length_headers_when_available()", file="RequestHeadersFixture.cs", label="headers.ContentLength.ShouldEqual(12345L)", span="657-657"];
m12_319 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_content_length_headers_when_available()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_return_content_length_headers_when_available()", span="647-647"];
m12_275 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_cache_control_headers_are_not_available()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_cache_control_headers_are_not_available()", span="548-548"];
m12_276 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_cache_control_headers_are_not_available()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>>()", span="551-551"];
m12_277 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_cache_control_headers_are_not_available()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="554-554"];
m12_278 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_cache_control_headers_are_not_available()", file="RequestHeadersFixture.cs", label="headers.CacheControl.ShouldHaveCount(0)", span="557-557"];
m12_279 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_cache_control_headers_are_not_available()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_cache_control_headers_are_not_available()", span="548-548"];
m12_357 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_be_null_when_date_headers_are_invalid()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_be_null_when_date_headers_are_invalid()", span="749-749"];
m12_358 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_be_null_when_date_headers_are_invalid()", file="RequestHeadersFixture.cs", label="var expectedValues = new[] { ''Bad Date Header'' }", span="752-752"];
m12_359 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_be_null_when_date_headers_are_invalid()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { ''Date'', expectedValues } }", span="753-753"];
m12_360 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_be_null_when_date_headers_are_invalid()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="756-756"];
m12_361 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_be_null_when_date_headers_are_invalid()", file="RequestHeadersFixture.cs", label="headers.Date.ShouldBeNull()", span="759-759"];
m12_362 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_be_null_when_date_headers_are_invalid()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_be_null_when_date_headers_are_invalid()", span="749-749"];
m12_755 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="RequestHeadersFixture.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m12_612 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="RequestHeadersFixture.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0"];
m12_280 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_cache_control_headers_when_available()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_return_cache_control_headers_when_available()", span="561-561"];
m12_281 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_cache_control_headers_when_available()", file="RequestHeadersFixture.cs", label="var expectedValues = new[] { ''public'', ''max-age=123445'' }", span="564-564"];
m12_282 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_cache_control_headers_when_available()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { ''Cache-Control'', expectedValues } }", span="565-565"];
m12_284 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_cache_control_headers_when_available()", file="RequestHeadersFixture.cs", label="headers.CacheControl.ShouldBeSameAs(expectedValues)", span="571-571"];
m12_283 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_cache_control_headers_when_available()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="568-568"];
m12_285 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_cache_control_headers_when_available()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_return_cache_control_headers_when_available()", span="561-561"];
m12_123 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_default_accept_charset_header_values_to_quality_one_if_not_explicitly_defined()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_default_accept_charset_header_values_to_quality_one_if_not_explicitly_defined()", span="250-250"];
m12_124 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_default_accept_charset_header_values_to_quality_one_if_not_explicitly_defined()", file="RequestHeadersFixture.cs", label="var values = new[] { ''utf-8'' }", span="253-253"];
m12_125 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_default_accept_charset_header_values_to_quality_one_if_not_explicitly_defined()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { ''Accept-Charset'', values } }", span="254-254"];
m12_126 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_default_accept_charset_header_values_to_quality_one_if_not_explicitly_defined()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders).AcceptCharset.ToList()", span="257-257"];
m12_127 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_default_accept_charset_header_values_to_quality_one_if_not_explicitly_defined()", color=red, community=0, file="RequestHeadersFixture.cs", label="2: headers.Count.ShouldEqual(1)", span="260-260"];
m12_128 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_default_accept_charset_header_values_to_quality_one_if_not_explicitly_defined()", file="RequestHeadersFixture.cs", label="headers[0].Item1.ShouldEqual(''utf-8'')", span="261-261"];
m12_129 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_default_accept_charset_header_values_to_quality_one_if_not_explicitly_defined()", file="RequestHeadersFixture.cs", label="headers[0].Item2.ShouldEqual(1m)", span="262-262"];
m12_130 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_default_accept_charset_header_values_to_quality_one_if_not_explicitly_defined()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_default_accept_charset_header_values_to_quality_one_if_not_explicitly_defined()", span="250-250"];
m12_343 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_null_date_when_date_headers_are_not_available()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_return_null_date_when_date_headers_are_not_available()", span="720-720"];
m12_344 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_null_date_when_date_headers_are_not_available()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>>()", span="723-723"];
m12_345 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_null_date_when_date_headers_are_not_available()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="726-726"];
m12_346 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_null_date_when_date_headers_are_not_available()", file="RequestHeadersFixture.cs", label="headers.Date.ShouldBeNull()", span="729-729"];
m12_347 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_null_date_when_date_headers_are_not_available()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_return_null_date_when_date_headers_are_not_available()", span="720-720"];
m12_268 [cluster="object.ShouldBeSameAs(object)", file="RequestHeadersFixture.cs", label="Entry object.ShouldBeSameAs(object)", span="130-130"];
m12_261 [cluster="string.ShouldBeEmpty()", file="RequestHeadersFixture.cs", label="Entry string.ShouldBeEmpty()", span="26-26"];
m12_575 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_header_not_available_using_indexer()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_header_not_available_using_indexer()", span="1276-1276"];
m12_576 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_header_not_available_using_indexer()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>>()", span="1279-1279"];
m12_577 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_header_not_available_using_indexer()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="1280-1280"];
m12_578 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_header_not_available_using_indexer()", file="RequestHeadersFixture.cs", label="var result = headers[''not-found'']", span="1283-1283"];
m12_579 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_header_not_available_using_indexer()", file="RequestHeadersFixture.cs", label="result.ShouldHaveCount(0)", span="1286-1286"];
m12_580 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_header_not_available_using_indexer()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_header_not_available_using_indexer()", span="1276-1276"];
m12_666 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_authorization_if_assigned_null()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_authorization_if_assigned_null()", span="1503-1503"];
m12_667 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_authorization_if_assigned_null()", file="RequestHeadersFixture.cs", label="var rawHeaders =\r\n                new Dictionary<string, IEnumerable<string>> { { ''Authorization'', new[] { ''Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ=='' } } }", span="1506-1507"];
m12_668 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_authorization_if_assigned_null()", file="RequestHeadersFixture.cs", label="var headers =\r\n                new RequestHeaders(rawHeaders) { Authorization = null }", span="1509-1510"];
m12_669 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_authorization_if_assigned_null()", file="RequestHeadersFixture.cs", label="var values = headers.Keys", span="1513-1513"];
m12_670 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_authorization_if_assigned_null()", file="RequestHeadersFixture.cs", label="values.Contains(''Authorization'').ShouldBeFalse()", span="1516-1516"];
m12_671 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_authorization_if_assigned_null()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_authorization_if_assigned_null()", span="1503-1503"];
m12_462 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_ifnonematch_headers_when_available()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_return_ifnonematch_headers_when_available()", span="999-999"];
m12_463 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_ifnonematch_headers_when_available()", file="RequestHeadersFixture.cs", label="var expectedValues = new[] { ''xyzzy'', ''c3piozzzz'' }", span="1002-1002"];
m12_464 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_ifnonematch_headers_when_available()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { ''If-None-Match'', expectedValues } }", span="1003-1003"];
m12_466 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_ifnonematch_headers_when_available()", file="RequestHeadersFixture.cs", label="headers.IfNoneMatch.ShouldBeSameAs(expectedValues)", span="1009-1009"];
m12_465 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_ifnonematch_headers_when_available()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="1006-1006"];
m12_467 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_ifnonematch_headers_when_available()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_return_ifnonematch_headers_when_available()", span="999-999"];
m12_444 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_null_when_ifmodifiedsince_when_invalid()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_return_null_when_ifmodifiedsince_when_invalid()", span="955-955"];
m12_445 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_null_when_ifmodifiedsince_when_invalid()", file="RequestHeadersFixture.cs", label="var expectedValues = new[] { ''Bad Date'' }", span="958-958"];
m12_446 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_null_when_ifmodifiedsince_when_invalid()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { ''If-Modified-Since'', expectedValues } }", span="959-959"];
m12_447 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_null_when_ifmodifiedsince_when_invalid()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="962-962"];
m12_448 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_null_when_ifmodifiedsince_when_invalid()", file="RequestHeadersFixture.cs", label="headers.IfModifiedSince.ShouldBeNull()", span="965-965"];
m12_449 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_null_when_ifmodifiedsince_when_invalid()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_return_null_when_ifmodifiedsince_when_invalid()", span="955-955"];
m12_822 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_max_forwards_if_assigned_zero()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_max_forwards_if_assigned_zero()", span="1940-1940"];
m12_823 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_max_forwards_if_assigned_zero()", file="RequestHeadersFixture.cs", label="var rawHeaders =\r\n                new Dictionary<string, IEnumerable<string>> { { ''Max-Forwards'', new[] { ''2'' } } }", span="1943-1944"];
m12_824 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_max_forwards_if_assigned_zero()", file="RequestHeadersFixture.cs", label="var headers =\r\n                new RequestHeaders(rawHeaders) { MaxForwards = 0 }", span="1946-1947"];
m12_825 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_max_forwards_if_assigned_zero()", file="RequestHeadersFixture.cs", label="var values = headers.Keys", span="1950-1950"];
m12_826 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_max_forwards_if_assigned_zero()", file="RequestHeadersFixture.cs", label="values.Contains(''Max-Forwards'').ShouldBeFalse()", span="1953-1953"];
m12_827 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_max_forwards_if_assigned_zero()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_max_forwards_if_assigned_zero()", span="1940-1940"];
m12_25 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_accept_headers_are_not_available()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_accept_headers_are_not_available()", span="59-59"];
m12_26 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_accept_headers_are_not_available()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>>()", span="62-62"];
m12_27 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_accept_headers_are_not_available()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="65-65"];
m12_28 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_accept_headers_are_not_available()", file="RequestHeadersFixture.cs", label="headers.Accept.ShouldHaveCount(0)", span="68-68"];
m12_29 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_accept_headers_are_not_available()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_accept_headers_are_not_available()", span="59-59"];
m12_62 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_accept_header_values_with_invalid_quality()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_accept_header_values_with_invalid_quality()", span="139-139"];
m12_63 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_accept_header_values_with_invalid_quality()", file="RequestHeadersFixture.cs", label="var values = new[] { ''text/plain, text/ninja;q=a'' }", span="142-142"];
m12_64 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_accept_header_values_with_invalid_quality()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { ''Accept'', values } }", span="143-143"];
m12_65 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_accept_header_values_with_invalid_quality()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders).Accept.ToList()", span="146-146"];
m12_66 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_accept_header_values_with_invalid_quality()", color=red, community=0, file="RequestHeadersFixture.cs", label="0: headers.Count.ShouldEqual(2)", span="149-149"];
m12_67 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_accept_header_values_with_invalid_quality()", color=red, community=0, file="RequestHeadersFixture.cs", label="0: headers.FirstOrDefault(t => t.Item1 == ''text/plain'' && t.Item2 == 1.0m).ShouldNotBeNull()", span="150-150"];
m12_68 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_accept_header_values_with_invalid_quality()", color=red, community=0, file="RequestHeadersFixture.cs", label="0: headers.FirstOrDefault(t => t.Item1 == ''text/ninja'' && t.Item2 == 1.0m).ShouldNotBeNull()", span="151-151"];
m12_69 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_accept_header_values_with_invalid_quality()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_accept_header_values_with_invalid_quality()", span="139-139"];
m12_487 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_ifrange_header_when_available()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_return_ifrange_header_when_available()", span="1058-1058"];
m12_488 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_ifrange_header_when_available()", file="RequestHeadersFixture.cs", label="var expectedValues = new[] { ''737060cd8c284d8af7ad3082f209582d'' }", span="1061-1061"];
m12_489 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_ifrange_header_when_available()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { ''If-Range'', expectedValues } }", span="1062-1062"];
m12_491 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_ifrange_header_when_available()", file="RequestHeadersFixture.cs", label="headers.IfRange.ShouldEqual(expectedValues[0])", span="1068-1068"];
m12_490 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_ifrange_header_when_available()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="1065-1065"];
m12_492 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_ifrange_header_when_available()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_return_ifrange_header_when_available()", span="1058-1058"];
m12_190 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_accept_language_headers_are_not_available()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_accept_language_headers_are_not_available()", span="379-379"];
m12_191 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_accept_language_headers_are_not_available()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>>()", span="382-382"];
m12_192 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_accept_language_headers_are_not_available()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders).AcceptLanguage.ToList()", span="385-385"];
m12_193 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_accept_language_headers_are_not_available()", color=red, community=0, file="RequestHeadersFixture.cs", label="0: headers.Count.ShouldEqual(0)", span="388-388"];
m12_194 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_accept_language_headers_are_not_available()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_accept_language_headers_are_not_available()", span="379-379"];
m12_16 [cluster="System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", file="RequestHeadersFixture.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", span="0-0"];
m12_476 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_ifnonematch_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_ifnonematch_header_name_when_retrieving_values(string)", span="1031-1031"];
m12_477 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_ifnonematch_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var expectedValues = new[] { ''xyzzy'', ''c3piozzzz'' }", span="1034-1034"];
m12_478 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_ifnonematch_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { headerName, expectedValues } }", span="1035-1035"];
m12_480 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_ifnonematch_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="headers.IfNoneMatch.ShouldBeSameAs(expectedValues)", span="1041-1041"];
m12_479 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_ifnonematch_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="1038-1038"];
m12_481 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_ifnonematch_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_ifnonematch_header_name_when_retrieving_values(string)", span="1031-1031"];
m12_742 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_host_if_assigned_null()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_host_if_assigned_null()", span="1718-1718"];
m12_743 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_host_if_assigned_null()", file="RequestHeadersFixture.cs", label="var rawHeaders =\r\n                new Dictionary<string, IEnumerable<string>> { { ''Host'', new[] { ''www.nancyfx.org'' } } }", span="1721-1722"];
m12_744 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_host_if_assigned_null()", file="RequestHeadersFixture.cs", label="var headers =\r\n                new RequestHeaders(rawHeaders) { Host = null }", span="1724-1725"];
m12_745 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_host_if_assigned_null()", file="RequestHeadersFixture.cs", label="var values = headers.Keys", span="1728-1728"];
m12_746 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_host_if_assigned_null()", file="RequestHeadersFixture.cs", label="values.Contains(''Host'').ShouldBeFalse()", span="1731-1731"];
m12_747 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_host_if_assigned_null()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_host_if_assigned_null()", span="1718-1718"];
m12_729 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_date_if_assigned_null()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_date_if_assigned_null()", span="1682-1682"];
m12_730 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_date_if_assigned_null()", file="RequestHeadersFixture.cs", label="var rawHeaders =\r\n                new Dictionary<string, IEnumerable<string>> { { ''Date'', new[] { ''Tue, 15 Nov 2011 08:12:31 GMT'' } } }", span="1685-1686"];
m12_731 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_date_if_assigned_null()", file="RequestHeadersFixture.cs", label="var headers =\r\n                new RequestHeaders(rawHeaders) { Date = null }", span="1688-1689"];
m12_732 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_date_if_assigned_null()", file="RequestHeadersFixture.cs", label="var values = headers.Keys", span="1692-1692"];
m12_733 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_date_if_assigned_null()", file="RequestHeadersFixture.cs", label="values.Contains(''Date'').ShouldBeFalse()", span="1695-1695"];
m12_734 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_date_if_assigned_null()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_date_if_assigned_null()", span="1682-1682"];
m12_748 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_if_match_headers_to_be_overwritten()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_if_match_headers_to_be_overwritten()", span="1735-1735"];
m12_749 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_if_match_headers_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var expectedValues = new[] {\r\n                ''fsdfsd'', ''c3pdfgdfgjiozzzz'' \r\n            }", span="1738-1740"];
m12_750 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_if_match_headers_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var rawHeaders =\r\n                new Dictionary<string, IEnumerable<string>> { { ''If-Match'', new[] { ''xyzzy'', ''c3piozzzz'' } } }", span="1742-1743"];
m12_751 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_if_match_headers_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var headers =\r\n                new RequestHeaders(rawHeaders) { IfMatch = expectedValues }", span="1745-1746"];
m12_753 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_if_match_headers_to_be_overwritten()", file="RequestHeadersFixture.cs", label="values.ShouldEqualSequence(expectedValues)", span="1752-1752"];
m12_752 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_if_match_headers_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var values = headers.IfMatch.ToArray()", span="1749-1749"];
m12_754 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_if_match_headers_to_be_overwritten()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_if_match_headers_to_be_overwritten()", span="1735-1735"];
m12_15 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="RequestHeadersFixture.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m12_286 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_cache_control_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_cache_control_header_name_when_retrieving_values(string)", span="577-577"];
m12_287 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_cache_control_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var expectedValues = new[] { ''public'', ''max-age=123445'' }", span="580-580"];
m12_288 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_cache_control_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { headerName, expectedValues } }", span="581-581"];
m12_290 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_cache_control_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="headers.CacheControl.ShouldBeSameAs(expectedValues)", span="587-587"];
m12_289 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_cache_control_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="584-584"];
m12_291 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_cache_control_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_cache_control_header_name_when_retrieving_values(string)", span="577-577"];
m12_861 [cluster="lambda expression", file="RequestHeadersFixture.cs", label="Entry lambda expression", span="2040-2040"];
m12_72 [cluster="lambda expression", file="RequestHeadersFixture.cs", label="Entry lambda expression", span="150-150"];
m12_75 [cluster="lambda expression", file="RequestHeadersFixture.cs", label="Entry lambda expression", span="151-151"];
m12_73 [cluster="lambda expression", color=red, community=0, file="RequestHeadersFixture.cs", label="5: t.Item1 == ''text/plain'' && t.Item2 == 1.0m", span="150-150"];
m12_74 [cluster="lambda expression", file="RequestHeadersFixture.cs", label="Exit lambda expression", span="150-150"];
m12_76 [cluster="lambda expression", color=red, community=0, file="RequestHeadersFixture.cs", label="5: t.Item1 == ''text/ninja'' && t.Item2 == 1.0m", span="151-151"];
m12_77 [cluster="lambda expression", file="RequestHeadersFixture.cs", label="Exit lambda expression", span="151-151"];
m12_139 [cluster="lambda expression", file="RequestHeadersFixture.cs", label="Entry lambda expression", span="277-277"];
m12_142 [cluster="lambda expression", file="RequestHeadersFixture.cs", label="Entry lambda expression", span="278-278"];
m12_140 [cluster="lambda expression", color=red, community=0, file="RequestHeadersFixture.cs", label="5: t.Item1 == ''utf-8'' && t.Item2 == 1.0m", span="277-277"];
m12_141 [cluster="lambda expression", file="RequestHeadersFixture.cs", label="Exit lambda expression", span="277-277"];
m12_143 [cluster="lambda expression", color=red, community=0, file="RequestHeadersFixture.cs", label="5: t.Item1 == ''iso-8859-5'' && t.Item2 == 1.0m", span="278-278"];
m12_144 [cluster="lambda expression", file="RequestHeadersFixture.cs", label="Exit lambda expression", span="278-278"];
m12_235 [cluster="lambda expression", file="RequestHeadersFixture.cs", label="Entry lambda expression", span="467-467"];
m12_238 [cluster="lambda expression", file="RequestHeadersFixture.cs", label="Entry lambda expression", span="468-468"];
m12_236 [cluster="lambda expression", color=red, community=0, file="RequestHeadersFixture.cs", label="5: t.Item1 == ''en-US'' && t.Item2 == 1.0m", span="467-467"];
m12_237 [cluster="lambda expression", file="RequestHeadersFixture.cs", label="Exit lambda expression", span="467-467"];
m12_239 [cluster="lambda expression", color=red, community=0, file="RequestHeadersFixture.cs", label="5: t.Item1 == ''sv-SE'' && t.Item2 == 1.0m", span="468-468"];
m12_240 [cluster="lambda expression", file="RequestHeadersFixture.cs", label="Exit lambda expression", span="468-468"];
m12_862 [cluster="lambda expression", file="RequestHeadersFixture.cs", label="a.Item1 == typeToCheck", span="2040-2040"];
m12_863 [cluster="lambda expression", file="RequestHeadersFixture.cs", label="Exit lambda expression", span="2040-2040"];
m12_704 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_content_length_if_assigned_zero()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_content_length_if_assigned_zero()", span="1611-1611"];
m12_705 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_content_length_if_assigned_zero()", file="RequestHeadersFixture.cs", label="var rawHeaders =\r\n                new Dictionary<string, IEnumerable<string>> { { ''Content-Length'', new[] { ''12345'' } } }", span="1614-1615"];
m12_706 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_content_length_if_assigned_zero()", file="RequestHeadersFixture.cs", label="var headers =\r\n                new RequestHeaders(rawHeaders) { ContentLength = 0 }", span="1617-1618"];
m12_707 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_content_length_if_assigned_zero()", file="RequestHeadersFixture.cs", label="var values = headers.Keys", span="1621-1621"];
m12_708 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_content_length_if_assigned_zero()", file="RequestHeadersFixture.cs", label="values.Contains(''Content-Length'').ShouldBeFalse()", span="1624-1624"];
m12_709 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_content_length_if_assigned_zero()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_content_length_if_assigned_zero()", span="1611-1611"];
m12_654 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_accept_language_if_assigned_null()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_accept_language_if_assigned_null()", span="1469-1469"];
m12_655 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_accept_language_if_assigned_null()", file="RequestHeadersFixture.cs", label="var rawHeaders =\r\n                new Dictionary<string, IEnumerable<string>> { { ''Accept-Language'', new[] { ''en-US'' } } }", span="1472-1473"];
m12_656 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_accept_language_if_assigned_null()", file="RequestHeadersFixture.cs", label="var headers =\r\n                new RequestHeaders(rawHeaders) { AcceptLanguage = null }", span="1475-1476"];
m12_657 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_accept_language_if_assigned_null()", file="RequestHeadersFixture.cs", label="var values = headers.Keys", span="1479-1479"];
m12_658 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_accept_language_if_assigned_null()", file="RequestHeadersFixture.cs", label="values.Contains(''Accept-Language'').ShouldBeFalse()", span="1482-1482"];
m12_659 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_accept_language_if_assigned_null()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_accept_language_if_assigned_null()", span="1469-1469"];
m12_375 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.ValidateCookie(Nancy.Cookies.INancyCookie, string, string)", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.ValidateCookie(Nancy.Cookies.INancyCookie, string, string)", span="2043-2043"];
m12_864 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.ValidateCookie(Nancy.Cookies.INancyCookie, string, string)", file="RequestHeadersFixture.cs", label="cookie.Name.ShouldEqual(name)", span="2045-2045"];
m12_865 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.ValidateCookie(Nancy.Cookies.INancyCookie, string, string)", file="RequestHeadersFixture.cs", label="cookie.Value.ShouldEqual(value)", span="2046-2046"];
m12_866 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.ValidateCookie(Nancy.Cookies.INancyCookie, string, string)", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.ValidateCookie(Nancy.Cookies.INancyCookie, string, string)", span="2043-2043"];
m12_841 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_user_agent_to_be_overwritten()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_user_agent_to_be_overwritten()", span="1993-1993"];
m12_842 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_user_agent_to_be_overwritten()", file="RequestHeadersFixture.cs", label="string expectedValue = ''Mozilla/5.0 (Windows NT 6.1; WOW64; rv:15.0) Gecko/20120427 Firefox/15.0a1''", span="1996-1996"];
m12_843 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_user_agent_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var rawHeaders =\r\n                new Dictionary<string, IEnumerable<string>> { { ''User-Agent'', new[] { ''Mozilla/5.0 (Windows NT 5.1) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/14.0.815.0 Safari/535.1'' } } }", span="1998-1999"];
m12_844 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_user_agent_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var headers =\r\n                new RequestHeaders(rawHeaders) { UserAgent = expectedValue }", span="2001-2002"];
m12_846 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_user_agent_to_be_overwritten()", file="RequestHeadersFixture.cs", label="values.ShouldEqual(expectedValue)", span="2008-2008"];
m12_845 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_user_agent_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var values = headers.UserAgent", span="2005-2005"];
m12_847 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_user_agent_to_be_overwritten()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_user_agent_to_be_overwritten()", span="1993-1993"];
m12_203 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_language_header_values_when_containing_multiple_values()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_language_header_values_when_containing_multiple_values()", span="408-408"];
m12_204 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_language_header_values_when_containing_multiple_values()", file="RequestHeadersFixture.cs", label="var values = new[] { ''en-US, sv-SE'' }", span="411-411"];
m12_205 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_language_header_values_when_containing_multiple_values()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { ''Accept-Language'', values } }", span="412-412"];
m12_206 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_language_header_values_when_containing_multiple_values()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders).AcceptLanguage.ToList()", span="415-415"];
m12_207 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_language_header_values_when_containing_multiple_values()", color=red, community=0, file="RequestHeadersFixture.cs", label="2: headers.Count.ShouldEqual(2)", span="418-418"];
m12_208 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_language_header_values_when_containing_multiple_values()", file="RequestHeadersFixture.cs", label="headers[0].Item1.ShouldEqual(''en-US'')", span="419-419"];
m12_209 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_language_header_values_when_containing_multiple_values()", file="RequestHeadersFixture.cs", label="headers[1].Item1.ShouldEqual(''sv-SE'')", span="420-420"];
m12_210 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_language_header_values_when_containing_multiple_values()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_language_header_values_when_containing_multiple_values()", span="408-408"];
m12_395 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_host_headers_when_available()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_return_host_headers_when_available()", span="838-838"];
m12_396 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_host_headers_when_available()", file="RequestHeadersFixture.cs", label="var expectedValues = new[] { ''en.wikipedia.org'' }", span="841-841"];
m12_397 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_host_headers_when_available()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { ''Host'', expectedValues } }", span="842-842"];
m12_399 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_host_headers_when_available()", file="RequestHeadersFixture.cs", label="headers.Host.ShouldBeSameAs(expectedValues[0])", span="848-848"];
m12_398 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_host_headers_when_available()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="845-845"];
m12_400 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_host_headers_when_available()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_return_host_headers_when_available()", span="838-838"];
m12_457 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_ifnonematch_headers_are_not_available()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_ifnonematch_headers_are_not_available()", span="986-986"];
m12_458 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_ifnonematch_headers_are_not_available()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>>()", span="989-989"];
m12_459 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_ifnonematch_headers_are_not_available()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="992-992"];
m12_460 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_ifnonematch_headers_are_not_available()", file="RequestHeadersFixture.cs", label="headers.IfNoneMatch.ShouldHaveCount(0)", span="995-995"];
m12_461 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_ifnonematch_headers_are_not_available()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_ifnonematch_headers_are_not_available()", span="986-986"];
m12_710 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_content_type_to_be_overwritten()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_content_type_to_be_overwritten()", span="1628-1628"];
m12_711 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_content_type_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var rawHeaders =\r\n                new Dictionary<string, IEnumerable<string>> { { ''Content-Type'', new[] { ''application/json'' } } }", span="1631-1632"];
m12_712 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_content_type_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var headers =\r\n                new RequestHeaders(rawHeaders) { ContentType = ''text/html'' }", span="1634-1635"];
m12_713 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_content_type_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var values = headers.ContentType", span="1638-1638"];
m12_714 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_content_type_to_be_overwritten()", file="RequestHeadersFixture.cs", label="values.ShouldEqual(''text/html'')", span="1641-1641"];
m12_715 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_content_type_to_be_overwritten()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_content_type_to_be_overwritten()", span="1628-1628"];
m12_815 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_max_forwards_to_be_overwritten()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_max_forwards_to_be_overwritten()", span="1921-1921"];
m12_816 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_max_forwards_to_be_overwritten()", file="RequestHeadersFixture.cs", label="int expectedValue = 10", span="1924-1924"];
m12_817 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_max_forwards_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var rawHeaders =\r\n                new Dictionary<string, IEnumerable<string>> { { ''Max-Forwards'', new[] { ''3'' } } }", span="1926-1927"];
m12_818 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_max_forwards_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var headers =\r\n                new RequestHeaders(rawHeaders) { MaxForwards = expectedValue }", span="1929-1930"];
m12_820 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_max_forwards_to_be_overwritten()", file="RequestHeadersFixture.cs", label="values.ShouldEqual(expectedValue)", span="1936-1936"];
m12_819 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_max_forwards_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var values = headers.MaxForwards", span="1933-1933"];
m12_821 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_max_forwards_to_be_overwritten()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_max_forwards_to_be_overwritten()", span="1921-1921"];
m12_390 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_string_when_host_headers_are_not_available()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_string_when_host_headers_are_not_available()", span="825-825"];
m12_391 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_string_when_host_headers_are_not_available()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>>()", span="828-828"];
m12_392 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_string_when_host_headers_are_not_available()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="831-831"];
m12_393 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_string_when_host_headers_are_not_available()", file="RequestHeadersFixture.cs", label="headers.Host.ShouldBeEmpty()", span="834-834"];
m12_394 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_string_when_host_headers_are_not_available()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_string_when_host_headers_are_not_available()", span="825-825"];
m12_624 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_accept_charset_if_assigned_null()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_accept_charset_if_assigned_null()", span="1387-1387"];
m12_625 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_accept_charset_if_assigned_null()", file="RequestHeadersFixture.cs", label="var rawHeaders =\r\n                new Dictionary<string, IEnumerable<string>> { { ''Accept-Charset'', new[] { ''iso-8859-5'' } } }", span="1390-1391"];
m12_626 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_accept_charset_if_assigned_null()", file="RequestHeadersFixture.cs", label="var headers =\r\n                new RequestHeaders(rawHeaders) { AcceptCharset = null }", span="1393-1394"];
m12_627 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_accept_charset_if_assigned_null()", file="RequestHeadersFixture.cs", label="var values = headers.Keys", span="1397-1397"];
m12_628 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_accept_charset_if_assigned_null()", file="RequestHeadersFixture.cs", label="values.Contains(''Accept-Charset'').ShouldBeFalse()", span="1400-1400"];
m12_629 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_accept_charset_if_assigned_null()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_accept_charset_if_assigned_null()", span="1387-1387"];
m12_154 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_accept_charset_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_accept_charset_header_name_when_retrieving_values(string)", span="301-301"];
m12_155 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_accept_charset_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var expectedValues = new[] { ''utf-8'', ''iso-8859-5'' }", span="304-304"];
m12_156 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_accept_charset_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { headerName, expectedValues } }", span="305-305"];
m12_157 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_accept_charset_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders).AcceptCharset.ToList()", span="308-308"];
m12_158 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_accept_charset_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="headers[0].Item1.ShouldEqual(''utf-8'')", span="311-311"];
m12_159 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_accept_charset_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="headers[1].Item1.ShouldEqual(''iso-8859-5'')", span="312-312"];
m12_160 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_accept_charset_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_accept_charset_header_name_when_retrieving_values(string)", span="301-301"];
m12_535 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_maxforwards_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_maxforwards_header_name_when_retrieving_values(string)", span="1176-1176"];
m12_536 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_maxforwards_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var expectedValues = new[] { ''12'' }", span="1179-1179"];
m12_537 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_maxforwards_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { headerName, expectedValues } }", span="1180-1180"];
m12_538 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_maxforwards_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="1183-1183"];
m12_539 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_maxforwards_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="headers.MaxForwards.ShouldEqual(12)", span="1186-1186"];
m12_540 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_maxforwards_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_maxforwards_header_name_when_retrieving_values(string)", span="1176-1176"];
m12_802 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_if_unmodified_since_to_be_overwritten()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_if_unmodified_since_to_be_overwritten()", span="1884-1884"];
m12_803 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_if_unmodified_since_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var expectedValue =\r\n                new DateTime(2012, 12, 15, 8, 12, 31)", span="1887-1888"];
m12_804 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_if_unmodified_since_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var rawHeaders =\r\n                new Dictionary<string, IEnumerable<string>> { { ''If-Unmodified-Since'', new[] { ''Tue, 15 Nov 2011 08:12:31 GMT'' } } }", span="1890-1891"];
m12_805 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_if_unmodified_since_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var headers =\r\n                new RequestHeaders(rawHeaders) { IfUnmodifiedSince = expectedValue }", span="1893-1894"];
m12_807 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_if_unmodified_since_to_be_overwritten()", file="RequestHeadersFixture.cs", label="values.ShouldEqual(expectedValue)", span="1900-1900"];
m12_806 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_if_unmodified_since_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var values = headers.IfUnmodifiedSince", span="1897-1897"];
m12_808 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_if_unmodified_since_to_be_overwritten()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_if_unmodified_since_to_be_overwritten()", span="1884-1884"];
m12_614 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_accept_charset_headers_to_be_overwritten()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_accept_charset_headers_to_be_overwritten()", span="1362-1362"];
m12_615 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_accept_charset_headers_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var expectedValues = new[] {\r\n                new Tuple<string, decimal>(''utf-8'', 0.7m), \r\n                new Tuple<string, decimal>(''iso-8859-5'', 0.3m), \r\n            }", span="1365-1368"];
m12_616 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_accept_charset_headers_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var rawHeaders =\r\n                new Dictionary<string, IEnumerable<string>> { { ''Accept-Charset'', new[] { ''utf-7'' } } }", span="1370-1371"];
m12_617 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_accept_charset_headers_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var headers =\r\n                new RequestHeaders(rawHeaders) { AcceptCharset = expectedValues }", span="1373-1374"];
m12_618 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_accept_charset_headers_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var values = headers.AcceptCharset.ToList()", span="1377-1377"];
m12_619 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_accept_charset_headers_to_be_overwritten()", file="RequestHeadersFixture.cs", label="values[0].Item1.ShouldEqual(''utf-8'')", span="1380-1380"];
m12_620 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_accept_charset_headers_to_be_overwritten()", file="RequestHeadersFixture.cs", label="values[0].Item2.ShouldEqual(0.7m)", span="1381-1381"];
m12_621 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_accept_charset_headers_to_be_overwritten()", file="RequestHeadersFixture.cs", label="values[1].Item1.ShouldEqual(''iso-8859-5'')", span="1382-1382"];
m12_622 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_accept_charset_headers_to_be_overwritten()", file="RequestHeadersFixture.cs", label="values[1].Item2.ShouldEqual(0.3m)", span="1383-1383"];
m12_623 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_accept_charset_headers_to_be_overwritten()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_accept_charset_headers_to_be_overwritten()", span="1362-1362"];
m12_468 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_ifnonematch_header_values_when_containing_multiple_values()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_ifnonematch_header_values_when_containing_multiple_values()", span="1013-1013"];
m12_469 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_ifnonematch_header_values_when_containing_multiple_values()", file="RequestHeadersFixture.cs", label="var values = new[] { ''xyzzy'', ''c3piozzzz'' }", span="1016-1016"];
m12_470 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_ifnonematch_header_values_when_containing_multiple_values()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { ''If-None-Match'', values } }", span="1017-1017"];
m12_471 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_ifnonematch_header_values_when_containing_multiple_values()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders).IfNoneMatch.ToList()", span="1020-1020"];
m12_472 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_ifnonematch_header_values_when_containing_multiple_values()", color=red, community=0, file="RequestHeadersFixture.cs", label="2: headers.Count.ShouldEqual(2)", span="1023-1023"];
m12_473 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_ifnonematch_header_values_when_containing_multiple_values()", file="RequestHeadersFixture.cs", label="headers[0].ShouldEqual(''xyzzy'')", span="1024-1024"];
m12_474 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_ifnonematch_header_values_when_containing_multiple_values()", file="RequestHeadersFixture.cs", label="headers[1].ShouldEqual(''c3piozzzz'')", span="1025-1025"];
m12_475 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_ifnonematch_header_values_when_containing_multiple_values()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_ifnonematch_header_values_when_containing_multiple_values()", span="1013-1013"];
m12_783 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_if_none_match_if_assigned_null()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_if_none_match_if_assigned_null()", span="1831-1831"];
m12_784 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_if_none_match_if_assigned_null()", file="RequestHeadersFixture.cs", label="var rawHeaders =\r\n                new Dictionary<string, IEnumerable<string>> { { ''If-None-Match'', new[] { ''fsdfsd'' } } }", span="1834-1835"];
m12_785 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_if_none_match_if_assigned_null()", file="RequestHeadersFixture.cs", label="var headers =\r\n                new RequestHeaders(rawHeaders) { IfNoneMatch = null }", span="1837-1838"];
m12_786 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_if_none_match_if_assigned_null()", file="RequestHeadersFixture.cs", label="var values = headers.Keys", span="1841-1841"];
m12_787 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_if_none_match_if_assigned_null()", file="RequestHeadersFixture.cs", label="values.Contains(''If-None-Match'').ShouldBeFalse()", span="1844-1844"];
m12_788 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_if_none_match_if_assigned_null()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_if_none_match_if_assigned_null()", span="1831-1831"];
m12_432 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_null_when_ifmodifiedsince_headers_are_not_available()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_return_null_when_ifmodifiedsince_headers_are_not_available()", span="927-927"];
m12_433 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_null_when_ifmodifiedsince_headers_are_not_available()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>>()", span="930-930"];
m12_434 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_null_when_ifmodifiedsince_headers_are_not_available()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="933-933"];
m12_435 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_null_when_ifmodifiedsince_headers_are_not_available()", file="RequestHeadersFixture.cs", label="headers.IfModifiedSince.ShouldBeNull()", span="936-936"];
m12_436 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_null_when_ifmodifiedsince_headers_are_not_available()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_return_null_when_ifmodifiedsince_headers_are_not_available()", span="927-927"];
m12_331 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_content_type_header_when_available()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_return_content_type_header_when_available()", span="690-690"];
m12_332 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_content_type_header_when_available()", file="RequestHeadersFixture.cs", label="var expectedValues = new[] { ''text/ninja'' }", span="693-693"];
m12_333 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_content_type_header_when_available()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { ''Content-Type'', expectedValues } }", span="694-694"];
m12_334 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_content_type_header_when_available()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="697-697"];
m12_335 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_content_type_header_when_available()", file="RequestHeadersFixture.cs", label="headers.ContentType.ShouldEqual(''text/ninja'')", span="700-700"];
m12_336 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_content_type_header_when_available()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_return_content_type_header_when_available()", span="690-690"];
m12_401 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_host_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_host_header_name_when_retrieving_values(string)", span="854-854"];
m12_402 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_host_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var expectedValues = new[] { ''en.wikipedia.org'' }", span="857-857"];
m12_403 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_host_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { headerName, expectedValues } }", span="858-858"];
m12_405 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_host_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="headers.Host.ShouldBeSameAs(expectedValues[0])", span="864-864"];
m12_404 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_host_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="861-861"];
m12_406 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_host_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_host_header_name_when_retrieving_values(string)", span="854-854"];
m12_166 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_accept_encoding_headers_when_available()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_return_accept_encoding_headers_when_available()", span="329-329"];
m12_167 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_accept_encoding_headers_when_available()", file="RequestHeadersFixture.cs", label="var expectedValues = new[] { ''compress'', ''sdch'' }", span="332-332"];
m12_168 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_accept_encoding_headers_when_available()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { ''Accept-Encoding'', expectedValues } }", span="333-333"];
m12_169 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_accept_encoding_headers_when_available()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders).AcceptEncoding.ToList()", span="336-336"];
m12_170 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_accept_encoding_headers_when_available()", color=red, community=0, file="RequestHeadersFixture.cs", label="2: headers.Count.ShouldEqual(2)", span="339-339"];
m12_171 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_accept_encoding_headers_when_available()", file="RequestHeadersFixture.cs", label="headers[0].ShouldEqual(''compress'')", span="340-340"];
m12_172 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_accept_encoding_headers_when_available()", file="RequestHeadersFixture.cs", label="headers[1].ShouldEqual(''sdch'')", span="341-341"];
m12_173 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_accept_encoding_headers_when_available()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_return_accept_encoding_headers_when_available()", span="329-329"];
m12_256 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_string_when_authorization_headers_are_not_available()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_string_when_authorization_headers_are_not_available()", span="505-505"];
m12_257 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_string_when_authorization_headers_are_not_available()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>>()", span="508-508"];
m12_258 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_string_when_authorization_headers_are_not_available()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="511-511"];
m12_259 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_string_when_authorization_headers_are_not_available()", file="RequestHeadersFixture.cs", label="headers.Authorization.ShouldBeEmpty()", span="514-514"];
m12_260 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_string_when_authorization_headers_are_not_available()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_string_when_authorization_headers_are_not_available()", span="505-505"];
m12_115 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_charset_header_value_quality_when_available()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_charset_header_value_quality_when_available()", span="234-234"];
m12_116 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_charset_header_value_quality_when_available()", file="RequestHeadersFixture.cs", label="var values = new[] { ''utf-8;q=0.3'' }", span="237-237"];
m12_117 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_charset_header_value_quality_when_available()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { ''Accept-Charset'', values } }", span="238-238"];
m12_118 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_charset_header_value_quality_when_available()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders).AcceptCharset.ToList()", span="241-241"];
m12_119 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_charset_header_value_quality_when_available()", color=red, community=0, file="RequestHeadersFixture.cs", label="2: headers.Count.ShouldEqual(1)", span="244-244"];
m12_120 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_charset_header_value_quality_when_available()", file="RequestHeadersFixture.cs", label="headers[0].Item1.ShouldEqual(''utf-8'')", span="245-245"];
m12_121 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_charset_header_value_quality_when_available()", file="RequestHeadersFixture.cs", label="headers[0].Item2.ShouldEqual(0.3m)", span="246-246"];
m12_122 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_charset_header_value_quality_when_available()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_charset_header_value_quality_when_available()", span="234-234"];
m12_161 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_accept_encoding_headers_are_not_available()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_accept_encoding_headers_are_not_available()", span="316-316"];
m12_162 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_accept_encoding_headers_are_not_available()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>>()", span="319-319"];
m12_163 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_accept_encoding_headers_are_not_available()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="322-322"];
m12_164 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_accept_encoding_headers_are_not_available()", file="RequestHeadersFixture.cs", label="headers.AcceptEncoding.ShouldHaveCount(0)", span="325-325"];
m12_165 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_accept_encoding_headers_are_not_available()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_accept_encoding_headers_are_not_available()", span="316-316"];
m12_99 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_accept_charset_headers_when_available()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_return_accept_charset_headers_when_available()", span="202-202"];
m12_100 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_accept_charset_headers_when_available()", file="RequestHeadersFixture.cs", label="var expectedValues = new[] { ''utf-8'', ''iso-8859-5'' }", span="205-205"];
m12_101 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_accept_charset_headers_when_available()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { ''Accept-Charset'', expectedValues } }", span="206-206"];
m12_102 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_accept_charset_headers_when_available()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders).AcceptCharset.ToList()", span="209-209"];
m12_103 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_accept_charset_headers_when_available()", color=red, community=0, file="RequestHeadersFixture.cs", label="2: headers.Count.ShouldEqual(2)", span="212-212"];
m12_104 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_accept_charset_headers_when_available()", file="RequestHeadersFixture.cs", label="headers[0].Item1.ShouldEqual(''utf-8'')", span="213-213"];
m12_105 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_accept_charset_headers_when_available()", file="RequestHeadersFixture.cs", label="headers[1].Item1.ShouldEqual(''iso-8859-5'')", span="214-214"];
m12_106 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_accept_charset_headers_when_available()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_return_accept_charset_headers_when_available()", span="202-202"];
m12_437 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_ifmodifiedsince_when_available()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_return_ifmodifiedsince_when_available()", span="940-940"];
m12_438 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_ifmodifiedsince_when_available()", file="RequestHeadersFixture.cs", label="var expectedDate = new DateTime(2011, 11, 15, 8, 12, 31)", span="943-943"];
m12_439 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_ifmodifiedsince_when_available()", file="RequestHeadersFixture.cs", label="var expectedValues = new[] { ''Tue, 15 Nov 2011 08:12:31 GMT'' }", span="944-944"];
m12_442 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_ifmodifiedsince_when_available()", file="RequestHeadersFixture.cs", label="headers.IfModifiedSince.ShouldEqual(expectedDate)", span="951-951"];
m12_440 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_ifmodifiedsince_when_available()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { ''If-Modified-Since'', expectedValues } }", span="945-945"];
m12_441 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_ifmodifiedsince_when_available()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="948-948"];
m12_443 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_ifmodifiedsince_when_available()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_return_ifmodifiedsince_when_available()", span="940-940"];
m12_595 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_accept_headers_to_be_overwritten()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_accept_headers_to_be_overwritten()", span="1320-1320"];
m12_596 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_accept_headers_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var expectedValues = new[] {\r\n                new Tuple<string, decimal>(''text/plain'', 0.8m), \r\n                new Tuple<string, decimal>(''text/ninja'', 0.5m), \r\n            }", span="1323-1326"];
m12_597 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_accept_headers_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var rawHeaders = \r\n                new Dictionary<string, IEnumerable<string>> { { ''Accept'', new [] { ''initial value'' } } }", span="1328-1329"];
m12_598 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_accept_headers_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var headers = \r\n                new RequestHeaders(rawHeaders) {Accept = expectedValues}", span="1331-1332"];
m12_599 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_accept_headers_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var values = headers.Accept.ToList()", span="1335-1335"];
m12_600 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_accept_headers_to_be_overwritten()", file="RequestHeadersFixture.cs", label="values[0].Item1.ShouldEqual(''text/plain'')", span="1338-1338"];
m12_601 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_accept_headers_to_be_overwritten()", file="RequestHeadersFixture.cs", label="values[0].Item2.ShouldEqual(0.8m)", span="1339-1339"];
m12_602 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_accept_headers_to_be_overwritten()", file="RequestHeadersFixture.cs", label="values[1].Item1.ShouldEqual(''text/ninja'')", span="1340-1340"];
m12_603 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_accept_headers_to_be_overwritten()", file="RequestHeadersFixture.cs", label="values[1].Item2.ShouldEqual(0.5m)", span="1341-1341"];
m12_604 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_accept_headers_to_be_overwritten()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_accept_headers_to_be_overwritten()", span="1320-1320"];
m12_320 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_content_length_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_content_length_header_name_when_retrieving_values(string)", span="663-663"];
m12_321 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_content_length_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var expectedValues = new[] { ''12345'' }", span="666-666"];
m12_322 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_content_length_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { headerName, expectedValues } }", span="667-667"];
m12_323 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_content_length_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="670-670"];
m12_324 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_content_length_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="headers.ContentLength.ShouldEqual(12345L)", span="673-673"];
m12_325 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_content_length_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_content_length_header_name_when_retrieving_values(string)", span="663-663"];
m12_227 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_accept_language_header_values_with_invalid_quality()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_accept_language_header_values_with_invalid_quality()", span="456-456"];
m12_228 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_accept_language_header_values_with_invalid_quality()", file="RequestHeadersFixture.cs", label="var values = new[] { ''en-US, sv-SE;q=a'' }", span="459-459"];
m12_229 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_accept_language_header_values_with_invalid_quality()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { ''Accept-Language'', values } }", span="460-460"];
m12_230 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_accept_language_header_values_with_invalid_quality()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders).AcceptLanguage.ToList()", span="463-463"];
m12_231 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_accept_language_header_values_with_invalid_quality()", color=red, community=0, file="RequestHeadersFixture.cs", label="0: headers.Count.ShouldEqual(2)", span="466-466"];
m12_232 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_accept_language_header_values_with_invalid_quality()", color=red, community=0, file="RequestHeadersFixture.cs", label="0: headers.FirstOrDefault(t => t.Item1 == ''en-US'' && t.Item2 == 1.0m).ShouldNotBeNull()", span="467-467"];
m12_233 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_accept_language_header_values_with_invalid_quality()", color=red, community=0, file="RequestHeadersFixture.cs", label="0: headers.FirstOrDefault(t => t.Item1 == ''sv-SE'' && t.Item2 == 1.0m).ShouldNotBeNull()", span="468-468"];
m12_234 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_accept_language_header_values_with_invalid_quality()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_accept_language_header_values_with_invalid_quality()", span="456-456"];
m12_14 [cluster="object.ShouldEqual(object)", file="RequestHeadersFixture.cs", label="Entry object.ShouldEqual(object)", span="95-95"];
m12_412 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_ifmatch_headers_when_available()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_return_ifmatch_headers_when_available()", span="881-881"];
m12_413 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_ifmatch_headers_when_available()", file="RequestHeadersFixture.cs", label="var expectedValues = new[] { ''xyzzy'', ''c3piozzzz'' }", span="884-884"];
m12_414 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_ifmatch_headers_when_available()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { ''If-Match'', expectedValues } }", span="885-885"];
m12_416 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_ifmatch_headers_when_available()", file="RequestHeadersFixture.cs", label="headers.IfMatch.ShouldBeSameAs(expectedValues)", span="891-891"];
m12_415 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_ifmatch_headers_when_available()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="888-888"];
m12_417 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_ifmatch_headers_when_available()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_return_ifmatch_headers_when_available()", span="881-881"];
m12_297 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_connection_headers_when_available()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_return_connection_headers_when_available()", span="604-604"];
m12_298 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_connection_headers_when_available()", file="RequestHeadersFixture.cs", label="var expectedValues = new[] { ''closed'' }", span="607-607"];
m12_299 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_connection_headers_when_available()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { ''Connection'', expectedValues } }", span="608-608"];
m12_301 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_connection_headers_when_available()", file="RequestHeadersFixture.cs", label="headers.Connection.ShouldBeSameAs(expectedValues[0])", span="614-614"];
m12_300 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_connection_headers_when_available()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="611-611"];
m12_302 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_connection_headers_when_available()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_return_connection_headers_when_available()", span="604-604"];
m12_71 [cluster="Unk.ShouldNotBeNull", file="RequestHeadersFixture.cs", label="Entry Unk.ShouldNotBeNull", span=""];
m12_613 [cluster="bool.ShouldBeFalse()", file="RequestHeadersFixture.cs", label="Entry bool.ShouldBeFalse()", span="90-90"];
m12_363 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_cookie_headers_are_not_available()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_cookie_headers_are_not_available()", span="763-763"];
m12_364 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_cookie_headers_are_not_available()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>>()", span="766-766"];
m12_365 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_cookie_headers_are_not_available()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="769-769"];
m12_366 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_cookie_headers_are_not_available()", file="RequestHeadersFixture.cs", label="headers.Cookie.ShouldHaveCount(0)", span="772-772"];
m12_367 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_cookie_headers_are_not_available()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_enumerable_when_cookie_headers_are_not_available()", span="763-763"];
m12_383 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_date_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_date_header_name_when_retrieving_values(string)", span="810-810"];
m12_384 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_date_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var expectedDate = new DateTime(2011, 11, 15, 8, 12, 31)", span="813-813"];
m12_386 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_date_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { headerName, expectedValues } }", span="815-815"];
m12_385 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_date_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var expectedValues = new[] { ''Tue, 15 Nov 2011 08:12:31 GMT'' }", span="814-814"];
m12_388 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_date_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="headers.Date.ShouldEqual(expectedDate)", span="821-821"];
m12_387 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_date_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="818-818"];
m12_389 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_date_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_date_header_name_when_retrieving_values(string)", span="810-810"];
m12_716 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_content_type_if_assigned_null()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_content_type_if_assigned_null()", span="1645-1645"];
m12_717 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_content_type_if_assigned_null()", file="RequestHeadersFixture.cs", label="var rawHeaders =\r\n                new Dictionary<string, IEnumerable<string>> { { ''Content-Type'', new[] { ''text/plain'' } } }", span="1648-1649"];
m12_718 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_content_type_if_assigned_null()", file="RequestHeadersFixture.cs", label="var headers =\r\n                new RequestHeaders(rawHeaders) { ContentType = null }", span="1651-1652"];
m12_719 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_content_type_if_assigned_null()", file="RequestHeadersFixture.cs", label="var values = headers.Keys", span="1655-1655"];
m12_720 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_content_type_if_assigned_null()", file="RequestHeadersFixture.cs", label="values.Contains(''Content-Type'').ShouldBeFalse()", span="1658-1658"];
m12_721 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_content_type_if_assigned_null()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_content_type_if_assigned_null()", span="1645-1645"];
m12_644 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_accept_language_headers_to_be_overwritten()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_accept_language_headers_to_be_overwritten()", span="1444-1444"];
m12_645 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_accept_language_headers_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var expectedValues = new[] {\r\n                new Tuple<string, decimal>(''en-US'', 0.7m), \r\n                new Tuple<string, decimal>(''sv-SE'', 0.3m)\r\n            }", span="1447-1450"];
m12_646 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_accept_language_headers_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var rawHeaders =\r\n                new Dictionary<string, IEnumerable<string>> { { ''Accept-Language'', new[] { ''da'' } } }", span="1452-1453"];
m12_647 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_accept_language_headers_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var headers =\r\n                new RequestHeaders(rawHeaders) { AcceptLanguage = expectedValues }", span="1455-1456"];
m12_648 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_accept_language_headers_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var values = headers.AcceptLanguage.ToList()", span="1459-1459"];
m12_649 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_accept_language_headers_to_be_overwritten()", file="RequestHeadersFixture.cs", label="values[0].Item1.ShouldEqual(''en-US'')", span="1462-1462"];
m12_650 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_accept_language_headers_to_be_overwritten()", file="RequestHeadersFixture.cs", label="values[0].Item2.ShouldEqual(0.7m)", span="1463-1463"];
m12_651 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_accept_language_headers_to_be_overwritten()", file="RequestHeadersFixture.cs", label="values[1].Item1.ShouldEqual(''sv-SE'')", span="1464-1464"];
m12_652 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_accept_language_headers_to_be_overwritten()", file="RequestHeadersFixture.cs", label="values[1].Item2.ShouldEqual(0.3m)", span="1465-1465"];
m12_653 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_accept_language_headers_to_be_overwritten()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_accept_language_headers_to_be_overwritten()", span="1444-1444"];
m12_174 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_encoding_header_values_when_containing_multiple_values()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_encoding_header_values_when_containing_multiple_values()", span="345-345"];
m12_175 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_encoding_header_values_when_containing_multiple_values()", file="RequestHeadersFixture.cs", label="var values = new[] { ''compress, sdch'' }", span="348-348"];
m12_176 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_encoding_header_values_when_containing_multiple_values()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { ''Accept-Encoding'', values } }", span="349-349"];
m12_177 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_encoding_header_values_when_containing_multiple_values()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders).AcceptEncoding.ToList()", span="352-352"];
m12_178 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_encoding_header_values_when_containing_multiple_values()", color=red, community=0, file="RequestHeadersFixture.cs", label="0: headers.Count.ShouldEqual(2)", span="355-355"];
m12_179 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_encoding_header_values_when_containing_multiple_values()", file="RequestHeadersFixture.cs", label="headers[0].ShouldEqual(''compress'')", span="356-356"];
m12_180 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_encoding_header_values_when_containing_multiple_values()", file="RequestHeadersFixture.cs", label="headers[1].ShouldEqual(''sdch'')", span="357-357"];
m12_181 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_encoding_header_values_when_containing_multiple_values()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_encoding_header_values_when_containing_multiple_values()", span="345-345"];
m12_426 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_ifmatch_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_ifmatch_header_name_when_retrieving_values(string)", span="913-913"];
m12_427 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_ifmatch_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var expectedValues = new[] { ''xyzzy'', ''c3piozzzz'' }", span="916-916"];
m12_428 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_ifmatch_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { headerName, expectedValues } }", span="917-917"];
m12_430 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_ifmatch_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="headers.IfMatch.ShouldBeSameAs(expectedValues)", span="923-923"];
m12_429 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_ifmatch_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="920-920"];
m12_431 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_ifmatch_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_ifmatch_header_name_when_retrieving_values(string)", span="913-913"];
m12_269 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_authorization_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_authorization_header_name_when_retrieving_values(string)", span="534-534"];
m12_270 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_authorization_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var expectedValues = new[] { ''Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ=='' }", span="537-537"];
m12_271 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_authorization_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { headerName, expectedValues } }", span="538-538"];
m12_273 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_authorization_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="headers.Authorization.ShouldBeSameAs(expectedValues[0])", span="544-544"];
m12_272 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_authorization_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="541-541"];
m12_274 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_authorization_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_authorization_header_name_when_retrieving_values(string)", span="534-534"];
m12_376 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_cookie_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_cookie_header_name_when_retrieving_values(string)", span="793-793"];
m12_377 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_cookie_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var expectedValues = new[] { ''foo=bar'', ''name=value'' }", span="796-796"];
m12_378 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_cookie_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { headerName, expectedValues } }", span="797-797"];
m12_379 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_cookie_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="800-800"];
m12_380 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_cookie_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="ValidateCookie(headers.Cookie.First(), ''foo'', ''bar'')", span="803-803"];
m12_381 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_cookie_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="ValidateCookie(headers.Cookie.Last(), ''name'', ''value'')", span="804-804"];
m12_382 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_cookie_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_cookie_header_name_when_retrieving_values(string)", span="793-793"];
m12_563 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_useragent_headers_when_available()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_return_useragent_headers_when_available()", span="1246-1246"];
m12_564 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_useragent_headers_when_available()", file="RequestHeadersFixture.cs", label="var expectedValues = new[] { ''Mozilla/5.0 (Windows NT 5.1) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/14.0.815.0 Safari/535.1'' }", span="1249-1249"];
m12_565 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_useragent_headers_when_available()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { ''User-Agent'', expectedValues } }", span="1250-1250"];
m12_567 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_useragent_headers_when_available()", file="RequestHeadersFixture.cs", label="headers.UserAgent.ShouldBeSameAs(expectedValues[0])", span="1256-1256"];
m12_566 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_useragent_headers_when_available()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="1253-1253"];
m12_568 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_useragent_headers_when_available()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_return_useragent_headers_when_available()", span="1246-1246"];
m12_524 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_zero_when_maxforwards_headers_are_not_available()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_return_zero_when_maxforwards_headers_are_not_available()", span="1147-1147"];
m12_525 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_zero_when_maxforwards_headers_are_not_available()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>>()", span="1150-1150"];
m12_526 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_zero_when_maxforwards_headers_are_not_available()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="1153-1153"];
m12_527 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_zero_when_maxforwards_headers_are_not_available()", file="RequestHeadersFixture.cs", label="headers.MaxForwards.ShouldEqual(0)", span="1156-1156"];
m12_528 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_zero_when_maxforwards_headers_are_not_available()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_return_zero_when_maxforwards_headers_are_not_available()", span="1147-1147"];
m12_11 [cluster="Nancy.RequestHeaders.RequestHeaders(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="RequestHeadersFixture.cs", label="Entry Nancy.RequestHeaders.RequestHeaders(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", span="21-21"];
m12_660 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_accept_authorization_to_be_overwritten()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_accept_authorization_to_be_overwritten()", span="1486-1486"];
m12_661 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_accept_authorization_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var rawHeaders =\r\n                new Dictionary<string, IEnumerable<string>> { { ''Authorization'', new[] { ''Basic 12345LDKJDFJDDSFDFvfdf=='' } } }", span="1489-1490"];
m12_662 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_accept_authorization_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var headers =\r\n                new RequestHeaders(rawHeaders) { Authorization = ''Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ=='' }", span="1492-1493"];
m12_663 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_accept_authorization_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var values = headers.Authorization", span="1496-1496"];
m12_664 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_accept_authorization_to_be_overwritten()", file="RequestHeadersFixture.cs", label="values.ShouldEqual(''Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ=='')", span="1499-1499"];
m12_665 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_accept_authorization_to_be_overwritten()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_accept_authorization_to_be_overwritten()", span="1486-1486"];
m12_250 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_accept_language_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_accept_language_header_name_when_retrieving_values(string)", span="491-491"];
m12_251 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_accept_language_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var expectedValues = new[] { ''en-US'', ''sv-SE'' }", span="494-494"];
m12_252 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_accept_language_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { headerName, expectedValues } }", span="495-495"];
m12_253 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_accept_language_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders).AcceptLanguage.ToList()", span="498-498"];
m12_254 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_accept_language_header_name_when_retrieving_values(string)", color=red, community=0, file="RequestHeadersFixture.cs", label="2: headers.Count.ShouldEqual(2)", span="501-501"];
m12_255 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_accept_language_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_accept_language_header_name_when_retrieving_values(string)", span="491-491"];
m12_859 [cluster="Unk.First", file="RequestHeadersFixture.cs", label="Entry Unk.First", span=""];
m12_686 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_connection_to_be_overwritten()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_connection_to_be_overwritten()", span="1560-1560"];
m12_687 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_connection_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var rawHeaders =\r\n                new Dictionary<string, IEnumerable<string>> { { ''Connection'', new[] { ''closed'' } } }", span="1563-1564"];
m12_688 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_connection_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var headers =\r\n                new RequestHeaders(rawHeaders) { Connection = ''keep-alive'' }", span="1566-1567"];
m12_689 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_connection_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var values = headers.Connection", span="1570-1570"];
m12_690 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_connection_to_be_overwritten()", file="RequestHeadersFixture.cs", label="values.ShouldEqual(''keep-alive'')", span="1573-1573"];
m12_691 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_connection_to_be_overwritten()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_connection_to_be_overwritten()", span="1560-1560"];
m12_517 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_ifunmodifiedsince_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_ifunmodifiedsince_header_name_when_retrieving_values(string)", span="1132-1132"];
m12_518 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_ifunmodifiedsince_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var expectedDate = new DateTime(2011, 11, 15, 8, 12, 31)", span="1135-1135"];
m12_520 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_ifunmodifiedsince_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { headerName, expectedValues } }", span="1137-1137"];
m12_519 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_ifunmodifiedsince_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var expectedValues = new[] { ''Tue, 15 Nov 2011 08:12:31 GMT'' }", span="1136-1136"];
m12_522 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_ifunmodifiedsince_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="headers.IfUnmodifiedSince.ShouldEqual(expectedDate)", span="1143-1143"];
m12_521 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_ifunmodifiedsince_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="1140-1140"];
m12_523 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_ifunmodifiedsince_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_ifunmodifiedsince_header_name_when_retrieving_values(string)", span="1132-1132"];
m12_337 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_content_type_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_content_type_header_name_when_retrieving_values(string)", span="706-706"];
m12_338 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_content_type_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var expectedValues = new[] { ''text/ninja'' }", span="709-709"];
m12_339 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_content_type_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { headerName, expectedValues } }", span="710-710"];
m12_340 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_content_type_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="713-713"];
m12_341 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_content_type_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="headers.ContentType.ShouldEqual(''text/ninja'')", span="716-716"];
m12_342 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_content_type_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_content_type_header_name_when_retrieving_values(string)", span="706-706"];
m12_638 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_accept_encoding_if_assigned_null()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_accept_encoding_if_assigned_null()", span="1427-1427"];
m12_639 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_accept_encoding_if_assigned_null()", file="RequestHeadersFixture.cs", label="var rawHeaders =\r\n                new Dictionary<string, IEnumerable<string>> { { ''Accept-Encoding'', new[] { ''compress'' } } }", span="1430-1431"];
m12_640 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_accept_encoding_if_assigned_null()", file="RequestHeadersFixture.cs", label="var headers =\r\n                new RequestHeaders(rawHeaders) { AcceptEncoding = null }", span="1433-1434"];
m12_641 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_accept_encoding_if_assigned_null()", file="RequestHeadersFixture.cs", label="var values = headers.Keys", span="1437-1437"];
m12_642 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_accept_encoding_if_assigned_null()", file="RequestHeadersFixture.cs", label="values.Contains(''Accept-Encoding'').ShouldBeFalse()", span="1440-1440"];
m12_643 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_accept_encoding_if_assigned_null()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_accept_encoding_if_assigned_null()", span="1427-1427"];
m12_756 [cluster="System.Collections.Generic.IEnumerable<T>.ShouldEqualSequence<T>(System.Collections.Generic.IEnumerable<T>)", file="RequestHeadersFixture.cs", label="Entry System.Collections.Generic.IEnumerable<T>.ShouldEqualSequence<T>(System.Collections.Generic.IEnumerable<T>)", span="110-110"];
m12_789 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_if_range_to_be_overwritten()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_if_range_to_be_overwritten()", span="1848-1848"];
m12_790 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_if_range_to_be_overwritten()", file="RequestHeadersFixture.cs", label="string expectedValue = ''737060cd8c284d8af7ad3082f209582d''", span="1851-1851"];
m12_791 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_if_range_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var rawHeaders =\r\n                new Dictionary<string, IEnumerable<string>> { { ''If-Range'', new[] { ''737060ed712v4d8af7ad3082f209582d'' } } }", span="1853-1854"];
m12_792 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_if_range_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var headers =\r\n                new RequestHeaders(rawHeaders) { IfRange = expectedValue }", span="1856-1857"];
m12_794 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_if_range_to_be_overwritten()", file="RequestHeadersFixture.cs", label="values.ShouldEqual(expectedValue)", span="1863-1863"];
m12_793 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_if_range_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var values = headers.IfRange", span="1860-1860"];
m12_795 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_if_range_to_be_overwritten()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_if_range_to_be_overwritten()", span="1848-1848"];
m12_54 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_default_accept_header_values_to_quality_one_if_not_explicitly_defined()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_default_accept_header_values_to_quality_one_if_not_explicitly_defined()", span="123-123"];
m12_55 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_default_accept_header_values_to_quality_one_if_not_explicitly_defined()", file="RequestHeadersFixture.cs", label="var values = new[] { ''text/plain'' }", span="126-126"];
m12_56 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_default_accept_header_values_to_quality_one_if_not_explicitly_defined()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { ''Accept'', values } }", span="127-127"];
m12_57 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_default_accept_header_values_to_quality_one_if_not_explicitly_defined()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders).Accept.ToList()", span="130-130"];
m12_58 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_default_accept_header_values_to_quality_one_if_not_explicitly_defined()", color=red, community=0, file="RequestHeadersFixture.cs", label="0: headers.Count.ShouldEqual(1)", span="133-133"];
m12_59 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_default_accept_header_values_to_quality_one_if_not_explicitly_defined()", file="RequestHeadersFixture.cs", label="headers[0].Item1.ShouldEqual(''text/plain'')", span="134-134"];
m12_60 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_default_accept_header_values_to_quality_one_if_not_explicitly_defined()", file="RequestHeadersFixture.cs", label="headers[0].Item2.ShouldEqual(1m)", span="135-135"];
m12_61 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_default_accept_header_values_to_quality_one_if_not_explicitly_defined()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_default_accept_header_values_to_quality_one_if_not_explicitly_defined()", span="123-123"];
m12_692 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_connection_if_assigned_null()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_connection_if_assigned_null()", span="1577-1577"];
m12_693 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_connection_if_assigned_null()", file="RequestHeadersFixture.cs", label="var rawHeaders =\r\n                new Dictionary<string, IEnumerable<string>> { { ''Connection'', new[] { ''text/plain'' } } }", span="1580-1581"];
m12_694 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_connection_if_assigned_null()", file="RequestHeadersFixture.cs", label="var headers =\r\n                new RequestHeaders(rawHeaders) { Connection = null }", span="1583-1584"];
m12_695 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_connection_if_assigned_null()", file="RequestHeadersFixture.cs", label="var values = headers.Keys", span="1587-1587"];
m12_696 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_connection_if_assigned_null()", file="RequestHeadersFixture.cs", label="values.Contains(''Connection'').ShouldBeFalse()", span="1590-1590"];
m12_697 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_connection_if_assigned_null()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_connection_if_assigned_null()", span="1577-1577"];
m12_0 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_all_header_values_when_values_are_retrieved()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_return_all_header_values_when_values_are_retrieved()", span="13-13"];
m12_1 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_all_header_values_when_values_are_retrieved()", file="RequestHeadersFixture.cs", label="var rawHeaders =\r\n                new Dictionary<string, IEnumerable<string>>\r\n                {\r\n                    {''accept'', new[] {''text/plain'', ''text/html''}},\r\n                    {''charset'', new[] {''utf-8''}}\r\n                }", span="16-21"];
m12_2 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_all_header_values_when_values_are_retrieved()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="23-23"];
m12_3 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_all_header_values_when_values_are_retrieved()", file="RequestHeadersFixture.cs", label="var values = headers.Values.ToList()", span="26-26"];
m12_4 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_all_header_values_when_values_are_retrieved()", color=red, community=0, file="RequestHeadersFixture.cs", label="0: values.Count().ShouldEqual(2)", span="29-29"];
m12_5 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_all_header_values_when_values_are_retrieved()", color=red, community=0, file="RequestHeadersFixture.cs", label="2: values.First().Count().ShouldEqual(2)", span="30-30"];
m12_6 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_all_header_values_when_values_are_retrieved()", file="RequestHeadersFixture.cs", label="values.First().First().ShouldEqual(''text/plain'')", span="31-31"];
m12_7 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_all_header_values_when_values_are_retrieved()", file="RequestHeadersFixture.cs", label="values.First().Last().ShouldEqual(''text/html'')", span="32-32"];
m12_8 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_all_header_values_when_values_are_retrieved()", file="RequestHeadersFixture.cs", label="values.Last().First().ShouldEqual(''utf-8'')", span="33-33"];
m12_9 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_all_header_values_when_values_are_retrieved()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_return_all_header_values_when_values_are_retrieved()", span="13-13"];
m12_541 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_string_when_referer_headers_are_not_available()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_string_when_referer_headers_are_not_available()", span="1190-1190"];
m12_542 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_string_when_referer_headers_are_not_available()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>>()", span="1193-1193"];
m12_543 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_string_when_referer_headers_are_not_available()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="1196-1196"];
m12_544 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_string_when_referer_headers_are_not_available()", file="RequestHeadersFixture.cs", label="headers.Referrer.ShouldBeEmpty()", span="1199-1199"];
m12_545 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_string_when_referer_headers_are_not_available()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_return_empty_string_when_referer_headers_are_not_available()", span="1190-1190"];
m12_796 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_if_range_if_assigned_null()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_if_range_if_assigned_null()", span="1867-1867"];
m12_797 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_if_range_if_assigned_null()", file="RequestHeadersFixture.cs", label="var rawHeaders =\r\n                new Dictionary<string, IEnumerable<string>> { { ''If-Range'', new[] { ''737060cd8c284d8af7ad3082f209582d'' } } }", span="1870-1871"];
m12_798 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_if_range_if_assigned_null()", file="RequestHeadersFixture.cs", label="var headers =\r\n                new RequestHeaders(rawHeaders) { IfRange = null }", span="1873-1874"];
m12_799 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_if_range_if_assigned_null()", file="RequestHeadersFixture.cs", label="var values = headers.Keys", span="1877-1877"];
m12_800 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_if_range_if_assigned_null()", file="RequestHeadersFixture.cs", label="values.Contains(''If-Range'').ShouldBeFalse()", span="1880-1880"];
m12_801 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_if_range_if_assigned_null()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_if_range_if_assigned_null()", span="1867-1867"];
m12_735 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_host_to_be_overwritten()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_host_to_be_overwritten()", span="1699-1699"];
m12_736 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_host_to_be_overwritten()", file="RequestHeadersFixture.cs", label="string expectedValue = ''www.nancyfx.org''", span="1702-1702"];
m12_737 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_host_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var rawHeaders =\r\n                new Dictionary<string, IEnumerable<string>> { { ''Host'', new[] { ''en.wikipedia.org'' } } }", span="1704-1705"];
m12_738 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_host_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var headers =\r\n                new RequestHeaders(rawHeaders) { Host = expectedValue }", span="1707-1708"];
m12_740 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_host_to_be_overwritten()", file="RequestHeadersFixture.cs", label="values.ShouldEqual(expectedValue)", span="1714-1714"];
m12_739 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_host_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var values = headers.Host", span="1711-1711"];
m12_741 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_host_to_be_overwritten()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_host_to_be_overwritten()", span="1699-1699"];
m12_38 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_header_values_when_containing_multiple_values()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_header_values_when_containing_multiple_values()", span="91-91"];
m12_39 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_header_values_when_containing_multiple_values()", file="RequestHeadersFixture.cs", label="var values = new[] { ''text/plain, text/ninja'' }", span="94-94"];
m12_40 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_header_values_when_containing_multiple_values()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { ''Accept'', values } }", span="95-95"];
m12_41 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_header_values_when_containing_multiple_values()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders).Accept.ToList()", span="98-98"];
m12_42 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_header_values_when_containing_multiple_values()", color=red, community=0, file="RequestHeadersFixture.cs", label="2: headers.Count.ShouldEqual(2)", span="101-101"];
m12_43 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_header_values_when_containing_multiple_values()", file="RequestHeadersFixture.cs", label="headers[0].Item1.ShouldEqual(''text/plain'')", span="102-102"];
m12_44 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_header_values_when_containing_multiple_values()", file="RequestHeadersFixture.cs", label="headers[1].Item1.ShouldEqual(''text/ninja'')", span="103-103"];
m12_45 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_header_values_when_containing_multiple_values()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_header_values_when_containing_multiple_values()", span="91-91"];
m12_356 [cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="RequestHeadersFixture.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0"];
m12_30 [cluster="System.Collections.Generic.IEnumerable<T>.ShouldHaveCount<T>(int)", file="RequestHeadersFixture.cs", label="Entry System.Collections.Generic.IEnumerable<T>.ShouldHaveCount<T>(int)", span="80-80"];
m12_770 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_if_modified_since_if_assigned_null()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_if_modified_since_if_assigned_null()", span="1793-1793"];
m12_771 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_if_modified_since_if_assigned_null()", file="RequestHeadersFixture.cs", label="var rawHeaders =\r\n                new Dictionary<string, IEnumerable<string>> { { ''If-Modified-Since'', new[] { ''Tue, 15 Nov 2011 08:12:31 GMT'' } } }", span="1796-1797"];
m12_772 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_if_modified_since_if_assigned_null()", file="RequestHeadersFixture.cs", label="var headers =\r\n                new RequestHeaders(rawHeaders) { IfModifiedSince = null }", span="1799-1800"];
m12_773 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_if_modified_since_if_assigned_null()", file="RequestHeadersFixture.cs", label="var values = headers.Keys", span="1803-1803"];
m12_774 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_if_modified_since_if_assigned_null()", file="RequestHeadersFixture.cs", label="values.Contains(''If-Modified-Since'').ShouldBeFalse()", span="1806-1806"];
m12_775 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_if_modified_since_if_assigned_null()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_if_modified_since_if_assigned_null()", span="1793-1793"];
m12_182 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_accept_encoding_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_accept_encoding_header_name_when_retrieving_values(string)", span="363-363"];
m12_183 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_accept_encoding_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var expectedValues = new[] { ''compress'', ''sdch'' }", span="366-366"];
m12_184 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_accept_encoding_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { headerName, expectedValues } }", span="367-367"];
m12_185 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_accept_encoding_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders).AcceptEncoding.ToList()", span="370-370"];
m12_186 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_accept_encoding_header_name_when_retrieving_values(string)", color=red, community=0, file="RequestHeadersFixture.cs", label="2: headers.Count.ShouldEqual(2)", span="373-373"];
m12_187 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_accept_encoding_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="headers[0].ShouldEqual(''compress'')", span="374-374"];
m12_188 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_accept_encoding_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="headers[1].ShouldEqual(''sdch'')", span="375-375"];
m12_189 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_accept_encoding_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_accept_encoding_header_name_when_retrieving_values(string)", span="363-363"];
m12_368 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_cookie_headers_when_available()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_return_cookie_headers_when_available()", span="776-776"];
m12_369 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_cookie_headers_when_available()", file="RequestHeadersFixture.cs", label="var rawValues = new[] { ''foo=bar'', ''name=value'' }", span="779-779"];
m12_370 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_cookie_headers_when_available()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { ''Cookie'', rawValues } }", span="780-780"];
m12_371 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_cookie_headers_when_available()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="783-783"];
m12_372 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_cookie_headers_when_available()", file="RequestHeadersFixture.cs", label="ValidateCookie(headers.Cookie.First(), ''foo'', ''bar'')", span="786-786"];
m12_373 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_cookie_headers_when_available()", file="RequestHeadersFixture.cs", label="ValidateCookie(headers.Cookie.Last(), ''name'', ''value'')", span="787-787"];
m12_374 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_cookie_headers_when_available()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_return_cookie_headers_when_available()", span="776-776"];
m12_763 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_if_modified_since_to_be_overwritten()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_if_modified_since_to_be_overwritten()", span="1773-1773"];
m12_764 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_if_modified_since_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var expectedValue =\r\n                new DateTime(2012, 12, 15, 8, 12, 31)", span="1776-1777"];
m12_765 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_if_modified_since_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var rawHeaders =\r\n                new Dictionary<string, IEnumerable<string>> { { ''If-Modified-Since'', new[] { ''Tue, 15 Nov 2011 08:12:31 GMT'' } } }", span="1779-1780"];
m12_766 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_if_modified_since_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var headers =\r\n                new RequestHeaders(rawHeaders) { IfModifiedSince = expectedValue }", span="1782-1783"];
m12_768 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_if_modified_since_to_be_overwritten()", file="RequestHeadersFixture.cs", label="values.ShouldEqual(expectedValue)", span="1789-1789"];
m12_767 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_if_modified_since_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var values = headers.IfModifiedSince", span="1786-1786"];
m12_769 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_if_modified_since_to_be_overwritten()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_if_modified_since_to_be_overwritten()", span="1773-1773"];
m12_588 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_when_available_using_indexer()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_when_available_using_indexer()", span="1305-1305"];
m12_589 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_when_available_using_indexer()", file="RequestHeadersFixture.cs", label="var expectedValues = new[] { ''fakeValue1'', ''fakeValue2'' }", span="1308-1308"];
m12_590 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_when_available_using_indexer()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { ''some-header'', expectedValues } }", span="1309-1309"];
m12_593 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_when_available_using_indexer()", file="RequestHeadersFixture.cs", label="result.ShouldBeSameAs(expectedValues)", span="1316-1316"];
m12_591 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_when_available_using_indexer()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="1310-1310"];
m12_592 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_when_available_using_indexer()", file="RequestHeadersFixture.cs", label="var result = headers[''sOme-HeAdEr'']", span="1313-1313"];
m12_594 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_when_available_using_indexer()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_when_available_using_indexer()", span="1305-1305"];
m12_10 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RequestHeadersFixture.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m12_348 [cluster="object.ShouldBeNull()", file="RequestHeadersFixture.cs", label="Entry object.ShouldBeNull()", span="135-135"];
m12_605 [cluster="System.Tuple<T1, T2>.Tuple(T1, T2)", file="RequestHeadersFixture.cs", label="Entry System.Tuple<T1, T2>.Tuple(T1, T2)", span="0-0"];
m12_349 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_date_when_date_headers_available()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_return_date_when_date_headers_available()", span="734-734"];
m12_350 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_date_when_date_headers_available()", file="RequestHeadersFixture.cs", label="var expectedDate = new DateTime(2011, 11, 15, 8, 12, 31)", span="737-737"];
m12_351 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_date_when_date_headers_available()", file="RequestHeadersFixture.cs", label="var expectedValues = new[] { ''Tue, 15 Nov 2011 08:12:31 GMT'' }", span="738-738"];
m12_354 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_date_when_date_headers_available()", file="RequestHeadersFixture.cs", label="headers.Date.ShouldEqual(expectedDate)", span="745-745"];
m12_352 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_date_when_date_headers_available()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { ''Date'', expectedValues } }", span="739-739"];
m12_353 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_date_when_date_headers_available()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="742-742"];
m12_355 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_date_when_date_headers_available()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_return_date_when_date_headers_available()", span="734-734"];
m12_569 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_useragent_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_useragent_header_name_when_retrieving_values(string)", span="1262-1262"];
m12_570 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_useragent_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var expectedValues = new[] { ''Mozilla/5.0 (Windows NT 5.1) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/14.0.815.0 Safari/535.1'' }", span="1265-1265"];
m12_571 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_useragent_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { headerName, expectedValues } }", span="1266-1266"];
m12_573 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_useragent_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="headers.UserAgent.ShouldBeSameAs(expectedValues[0])", span="1272-1272"];
m12_572 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_useragent_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="1269-1269"];
m12_574 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_useragent_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_useragent_header_name_when_retrieving_values(string)", span="1262-1262"];
m12_262 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_authorization_headers_when_available()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_return_authorization_headers_when_available()", span="518-518"];
m12_263 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_authorization_headers_when_available()", file="RequestHeadersFixture.cs", label="var expectedValues = new[] { ''Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ=='' }", span="521-521"];
m12_264 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_authorization_headers_when_available()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { ''Authorization'', expectedValues } }", span="522-522"];
m12_266 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_authorization_headers_when_available()", file="RequestHeadersFixture.cs", label="headers.Authorization.ShouldBeSameAs(expectedValues[0])", span="528-528"];
m12_265 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_authorization_headers_when_available()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="525-525"];
m12_267 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_authorization_headers_when_available()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_return_authorization_headers_when_available()", span="518-518"];
m12_835 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_referrer_header_if_assigned_null()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_referrer_header_if_assigned_null()", span="1976-1976"];
m12_836 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_referrer_header_if_assigned_null()", file="RequestHeadersFixture.cs", label="var rawHeaders =\r\n                new Dictionary<string, IEnumerable<string>> { { ''Referer'', new[] { ''en.wikipedia.com'' } } }", span="1979-1980"];
m12_837 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_referrer_header_if_assigned_null()", file="RequestHeadersFixture.cs", label="var headers =\r\n                new RequestHeaders(rawHeaders) { Referrer = null }", span="1982-1983"];
m12_838 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_referrer_header_if_assigned_null()", file="RequestHeadersFixture.cs", label="var values = headers.Keys", span="1986-1986"];
m12_839 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_referrer_header_if_assigned_null()", file="RequestHeadersFixture.cs", label="values.Contains(''Referer'').ShouldBeFalse()", span="1989-1989"];
m12_840 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_referrer_header_if_assigned_null()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_referrer_header_if_assigned_null()", span="1976-1976"];
m12_219 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_default_accept_language_header_values_to_quality_one_if_not_explicitly_defined()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_default_accept_language_header_values_to_quality_one_if_not_explicitly_defined()", span="440-440"];
m12_220 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_default_accept_language_header_values_to_quality_one_if_not_explicitly_defined()", file="RequestHeadersFixture.cs", label="var values = new[] { ''en-US'' }", span="443-443"];
m12_221 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_default_accept_language_header_values_to_quality_one_if_not_explicitly_defined()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { ''Accept-Language'', values } }", span="444-444"];
m12_222 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_default_accept_language_header_values_to_quality_one_if_not_explicitly_defined()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders).AcceptLanguage.ToList()", span="447-447"];
m12_223 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_default_accept_language_header_values_to_quality_one_if_not_explicitly_defined()", color=red, community=0, file="RequestHeadersFixture.cs", label="2: headers.Count.ShouldEqual(1)", span="450-450"];
m12_224 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_default_accept_language_header_values_to_quality_one_if_not_explicitly_defined()", file="RequestHeadersFixture.cs", label="headers[0].Item1.ShouldEqual(''en-US'')", span="451-451"];
m12_225 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_default_accept_language_header_values_to_quality_one_if_not_explicitly_defined()", file="RequestHeadersFixture.cs", label="headers[0].Item2.ShouldEqual(1m)", span="452-452"];
m12_226 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_default_accept_language_header_values_to_quality_one_if_not_explicitly_defined()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_default_accept_language_header_values_to_quality_one_if_not_explicitly_defined()", span="440-440"];
m12_698 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_content_length_to_be_overwritten()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_content_length_to_be_overwritten()", span="1594-1594"];
m12_699 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_content_length_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var rawHeaders =\r\n                new Dictionary<string, IEnumerable<string>> { { ''Content-Length'', new[] { ''12345'' } } }", span="1597-1598"];
m12_700 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_content_length_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var headers =\r\n                new RequestHeaders(rawHeaders) { ContentLength = 54321 }", span="1600-1601"];
m12_701 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_content_length_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var values = headers.ContentLength", span="1604-1604"];
m12_702 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_content_length_to_be_overwritten()", file="RequestHeadersFixture.cs", label="values.ShouldEqual(54321L)", span="1607-1607"];
m12_703 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_content_length_to_be_overwritten()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_content_length_to_be_overwritten()", span="1594-1594"];
m12_145 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_sort_accept_charset_header_values_decending_based_on_quality()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_sort_accept_charset_header_values_decending_based_on_quality()", span="282-282"];
m12_146 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_sort_accept_charset_header_values_decending_based_on_quality()", file="RequestHeadersFixture.cs", label="var values = new[] { ''utf-8;q=0.3, iso-8859-5, iso-8859-15;q=0.7'' }", span="285-285"];
m12_147 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_sort_accept_charset_header_values_decending_based_on_quality()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { ''Accept-Charset'', values } }", span="286-286"];
m12_148 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_sort_accept_charset_header_values_decending_based_on_quality()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders).AcceptCharset.ToList()", span="289-289"];
m12_149 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_sort_accept_charset_header_values_decending_based_on_quality()", color=red, community=0, file="RequestHeadersFixture.cs", label="2: headers.Count.ShouldEqual(3)", span="292-292"];
m12_150 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_sort_accept_charset_header_values_decending_based_on_quality()", file="RequestHeadersFixture.cs", label="headers[0].Item1.ShouldEqual(''iso-8859-5'')", span="293-293"];
m12_151 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_sort_accept_charset_header_values_decending_based_on_quality()", file="RequestHeadersFixture.cs", label="headers[1].Item1.ShouldEqual(''iso-8859-15'')", span="294-294"];
m12_152 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_sort_accept_charset_header_values_decending_based_on_quality()", file="RequestHeadersFixture.cs", label="headers[2].Item1.ShouldEqual(''utf-8'')", span="295-295"];
m12_153 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_sort_accept_charset_header_values_decending_based_on_quality()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_sort_accept_charset_header_values_decending_based_on_quality()", span="282-282"];
m12_418 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_ifmatch_header_values_when_containing_multiple_values()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_ifmatch_header_values_when_containing_multiple_values()", span="895-895"];
m12_419 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_ifmatch_header_values_when_containing_multiple_values()", file="RequestHeadersFixture.cs", label="var values = new[] { ''xyzzy'', ''c3piozzzz'' }", span="898-898"];
m12_420 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_ifmatch_header_values_when_containing_multiple_values()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { ''If-Match'', values } }", span="899-899"];
m12_421 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_ifmatch_header_values_when_containing_multiple_values()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders).IfMatch.ToList()", span="902-902"];
m12_422 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_ifmatch_header_values_when_containing_multiple_values()", color=red, community=0, file="RequestHeadersFixture.cs", label="0: headers.Count.ShouldEqual(2)", span="905-905"];
m12_423 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_ifmatch_header_values_when_containing_multiple_values()", file="RequestHeadersFixture.cs", label="headers[0].ShouldEqual(''xyzzy'')", span="906-906"];
m12_424 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_ifmatch_header_values_when_containing_multiple_values()", file="RequestHeadersFixture.cs", label="headers[1].ShouldEqual(''c3piozzzz'')", span="907-907"];
m12_425 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_ifmatch_header_values_when_containing_multiple_values()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_ifmatch_header_values_when_containing_multiple_values()", span="895-895"];
m12_450 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_ifmodifiedsince_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_ifmodifiedsince_header_name_when_retrieving_values(string)", span="971-971"];
m12_451 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_ifmodifiedsince_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var expectedDate = new DateTime(2011, 11, 15, 8, 12, 31)", span="974-974"];
m12_453 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_ifmodifiedsince_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { headerName, expectedValues } }", span="976-976"];
m12_452 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_ifmodifiedsince_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var expectedValues = new[] { ''Tue, 15 Nov 2011 08:12:31 GMT'' }", span="975-975"];
m12_455 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_ifmodifiedsince_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="headers.IfModifiedSince.ShouldEqual(expectedDate)", span="982-982"];
m12_454 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_ifmodifiedsince_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="979-979"];
m12_456 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_ifmodifiedsince_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_ifmodifiedsince_header_name_when_retrieving_values(string)", span="971-971"];
m12_828 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_referrer_to_be_overwritten()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_referrer_to_be_overwritten()", span="1957-1957"];
m12_829 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_referrer_to_be_overwritten()", file="RequestHeadersFixture.cs", label="string expectedValue = ''www.nancyfx.org''", span="1960-1960"];
m12_830 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_referrer_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var rawHeaders =\r\n                new Dictionary<string, IEnumerable<string>> { { ''Referer'', new[] { ''en.wikipedia.com'' } } }", span="1962-1963"];
m12_831 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_referrer_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var headers =\r\n                new RequestHeaders(rawHeaders) { Referrer = expectedValue }", span="1965-1966"];
m12_833 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_referrer_to_be_overwritten()", file="RequestHeadersFixture.cs", label="values.ShouldEqual(expectedValue)", span="1972-1972"];
m12_832 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_referrer_to_be_overwritten()", file="RequestHeadersFixture.cs", label="var values = headers.Referrer", span="1969-1969"];
m12_834 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_referrer_to_be_overwritten()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_allow_referrer_to_be_overwritten()", span="1957-1957"];
m12_70 [cluster="Unk.FirstOrDefault", file="RequestHeadersFixture.cs", label="Entry Unk.FirstOrDefault", span=""];
m12_13 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="RequestHeadersFixture.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m12_131 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_accept_charset_header_values_with_invalid_quality()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_accept_charset_header_values_with_invalid_quality()", span="266-266"];
m12_132 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_accept_charset_header_values_with_invalid_quality()", file="RequestHeadersFixture.cs", label="var values = new[] { ''utf-8, iso-8859-5;q=a'' }", span="269-269"];
m12_133 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_accept_charset_header_values_with_invalid_quality()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { ''Accept-Charset'', values } }", span="270-270"];
m12_134 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_accept_charset_header_values_with_invalid_quality()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders).AcceptCharset.ToList()", span="273-273"];
m12_135 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_accept_charset_header_values_with_invalid_quality()", color=red, community=0, file="RequestHeadersFixture.cs", label="0: headers.Count.ShouldEqual(2)", span="276-276"];
m12_136 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_accept_charset_header_values_with_invalid_quality()", color=red, community=0, file="RequestHeadersFixture.cs", label="0: headers.FirstOrDefault(t => t.Item1 == ''utf-8'' && t.Item2 == 1.0m).ShouldNotBeNull()", span="277-277"];
m12_137 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_accept_charset_header_values_with_invalid_quality()", color=red, community=0, file="RequestHeadersFixture.cs", label="2: headers.FirstOrDefault(t => t.Item1 == ''iso-8859-5'' && t.Item2 == 1.0m).ShouldNotBeNull()", span="278-278"];
m12_138 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_accept_charset_header_values_with_invalid_quality()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_accept_charset_header_values_with_invalid_quality()", span="266-266"];
m12_546 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_referer_headers_when_available()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_return_referer_headers_when_available()", span="1203-1203"];
m12_547 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_referer_headers_when_available()", file="RequestHeadersFixture.cs", label="var expectedValues = new[] { ''http://nancyfx.org'' }", span="1206-1206"];
m12_548 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_referer_headers_when_available()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { ''Referer'', expectedValues } }", span="1207-1207"];
m12_550 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_referer_headers_when_available()", file="RequestHeadersFixture.cs", label="headers.Referrer.ShouldBeSameAs(expectedValues[0])", span="1213-1213"];
m12_549 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_referer_headers_when_available()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="1210-1210"];
m12_551 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_referer_headers_when_available()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_return_referer_headers_when_available()", span="1203-1203"];
m12_809 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_if_unmodified_since_if_assigned_null()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_if_unmodified_since_if_assigned_null()", span="1904-1904"];
m12_810 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_if_unmodified_since_if_assigned_null()", file="RequestHeadersFixture.cs", label="var rawHeaders =\r\n                new Dictionary<string, IEnumerable<string>> { { ''If-Unmodified-Since'', new[] { ''Tue, 15 Nov 2011 08:12:31 GMT'' } } }", span="1907-1908"];
m12_811 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_if_unmodified_since_if_assigned_null()", file="RequestHeadersFixture.cs", label="var headers =\r\n                new RequestHeaders(rawHeaders) { IfUnmodifiedSince = null }", span="1910-1911"];
m12_812 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_if_unmodified_since_if_assigned_null()", file="RequestHeadersFixture.cs", label="var values = headers.Keys", span="1914-1914"];
m12_813 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_if_unmodified_since_if_assigned_null()", file="RequestHeadersFixture.cs", label="values.Contains(''If-Unmodified-Since'').ShouldBeFalse()", span="1917-1917"];
m12_814 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_if_unmodified_since_if_assigned_null()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_if_unmodified_since_if_assigned_null()", span="1904-1904"];
m12_606 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_accept_if_assigned_null()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_accept_if_assigned_null()", span="1345-1345"];
m12_607 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_accept_if_assigned_null()", file="RequestHeadersFixture.cs", label="var rawHeaders =\r\n                new Dictionary<string, IEnumerable<string>> { { ''Accept'', new[] { ''text/plain'' } } }", span="1348-1349"];
m12_608 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_accept_if_assigned_null()", file="RequestHeadersFixture.cs", label="var headers =\r\n                new RequestHeaders(rawHeaders) { Accept = null }", span="1351-1352"];
m12_609 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_accept_if_assigned_null()", file="RequestHeadersFixture.cs", label="var values = headers.Keys", span="1355-1355"];
m12_610 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_accept_if_assigned_null()", file="RequestHeadersFixture.cs", label="values.Contains(''Accept'').ShouldBeFalse()", span="1358-1358"];
m12_611 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_accept_if_assigned_null()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_remove_accept_if_assigned_null()", span="1345-1345"];
m12_860 [cluster="Unk.ShouldEqual", file="RequestHeadersFixture.cs", label="Entry Unk.ShouldEqual", span=""];
m12_499 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_null_when_ifunmodifiedsince_headers_are_not_available()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_return_null_when_ifunmodifiedsince_headers_are_not_available()", span="1088-1088"];
m12_500 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_null_when_ifunmodifiedsince_headers_are_not_available()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>>()", span="1091-1091"];
m12_501 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_null_when_ifunmodifiedsince_headers_are_not_available()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="1094-1094"];
m12_502 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_null_when_ifunmodifiedsince_headers_are_not_available()", file="RequestHeadersFixture.cs", label="headers.IfUnmodifiedSince.ShouldBeNull()", span="1097-1097"];
m12_503 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_null_when_ifunmodifiedsince_headers_are_not_available()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_return_null_when_ifunmodifiedsince_headers_are_not_available()", span="1088-1088"];
m12_309 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_zero_when_content_length_headers_are_not_available()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_return_zero_when_content_length_headers_are_not_available()", span="634-634"];
m12_310 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_zero_when_content_length_headers_are_not_available()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>>()", span="637-637"];
m12_311 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_zero_when_content_length_headers_are_not_available()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="640-640"];
m12_312 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_zero_when_content_length_headers_are_not_available()", file="RequestHeadersFixture.cs", label="headers.ContentLength.ShouldEqual(0L)", span="643-643"];
m12_313 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_return_zero_when_content_length_headers_are_not_available()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_return_zero_when_content_length_headers_are_not_available()", span="634-634"];
m12_552 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_referer_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_referer_header_name_when_retrieving_values(string)", span="1219-1219"];
m12_553 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_referer_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var expectedValues = new[] { ''http://nancyfx.org'' }", span="1222-1222"];
m12_554 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_referer_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { headerName, expectedValues } }", span="1223-1223"];
m12_556 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_referer_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="headers.Referrer.ShouldBeSameAs(expectedValues[0])", span="1229-1229"];
m12_555 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_referer_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders)", span="1226-1226"];
m12_557 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_referer_header_name_when_retrieving_values(string)", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_ignore_case_of_referer_header_name_when_retrieving_values(string)", span="1219-1219"];
m12_211 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_language_header_value_quality_when_available()", file="RequestHeadersFixture.cs", label="Entry Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_language_header_value_quality_when_available()", span="424-424"];
m12_212 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_language_header_value_quality_when_available()", file="RequestHeadersFixture.cs", label="var values = new[] { ''en-US;q=0.3'' }", span="427-427"];
m12_213 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_language_header_value_quality_when_available()", file="RequestHeadersFixture.cs", label="var rawHeaders = new Dictionary<string, IEnumerable<string>> { { ''Accept-Language'', values } }", span="428-428"];
m12_214 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_language_header_value_quality_when_available()", file="RequestHeadersFixture.cs", label="var headers = new RequestHeaders(rawHeaders).AcceptLanguage.ToList()", span="431-431"];
m12_215 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_language_header_value_quality_when_available()", color=red, community=0, file="RequestHeadersFixture.cs", label="5: headers.Count.ShouldEqual(1)", span="434-434"];
m12_216 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_language_header_value_quality_when_available()", file="RequestHeadersFixture.cs", label="headers[0].Item1.ShouldEqual(''en-US'')", span="435-435"];
m12_217 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_language_header_value_quality_when_available()", file="RequestHeadersFixture.cs", label="headers[0].Item2.ShouldEqual(0.3m)", span="436-436"];
m12_218 [cluster="Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_language_header_value_quality_when_available()", file="RequestHeadersFixture.cs", label="Exit Nancy.Tests.Unit.RequestHeadersFixture.Should_parse_accept_language_header_value_quality_when_available()", span="424-424"];
m12_867 [file="RequestHeadersFixture.cs", label=string, span=""];
m13_3 [cluster="System.Collections.Generic.List<T>.List()", file="TaskHelpers.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m13_0 [cluster="Nancy.BeforePipeline.BeforePipeline()", file="TaskHelpers.cs", label="Entry Nancy.BeforePipeline.BeforePipeline()", span="27-27"];
m13_1 [cluster="Nancy.BeforePipeline.BeforePipeline()", file="TaskHelpers.cs", label="this.pipelineItems = new List<Func<NancyContext, Response>>()", span="29-29"];
m13_2 [cluster="Nancy.BeforePipeline.BeforePipeline()", file="TaskHelpers.cs", label="Exit Nancy.BeforePipeline.BeforePipeline()", span="27-27"];
m13_21 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="TaskHelpers.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m13_30 [cluster="System.Collections.IEnumerator.MoveNext()", file="TaskHelpers.cs", label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0"];
m13_31 [cluster="System.Func<T, TResult>.Invoke(T)", file="TaskHelpers.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m13_38 [cluster="System.Collections.Generic.List<T>.Add(T)", file="TaskHelpers.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m13_4 [cluster="Nancy.BeforePipeline.implicit operator System.Func<Nancy.NancyContext, Nancy.Response>(Nancy.BeforePipeline)", file="TaskHelpers.cs", label="Entry Nancy.BeforePipeline.implicit operator System.Func<Nancy.NancyContext, Nancy.Response>(Nancy.BeforePipeline)", span="43-43"];
m13_5 [cluster="Nancy.BeforePipeline.implicit operator System.Func<Nancy.NancyContext, Nancy.Response>(Nancy.BeforePipeline)", color=red, community=0, file="TaskHelpers.cs", label="0: return pipeline.Invoke;", span="45-45"];
m13_6 [cluster="Nancy.BeforePipeline.implicit operator System.Func<Nancy.NancyContext, Nancy.Response>(Nancy.BeforePipeline)", file="TaskHelpers.cs", label="Exit Nancy.BeforePipeline.implicit operator System.Func<Nancy.NancyContext, Nancy.Response>(Nancy.BeforePipeline)", span="43-43"];
m13_13 [cluster="Nancy.BeforePipeline.operator +(Nancy.BeforePipeline, System.Func<Nancy.NancyContext, Nancy.Response>)", file="TaskHelpers.cs", label="Entry Nancy.BeforePipeline.operator +(Nancy.BeforePipeline, System.Func<Nancy.NancyContext, Nancy.Response>)", span="55-55"];
m13_14 [cluster="Nancy.BeforePipeline.operator +(Nancy.BeforePipeline, System.Func<Nancy.NancyContext, Nancy.Response>)", file="TaskHelpers.cs", label="pipeline.AddItemToEndOfPipeline(func)", span="57-57"];
m13_15 [cluster="Nancy.BeforePipeline.operator +(Nancy.BeforePipeline, System.Func<Nancy.NancyContext, Nancy.Response>)", file="TaskHelpers.cs", label="return pipeline;", span="58-58"];
m13_16 [cluster="Nancy.BeforePipeline.operator +(Nancy.BeforePipeline, System.Func<Nancy.NancyContext, Nancy.Response>)", file="TaskHelpers.cs", label="Exit Nancy.BeforePipeline.operator +(Nancy.BeforePipeline, System.Func<Nancy.NancyContext, Nancy.Response>)", span="55-55"];
m13_32 [cluster="Nancy.BeforePipeline.AddItemToStartOfPipeline(System.Func<Nancy.NancyContext, Nancy.Response>)", file="TaskHelpers.cs", label="Entry Nancy.BeforePipeline.AddItemToStartOfPipeline(System.Func<Nancy.NancyContext, Nancy.Response>)", span="96-96"];
m13_33 [cluster="Nancy.BeforePipeline.AddItemToStartOfPipeline(System.Func<Nancy.NancyContext, Nancy.Response>)", file="TaskHelpers.cs", label="this.InsertItemAtPipelineIndex(0, item)", span="98-98"];
m13_34 [cluster="Nancy.BeforePipeline.AddItemToStartOfPipeline(System.Func<Nancy.NancyContext, Nancy.Response>)", file="TaskHelpers.cs", label="Exit Nancy.BeforePipeline.AddItemToStartOfPipeline(System.Func<Nancy.NancyContext, Nancy.Response>)", span="96-96"];
m13_41 [cluster="System.Collections.Generic.List<T>.Insert(int, T)", file="TaskHelpers.cs", label="Entry System.Collections.Generic.List<T>.Insert(int, T)", span="0-0"];
m13_29 [cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()", file="TaskHelpers.cs", label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0"];
m13_35 [cluster="Nancy.BeforePipeline.InsertItemAtPipelineIndex(int, System.Func<Nancy.NancyContext, Nancy.Response>)", file="TaskHelpers.cs", label="Entry Nancy.BeforePipeline.InsertItemAtPipelineIndex(int, System.Func<Nancy.NancyContext, Nancy.Response>)", span="115-115"];
m13_39 [cluster="Nancy.BeforePipeline.InsertItemAtPipelineIndex(int, System.Func<Nancy.NancyContext, Nancy.Response>)", file="TaskHelpers.cs", label="this.pipelineItems.Insert(index, item)", span="117-117"];
m13_40 [cluster="Nancy.BeforePipeline.InsertItemAtPipelineIndex(int, System.Func<Nancy.NancyContext, Nancy.Response>)", file="TaskHelpers.cs", label="Exit Nancy.BeforePipeline.InsertItemAtPipelineIndex(int, System.Func<Nancy.NancyContext, Nancy.Response>)", span="115-115"];
m13_22 [cluster="Nancy.BeforePipeline.Invoke(Nancy.NancyContext)", file="TaskHelpers.cs", label="Entry Nancy.BeforePipeline.Invoke(Nancy.NancyContext)", span="77-77"];
m13_23 [cluster="Nancy.BeforePipeline.Invoke(Nancy.NancyContext)", file="TaskHelpers.cs", label="Response returnValue = null", span="79-79"];
m13_26 [cluster="Nancy.BeforePipeline.Invoke(Nancy.NancyContext)", file="TaskHelpers.cs", label="returnValue = enumerator.Current.Invoke(context)", span="85-85"];
m13_24 [cluster="Nancy.BeforePipeline.Invoke(Nancy.NancyContext)", file="TaskHelpers.cs", label="var enumerator = this.PipelineItems.GetEnumerator()", span="81-81"];
m13_25 [cluster="Nancy.BeforePipeline.Invoke(Nancy.NancyContext)", file="TaskHelpers.cs", label="returnValue == null && enumerator.MoveNext()", span="83-83"];
m13_27 [cluster="Nancy.BeforePipeline.Invoke(Nancy.NancyContext)", file="TaskHelpers.cs", label="return returnValue;", span="89-89"];
m13_28 [cluster="Nancy.BeforePipeline.Invoke(Nancy.NancyContext)", file="TaskHelpers.cs", label="Exit Nancy.BeforePipeline.Invoke(Nancy.NancyContext)", span="77-77"];
m13_12 [cluster="Nancy.BeforePipeline.AddItemToEndOfPipeline(System.Func<Nancy.NancyContext, Nancy.Response>)", file="TaskHelpers.cs", label="Entry Nancy.BeforePipeline.AddItemToEndOfPipeline(System.Func<Nancy.NancyContext, Nancy.Response>)", span="105-105"];
m13_36 [cluster="Nancy.BeforePipeline.AddItemToEndOfPipeline(System.Func<Nancy.NancyContext, Nancy.Response>)", file="TaskHelpers.cs", label="this.pipelineItems.Add(item)", span="107-107"];
m13_37 [cluster="Nancy.BeforePipeline.AddItemToEndOfPipeline(System.Func<Nancy.NancyContext, Nancy.Response>)", file="TaskHelpers.cs", label="Exit Nancy.BeforePipeline.AddItemToEndOfPipeline(System.Func<Nancy.NancyContext, Nancy.Response>)", span="105-105"];
m13_17 [cluster="Nancy.BeforePipeline.operator +(Nancy.BeforePipeline, Nancy.BeforePipeline)", file="TaskHelpers.cs", label="Entry Nancy.BeforePipeline.operator +(Nancy.BeforePipeline, Nancy.BeforePipeline)", span="61-61"];
m13_18 [cluster="Nancy.BeforePipeline.operator +(Nancy.BeforePipeline, Nancy.BeforePipeline)", file="TaskHelpers.cs", label="pipelineToAddTo.pipelineItems.AddRange(pipelineToAdd.pipelineItems)", span="63-63"];
m13_19 [cluster="Nancy.BeforePipeline.operator +(Nancy.BeforePipeline, Nancy.BeforePipeline)", file="TaskHelpers.cs", label="return pipelineToAddTo;", span="64-64"];
m13_20 [cluster="Nancy.BeforePipeline.operator +(Nancy.BeforePipeline, Nancy.BeforePipeline)", file="TaskHelpers.cs", label="Exit Nancy.BeforePipeline.operator +(Nancy.BeforePipeline, Nancy.BeforePipeline)", span="61-61"];
m13_7 [cluster="Nancy.BeforePipeline.implicit operator Nancy.BeforePipeline(System.Func<Nancy.NancyContext, Nancy.Response>)", file="TaskHelpers.cs", label="Entry Nancy.BeforePipeline.implicit operator Nancy.BeforePipeline(System.Func<Nancy.NancyContext, Nancy.Response>)", span="48-48"];
m13_8 [cluster="Nancy.BeforePipeline.implicit operator Nancy.BeforePipeline(System.Func<Nancy.NancyContext, Nancy.Response>)", file="TaskHelpers.cs", label="var pipeline = new BeforePipeline()", span="50-50"];
m13_9 [cluster="Nancy.BeforePipeline.implicit operator Nancy.BeforePipeline(System.Func<Nancy.NancyContext, Nancy.Response>)", file="TaskHelpers.cs", label="pipeline.AddItemToEndOfPipeline(func)", span="51-51"];
m13_10 [cluster="Nancy.BeforePipeline.implicit operator Nancy.BeforePipeline(System.Func<Nancy.NancyContext, Nancy.Response>)", file="TaskHelpers.cs", label="return pipeline;", span="52-52"];
m13_11 [cluster="Nancy.BeforePipeline.implicit operator Nancy.BeforePipeline(System.Func<Nancy.NancyContext, Nancy.Response>)", file="TaskHelpers.cs", label="Exit Nancy.BeforePipeline.implicit operator Nancy.BeforePipeline(System.Func<Nancy.NancyContext, Nancy.Response>)", span="48-48"];
m13_42 [file="TaskHelpers.cs", label="Nancy.BeforePipeline", span=""];
m14_37 [cluster="Nancy.Routing.Trie.Nodes.CaptureNode.CaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory)", file="TrieNodeFactory.cs", label="Entry Nancy.Routing.Trie.Nodes.CaptureNode.CaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory)", span="17-17"];
m14_33 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithConstraint.CaptureNodeWithConstraint(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory)", file="TrieNodeFactory.cs", label="Entry Nancy.Routing.Trie.Nodes.CaptureNodeWithConstraint.CaptureNodeWithConstraint(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory)", span="23-23"];
m14_18 [cluster="Nancy.Routing.Trie.Nodes.GreedyRegExCaptureNode.GreedyRegExCaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory)", file="TrieNodeFactory.cs", label="Entry Nancy.Routing.Trie.Nodes.GreedyRegExCaptureNode.GreedyRegExCaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory)", span="27-27"];
m14_20 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithLiteral.CaptureNodeWithLiteral(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory)", file="TrieNodeFactory.cs", label="Entry Nancy.Routing.Trie.Nodes.CaptureNodeWithLiteral.CaptureNodeWithLiteral(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory)", span="26-26"];
m14_19 [cluster="System.Text.RegularExpressions.Regex.IsMatch(string)", file="TrieNodeFactory.cs", label="Entry System.Text.RegularExpressions.Regex.IsMatch(string)", span="0-0"];
m14_15 [cluster="string.EndsWith(string)", file="TrieNodeFactory.cs", label="Entry string.EndsWith(string)", span="0-0"];
m14_34 [cluster="Nancy.Routing.Trie.Nodes.OptionalCaptureNode.OptionalCaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory)", file="TrieNodeFactory.cs", label="Entry Nancy.Routing.Trie.Nodes.OptionalCaptureNode.OptionalCaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory)", span="19-19"];
m14_21 [cluster="Nancy.Routing.Trie.Nodes.LiteralNode.LiteralNode(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory)", file="TrieNodeFactory.cs", label="Entry Nancy.Routing.Trie.Nodes.LiteralNode.LiteralNode(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory)", span="17-17"];
m14_32 [cluster="string.Contains(string)", file="TrieNodeFactory.cs", label="Entry string.Contains(string)", span="0-0"];
m14_14 [cluster="string.StartsWith(string)", file="TrieNodeFactory.cs", label="Entry string.StartsWith(string)", span="0-0"];
m14_16 [cluster="Nancy.Routing.Trie.Nodes.RegExNode.RegExNode(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory)", file="TrieNodeFactory.cs", label="Entry Nancy.Routing.Trie.Nodes.RegExNode.RegExNode(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory)", span="21-21"];
m14_13 [cluster="Nancy.Routing.Trie.Nodes.RootNode.RootNode(Nancy.Routing.Trie.ITrieNodeFactory)", file="TrieNodeFactory.cs", label="Entry Nancy.Routing.Trie.Nodes.RootNode.RootNode(Nancy.Routing.Trie.ITrieNodeFactory)", span="21-21"];
m14_0 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetNodeForSegment(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="TrieNodeFactory.cs", label="Entry Nancy.Routing.Trie.TrieNodeFactory.GetNodeForSegment(Nancy.Routing.Trie.Nodes.TrieNode, string)", span="15-15"];
m14_1 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetNodeForSegment(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="TrieNodeFactory.cs", label="parent == null", span="17-17"];
m14_3 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetNodeForSegment(Nancy.Routing.Trie.Nodes.TrieNode, string)", color=red, community=0, file="TrieNodeFactory.cs", label="0: segment.StartsWith(''('') && segment.EndsWith('')'')", span="22-22"];
m14_4 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetNodeForSegment(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="TrieNodeFactory.cs", label="return new RegExNode(parent, segment, this);", span="24-24"];
m14_5 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetNodeForSegment(Nancy.Routing.Trie.Nodes.TrieNode, string)", color=red, community=0, file="TrieNodeFactory.cs", label="0: segment.StartsWith(''{'') && segment.EndsWith(''}'')", span="27-27"];
m14_6 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetNodeForSegment(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="TrieNodeFactory.cs", label="return this.GetCaptureNode(parent, segment);", span="29-29"];
m14_7 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetNodeForSegment(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="TrieNodeFactory.cs", label="segment.StartsWith(''^('') && (segment.EndsWith('')'') || segment.EndsWith('')$''))", span="32-32"];
m14_8 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetNodeForSegment(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="TrieNodeFactory.cs", label="return new GreedyRegExCaptureNode(parent, segment, this);", span="34-34"];
m14_9 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetNodeForSegment(Nancy.Routing.Trie.Nodes.TrieNode, string)", color=red, community=0, file="TrieNodeFactory.cs", label="0: CaptureNodeWithLiteral.MatchRegex.IsMatch(segment)", span="37-37"];
m14_10 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetNodeForSegment(Nancy.Routing.Trie.Nodes.TrieNode, string)", color=red, community=0, file="TrieNodeFactory.cs", label="2: return new CaptureNodeWithLiteral(parent, segment, this);", span="39-39"];
m14_11 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetNodeForSegment(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="TrieNodeFactory.cs", label="return new LiteralNode(parent, segment, this);", span="42-42"];
m14_2 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetNodeForSegment(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="TrieNodeFactory.cs", label="return new RootNode(this);", span="19-19"];
m14_12 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetNodeForSegment(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="TrieNodeFactory.cs", label="Exit Nancy.Routing.Trie.TrieNodeFactory.GetNodeForSegment(Nancy.Routing.Trie.Nodes.TrieNode, string)", span="15-15"];
m14_17 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetCaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="TrieNodeFactory.cs", label="Entry Nancy.Routing.Trie.TrieNodeFactory.GetCaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string)", span="45-45"];
m14_22 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetCaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="TrieNodeFactory.cs", label="segment.Contains('':'')", span="47-47"];
m14_23 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetCaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="TrieNodeFactory.cs", label="return new CaptureNodeWithConstraint(parent, segment, this);", span="49-49"];
m14_24 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetCaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="TrieNodeFactory.cs", label="segment.EndsWith(''?}'')", span="52-52"];
m14_25 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetCaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="TrieNodeFactory.cs", label="return new OptionalCaptureNode(parent, segment, this);", span="54-54"];
m14_26 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetCaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="TrieNodeFactory.cs", label="segment.EndsWith(''*}'')", span="57-57"];
m14_27 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetCaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="TrieNodeFactory.cs", label="return new GreedyCaptureNode(parent, segment, this);", span="59-59"];
m14_28 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetCaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="TrieNodeFactory.cs", label="segment.Contains(''?'')", span="62-62"];
m14_29 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetCaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="TrieNodeFactory.cs", label="return new CaptureNodeWithDefaultValue(parent, segment, this);", span="64-64"];
m14_30 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetCaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="TrieNodeFactory.cs", label="return new CaptureNode(parent, segment, this);", span="67-67"];
m14_31 [cluster="Nancy.Routing.Trie.TrieNodeFactory.GetCaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string)", file="TrieNodeFactory.cs", label="Exit Nancy.Routing.Trie.TrieNodeFactory.GetCaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string)", span="45-45"];
m14_36 [cluster="Nancy.Routing.Trie.Nodes.CaptureNodeWithDefaultValue.CaptureNodeWithDefaultValue(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory)", file="TrieNodeFactory.cs", label="Entry Nancy.Routing.Trie.Nodes.CaptureNodeWithDefaultValue.CaptureNodeWithDefaultValue(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory)", span="21-21"];
m14_35 [cluster="Nancy.Routing.Trie.Nodes.GreedyCaptureNode.GreedyCaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory)", file="TrieNodeFactory.cs", label="Entry Nancy.Routing.Trie.Nodes.GreedyCaptureNode.GreedyCaptureNode(Nancy.Routing.Trie.Nodes.TrieNode, string, Nancy.Routing.Trie.ITrieNodeFactory)", span="25-25"];
m14_38 [file="TrieNodeFactory.cs", label="Nancy.Routing.Trie.TrieNodeFactory", span=""];
m0_18 -> m0_19  [color=green, key=0, style=solid];
m0_18 -> m0_21  [color=green, key=1, label=string, style=dashed];
m0_18 -> m0_23  [color=green, key=1, label=string, style=dashed];
m0_19 -> m0_20  [color=green, key=0, style=solid];
m0_19 -> m0_28  [color=green, key=1, label=match, style=dashed];
m0_20 -> m0_21  [color=green, key=0, style=solid];
m0_20 -> m0_23  [color=green, key=1, label=regex, style=dashed];
m0_20 -> m0_30  [color=green, key=2, style=dotted];
m0_28 -> m0_29  [color=green, key=0, style=solid];
m0_21 -> m0_22  [color=green, key=0, style=solid];
m0_21 -> m0_28  [color=green, key=0, style=solid];
m0_21 -> m0_31  [color=green, key=2, style=dotted];
m0_22 -> m0_23  [color=green, key=0, style=solid];
m0_22 -> m0_28  [color=green, key=1, label=match, style=dashed];
m0_22 -> m0_32  [color=green, key=2, style=dotted];
m0_22 -> m0_26  [color=green, key=1, label=match, style=dashed];
m0_23 -> m0_24  [color=green, key=0, style=solid];
m0_23 -> m0_33  [color=green, key=2, style=dotted];
m0_23 -> m0_25  [color=green, key=1, label=regexMatch, style=dashed];
m0_23 -> m0_26  [color=green, key=1, label=regexMatch, style=dashed];
m0_24 -> m0_26  [color=green, key=1, label=i, style=dashed];
m0_24 -> m0_24  [color=green, key=3, label="Local variable int i", style=bold];
m0_24 -> m0_25  [color=green, key=0, style=solid];
m0_24 -> m0_27  [color=green, key=1, label=i, style=dashed];
m0_25 -> m0_28  [color=green, key=0, style=solid];
m0_25 -> m0_26  [color=green, key=0, style=solid];
m0_26 -> m0_27  [color=green, key=0, style=solid];
m0_26 -> m0_34  [color=green, key=2, style=dotted];
m0_27 -> m0_25  [color=green, key=0, style=solid];
m0_27 -> m0_27  [color=green, key=1, label=i, style=dashed];
m0_29 -> m0_18  [color=blue, key=0, style=bold];
m0_3 -> m0_35  [color=green, key=0, style=solid];
m0_35 -> m0_36  [color=green, key=0, style=solid];
m0_35 -> m0_7  [color=green, key=2, style=dotted];
m0_35 -> m0_37  [color=green, key=1, label=matches, style=dashed];
m0_36 -> m0_37  [color=green, key=0, style=solid];
m0_36 -> m0_44  [color=green, key=2, style=dotted];
m0_37 -> m0_38  [color=green, key=0, style=solid];
m0_37 -> m0_42  [color=green, key=0, style=solid];
m0_37 -> m0_39  [color=green, key=1, label=match, style=dashed];
m0_37 -> m0_41  [color=green, key=1, label=match, style=dashed];
m0_41 -> m0_37  [color=green, key=0, style=solid];
m0_41 -> m0_47  [color=green, key=2, style=dotted];
m0_41 -> m0_44  [color=green, key=2, style=dotted];
m0_40 -> m0_37  [color=green, key=0, style=solid];
m0_40 -> m0_44  [color=green, key=2, style=dotted];
m0_38 -> m0_39  [color=green, key=0, style=solid];
m0_38 -> m0_41  [color=green, key=0, style=solid];
m0_38 -> m0_13  [color=green, key=2, style=dotted];
m0_42 -> m0_43  [color=green, key=0, style=solid];
m0_42 -> m0_44  [color=green, key=2, style=dotted];
m0_39 -> m0_40  [color=green, key=0, style=solid];
m0_39 -> m0_45  [color=green, key=2, style=dotted];
m0_39 -> m0_46  [color=green, key=2, style=dotted];
m0_43 -> m0_3  [color=blue, key=0, style=bold];
m0_44 -> m0_48  [color=green, key=0, style=solid];
m0_48 -> m0_49  [color=green, key=0, style=solid];
m0_49 -> m0_44  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [color=green, key=0, style=solid];
m0_1 -> m0_2  [color=green, key=0, style=solid];
m0_1 -> m0_3  [color=green, key=2, style=dotted];
m0_2 -> m0_0  [color=blue, key=0, style=bold];
m0_13 -> m0_14  [color=green, key=0, style=solid];
m0_13 -> m0_37  [color=green, key=3, label="Parameter variable System.Text.RegularExpressions.Capture match", style=bold];
m0_14 -> m0_15  [color=green, key=0, style=solid];
m0_14 -> m0_16  [color=green, key=2, style=dotted];
m0_14 -> m0_17  [color=green, key=2, style=dotted];
m0_15 -> m0_13  [color=blue, key=0, style=bold];
m0_10 -> m0_11  [color=green, key=0, style=solid];
m0_11 -> m0_12  [color=green, key=0, style=solid];
m0_12 -> m0_10  [color=blue, key=0, style=bold];
m0_4 -> m0_5  [color=green, key=0, style=solid];
m0_5 -> m0_6  [color=green, key=0, style=solid];
m0_5 -> m0_7  [color=green, key=2, style=dotted];
m0_5 -> m0_8  [color=green, key=2, style=dotted];
m0_5 -> m0_9  [color=green, key=2, style=dotted];
m0_5 -> m0_10  [color=green, key=1, label="lambda expression", style=dashed];
m0_6 -> m0_4  [color=blue, key=0, style=bold];
m0_50 -> m0_1  [color=green, key=1, label="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters", style=dashed];
m0_50 -> m0_20  [color=green, key=1, label="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters", style=dashed];
m0_50 -> m0_26  [color=green, key=1, label="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters", style=dashed];
m0_50 -> m0_35  [color=green, key=1, label="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters", style=dashed];
m0_50 -> m0_36  [color=green, key=1, label="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters", style=dashed];
m0_50 -> m0_42  [color=green, key=1, label="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters", style=dashed];
m0_50 -> m0_39  [color=green, key=1, label="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters", style=dashed];
m0_50 -> m0_41  [color=green, key=1, label="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters", style=dashed];
m0_50 -> m0_40  [color=green, key=1, label="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters", style=dashed];
m0_50 -> m0_48  [color=green, key=1, label="Nancy.Routing.Trie.Nodes.CaptureNodeWithMultipleParameters", style=dashed];
m2_491 -> m2_492  [key=0, style=solid];
m2_492 -> m2_493  [key=0, style=solid];
m2_492 -> m2_505  [key=2, style=dotted];
m2_492 -> m2_226  [key=2, style=dotted];
m2_493 -> m2_494  [key=0, style=solid];
m2_493 -> m2_227  [key=2, style=dotted];
m2_493 -> m2_499  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_494 -> m2_495  [key=0, style=solid];
m2_494 -> m2_73  [key=2, style=dotted];
m2_494 -> m2_496  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_494 -> m2_497  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_494 -> m2_498  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_494 -> m2_499  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_499 -> m2_500  [key=0, style=solid];
m2_499 -> m2_75  [key=2, style=dotted];
m2_499 -> m2_501  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_499 -> m2_502  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_499 -> m2_503  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_495 -> m2_496  [key=0, style=solid];
m2_496 -> m2_497  [key=0, style=solid];
m2_497 -> m2_498  [key=0, style=solid];
m2_498 -> m2_499  [key=0, style=solid];
m2_500 -> m2_501  [key=0, style=solid];
m2_500 -> m2_506  [key=2, style=dotted];
m2_500 -> m2_134  [key=2, style=dotted];
m2_501 -> m2_502  [key=0, style=solid];
m2_501 -> m2_506  [key=2, style=dotted];
m2_501 -> m2_134  [key=2, style=dotted];
m2_502 -> m2_503  [key=0, style=solid];
m2_502 -> m2_507  [key=2, style=dotted];
m2_502 -> m2_134  [key=2, style=dotted];
m2_503 -> m2_504  [key=0, style=solid];
m2_503 -> m2_507  [key=2, style=dotted];
m2_503 -> m2_134  [key=2, style=dotted];
m2_504 -> m2_491  [color=blue, key=0, style=bold];
m2_508 -> m2_509  [key=0, style=solid];
m2_509 -> m2_510  [key=0, style=solid];
m2_509 -> m2_505  [key=2, style=dotted];
m2_509 -> m2_226  [key=2, style=dotted];
m2_510 -> m2_511  [key=0, style=solid];
m2_510 -> m2_227  [key=2, style=dotted];
m2_510 -> m2_525  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_511 -> m2_512  [key=0, style=solid];
m2_511 -> m2_73  [key=2, style=dotted];
m2_511 -> m2_513  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_511 -> m2_514  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_511 -> m2_515  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_511 -> m2_516  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_511 -> m2_517  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_511 -> m2_518  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_511 -> m2_519  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_511 -> m2_520  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_511 -> m2_521  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_511 -> m2_522  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_511 -> m2_523  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_511 -> m2_524  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_511 -> m2_525  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_525 -> m2_526  [key=0, style=solid];
m2_525 -> m2_75  [key=2, style=dotted];
m2_525 -> m2_527  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_525 -> m2_528  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_512 -> m2_513  [key=0, style=solid];
m2_513 -> m2_514  [key=0, style=solid];
m2_514 -> m2_515  [key=0, style=solid];
m2_515 -> m2_516  [key=0, style=solid];
m2_516 -> m2_517  [key=0, style=solid];
m2_517 -> m2_518  [key=0, style=solid];
m2_518 -> m2_519  [key=0, style=solid];
m2_519 -> m2_520  [key=0, style=solid];
m2_520 -> m2_521  [key=0, style=solid];
m2_521 -> m2_522  [key=0, style=solid];
m2_522 -> m2_523  [key=0, style=solid];
m2_523 -> m2_524  [key=0, style=solid];
m2_524 -> m2_525  [key=0, style=solid];
m2_526 -> m2_527  [key=0, style=solid];
m2_526 -> m2_506  [key=2, style=dotted];
m2_526 -> m2_134  [key=2, style=dotted];
m2_527 -> m2_528  [key=0, style=solid];
m2_527 -> m2_530  [key=2, style=dotted];
m2_527 -> m2_134  [key=2, style=dotted];
m2_528 -> m2_529  [key=0, style=solid];
m2_528 -> m2_507  [key=2, style=dotted];
m2_528 -> m2_134  [key=2, style=dotted];
m2_529 -> m2_508  [color=blue, key=0, style=bold];
m2_100 -> m2_101  [key=0, style=solid];
m2_101 -> m2_102  [key=0, style=solid];
m2_101 -> m2_11  [key=2, style=dotted];
m2_101 -> m2_105  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m2_101 -> m2_108  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m2_102 -> m2_103  [key=0, style=solid];
m2_102 -> m2_72  [key=2, style=dotted];
m2_102 -> m2_104  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_105 -> m2_106  [key=0, style=solid];
m2_105 -> m2_12  [key=2, style=dotted];
m2_105 -> m2_76  [key=2, style=dotted];
m2_105 -> m2_107  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_103 -> m2_104  [key=0, style=solid];
m2_103 -> m2_73  [key=2, style=dotted];
m2_104 -> m2_105  [key=0, style=solid];
m2_104 -> m2_74  [key=2, style=dotted];
m2_104 -> m2_75  [key=2, style=dotted];
m2_106 -> m2_100  [color=blue, key=0, style=bold];
m2_297 -> m2_298  [key=0, style=solid];
m2_298 -> m2_299  [key=0, style=solid];
m2_298 -> m2_11  [key=2, style=dotted];
m2_298 -> m2_301  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m2_298 -> m2_303  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m2_298 -> m2_309  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m2_299 -> m2_300  [key=0, style=solid];
m2_299 -> m2_227  [key=2, style=dotted];
m2_299 -> m2_302  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_301 -> m2_302  [key=0, style=solid];
m2_301 -> m2_12  [key=2, style=dotted];
m2_301 -> m2_15  [key=2, style=dotted];
m2_301 -> m2_305  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_303 -> m2_304  [key=0, style=solid];
m2_303 -> m2_12  [key=2, style=dotted];
m2_303 -> m2_76  [key=2, style=dotted];
m2_303 -> m2_308  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_300 -> m2_301  [key=0, style=solid];
m2_300 -> m2_73  [key=2, style=dotted];
m2_300 -> m2_302  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_302 -> m2_303  [key=0, style=solid];
m2_302 -> m2_74  [key=2, style=dotted];
m2_302 -> m2_75  [key=2, style=dotted];
m2_304 -> m2_297  [color=blue, key=0, style=bold];
m2_399 -> m2_400  [key=0, style=solid];
m2_400 -> m2_401  [key=0, style=solid];
m2_400 -> m2_11  [key=2, style=dotted];
m2_400 -> m2_412  [color=darkseagreen4, key=1, label=userDeserializer, style=dashed];
m2_400 -> m2_405  [color=darkseagreen4, key=1, label=userDeserializer, style=dashed];
m2_400 -> m2_408  [color=darkseagreen4, key=1, label=userDeserializer, style=dashed];
m2_400 -> m2_421  [color=darkseagreen4, key=1, label=userDeserializer, style=dashed];
m2_401 -> m2_402  [key=0, style=solid];
m2_401 -> m2_12  [key=2, style=dotted];
m2_401 -> m2_13  [key=2, style=dotted];
m2_401 -> m2_15  [key=2, style=dotted];
m2_401 -> m2_411  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_405 -> m2_406  [key=0, style=solid];
m2_405 -> m2_72  [key=2, style=dotted];
m2_405 -> m2_407  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_408 -> m2_409  [key=0, style=solid];
m2_408 -> m2_12  [key=2, style=dotted];
m2_408 -> m2_13  [key=2, style=dotted];
m2_408 -> m2_76  [key=2, style=dotted];
m2_408 -> m2_420  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_402 -> m2_403  [key=0, style=solid];
m2_402 -> m2_11  [key=2, style=dotted];
m2_402 -> m2_415  [color=darkseagreen4, key=1, label=defaultDeserializer, style=dashed];
m2_402 -> m2_404  [color=darkseagreen4, key=1, label=defaultDeserializer, style=dashed];
m2_402 -> m2_409  [color=darkseagreen4, key=1, label=defaultDeserializer, style=dashed];
m2_402 -> m2_424  [color=darkseagreen4, key=1, label=defaultDeserializer, style=dashed];
m2_403 -> m2_404  [key=0, style=solid];
m2_403 -> m2_12  [key=2, style=dotted];
m2_403 -> m2_13  [key=2, style=dotted];
m2_403 -> m2_15  [key=2, style=dotted];
m2_403 -> m2_414  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_404 -> m2_405  [key=0, style=solid];
m2_404 -> m2_12  [key=2, style=dotted];
m2_404 -> m2_15  [key=2, style=dotted];
m2_404 -> m2_417  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_409 -> m2_410  [key=0, style=solid];
m2_409 -> m2_12  [key=2, style=dotted];
m2_409 -> m2_13  [key=2, style=dotted];
m2_409 -> m2_93  [key=2, style=dotted];
m2_409 -> m2_423  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_406 -> m2_407  [key=0, style=solid];
m2_406 -> m2_73  [key=2, style=dotted];
m2_407 -> m2_408  [key=0, style=solid];
m2_407 -> m2_74  [key=2, style=dotted];
m2_407 -> m2_75  [key=2, style=dotted];
m2_410 -> m2_399  [color=blue, key=0, style=bold];
m2_227 -> m2_883  [key=0, style=solid];
m2_227 -> m2_884  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Nancy.ModelBinding.IBodyDeserializer>", style=dashed];
m2_227 -> m2_885  [color=darkseagreen4, key=1, label="Nancy.ModelBinding.IFieldNameConverter", style=dashed];
m2_227 -> m2_886  [color=darkseagreen4, key=1, label="Nancy.ModelBinding.BindingDefaults", style=dashed];
m2_227 -> m2_492  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<Nancy.ModelBinding.ITypeConverter> typeConverters", style=bold];
m2_227 -> m2_509  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<Nancy.ModelBinding.ITypeConverter> typeConverters", style=bold];
m2_227 -> m2_532  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<Nancy.ModelBinding.ITypeConverter> typeConverters", style=bold];
m2_227 -> m2_553  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<Nancy.ModelBinding.ITypeConverter> typeConverters", style=bold];
m2_227 -> m2_573  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<Nancy.ModelBinding.ITypeConverter> typeConverters", style=bold];
m2_227 -> m2_595  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<Nancy.ModelBinding.ITypeConverter> typeConverters", style=bold];
m2_227 -> m2_604  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<Nancy.ModelBinding.ITypeConverter> typeConverters", style=bold];
m2_227 -> m2_617  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<Nancy.ModelBinding.ITypeConverter> typeConverters", style=bold];
m2_227 -> m2_631  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<Nancy.ModelBinding.ITypeConverter> typeConverters", style=bold];
m2_227 -> m2_3  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<Nancy.ModelBinding.ITypeConverter> typeConverters", style=bold];
m2_227 -> m2_803  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<Nancy.ModelBinding.ITypeConverter> typeConverters", style=bold];
m2_227 -> m2_821  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<Nancy.ModelBinding.ITypeConverter> typeConverters", style=bold];
m2_227 -> m2_835  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<Nancy.ModelBinding.ITypeConverter> typeConverters", style=bold];
m2_227 -> m2_849  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<Nancy.ModelBinding.ITypeConverter> typeConverters", style=bold];
m2_227 -> m2_822  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<Nancy.ModelBinding.IBodyDeserializer> bodyDeserializers", style=bold];
m2_227 -> m2_836  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<Nancy.ModelBinding.IBodyDeserializer> bodyDeserializers", style=bold];
m2_883 -> m2_884  [key=0, style=solid];
m2_883 -> m2_889  [key=2, style=dotted];
m2_883 -> m2_890  [key=2, style=dotted];
m2_883 -> m2_226  [key=2, style=dotted];
m2_883 -> m2_887  [color=darkseagreen4, key=1, label=converters, style=dashed];
m2_884 -> m2_885  [key=0, style=solid];
m2_884 -> m2_887  [color=darkseagreen4, key=1, label=deserializers, style=dashed];
m2_885 -> m2_886  [key=0, style=solid];
m2_885 -> m2_887  [color=darkseagreen4, key=1, label=converter, style=dashed];
m2_886 -> m2_887  [key=0, style=solid];
m2_887 -> m2_888  [key=0, style=solid];
m2_887 -> m2_56  [key=2, style=dotted];
m2_888 -> m2_227  [color=blue, key=0, style=bold];
m2_311 -> m2_312  [key=0, style=solid];
m2_312 -> m2_313  [key=0, style=solid];
m2_312 -> m2_227  [key=2, style=dotted];
m2_312 -> m2_316  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_313 -> m2_314  [key=0, style=solid];
m2_313 -> m2_185  [key=2, style=dotted];
m2_313 -> m2_186  [key=2, style=dotted];
m2_313 -> m2_315  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_313 -> m2_316  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_316 -> m2_317  [key=0, style=solid];
m2_316 -> m2_75  [key=2, style=dotted];
m2_314 -> m2_315  [key=0, style=solid];
m2_315 -> m2_316  [key=0, style=solid];
m2_317 -> m2_318  [key=0, style=solid];
m2_317 -> m2_12  [key=2, style=dotted];
m2_317 -> m2_13  [key=2, style=dotted];
m2_317 -> m2_187  [key=2, style=dotted];
m2_317 -> m2_76  [key=2, style=dotted];
m2_317 -> m2_319  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_318 -> m2_311  [color=blue, key=0, style=bold];
m2_250 -> m2_251  [key=0, style=solid];
m2_251 -> m2_252  [key=0, style=solid];
m2_251 -> m2_226  [key=2, style=dotted];
m2_251 -> m2_227  [key=2, style=dotted];
m2_251 -> m2_256  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_251 -> m2_261  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_252 -> m2_253  [key=0, style=solid];
m2_252 -> m2_185  [key=2, style=dotted];
m2_252 -> m2_186  [key=2, style=dotted];
m2_252 -> m2_254  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_252 -> m2_256  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_252 -> m2_261  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_256 -> m2_257  [key=0, style=solid];
m2_256 -> m2_259  [key=2, style=dotted];
m2_256 -> m2_260  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_253 -> m2_254  [key=0, style=solid];
m2_254 -> m2_255  [key=0, style=solid];
m2_255 -> m2_256  [key=0, style=solid];
m2_255 -> m2_258  [key=2, style=dotted];
m2_255 -> m2_261  [color=darkseagreen4, key=1, label=config, style=dashed];
m2_257 -> m2_250  [color=blue, key=0, style=bold];
m2_834 -> m2_835  [key=0, style=solid];
m2_835 -> m2_836  [key=0, style=solid];
m2_835 -> m2_505  [key=2, style=dotted];
m2_835 -> m2_226  [key=2, style=dotted];
m2_835 -> m2_837  [color=darkseagreen4, key=1, label=typeConverters, style=dashed];
m2_836 -> m2_837  [key=0, style=solid];
m2_836 -> m2_755  [key=2, style=dotted];
m2_837 -> m2_838  [key=0, style=solid];
m2_837 -> m2_227  [key=2, style=dotted];
m2_837 -> m2_843  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_838 -> m2_839  [key=0, style=solid];
m2_838 -> m2_132  [key=2, style=dotted];
m2_838 -> m2_757  [key=2, style=dotted];
m2_843 -> m2_844  [key=0, style=solid];
m2_843 -> m2_258  [key=2, style=dotted];
m2_843 -> m2_75  [key=2, style=dotted];
m2_843 -> m2_845  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_843 -> m2_846  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_839 -> m2_840  [key=0, style=solid];
m2_839 -> m2_758  [key=2, style=dotted];
m2_839 -> m2_841  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_839 -> m2_842  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_839 -> m2_843  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_840 -> m2_841  [key=0, style=solid];
m2_841 -> m2_842  [key=0, style=solid];
m2_842 -> m2_843  [key=0, style=solid];
m2_844 -> m2_845  [key=0, style=solid];
m2_844 -> m2_134  [key=2, style=dotted];
m2_845 -> m2_846  [key=0, style=solid];
m2_845 -> m2_819  [key=2, style=dotted];
m2_846 -> m2_847  [key=0, style=solid];
m2_846 -> m2_134  [key=2, style=dotted];
m2_847 -> m2_834  [color=blue, key=0, style=bold];
m2_675 -> m2_676  [key=0, style=solid];
m2_675 -> m2_678  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_675 -> m2_681  [color=darkseagreen4, key=1, label=double, style=dashed];
m2_676 -> m2_677  [key=0, style=solid];
m2_676 -> m2_227  [key=2, style=dotted];
m2_676 -> m2_680  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_678 -> m2_679  [key=0, style=solid];
m2_678 -> m2_683  [key=2, style=dotted];
m2_681 -> m2_682  [key=0, style=solid];
m2_681 -> m2_134  [key=2, style=dotted];
m2_677 -> m2_678  [key=0, style=solid];
m2_677 -> m2_73  [key=2, style=dotted];
m2_677 -> m2_679  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_677 -> m2_680  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_680 -> m2_681  [key=0, style=solid];
m2_680 -> m2_75  [key=2, style=dotted];
m2_679 -> m2_680  [key=0, style=solid];
m2_682 -> m2_675  [color=blue, key=0, style=bold];
m2_263 -> m2_264  [key=0, style=solid];
m2_264 -> m2_265  [key=0, style=solid];
m2_264 -> m2_226  [key=2, style=dotted];
m2_264 -> m2_227  [key=2, style=dotted];
m2_264 -> m2_269  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_265 -> m2_266  [key=0, style=solid];
m2_265 -> m2_185  [key=2, style=dotted];
m2_265 -> m2_186  [key=2, style=dotted];
m2_265 -> m2_267  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_265 -> m2_269  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_269 -> m2_270  [key=0, style=solid];
m2_269 -> m2_75  [key=2, style=dotted];
m2_266 -> m2_267  [key=0, style=solid];
m2_267 -> m2_268  [key=0, style=solid];
m2_268 -> m2_269  [key=0, style=solid];
m2_268 -> m2_258  [key=2, style=dotted];
m2_270 -> m2_271  [key=0, style=solid];
m2_270 -> m2_134  [key=2, style=dotted];
m2_271 -> m2_263  [color=blue, key=0, style=bold];
m2_684 -> m2_685  [key=0, style=solid];
m2_684 -> m2_687  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_684 -> m2_688  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_684 -> m2_690  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_684 -> m2_691  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_684 -> m2_692  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_685 -> m2_686  [key=0, style=solid];
m2_685 -> m2_227  [key=2, style=dotted];
m2_685 -> m2_689  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_687 -> m2_688  [key=0, style=solid];
m2_687 -> m2_683  [key=2, style=dotted];
m2_688 -> m2_689  [key=0, style=solid];
m2_690 -> m2_691  [key=0, style=solid];
m2_690 -> m2_134  [key=2, style=dotted];
m2_691 -> m2_692  [key=0, style=solid];
m2_691 -> m2_134  [key=2, style=dotted];
m2_692 -> m2_693  [key=0, style=solid];
m2_692 -> m2_134  [key=2, style=dotted];
m2_686 -> m2_687  [key=0, style=solid];
m2_686 -> m2_73  [key=2, style=dotted];
m2_686 -> m2_688  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_686 -> m2_689  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_689 -> m2_690  [key=0, style=solid];
m2_689 -> m2_75  [key=2, style=dotted];
m2_689 -> m2_691  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_689 -> m2_692  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_693 -> m2_684  [color=blue, key=0, style=bold];
m2_132 -> m2_905  [key=0, style=solid];
m2_905 -> m2_906  [key=0, style=solid];
m2_906 -> m2_132  [color=blue, key=0, style=bold];
m2_703 -> m2_704  [key=0, style=solid];
m2_704 -> m2_705  [key=0, style=solid];
m2_704 -> m2_227  [key=2, style=dotted];
m2_704 -> m2_711  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_705 -> m2_706  [key=0, style=solid];
m2_705 -> m2_132  [key=2, style=dotted];
m2_705 -> m2_711  [color=darkseagreen4, key=1, label=existing, style=dashed];
m2_711 -> m2_712  [key=0, style=solid];
m2_711 -> m2_75  [key=2, style=dotted];
m2_711 -> m2_713  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_706 -> m2_707  [key=0, style=solid];
m2_706 -> m2_73  [key=2, style=dotted];
m2_706 -> m2_708  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_706 -> m2_709  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_706 -> m2_710  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_706 -> m2_711  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_707 -> m2_708  [key=0, style=solid];
m2_708 -> m2_709  [key=0, style=solid];
m2_709 -> m2_710  [key=0, style=solid];
m2_710 -> m2_711  [key=0, style=solid];
m2_712 -> m2_713  [key=0, style=solid];
m2_712 -> m2_134  [key=2, style=dotted];
m2_713 -> m2_714  [key=0, style=solid];
m2_713 -> m2_134  [key=2, style=dotted];
m2_714 -> m2_703  [color=blue, key=0, style=bold];
m2_376 -> m2_377  [key=0, style=solid];
m2_377 -> m2_378  [key=0, style=solid];
m2_377 -> m2_11  [key=2, style=dotted];
m2_377 -> m2_388  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
m2_377 -> m2_379  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
m2_377 -> m2_391  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
m2_377 -> m2_380  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
m2_377 -> m2_385  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
m2_377 -> m2_397  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
m2_378 -> m2_379  [key=0, style=solid];
m2_378 -> m2_12  [key=2, style=dotted];
m2_378 -> m2_13  [key=2, style=dotted];
m2_378 -> m2_15  [key=2, style=dotted];
m2_378 -> m2_387  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_379 -> m2_380  [key=0, style=solid];
m2_379 -> m2_12  [key=2, style=dotted];
m2_379 -> m2_13  [key=2, style=dotted];
m2_379 -> m2_15  [key=2, style=dotted];
m2_379 -> m2_390  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_380 -> m2_381  [key=0, style=solid];
m2_380 -> m2_12  [key=2, style=dotted];
m2_380 -> m2_15  [key=2, style=dotted];
m2_380 -> m2_393  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_385 -> m2_386  [key=0, style=solid];
m2_385 -> m2_12  [key=2, style=dotted];
m2_385 -> m2_13  [key=2, style=dotted];
m2_385 -> m2_76  [key=2, style=dotted];
m2_385 -> m2_396  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_381 -> m2_382  [key=0, style=solid];
m2_381 -> m2_227  [key=2, style=dotted];
m2_381 -> m2_384  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_382 -> m2_383  [key=0, style=solid];
m2_382 -> m2_185  [key=2, style=dotted];
m2_382 -> m2_186  [key=2, style=dotted];
m2_382 -> m2_384  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_384 -> m2_385  [key=0, style=solid];
m2_384 -> m2_75  [key=2, style=dotted];
m2_383 -> m2_384  [key=0, style=solid];
m2_386 -> m2_376  [color=blue, key=0, style=bold];
m2_666 -> m2_667  [key=0, style=solid];
m2_667 -> m2_668  [key=0, style=solid];
m2_667 -> m2_227  [key=2, style=dotted];
m2_667 -> m2_671  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_668 -> m2_669  [key=0, style=solid];
m2_668 -> m2_73  [key=2, style=dotted];
m2_668 -> m2_670  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_668 -> m2_671  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_671 -> m2_672  [key=0, style=solid];
m2_671 -> m2_75  [key=2, style=dotted];
m2_671 -> m2_673  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_669 -> m2_670  [key=0, style=solid];
m2_670 -> m2_671  [key=0, style=solid];
m2_672 -> m2_673  [key=0, style=solid];
m2_672 -> m2_134  [key=2, style=dotted];
m2_673 -> m2_674  [key=0, style=solid];
m2_673 -> m2_134  [key=2, style=dotted];
m2_674 -> m2_666  [color=blue, key=0, style=bold];
m2_820 -> m2_821  [key=0, style=solid];
m2_821 -> m2_822  [key=0, style=solid];
m2_821 -> m2_505  [key=2, style=dotted];
m2_821 -> m2_226  [key=2, style=dotted];
m2_821 -> m2_823  [color=darkseagreen4, key=1, label=typeConverters, style=dashed];
m2_822 -> m2_823  [key=0, style=solid];
m2_822 -> m2_755  [key=2, style=dotted];
m2_823 -> m2_824  [key=0, style=solid];
m2_823 -> m2_227  [key=2, style=dotted];
m2_823 -> m2_829  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_824 -> m2_825  [key=0, style=solid];
m2_824 -> m2_132  [key=2, style=dotted];
m2_824 -> m2_757  [key=2, style=dotted];
m2_829 -> m2_830  [key=0, style=solid];
m2_829 -> m2_75  [key=2, style=dotted];
m2_829 -> m2_831  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_829 -> m2_832  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_825 -> m2_826  [key=0, style=solid];
m2_825 -> m2_758  [key=2, style=dotted];
m2_825 -> m2_827  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_825 -> m2_828  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_825 -> m2_829  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_826 -> m2_827  [key=0, style=solid];
m2_827 -> m2_828  [key=0, style=solid];
m2_828 -> m2_829  [key=0, style=solid];
m2_830 -> m2_831  [key=0, style=solid];
m2_830 -> m2_134  [key=2, style=dotted];
m2_831 -> m2_832  [key=0, style=solid];
m2_831 -> m2_134  [key=2, style=dotted];
m2_832 -> m2_833  [key=0, style=solid];
m2_832 -> m2_134  [key=2, style=dotted];
m2_833 -> m2_820  [color=blue, key=0, style=bold];
m2_759 -> m2_760  [key=0, style=solid];
m2_760 -> m2_761  [key=0, style=solid];
m2_760 -> m2_629  [key=2, style=dotted];
m2_760 -> m2_755  [key=2, style=dotted];
m2_760 -> m2_227  [key=2, style=dotted];
m2_760 -> m2_763  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_761 -> m2_762  [key=0, style=solid];
m2_761 -> m2_756  [key=2, style=dotted];
m2_761 -> m2_132  [key=2, style=dotted];
m2_761 -> m2_757  [key=2, style=dotted];
m2_763 -> m2_764  [key=0, style=solid];
m2_763 -> m2_75  [key=2, style=dotted];
m2_763 -> m2_765  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_762 -> m2_763  [key=0, style=solid];
m2_762 -> m2_758  [key=2, style=dotted];
m2_764 -> m2_765  [key=0, style=solid];
m2_764 -> m2_506  [key=2, style=dotted];
m2_764 -> m2_134  [key=2, style=dotted];
m2_765 -> m2_766  [key=0, style=solid];
m2_765 -> m2_507  [key=2, style=dotted];
m2_765 -> m2_134  [key=2, style=dotted];
m2_766 -> m2_759  [color=blue, key=0, style=bold];
m2_462 -> m2_463  [key=0, style=solid];
m2_463 -> m2_464  [key=0, style=solid];
m2_463 -> m2_227  [key=2, style=dotted];
m2_463 -> m2_467  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_464 -> m2_465  [key=0, style=solid];
m2_464 -> m2_73  [key=2, style=dotted];
m2_464 -> m2_466  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_464 -> m2_467  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_467 -> m2_468  [key=0, style=solid];
m2_467 -> m2_75  [key=2, style=dotted];
m2_467 -> m2_469  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_465 -> m2_466  [key=0, style=solid];
m2_466 -> m2_467  [key=0, style=solid];
m2_468 -> m2_469  [key=0, style=solid];
m2_468 -> m2_134  [key=2, style=dotted];
m2_469 -> m2_470  [key=0, style=solid];
m2_469 -> m2_134  [key=2, style=dotted];
m2_470 -> m2_462  [color=blue, key=0, style=bold];
m2_57 -> m2_58  [key=0, style=solid];
m2_58 -> m2_59  [key=0, style=solid];
m2_58 -> m2_35  [key=2, style=dotted];
m2_58 -> m2_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_59 -> m2_60  [key=0, style=solid];
m2_59 -> m2_36  [key=2, style=dotted];
m2_60 -> m2_57  [color=blue, key=0, style=bold];
m2_802 -> m2_803  [key=0, style=solid];
m2_803 -> m2_804  [key=0, style=solid];
m2_803 -> m2_505  [key=2, style=dotted];
m2_803 -> m2_226  [key=2, style=dotted];
m2_804 -> m2_805  [key=0, style=solid];
m2_804 -> m2_629  [key=2, style=dotted];
m2_804 -> m2_775  [key=2, style=dotted];
m2_804 -> m2_227  [key=2, style=dotted];
m2_804 -> m2_807  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_805 -> m2_806  [key=0, style=solid];
m2_805 -> m2_132  [key=2, style=dotted];
m2_805 -> m2_776  [key=2, style=dotted];
m2_807 -> m2_808  [key=0, style=solid];
m2_807 -> m2_75  [key=2, style=dotted];
m2_807 -> m2_809  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_806 -> m2_807  [key=0, style=solid];
m2_806 -> m2_758  [key=2, style=dotted];
m2_808 -> m2_809  [key=0, style=solid];
m2_808 -> m2_602  [key=2, style=dotted];
m2_809 -> m2_810  [key=0, style=solid];
m2_809 -> m2_615  [key=2, style=dotted];
m2_810 -> m2_802  [color=blue, key=0, style=bold];
m2_811 -> m2_812  [key=0, style=solid];
m2_812 -> m2_813  [key=0, style=solid];
m2_812 -> m2_629  [key=2, style=dotted];
m2_812 -> m2_775  [key=2, style=dotted];
m2_812 -> m2_227  [key=2, style=dotted];
m2_812 -> m2_815  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_813 -> m2_814  [key=0, style=solid];
m2_813 -> m2_132  [key=2, style=dotted];
m2_813 -> m2_776  [key=2, style=dotted];
m2_815 -> m2_816  [key=0, style=solid];
m2_815 -> m2_75  [key=2, style=dotted];
m2_815 -> m2_817  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_814 -> m2_815  [key=0, style=solid];
m2_814 -> m2_758  [key=2, style=dotted];
m2_816 -> m2_817  [key=0, style=solid];
m2_816 -> m2_506  [key=2, style=dotted];
m2_816 -> m2_819  [key=2, style=dotted];
m2_817 -> m2_818  [key=0, style=solid];
m2_817 -> m2_507  [key=2, style=dotted];
m2_817 -> m2_819  [key=2, style=dotted];
m2_818 -> m2_811  [color=blue, key=0, style=bold];
m2_49 -> m2_50  [key=0, style=solid];
m2_50 -> m2_51  [key=0, style=solid];
m2_50 -> m2_35  [key=2, style=dotted];
m2_50 -> m2_53  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_51 -> m2_52  [key=0, style=solid];
m2_51 -> m2_36  [key=2, style=dotted];
m2_52 -> m2_49  [color=blue, key=0, style=bold];
m2_777 -> m2_778  [key=0, style=solid];
m2_778 -> m2_779  [key=0, style=solid];
m2_778 -> m2_629  [key=2, style=dotted];
m2_778 -> m2_775  [key=2, style=dotted];
m2_778 -> m2_227  [key=2, style=dotted];
m2_778 -> m2_783  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_779 -> m2_780  [key=0, style=solid];
m2_779 -> m2_756  [key=2, style=dotted];
m2_779 -> m2_132  [key=2, style=dotted];
m2_779 -> m2_776  [key=2, style=dotted];
m2_783 -> m2_784  [key=0, style=solid];
m2_783 -> m2_258  [key=2, style=dotted];
m2_783 -> m2_75  [key=2, style=dotted];
m2_783 -> m2_785  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_783 -> m2_786  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_783 -> m2_787  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_783 -> m2_788  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_780 -> m2_781  [key=0, style=solid];
m2_780 -> m2_758  [key=2, style=dotted];
m2_780 -> m2_783  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_781 -> m2_782  [key=0, style=solid];
m2_781 -> m2_785  [color=darkseagreen4, key=1, label=then, style=dashed];
m2_782 -> m2_783  [key=0, style=solid];
m2_782 -> m2_629  [key=2, style=dotted];
m2_782 -> m2_132  [key=2, style=dotted];
m2_785 -> m2_786  [key=0, style=solid];
m2_785 -> m2_506  [key=2, style=dotted];
m2_785 -> m2_228  [key=2, style=dotted];
m2_784 -> m2_785  [key=0, style=solid];
m2_784 -> m2_506  [key=2, style=dotted];
m2_784 -> m2_134  [key=2, style=dotted];
m2_786 -> m2_787  [key=0, style=solid];
m2_786 -> m2_507  [key=2, style=dotted];
m2_786 -> m2_134  [key=2, style=dotted];
m2_787 -> m2_788  [key=0, style=solid];
m2_787 -> m2_507  [key=2, style=dotted];
m2_787 -> m2_134  [key=2, style=dotted];
m2_788 -> m2_789  [key=0, style=solid];
m2_788 -> m2_507  [key=2, style=dotted];
m2_788 -> m2_134  [key=2, style=dotted];
m2_789 -> m2_777  [color=blue, key=0, style=bold];
m2_358 -> m2_359  [key=0, style=solid];
m2_359 -> m2_360  [key=0, style=solid];
m2_359 -> m2_11  [key=2, style=dotted];
m2_359 -> m2_368  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m2_359 -> m2_361  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m2_359 -> m2_365  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m2_359 -> m2_374  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m2_360 -> m2_361  [key=0, style=solid];
m2_360 -> m2_12  [key=2, style=dotted];
m2_360 -> m2_13  [key=2, style=dotted];
m2_360 -> m2_15  [key=2, style=dotted];
m2_360 -> m2_367  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_361 -> m2_362  [key=0, style=solid];
m2_361 -> m2_12  [key=2, style=dotted];
m2_361 -> m2_15  [key=2, style=dotted];
m2_361 -> m2_370  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_365 -> m2_366  [key=0, style=solid];
m2_365 -> m2_12  [key=2, style=dotted];
m2_365 -> m2_13  [key=2, style=dotted];
m2_365 -> m2_76  [key=2, style=dotted];
m2_365 -> m2_373  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_362 -> m2_363  [key=0, style=solid];
m2_362 -> m2_227  [key=2, style=dotted];
m2_362 -> m2_364  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_363 -> m2_364  [key=0, style=solid];
m2_363 -> m2_73  [key=2, style=dotted];
m2_364 -> m2_365  [key=0, style=solid];
m2_364 -> m2_74  [key=2, style=dotted];
m2_364 -> m2_75  [key=2, style=dotted];
m2_366 -> m2_358  [color=blue, key=0, style=bold];
m2_158 -> m2_159  [key=0, style=solid];
m2_159 -> m2_160  [key=0, style=solid];
m2_159 -> m2_132  [key=2, style=dotted];
m2_159 -> m2_162  [color=darkseagreen4, key=1, label=modelObject, style=dashed];
m2_160 -> m2_161  [key=0, style=solid];
m2_160 -> m2_11  [key=2, style=dotted];
m2_160 -> m2_170  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m2_160 -> m2_162  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m2_160 -> m2_173  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m2_160 -> m2_163  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m2_162 -> m2_163  [key=0, style=solid];
m2_162 -> m2_12  [key=2, style=dotted];
m2_162 -> m2_13  [key=2, style=dotted];
m2_162 -> m2_15  [key=2, style=dotted];
m2_162 -> m2_172  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_161 -> m2_162  [key=0, style=solid];
m2_161 -> m2_12  [key=2, style=dotted];
m2_161 -> m2_13  [key=2, style=dotted];
m2_161 -> m2_15  [key=2, style=dotted];
m2_161 -> m2_169  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_163 -> m2_164  [key=0, style=solid];
m2_163 -> m2_72  [key=2, style=dotted];
m2_163 -> m2_165  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_164 -> m2_165  [key=0, style=solid];
m2_164 -> m2_73  [key=2, style=dotted];
m2_165 -> m2_166  [key=0, style=solid];
m2_165 -> m2_75  [key=2, style=dotted];
m2_165 -> m2_167  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_166 -> m2_167  [key=0, style=solid];
m2_166 -> m2_133  [key=2, style=dotted];
m2_167 -> m2_168  [key=0, style=solid];
m2_167 -> m2_134  [key=2, style=dotted];
m2_168 -> m2_158  [color=blue, key=0, style=bold];
m2_331 -> m2_332  [key=0, style=solid];
m2_332 -> m2_333  [key=0, style=solid];
m2_332 -> m2_226  [key=2, style=dotted];
m2_332 -> m2_227  [key=2, style=dotted];
m2_332 -> m2_340  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_333 -> m2_334  [key=0, style=solid];
m2_333 -> m2_185  [key=2, style=dotted];
m2_333 -> m2_186  [key=2, style=dotted];
m2_333 -> m2_335  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_333 -> m2_338  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_333 -> m2_340  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_333 -> m2_352  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_340 -> m2_341  [key=0, style=solid];
m2_340 -> m2_12  [key=2, style=dotted];
m2_340 -> m2_15  [key=2, style=dotted];
m2_340 -> m2_351  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_334 -> m2_335  [key=0, style=solid];
m2_335 -> m2_336  [key=0, style=solid];
m2_338 -> m2_339  [key=0, style=solid];
m2_338 -> m2_12  [key=2, style=dotted];
m2_338 -> m2_15  [key=2, style=dotted];
m2_338 -> m2_345  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_336 -> m2_337  [key=0, style=solid];
m2_336 -> m2_11  [key=2, style=dotted];
m2_336 -> m2_338  [color=darkseagreen4, key=1, label=fakeModule, style=dashed];
m2_336 -> m2_346  [color=darkseagreen4, key=1, label=fakeModule, style=dashed];
m2_336 -> m2_339  [color=darkseagreen4, key=1, label=fakeModule, style=dashed];
m2_336 -> m2_349  [color=darkseagreen4, key=1, label=fakeModule, style=dashed];
m2_336 -> m2_341  [color=darkseagreen4, key=1, label=fakeModule, style=dashed];
m2_337 -> m2_338  [key=0, style=solid];
m2_337 -> m2_11  [key=2, style=dotted];
m2_337 -> m2_339  [color=darkseagreen4, key=1, label=fakeModelBinderLocator, style=dashed];
m2_337 -> m2_340  [color=darkseagreen4, key=1, label=fakeModelBinderLocator, style=dashed];
m2_337 -> m2_352  [color=darkseagreen4, key=1, label=fakeModelBinderLocator, style=dashed];
m2_339 -> m2_340  [key=0, style=solid];
m2_339 -> m2_12  [key=2, style=dotted];
m2_339 -> m2_15  [key=2, style=dotted];
m2_339 -> m2_348  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_341 -> m2_342  [key=0, style=solid];
m2_341 -> m2_11  [key=2, style=dotted];
m2_341 -> m2_355  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_341 -> m2_343  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_342 -> m2_343  [key=0, style=solid];
m2_342 -> m2_134  [key=2, style=dotted];
m2_343 -> m2_344  [key=0, style=solid];
m2_343 -> m2_134  [key=2, style=dotted];
m2_344 -> m2_331  [color=blue, key=0, style=bold];
m2_747 -> m2_748  [key=0, style=solid];
m2_748 -> m2_749  [key=0, style=solid];
m2_748 -> m2_629  [key=2, style=dotted];
m2_748 -> m2_755  [key=2, style=dotted];
m2_748 -> m2_227  [key=2, style=dotted];
m2_748 -> m2_751  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_749 -> m2_750  [key=0, style=solid];
m2_749 -> m2_756  [key=2, style=dotted];
m2_749 -> m2_132  [key=2, style=dotted];
m2_749 -> m2_757  [key=2, style=dotted];
m2_751 -> m2_752  [key=0, style=solid];
m2_751 -> m2_75  [key=2, style=dotted];
m2_751 -> m2_753  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_750 -> m2_751  [key=0, style=solid];
m2_750 -> m2_758  [key=2, style=dotted];
m2_752 -> m2_753  [key=0, style=solid];
m2_752 -> m2_506  [key=2, style=dotted];
m2_752 -> m2_134  [key=2, style=dotted];
m2_753 -> m2_754  [key=0, style=solid];
m2_753 -> m2_507  [key=2, style=dotted];
m2_753 -> m2_134  [key=2, style=dotted];
m2_754 -> m2_747  [color=blue, key=0, style=bold];
m2_874 -> m2_875  [key=0, style=solid];
m2_875 -> m2_876  [key=0, style=solid];
m2_875 -> m2_227  [key=2, style=dotted];
m2_875 -> m2_878  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_876 -> m2_877  [key=0, style=solid];
m2_876 -> m2_881  [key=2, style=dotted];
m2_876 -> m2_878  [color=darkseagreen4, key=1, label=existing, style=dashed];
m2_876 -> m2_879  [color=darkseagreen4, key=1, label=existing, style=dashed];
m2_878 -> m2_879  [key=0, style=solid];
m2_878 -> m2_75  [key=2, style=dotted];
m2_877 -> m2_878  [key=0, style=solid];
m2_877 -> m2_73  [key=2, style=dotted];
m2_879 -> m2_880  [key=0, style=solid];
m2_879 -> m2_882  [key=2, style=dotted];
m2_880 -> m2_874  [color=blue, key=0, style=bold];
m2_175 -> m2_176  [key=0, style=solid];
m2_176 -> m2_177  [key=0, style=solid];
m2_176 -> m2_11  [key=2, style=dotted];
m2_176 -> m2_189  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
m2_176 -> m2_178  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
m2_176 -> m2_183  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
m2_176 -> m2_193  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
m2_177 -> m2_178  [key=0, style=solid];
m2_177 -> m2_12  [key=2, style=dotted];
m2_177 -> m2_13  [key=2, style=dotted];
m2_177 -> m2_15  [key=2, style=dotted];
m2_177 -> m2_188  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_178 -> m2_179  [key=0, style=solid];
m2_178 -> m2_72  [key=2, style=dotted];
m2_178 -> m2_182  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_183 -> m2_184  [key=0, style=solid];
m2_183 -> m2_12  [key=2, style=dotted];
m2_183 -> m2_13  [key=2, style=dotted];
m2_183 -> m2_187  [key=2, style=dotted];
m2_183 -> m2_76  [key=2, style=dotted];
m2_183 -> m2_192  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_179 -> m2_180  [key=0, style=solid];
m2_179 -> m2_185  [key=2, style=dotted];
m2_179 -> m2_186  [key=2, style=dotted];
m2_179 -> m2_181  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_179 -> m2_182  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_182 -> m2_183  [key=0, style=solid];
m2_182 -> m2_75  [key=2, style=dotted];
m2_180 -> m2_181  [key=0, style=solid];
m2_181 -> m2_182  [key=0, style=solid];
m2_184 -> m2_175  [color=blue, key=0, style=bold];
m2_694 -> m2_695  [key=0, style=solid];
m2_695 -> m2_696  [key=0, style=solid];
m2_695 -> m2_227  [key=2, style=dotted];
m2_695 -> m2_699  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_696 -> m2_697  [key=0, style=solid];
m2_696 -> m2_73  [key=2, style=dotted];
m2_696 -> m2_698  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_696 -> m2_699  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_699 -> m2_700  [key=0, style=solid];
m2_699 -> m2_75  [key=2, style=dotted];
m2_699 -> m2_701  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_697 -> m2_698  [key=0, style=solid];
m2_698 -> m2_699  [key=0, style=solid];
m2_700 -> m2_701  [key=0, style=solid];
m2_700 -> m2_134  [key=2, style=dotted];
m2_701 -> m2_702  [key=0, style=solid];
m2_701 -> m2_134  [key=2, style=dotted];
m2_702 -> m2_694  [color=blue, key=0, style=bold];
m2_459 -> m2_460  [key=0, style=solid];
m2_18 -> m2_19  [key=0, style=solid];
m2_22 -> m2_23  [key=0, style=solid];
m2_25 -> m2_26  [key=0, style=solid];
m2_28 -> m2_29  [key=0, style=solid];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_21  [key=2, style=dotted];
m2_20 -> m2_18  [color=blue, key=0, style=bold];
m2_23 -> m2_24  [key=0, style=solid];
m2_24 -> m2_22  [color=blue, key=0, style=bold];
m2_26 -> m2_27  [key=0, style=solid];
m2_27 -> m2_25  [color=blue, key=0, style=bold];
m2_29 -> m2_30  [key=0, style=solid];
m2_30 -> m2_28  [color=blue, key=0, style=bold];
m2_37 -> m2_38  [key=0, style=solid];
m2_38 -> m2_39  [key=0, style=solid];
m2_38 -> m2_40  [key=2, style=dotted];
m2_38 -> m2_11  [key=2, style=dotted];
m2_38 -> m2_41  [key=2, style=dotted];
m2_39 -> m2_37  [color=blue, key=0, style=bold];
m2_46 -> m2_47  [key=0, style=solid];
m2_47 -> m2_48  [key=0, style=solid];
m2_47 -> m2_40  [key=2, style=dotted];
m2_47 -> m2_11  [key=2, style=dotted];
m2_47 -> m2_41  [key=2, style=dotted];
m2_48 -> m2_46  [color=blue, key=0, style=bold];
m2_53 -> m2_54  [key=0, style=solid];
m2_54 -> m2_55  [key=0, style=solid];
m2_54 -> m2_56  [key=2, style=dotted];
m2_54 -> m2_41  [key=2, style=dotted];
m2_55 -> m2_53  [color=blue, key=0, style=bold];
m2_61 -> m2_62  [key=0, style=solid];
m2_62 -> m2_63  [key=0, style=solid];
m2_62 -> m2_40  [key=2, style=dotted];
m2_62 -> m2_11  [key=2, style=dotted];
m2_63 -> m2_61  [color=blue, key=0, style=bold];
m2_78 -> m2_79  [key=0, style=solid];
m2_78 -> m2_80  [key=2, style=dotted];
m2_82 -> m2_83  [key=0, style=solid];
m2_82 -> m2_84  [key=2, style=dotted];
m2_77 -> m2_78  [key=0, style=solid];
m2_81 -> m2_82  [key=0, style=solid];
m2_79 -> m2_77  [color=blue, key=0, style=bold];
m2_83 -> m2_81  [color=blue, key=0, style=bold];
m2_95 -> m2_96  [key=0, style=solid];
m2_95 -> m2_80  [key=2, style=dotted];
m2_98 -> m2_99  [key=0, style=solid];
m2_98 -> m2_84  [key=2, style=dotted];
m2_94 -> m2_95  [key=0, style=solid];
m2_97 -> m2_98  [key=0, style=solid];
m2_96 -> m2_94  [color=blue, key=0, style=bold];
m2_99 -> m2_97  [color=blue, key=0, style=bold];
m2_108 -> m2_109  [key=0, style=solid];
m2_108 -> m2_80  [key=2, style=dotted];
m2_107 -> m2_108  [key=0, style=solid];
m2_109 -> m2_107  [color=blue, key=0, style=bold];
m2_118 -> m2_119  [key=0, style=solid];
m2_118 -> m2_120  [key=2, style=dotted];
m2_118 -> m2_80  [key=2, style=dotted];
m2_117 -> m2_118  [key=0, style=solid];
m2_119 -> m2_117  [color=blue, key=0, style=bold];
m2_136 -> m2_137  [key=0, style=solid];
m2_136 -> m2_80  [key=2, style=dotted];
m2_139 -> m2_140  [key=0, style=solid];
m2_139 -> m2_84  [key=2, style=dotted];
m2_135 -> m2_136  [key=0, style=solid];
m2_138 -> m2_139  [key=0, style=solid];
m2_137 -> m2_135  [color=blue, key=0, style=bold];
m2_140 -> m2_138  [color=blue, key=0, style=bold];
m2_153 -> m2_154  [key=0, style=solid];
m2_153 -> m2_80  [key=2, style=dotted];
m2_156 -> m2_157  [key=0, style=solid];
m2_156 -> m2_84  [key=2, style=dotted];
m2_152 -> m2_153  [key=0, style=solid];
m2_155 -> m2_156  [key=0, style=solid];
m2_154 -> m2_152  [color=blue, key=0, style=bold];
m2_157 -> m2_155  [color=blue, key=0, style=bold];
m2_170 -> m2_171  [key=0, style=solid];
m2_170 -> m2_80  [key=2, style=dotted];
m2_173 -> m2_174  [key=0, style=solid];
m2_173 -> m2_84  [key=2, style=dotted];
m2_169 -> m2_170  [key=0, style=solid];
m2_172 -> m2_173  [key=0, style=solid];
m2_171 -> m2_169  [color=blue, key=0, style=bold];
m2_174 -> m2_172  [color=blue, key=0, style=bold];
m2_189 -> m2_190  [key=0, style=solid];
m2_189 -> m2_191  [key=2, style=dotted];
m2_193 -> m2_194  [key=0, style=solid];
m2_193 -> m2_191  [key=2, style=dotted];
m2_188 -> m2_189  [key=0, style=solid];
m2_192 -> m2_193  [key=0, style=solid];
m2_190 -> m2_188  [color=blue, key=0, style=bold];
m2_194 -> m2_192  [color=blue, key=0, style=bold];
m2_206 -> m2_207  [key=0, style=solid];
m2_206 -> m2_191  [key=2, style=dotted];
m2_209 -> m2_210  [key=0, style=solid];
m2_209 -> m2_211  [key=2, style=dotted];
m2_213 -> m2_214  [key=0, style=solid];
m2_213 -> m2_211  [key=2, style=dotted];
m2_205 -> m2_206  [key=0, style=solid];
m2_208 -> m2_209  [key=0, style=solid];
m2_212 -> m2_213  [key=0, style=solid];
m2_207 -> m2_205  [color=blue, key=0, style=bold];
m2_210 -> m2_208  [color=blue, key=0, style=bold];
m2_214 -> m2_212  [color=blue, key=0, style=bold];
m2_238 -> m2_239  [key=0, style=solid];
m2_238 -> m2_75  [key=2, style=dotted];
m2_237 -> m2_238  [key=0, style=solid];
m2_240 -> m2_241  [key=0, style=solid];
m2_239 -> m2_237  [color=blue, key=0, style=bold];
m2_241 -> m2_242  [key=0, style=solid];
m2_241 -> m2_243  [key=2, style=dotted];
m2_241 -> m2_244  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_241 -> m2_247  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_242 -> m2_240  [color=blue, key=0, style=bold];
m2_244 -> m2_245  [key=0, style=solid];
m2_247 -> m2_248  [key=0, style=solid];
m2_245 -> m2_246  [key=0, style=solid];
m2_246 -> m2_244  [color=blue, key=0, style=bold];
m2_248 -> m2_249  [key=0, style=solid];
m2_249 -> m2_247  [color=blue, key=0, style=bold];
m2_261 -> m2_262  [key=0, style=solid];
m2_261 -> m2_75  [key=2, style=dotted];
m2_260 -> m2_261  [key=0, style=solid];
m2_262 -> m2_260  [color=blue, key=0, style=bold];
m2_285 -> m2_286  [key=0, style=solid];
m2_285 -> m2_80  [key=2, style=dotted];
m2_288 -> m2_289  [key=0, style=solid];
m2_288 -> m2_84  [key=2, style=dotted];
m2_284 -> m2_285  [key=0, style=solid];
m2_287 -> m2_288  [key=0, style=solid];
m2_290 -> m2_291  [key=0, style=solid];
m2_294 -> m2_295  [key=0, style=solid];
m2_286 -> m2_284  [color=blue, key=0, style=bold];
m2_289 -> m2_287  [color=blue, key=0, style=bold];
m2_291 -> m2_292  [key=0, style=solid];
m2_291 -> m2_11  [key=2, style=dotted];
m2_291 -> m2_293  [key=2, style=dotted];
m2_292 -> m2_290  [color=blue, key=0, style=bold];
m2_295 -> m2_296  [key=0, style=solid];
m2_296 -> m2_294  [color=blue, key=0, style=bold];
m2_309 -> m2_310  [key=0, style=solid];
m2_309 -> m2_120  [key=2, style=dotted];
m2_309 -> m2_80  [key=2, style=dotted];
m2_305 -> m2_306  [key=0, style=solid];
m2_308 -> m2_309  [key=0, style=solid];
m2_306 -> m2_307  [key=0, style=solid];
m2_307 -> m2_305  [color=blue, key=0, style=bold];
m2_310 -> m2_308  [color=blue, key=0, style=bold];
m2_319 -> m2_320  [key=0, style=solid];
m2_320 -> m2_321  [key=0, style=solid];
m2_320 -> m2_21  [key=2, style=dotted];
m2_321 -> m2_319  [color=blue, key=0, style=bold];
m2_352 -> m2_353  [key=0, style=solid];
m2_352 -> m2_354  [key=2, style=dotted];
m2_346 -> m2_347  [key=0, style=solid];
m2_349 -> m2_350  [key=0, style=solid];
m2_345 -> m2_346  [key=0, style=solid];
m2_348 -> m2_349  [key=0, style=solid];
m2_351 -> m2_352  [key=0, style=solid];
m2_355 -> m2_356  [key=0, style=solid];
m2_347 -> m2_345  [color=blue, key=0, style=bold];
m2_350 -> m2_348  [color=blue, key=0, style=bold];
m2_353 -> m2_351  [color=blue, key=0, style=bold];
m2_356 -> m2_357  [key=0, style=solid];
m2_357 -> m2_355  [color=blue, key=0, style=bold];
m2_368 -> m2_369  [key=0, style=solid];
m2_368 -> m2_80  [key=2, style=dotted];
m2_374 -> m2_375  [key=0, style=solid];
m2_374 -> m2_84  [key=2, style=dotted];
m2_367 -> m2_368  [key=0, style=solid];
m2_370 -> m2_371  [key=0, style=solid];
m2_373 -> m2_374  [key=0, style=solid];
m2_369 -> m2_367  [color=blue, key=0, style=bold];
m2_371 -> m2_372  [key=0, style=solid];
m2_372 -> m2_370  [color=blue, key=0, style=bold];
m2_375 -> m2_373  [color=blue, key=0, style=bold];
m2_388 -> m2_389  [key=0, style=solid];
m2_388 -> m2_191  [key=2, style=dotted];
m2_391 -> m2_392  [key=0, style=solid];
m2_391 -> m2_211  [key=2, style=dotted];
m2_397 -> m2_398  [key=0, style=solid];
m2_397 -> m2_211  [key=2, style=dotted];
m2_387 -> m2_388  [key=0, style=solid];
m2_390 -> m2_391  [key=0, style=solid];
m2_393 -> m2_394  [key=0, style=solid];
m2_396 -> m2_397  [key=0, style=solid];
m2_389 -> m2_387  [color=blue, key=0, style=bold];
m2_392 -> m2_390  [color=blue, key=0, style=bold];
m2_394 -> m2_395  [key=0, style=solid];
m2_395 -> m2_393  [color=blue, key=0, style=bold];
m2_398 -> m2_396  [color=blue, key=0, style=bold];
m2_412 -> m2_413  [key=0, style=solid];
m2_412 -> m2_80  [key=2, style=dotted];
m2_421 -> m2_422  [key=0, style=solid];
m2_421 -> m2_84  [key=2, style=dotted];
m2_411 -> m2_412  [key=0, style=solid];
m2_415 -> m2_416  [key=0, style=solid];
m2_415 -> m2_80  [key=2, style=dotted];
m2_424 -> m2_425  [key=0, style=solid];
m2_424 -> m2_84  [key=2, style=dotted];
m2_414 -> m2_415  [key=0, style=solid];
m2_417 -> m2_418  [key=0, style=solid];
m2_420 -> m2_421  [key=0, style=solid];
m2_423 -> m2_424  [key=0, style=solid];
m2_413 -> m2_411  [color=blue, key=0, style=bold];
m2_416 -> m2_414  [color=blue, key=0, style=bold];
m2_418 -> m2_419  [key=0, style=solid];
m2_419 -> m2_417  [color=blue, key=0, style=bold];
m2_422 -> m2_420  [color=blue, key=0, style=bold];
m2_425 -> m2_423  [color=blue, key=0, style=bold];
m2_442 -> m2_443  [key=0, style=solid];
m2_442 -> m2_191  [key=2, style=dotted];
m2_445 -> m2_446  [key=0, style=solid];
m2_445 -> m2_211  [key=2, style=dotted];
m2_457 -> m2_458  [key=0, style=solid];
m2_457 -> m2_211  [key=2, style=dotted];
m2_441 -> m2_442  [key=0, style=solid];
m2_444 -> m2_445  [key=0, style=solid];
m2_448 -> m2_449  [key=0, style=solid];
m2_448 -> m2_191  [key=2, style=dotted];
m2_451 -> m2_452  [key=0, style=solid];
m2_451 -> m2_211  [key=2, style=dotted];
m2_460 -> m2_461  [key=0, style=solid];
m2_460 -> m2_211  [key=2, style=dotted];
m2_447 -> m2_448  [key=0, style=solid];
m2_450 -> m2_451  [key=0, style=solid];
m2_453 -> m2_454  [key=0, style=solid];
m2_456 -> m2_457  [key=0, style=solid];
m2_443 -> m2_441  [color=blue, key=0, style=bold];
m2_446 -> m2_444  [color=blue, key=0, style=bold];
m2_449 -> m2_447  [color=blue, key=0, style=bold];
m2_452 -> m2_450  [color=blue, key=0, style=bold];
m2_454 -> m2_455  [key=0, style=solid];
m2_455 -> m2_453  [color=blue, key=0, style=bold];
m2_458 -> m2_456  [color=blue, key=0, style=bold];
m2_461 -> m2_459  [color=blue, key=0, style=bold];
m2_594 -> m2_595  [key=0, style=solid];
m2_595 -> m2_596  [key=0, style=solid];
m2_595 -> m2_505  [key=2, style=dotted];
m2_595 -> m2_226  [key=2, style=dotted];
m2_596 -> m2_597  [key=0, style=solid];
m2_596 -> m2_227  [key=2, style=dotted];
m2_596 -> m2_599  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_597 -> m2_598  [key=0, style=solid];
m2_597 -> m2_73  [key=2, style=dotted];
m2_597 -> m2_599  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_599 -> m2_600  [key=0, style=solid];
m2_599 -> m2_75  [key=2, style=dotted];
m2_598 -> m2_599  [key=0, style=solid];
m2_600 -> m2_601  [key=0, style=solid];
m2_600 -> m2_602  [key=2, style=dotted];
m2_601 -> m2_594  [color=blue, key=0, style=bold];
m2_64 -> m2_65  [key=0, style=solid];
m2_65 -> m2_66  [key=0, style=solid];
m2_65 -> m2_11  [key=2, style=dotted];
m2_65 -> m2_78  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m2_65 -> m2_67  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m2_65 -> m2_70  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m2_65 -> m2_82  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m2_66 -> m2_67  [key=0, style=solid];
m2_66 -> m2_12  [key=2, style=dotted];
m2_66 -> m2_13  [key=2, style=dotted];
m2_66 -> m2_15  [key=2, style=dotted];
m2_66 -> m2_77  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_67 -> m2_68  [key=0, style=solid];
m2_67 -> m2_72  [key=2, style=dotted];
m2_67 -> m2_69  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_70 -> m2_71  [key=0, style=solid];
m2_70 -> m2_12  [key=2, style=dotted];
m2_70 -> m2_13  [key=2, style=dotted];
m2_70 -> m2_76  [key=2, style=dotted];
m2_70 -> m2_81  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_68 -> m2_69  [key=0, style=solid];
m2_68 -> m2_73  [key=2, style=dotted];
m2_69 -> m2_70  [key=0, style=solid];
m2_69 -> m2_74  [key=2, style=dotted];
m2_69 -> m2_75  [key=2, style=dotted];
m2_71 -> m2_64  [color=blue, key=0, style=bold];
m2_552 -> m2_553  [key=0, style=solid];
m2_553 -> m2_554  [key=0, style=solid];
m2_553 -> m2_505  [key=2, style=dotted];
m2_553 -> m2_226  [key=2, style=dotted];
m2_554 -> m2_555  [key=0, style=solid];
m2_554 -> m2_227  [key=2, style=dotted];
m2_554 -> m2_568  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_555 -> m2_556  [key=0, style=solid];
m2_555 -> m2_73  [key=2, style=dotted];
m2_555 -> m2_557  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_555 -> m2_558  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_555 -> m2_559  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_555 -> m2_560  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_555 -> m2_561  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_555 -> m2_562  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_555 -> m2_563  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_555 -> m2_564  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_555 -> m2_565  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_555 -> m2_566  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_555 -> m2_567  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_555 -> m2_568  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_568 -> m2_569  [key=0, style=solid];
m2_568 -> m2_75  [key=2, style=dotted];
m2_568 -> m2_570  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_556 -> m2_557  [key=0, style=solid];
m2_557 -> m2_558  [key=0, style=solid];
m2_558 -> m2_559  [key=0, style=solid];
m2_559 -> m2_560  [key=0, style=solid];
m2_560 -> m2_561  [key=0, style=solid];
m2_561 -> m2_562  [key=0, style=solid];
m2_562 -> m2_563  [key=0, style=solid];
m2_563 -> m2_564  [key=0, style=solid];
m2_564 -> m2_565  [key=0, style=solid];
m2_565 -> m2_566  [key=0, style=solid];
m2_566 -> m2_567  [key=0, style=solid];
m2_567 -> m2_568  [key=0, style=solid];
m2_569 -> m2_570  [key=0, style=solid];
m2_569 -> m2_506  [key=2, style=dotted];
m2_569 -> m2_134  [key=2, style=dotted];
m2_570 -> m2_571  [key=0, style=solid];
m2_570 -> m2_507  [key=2, style=dotted];
m2_570 -> m2_134  [key=2, style=dotted];
m2_571 -> m2_552  [color=blue, key=0, style=bold];
m2_141 -> m2_142  [key=0, style=solid];
m2_142 -> m2_143  [key=0, style=solid];
m2_142 -> m2_132  [key=2, style=dotted];
m2_142 -> m2_145  [color=darkseagreen4, key=1, label=modelObject, style=dashed];
m2_143 -> m2_144  [key=0, style=solid];
m2_143 -> m2_11  [key=2, style=dotted];
m2_143 -> m2_153  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m2_143 -> m2_145  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m2_143 -> m2_156  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m2_143 -> m2_146  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m2_145 -> m2_146  [key=0, style=solid];
m2_145 -> m2_12  [key=2, style=dotted];
m2_145 -> m2_13  [key=2, style=dotted];
m2_145 -> m2_15  [key=2, style=dotted];
m2_145 -> m2_155  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_144 -> m2_145  [key=0, style=solid];
m2_144 -> m2_12  [key=2, style=dotted];
m2_144 -> m2_13  [key=2, style=dotted];
m2_144 -> m2_15  [key=2, style=dotted];
m2_144 -> m2_152  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_146 -> m2_147  [key=0, style=solid];
m2_146 -> m2_72  [key=2, style=dotted];
m2_146 -> m2_148  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_147 -> m2_148  [key=0, style=solid];
m2_147 -> m2_73  [key=2, style=dotted];
m2_148 -> m2_149  [key=0, style=solid];
m2_148 -> m2_75  [key=2, style=dotted];
m2_148 -> m2_150  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_149 -> m2_150  [key=0, style=solid];
m2_149 -> m2_133  [key=2, style=dotted];
m2_150 -> m2_151  [key=0, style=solid];
m2_150 -> m2_134  [key=2, style=dotted];
m2_151 -> m2_141  [color=blue, key=0, style=bold];
m2_121 -> m2_122  [key=0, style=solid];
m2_122 -> m2_123  [key=0, style=solid];
m2_122 -> m2_132  [key=2, style=dotted];
m2_122 -> m2_125  [color=darkseagreen4, key=1, label=modelObject, style=dashed];
m2_123 -> m2_124  [key=0, style=solid];
m2_123 -> m2_11  [key=2, style=dotted];
m2_123 -> m2_136  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m2_123 -> m2_125  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m2_123 -> m2_139  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m2_123 -> m2_126  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m2_125 -> m2_126  [key=0, style=solid];
m2_125 -> m2_12  [key=2, style=dotted];
m2_125 -> m2_13  [key=2, style=dotted];
m2_125 -> m2_15  [key=2, style=dotted];
m2_125 -> m2_138  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_124 -> m2_125  [key=0, style=solid];
m2_124 -> m2_12  [key=2, style=dotted];
m2_124 -> m2_13  [key=2, style=dotted];
m2_124 -> m2_15  [key=2, style=dotted];
m2_124 -> m2_135  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_126 -> m2_127  [key=0, style=solid];
m2_126 -> m2_72  [key=2, style=dotted];
m2_126 -> m2_128  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_127 -> m2_128  [key=0, style=solid];
m2_127 -> m2_73  [key=2, style=dotted];
m2_128 -> m2_129  [key=0, style=solid];
m2_128 -> m2_75  [key=2, style=dotted];
m2_128 -> m2_130  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_129 -> m2_130  [key=0, style=solid];
m2_129 -> m2_133  [key=2, style=dotted];
m2_130 -> m2_131  [key=0, style=solid];
m2_130 -> m2_134  [key=2, style=dotted];
m2_131 -> m2_121  [color=blue, key=0, style=bold];
m2_229 -> m2_230  [key=0, style=solid];
m2_230 -> m2_231  [key=0, style=solid];
m2_230 -> m2_226  [key=2, style=dotted];
m2_230 -> m2_227  [key=2, style=dotted];
m2_230 -> m2_234  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_230 -> m2_238  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_231 -> m2_232  [key=0, style=solid];
m2_231 -> m2_185  [key=2, style=dotted];
m2_231 -> m2_186  [key=2, style=dotted];
m2_231 -> m2_233  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_231 -> m2_234  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_231 -> m2_238  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_234 -> m2_235  [key=0, style=solid];
m2_234 -> m2_11  [key=2, style=dotted];
m2_234 -> m2_236  [key=2, style=dotted];
m2_234 -> m2_237  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_234 -> m2_240  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_232 -> m2_233  [key=0, style=solid];
m2_233 -> m2_234  [key=0, style=solid];
m2_235 -> m2_229  [color=blue, key=0, style=bold];
m2_715 -> m2_716  [key=0, style=solid];
m2_716 -> m2_717  [key=0, style=solid];
m2_716 -> m2_227  [key=2, style=dotted];
m2_716 -> m2_723  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_717 -> m2_718  [key=0, style=solid];
m2_717 -> m2_132  [key=2, style=dotted];
m2_717 -> m2_723  [color=darkseagreen4, key=1, label=existing, style=dashed];
m2_723 -> m2_724  [key=0, style=solid];
m2_723 -> m2_75  [key=2, style=dotted];
m2_723 -> m2_725  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_718 -> m2_719  [key=0, style=solid];
m2_718 -> m2_73  [key=2, style=dotted];
m2_718 -> m2_720  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_718 -> m2_721  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_718 -> m2_722  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_718 -> m2_723  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_719 -> m2_720  [key=0, style=solid];
m2_720 -> m2_721  [key=0, style=solid];
m2_721 -> m2_722  [key=0, style=solid];
m2_722 -> m2_723  [key=0, style=solid];
m2_724 -> m2_725  [key=0, style=solid];
m2_724 -> m2_134  [key=2, style=dotted];
m2_725 -> m2_726  [key=0, style=solid];
m2_725 -> m2_134  [key=2, style=dotted];
m2_726 -> m2_715  [color=blue, key=0, style=bold];
m2_737 -> m2_738  [key=0, style=solid];
m2_738 -> m2_739  [key=0, style=solid];
m2_738 -> m2_227  [key=2, style=dotted];
m2_738 -> m2_743  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_739 -> m2_740  [key=0, style=solid];
m2_739 -> m2_132  [key=2, style=dotted];
m2_739 -> m2_743  [color=darkseagreen4, key=1, label=existing, style=dashed];
m2_743 -> m2_744  [key=0, style=solid];
m2_743 -> m2_75  [key=2, style=dotted];
m2_743 -> m2_745  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_740 -> m2_741  [key=0, style=solid];
m2_740 -> m2_73  [key=2, style=dotted];
m2_740 -> m2_742  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_740 -> m2_743  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_741 -> m2_742  [key=0, style=solid];
m2_742 -> m2_743  [key=0, style=solid];
m2_744 -> m2_745  [key=0, style=solid];
m2_744 -> m2_134  [key=2, style=dotted];
m2_745 -> m2_746  [key=0, style=solid];
m2_745 -> m2_134  [key=2, style=dotted];
m2_746 -> m2_737  [color=blue, key=0, style=bold];
m2_630 -> m2_631  [key=0, style=solid];
m2_631 -> m2_632  [key=0, style=solid];
m2_631 -> m2_505  [key=2, style=dotted];
m2_631 -> m2_226  [key=2, style=dotted];
m2_632 -> m2_633  [key=0, style=solid];
m2_632 -> m2_227  [key=2, style=dotted];
m2_632 -> m2_636  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_633 -> m2_634  [key=0, style=solid];
m2_633 -> m2_73  [key=2, style=dotted];
m2_633 -> m2_635  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_633 -> m2_636  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_636 -> m2_637  [key=0, style=solid];
m2_636 -> m2_75  [key=2, style=dotted];
m2_636 -> m2_638  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_636 -> m2_639  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_636 -> m2_640  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_634 -> m2_635  [key=0, style=solid];
m2_635 -> m2_636  [key=0, style=solid];
m2_637 -> m2_638  [key=0, style=solid];
m2_637 -> m2_506  [key=2, style=dotted];
m2_637 -> m2_602  [key=2, style=dotted];
m2_638 -> m2_639  [key=0, style=solid];
m2_638 -> m2_506  [key=2, style=dotted];
m2_638 -> m2_615  [key=2, style=dotted];
m2_639 -> m2_640  [key=0, style=solid];
m2_639 -> m2_507  [key=2, style=dotted];
m2_639 -> m2_602  [key=2, style=dotted];
m2_640 -> m2_641  [key=0, style=solid];
m2_640 -> m2_507  [key=2, style=dotted];
m2_640 -> m2_615  [key=2, style=dotted];
m2_641 -> m2_630  [color=blue, key=0, style=bold];
m2_31 -> m2_32  [key=0, style=solid];
m2_32 -> m2_33  [key=0, style=solid];
m2_32 -> m2_35  [key=2, style=dotted];
m2_32 -> m2_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_33 -> m2_34  [key=0, style=solid];
m2_33 -> m2_36  [key=2, style=dotted];
m2_34 -> m2_31  [color=blue, key=0, style=bold];
m2_642 -> m2_643  [key=0, style=solid];
m2_643 -> m2_644  [key=0, style=solid];
m2_643 -> m2_227  [key=2, style=dotted];
m2_643 -> m2_651  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_644 -> m2_645  [key=0, style=solid];
m2_644 -> m2_73  [key=2, style=dotted];
m2_644 -> m2_646  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_644 -> m2_647  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_644 -> m2_648  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_644 -> m2_649  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_644 -> m2_650  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_644 -> m2_651  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_651 -> m2_652  [key=0, style=solid];
m2_651 -> m2_75  [key=2, style=dotted];
m2_651 -> m2_653  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_645 -> m2_646  [key=0, style=solid];
m2_646 -> m2_647  [key=0, style=solid];
m2_647 -> m2_648  [key=0, style=solid];
m2_648 -> m2_649  [key=0, style=solid];
m2_649 -> m2_650  [key=0, style=solid];
m2_650 -> m2_651  [key=0, style=solid];
m2_652 -> m2_653  [key=0, style=solid];
m2_652 -> m2_134  [key=2, style=dotted];
m2_653 -> m2_654  [key=0, style=solid];
m2_653 -> m2_134  [key=2, style=dotted];
m2_654 -> m2_642  [color=blue, key=0, style=bold];
m2_480 -> m2_481  [key=0, style=solid];
m2_481 -> m2_482  [key=0, style=solid];
m2_481 -> m2_227  [key=2, style=dotted];
m2_481 -> m2_487  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_482 -> m2_483  [key=0, style=solid];
m2_482 -> m2_73  [key=2, style=dotted];
m2_482 -> m2_484  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_482 -> m2_485  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_482 -> m2_486  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_482 -> m2_487  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_487 -> m2_488  [key=0, style=solid];
m2_487 -> m2_75  [key=2, style=dotted];
m2_487 -> m2_489  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_483 -> m2_484  [key=0, style=solid];
m2_484 -> m2_485  [key=0, style=solid];
m2_485 -> m2_486  [key=0, style=solid];
m2_486 -> m2_487  [key=0, style=solid];
m2_488 -> m2_489  [key=0, style=solid];
m2_488 -> m2_134  [key=2, style=dotted];
m2_489 -> m2_490  [key=0, style=solid];
m2_489 -> m2_134  [key=2, style=dotted];
m2_490 -> m2_480  [color=blue, key=0, style=bold];
m2_790 -> m2_791  [key=0, style=solid];
m2_791 -> m2_792  [key=0, style=solid];
m2_791 -> m2_629  [key=2, style=dotted];
m2_791 -> m2_755  [key=2, style=dotted];
m2_791 -> m2_227  [key=2, style=dotted];
m2_791 -> m2_796  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_792 -> m2_793  [key=0, style=solid];
m2_792 -> m2_132  [key=2, style=dotted];
m2_792 -> m2_757  [key=2, style=dotted];
m2_796 -> m2_797  [key=0, style=solid];
m2_796 -> m2_258  [key=2, style=dotted];
m2_796 -> m2_75  [key=2, style=dotted];
m2_796 -> m2_798  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_796 -> m2_799  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_796 -> m2_800  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_793 -> m2_794  [key=0, style=solid];
m2_793 -> m2_758  [key=2, style=dotted];
m2_793 -> m2_796  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_794 -> m2_795  [key=0, style=solid];
m2_794 -> m2_798  [color=darkseagreen4, key=1, label=then, style=dashed];
m2_795 -> m2_796  [key=0, style=solid];
m2_795 -> m2_132  [key=2, style=dotted];
m2_798 -> m2_799  [key=0, style=solid];
m2_798 -> m2_228  [key=2, style=dotted];
m2_797 -> m2_798  [key=0, style=solid];
m2_797 -> m2_134  [key=2, style=dotted];
m2_799 -> m2_800  [key=0, style=solid];
m2_799 -> m2_134  [key=2, style=dotted];
m2_800 -> m2_801  [key=0, style=solid];
m2_800 -> m2_134  [key=2, style=dotted];
m2_801 -> m2_790  [color=blue, key=0, style=bold];
m2_85 -> m2_86  [key=0, style=solid];
m2_86 -> m2_87  [key=0, style=solid];
m2_86 -> m2_11  [key=2, style=dotted];
m2_86 -> m2_95  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m2_86 -> m2_88  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m2_86 -> m2_91  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m2_86 -> m2_98  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m2_87 -> m2_88  [key=0, style=solid];
m2_87 -> m2_12  [key=2, style=dotted];
m2_87 -> m2_13  [key=2, style=dotted];
m2_87 -> m2_15  [key=2, style=dotted];
m2_87 -> m2_94  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_88 -> m2_89  [key=0, style=solid];
m2_88 -> m2_72  [key=2, style=dotted];
m2_88 -> m2_90  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_91 -> m2_92  [key=0, style=solid];
m2_91 -> m2_12  [key=2, style=dotted];
m2_91 -> m2_13  [key=2, style=dotted];
m2_91 -> m2_93  [key=2, style=dotted];
m2_91 -> m2_97  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_89 -> m2_90  [key=0, style=solid];
m2_89 -> m2_73  [key=2, style=dotted];
m2_90 -> m2_91  [key=0, style=solid];
m2_90 -> m2_74  [key=2, style=dotted];
m2_90 -> m2_75  [key=2, style=dotted];
m2_92 -> m2_85  [color=blue, key=0, style=bold];
m2_531 -> m2_532  [key=0, style=solid];
m2_532 -> m2_533  [key=0, style=solid];
m2_532 -> m2_505  [key=2, style=dotted];
m2_532 -> m2_226  [key=2, style=dotted];
m2_533 -> m2_534  [key=0, style=solid];
m2_533 -> m2_227  [key=2, style=dotted];
m2_533 -> m2_548  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_534 -> m2_535  [key=0, style=solid];
m2_534 -> m2_73  [key=2, style=dotted];
m2_534 -> m2_536  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_534 -> m2_537  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_534 -> m2_538  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_534 -> m2_539  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_534 -> m2_540  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_534 -> m2_541  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_534 -> m2_542  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_534 -> m2_543  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_534 -> m2_544  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_534 -> m2_545  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_534 -> m2_546  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_534 -> m2_547  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_534 -> m2_548  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_548 -> m2_549  [key=0, style=solid];
m2_548 -> m2_75  [key=2, style=dotted];
m2_548 -> m2_550  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_535 -> m2_536  [key=0, style=solid];
m2_536 -> m2_537  [key=0, style=solid];
m2_537 -> m2_538  [key=0, style=solid];
m2_538 -> m2_539  [key=0, style=solid];
m2_539 -> m2_540  [key=0, style=solid];
m2_540 -> m2_541  [key=0, style=solid];
m2_541 -> m2_542  [key=0, style=solid];
m2_542 -> m2_543  [key=0, style=solid];
m2_543 -> m2_544  [key=0, style=solid];
m2_544 -> m2_545  [key=0, style=solid];
m2_545 -> m2_546  [key=0, style=solid];
m2_546 -> m2_547  [key=0, style=solid];
m2_547 -> m2_548  [key=0, style=solid];
m2_549 -> m2_550  [key=0, style=solid];
m2_549 -> m2_506  [key=2, style=dotted];
m2_549 -> m2_134  [key=2, style=dotted];
m2_550 -> m2_551  [key=0, style=solid];
m2_550 -> m2_507  [key=2, style=dotted];
m2_550 -> m2_134  [key=2, style=dotted];
m2_551 -> m2_531  [color=blue, key=0, style=bold];
m2_860 -> m2_861  [key=0, style=solid];
m2_861 -> m2_862  [key=0, style=solid];
m2_861 -> m2_629  [key=2, style=dotted];
m2_861 -> m2_755  [key=2, style=dotted];
m2_861 -> m2_227  [key=2, style=dotted];
m2_861 -> m2_867  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_862 -> m2_863  [key=0, style=solid];
m2_862 -> m2_132  [key=2, style=dotted];
m2_862 -> m2_873  [key=2, style=dotted];
m2_862 -> m2_757  [key=2, style=dotted];
m2_867 -> m2_868  [key=0, style=solid];
m2_867 -> m2_75  [key=2, style=dotted];
m2_867 -> m2_869  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_867 -> m2_870  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_867 -> m2_871  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_863 -> m2_864  [key=0, style=solid];
m2_863 -> m2_758  [key=2, style=dotted];
m2_863 -> m2_865  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_863 -> m2_866  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_863 -> m2_867  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_864 -> m2_865  [key=0, style=solid];
m2_865 -> m2_866  [key=0, style=solid];
m2_866 -> m2_867  [key=0, style=solid];
m2_868 -> m2_869  [key=0, style=solid];
m2_868 -> m2_134  [key=2, style=dotted];
m2_869 -> m2_870  [key=0, style=solid];
m2_869 -> m2_134  [key=2, style=dotted];
m2_870 -> m2_871  [key=0, style=solid];
m2_870 -> m2_873  [key=2, style=dotted];
m2_870 -> m2_228  [key=2, style=dotted];
m2_871 -> m2_872  [key=0, style=solid];
m2_871 -> m2_134  [key=2, style=dotted];
m2_872 -> m2_860  [color=blue, key=0, style=bold];
m2_42 -> m2_43  [key=0, style=solid];
m2_43 -> m2_44  [key=0, style=solid];
m2_43 -> m2_35  [key=2, style=dotted];
m2_43 -> m2_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_44 -> m2_45  [key=0, style=solid];
m2_44 -> m2_36  [key=2, style=dotted];
m2_45 -> m2_42  [color=blue, key=0, style=bold];
m2_215 -> m2_216  [key=0, style=solid];
m2_216 -> m2_217  [key=0, style=solid];
m2_216 -> m2_226  [key=2, style=dotted];
m2_216 -> m2_227  [key=2, style=dotted];
m2_216 -> m2_221  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_217 -> m2_218  [key=0, style=solid];
m2_217 -> m2_185  [key=2, style=dotted];
m2_217 -> m2_186  [key=2, style=dotted];
m2_217 -> m2_219  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_217 -> m2_220  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_217 -> m2_221  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_221 -> m2_222  [key=0, style=solid];
m2_221 -> m2_75  [key=2, style=dotted];
m2_221 -> m2_223  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_221 -> m2_224  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_218 -> m2_219  [key=0, style=solid];
m2_219 -> m2_220  [key=0, style=solid];
m2_220 -> m2_221  [key=0, style=solid];
m2_222 -> m2_223  [key=0, style=solid];
m2_222 -> m2_134  [key=2, style=dotted];
m2_223 -> m2_224  [key=0, style=solid];
m2_223 -> m2_134  [key=2, style=dotted];
m2_224 -> m2_225  [key=0, style=solid];
m2_224 -> m2_228  [key=2, style=dotted];
m2_225 -> m2_215  [color=blue, key=0, style=bold];
m2_272 -> m2_273  [key=0, style=solid];
m2_273 -> m2_274  [key=0, style=solid];
m2_273 -> m2_226  [key=2, style=dotted];
m2_273 -> m2_227  [key=2, style=dotted];
m2_273 -> m2_280  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_274 -> m2_275  [key=0, style=solid];
m2_274 -> m2_73  [key=2, style=dotted];
m2_274 -> m2_280  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_280 -> m2_281  [color=red, key=0, style=solid];
m2_280 -> m2_75  [key=2, style=dotted];
m2_275 -> m2_276  [key=0, style=solid];
m2_275 -> m2_329  [color=darkorchid, key=3, label="Local variable int validProperties", style=bold];
m2_276 -> m2_277  [key=0, style=solid];
m2_276 -> m2_11  [key=2, style=dotted];
m2_276 -> m2_285  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m2_276 -> m2_278  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m2_276 -> m2_288  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m2_276 -> m2_279  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m2_277 -> m2_278  [key=0, style=solid];
m2_277 -> m2_12  [key=2, style=dotted];
m2_277 -> m2_15  [key=2, style=dotted];
m2_277 -> m2_284  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_278 -> m2_279  [key=0, style=solid];
m2_278 -> m2_12  [key=2, style=dotted];
m2_278 -> m2_283  [key=2, style=dotted];
m2_278 -> m2_132  [key=2, style=dotted];
m2_278 -> m2_15  [key=2, style=dotted];
m2_278 -> m2_287  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_278 -> m2_290  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_278 -> m2_281  [color=red, key=1, label=validProperties, style=dashed];
m2_279 -> m2_280  [key=0, style=solid];
m2_279 -> m2_12  [key=2, style=dotted];
m2_279 -> m2_15  [key=2, style=dotted];
m2_279 -> m2_294  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_281 -> m2_282  [color=red, key=0, style=solid];
m2_281 -> m2_134  [color=red, key=2, style=dotted];
m2_282 -> m2_272  [color=blue, key=0, style=bold];
m2_426 -> m2_427  [key=0, style=solid];
m2_427 -> m2_428  [key=0, style=solid];
m2_427 -> m2_11  [key=2, style=dotted];
m2_427 -> m2_442  [color=darkseagreen4, key=1, label=userTypeConverter, style=dashed];
m2_427 -> m2_429  [color=darkseagreen4, key=1, label=userTypeConverter, style=dashed];
m2_427 -> m2_445  [color=darkseagreen4, key=1, label=userTypeConverter, style=dashed];
m2_427 -> m2_434  [color=darkseagreen4, key=1, label=userTypeConverter, style=dashed];
m2_427 -> m2_438  [color=darkseagreen4, key=1, label=userTypeConverter, style=dashed];
m2_427 -> m2_457  [color=darkseagreen4, key=1, label=userTypeConverter, style=dashed];
m2_428 -> m2_429  [key=0, style=solid];
m2_428 -> m2_12  [key=2, style=dotted];
m2_428 -> m2_13  [key=2, style=dotted];
m2_428 -> m2_15  [key=2, style=dotted];
m2_428 -> m2_441  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_429 -> m2_430  [key=0, style=solid];
m2_429 -> m2_12  [key=2, style=dotted];
m2_429 -> m2_13  [key=2, style=dotted];
m2_429 -> m2_15  [key=2, style=dotted];
m2_429 -> m2_444  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_434 -> m2_435  [key=0, style=solid];
m2_434 -> m2_72  [key=2, style=dotted];
m2_434 -> m2_437  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_438 -> m2_439  [key=0, style=solid];
m2_438 -> m2_12  [key=2, style=dotted];
m2_438 -> m2_13  [key=2, style=dotted];
m2_438 -> m2_76  [key=2, style=dotted];
m2_438 -> m2_456  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_430 -> m2_431  [key=0, style=solid];
m2_430 -> m2_11  [key=2, style=dotted];
m2_430 -> m2_448  [color=darkseagreen4, key=1, label=defaultTypeConverter, style=dashed];
m2_430 -> m2_432  [color=darkseagreen4, key=1, label=defaultTypeConverter, style=dashed];
m2_430 -> m2_451  [color=darkseagreen4, key=1, label=defaultTypeConverter, style=dashed];
m2_430 -> m2_433  [color=darkseagreen4, key=1, label=defaultTypeConverter, style=dashed];
m2_430 -> m2_439  [color=darkseagreen4, key=1, label=defaultTypeConverter, style=dashed];
m2_430 -> m2_460  [color=darkseagreen4, key=1, label=defaultTypeConverter, style=dashed];
m2_431 -> m2_432  [key=0, style=solid];
m2_431 -> m2_12  [key=2, style=dotted];
m2_431 -> m2_13  [key=2, style=dotted];
m2_431 -> m2_15  [key=2, style=dotted];
m2_431 -> m2_447  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_432 -> m2_433  [key=0, style=solid];
m2_432 -> m2_12  [key=2, style=dotted];
m2_432 -> m2_13  [key=2, style=dotted];
m2_432 -> m2_15  [key=2, style=dotted];
m2_432 -> m2_450  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_433 -> m2_434  [key=0, style=solid];
m2_433 -> m2_12  [key=2, style=dotted];
m2_433 -> m2_15  [key=2, style=dotted];
m2_433 -> m2_453  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_439 -> m2_440  [key=0, style=solid];
m2_439 -> m2_12  [key=2, style=dotted];
m2_439 -> m2_13  [key=2, style=dotted];
m2_439 -> m2_93  [key=2, style=dotted];
m2_439 -> m2_459  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_435 -> m2_436  [key=0, style=solid];
m2_435 -> m2_185  [key=2, style=dotted];
m2_435 -> m2_186  [key=2, style=dotted];
m2_435 -> m2_437  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_437 -> m2_438  [key=0, style=solid];
m2_437 -> m2_75  [key=2, style=dotted];
m2_436 -> m2_437  [key=0, style=solid];
m2_440 -> m2_426  [color=blue, key=0, style=bold];
m2_848 -> m2_849  [key=0, style=solid];
m2_849 -> m2_850  [key=0, style=solid];
m2_849 -> m2_505  [key=2, style=dotted];
m2_849 -> m2_226  [key=2, style=dotted];
m2_850 -> m2_851  [key=0, style=solid];
m2_850 -> m2_227  [key=2, style=dotted];
m2_850 -> m2_855  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_851 -> m2_852  [key=0, style=solid];
m2_851 -> m2_73  [key=2, style=dotted];
m2_851 -> m2_853  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_851 -> m2_854  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_851 -> m2_855  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_855 -> m2_856  [key=0, style=solid];
m2_855 -> m2_258  [key=2, style=dotted];
m2_855 -> m2_75  [key=2, style=dotted];
m2_855 -> m2_857  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_855 -> m2_858  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_852 -> m2_853  [key=0, style=solid];
m2_853 -> m2_854  [key=0, style=solid];
m2_854 -> m2_855  [key=0, style=solid];
m2_856 -> m2_857  [key=0, style=solid];
m2_856 -> m2_134  [key=2, style=dotted];
m2_857 -> m2_858  [key=0, style=solid];
m2_857 -> m2_134  [key=2, style=dotted];
m2_858 -> m2_859  [key=0, style=solid];
m2_858 -> m2_134  [key=2, style=dotted];
m2_859 -> m2_848  [color=blue, key=0, style=bold];
m2_727 -> m2_728  [key=0, style=solid];
m2_728 -> m2_729  [key=0, style=solid];
m2_728 -> m2_227  [key=2, style=dotted];
m2_728 -> m2_733  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_729 -> m2_730  [key=0, style=solid];
m2_729 -> m2_132  [key=2, style=dotted];
m2_729 -> m2_733  [color=darkseagreen4, key=1, label=existing, style=dashed];
m2_733 -> m2_734  [key=0, style=solid];
m2_733 -> m2_75  [key=2, style=dotted];
m2_733 -> m2_735  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_730 -> m2_731  [key=0, style=solid];
m2_730 -> m2_73  [key=2, style=dotted];
m2_730 -> m2_732  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_730 -> m2_733  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_731 -> m2_732  [key=0, style=solid];
m2_732 -> m2_733  [key=0, style=solid];
m2_734 -> m2_735  [key=0, style=solid];
m2_734 -> m2_134  [key=2, style=dotted];
m2_735 -> m2_736  [key=0, style=solid];
m2_735 -> m2_134  [key=2, style=dotted];
m2_736 -> m2_727  [color=blue, key=0, style=bold];
m2_110 -> m2_111  [key=0, style=solid];
m2_111 -> m2_112  [key=0, style=solid];
m2_111 -> m2_11  [key=2, style=dotted];
m2_111 -> m2_115  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m2_111 -> m2_118  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m2_112 -> m2_113  [key=0, style=solid];
m2_112 -> m2_72  [key=2, style=dotted];
m2_112 -> m2_114  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_115 -> m2_116  [key=0, style=solid];
m2_115 -> m2_12  [key=2, style=dotted];
m2_115 -> m2_76  [key=2, style=dotted];
m2_115 -> m2_117  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_113 -> m2_114  [key=0, style=solid];
m2_113 -> m2_73  [key=2, style=dotted];
m2_114 -> m2_115  [key=0, style=solid];
m2_114 -> m2_74  [key=2, style=dotted];
m2_114 -> m2_75  [key=2, style=dotted];
m2_116 -> m2_110  [color=blue, key=0, style=bold];
m2_603 -> m2_604  [key=0, style=solid];
m2_604 -> m2_605  [key=0, style=solid];
m2_604 -> m2_505  [key=2, style=dotted];
m2_604 -> m2_226  [key=2, style=dotted];
m2_605 -> m2_606  [key=0, style=solid];
m2_605 -> m2_227  [key=2, style=dotted];
m2_605 -> m2_609  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_606 -> m2_607  [key=0, style=solid];
m2_606 -> m2_73  [key=2, style=dotted];
m2_606 -> m2_608  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_606 -> m2_609  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_609 -> m2_610  [key=0, style=solid];
m2_609 -> m2_75  [key=2, style=dotted];
m2_609 -> m2_611  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_609 -> m2_612  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_609 -> m2_613  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_607 -> m2_608  [key=0, style=solid];
m2_608 -> m2_609  [key=0, style=solid];
m2_610 -> m2_611  [key=0, style=solid];
m2_610 -> m2_506  [key=2, style=dotted];
m2_610 -> m2_602  [key=2, style=dotted];
m2_611 -> m2_612  [key=0, style=solid];
m2_611 -> m2_506  [key=2, style=dotted];
m2_611 -> m2_615  [key=2, style=dotted];
m2_612 -> m2_613  [key=0, style=solid];
m2_612 -> m2_507  [key=2, style=dotted];
m2_612 -> m2_602  [key=2, style=dotted];
m2_613 -> m2_614  [key=0, style=solid];
m2_613 -> m2_507  [key=2, style=dotted];
m2_613 -> m2_615  [key=2, style=dotted];
m2_614 -> m2_603  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_10  [key=2, style=dotted];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_11  [key=2, style=dotted];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_12  [key=2, style=dotted];
m2_3 -> m2_13  [key=2, style=dotted];
m2_3 -> m2_14  [key=2, style=dotted];
m2_3 -> m2_18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_3 -> m2_22  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_11  [key=2, style=dotted];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_12  [key=2, style=dotted];
m2_5 -> m2_15  [key=2, style=dotted];
m2_5 -> m2_25  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_12  [key=2, style=dotted];
m2_6 -> m2_15  [key=2, style=dotted];
m2_6 -> m2_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> m2_16  [key=2, style=dotted];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_17  [key=2, style=dotted];
m2_9 -> m2_0  [color=blue, key=0, style=bold];
m2_195 -> m2_196  [key=0, style=solid];
m2_196 -> m2_197  [key=0, style=solid];
m2_196 -> m2_11  [key=2, style=dotted];
m2_196 -> m2_206  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
m2_196 -> m2_198  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
m2_196 -> m2_209  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
m2_196 -> m2_199  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
m2_196 -> m2_203  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
m2_196 -> m2_213  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
m2_197 -> m2_198  [key=0, style=solid];
m2_197 -> m2_12  [key=2, style=dotted];
m2_197 -> m2_13  [key=2, style=dotted];
m2_197 -> m2_15  [key=2, style=dotted];
m2_197 -> m2_205  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_198 -> m2_199  [key=0, style=solid];
m2_198 -> m2_12  [key=2, style=dotted];
m2_198 -> m2_13  [key=2, style=dotted];
m2_198 -> m2_15  [key=2, style=dotted];
m2_198 -> m2_208  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_199 -> m2_200  [key=0, style=solid];
m2_199 -> m2_72  [key=2, style=dotted];
m2_199 -> m2_202  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_203 -> m2_204  [key=0, style=solid];
m2_203 -> m2_12  [key=2, style=dotted];
m2_203 -> m2_13  [key=2, style=dotted];
m2_203 -> m2_76  [key=2, style=dotted];
m2_203 -> m2_212  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_200 -> m2_201  [key=0, style=solid];
m2_200 -> m2_185  [key=2, style=dotted];
m2_200 -> m2_186  [key=2, style=dotted];
m2_200 -> m2_202  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_202 -> m2_203  [key=0, style=solid];
m2_202 -> m2_75  [key=2, style=dotted];
m2_201 -> m2_202  [key=0, style=solid];
m2_204 -> m2_195  [color=blue, key=0, style=bold];
m2_616 -> m2_617  [key=0, style=solid];
m2_617 -> m2_618  [key=0, style=solid];
m2_617 -> m2_505  [key=2, style=dotted];
m2_617 -> m2_226  [key=2, style=dotted];
m2_618 -> m2_619  [key=0, style=solid];
m2_618 -> m2_227  [key=2, style=dotted];
m2_618 -> m2_622  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_619 -> m2_620  [key=0, style=solid];
m2_619 -> m2_73  [key=2, style=dotted];
m2_619 -> m2_621  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_619 -> m2_622  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_622 -> m2_623  [key=0, style=solid];
m2_622 -> m2_629  [key=2, style=dotted];
m2_622 -> m2_132  [key=2, style=dotted];
m2_622 -> m2_258  [key=2, style=dotted];
m2_622 -> m2_75  [key=2, style=dotted];
m2_622 -> m2_624  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_622 -> m2_625  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_622 -> m2_626  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_622 -> m2_627  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_620 -> m2_621  [key=0, style=solid];
m2_621 -> m2_622  [key=0, style=solid];
m2_623 -> m2_624  [key=0, style=solid];
m2_623 -> m2_506  [key=2, style=dotted];
m2_623 -> m2_134  [key=2, style=dotted];
m2_624 -> m2_625  [key=0, style=solid];
m2_624 -> m2_506  [key=2, style=dotted];
m2_624 -> m2_602  [key=2, style=dotted];
m2_625 -> m2_626  [key=0, style=solid];
m2_625 -> m2_506  [key=2, style=dotted];
m2_625 -> m2_615  [key=2, style=dotted];
m2_626 -> m2_627  [key=0, style=solid];
m2_626 -> m2_507  [key=2, style=dotted];
m2_626 -> m2_602  [key=2, style=dotted];
m2_627 -> m2_628  [key=0, style=solid];
m2_627 -> m2_507  [key=2, style=dotted];
m2_627 -> m2_615  [key=2, style=dotted];
m2_628 -> m2_616  [color=blue, key=0, style=bold];
m2_655 -> m2_656  [key=0, style=solid];
m2_656 -> m2_657  [key=0, style=solid];
m2_656 -> m2_227  [key=2, style=dotted];
m2_656 -> m2_662  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_657 -> m2_658  [key=0, style=solid];
m2_657 -> m2_73  [key=2, style=dotted];
m2_657 -> m2_659  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_657 -> m2_660  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_657 -> m2_661  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_657 -> m2_662  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_662 -> m2_663  [key=0, style=solid];
m2_662 -> m2_75  [key=2, style=dotted];
m2_662 -> m2_664  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_658 -> m2_659  [key=0, style=solid];
m2_659 -> m2_660  [key=0, style=solid];
m2_660 -> m2_661  [key=0, style=solid];
m2_661 -> m2_662  [key=0, style=solid];
m2_663 -> m2_664  [key=0, style=solid];
m2_663 -> m2_134  [key=2, style=dotted];
m2_664 -> m2_665  [key=0, style=solid];
m2_664 -> m2_134  [key=2, style=dotted];
m2_665 -> m2_655  [color=blue, key=0, style=bold];
m2_758 -> m2_896  [key=0, style=solid];
m2_758 -> m2_897  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_758 -> m2_68  [color=darkorchid, key=3, label="Parameter variable string name", style=bold];
m2_758 -> m2_749  [color=darkorchid, key=3, label="Parameter variable string body", style=bold];
m2_758 -> m2_761  [color=darkorchid, key=3, label="Parameter variable string body", style=bold];
m2_758 -> m2_769  [color=darkorchid, key=3, label="Parameter variable string body", style=bold];
m2_758 -> m2_779  [color=darkorchid, key=3, label="Parameter variable string body", style=bold];
m2_758 -> m2_792  [color=darkorchid, key=3, label="Parameter variable string body", style=bold];
m2_758 -> m2_805  [color=darkorchid, key=3, label="Parameter variable string body", style=bold];
m2_758 -> m2_813  [color=darkorchid, key=3, label="Parameter variable string body", style=bold];
m2_758 -> m2_824  [color=darkorchid, key=3, label="Parameter variable string body", style=bold];
m2_758 -> m2_838  [color=darkorchid, key=3, label="Parameter variable string body", style=bold];
m2_758 -> m2_862  [color=darkorchid, key=3, label="Parameter variable string body", style=bold];
m2_896 -> m2_897  [key=0, style=solid];
m2_896 -> m2_894  [key=2, style=dotted];
m2_896 -> m2_899  [color=darkseagreen4, key=1, label=header, style=dashed];
m2_897 -> m2_898  [key=0, style=solid];
m2_897 -> m2_901  [key=2, style=dotted];
m2_899 -> m2_900  [key=0, style=solid];
m2_899 -> m2_185  [key=2, style=dotted];
m2_899 -> m2_904  [key=2, style=dotted];
m2_898 -> m2_899  [key=0, style=solid];
m2_898 -> m2_902  [key=2, style=dotted];
m2_898 -> m2_903  [key=2, style=dotted];
m2_900 -> m2_758  [color=blue, key=0, style=bold];
m2_73 -> m2_891  [key=0, style=solid];
m2_73 -> m2_68  [color=darkorchid, key=3, label="Parameter variable string name", style=bold];
m2_891 -> m2_892  [key=0, style=solid];
m2_891 -> m2_894  [key=2, style=dotted];
m2_892 -> m2_893  [key=0, style=solid];
m2_892 -> m2_185  [key=2, style=dotted];
m2_892 -> m2_895  [key=2, style=dotted];
m2_893 -> m2_73  [color=blue, key=0, style=bold];
m2_572 -> m2_573  [key=0, style=solid];
m2_573 -> m2_574  [key=0, style=solid];
m2_573 -> m2_505  [key=2, style=dotted];
m2_573 -> m2_226  [key=2, style=dotted];
m2_574 -> m2_575  [key=0, style=solid];
m2_574 -> m2_227  [key=2, style=dotted];
m2_574 -> m2_589  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_575 -> m2_576  [key=0, style=solid];
m2_575 -> m2_73  [key=2, style=dotted];
m2_575 -> m2_577  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_575 -> m2_578  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_575 -> m2_579  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_575 -> m2_580  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_575 -> m2_581  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_575 -> m2_582  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_575 -> m2_583  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_575 -> m2_584  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_575 -> m2_585  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_575 -> m2_586  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_575 -> m2_587  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_575 -> m2_588  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_575 -> m2_589  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_589 -> m2_590  [key=0, style=solid];
m2_589 -> m2_75  [key=2, style=dotted];
m2_589 -> m2_591  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_589 -> m2_592  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_576 -> m2_577  [key=0, style=solid];
m2_577 -> m2_578  [key=0, style=solid];
m2_578 -> m2_579  [key=0, style=solid];
m2_579 -> m2_580  [key=0, style=solid];
m2_580 -> m2_581  [key=0, style=solid];
m2_581 -> m2_582  [key=0, style=solid];
m2_582 -> m2_583  [key=0, style=solid];
m2_583 -> m2_584  [key=0, style=solid];
m2_584 -> m2_585  [key=0, style=solid];
m2_585 -> m2_586  [key=0, style=solid];
m2_586 -> m2_587  [key=0, style=solid];
m2_587 -> m2_588  [key=0, style=solid];
m2_588 -> m2_589  [key=0, style=solid];
m2_590 -> m2_591  [key=0, style=solid];
m2_590 -> m2_506  [key=2, style=dotted];
m2_590 -> m2_134  [key=2, style=dotted];
m2_591 -> m2_592  [key=0, style=solid];
m2_591 -> m2_507  [key=2, style=dotted];
m2_591 -> m2_134  [key=2, style=dotted];
m2_592 -> m2_593  [key=0, style=solid];
m2_592 -> m2_507  [key=2, style=dotted];
m2_592 -> m2_134  [key=2, style=dotted];
m2_593 -> m2_572  [color=blue, key=0, style=bold];
m2_471 -> m2_472  [key=0, style=solid];
m2_472 -> m2_473  [key=0, style=solid];
m2_472 -> m2_227  [key=2, style=dotted];
m2_472 -> m2_476  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_473 -> m2_474  [key=0, style=solid];
m2_473 -> m2_73  [key=2, style=dotted];
m2_473 -> m2_475  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_473 -> m2_476  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_476 -> m2_477  [key=0, style=solid];
m2_476 -> m2_75  [key=2, style=dotted];
m2_476 -> m2_478  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_474 -> m2_475  [key=0, style=solid];
m2_475 -> m2_476  [key=0, style=solid];
m2_477 -> m2_478  [key=0, style=solid];
m2_477 -> m2_134  [key=2, style=dotted];
m2_478 -> m2_479  [key=0, style=solid];
m2_478 -> m2_134  [key=2, style=dotted];
m2_479 -> m2_471  [color=blue, key=0, style=bold];
m2_767 -> m2_768  [key=0, style=solid];
m2_768 -> m2_769  [key=0, style=solid];
m2_768 -> m2_629  [key=2, style=dotted];
m2_768 -> m2_775  [key=2, style=dotted];
m2_768 -> m2_227  [key=2, style=dotted];
m2_768 -> m2_771  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_769 -> m2_770  [key=0, style=solid];
m2_769 -> m2_756  [key=2, style=dotted];
m2_769 -> m2_132  [key=2, style=dotted];
m2_769 -> m2_776  [key=2, style=dotted];
m2_771 -> m2_772  [key=0, style=solid];
m2_771 -> m2_75  [key=2, style=dotted];
m2_771 -> m2_773  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_770 -> m2_771  [key=0, style=solid];
m2_770 -> m2_758  [key=2, style=dotted];
m2_772 -> m2_773  [key=0, style=solid];
m2_772 -> m2_506  [key=2, style=dotted];
m2_772 -> m2_134  [key=2, style=dotted];
m2_773 -> m2_774  [key=0, style=solid];
m2_773 -> m2_507  [key=2, style=dotted];
m2_773 -> m2_134  [key=2, style=dotted];
m2_774 -> m2_767  [color=blue, key=0, style=bold];
m2_907 -> m2_908  [key=0, style=solid];
m2_908 -> m2_909  [key=0, style=solid];
m2_908 -> m2_258  [key=2, style=dotted];
m2_909 -> m2_910  [key=0, style=solid];
m2_909 -> m2_911  [key=2, style=dotted];
m2_910 -> m2_907  [color=blue, key=0, style=bold];
m2_322 -> m2_323  [key=0, style=solid];
m2_323 -> m2_324  [key=0, style=solid];
m2_323 -> m2_226  [key=2, style=dotted];
m2_323 -> m2_227  [key=2, style=dotted];
m2_323 -> m2_327  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_324 -> m2_325  [key=0, style=solid];
m2_324 -> m2_185  [key=2, style=dotted];
m2_324 -> m2_186  [key=2, style=dotted];
m2_324 -> m2_326  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_324 -> m2_327  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_327 -> m2_328  [key=0, style=solid];
m2_327 -> m2_75  [key=2, style=dotted];
m2_327 -> m2_329  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_325 -> m2_326  [key=0, style=solid];
m2_326 -> m2_327  [key=0, style=solid];
m2_328 -> m2_329  [key=0, style=solid];
m2_328 -> m2_134  [key=2, style=dotted];
m2_329 -> m2_330  [key=0, style=solid];
m2_329 -> m2_134  [key=2, style=dotted];
m2_330 -> m2_322  [color=blue, key=0, style=bold];
m2_912 -> m2_1  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_2  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_3  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_19  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_4  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_5  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_26  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_6  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_29  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_7  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_8  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_67  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_69  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_88  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_90  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_102  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_104  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_112  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_114  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_126  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_146  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_163  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_178  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_199  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_216  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_230  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_251  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_264  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_273  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_279  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_295  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_299  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_301  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_306  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_302  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_312  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_317  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_320  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_323  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_332  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_361  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_371  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_362  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_364  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_380  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_394  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_381  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_404  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_418  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_405  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_407  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_433  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_454  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_434  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_463  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_472  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_481  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_493  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_510  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_533  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_554  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_574  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_596  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_605  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_618  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_632  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_643  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_656  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_667  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_676  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_685  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_695  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_704  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_716  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_728  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_738  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_748  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_760  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_768  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_769  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_778  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_779  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_791  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_804  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_805  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_812  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_813  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_823  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_837  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_850  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_861  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_875  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_885  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_912 -> m2_886  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture", style=dashed];
m2_913 -> m2_78  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m2_913 -> m2_82  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m2_914 -> m2_95  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m2_914 -> m2_98  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m2_915 -> m2_108  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m2_916 -> m2_118  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m2_917 -> m2_136  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m2_917 -> m2_139  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m2_918 -> m2_153  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m2_918 -> m2_156  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m2_919 -> m2_170  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m2_919 -> m2_173  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m2_920 -> m2_189  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
m2_920 -> m2_193  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
m2_921 -> m2_206  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
m2_921 -> m2_209  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
m2_921 -> m2_213  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
m2_922 -> m2_238  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_923 -> m2_238  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_924 -> m2_261  [color=darkseagreen4, key=1, label=binder, style=dashed];
m2_925 -> m2_261  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_926 -> m2_261  [color=darkseagreen4, key=1, label=config, style=dashed];
m2_927 -> m2_285  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m2_927 -> m2_288  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m2_928 -> m2_309  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m2_929 -> m2_346  [color=darkseagreen4, key=1, label=fakeModule, style=dashed];
m2_929 -> m2_349  [color=darkseagreen4, key=1, label=fakeModule, style=dashed];
m2_930 -> m2_352  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_931 -> m2_352  [color=darkseagreen4, key=1, label=fakeModelBinderLocator, style=dashed];
m2_932 -> m2_368  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m2_932 -> m2_374  [color=darkseagreen4, key=1, label=deserializer, style=dashed];
m2_933 -> m2_388  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
m2_933 -> m2_391  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
m2_933 -> m2_397  [color=darkseagreen4, key=1, label=typeConverter, style=dashed];
m2_934 -> m2_412  [color=darkseagreen4, key=1, label=userDeserializer, style=dashed];
m2_934 -> m2_421  [color=darkseagreen4, key=1, label=userDeserializer, style=dashed];
m2_935 -> m2_415  [color=darkseagreen4, key=1, label=defaultDeserializer, style=dashed];
m2_935 -> m2_424  [color=darkseagreen4, key=1, label=defaultDeserializer, style=dashed];
m2_936 -> m2_442  [color=darkseagreen4, key=1, label=userTypeConverter, style=dashed];
m2_936 -> m2_445  [color=darkseagreen4, key=1, label=userTypeConverter, style=dashed];
m2_936 -> m2_457  [color=darkseagreen4, key=1, label=userTypeConverter, style=dashed];
m2_937 -> m2_448  [color=darkseagreen4, key=1, label=defaultTypeConverter, style=dashed];
m2_937 -> m2_451  [color=darkseagreen4, key=1, label=defaultTypeConverter, style=dashed];
m2_937 -> m2_460  [color=darkseagreen4, key=1, label=defaultTypeConverter, style=dashed];
m2_938 -> m2_905  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.ModelBinding.DefaultBinderFixture.TestModel", style=dashed];
m3_9 -> m3_10  [key=0, style=solid];
m3_10 -> m3_11  [key=0, style=solid];
m3_10 -> m3_12  [key=2, style=dotted];
m3_11 -> m3_9  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [key=0, style=solid];
m3_0 -> m3_3  [color=darkseagreen4, key=1, label="Nancy.Routing.RouteDescription", style=dashed];
m3_0 -> m3_4  [color=darkseagreen4, key=1, label="System.Func<dynamic, dynamic>", style=dashed];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_3  [key=0, style=solid];
m3_3 -> m3_4  [key=0, style=solid];
m3_4 -> m3_5  [key=0, style=solid];
m3_2 -> m3_5  [key=0, style=solid];
m3_2 -> m3_6  [key=2, style=dotted];
m3_5 -> m3_0  [color=blue, key=0, style=bold];
m3_7 -> m3_8  [key=0, style=solid];
m3_8 -> m3_7  [color=blue, key=0, style=bold];
m3_13 -> m3_3  [color=darkseagreen4, key=1, label="Nancy.Routing.Route", style=dashed];
m3_13 -> m3_4  [color=darkseagreen4, key=1, label="Nancy.Routing.Route", style=dashed];
m3_13 -> m3_10  [color=darkseagreen4, key=1, label="Nancy.Routing.Route", style=dashed];
m4_104 -> m4_105  [key=0, style=solid];
m4_107 -> m4_12  [key=2, style=dotted];
m4_107 -> m4_108  [key=0, style=solid];
m4_108 -> m4_14  [key=2, style=dotted];
m4_108 -> m4_109  [key=0, style=solid];
m4_106 -> m4_107  [key=0, style=solid];
m4_106 -> m4_3  [key=2, style=dotted];
m4_106 -> m4_111  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m4_105 -> m4_106  [key=0, style=solid];
m4_109 -> m4_104  [color=blue, key=0, style=bold];
m4_26 -> m4_27  [key=0, style=solid];
m4_26 -> m4_13  [key=2, style=dotted];
m4_26 -> m4_14  [key=2, style=dotted];
m4_95 -> m4_96  [key=0, style=solid];
m4_98 -> m4_12  [key=2, style=dotted];
m4_98 -> m4_99  [key=0, style=solid];
m4_99 -> m4_14  [key=2, style=dotted];
m4_99 -> m4_100  [key=0, style=solid];
m4_97 -> m4_98  [key=0, style=solid];
m4_97 -> m4_3  [key=2, style=dotted];
m4_97 -> m4_102  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m4_96 -> m4_97  [key=0, style=solid];
m4_100 -> m4_95  [color=blue, key=0, style=bold];
m4_12 -> m4_6  [color=blue, key=0, style=bold];
m4_52 -> m4_53  [key=0, style=solid];
m4_53 -> m4_12  [key=2, style=dotted];
m4_53 -> m4_54  [key=0, style=solid];
m4_54 -> m4_13  [key=2, style=dotted];
m4_54 -> m4_14  [key=2, style=dotted];
m4_54 -> m4_55  [key=0, style=solid];
m4_55 -> m4_52  [color=blue, key=0, style=bold];
m4_40 -> m4_41  [key=0, style=solid];
m4_41 -> m4_12  [key=2, style=dotted];
m4_41 -> m4_42  [key=0, style=solid];
m4_42 -> m4_13  [key=2, style=dotted];
m4_42 -> m4_14  [key=2, style=dotted];
m4_42 -> m4_43  [key=0, style=solid];
m4_43 -> m4_40  [color=blue, key=0, style=bold];
m4_8 -> m4_9  [color=red, key=0, style=solid];
m4_8 -> m4_11  [color=red, key=0, style=solid];
m4_9 -> m4_12  [key=2, style=dotted];
m4_9 -> m4_10  [key=0, style=solid];
m4_9 -> m4_13  [key=2, style=dotted];
m4_10 -> m4_13  [key=2, style=dotted];
m4_10 -> m4_14  [key=2, style=dotted];
m4_10 -> m4_11  [key=0, style=solid];
m4_11 -> m4_8  [color=blue, key=0, style=bold];
m4_11 -> m4_12  [key=0, style=solid];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [color=red, key=0, style=solid];
m4_1 -> m4_5  [key=2, style=dotted];
m4_1 -> m4_3  [key=2, style=dotted];
m4_2 -> m4_3  [color=red, key=0, style=solid];
m4_2 -> m4_7  [color=red, key=1, label="Nancy.NancyContext", style=dashed];
m4_2 -> m4_9  [color=red, key=1, label="Nancy.NancyContext", style=dashed];
m4_2 -> m4_10  [color=red, key=1, label="Nancy.NancyContext", style=dashed];
m4_2 -> m4_2  [color=red, key=3, label="method methodReturn Nancy.Response ", style=bold];
m4_2 -> m4_0  [color=blue, key=0, style=bold];
m4_3 -> m4_4  [color=red, key=0, style=solid];
m4_3 -> m4_16  [color=red, key=1, label="Nancy.NancyContext", style=dashed];
m4_3 -> m4_17  [color=red, key=1, label="Nancy.NancyContext", style=dashed];
m4_4 -> m4_0  [color=blue, key=0, style=bold];
m4_4 -> m4_5  [key=0, style=solid];
m4_86 -> m4_87  [key=0, style=solid];
m4_89 -> m4_12  [key=2, style=dotted];
m4_89 -> m4_90  [key=0, style=solid];
m4_90 -> m4_14  [key=2, style=dotted];
m4_90 -> m4_91  [key=0, style=solid];
m4_88 -> m4_89  [key=0, style=solid];
m4_88 -> m4_3  [key=2, style=dotted];
m4_88 -> m4_93  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m4_87 -> m4_88  [key=0, style=solid];
m4_91 -> m4_86  [color=blue, key=0, style=bold];
m4_14 -> m4_21  [key=0, style=solid];
m4_14 -> m4_22  [color=red, key=1, label=string, style=dashed];
m4_7 -> m4_8  [color=red, key=0, style=solid];
m4_7 -> m4_9  [color=darkseagreen4, key=1, label=username, style=dashed];
m4_7 -> m4_10  [color=darkseagreen4, key=1, label=username, style=dashed];
m4_15 -> m4_16  [color=green, key=0, style=solid];
m4_15 -> m4_17  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m4_16 -> m4_17  [color=green, key=0, style=solid];
m4_16 -> m4_19  [color=green, key=2, style=dotted];
m4_16 -> m4_18  [key=0, style=solid];
m4_17 -> m4_18  [key=0, style=solid];
m4_17 -> m4_13  [key=2, style=dotted];
m4_17 -> m4_14  [key=2, style=dotted];
m4_17 -> m4_19  [key=2, style=dotted];
m4_17 -> m4_20  [key=2, style=dotted];
m4_18 -> m4_15  [color=blue, key=0, style=bold];
m4_20 -> m4_21  [color=green, key=0, style=solid];
m4_21 -> m4_22  [color=red, key=0, style=solid];
m4_21 -> m4_12  [color=green, key=2, style=dotted];
m4_21 -> m4_26  [key=2, style=dotted];
m4_21 -> m4_23  [color=darkseagreen4, key=1, label=claims, style=dashed];
m4_21 -> m4_24  [color=darkseagreen4, key=1, label=claims, style=dashed];
m4_22 -> m4_23  [color=red, key=0, style=solid];
m4_22 -> m4_13  [key=2, style=dotted];
m4_22 -> m4_14  [key=2, style=dotted];
m4_22 -> m4_24  [color=red, key=0, style=solid];
m4_22 -> m4_27  [color=red, key=2, style=dotted];
m4_23 -> m4_20  [color=blue, key=0, style=bold];
m4_23 -> m4_24  [key=0, style=solid];
m4_23 -> m4_28  [key=2, style=dotted];
m4_24 -> m4_25  [color=green, key=0, style=solid];
m4_25 -> m4_14  [color=blue, key=0, style=bold];
m4_25 -> m4_26  [color=green, key=0, style=solid];
m4_25 -> m4_12  [color=green, key=2, style=dotted];
m4_36 -> m4_37  [key=0, style=solid];
m4_37 -> m4_12  [key=2, style=dotted];
m4_37 -> m4_38  [key=0, style=solid];
m4_38 -> m4_13  [key=2, style=dotted];
m4_38 -> m4_14  [key=2, style=dotted];
m4_38 -> m4_39  [key=0, style=solid];
m4_39 -> m4_36  [color=blue, key=0, style=bold];
m4_56 -> m4_57  [color=green, key=0, style=solid];
m4_57 -> m4_58  [color=green, key=0, style=solid];
m4_57 -> m4_12  [color=green, key=2, style=dotted];
m4_58 -> m4_59  [color=green, key=0, style=solid];
m4_58 -> m4_13  [color=green, key=2, style=dotted];
m4_58 -> m4_14  [color=green, key=2, style=dotted];
m4_59 -> m4_56  [color=blue, key=0, style=bold];
m4_60 -> m4_61  [color=green, key=0, style=solid];
m4_61 -> m4_62  [color=green, key=0, style=solid];
m4_61 -> m4_12  [color=green, key=2, style=dotted];
m4_62 -> m4_63  [color=green, key=0, style=solid];
m4_62 -> m4_13  [color=green, key=2, style=dotted];
m4_62 -> m4_14  [color=green, key=2, style=dotted];
m4_63 -> m4_60  [color=blue, key=0, style=bold];
m4_78 -> m4_79  [key=0, style=solid];
m4_81 -> m4_82  [color=green, key=0, style=solid];
m4_81 -> m4_14  [color=green, key=2, style=dotted];
m4_80 -> m4_81  [color=green, key=0, style=solid];
m4_80 -> m4_12  [key=2, style=dotted];
m4_79 -> m4_80  [key=0, style=solid];
m4_79 -> m4_3  [key=2, style=dotted];
m4_79 -> m4_84  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m4_82 -> m4_78  [color=blue, key=0, style=bold];
m4_44 -> m4_45  [key=0, style=solid];
m4_45 -> m4_12  [key=2, style=dotted];
m4_45 -> m4_46  [key=0, style=solid];
m4_46 -> m4_13  [key=2, style=dotted];
m4_46 -> m4_14  [key=2, style=dotted];
m4_46 -> m4_47  [key=0, style=solid];
m4_47 -> m4_44  [color=blue, key=0, style=bold];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> m4_7  [key=2, style=dotted];
m4_110 -> m4_111  [key=0, style=solid];
m4_6 -> m4_7  [key=0, style=solid];
m4_6 -> m4_9  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m4_6 -> m4_10  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m4_6 -> m4_4  [color=blue, key=0, style=bold];
m4_84 -> m4_85  [key=0, style=solid];
m4_84 -> m4_7  [key=2, style=dotted];
m4_93 -> m4_7  [key=2, style=dotted];
m4_93 -> m4_94  [key=0, style=solid];
m4_102 -> m4_7  [key=2, style=dotted];
m4_102 -> m4_103  [key=0, style=solid];
m4_111 -> m4_7  [key=2, style=dotted];
m4_111 -> m4_112  [key=0, style=solid];
m4_83 -> m4_84  [key=0, style=solid];
m4_85 -> m4_83  [color=blue, key=0, style=bold];
m4_92 -> m4_93  [key=0, style=solid];
m4_94 -> m4_92  [color=blue, key=0, style=bold];
m4_101 -> m4_102  [key=0, style=solid];
m4_103 -> m4_101  [color=blue, key=0, style=bold];
m4_112 -> m4_110  [color=blue, key=0, style=bold];
m4_70 -> m4_71  [color=green, key=0, style=solid];
m4_71 -> m4_72  [color=green, key=0, style=solid];
m4_71 -> m4_76  [color=green, key=2, style=dotted];
m4_71 -> m4_73  [color=green, key=1, label=result, style=dashed];
m4_71 -> m4_74  [color=green, key=1, label=result, style=dashed];
m4_72 -> m4_73  [color=green, key=0, style=solid];
m4_72 -> m4_14  [key=2, style=dotted];
m4_73 -> m4_74  [color=green, key=0, style=solid];
m4_73 -> m4_77  [color=green, key=2, style=dotted];
m4_74 -> m4_75  [color=green, key=0, style=solid];
m4_74 -> m4_77  [color=green, key=2, style=dotted];
m4_75 -> m4_70  [color=blue, key=0, style=bold];
m4_27 -> m4_24  [color=blue, key=0, style=bold];
m4_48 -> m4_49  [key=0, style=solid];
m4_49 -> m4_12  [key=2, style=dotted];
m4_49 -> m4_50  [key=0, style=solid];
m4_50 -> m4_13  [key=2, style=dotted];
m4_50 -> m4_14  [key=2, style=dotted];
m4_50 -> m4_51  [key=0, style=solid];
m4_51 -> m4_48  [color=blue, key=0, style=bold];
m4_64 -> m4_65  [key=0, style=solid];
m4_67 -> m4_68  [color=green, key=0, style=solid];
m4_67 -> m4_13  [color=green, key=2, style=dotted];
m4_67 -> m4_14  [color=green, key=2, style=dotted];
m4_65 -> m4_67  [color=green, key=1, label=result, style=dashed];
m4_65 -> m4_66  [key=0, style=solid];
m4_65 -> m4_69  [key=2, style=dotted];
m4_66 -> m4_67  [color=green, key=0, style=solid];
m4_66 -> m4_14  [key=2, style=dotted];
m4_68 -> m4_64  [color=blue, key=0, style=bold];
m4_28 -> m4_29  [color=green, key=0, style=solid];
m4_32 -> m4_33  [color=green, key=0, style=solid];
m4_33 -> m4_34  [color=green, key=0, style=solid];
m4_33 -> m4_12  [color=green, key=2, style=dotted];
m4_34 -> m4_35  [key=0, style=solid];
m4_34 -> m4_13  [key=2, style=dotted];
m4_34 -> m4_14  [key=2, style=dotted];
m4_35 -> m4_32  [color=blue, key=0, style=bold];
m4_29 -> m4_30  [color=green, key=0, style=solid];
m4_29 -> m4_12  [color=green, key=2, style=dotted];
m4_29 -> m4_1  [color=darkseagreen4, key=1, label="Nancy.Demo.Authentication.AuthenticationBootstrapper", style=dashed];
m4_29 -> m4_2  [color=red, key=1, label="Nancy.Demo.Authentication.AuthenticationBootstrapper", style=dashed];
m4_29 -> m4_10  [color=darkseagreen4, key=1, label="Nancy.Demo.Authentication.AuthenticationBootstrapper", style=dashed];
m4_29 -> m4_3  [color=red, key=1, label="Nancy.Demo.Authentication.AuthenticationBootstrapper", style=dashed];
m4_30 -> m4_31  [key=0, style=solid];
m4_30 -> m4_13  [key=2, style=dotted];
m4_30 -> m4_14  [key=2, style=dotted];
m4_31 -> m4_28  [color=blue, key=0, style=bold];
m4_185 -> m4_16  [color=green, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m4_185 -> m4_21  [color=green, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m4_185 -> m4_25  [color=green, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m4_185 -> m4_29  [color=green, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m4_185 -> m4_33  [color=green, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m4_185 -> m4_57  [color=green, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m4_185 -> m4_61  [color=green, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m4_185 -> m4_71  [color=green, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m4_185 -> m4_1  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m4_185 -> m4_9  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m4_185 -> m4_37  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m4_185 -> m4_41  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m4_185 -> m4_45  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m4_185 -> m4_49  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m4_185 -> m4_53  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m4_185 -> m4_65  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Routing.DefaultRouteResolverFixture", style=dashed];
m5_19 -> m5_20  [key=0, style=solid];
m5_19 -> m5_4  [color=darkorchid, key=3, label="method methodReturn Nancy.Responses.Negotiation.MediaRange op_Implicit", style=bold];
m5_20 -> m5_21  [key=0, style=solid];
m5_20 -> m5_4  [key=2, style=dotted];
m5_20 -> m5_17  [color=blue, key=0, style=bold];
m5_21 -> m5_19  [color=blue, key=0, style=bold];
m5_22 -> m5_23  [color=red, key=0, style=solid];
m5_22 -> m5_26  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m5_23 -> m5_24  [color=green, key=0, style=solid];
m5_23 -> m5_25  [color=red, key=2, style=dotted];
m5_23 -> m5_23  [color=darkorchid, key=3, label="Local variable Nancy.Response returnValue", style=bold];
m5_23 -> m5_27  [color=darkseagreen4, key=1, label=returnValue, style=dashed];
m5_24 -> m5_22  [color=blue, key=0, style=bold];
m5_24 -> m5_25  [color=green, key=0, style=solid];
m5_24 -> m5_29  [color=green, key=2, style=dotted];
m5_24 -> m5_26  [color=green, key=1, label=enumerator, style=dashed];
m5_17 -> m5_18  [color=green, key=0, style=solid];
m5_17 -> m5_17  [color=darkorchid, key=3, label="method methodReturn Nancy.BeforePipeline op_Addition", style=bold];
m5_17 -> m5_19  [color=darkseagreen4, key=1, label="Nancy.BeforePipeline", style=dashed];
m5_18 -> m5_19  [color=green, key=0, style=solid];
m5_18 -> m5_21  [color=green, key=2, style=dotted];
m5_16 -> m5_13  [color=blue, key=0, style=bold];
m5_4 -> m5_5  [key=0, style=solid];
m5_4 -> m5_6  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_4 -> m5_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_4 -> m5_9  [color=red, key=1, label=string, style=dashed];
m5_4 -> m5_11  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_4 -> m5_19  [color=darkorchid, key=3, label="Parameter variable string contentType", style=bold];
m5_4 -> m5_22  [color=darkorchid, key=3, label="method methodReturn System.Func<Nancy.NancyContext, Nancy.Response> op_Implicit", style=bold];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_7  [key=0, style=solid];
m5_5 -> m5_14  [key=2, style=dotted];
m5_6 -> m5_13  [key=0, style=solid];
m5_6 -> m5_15  [key=2, style=dotted];
m5_6 -> m5_4  [color=blue, key=0, style=bold];
m5_7 -> m5_8  [key=0, style=solid];
m5_7 -> m5_9  [color=red, key=0, style=solid];
m5_7 -> m5_16  [key=2, style=dotted];
m5_9 -> m5_10  [color=red, key=0, style=solid];
m5_9 -> m5_17  [color=red, key=2, style=dotted];
m5_9 -> m5_12  [color=red, key=1, label=parts, style=dashed];
m5_11 -> m5_13  [key=0, style=solid];
m5_11 -> m5_15  [key=2, style=dotted];
m5_11 -> m5_7  [color=blue, key=0, style=bold];
m5_8 -> m5_9  [color=red, key=0, style=solid];
m5_8 -> m5_11  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_8 -> m5_0  [key=2, style=dotted];
m5_8 -> m5_10  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m5_10 -> m5_11  [color=red, key=0, style=solid];
m5_10 -> m5_12  [color=red, key=0, style=solid];
m5_12 -> m5_13  [color=red, key=0, style=solid];
m5_12 -> m5_18  [color=red, key=2, style=dotted];
m5_12 -> m5_36  [key=0, style=solid];
m5_12 -> m5_7  [color=darkorchid, key=3, label="Parameter variable System.Func<Nancy.NancyContext, Nancy.Response> item", style=bold];
m5_13 -> m5_4  [color=blue, key=0, style=bold];
m5_13 -> m5_14  [color=green, key=0, style=solid];
m5_13 -> m5_15  [color=green, key=1, label="Nancy.BeforePipeline", style=dashed];
m5_13 -> m5_13  [color=darkorchid, key=3, label="method methodReturn Nancy.BeforePipeline op_Addition", style=bold];
m5_0 -> m5_1  [color=green, key=0, style=solid];
m5_1 -> m5_2  [color=green, key=0, style=solid];
m5_1 -> m5_3  [color=green, key=2, style=dotted];
m5_2 -> m5_0  [color=blue, key=0, style=bold];
m5_32 -> m5_33  [color=green, key=0, style=solid];
m5_33 -> m5_34  [color=green, key=0, style=solid];
m5_33 -> m5_35  [color=green, key=2, style=dotted];
m5_34 -> m5_32  [color=blue, key=0, style=bold];
m5_36 -> m5_37  [key=0, style=solid];
m5_36 -> m5_38  [key=2, style=dotted];
m5_37 -> m5_12  [color=blue, key=0, style=bold];
m5_26 -> m5_27  [key=0, style=solid];
m5_26 -> m5_25  [color=green, key=0, style=solid];
m5_26 -> m5_31  [key=2, style=dotted];
m5_27 -> m5_28  [key=0, style=solid];
m5_28 -> m5_26  [color=blue, key=0, style=bold];
m5_28 -> m5_22  [color=blue, key=0, style=bold];
m5_14 -> m5_15  [color=green, key=0, style=solid];
m5_14 -> m5_12  [color=green, key=2, style=dotted];
m5_15 -> m5_16  [color=green, key=0, style=solid];
m5_25 -> m5_26  [color=green, key=0, style=solid];
m5_25 -> m5_27  [color=green, key=0, style=solid];
m5_25 -> m5_30  [color=green, key=2, style=dotted];
m5_29 -> m5_1  [color=darkseagreen4, key=1, label="Nancy.Responses.Negotiation.MediaRange", style=dashed];
m5_29 -> m5_27  [color=darkseagreen4, key=1, label="Nancy.Responses.Negotiation.MediaRange", style=dashed];
m5_35 -> m5_33  [color=green, key=3, label="Parameter variable int index", style=bold];
m5_35 -> m5_32  [color=darkorchid, key=3, label="Parameter variable System.Func<Nancy.NancyContext, Nancy.Response> item", style=bold];
m5_35 -> m5_39  [key=0, style=solid];
m5_39 -> m5_40  [key=0, style=solid];
m5_39 -> m5_41  [key=2, style=dotted];
m5_40 -> m5_35  [color=blue, key=0, style=bold];
m5_42 -> m5_1  [color=green, key=1, label="Nancy.BeforePipeline", style=dashed];
m5_42 -> m5_24  [color=green, key=1, label="Nancy.BeforePipeline", style=dashed];
m5_42 -> m5_33  [color=green, key=1, label="Nancy.BeforePipeline", style=dashed];
m5_42 -> m5_36  [color=darkseagreen4, key=1, label="Nancy.BeforePipeline", style=dashed];
m5_42 -> m5_39  [color=darkseagreen4, key=1, label="Nancy.BeforePipeline", style=dashed];
m8_28 -> m8_29  [key=0, style=solid];
m8_28 -> m8_34  [key=2, style=dotted];
m8_12 -> m8_13  [key=0, style=solid];
m8_68 -> m8_72  [key=0, style=solid];
m8_68 -> m8_74  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m8_68 -> m8_76  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m8_68 -> m8_49  [color=darkorchid, key=3, label="Parameter variable Nancy.NancyContext context", style=bold];
m8_68 -> m8_57  [color=darkorchid, key=3, label="Parameter variable System.Func<Nancy.NancyContext, Nancy.Response> resolveResultPreReq", style=bold];
m8_72 -> m8_73  [key=0, style=solid];
m8_72 -> m8_74  [key=0, style=solid];
m8_72 -> m8_76  [key=2, style=dotted];
m8_74 -> m8_75  [key=0, style=solid];
m8_74 -> m8_55  [key=2, style=dotted];
m8_74 -> m8_76  [color=darkseagreen4, key=1, label=resolveResultPreReqResponse, style=dashed];
m8_74 -> m8_68  [key=2, style=dotted];
m8_76 -> m8_77  [key=0, style=solid];
m8_76 -> m8_132  [key=0, style=solid];
m8_76 -> m8_135  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m8_76 -> m8_136  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m8_73 -> m8_77  [key=0, style=solid];
m8_73 -> m8_74  [key=0, style=solid];
m8_75 -> m8_76  [key=0, style=solid];
m8_75 -> m8_77  [key=0, style=solid];
m8_75 -> m8_71  [color=blue, key=0, style=bold];
m8_77 -> m8_68  [color=blue, key=0, style=bold];
m8_77 -> m8_82  [key=0, style=solid];
m8_77 -> m8_86  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m8_77 -> m8_93  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m8_77 -> m8_94  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m8_77 -> m8_84  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m8_77 -> m8_87  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m8_77 -> m8_88  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m8_77 -> m8_89  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m8_77 -> m8_90  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m8_77 -> m8_91  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m8_77 -> m8_92  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m8_101 -> m8_86  [color=darkorchid, key=3, label="Parameter variable System.Guid sessionGuid", style=bold];
m8_101 -> m8_77  [color=darkorchid, key=3, label="Parameter variable Nancy.NancyContext ctx", style=bold];
m8_101 -> m8_125  [key=0, style=solid];
m8_101 -> m8_126  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m8_125 -> m8_125  [color=darkseagreen4, key=1, label="System.Guid", style=dashed];
m8_125 -> m8_126  [key=0, style=solid];
m8_125 -> m8_128  [key=2, style=dotted];
m8_125 -> m8_129  [key=2, style=dotted];
m8_125 -> m8_130  [key=2, style=dotted];
m8_126 -> m8_127  [key=0, style=solid];
m8_126 -> m8_131  [key=2, style=dotted];
m8_127 -> m8_101  [color=blue, key=0, style=bold];
m8_49 -> m8_56  [key=0, style=solid];
m8_49 -> m8_59  [color=darkseagreen4, key=1, label=context, style=dashed];
m8_49 -> m8_60  [color=darkseagreen4, key=1, label=context, style=dashed];
m8_49 -> m8_61  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m8_49 -> m8_62  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m8_49 -> m8_63  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m8_49 -> m8_65  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m8_49 -> m8_23  [color=darkorchid, key=3, label="Parameter variable Nancy.NancyContext context", style=bold];
m8_49 -> m8_55  [color=darkseagreen4, key=1, label=context, style=dashed];
m8_49 -> m8_50  [key=0, style=solid];
m8_49 -> m8_51  [color=darkseagreen4, key=1, label=context, style=dashed];
m8_49 -> m8_52  [color=darkseagreen4, key=1, label=context, style=dashed];
m8_49 -> m8_54  [color=darkseagreen4, key=1, label=context, style=dashed];
m8_49 -> m8_57  [color=darkseagreen4, key=1, label=context, style=dashed];
m8_56 -> m8_57  [key=0, style=solid];
m8_56 -> m8_67  [key=2, style=dotted];
m8_56 -> m8_58  [color=darkseagreen4, key=1, label=resolveResult, style=dashed];
m8_56 -> m8_61  [color=darkseagreen4, key=1, label=resolveResult, style=dashed];
m8_56 -> m8_63  [key=0, style=solid];
m8_59 -> m8_60  [key=0, style=solid];
m8_59 -> m8_68  [key=2, style=dotted];
m8_60 -> m8_61  [key=0, style=solid];
m8_60 -> m8_62  [key=0, style=solid];
m8_60 -> m8_70  [key=2, style=dotted];
m8_61 -> m8_62  [key=0, style=solid];
m8_61 -> m8_69  [key=2, style=dotted];
m8_61 -> m8_38  [key=2, style=dotted];
m8_61 -> m8_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_61 -> m8_78  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_62 -> m8_63  [key=0, style=solid];
m8_62 -> m8_64  [key=0, style=solid];
m8_62 -> m8_70  [key=2, style=dotted];
m8_63 -> m8_64  [key=0, style=solid];
m8_63 -> m8_71  [key=2, style=dotted];
m8_63 -> m8_33  [color=blue, key=0, style=bold];
m8_65 -> m8_66  [key=0, style=solid];
m8_65 -> m8_34  [key=2, style=dotted];
m8_57 -> m8_58  [key=0, style=solid];
m8_57 -> m8_59  [color=darkseagreen4, key=1, label=resolveResultPreReq, style=dashed];
m8_57 -> m8_60  [color=darkseagreen4, key=1, label=pipelines, style=dashed];
m8_57 -> m8_66  [key=2, style=dotted];
m8_58 -> m8_59  [key=0, style=solid];
m8_58 -> m8_64  [color=darkseagreen4, key=1, label=resolveResultPostReq, style=dashed];
m8_58 -> m8_65  [color=darkseagreen4, key=1, label=resolveResultPostReq, style=dashed];
m8_58 -> m8_60  [color=darkseagreen4, key=1, label=cancellationToken, style=dashed];
m8_58 -> m8_69  [key=2, style=dotted];
m8_64 -> m8_65  [key=0, style=solid];
m8_64 -> m8_66  [key=0, style=solid];
m8_66 -> m8_49  [color=blue, key=0, style=bold];
m8_145 -> m8_70  [color=darkorchid, key=3, label="Parameter variable System.Threading.CancellationToken cancellationToken", style=bold];
m8_145 -> m8_172  [key=0, style=solid];
m8_145 -> m8_174  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m8_172 -> m8_173  [key=0, style=solid];
m8_172 -> m8_174  [key=0, style=solid];
m8_174 -> m8_175  [key=0, style=solid];
m8_174 -> m8_176  [key=2, style=dotted];
m8_173 -> m8_151  [key=2, style=dotted];
m8_173 -> m8_175  [key=0, style=solid];
m8_175 -> m8_145  [color=blue, key=0, style=bold];
m8_14 -> m8_15  [key=0, style=solid];
m8_14 -> m8_16  [key=0, style=solid];
m8_11 -> m8_12  [key=0, style=solid];
m8_38 -> m8_0  [color=darkorchid, key=3, label="Field variable System.Collections.Generic.IEnumerable<Nancy.ErrorHandling.IStatusCodeHandler> statusCodeHandlers", style=bold];
m8_38 -> m8_39  [key=0, style=solid];
m8_38 -> m8_41  [key=2, style=dotted];
m8_71 -> m8_74  [color=darkseagreen4, key=1, label="System.Threading.Tasks.Task<Nancy.NancyContext>", style=dashed];
m8_71 -> m8_72  [key=0, style=solid];
m8_71 -> m8_73  [color=darkseagreen4, key=1, label="System.Threading.Tasks.Task<Nancy.NancyContext>", style=dashed];
m8_134 -> m8_135  [key=0, style=solid];
m8_134 -> m8_137  [key=0, style=solid];
m8_134 -> m8_136  [color=darkseagreen4, key=1, label=statusCodeHandler, style=dashed];
m8_132 -> m8_134  [key=0, style=solid];
m8_132 -> m8_133  [key=0, style=solid];
m8_135 -> m8_134  [key=0, style=solid];
m8_135 -> m8_136  [key=0, style=solid];
m8_135 -> m8_138  [key=2, style=dotted];
m8_136 -> m8_134  [key=0, style=solid];
m8_136 -> m8_139  [key=2, style=dotted];
m8_133 -> m8_137  [key=0, style=solid];
m8_137 -> m8_76  [color=blue, key=0, style=bold];
m8_35 -> m8_36  [key=0, style=solid];
m8_35 -> m8_37  [key=0, style=solid];
m8_23 -> m8_24  [key=0, style=solid];
m8_23 -> m8_42  [key=0, style=solid];
m8_23 -> m8_43  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m8_23 -> m8_44  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m8_23 -> m8_46  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m8_23 -> m8_16  [color=darkorchid, key=3, label="Parameter variable Nancy.NancyContext context", style=bold];
m8_25 -> m8_26  [key=0, style=solid];
m8_25 -> m8_30  [color=darkseagreen4, key=1, label="Nancy.Request", style=dashed];
m8_25 -> m8_32  [color=darkseagreen4, key=1, label="System.Action<System.Exception>", style=dashed];
m8_25 -> m8_23  [color=blue, key=0, style=bold];
m8_26 -> m8_27  [key=0, style=solid];
m8_26 -> m8_28  [key=2, style=dotted];
m8_26 -> m8_29  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_26 -> m8_24  [color=darkorchid, key=3, label="Parameter variable System.Func<Nancy.NancyContext, Nancy.NancyContext> preRequest", style=bold];
m8_26 -> m8_36  [key=0, style=solid];
m8_26 -> m8_23  [color=darkorchid, key=3, label="Parameter variable System.Action<System.Exception> onError", style=bold];
m8_26 -> m8_40  [color=darkseagreen4, key=1, label="System.Action<Nancy.NancyContext>", style=dashed];
m8_26 -> m8_44  [color=darkseagreen4, key=1, label="System.Action<System.Exception>", style=dashed];
m8_27 -> m8_25  [color=blue, key=0, style=bold];
m8_27 -> m8_28  [key=0, style=solid];
m8_27 -> m8_33  [key=2, style=dotted];
m8_27 -> m8_29  [color=darkseagreen4, key=1, label=task, style=dashed];
m8_27 -> m8_30  [color=darkseagreen4, key=1, label=task, style=dashed];
m8_27 -> m8_31  [color=darkseagreen4, key=1, label=task, style=dashed];
m8_24 -> m8_25  [key=0, style=solid];
m8_24 -> m8_26  [key=2, style=dotted];
m8_24 -> m8_35  [key=0, style=solid];
m8_24 -> m8_38  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m8_24 -> m8_16  [color=darkorchid, key=3, label="Parameter variable Nancy.NancyContext context", style=bold];
m8_0 -> m8_1  [key=0, style=solid];
m8_0 -> m8_3  [color=darkseagreen4, key=1, label="Nancy.INancyContextFactory", style=dashed];
m8_0 -> m8_5  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Nancy.ErrorHandling.IStatusCodeHandler>", style=dashed];
m8_0 -> m8_7  [color=darkseagreen4, key=1, label="Nancy.Routing.IRequestDispatcher", style=dashed];
m8_0 -> m8_8  [color=darkseagreen4, key=1, label="Nancy.INancyContextFactory", style=dashed];
m8_0 -> m8_9  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Nancy.ErrorHandling.IStatusCodeHandler>", style=dashed];
m8_0 -> m8_10  [color=darkseagreen4, key=1, label="Nancy.Diagnostics.IRequestTracing", style=dashed];
m8_0 -> m8_11  [color=darkseagreen4, key=1, label="Nancy.Diagnostics.DiagnosticsConfiguration", style=dashed];
m8_0 -> m8_12  [color=darkseagreen4, key=1, label="Nancy.IStaticContentProvider", style=dashed];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_3  [key=0, style=solid];
m8_3 -> m8_4  [key=0, style=solid];
m8_3 -> m8_5  [key=0, style=solid];
m8_5 -> m8_6  [key=0, style=solid];
m8_5 -> m8_7  [key=0, style=solid];
m8_7 -> m8_8  [key=0, style=solid];
m8_8 -> m8_9  [key=0, style=solid];
m8_9 -> m8_10  [key=0, style=solid];
m8_2 -> m8_10  [key=0, style=solid];
m8_2 -> m8_11  [key=2, style=dotted];
m8_2 -> m8_13  [key=0, style=solid];
m8_2 -> m8_14  [key=2, style=dotted];
m8_4 -> m8_10  [key=0, style=solid];
m8_4 -> m8_11  [key=2, style=dotted];
m8_4 -> m8_13  [key=0, style=solid];
m8_4 -> m8_12  [key=2, style=dotted];
m8_6 -> m8_10  [key=0, style=solid];
m8_6 -> m8_12  [key=2, style=dotted];
m8_6 -> m8_13  [key=0, style=solid];
m8_10 -> m8_0  [color=blue, key=0, style=bold];
m8_10 -> m8_11  [key=0, style=solid];
m8_41 -> m8_39  [color=blue, key=0, style=bold];
m8_55 -> m8_68  [key=2, style=dotted];
m8_55 -> m8_56  [key=0, style=solid];
m8_96 -> m8_77  [color=darkorchid, key=3, label="Parameter variable Nancy.NancyContext ctx", style=bold];
m8_96 -> m8_108  [key=0, style=solid];
m8_108 -> m8_109  [key=0, style=solid];
m8_108 -> m8_110  [key=2, style=dotted];
m8_109 -> m8_96  [color=blue, key=0, style=bold];
m8_70 -> m8_142  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m8_70 -> m8_149  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m8_70 -> m8_156  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m8_70 -> m8_140  [key=0, style=solid];
m8_70 -> m8_141  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m8_70 -> m8_148  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m8_70 -> m8_154  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m8_70 -> m8_155  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m8_70 -> m8_161  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m8_70 -> m8_49  [color=darkorchid, key=3, label="Parameter variable Nancy.NancyContext context", style=bold];
m8_70 -> m8_58  [color=darkorchid, key=3, label="Parameter variable System.Threading.CancellationToken cancellationToken", style=bold];
m8_70 -> m8_57  [color=darkorchid, key=3, label="Parameter variable Nancy.Bootstrapper.IPipelines pipelines", style=bold];
m8_48 -> m8_50  [key=0, style=solid];
m8_48 -> m8_51  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m8_48 -> m8_53  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m8_48 -> m8_23  [color=darkorchid, key=3, label="Parameter variable Nancy.NancyContext context", style=bold];
m8_48 -> m8_63  [key=0, style=solid];
m8_48 -> m8_14  [key=2, style=dotted];
m8_50 -> m8_51  [key=0, style=solid];
m8_50 -> m8_54  [key=0, style=solid];
m8_50 -> m8_52  [key=0, style=solid];
m8_51 -> m8_52  [key=0, style=solid];
m8_51 -> m8_55  [key=2, style=dotted];
m8_51 -> m8_53  [color=darkseagreen4, key=1, label=preRequestResponse, style=dashed];
m8_51 -> m8_60  [color=darkseagreen4, key=1, label=context, style=dashed];
m8_51 -> m8_57  [color=darkseagreen4, key=1, label=context, style=dashed];
m8_51 -> m8_51  [color=darkseagreen4, key=1, label=context, style=dashed];
m8_51 -> m8_66  [key=2, style=dotted];
m8_51 -> m8_54  [color=darkseagreen4, key=1, label=context, style=dashed];
m8_51 -> m8_59  [color=darkseagreen4, key=1, label=context, style=dashed];
m8_53 -> m8_54  [key=0, style=solid];
m8_53 -> m8_57  [key=0, style=solid];
m8_52 -> m8_53  [key=0, style=solid];
m8_52 -> m8_54  [key=0, style=solid];
m8_52 -> m8_67  [key=2, style=dotted];
m8_54 -> m8_48  [color=blue, key=0, style=bold];
m8_54 -> m8_55  [key=0, style=solid];
m8_171 -> m8_146  [color=darkorchid, key=3, label="Parameter variable Nancy.NancyContext context", style=bold];
m8_171 -> m8_181  [key=0, style=solid];
m8_171 -> m8_182  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
m8_171 -> m8_183  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m8_171 -> m8_185  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
m8_171 -> m8_186  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m8_171 -> m8_188  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m8_171 -> m8_189  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m8_171 -> m8_190  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m8_181 -> m8_182  [key=0, style=solid];
m8_181 -> m8_183  [key=0, style=solid];
m8_182 -> m8_191  [key=0, style=solid];
m8_182 -> m8_192  [key=2, style=dotted];
m8_183 -> m8_184  [key=0, style=solid];
m8_183 -> m8_193  [key=2, style=dotted];
m8_183 -> m8_186  [color=darkseagreen4, key=1, label=onErrorResponse, style=dashed];
m8_185 -> m8_191  [key=0, style=solid];
m8_185 -> m8_192  [key=2, style=dotted];
m8_186 -> m8_191  [key=0, style=solid];
m8_186 -> m8_187  [key=0, style=solid];
m8_188 -> m8_189  [key=0, style=solid];
m8_188 -> m8_194  [key=2, style=dotted];
m8_189 -> m8_190  [key=0, style=solid];
m8_189 -> m8_195  [key=2, style=dotted];
m8_190 -> m8_191  [key=0, style=solid];
m8_184 -> m8_185  [key=0, style=solid];
m8_184 -> m8_186  [key=0, style=solid];
m8_187 -> m8_188  [key=0, style=solid];
m8_191 -> m8_171  [color=blue, key=0, style=bold];
m8_42 -> m8_43  [key=0, style=solid];
m8_42 -> m8_48  [key=2, style=dotted];
m8_142 -> m8_146  [key=2, style=dotted];
m8_142 -> m8_143  [key=0, style=solid];
m8_142 -> m8_38  [key=2, style=dotted];
m8_142 -> m8_147  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_142 -> m8_158  [color=darkorchid, key=3, label="Local variable System.Threading.Tasks.Task postHookTask", style=bold];
m8_140 -> m8_142  [color=darkseagreen4, key=1, label=tcs, style=dashed];
m8_140 -> m8_149  [color=darkseagreen4, key=1, label=tcs, style=dashed];
m8_140 -> m8_156  [color=darkseagreen4, key=1, label=tcs, style=dashed];
m8_140 -> m8_141  [key=0, style=solid];
m8_140 -> m8_64  [key=2, style=dotted];
m8_140 -> m8_161  [color=darkseagreen4, key=1, label=tcs, style=dashed];
m8_140 -> m8_143  [color=darkseagreen4, key=1, label=tcs, style=dashed];
m8_141 -> m8_142  [key=0, style=solid];
m8_141 -> m8_145  [key=2, style=dotted];
m8_143 -> m8_144  [key=0, style=solid];
m8_144 -> m8_70  [color=blue, key=0, style=bold];
m8_36 -> m8_39  [key=0, style=solid];
m8_36 -> m8_38  [key=2, style=dotted];
m8_36 -> m8_37  [key=0, style=solid];
m8_36 -> m8_33  [key=2, style=dotted];
m8_36 -> m8_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_37 -> m8_38  [key=0, style=solid];
m8_37 -> m8_40  [key=2, style=dotted];
m8_37 -> m8_26  [color=blue, key=0, style=bold];
m8_39 -> m8_24  [color=blue, key=0, style=bold];
m8_39 -> m8_40  [key=0, style=solid];
m8_158 -> m8_70  [color=darkorchid, key=3, label="Parameter variable System.Threading.CancellationToken cancellationToken", style=bold];
m8_158 -> m8_177  [key=0, style=solid];
m8_177 -> m8_178  [key=0, style=solid];
m8_177 -> m8_179  [key=2, style=dotted];
m8_177 -> m8_180  [key=2, style=dotted];
m8_178 -> m8_158  [color=blue, key=0, style=bold];
m8_40 -> m8_41  [key=0, style=solid];
m8_40 -> m8_42  [key=2, style=dotted];
m8_146 -> m8_163  [color=green, key=0, style=solid];
m8_146 -> m8_166  [color=green, key=1, label="Nancy.NancyContext", style=dashed];
m8_146 -> m8_167  [color=green, key=1, label="Nancy.NancyContext", style=dashed];
m8_146 -> m8_169  [color=darkseagreen4, key=1, label="System.Threading.Tasks.TaskCompletionSource<Nancy.NancyContext>", style=dashed];
m8_146 -> m8_70  [color=darkorchid, key=3, label="Parameter variable Nancy.Bootstrapper.IPipelines pipelines", style=bold];
m8_146 -> m8_140  [color=darkorchid, key=3, label="Parameter variable System.Threading.Tasks.TaskCompletionSource<Nancy.NancyContext> tcs", style=bold];
m8_163 -> m8_164  [color=green, key=0, style=solid];
m8_163 -> m8_166  [color=green, key=1, label="System.Threading.Tasks.Task", style=dashed];
m8_163 -> m8_169  [color=green, key=1, label=e, style=dashed];
m8_164 -> m8_146  [color=blue, key=0, style=bold];
m8_33 -> m8_49  [color=darkseagreen4, key=1, label="Nancy.Request", style=dashed];
m8_33 -> m8_46  [key=0, style=solid];
m8_33 -> m8_51  [color=darkseagreen4, key=1, label="System.Func<Nancy.NancyContext, Nancy.NancyContext>", style=dashed];
m8_33 -> m8_47  [color=darkseagreen4, key=1, label="Nancy.Request", style=dashed];
m8_33 -> m8_50  [color=darkseagreen4, key=1, label="System.Func<Nancy.NancyContext, Nancy.NancyContext>", style=dashed];
m8_33 -> m8_19  [color=darkorchid, key=3, label="Parameter variable System.Func<Nancy.NancyContext, Nancy.NancyContext> preRequest", style=bold];
m8_33 -> m8_26  [color=darkorchid, key=3, label="Parameter variable System.Func<Nancy.NancyContext, Nancy.NancyContext> preRequest", style=bold];
m8_33 -> m8_29  [color=blue, key=0, style=bold];
m8_46 -> m8_55  [color=darkseagreen4, key=1, label=tcs, style=dashed];
m8_46 -> m8_74  [color=darkseagreen4, key=1, label=tcs, style=dashed];
m8_46 -> m8_64  [key=2, style=dotted];
m8_46 -> m8_79  [color=darkseagreen4, key=1, label=tcs, style=dashed];
m8_46 -> m8_47  [key=0, style=solid];
m8_46 -> m8_56  [color=darkseagreen4, key=1, label=tcs, style=dashed];
m8_46 -> m8_61  [color=darkseagreen4, key=1, label=tcs, style=dashed];
m8_46 -> m8_62  [color=darkseagreen4, key=1, label=tcs, style=dashed];
m8_46 -> m8_34  [key=2, style=dotted];
m8_47 -> m8_49  [key=0, style=solid];
m8_47 -> m8_48  [key=0, style=solid];
m8_47 -> m8_23  [color=blue, key=0, style=bold];
m8_105 -> m8_106  [key=0, style=solid];
m8_30 -> m8_31  [key=0, style=solid];
m8_30 -> m8_33  [key=0, style=solid];
m8_30 -> m8_13  [key=2, style=dotted];
m8_30 -> m8_34  [key=2, style=dotted];
m8_30 -> m8_32  [key=0, style=solid];
m8_30 -> m8_35  [key=2, style=dotted];
m8_32 -> m8_33  [key=0, style=solid];
m8_32 -> m8_34  [key=2, style=dotted];
m8_32 -> m8_19  [color=blue, key=0, style=bold];
m8_29 -> m8_30  [key=0, style=solid];
m8_29 -> m8_31  [key=0, style=solid];
m8_31 -> m8_32  [key=0, style=solid];
m8_166 -> m8_167  [color=green, key=0, style=solid];
m8_166 -> m8_171  [color=green, key=2, style=dotted];
m8_169 -> m8_170  [key=0, style=solid];
m8_169 -> m8_81  [key=2, style=dotted];
m8_165 -> m8_166  [color=green, key=0, style=solid];
m8_167 -> m8_168  [color=green, key=0, style=solid];
m8_167 -> m8_170  [color=green, key=0, style=solid];
m8_167 -> m8_68  [color=green, key=2, style=dotted];
m8_168 -> m8_169  [key=0, style=solid];
m8_170 -> m8_165  [color=blue, key=0, style=bold];
m8_149 -> m8_146  [key=2, style=dotted];
m8_149 -> m8_150  [key=0, style=solid];
m8_149 -> m8_38  [key=2, style=dotted];
m8_149 -> m8_153  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_156 -> m8_146  [key=2, style=dotted];
m8_156 -> m8_157  [key=0, style=solid];
m8_156 -> m8_159  [key=2, style=dotted];
m8_156 -> m8_160  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_161 -> m8_68  [key=2, style=dotted];
m8_161 -> m8_162  [key=0, style=solid];
m8_147 -> m8_148  [key=0, style=solid];
m8_148 -> m8_149  [key=0, style=solid];
m8_148 -> m8_151  [key=2, style=dotted];
m8_148 -> m8_152  [key=2, style=dotted];
m8_150 -> m8_147  [color=blue, key=0, style=bold];
m8_153 -> m8_154  [key=0, style=solid];
m8_155 -> m8_156  [key=0, style=solid];
m8_155 -> m8_158  [key=2, style=dotted];
m8_157 -> m8_153  [color=blue, key=0, style=bold];
m8_160 -> m8_161  [key=0, style=solid];
m8_154 -> m8_155  [key=0, style=solid];
m8_79 -> m8_81  [key=2, style=dotted];
m8_79 -> m8_80  [key=0, style=solid];
m8_79 -> m8_30  [color=darkseagreen4, key=1, label="Nancy.Request", style=dashed];
m8_162 -> m8_160  [color=blue, key=0, style=bold];
m8_78 -> m8_79  [key=0, style=solid];
m8_78 -> m8_7  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m8_78 -> m8_8  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m8_78 -> m8_9  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m8_78 -> m8_16  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m8_78 -> m8_18  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m8_78 -> m8_26  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m8_78 -> m8_30  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m8_78 -> m8_42  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m8_78 -> m8_44  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m8_78 -> m8_45  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m8_78 -> m8_46  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m8_78 -> m8_50  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m8_78 -> m8_51  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m8_78 -> m8_56  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m8_78 -> m8_59  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m8_80 -> m8_78  [color=blue, key=0, style=bold];
m8_80 -> m8_30  [color=darkseagreen4, key=1, label="System.Action<Nancy.NancyContext>", style=dashed];
m8_20 -> m8_21  [key=0, style=solid];
m8_43 -> m8_44  [key=0, style=solid];
m8_43 -> m8_45  [key=0, style=solid];
m8_22 -> m8_20  [color=blue, key=0, style=bold];
m8_21 -> m8_22  [key=0, style=solid];
m8_21 -> m8_13  [color=blue, key=0, style=bold];
m8_44 -> m8_45  [key=0, style=solid];
m8_44 -> m8_42  [key=2, style=dotted];
m8_44 -> m8_49  [key=2, style=dotted];
m8_45 -> m8_43  [color=blue, key=0, style=bold];
m8_45 -> m8_46  [key=0, style=solid];
m8_45 -> m8_47  [key=0, style=solid];
m8_102 -> m8_103  [key=0, style=solid];
m8_104 -> m8_102  [color=blue, key=0, style=bold];
m8_103 -> m8_104  [key=0, style=solid];
m8_103 -> m8_103  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", style=dashed];
m8_106 -> m8_107  [key=0, style=solid];
m8_106 -> m8_106  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", style=dashed];
m8_107 -> m8_105  [color=blue, key=0, style=bold];
m8_81 -> m8_32  [color=darkseagreen4, key=1, label="System.Action<System.Exception>", style=dashed];
m8_82 -> m8_83  [key=0, style=solid];
m8_82 -> m8_84  [key=0, style=solid];
m8_82 -> m8_96  [key=2, style=dotted];
m8_86 -> m8_87  [key=0, style=solid];
m8_86 -> m8_97  [key=2, style=dotted];
m8_86 -> m8_93  [color=darkseagreen4, key=1, label=sessionGuid, style=dashed];
m8_86 -> m8_94  [color=darkseagreen4, key=1, label=sessionGuid, style=dashed];
m8_93 -> m8_94  [key=0, style=solid];
m8_93 -> m8_100  [key=2, style=dotted];
m8_94 -> m8_95  [key=0, style=solid];
m8_94 -> m8_101  [key=2, style=dotted];
m8_83 -> m8_95  [key=0, style=solid];
m8_84 -> m8_86  [key=0, style=solid];
m8_84 -> m8_85  [key=0, style=solid];
m8_87 -> m8_88  [key=0, style=solid];
m8_87 -> m8_98  [key=2, style=dotted];
m8_92 -> m8_93  [key=0, style=solid];
m8_88 -> m8_89  [key=0, style=solid];
m8_89 -> m8_90  [key=0, style=solid];
m8_90 -> m8_91  [key=0, style=solid];
m8_91 -> m8_92  [key=0, style=solid];
m8_91 -> m8_99  [key=2, style=dotted];
m8_91 -> m8_102  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_91 -> m8_105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_85 -> m8_95  [key=0, style=solid];
m8_95 -> m8_77  [color=blue, key=0, style=bold];
m8_19 -> m8_17  [color=darkorchid, key=3, label="Parameter variable System.Func<Nancy.NancyContext, Nancy.NancyContext> preRequest", style=bold];
m8_19 -> m8_27  [key=0, style=solid];
m8_19 -> m8_16  [color=darkorchid, key=3, label="Parameter variable Nancy.Request request", style=bold];
m8_19 -> m8_20  [key=0, style=solid];
m8_19 -> m8_24  [key=2, style=dotted];
m8_97 -> m8_77  [color=darkorchid, key=3, label="Parameter variable Nancy.NancyContext ctx", style=bold];
m8_97 -> m8_111  [key=0, style=solid];
m8_97 -> m8_112  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m8_97 -> m8_114  [color=darkorchid, key=3, label="method methodReturn System.Guid GetDiagnosticsSessionGuid", style=bold];
m8_113 -> m8_120  [key=0, style=solid];
m8_113 -> m8_122  [key=2, style=dotted];
m8_116 -> m8_120  [key=0, style=solid];
m8_116 -> m8_122  [key=2, style=dotted];
m8_117 -> m8_118  [key=0, style=solid];
m8_117 -> m8_119  [key=0, style=solid];
m8_117 -> m8_124  [key=2, style=dotted];
m8_118 -> m8_120  [key=0, style=solid];
m8_118 -> m8_122  [key=2, style=dotted];
m8_112 -> m8_113  [key=0, style=solid];
m8_112 -> m8_114  [key=0, style=solid];
m8_112 -> m8_121  [key=2, style=dotted];
m8_112 -> m8_115  [color=darkseagreen4, key=1, label=sessionId, style=dashed];
m8_115 -> m8_116  [key=0, style=solid];
m8_115 -> m8_117  [key=0, style=solid];
m8_115 -> m8_123  [key=2, style=dotted];
m8_115 -> m8_119  [color=darkseagreen4, key=1, label=sessionGuid, style=dashed];
m8_119 -> m8_120  [key=0, style=solid];
m8_111 -> m8_112  [key=0, style=solid];
m8_114 -> m8_115  [key=0, style=solid];
m8_120 -> m8_97  [color=blue, key=0, style=bold];
m8_16 -> m8_17  [key=0, style=solid];
m8_16 -> m8_19  [color=darkorchid, key=3, label="method methodReturn Nancy.NancyContext HandleRequest", style=bold];
m8_16 -> m8_22  [key=2, style=dotted];
m8_16 -> m8_18  [color=darkseagreen4, key=1, label=context, style=dashed];
m8_16 -> m8_20  [color=darkseagreen4, key=1, label=context, style=dashed];
m8_13 -> m8_14  [key=0, style=solid];
m8_13 -> m8_17  [color=darkseagreen4, key=1, label="Nancy.Request", style=dashed];
m8_13 -> m8_25  [color=darkorchid, key=3, label="Parameter variable Nancy.Request request", style=bold];
m8_13 -> m8_16  [color=darkorchid, key=3, label="method methodReturn Nancy.NancyContext HandleRequest", style=bold];
m8_13 -> m8_0  [color=blue, key=0, style=bold];
m8_17 -> m8_18  [key=0, style=solid];
m8_17 -> m8_19  [key=2, style=dotted];
m8_17 -> m8_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_15 -> m8_21  [key=0, style=solid];
m8_15 -> m8_11  [key=2, style=dotted];
m8_18 -> m8_19  [key=0, style=solid];
m8_18 -> m8_23  [key=2, style=dotted];
m8_18 -> m8_16  [color=blue, key=0, style=bold];
m8_204 -> m8_166  [color=green, key=1, label="Nancy.NancyContext", style=dashed];
m8_204 -> m8_167  [color=green, key=1, label="Nancy.NancyContext", style=dashed];
m8_205 -> m8_166  [color=green, key=1, label="Nancy.Bootstrapper.IPipelines", style=dashed];
m8_206 -> m8_167  [color=green, key=1, label="System.Threading.Tasks.TaskCompletionSource<Nancy.NancyContext>", style=dashed];
m8_206 -> m8_169  [color=darkseagreen4, key=1, label="System.Threading.Tasks.TaskCompletionSource<Nancy.NancyContext>", style=dashed];
m8_196 -> m8_142  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m8_196 -> m8_149  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m8_196 -> m8_7  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m8_196 -> m8_8  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m8_196 -> m8_9  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m8_196 -> m8_10  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m8_196 -> m8_11  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m8_196 -> m8_12  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m8_196 -> m8_17  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m8_196 -> m8_24  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m8_196 -> m8_27  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m8_196 -> m8_36  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m8_196 -> m8_49  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m8_196 -> m8_52  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m8_196 -> m8_57  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m8_196 -> m8_60  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m8_196 -> m8_61  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m8_196 -> m8_72  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m8_196 -> m8_73  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m8_196 -> m8_82  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m8_196 -> m8_86  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m8_196 -> m8_93  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m8_196 -> m8_94  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m8_196 -> m8_113  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m8_196 -> m8_116  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m8_196 -> m8_117  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m8_196 -> m8_118  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m8_196 -> m8_134  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m8_196 -> m8_148  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m8_196 -> m8_155  [color=darkseagreen4, key=1, label="Nancy.NancyEngine", style=dashed];
m8_200 -> m8_149  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m8_200 -> m8_156  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m8_200 -> m8_161  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m8_200 -> m8_148  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m8_200 -> m8_154  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m8_200 -> m8_155  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m8_201 -> m8_149  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m8_201 -> m8_148  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m8_201 -> m8_155  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m8_202 -> m8_149  [color=darkseagreen4, key=1, label="Nancy.Bootstrapper.IPipelines", style=dashed];
m8_202 -> m8_156  [color=darkseagreen4, key=1, label="Nancy.Bootstrapper.IPipelines", style=dashed];
m8_202 -> m8_155  [color=darkseagreen4, key=1, label="Nancy.Bootstrapper.IPipelines", style=dashed];
m8_203 -> m8_149  [color=darkseagreen4, key=1, label=tcs, style=dashed];
m8_203 -> m8_156  [color=darkseagreen4, key=1, label=tcs, style=dashed];
m8_203 -> m8_161  [color=darkseagreen4, key=1, label=tcs, style=dashed];
m8_199 -> m8_74  [color=darkseagreen4, key=1, label=tcs, style=dashed];
m8_199 -> m8_79  [color=darkseagreen4, key=1, label=tcs, style=dashed];
m8_197 -> m8_40  [color=darkseagreen4, key=1, label="System.Action<Nancy.NancyContext>", style=dashed];
m8_198 -> m8_44  [color=darkseagreen4, key=1, label="System.Action<System.Exception>", style=dashed];
m9_73 -> m9_74  [key=0, style=solid];
m9_74 -> m9_75  [key=0, style=solid];
m9_74 -> m9_62  [key=2, style=dotted];
m9_74 -> m9_77  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_75 -> m9_76  [key=0, style=solid];
m9_75 -> m9_19  [key=2, style=dotted];
m9_76 -> m9_73  [color=blue, key=0, style=bold];
m9_393 -> m9_394  [key=0, style=solid];
m9_394 -> m9_395  [key=0, style=solid];
m9_394 -> m9_261  [key=2, style=dotted];
m9_394 -> m9_262  [key=2, style=dotted];
m9_395 -> m9_396  [key=0, style=solid];
m9_395 -> m9_24  [key=2, style=dotted];
m9_395 -> m9_26  [key=2, style=dotted];
m9_395 -> m9_404  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_396 -> m9_397  [key=0, style=solid];
m9_396 -> m9_24  [key=2, style=dotted];
m9_396 -> m9_307  [key=2, style=dotted];
m9_396 -> m9_264  [key=2, style=dotted];
m9_396 -> m9_26  [key=2, style=dotted];
m9_396 -> m9_407  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_397 -> m9_398  [key=0, style=solid];
m9_397 -> m9_28  [key=2, style=dotted];
m9_397 -> m9_411  [color=darkseagreen4, key=1, label=pipelines, style=dashed];
m9_398 -> m9_399  [key=0, style=solid];
m9_399 -> m9_400  [key=0, style=solid];
m9_399 -> m9_94  [key=2, style=dotted];
m9_400 -> m9_401  [key=0, style=solid];
m9_400 -> m9_88  [key=2, style=dotted];
m9_400 -> m9_402  [color=darkseagreen4, key=1, label=result, style=dashed];
m9_401 -> m9_402  [key=0, style=solid];
m9_401 -> m9_343  [key=2, style=dotted];
m9_401 -> m9_177  [key=2, style=dotted];
m9_402 -> m9_403  [key=0, style=solid];
m9_402 -> m9_344  [key=2, style=dotted];
m9_403 -> m9_393  [color=blue, key=0, style=bold];
m9_80 -> m9_81  [key=0, style=solid];
m9_81 -> m9_82  [key=0, style=solid];
m9_81 -> m9_86  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_81 -> m9_81  [color=darkorchid, key=3, label="Local variable Nancy.Request request", style=bold];
m9_82 -> m9_83  [key=0, style=solid];
m9_82 -> m9_62  [key=2, style=dotted];
m9_82 -> m9_85  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_83 -> m9_84  [key=0, style=solid];
m9_83 -> m9_19  [key=2, style=dotted];
m9_84 -> m9_80  [color=blue, key=0, style=bold];
m9_231 -> m9_232  [key=0, style=solid];
m9_232 -> m9_233  [key=0, style=solid];
m9_232 -> m9_94  [key=2, style=dotted];
m9_233 -> m9_234  [key=0, style=solid];
m9_233 -> m9_88  [key=2, style=dotted];
m9_234 -> m9_235  [key=0, style=solid];
m9_234 -> m9_24  [key=2, style=dotted];
m9_234 -> m9_236  [key=2, style=dotted];
m9_234 -> m9_237  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_235 -> m9_231  [color=blue, key=0, style=bold];
m9_368 -> m9_369  [key=0, style=solid];
m9_369 -> m9_370  [key=0, style=solid];
m9_369 -> m9_307  [key=2, style=dotted];
m9_369 -> m9_372  [color=darkseagreen4, key=1, label=expectedException, style=dashed];
m9_369 -> m9_379  [color=darkseagreen4, key=1, label=expectedException, style=dashed];
m9_370 -> m9_371  [key=0, style=solid];
m9_370 -> m9_261  [key=2, style=dotted];
m9_370 -> m9_262  [key=2, style=dotted];
m9_372 -> m9_373  [key=0, style=solid];
m9_372 -> m9_24  [key=2, style=dotted];
m9_372 -> m9_264  [key=2, style=dotted];
m9_372 -> m9_26  [key=2, style=dotted];
m9_372 -> m9_384  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_379 -> m9_380  [key=0, style=solid];
m9_379 -> m9_106  [key=2, style=dotted];
m9_371 -> m9_372  [key=0, style=solid];
m9_371 -> m9_24  [key=2, style=dotted];
m9_371 -> m9_26  [key=2, style=dotted];
m9_371 -> m9_381  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_373 -> m9_374  [key=0, style=solid];
m9_373 -> m9_28  [key=2, style=dotted];
m9_373 -> m9_375  [color=darkseagreen4, key=1, label=pipelines, style=dashed];
m9_373 -> m9_391  [color=darkseagreen4, key=1, label=pipelines, style=dashed];
m9_374 -> m9_375  [key=0, style=solid];
m9_374 -> m9_309  [key=2, style=dotted];
m9_374 -> m9_387  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_375 -> m9_376  [key=0, style=solid];
m9_376 -> m9_377  [key=0, style=solid];
m9_376 -> m9_94  [key=2, style=dotted];
m9_377 -> m9_378  [key=0, style=solid];
m9_377 -> m9_88  [key=2, style=dotted];
m9_378 -> m9_379  [key=0, style=solid];
m9_380 -> m9_368  [color=blue, key=0, style=bold];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> m9_19  [key=2, style=dotted];
m9_2 -> m9_3  [key=0, style=solid];
m9_2 -> m9_20  [key=2, style=dotted];
m9_3 -> m9_4  [key=0, style=solid];
m9_3 -> m9_21  [key=2, style=dotted];
m9_4 -> m9_5  [key=0, style=solid];
m9_4 -> m9_22  [key=2, style=dotted];
m9_5 -> m9_6  [key=0, style=solid];
m9_5 -> m9_19  [key=2, style=dotted];
m9_6 -> m9_7  [key=0, style=solid];
m9_6 -> m9_19  [key=2, style=dotted];
m9_7 -> m9_8  [key=0, style=solid];
m9_7 -> m9_23  [key=2, style=dotted];
m9_8 -> m9_9  [key=0, style=solid];
m9_8 -> m9_24  [key=2, style=dotted];
m9_8 -> m9_20  [key=2, style=dotted];
m9_8 -> m9_25  [key=2, style=dotted];
m9_8 -> m9_26  [key=2, style=dotted];
m9_8 -> m9_32  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_9 -> m9_10  [key=0, style=solid];
m9_9 -> m9_24  [key=2, style=dotted];
m9_9 -> m9_26  [key=2, style=dotted];
m9_9 -> m9_36  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_10 -> m9_11  [key=0, style=solid];
m9_10 -> m9_19  [key=2, style=dotted];
m9_11 -> m9_12  [key=0, style=solid];
m9_11 -> m9_24  [key=2, style=dotted];
m9_11 -> m9_26  [key=2, style=dotted];
m9_11 -> m9_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_12 -> m9_13  [key=0, style=solid];
m9_12 -> m9_27  [key=2, style=dotted];
m9_13 -> m9_14  [key=0, style=solid];
m9_13 -> m9_24  [key=2, style=dotted];
m9_13 -> m9_26  [key=2, style=dotted];
m9_13 -> m9_44  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_14 -> m9_15  [key=0, style=solid];
m9_14 -> m9_28  [key=2, style=dotted];
m9_14 -> m9_17  [color=darkseagreen4, key=1, label=applicationPipelines, style=dashed];
m9_14 -> m9_56  [color=darkseagreen4, key=1, label=applicationPipelines, style=dashed];
m9_15 -> m9_16  [key=0, style=solid];
m9_15 -> m9_19  [key=2, style=dotted];
m9_17 -> m9_18  [key=0, style=solid];
m9_17 -> m9_30  [key=2, style=dotted];
m9_17 -> m9_19  [key=2, style=dotted];
m9_17 -> m9_31  [key=2, style=dotted];
m9_16 -> m9_17  [key=0, style=solid];
m9_16 -> m9_24  [key=2, style=dotted];
m9_16 -> m9_29  [key=2, style=dotted];
m9_16 -> m9_48  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_16 -> m9_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_18 -> m9_0  [color=blue, key=0, style=bold];
m9_169 -> m9_170  [key=0, style=solid];
m9_170 -> m9_171  [key=0, style=solid];
m9_170 -> m9_28  [key=2, style=dotted];
m9_170 -> m9_172  [color=darkseagreen4, key=1, label=pipelines, style=dashed];
m9_170 -> m9_185  [color=darkseagreen4, key=1, label=pipelines, style=dashed];
m9_171 -> m9_172  [key=0, style=solid];
m9_171 -> m9_145  [key=2, style=dotted];
m9_171 -> m9_178  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_171 -> m9_81  [color=darkorchid, key=3, label="method methodReturn Nancy.Response ", style=bold];
m9_172 -> m9_173  [key=0, style=solid];
m9_173 -> m9_174  [key=0, style=solid];
m9_173 -> m9_94  [key=2, style=dotted];
m9_174 -> m9_175  [key=0, style=solid];
m9_174 -> m9_88  [key=2, style=dotted];
m9_175 -> m9_176  [key=0, style=solid];
m9_175 -> m9_115  [key=2, style=dotted];
m9_175 -> m9_177  [key=2, style=dotted];
m9_176 -> m9_169  [color=blue, key=0, style=bold];
m9_100 -> m9_101  [key=0, style=solid];
m9_101 -> m9_102  [key=0, style=solid];
m9_101 -> m9_94  [key=2, style=dotted];
m9_101 -> m9_103  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_102 -> m9_103  [key=0, style=solid];
m9_102 -> m9_24  [key=2, style=dotted];
m9_102 -> m9_25  [key=2, style=dotted];
m9_102 -> m9_26  [key=2, style=dotted];
m9_102 -> m9_107  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_103 -> m9_104  [key=0, style=solid];
m9_103 -> m9_88  [key=2, style=dotted];
m9_104 -> m9_105  [key=0, style=solid];
m9_104 -> m9_106  [key=2, style=dotted];
m9_105 -> m9_100  [color=blue, key=0, style=bold];
m9_126 -> m9_127  [key=0, style=solid];
m9_127 -> m9_128  [key=0, style=solid];
m9_127 -> m9_28  [key=2, style=dotted];
m9_127 -> m9_133  [color=darkseagreen4, key=1, label=pipelines, style=dashed];
m9_128 -> m9_129  [key=0, style=solid];
m9_129 -> m9_130  [key=0, style=solid];
m9_129 -> m9_94  [key=2, style=dotted];
m9_130 -> m9_131  [key=0, style=solid];
m9_130 -> m9_88  [key=2, style=dotted];
m9_131 -> m9_126  [color=blue, key=0, style=bold];
m9_288 -> m9_289  [key=0, style=solid];
m9_289 -> m9_290  [key=0, style=solid];
m9_289 -> m9_307  [key=2, style=dotted];
m9_289 -> m9_312  [color=darkseagreen4, key=1, label=testEx, style=dashed];
m9_289 -> m9_293  [color=darkseagreen4, key=1, label=testEx, style=dashed];
m9_289 -> m9_303  [color=darkseagreen4, key=1, label=testEx, style=dashed];
m9_290 -> m9_291  [key=0, style=solid];
m9_290 -> m9_308  [key=2, style=dotted];
m9_293 -> m9_294  [key=0, style=solid];
m9_293 -> m9_24  [key=2, style=dotted];
m9_293 -> m9_264  [key=2, style=dotted];
m9_293 -> m9_26  [key=2, style=dotted];
m9_293 -> m9_317  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_303 -> m9_304  [key=0, style=solid];
m9_303 -> m9_310  [key=2, style=dotted];
m9_291 -> m9_292  [key=0, style=solid];
m9_291 -> m9_261  [key=2, style=dotted];
m9_292 -> m9_293  [key=0, style=solid];
m9_292 -> m9_24  [key=2, style=dotted];
m9_292 -> m9_26  [key=2, style=dotted];
m9_292 -> m9_314  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_294 -> m9_295  [key=0, style=solid];
m9_294 -> m9_81  [color=darkorchid, key=3, label="Local variable System.Exception handledException", style=bold];
m9_294 -> m9_297  [color=darkorchid, key=3, label="Local variable System.Exception handledException", style=bold];
m9_295 -> m9_296  [key=0, style=solid];
m9_295 -> m9_81  [color=darkorchid, key=3, label="Local variable Nancy.NancyContext handledContext", style=bold];
m9_295 -> m9_297  [color=darkorchid, key=3, label="Local variable Nancy.NancyContext handledContext", style=bold];
m9_296 -> m9_297  [key=0, style=solid];
m9_296 -> m9_20  [key=2, style=dotted];
m9_296 -> m9_323  [color=darkseagreen4, key=1, label=errorResponse, style=dashed];
m9_296 -> m9_305  [color=darkseagreen4, key=1, label=errorResponse, style=dashed];
m9_297 -> m9_298  [key=0, style=solid];
m9_297 -> m9_321  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m9_297 -> m9_322  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
m9_297 -> m9_299  [color=darkseagreen4, key=1, label=routeErrorHook, style=dashed];
m9_297 -> m9_296  [color=darkorchid, key=3, label="method methodReturn Nancy.Response ", style=bold];
m9_297 -> m9_297  [color=darkorchid, key=3, label="Local variable System.Func<Nancy.NancyContext, System.Exception, Nancy.Response> routeErrorHook", style=bold];
m9_305 -> m9_306  [key=0, style=solid];
m9_305 -> m9_310  [key=2, style=dotted];
m9_298 -> m9_299  [key=0, style=solid];
m9_298 -> m9_28  [key=2, style=dotted];
m9_298 -> m9_300  [color=darkseagreen4, key=1, label=pipelines, style=dashed];
m9_298 -> m9_326  [color=darkseagreen4, key=1, label=pipelines, style=dashed];
m9_299 -> m9_300  [key=0, style=solid];
m9_299 -> m9_309  [key=2, style=dotted];
m9_300 -> m9_301  [key=0, style=solid];
m9_301 -> m9_302  [key=0, style=solid];
m9_301 -> m9_94  [key=2, style=dotted];
m9_302 -> m9_303  [key=0, style=solid];
m9_302 -> m9_88  [key=2, style=dotted];
m9_302 -> m9_304  [color=darkseagreen4, key=1, label=result, style=dashed];
m9_302 -> m9_305  [color=darkseagreen4, key=1, label=result, style=dashed];
m9_304 -> m9_305  [key=0, style=solid];
m9_304 -> m9_310  [key=2, style=dotted];
m9_306 -> m9_288  [color=blue, key=0, style=bold];
m9_25 -> m9_448  [key=0, style=solid];
m9_25 -> m9_449  [color=darkseagreen4, key=1, label="Nancy.Response", style=dashed];
m9_448 -> m9_449  [key=0, style=solid];
m9_448 -> m9_452  [key=2, style=dotted];
m9_448 -> m9_450  [color=darkseagreen4, key=1, label=tcs, style=dashed];
m9_449 -> m9_450  [key=0, style=solid];
m9_449 -> m9_453  [key=2, style=dotted];
m9_450 -> m9_451  [key=0, style=solid];
m9_451 -> m9_25  [color=blue, key=0, style=bold];
m9_110 -> m9_111  [key=0, style=solid];
m9_111 -> m9_112  [key=0, style=solid];
m9_111 -> m9_94  [key=2, style=dotted];
m9_112 -> m9_113  [key=0, style=solid];
m9_112 -> m9_88  [key=2, style=dotted];
m9_113 -> m9_114  [key=0, style=solid];
m9_113 -> m9_115  [key=2, style=dotted];
m9_113 -> m9_116  [key=2, style=dotted];
m9_114 -> m9_110  [color=blue, key=0, style=bold];
m9_434 -> m9_435  [key=0, style=solid];
m9_435 -> m9_436  [key=0, style=solid];
m9_435 -> m9_20  [key=2, style=dotted];
m9_435 -> m9_437  [color=darkseagreen4, key=1, label=localResponse, style=dashed];
m9_435 -> m9_441  [color=darkseagreen4, key=1, label=localResponse, style=dashed];
m9_436 -> m9_437  [key=0, style=solid];
m9_436 -> m9_19  [key=2, style=dotted];
m9_436 -> m9_445  [color=darkseagreen4, key=1, label=staticContent, style=dashed];
m9_436 -> m9_438  [color=darkseagreen4, key=1, label=staticContent, style=dashed];
m9_437 -> m9_438  [key=0, style=solid];
m9_437 -> m9_24  [key=2, style=dotted];
m9_437 -> m9_26  [key=2, style=dotted];
m9_437 -> m9_444  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_441 -> m9_442  [key=0, style=solid];
m9_441 -> m9_106  [key=2, style=dotted];
m9_438 -> m9_439  [key=0, style=solid];
m9_438 -> m9_30  [key=2, style=dotted];
m9_438 -> m9_19  [key=2, style=dotted];
m9_438 -> m9_440  [color=darkseagreen4, key=1, label=localEngine, style=dashed];
m9_439 -> m9_440  [key=0, style=solid];
m9_439 -> m9_94  [key=2, style=dotted];
m9_440 -> m9_441  [key=0, style=solid];
m9_440 -> m9_443  [key=2, style=dotted];
m9_442 -> m9_434  [color=blue, key=0, style=bold];
m9_117 -> m9_118  [key=0, style=solid];
m9_118 -> m9_119  [key=0, style=solid];
m9_118 -> m9_28  [key=2, style=dotted];
m9_118 -> m9_124  [color=darkseagreen4, key=1, label=pipelines, style=dashed];
m9_119 -> m9_120  [key=0, style=solid];
m9_120 -> m9_121  [key=0, style=solid];
m9_120 -> m9_94  [key=2, style=dotted];
m9_121 -> m9_122  [key=0, style=solid];
m9_121 -> m9_88  [key=2, style=dotted];
m9_122 -> m9_117  [color=blue, key=0, style=bold];
m9_253 -> m9_254  [key=0, style=solid];
m9_254 -> m9_255  [key=0, style=solid];
m9_254 -> m9_261  [key=2, style=dotted];
m9_254 -> m9_262  [key=2, style=dotted];
m9_255 -> m9_256  [key=0, style=solid];
m9_255 -> m9_24  [key=2, style=dotted];
m9_255 -> m9_26  [key=2, style=dotted];
m9_255 -> m9_266  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_256 -> m9_257  [key=0, style=solid];
m9_256 -> m9_24  [key=2, style=dotted];
m9_256 -> m9_263  [key=2, style=dotted];
m9_256 -> m9_264  [key=2, style=dotted];
m9_256 -> m9_26  [key=2, style=dotted];
m9_256 -> m9_269  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_257 -> m9_258  [key=0, style=solid];
m9_257 -> m9_94  [key=2, style=dotted];
m9_258 -> m9_259  [key=0, style=solid];
m9_258 -> m9_88  [key=2, style=dotted];
m9_259 -> m9_260  [key=0, style=solid];
m9_259 -> m9_265  [key=2, style=dotted];
m9_260 -> m9_253  [color=blue, key=0, style=bold];
m9_66 -> m9_67  [key=0, style=solid];
m9_67 -> m9_68  [key=0, style=solid];
m9_67 -> m9_62  [key=2, style=dotted];
m9_67 -> m9_70  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_68 -> m9_69  [key=0, style=solid];
m9_68 -> m9_19  [key=2, style=dotted];
m9_69 -> m9_66  [color=blue, key=0, style=bold];
m9_444 -> m9_445  [key=0, style=solid];
m9_32 -> m9_33  [key=0, style=solid];
m9_36 -> m9_37  [key=0, style=solid];
m9_40 -> m9_41  [key=0, style=solid];
m9_44 -> m9_45  [key=0, style=solid];
m9_56 -> m9_57  [key=0, style=solid];
m9_48 -> m9_49  [key=0, style=solid];
m9_52 -> m9_53  [key=0, style=solid];
m9_33 -> m9_34  [key=0, style=solid];
m9_33 -> m9_35  [key=2, style=dotted];
m9_34 -> m9_32  [color=blue, key=0, style=bold];
m9_37 -> m9_38  [key=0, style=solid];
m9_37 -> m9_39  [key=2, style=dotted];
m9_38 -> m9_36  [color=blue, key=0, style=bold];
m9_41 -> m9_42  [key=0, style=solid];
m9_41 -> m9_43  [key=2, style=dotted];
m9_42 -> m9_40  [color=blue, key=0, style=bold];
m9_45 -> m9_46  [key=0, style=solid];
m9_45 -> m9_47  [key=2, style=dotted];
m9_46 -> m9_44  [color=blue, key=0, style=bold];
m9_49 -> m9_50  [key=0, style=solid];
m9_49 -> m9_51  [key=2, style=dotted];
m9_50 -> m9_48  [color=blue, key=0, style=bold];
m9_53 -> m9_54  [key=0, style=solid];
m9_53 -> m9_51  [key=2, style=dotted];
m9_54 -> m9_52  [color=blue, key=0, style=bold];
m9_55 -> m9_56  [key=0, style=solid];
m9_57 -> m9_55  [color=blue, key=0, style=bold];
m9_63 -> m9_64  [key=0, style=solid];
m9_64 -> m9_65  [key=0, style=solid];
m9_64 -> m9_30  [key=2, style=dotted];
m9_64 -> m9_19  [key=2, style=dotted];
m9_64 -> m9_31  [key=2, style=dotted];
m9_65 -> m9_63  [color=blue, key=0, style=bold];
m9_70 -> m9_71  [key=0, style=solid];
m9_71 -> m9_72  [key=0, style=solid];
m9_71 -> m9_30  [key=2, style=dotted];
m9_71 -> m9_19  [key=2, style=dotted];
m9_71 -> m9_31  [key=2, style=dotted];
m9_72 -> m9_70  [color=blue, key=0, style=bold];
m9_77 -> m9_78  [key=0, style=solid];
m9_78 -> m9_79  [key=0, style=solid];
m9_78 -> m9_30  [key=2, style=dotted];
m9_78 -> m9_19  [key=2, style=dotted];
m9_78 -> m9_31  [key=2, style=dotted];
m9_79 -> m9_77  [color=blue, key=0, style=bold];
m9_86 -> m9_87  [key=0, style=solid];
m9_86 -> m9_88  [key=2, style=dotted];
m9_85 -> m9_86  [key=0, style=solid];
m9_87 -> m9_85  [color=blue, key=0, style=bold];
m9_97 -> m9_98  [key=0, style=solid];
m9_97 -> m9_99  [key=2, style=dotted];
m9_96 -> m9_97  [key=0, style=solid];
m9_98 -> m9_96  [color=blue, key=0, style=bold];
m9_107 -> m9_108  [key=0, style=solid];
m9_108 -> m9_109  [key=0, style=solid];
m9_108 -> m9_35  [key=2, style=dotted];
m9_109 -> m9_107  [color=blue, key=0, style=bold];
m9_124 -> m9_125  [key=0, style=solid];
m9_123 -> m9_124  [key=0, style=solid];
m9_125 -> m9_123  [color=blue, key=0, style=bold];
m9_133 -> m9_134  [key=0, style=solid];
m9_132 -> m9_133  [key=0, style=solid];
m9_134 -> m9_132  [color=blue, key=0, style=bold];
m9_151 -> m9_152  [key=0, style=solid];
m9_146 -> m9_147  [key=0, style=solid];
m9_147 -> m9_148  [key=0, style=solid];
m9_147 -> m9_149  [color=darkseagreen4, key=1, label=passedRequest, style=dashed];
m9_148 -> m9_149  [key=0, style=solid];
m9_149 -> m9_146  [color=blue, key=0, style=bold];
m9_150 -> m9_151  [key=0, style=solid];
m9_152 -> m9_150  [color=blue, key=0, style=bold];
m9_164 -> m9_165  [key=0, style=solid];
m9_167 -> m9_168  [key=0, style=solid];
m9_163 -> m9_164  [key=0, style=solid];
m9_165 -> m9_163  [color=blue, key=0, style=bold];
m9_166 -> m9_167  [key=0, style=solid];
m9_168 -> m9_166  [color=blue, key=0, style=bold];
m9_185 -> m9_186  [key=0, style=solid];
m9_178 -> m9_179  [key=0, style=solid];
m9_179 -> m9_180  [key=0, style=solid];
m9_179 -> m9_182  [key=2, style=dotted];
m9_179 -> m9_183  [key=2, style=dotted];
m9_180 -> m9_181  [key=0, style=solid];
m9_181 -> m9_178  [color=blue, key=0, style=bold];
m9_184 -> m9_185  [key=0, style=solid];
m9_186 -> m9_184  [color=blue, key=0, style=bold];
m9_197 -> m9_198  [key=0, style=solid];
m9_200 -> m9_201  [key=0, style=solid];
m9_196 -> m9_197  [key=0, style=solid];
m9_198 -> m9_196  [color=blue, key=0, style=bold];
m9_199 -> m9_200  [key=0, style=solid];
m9_201 -> m9_199  [color=blue, key=0, style=bold];
m9_215 -> m9_216  [key=0, style=solid];
m9_221 -> m9_222  [key=0, style=solid];
m9_214 -> m9_215  [key=0, style=solid];
m9_217 -> m9_218  [key=0, style=solid];
m9_216 -> m9_214  [color=blue, key=0, style=bold];
m9_218 -> m9_219  [key=0, style=solid];
m9_219 -> m9_217  [color=blue, key=0, style=bold];
m9_220 -> m9_221  [key=0, style=solid];
m9_222 -> m9_220  [color=blue, key=0, style=bold];
m9_228 -> m9_229  [key=0, style=solid];
m9_229 -> m9_230  [key=0, style=solid];
m9_229 -> m9_39  [key=2, style=dotted];
m9_230 -> m9_228  [color=blue, key=0, style=bold];
m9_237 -> m9_238  [key=0, style=solid];
m9_238 -> m9_239  [key=0, style=solid];
m9_238 -> m9_240  [key=2, style=dotted];
m9_239 -> m9_237  [color=blue, key=0, style=bold];
m9_247 -> m9_248  [key=0, style=solid];
m9_250 -> m9_251  [key=0, style=solid];
m9_248 -> m9_249  [key=0, style=solid];
m9_248 -> m9_39  [key=2, style=dotted];
m9_249 -> m9_247  [color=blue, key=0, style=bold];
m9_251 -> m9_252  [key=0, style=solid];
m9_251 -> m9_240  [key=2, style=dotted];
m9_252 -> m9_250  [color=blue, key=0, style=bold];
m9_266 -> m9_267  [key=0, style=solid];
m9_269 -> m9_270  [key=0, style=solid];
m9_267 -> m9_268  [key=0, style=solid];
m9_267 -> m9_47  [key=2, style=dotted];
m9_268 -> m9_266  [color=blue, key=0, style=bold];
m9_270 -> m9_271  [key=0, style=solid];
m9_270 -> m9_35  [key=2, style=dotted];
m9_271 -> m9_269  [color=blue, key=0, style=bold];
m9_282 -> m9_283  [key=0, style=solid];
m9_285 -> m9_286  [key=0, style=solid];
m9_283 -> m9_284  [key=0, style=solid];
m9_283 -> m9_47  [key=2, style=dotted];
m9_284 -> m9_282  [color=blue, key=0, style=bold];
m9_286 -> m9_287  [key=0, style=solid];
m9_286 -> m9_35  [key=2, style=dotted];
m9_287 -> m9_285  [color=blue, key=0, style=bold];
m9_312 -> m9_313  [key=0, style=solid];
m9_314 -> m9_315  [key=0, style=solid];
m9_317 -> m9_318  [key=0, style=solid];
m9_323 -> m9_324  [key=0, style=solid];
m9_321 -> m9_322  [key=0, style=solid];
m9_321 -> m9_304  [color=darkseagreen4, key=1, label=handledContext, style=dashed];
m9_321 -> m9_324  [color=darkseagreen4, key=1, label=handledContext, style=dashed];
m9_322 -> m9_323  [key=0, style=solid];
m9_322 -> m9_303  [color=darkseagreen4, key=1, label=handledException, style=dashed];
m9_322 -> m9_324  [color=darkseagreen4, key=1, label=handledException, style=dashed];
m9_326 -> m9_327  [key=0, style=solid];
m9_311 -> m9_312  [key=0, style=solid];
m9_313 -> m9_311  [color=blue, key=0, style=bold];
m9_315 -> m9_316  [key=0, style=solid];
m9_315 -> m9_47  [key=2, style=dotted];
m9_316 -> m9_314  [color=blue, key=0, style=bold];
m9_318 -> m9_319  [key=0, style=solid];
m9_318 -> m9_35  [key=2, style=dotted];
m9_319 -> m9_317  [color=blue, key=0, style=bold];
m9_320 -> m9_321  [key=0, style=solid];
m9_320 -> m9_322  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
m9_324 -> m9_320  [color=blue, key=0, style=bold];
m9_325 -> m9_326  [key=0, style=solid];
m9_327 -> m9_325  [color=blue, key=0, style=bold];
m9_355 -> m9_356  [key=0, style=solid];
m9_355 -> m9_357  [key=2, style=dotted];
m9_355 -> m9_358  [key=2, style=dotted];
m9_348 -> m9_349  [key=0, style=solid];
m9_351 -> m9_352  [key=0, style=solid];
m9_354 -> m9_355  [key=0, style=solid];
m9_359 -> m9_360  [key=0, style=solid];
m9_366 -> m9_367  [key=0, style=solid];
m9_362 -> m9_363  [key=0, style=solid];
m9_345 -> m9_346  [key=0, style=solid];
m9_346 -> m9_347  [key=0, style=solid];
m9_346 -> m9_307  [key=2, style=dotted];
m9_347 -> m9_345  [color=blue, key=0, style=bold];
m9_349 -> m9_350  [key=0, style=solid];
m9_349 -> m9_47  [key=2, style=dotted];
m9_350 -> m9_348  [color=blue, key=0, style=bold];
m9_352 -> m9_353  [key=0, style=solid];
m9_352 -> m9_51  [key=2, style=dotted];
m9_353 -> m9_351  [color=blue, key=0, style=bold];
m9_356 -> m9_354  [color=blue, key=0, style=bold];
m9_360 -> m9_361  [key=0, style=solid];
m9_360 -> m9_35  [key=2, style=dotted];
m9_361 -> m9_359  [color=blue, key=0, style=bold];
m9_363 -> m9_364  [key=0, style=solid];
m9_364 -> m9_362  [color=blue, key=0, style=bold];
m9_365 -> m9_366  [key=0, style=solid];
m9_367 -> m9_365  [color=blue, key=0, style=bold];
m9_381 -> m9_382  [key=0, style=solid];
m9_384 -> m9_385  [key=0, style=solid];
m9_391 -> m9_392  [key=0, style=solid];
m9_387 -> m9_388  [key=0, style=solid];
m9_382 -> m9_383  [key=0, style=solid];
m9_382 -> m9_47  [key=2, style=dotted];
m9_383 -> m9_381  [color=blue, key=0, style=bold];
m9_385 -> m9_386  [key=0, style=solid];
m9_385 -> m9_35  [key=2, style=dotted];
m9_386 -> m9_384  [color=blue, key=0, style=bold];
m9_388 -> m9_389  [key=0, style=solid];
m9_389 -> m9_387  [color=blue, key=0, style=bold];
m9_390 -> m9_391  [key=0, style=solid];
m9_392 -> m9_390  [color=blue, key=0, style=bold];
m9_404 -> m9_405  [key=0, style=solid];
m9_407 -> m9_408  [key=0, style=solid];
m9_411 -> m9_412  [key=0, style=solid];
m9_405 -> m9_406  [key=0, style=solid];
m9_405 -> m9_47  [key=2, style=dotted];
m9_406 -> m9_404  [color=blue, key=0, style=bold];
m9_408 -> m9_409  [key=0, style=solid];
m9_408 -> m9_35  [key=2, style=dotted];
m9_409 -> m9_407  [color=blue, key=0, style=bold];
m9_410 -> m9_411  [key=0, style=solid];
m9_412 -> m9_410  [color=blue, key=0, style=bold];
m9_425 -> m9_426  [key=0, style=solid];
m9_428 -> m9_429  [key=0, style=solid];
m9_432 -> m9_433  [key=0, style=solid];
m9_426 -> m9_427  [key=0, style=solid];
m9_426 -> m9_47  [key=2, style=dotted];
m9_427 -> m9_425  [color=blue, key=0, style=bold];
m9_429 -> m9_430  [key=0, style=solid];
m9_429 -> m9_35  [key=2, style=dotted];
m9_430 -> m9_428  [color=blue, key=0, style=bold];
m9_431 -> m9_432  [key=0, style=solid];
m9_433 -> m9_431  [color=blue, key=0, style=bold];
m9_445 -> m9_446  [key=0, style=solid];
m9_445 -> m9_447  [key=2, style=dotted];
m9_446 -> m9_444  [color=blue, key=0, style=bold];
m9_241 -> m9_242  [key=0, style=solid];
m9_242 -> m9_243  [key=0, style=solid];
m9_242 -> m9_94  [key=2, style=dotted];
m9_242 -> m9_244  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_243 -> m9_244  [key=0, style=solid];
m9_243 -> m9_24  [key=2, style=dotted];
m9_243 -> m9_26  [key=2, style=dotted];
m9_243 -> m9_247  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_244 -> m9_245  [key=0, style=solid];
m9_244 -> m9_88  [key=2, style=dotted];
m9_245 -> m9_246  [key=0, style=solid];
m9_245 -> m9_24  [key=2, style=dotted];
m9_245 -> m9_95  [key=2, style=dotted];
m9_245 -> m9_250  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_246 -> m9_241  [color=blue, key=0, style=bold];
m9_413 -> m9_414  [key=0, style=solid];
m9_414 -> m9_415  [key=0, style=solid];
m9_414 -> m9_307  [key=2, style=dotted];
m9_414 -> m9_417  [color=darkseagreen4, key=1, label=expectedException, style=dashed];
m9_414 -> m9_423  [color=darkseagreen4, key=1, label=expectedException, style=dashed];
m9_415 -> m9_416  [key=0, style=solid];
m9_415 -> m9_261  [key=2, style=dotted];
m9_415 -> m9_262  [key=2, style=dotted];
m9_417 -> m9_418  [key=0, style=solid];
m9_417 -> m9_24  [key=2, style=dotted];
m9_417 -> m9_264  [key=2, style=dotted];
m9_417 -> m9_26  [key=2, style=dotted];
m9_417 -> m9_428  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_423 -> m9_424  [key=0, style=solid];
m9_423 -> m9_106  [key=2, style=dotted];
m9_416 -> m9_417  [key=0, style=solid];
m9_416 -> m9_24  [key=2, style=dotted];
m9_416 -> m9_26  [key=2, style=dotted];
m9_416 -> m9_425  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_418 -> m9_419  [key=0, style=solid];
m9_418 -> m9_28  [key=2, style=dotted];
m9_418 -> m9_432  [color=darkseagreen4, key=1, label=pipelines, style=dashed];
m9_419 -> m9_420  [key=0, style=solid];
m9_420 -> m9_421  [key=0, style=solid];
m9_420 -> m9_94  [key=2, style=dotted];
m9_421 -> m9_422  [key=0, style=solid];
m9_421 -> m9_88  [key=2, style=dotted];
m9_422 -> m9_423  [key=0, style=solid];
m9_424 -> m9_413  [color=blue, key=0, style=bold];
m9_89 -> m9_90  [key=0, style=solid];
m9_90 -> m9_91  [key=0, style=solid];
m9_90 -> m9_94  [key=2, style=dotted];
m9_90 -> m9_92  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_90 -> m9_97  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_91 -> m9_92  [key=0, style=solid];
m9_91 -> m9_88  [key=2, style=dotted];
m9_92 -> m9_93  [key=0, style=solid];
m9_92 -> m9_24  [key=2, style=dotted];
m9_92 -> m9_95  [key=2, style=dotted];
m9_92 -> m9_96  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_93 -> m9_89  [color=blue, key=0, style=bold];
m9_223 -> m9_224  [key=0, style=solid];
m9_224 -> m9_225  [key=0, style=solid];
m9_224 -> m9_94  [key=2, style=dotted];
m9_225 -> m9_226  [key=0, style=solid];
m9_225 -> m9_88  [key=2, style=dotted];
m9_226 -> m9_227  [key=0, style=solid];
m9_226 -> m9_24  [key=2, style=dotted];
m9_226 -> m9_95  [key=2, style=dotted];
m9_226 -> m9_228  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_227 -> m9_223  [color=blue, key=0, style=bold];
m9_58 -> m9_59  [key=0, style=solid];
m9_59 -> m9_60  [key=0, style=solid];
m9_59 -> m9_62  [key=2, style=dotted];
m9_59 -> m9_63  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_60 -> m9_61  [key=0, style=solid];
m9_60 -> m9_19  [key=2, style=dotted];
m9_61 -> m9_58  [color=blue, key=0, style=bold];
m9_135 -> m9_136  [key=0, style=solid];
m9_136 -> m9_137  [key=0, style=solid];
m9_136 -> m9_81  [color=darkorchid, key=3, label="Local variable Nancy.Request passedRequest", style=bold];
m9_137 -> m9_138  [key=0, style=solid];
m9_137 -> m9_28  [key=2, style=dotted];
m9_137 -> m9_139  [color=darkseagreen4, key=1, label=pipelines, style=dashed];
m9_137 -> m9_151  [color=darkseagreen4, key=1, label=pipelines, style=dashed];
m9_138 -> m9_139  [key=0, style=solid];
m9_138 -> m9_145  [key=2, style=dotted];
m9_138 -> m9_146  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_138 -> m9_143  [color=darkseagreen4, key=1, label=passedRequest, style=dashed];
m9_138 -> m9_81  [color=darkorchid, key=3, label="method methodReturn Nancy.Response ", style=bold];
m9_139 -> m9_140  [key=0, style=solid];
m9_143 -> m9_144  [key=0, style=solid];
m9_143 -> m9_106  [key=2, style=dotted];
m9_140 -> m9_141  [key=0, style=solid];
m9_140 -> m9_94  [key=2, style=dotted];
m9_140 -> m9_142  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_140 -> m9_143  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_141 -> m9_142  [key=0, style=solid];
m9_142 -> m9_143  [key=0, style=solid];
m9_142 -> m9_88  [key=2, style=dotted];
m9_144 -> m9_135  [color=blue, key=0, style=bold];
m9_153 -> m9_154  [key=0, style=solid];
m9_154 -> m9_155  [key=0, style=solid];
m9_154 -> m9_19  [key=2, style=dotted];
m9_154 -> m9_156  [color=darkseagreen4, key=1, label=returnedResponse, style=dashed];
m9_154 -> m9_164  [color=darkseagreen4, key=1, label=returnedResponse, style=dashed];
m9_154 -> m9_160  [color=darkseagreen4, key=1, label=returnedResponse, style=dashed];
m9_155 -> m9_156  [key=0, style=solid];
m9_155 -> m9_28  [key=2, style=dotted];
m9_155 -> m9_157  [color=darkseagreen4, key=1, label=pipelines, style=dashed];
m9_155 -> m9_167  [color=darkseagreen4, key=1, label=pipelines, style=dashed];
m9_156 -> m9_157  [key=0, style=solid];
m9_156 -> m9_145  [key=2, style=dotted];
m9_156 -> m9_163  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_160 -> m9_161  [key=0, style=solid];
m9_160 -> m9_162  [key=2, style=dotted];
m9_157 -> m9_158  [key=0, style=solid];
m9_158 -> m9_159  [key=0, style=solid];
m9_158 -> m9_94  [key=2, style=dotted];
m9_159 -> m9_160  [key=0, style=solid];
m9_159 -> m9_88  [key=2, style=dotted];
m9_161 -> m9_153  [color=blue, key=0, style=bold];
m9_202 -> m9_203  [key=0, style=solid];
m9_203 -> m9_204  [key=0, style=solid];
m9_203 -> m9_19  [key=2, style=dotted];
m9_203 -> m9_206  [color=darkseagreen4, key=1, label=returnedResponse, style=dashed];
m9_203 -> m9_215  [color=darkseagreen4, key=1, label=returnedResponse, style=dashed];
m9_204 -> m9_205  [key=0, style=solid];
m9_204 -> m9_204  [color=darkorchid, key=3, label="Local variable bool postReqCalled", style=bold];
m9_206 -> m9_207  [key=0, style=solid];
m9_206 -> m9_145  [key=2, style=dotted];
m9_206 -> m9_214  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_205 -> m9_206  [key=0, style=solid];
m9_205 -> m9_28  [key=2, style=dotted];
m9_205 -> m9_207  [color=darkseagreen4, key=1, label=pipelines, style=dashed];
m9_205 -> m9_208  [color=darkseagreen4, key=1, label=pipelines, style=dashed];
m9_205 -> m9_221  [color=darkseagreen4, key=1, label=pipelines, style=dashed];
m9_207 -> m9_208  [key=0, style=solid];
m9_207 -> m9_213  [key=2, style=dotted];
m9_207 -> m9_217  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_207 -> m9_211  [color=darkseagreen4, key=1, label=postReqCalled, style=dashed];
m9_208 -> m9_209  [key=0, style=solid];
m9_211 -> m9_212  [key=0, style=solid];
m9_211 -> m9_177  [key=2, style=dotted];
m9_209 -> m9_210  [key=0, style=solid];
m9_209 -> m9_94  [key=2, style=dotted];
m9_210 -> m9_211  [key=0, style=solid];
m9_210 -> m9_88  [key=2, style=dotted];
m9_212 -> m9_202  [color=blue, key=0, style=bold];
m9_272 -> m9_273  [key=0, style=solid];
m9_273 -> m9_274  [key=0, style=solid];
m9_273 -> m9_261  [key=2, style=dotted];
m9_273 -> m9_262  [key=2, style=dotted];
m9_274 -> m9_275  [key=0, style=solid];
m9_274 -> m9_24  [key=2, style=dotted];
m9_274 -> m9_26  [key=2, style=dotted];
m9_274 -> m9_282  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_275 -> m9_276  [key=0, style=solid];
m9_275 -> m9_24  [key=2, style=dotted];
m9_275 -> m9_263  [key=2, style=dotted];
m9_275 -> m9_264  [key=2, style=dotted];
m9_275 -> m9_26  [key=2, style=dotted];
m9_275 -> m9_285  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_276 -> m9_277  [key=0, style=solid];
m9_276 -> m9_94  [key=2, style=dotted];
m9_277 -> m9_278  [key=0, style=solid];
m9_277 -> m9_88  [key=2, style=dotted];
m9_278 -> m9_279  [key=0, style=solid];
m9_278 -> m9_280  [key=2, style=dotted];
m9_278 -> m9_281  [key=2, style=dotted];
m9_279 -> m9_272  [color=blue, key=0, style=bold];
m9_328 -> m9_329  [key=0, style=solid];
m9_329 -> m9_330  [key=0, style=solid];
m9_329 -> m9_308  [key=2, style=dotted];
m9_329 -> m9_332  [color=darkseagreen4, key=1, label=routeUnderTest, style=dashed];
m9_329 -> m9_355  [color=darkseagreen4, key=1, label=routeUnderTest, style=dashed];
m9_330 -> m9_331  [key=0, style=solid];
m9_330 -> m9_261  [key=2, style=dotted];
m9_332 -> m9_333  [key=0, style=solid];
m9_332 -> m9_24  [key=2, style=dotted];
m9_332 -> m9_342  [key=2, style=dotted];
m9_332 -> m9_351  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_332 -> m9_354  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_331 -> m9_332  [key=0, style=solid];
m9_331 -> m9_24  [key=2, style=dotted];
m9_331 -> m9_26  [key=2, style=dotted];
m9_331 -> m9_348  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_333 -> m9_334  [key=0, style=solid];
m9_333 -> m9_24  [key=2, style=dotted];
m9_333 -> m9_307  [key=2, style=dotted];
m9_333 -> m9_264  [key=2, style=dotted];
m9_333 -> m9_26  [key=2, style=dotted];
m9_333 -> m9_359  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_334 -> m9_335  [key=0, style=solid];
m9_334 -> m9_28  [key=2, style=dotted];
m9_334 -> m9_336  [color=darkseagreen4, key=1, label=pipelines, style=dashed];
m9_334 -> m9_366  [color=darkseagreen4, key=1, label=pipelines, style=dashed];
m9_335 -> m9_336  [key=0, style=solid];
m9_335 -> m9_309  [key=2, style=dotted];
m9_335 -> m9_362  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_336 -> m9_337  [key=0, style=solid];
m9_337 -> m9_338  [key=0, style=solid];
m9_337 -> m9_94  [key=2, style=dotted];
m9_338 -> m9_339  [key=0, style=solid];
m9_338 -> m9_88  [key=2, style=dotted];
m9_338 -> m9_340  [color=darkseagreen4, key=1, label=result, style=dashed];
m9_339 -> m9_340  [key=0, style=solid];
m9_339 -> m9_343  [key=2, style=dotted];
m9_339 -> m9_177  [key=2, style=dotted];
m9_340 -> m9_341  [key=0, style=solid];
m9_340 -> m9_344  [key=2, style=dotted];
m9_341 -> m9_328  [color=blue, key=0, style=bold];
m9_187 -> m9_188  [key=0, style=solid];
m9_188 -> m9_189  [key=0, style=solid];
m9_188 -> m9_20  [key=2, style=dotted];
m9_188 -> m9_190  [color=darkseagreen4, key=1, label=newResponse, style=dashed];
m9_188 -> m9_197  [color=darkseagreen4, key=1, label=newResponse, style=dashed];
m9_188 -> m9_194  [color=darkseagreen4, key=1, label=newResponse, style=dashed];
m9_189 -> m9_190  [key=0, style=solid];
m9_189 -> m9_28  [key=2, style=dotted];
m9_189 -> m9_191  [color=darkseagreen4, key=1, label=pipelines, style=dashed];
m9_189 -> m9_200  [color=darkseagreen4, key=1, label=pipelines, style=dashed];
m9_190 -> m9_191  [key=0, style=solid];
m9_190 -> m9_145  [key=2, style=dotted];
m9_190 -> m9_196  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_194 -> m9_195  [key=0, style=solid];
m9_194 -> m9_106  [key=2, style=dotted];
m9_191 -> m9_192  [key=0, style=solid];
m9_192 -> m9_193  [key=0, style=solid];
m9_192 -> m9_94  [key=2, style=dotted];
m9_193 -> m9_194  [key=0, style=solid];
m9_193 -> m9_88  [key=2, style=dotted];
m9_195 -> m9_187  [color=blue, key=0, style=bold];
m9_454 -> m9_1  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_2  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_3  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_4  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_5  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_6  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_7  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_8  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_33  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_9  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_37  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_10  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_11  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_41  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_12  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_13  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_45  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_15  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_16  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_49  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_17  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_59  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_64  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_67  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_71  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_74  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_78  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_82  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_86  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_91  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_92  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_97  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_102  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_108  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_103  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_104  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_112  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_119  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_121  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_128  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_130  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_139  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_141  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_142  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_157  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_159  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_172  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_174  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_191  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_193  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_208  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_210  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_225  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_226  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_229  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_233  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_234  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_238  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_243  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_248  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_244  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_245  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_251  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_255  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_267  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_256  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_270  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_258  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_274  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_283  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_275  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_286  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_277  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_292  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_315  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_293  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_318  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_300  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_302  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_331  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_349  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_332  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_352  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_333  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_360  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_336  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_338  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_371  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_382  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_372  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_385  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_375  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_377  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_395  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_405  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_396  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_408  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_398  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_400  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_416  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_426  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_417  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_429  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_419  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_421  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_454 -> m9_438  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.NancyEngineFixture", style=dashed];
m9_455 -> m9_56  [color=darkseagreen4, key=1, label=applicationPipelines, style=dashed];
m9_456 -> m9_86  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_457 -> m9_97  [color=darkseagreen4, key=1, label=request, style=dashed];
m9_458 -> m9_124  [color=darkseagreen4, key=1, label=pipelines, style=dashed];
m9_459 -> m9_133  [color=darkseagreen4, key=1, label=pipelines, style=dashed];
m9_460 -> m9_151  [color=darkseagreen4, key=1, label=pipelines, style=dashed];
m9_461 -> m9_164  [color=darkseagreen4, key=1, label=returnedResponse, style=dashed];
m9_462 -> m9_167  [color=darkseagreen4, key=1, label=pipelines, style=dashed];
m9_463 -> m9_185  [color=darkseagreen4, key=1, label=pipelines, style=dashed];
m9_464 -> m9_197  [color=darkseagreen4, key=1, label=newResponse, style=dashed];
m9_465 -> m9_200  [color=darkseagreen4, key=1, label=pipelines, style=dashed];
m9_466 -> m9_215  [color=darkseagreen4, key=1, label=returnedResponse, style=dashed];
m9_467 -> m9_221  [color=darkseagreen4, key=1, label=pipelines, style=dashed];
m9_468 -> m9_312  [color=darkseagreen4, key=1, label=testEx, style=dashed];
m9_469 -> m9_323  [color=darkseagreen4, key=1, label=errorResponse, style=dashed];
m9_470 -> m9_326  [color=darkseagreen4, key=1, label=pipelines, style=dashed];
m9_471 -> m9_355  [color=darkseagreen4, key=1, label=routeUnderTest, style=dashed];
m9_472 -> m9_366  [color=darkseagreen4, key=1, label=pipelines, style=dashed];
m9_473 -> m9_391  [color=darkseagreen4, key=1, label=pipelines, style=dashed];
m9_474 -> m9_411  [color=darkseagreen4, key=1, label=pipelines, style=dashed];
m9_475 -> m9_432  [color=darkseagreen4, key=1, label=pipelines, style=dashed];
m9_476 -> m9_445  [color=darkseagreen4, key=1, label=staticContent, style=dashed];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_2  [key=0, style=solid];
m10_1 -> m10_6  [key=2, style=dotted];
m10_2 -> m10_3  [key=0, style=solid];
m10_2 -> m10_7  [key=2, style=dotted];
m10_3 -> m10_4  [key=0, style=solid];
m10_3 -> m10_8  [key=2, style=dotted];
m10_4 -> m10_5  [key=0, style=solid];
m10_4 -> m10_8  [key=2, style=dotted];
m10_5 -> m10_0  [color=blue, key=0, style=bold];
m10_9 -> m10_10  [color=green, key=0, style=solid];
m10_9 -> m10_17  [color=darkseagreen4, key=1, label="Nancy.Responses.Negotiation.MediaRange", style=dashed];
m10_9 -> m10_11  [color=darkseagreen4, key=1, label="Nancy.Responses.Negotiation.MediaRange", style=dashed];
m10_9 -> m10_21  [color=darkseagreen4, key=1, label="Nancy.Responses.Negotiation.MediaRange", style=dashed];
m10_10 -> m10_11  [color=green, key=0, style=solid];
m10_10 -> m10_13  [color=green, key=2, style=dotted];
m10_10 -> m10_16  [color=green, key=1, label="lambda expression", style=dashed];
m10_11 -> m10_12  [key=0, style=solid];
m10_11 -> m10_14  [key=2, style=dotted];
m10_11 -> m10_15  [key=2, style=dotted];
m10_11 -> m10_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_12 -> m10_9  [color=blue, key=0, style=bold];
m10_20 -> m10_21  [key=0, style=solid];
m10_16 -> m10_17  [key=0, style=solid];
m10_17 -> m10_17  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<Nancy.Responses.Negotiation.MediaRange, System.Func<dynamic>>", style=dashed];
m10_17 -> m10_18  [key=0, style=solid];
m10_17 -> m10_19  [key=2, style=dotted];
m10_21 -> m10_21  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<Nancy.Responses.Negotiation.MediaRange, System.Func<dynamic>>", style=dashed];
m10_21 -> m10_22  [key=0, style=solid];
m10_21 -> m10_19  [key=2, style=dotted];
m10_18 -> m10_16  [color=blue, key=0, style=bold];
m10_22 -> m10_20  [color=blue, key=0, style=bold];
m10_23 -> m10_10  [color=green, key=1, label="Nancy.Responses.Negotiation.NegotiationContext", style=dashed];
m10_23 -> m10_1  [color=darkseagreen4, key=1, label="Nancy.Responses.Negotiation.NegotiationContext", style=dashed];
m10_23 -> m10_2  [color=darkseagreen4, key=1, label="Nancy.Responses.Negotiation.NegotiationContext", style=dashed];
m10_23 -> m10_3  [color=darkseagreen4, key=1, label="Nancy.Responses.Negotiation.NegotiationContext", style=dashed];
m10_23 -> m10_4  [color=darkseagreen4, key=1, label="Nancy.Responses.Negotiation.NegotiationContext", style=dashed];
m10_23 -> m10_11  [color=darkseagreen4, key=1, label="Nancy.Responses.Negotiation.NegotiationContext", style=dashed];
m10_24 -> m10_17  [color=darkseagreen4, key=1, label="Nancy.Responses.Negotiation.MediaRange", style=dashed];
m10_24 -> m10_21  [color=darkseagreen4, key=1, label="Nancy.Responses.Negotiation.MediaRange", style=dashed];
m11_90 -> m11_91  [key=0, style=solid];
m11_90 -> m11_10  [key=2, style=dotted];
m11_163 -> m11_164  [key=0, style=solid];
m11_163 -> m11_166  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m11_163 -> m11_158  [color=darkorchid, key=3, label="Parameter variable string path", style=bold];
m11_164 -> m11_165  [key=0, style=solid];
m11_164 -> m11_166  [key=0, style=solid];
m11_164 -> m11_167  [key=2, style=dotted];
m11_166 -> m11_167  [key=0, style=solid];
m11_166 -> m11_166  [color=darkseagreen4, key=1, label=cookie, style=dashed];
m11_166 -> m11_169  [key=2, style=dotted];
m11_166 -> m11_170  [key=2, style=dotted];
m11_166 -> m11_0  [color=darkorchid, key=3, label="Field variable System.Collections.Generic.IEnumerable<Nancy.Responses.Negotiation.IResponseProcessor> responseProcessors", style=bold];
m11_165 -> m11_167  [key=0, style=solid];
m11_165 -> m11_168  [key=2, style=dotted];
m11_165 -> m11_163  [color=blue, key=0, style=bold];
m11_167 -> m11_163  [color=blue, key=0, style=bold];
m11_40 -> m11_156  [color=darkorchid, key=3, label="method methodReturn System.DateTime? ParseDateTime", style=bold];
m11_40 -> m11_194  [key=0, style=solid];
m11_40 -> m11_195  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_40 -> m11_41  [key=0, style=solid];
m11_194 -> m11_195  [key=0, style=solid];
m11_195 -> m11_196  [key=0, style=solid];
m11_195 -> m11_197  [key=0, style=solid];
m11_195 -> m11_199  [key=2, style=dotted];
m11_196 -> m11_198  [key=0, style=solid];
m11_197 -> m11_198  [key=0, style=solid];
m11_198 -> m11_40  [color=blue, key=0, style=bold];
m11_161 -> m11_162  [key=0, style=solid];
m11_161 -> m11_161  [color=darkseagreen4, key=1, label=result, style=dashed];
m11_45 -> m11_46  [key=0, style=solid];
m11_131 -> m11_132  [key=0, style=solid];
m11_131 -> m11_133  [color=darkseagreen4, key=1, label=index, style=dashed];
m11_131 -> m11_139  [color=darkseagreen4, key=1, label=index, style=dashed];
m11_143 -> m11_144  [key=0, style=solid];
m11_143 -> m11_48  [key=2, style=dotted];
m11_143 -> m11_96  [key=2, style=dotted];
m11_110 -> m11_107  [color=blue, key=0, style=bold];
m11_159 -> m11_150  [color=darkorchid, key=3, label="Parameter variable System.Type T", style=bold];
m11_159 -> m11_191  [key=0, style=solid];
m11_159 -> m11_160  [key=0, style=solid];
m11_159 -> m11_163  [key=2, style=dotted];
m11_191 -> m11_192  [key=0, style=solid];
m11_191 -> m11_193  [key=2, style=dotted];
m11_192 -> m11_159  [color=blue, key=0, style=bold];
m11_59 -> m11_57  [color=blue, key=0, style=bold];
m11_106 -> m11_107  [key=0, style=solid];
m11_106 -> m11_109  [key=2, style=dotted];
m11_7 -> m11_8  [key=0, style=solid];
m11_7 -> m11_10  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m11_7 -> m11_11  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m11_7 -> m11_12  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m11_8 -> m11_9  [key=0, style=solid];
m11_8 -> m11_15  [key=2, style=dotted];
m11_8 -> m11_10  [color=darkseagreen4, key=1, label=extension, style=dashed];
m11_10 -> m11_11  [key=0, style=solid];
m11_11 -> m11_12  [key=0, style=solid];
m11_11 -> m11_17  [key=2, style=dotted];
m11_12 -> m11_13  [key=0, style=solid];
m11_12 -> m11_18  [key=2, style=dotted];
m11_9 -> m11_10  [key=0, style=solid];
m11_9 -> m11_12  [key=0, style=solid];
m11_9 -> m11_16  [key=2, style=dotted];
m11_9 -> m11_7  [color=blue, key=0, style=bold];
m11_13 -> m11_14  [key=0, style=solid];
m11_13 -> m11_11  [color=blue, key=0, style=bold];
m11_14 -> m11_7  [color=blue, key=0, style=bold];
m11_14 -> m11_15  [key=0, style=solid];
m11_99 -> m11_100  [key=0, style=solid];
m11_99 -> m11_95  [color=darkorchid, key=3, label="method methodReturn System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator", style=bold];
m11_158 -> m11_159  [key=0, style=solid];
m11_158 -> m11_160  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_158 -> m11_150  [color=blue, key=0, style=bold];
m11_160 -> m11_161  [key=0, style=solid];
m11_160 -> m11_18  [key=2, style=dotted];
m11_162 -> m11_158  [color=blue, key=0, style=bold];
m11_48 -> m11_49  [key=0, style=solid];
m11_96 -> m11_97  [key=0, style=solid];
m11_96 -> m11_98  [key=2, style=dotted];
m11_92 -> m11_152  [key=0, style=solid];
m11_92 -> m11_93  [key=0, style=solid];
m11_152 -> m11_153  [key=0, style=solid];
m11_152 -> m11_154  [key=2, style=dotted];
m11_152 -> m11_160  [key=2, style=dotted];
m11_152 -> m11_10  [key=2, style=dotted];
m11_153 -> m11_92  [color=blue, key=0, style=bold];
m11_153 -> m11_154  [key=0, style=solid];
m11_153 -> m11_161  [key=2, style=dotted];
m11_109 -> m11_105  [color=darkorchid, key=3, label="Parameter variable string name", style=bold];
m11_109 -> m11_171  [key=0, style=solid];
m11_109 -> m11_14  [color=darkorchid, key=3, label="Parameter variable string name", style=bold];
m11_109 -> m11_51  [color=darkorchid, key=3, label="Parameter variable string name", style=bold];
m11_109 -> m11_60  [color=darkorchid, key=3, label="Parameter variable string name", style=bold];
m11_109 -> m11_173  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IEnumerable<string> GetValue", style=bold];
m11_109 -> m11_110  [key=0, style=solid];
m11_109 -> m11_112  [key=2, style=dotted];
m11_171 -> m11_172  [key=0, style=solid];
m11_171 -> m11_173  [key=2, style=dotted];
m11_171 -> m11_174  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_171 -> m11_152  [color=darkseagreen4, key=1, label="Nancy.Routing.DefaultRouteResolver.ResolveResults", style=dashed];
m11_172 -> m11_109  [color=blue, key=0, style=bold];
m11_172 -> m11_156  [color=darkseagreen4, key=1, label="Nancy.Routing.DefaultRouteResolver.DefaultRouteResolverDiagnosticsProvider", style=dashed];
m11_172 -> m11_160  [color=darkseagreen4, key=1, label="Nancy.Routing.DefaultRouteResolver.DefaultRouteResolverDiagnosticsProvider", style=dashed];
m11_105 -> m11_121  [color=darkorchid, key=3, label="Parameter variable string header", style=bold];
m11_105 -> m11_106  [key=0, style=solid];
m11_105 -> m11_4  [color=darkorchid, key=3, label="Parameter variable string header", style=bold];
m11_105 -> m11_103  [color=blue, key=0, style=bold];
m11_107 -> m11_111  [key=2, style=dotted];
m11_107 -> m11_108  [key=0, style=solid];
m11_107 -> m11_110  [key=2, style=dotted];
m11_107 -> m11_112  [key=2, style=dotted];
m11_107 -> m11_113  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_107 -> m11_117  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_107 -> m11_109  [color=darkseagreen4, key=1, label="System.Tuple<string, int, Nancy.Routing.RouteDescription, Nancy.Routing.IRoutePatternMatchResult>", style=dashed];
m11_108 -> m11_105  [color=blue, key=0, style=bold];
m11_108 -> m11_109  [key=0, style=solid];
m11_108 -> m11_111  [key=2, style=dotted];
m11_3 -> m11_4  [key=0, style=solid];
m11_94 -> m11_0  [color=darkorchid, key=3, label="Field variable Nancy.INancyModuleCatalog nancyModuleCatalog", style=bold];
m11_94 -> m11_92  [color=blue, key=0, style=bold];
m11_116 -> m11_117  [key=0, style=solid];
m11_116 -> m11_118  [color=darkseagreen4, key=1, label="System.Tuple<string, int, Nancy.Routing.RouteDescription, Nancy.Routing.IRoutePatternMatchResult>", style=dashed];
m11_102 -> m11_103  [key=0, style=solid];
m11_102 -> m11_104  [key=2, style=dotted];
m11_89 -> m11_90  [key=0, style=solid];
m11_89 -> m11_18  [color=blue, key=0, style=bold];
m11_50 -> m11_51  [key=0, style=solid];
m11_50 -> m11_48  [color=blue, key=0, style=bold];
m11_53 -> m11_54  [key=0, style=solid];
m11_53 -> m11_51  [color=blue, key=0, style=bold];
m11_60 -> m11_61  [key=0, style=solid];
m11_51 -> m11_52  [key=0, style=solid];
m11_51 -> m11_48  [key=2, style=dotted];
m11_51 -> m11_49  [key=2, style=dotted];
m11_52 -> m11_50  [color=blue, key=0, style=bold];
m11_52 -> m11_53  [key=0, style=solid];
m11_54 -> m11_55  [key=0, style=solid];
m11_54 -> m11_47  [key=2, style=dotted];
m11_54 -> m11_56  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_55 -> m11_53  [color=blue, key=0, style=bold];
m11_55 -> m11_56  [key=0, style=solid];
m11_55 -> m11_10  [key=2, style=dotted];
m11_55 -> m11_40  [key=2, style=dotted];
m11_56 -> m11_57  [key=0, style=solid];
m11_56 -> m11_54  [color=blue, key=0, style=bold];
m11_57 -> m11_58  [key=0, style=solid];
m11_57 -> m11_59  [key=2, style=dotted];
m11_58 -> m11_56  [color=blue, key=0, style=bold];
m11_58 -> m11_59  [key=0, style=solid];
m11_58 -> m11_44  [key=2, style=dotted];
m11_61 -> m11_62  [key=0, style=solid];
m11_62 -> m11_60  [color=blue, key=0, style=bold];
m11_117 -> m11_118  [key=0, style=solid];
m11_117 -> m11_121  [key=2, style=dotted];
m11_117 -> m11_119  [color=darkseagreen4, key=1, label=validationResult, style=dashed];
m11_103 -> m11_104  [key=0, style=solid];
m11_103 -> m11_44  [color=blue, key=0, style=bold];
m11_113 -> m11_114  [key=0, style=solid];
m11_122 -> m11_123  [color=green, key=0, style=solid];
m11_122 -> m11_105  [key=2, style=dotted];
m11_125 -> m11_126  [key=0, style=solid];
m11_125 -> m11_127  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m11_125 -> m11_129  [color=darkseagreen4, key=1, label="System.Tuple<string, int, Nancy.Routing.RouteDescription, Nancy.Routing.IRoutePatternMatchResult>", style=dashed];
m11_125 -> m11_121  [color=blue, key=0, style=bold];
m11_132 -> m11_133  [key=0, style=solid];
m11_132 -> m11_140  [color=green, key=0, style=solid];
m11_139 -> m11_140  [key=0, style=solid];
m11_139 -> m11_132  [key=0, style=solid];
m11_139 -> m11_139  [color=darkseagreen4, key=1, label=index, style=dashed];
m11_142 -> m11_143  [key=0, style=solid];
m11_142 -> m11_144  [color=darkseagreen4, key=1, label="System.Tuple<string, int, Nancy.Routing.RouteDescription, Nancy.Routing.IRoutePatternMatchResult>", style=dashed];
m11_146 -> m11_147  [key=0, style=solid];
m11_149 -> m11_150  [key=0, style=solid];
m11_104 -> m11_105  [key=0, style=solid];
m11_104 -> m11_106  [key=2, style=dotted];
m11_114 -> m11_115  [key=0, style=solid];
m11_114 -> m11_106  [key=2, style=dotted];
m11_114 -> m11_116  [key=2, style=dotted];
m11_115 -> m11_113  [color=blue, key=0, style=bold];
m11_118 -> m11_119  [key=0, style=solid];
m11_118 -> m11_26  [key=2, style=dotted];
m11_118 -> m11_120  [key=2, style=dotted];
m11_119 -> m11_120  [key=0, style=solid];
m11_119 -> m11_112  [key=2, style=dotted];
m11_119 -> m11_117  [color=blue, key=0, style=bold];
m11_120 -> m11_116  [color=blue, key=0, style=bold];
m11_123 -> m11_124  [color=green, key=0, style=solid];
m11_123 -> m11_106  [key=2, style=dotted];
m11_123 -> m11_123  [color=green, key=3, label="Local variable int index", style=bold];
m11_123 -> m11_111  [color=green, key=2, style=dotted];
m11_123 -> m11_127  [color=green, key=1, label="lambda expression", style=dashed];
m11_124 -> m11_122  [color=blue, key=0, style=bold];
m11_124 -> m11_125  [key=0, style=solid];
m11_124 -> m11_126  [key=2, style=dotted];
m11_124 -> m11_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_126 -> m11_127  [key=0, style=solid];
m11_126 -> m11_131  [key=2, style=dotted];
m11_126 -> m11_128  [color=darkseagreen4, key=1, label=routeMethod, style=dashed];
m11_127 -> m11_128  [key=0, style=solid];
m11_127 -> m11_131  [key=2, style=dotted];
m11_129 -> m11_130  [key=0, style=solid];
m11_129 -> m11_112  [key=2, style=dotted];
m11_129 -> m11_140  [color=green, key=1, label=mediaRange, style=dashed];
m11_129 -> m11_120  [key=2, style=dotted];
m11_128 -> m11_129  [key=0, style=solid];
m11_128 -> m11_99  [key=2, style=dotted];
m11_128 -> m11_132  [color=darkseagreen4, key=1, label=sections, style=dashed];
m11_128 -> m11_142  [key=2, style=dotted];
m11_128 -> m11_133  [color=darkseagreen4, key=1, label=sections, style=dashed];
m11_130 -> m11_125  [color=blue, key=0, style=bold];
m11_130 -> m11_140  [color=green, key=1, label=quality, style=dashed];
m11_130 -> m11_131  [key=0, style=solid];
m11_133 -> m11_134  [key=0, style=solid];
m11_133 -> m11_135  [key=2, style=dotted];
m11_133 -> m11_136  [color=darkseagreen4, key=1, label=trimmedValue, style=dashed];
m11_133 -> m11_120  [key=2, style=dotted];
m11_134 -> m11_132  [color=blue, key=0, style=bold];
m11_134 -> m11_139  [key=0, style=solid];
m11_134 -> m11_135  [key=0, style=solid];
m11_134 -> m11_143  [key=2, style=dotted];
m11_136 -> m11_137  [key=0, style=solid];
m11_136 -> m11_144  [key=2, style=dotted];
m11_137 -> m11_138  [key=0, style=solid];
m11_137 -> m11_139  [key=0, style=solid];
m11_137 -> m11_145  [key=2, style=dotted];
m11_138 -> m11_136  [color=blue, key=0, style=bold];
m11_138 -> m11_140  [color=green, key=0, style=solid];
m11_140 -> m11_141  [color=green, key=0, style=solid];
m11_140 -> m11_106  [key=2, style=dotted];
m11_140 -> m11_112  [color=green, key=2, style=dotted];
m11_141 -> m11_139  [color=blue, key=0, style=bold];
m11_141 -> m11_127  [color=blue, key=0, style=bold];
m11_144 -> m11_145  [key=0, style=solid];
m11_144 -> m11_112  [key=2, style=dotted];
m11_145 -> m11_142  [color=blue, key=0, style=bold];
m11_147 -> m11_148  [key=0, style=solid];
m11_147 -> m11_106  [key=2, style=dotted];
m11_148 -> m11_146  [color=blue, key=0, style=bold];
m11_150 -> m11_151  [key=0, style=solid];
m11_150 -> m11_106  [key=2, style=dotted];
m11_150 -> m11_152  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_150 -> m11_155  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_150 -> m11_157  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_150 -> m11_156  [color=darkorchid, key=3, label="method methodReturn object GetDefaultValue", style=bold];
m11_151 -> m11_149  [color=blue, key=0, style=bold];
m11_151 -> m11_159  [key=2, style=dotted];
m11_151 -> m11_152  [key=0, style=solid];
m11_151 -> m11_155  [key=0, style=solid];
m11_42 -> m11_43  [key=0, style=solid];
m11_42 -> m11_44  [key=2, style=dotted];
m11_73 -> m11_74  [key=0, style=solid];
m11_73 -> m11_44  [key=2, style=dotted];
m11_73 -> m11_91  [key=2, style=dotted];
m11_73 -> m11_122  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_4 -> m11_5  [key=0, style=solid];
m11_186 -> m11_187  [key=0, style=solid];
m11_41 -> m11_42  [key=0, style=solid];
m11_43 -> m11_41  [color=blue, key=0, style=bold];
m11_43 -> m11_36  [key=0, style=solid];
m11_72 -> m11_73  [key=0, style=solid];
m11_72 -> m11_75  [key=0, style=solid];
m11_72 -> m11_96  [key=2, style=dotted];
m11_74 -> m11_72  [color=blue, key=0, style=bold];
m11_74 -> m11_89  [key=0, style=solid];
m11_74 -> m11_92  [key=2, style=dotted];
m11_74 -> m11_26  [key=2, style=dotted];
m11_74 -> m11_93  [key=2, style=dotted];
m11_174 -> m11_175  [key=0, style=solid];
m11_6 -> m11_4  [color=blue, key=0, style=bold];
m11_6 -> m11_0  [color=blue, key=0, style=bold];
m11_5 -> m11_6  [key=0, style=solid];
m11_188 -> m11_186  [color=blue, key=0, style=bold];
m11_187 -> m11_188  [key=0, style=solid];
m11_187 -> m11_189  [key=2, style=dotted];
m11_187 -> m11_190  [key=2, style=dotted];
m11_135 -> m11_136  [key=0, style=solid];
m11_20 -> m11_21  [key=0, style=solid];
m11_20 -> m11_24  [key=2, style=dotted];
m11_20 -> m11_22  [color=darkseagreen4, key=1, label=associatedModule, style=dashed];
m11_27 -> m11_28  [key=0, style=solid];
m11_27 -> m11_30  [key=2, style=dotted];
m11_34 -> m11_35  [key=0, style=solid];
m11_34 -> m11_39  [color=darkseagreen4, key=1, label=maxParameters, style=dashed];
m11_34 -> m11_33  [color=darkorchid, key=3, label="Local variable int maxParameters", style=bold];
m11_34 -> m11_38  [color=darkorchid, key=3, label="Local variable int maxParameters", style=bold];
m11_66 -> m11_67  [key=0, style=solid];
m11_66 -> m11_94  [key=2, style=dotted];
m11_79 -> m11_80  [key=0, style=solid];
m11_79 -> m11_89  [key=0, style=solid];
m11_79 -> m11_92  [key=2, style=dotted];
m11_79 -> m11_26  [key=2, style=dotted];
m11_79 -> m11_100  [key=2, style=dotted];
m11_86 -> m11_87  [key=0, style=solid];
m11_86 -> m11_32  [key=2, style=dotted];
m11_86 -> m11_102  [key=2, style=dotted];
m11_86 -> m11_88  [color=darkseagreen4, key=1, label=selected, style=dashed];
m11_17 -> m11_18  [key=0, style=solid];
m11_23 -> m11_24  [key=0, style=solid];
m11_23 -> m11_19  [color=blue, key=0, style=bold];
m11_31 -> m11_32  [key=0, style=solid];
m11_37 -> m11_38  [key=0, style=solid];
m11_37 -> m11_47  [key=2, style=dotted];
m11_37 -> m11_60  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_37 -> m11_39  [color=darkseagreen4, key=1, label=segments, style=dashed];
m11_37 -> m11_41  [color=darkseagreen4, key=1, label=segments, style=dashed];
m11_63 -> m11_64  [key=0, style=solid];
m11_63 -> m11_66  [key=0, style=solid];
m11_63 -> m11_90  [key=2, style=dotted];
m11_69 -> m11_70  [key=0, style=solid];
m11_69 -> m11_91  [key=2, style=dotted];
m11_69 -> m11_113  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_75 -> m11_76  [key=0, style=solid];
m11_75 -> m11_95  [key=2, style=dotted];
m11_75 -> m11_75  [color=darkseagreen4, key=1, label=routes, style=dashed];
m11_75 -> m11_125  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_75 -> m11_77  [color=darkseagreen4, key=1, label=routes, style=dashed];
m11_75 -> m11_79  [color=darkseagreen4, key=1, label=routes, style=dashed];
m11_75 -> m11_81  [color=darkseagreen4, key=1, label=routes, style=dashed];
m11_75 -> m11_82  [color=darkseagreen4, key=1, label=routes, style=dashed];
m11_75 -> m11_86  [color=darkseagreen4, key=1, label=routes, style=dashed];
m11_83 -> m11_84  [key=0, style=solid];
m11_83 -> m11_86  [key=0, style=solid];
m11_83 -> m11_96  [key=2, style=dotted];
m11_176 -> m11_174  [color=blue, key=0, style=bold];
m11_175 -> m11_176  [key=0, style=solid];
m11_16 -> m11_14  [color=blue, key=0, style=bold];
m11_15 -> m11_16  [key=0, style=solid];
m11_22 -> m11_20  [color=blue, key=0, style=bold];
m11_22 -> m11_23  [key=0, style=solid];
m11_22 -> m11_26  [key=2, style=dotted];
m11_21 -> m11_22  [key=0, style=solid];
m11_21 -> m11_25  [key=2, style=dotted];
m11_29 -> m11_27  [color=blue, key=0, style=bold];
m11_29 -> m11_24  [color=blue, key=0, style=bold];
m11_28 -> m11_29  [key=0, style=solid];
m11_28 -> m11_30  [key=2, style=dotted];
m11_28 -> m11_31  [key=2, style=dotted];
m11_36 -> m11_34  [color=blue, key=0, style=bold];
m11_36 -> m11_37  [key=0, style=solid];
m11_36 -> m11_44  [key=0, style=solid];
m11_36 -> m11_38  [color=darkseagreen4, key=1, label=tuple, style=dashed];
m11_36 -> m11_43  [color=darkseagreen4, key=1, label=tuple, style=dashed];
m11_35 -> m11_36  [key=0, style=solid];
m11_35 -> m11_45  [key=2, style=dotted];
m11_35 -> m11_46  [key=2, style=dotted];
m11_35 -> m11_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_35 -> m11_53  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_49 -> m11_50  [key=0, style=solid];
m11_68 -> m11_66  [color=blue, key=0, style=bold];
m11_68 -> m11_69  [key=0, style=solid];
m11_68 -> m11_71  [key=0, style=solid];
m11_68 -> m11_96  [key=2, style=dotted];
m11_67 -> m11_68  [key=0, style=solid];
m11_67 -> m11_95  [key=2, style=dotted];
m11_67 -> m11_67  [color=darkseagreen4, key=1, label=routes, style=dashed];
m11_67 -> m11_107  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_67 -> m11_70  [color=darkseagreen4, key=1, label=routes, style=dashed];
m11_67 -> m11_71  [color=darkseagreen4, key=1, label=routes, style=dashed];
m11_81 -> m11_79  [color=blue, key=0, style=bold];
m11_81 -> m11_89  [key=0, style=solid];
m11_81 -> m11_92  [key=2, style=dotted];
m11_81 -> m11_26  [key=2, style=dotted];
m11_81 -> m11_101  [key=2, style=dotted];
m11_80 -> m11_81  [key=0, style=solid];
m11_80 -> m11_82  [key=2, style=dotted];
m11_80 -> m11_91  [key=2, style=dotted];
m11_80 -> m11_139  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_88 -> m11_86  [color=blue, key=0, style=bold];
m11_88 -> m11_89  [key=0, style=solid];
m11_88 -> m11_92  [key=2, style=dotted];
m11_88 -> m11_19  [key=2, style=dotted];
m11_87 -> m11_88  [key=0, style=solid];
m11_87 -> m11_91  [key=2, style=dotted];
m11_87 -> m11_149  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_93 -> m11_94  [key=0, style=solid];
m11_19 -> m11_17  [color=blue, key=0, style=bold];
m11_19 -> m11_20  [key=0, style=solid];
m11_19 -> m11_21  [color=darkseagreen4, key=1, label="System.Tuple<string, int, Nancy.Routing.RouteDescription, Nancy.Routing.IRoutePatternMatchResult>", style=dashed];
m11_19 -> m11_22  [color=darkseagreen4, key=1, label="System.Tuple<string, int, Nancy.Routing.RouteDescription, Nancy.Routing.IRoutePatternMatchResult>", style=dashed];
m11_19 -> m11_18  [color=darkorchid, key=3, label="Parameter variable Nancy.NancyContext context", style=bold];
m11_19 -> m11_86  [color=darkorchid, key=3, label="Parameter variable System.Tuple<string, int, Nancy.Routing.RouteDescription, Nancy.Routing.IRoutePatternMatchResult> routeMatchToReturn", style=bold];
m11_18 -> m11_19  [key=0, style=solid];
m11_18 -> m11_10  [key=2, style=dotted];
m11_18 -> m11_63  [key=0, style=solid];
m11_18 -> m11_64  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m11_18 -> m11_65  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_18 -> m11_66  [color=darkseagreen4, key=1, label="Nancy.Routing.IRouteCache", style=dashed];
m11_18 -> m11_67  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m11_18 -> m11_69  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m11_18 -> m11_70  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_18 -> m11_71  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_18 -> m11_117  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_18 -> m11_73  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m11_18 -> m11_74  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_18 -> m11_75  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m11_18 -> m11_78  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m11_18 -> m11_79  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m11_18 -> m11_80  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m11_18 -> m11_81  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_18 -> m11_82  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m11_18 -> m11_84  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m11_18 -> m11_85  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m11_18 -> m11_87  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m11_18 -> m11_88  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m11_18 -> m11_158  [color=darkorchid, key=3, label="Parameter variable string path", style=bold];
m11_18 -> m11_7  [color=darkorchid, key=3, label="Parameter variable Nancy.NancyContext context", style=bold];
m11_18 -> m11_159  [color=darkorchid, key=3, label="Parameter variable Nancy.NancyContext context", style=bold];
m11_25 -> m11_23  [color=blue, key=0, style=bold];
m11_24 -> m11_25  [key=0, style=solid];
m11_24 -> m11_10  [key=2, style=dotted];
m11_24 -> m11_26  [key=2, style=dotted];
m11_24 -> m11_27  [key=0, style=solid];
m11_24 -> m11_28  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m11_24 -> m11_19  [color=darkorchid, key=3, label="Parameter variable System.Tuple<string, int, Nancy.Routing.RouteDescription, Nancy.Routing.IRoutePatternMatchResult> routeMatchToReturn", style=bold];
m11_33 -> m11_31  [color=blue, key=0, style=bold];
m11_33 -> m11_34  [key=0, style=solid];
m11_33 -> m11_39  [color=darkseagreen4, key=1, label=maxSegments, style=dashed];
m11_33 -> m11_33  [color=darkorchid, key=3, label="Local variable int maxSegments", style=bold];
m11_33 -> m11_37  [color=darkorchid, key=3, label="Local variable int maxSegments", style=bold];
m11_32 -> m11_33  [key=0, style=solid];
m11_32 -> m11_10  [key=2, style=dotted];
m11_32 -> m11_40  [color=crimson, key=0, style=bold];
m11_32 -> m11_43  [color=crimson, key=0, style=bold];
m11_32 -> m11_35  [color=darkseagreen4, key=1, label="System.Tuple<System.Collections.Generic.List<System.Tuple<string, int, Nancy.Routing.RouteDescription, Nancy.Routing.IRoutePatternMatchResult>>, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<System.Tuple<string, int, Nancy.Routing.RouteDescription, Nancy.Routing.IRoutePatternMatchResult>>>>", style=dashed];
m11_32 -> m11_66  [color=darkorchid, key=3, label="Parameter variable System.Tuple<System.Collections.Generic.List<System.Tuple<string, int, Nancy.Routing.RouteDescription, Nancy.Routing.IRoutePatternMatchResult>>, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<System.Tuple<string, int, Nancy.Routing.RouteDescription, Nancy.Routing.IRoutePatternMatchResult>>>> routes", style=bold];
m11_39 -> m11_37  [color=blue, key=0, style=bold];
m11_39 -> m11_40  [key=0, style=solid];
m11_39 -> m11_41  [key=0, style=solid];
m11_38 -> m11_39  [key=0, style=solid];
m11_38 -> m11_10  [key=2, style=dotted];
m11_38 -> m11_40  [key=2, style=dotted];
m11_38 -> m11_48  [key=2, style=dotted];
m11_38 -> m11_49  [key=2, style=dotted];
m11_38 -> m11_42  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m11_47 -> m11_45  [color=blue, key=0, style=bold];
m11_46 -> m11_47  [key=0, style=solid];
m11_46 -> m11_10  [key=2, style=dotted];
m11_65 -> m11_63  [color=blue, key=0, style=bold];
m11_65 -> m11_89  [key=0, style=solid];
m11_65 -> m11_92  [key=2, style=dotted];
m11_65 -> m11_26  [key=2, style=dotted];
m11_65 -> m11_93  [key=2, style=dotted];
m11_64 -> m11_65  [key=0, style=solid];
m11_64 -> m11_10  [key=2, style=dotted];
m11_64 -> m11_91  [key=2, style=dotted];
m11_64 -> m11_103  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_71 -> m11_69  [color=blue, key=0, style=bold];
m11_71 -> m11_72  [key=0, style=solid];
m11_71 -> m11_95  [key=2, style=dotted];
m11_71 -> m11_71  [color=darkseagreen4, key=1, label=routes, style=dashed];
m11_71 -> m11_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_71 -> m11_74  [color=darkseagreen4, key=1, label=routes, style=dashed];
m11_71 -> m11_75  [color=darkseagreen4, key=1, label=routes, style=dashed];
m11_70 -> m11_71  [key=0, style=solid];
m11_70 -> m11_10  [key=2, style=dotted];
m11_70 -> m11_40  [key=2, style=dotted];
m11_70 -> m11_89  [key=0, style=solid];
m11_70 -> m11_92  [key=2, style=dotted];
m11_70 -> m11_26  [key=2, style=dotted];
m11_70 -> m11_93  [key=2, style=dotted];
m11_77 -> m11_75  [color=blue, key=0, style=bold];
m11_77 -> m11_78  [key=0, style=solid];
m11_77 -> m11_97  [key=2, style=dotted];
m11_77 -> m11_98  [key=2, style=dotted];
m11_77 -> m11_132  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_77 -> m11_79  [color=darkseagreen4, key=1, label=allowedMethods, style=dashed];
m11_77 -> m11_81  [color=darkseagreen4, key=1, label=allowedMethods, style=dashed];
m11_76 -> m11_77  [key=0, style=solid];
m11_76 -> m11_10  [key=2, style=dotted];
m11_76 -> m11_78  [key=2, style=dotted];
m11_76 -> m11_82  [key=0, style=solid];
m11_76 -> m11_96  [key=2, style=dotted];
m11_85 -> m11_83  [color=blue, key=0, style=bold];
m11_85 -> m11_89  [key=0, style=solid];
m11_85 -> m11_92  [key=2, style=dotted];
m11_85 -> m11_102  [key=2, style=dotted];
m11_85 -> m11_19  [key=2, style=dotted];
m11_84 -> m11_85  [key=0, style=solid];
m11_84 -> m11_10  [key=2, style=dotted];
m11_84 -> m11_91  [key=2, style=dotted];
m11_84 -> m11_146  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_91 -> m11_89  [color=blue, key=0, style=bold];
m11_91 -> m11_0  [color=darkorchid, key=3, label="Field variable Nancy.Routing.IRoutePatternMatcher routePatternMatcher", style=bold];
m11_169 -> m11_117  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_100 -> m11_101  [key=0, style=solid];
m11_100 -> m11_95  [key=2, style=dotted];
m11_101 -> m11_99  [color=blue, key=0, style=bold];
m11_155 -> m11_156  [key=0, style=solid];
m11_155 -> m11_157  [key=0, style=solid];
m11_157 -> m11_158  [key=0, style=solid];
m11_157 -> m11_155  [color=blue, key=0, style=bold];
m11_156 -> m11_158  [key=0, style=solid];
m11_156 -> m11_157  [key=0, style=solid];
m11_154 -> m11_158  [key=0, style=solid];
m11_154 -> m11_162  [key=2, style=dotted];
m11_82 -> m11_83  [key=0, style=solid];
m11_82 -> m11_95  [key=2, style=dotted];
m11_82 -> m11_142  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_82 -> m11_85  [color=darkseagreen4, key=1, label=exactMatchResults, style=dashed];
m11_82 -> m11_88  [color=darkseagreen4, key=1, label=exactMatchResults, style=dashed];
m11_95 -> m11_96  [key=0, style=solid];
m11_183 -> m11_184  [key=0, style=solid];
m11_184 -> m11_111  [key=2, style=dotted];
m11_184 -> m11_185  [key=0, style=solid];
m11_184 -> m11_186  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_185 -> m11_183  [color=blue, key=0, style=bold];
m11_200 -> m11_202  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_200 -> m11_203  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_200 -> m11_204  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_200 -> m11_4  [color=darkorchid, key=3, label="Parameter variable System.Func<T, System.Collections.Generic.IEnumerable<string>> valueTransformer", style=bold];
m11_200 -> m11_183  [color=darkorchid, key=3, label="Parameter variable System.Func<T, System.Collections.Generic.IEnumerable<string>> valueTransformer", style=bold];
m11_200 -> m11_41  [color=darkorchid, key=3, label="Parameter variable System.Func<T, System.Collections.Generic.IEnumerable<string>> valueTransformer", style=bold];
m11_200 -> m11_57  [color=darkorchid, key=3, label="Parameter variable System.Func<T, System.Collections.Generic.IEnumerable<string>> valueTransformer", style=bold];
m11_200 -> m11_72  [color=darkorchid, key=3, label="Parameter variable System.Func<T, System.Collections.Generic.IEnumerable<string>> valueTransformer", style=bold];
m11_200 -> m11_201  [key=0, style=solid];
m11_200 -> m11_11  [color=darkorchid, key=3, label="Parameter variable System.Func<T, System.Collections.Generic.IEnumerable<string>> valueTransformer", style=bold];
m11_200 -> m11_14  [color=darkorchid, key=3, label="Parameter variable System.Func<T, System.Collections.Generic.IEnumerable<string>> valueTransformer", style=bold];
m11_200 -> m11_20  [color=darkorchid, key=3, label="Parameter variable System.Func<T, System.Collections.Generic.IEnumerable<string>> valueTransformer", style=bold];
m11_200 -> m11_27  [color=darkorchid, key=3, label="Parameter variable System.Func<T, System.Collections.Generic.IEnumerable<string>> valueTransformer", style=bold];
m11_200 -> m11_34  [color=darkorchid, key=3, label="Parameter variable System.Func<T, System.Collections.Generic.IEnumerable<string>> valueTransformer", style=bold];
m11_200 -> m11_48  [color=darkorchid, key=3, label="Parameter variable System.Func<T, System.Collections.Generic.IEnumerable<string>> valueTransformer", style=bold];
m11_200 -> m11_51  [color=darkorchid, key=3, label="Parameter variable System.Func<T, System.Collections.Generic.IEnumerable<string>> valueTransformer", style=bold];
m11_200 -> m11_60  [color=darkorchid, key=3, label="Parameter variable System.Func<T, System.Collections.Generic.IEnumerable<string>> valueTransformer", style=bold];
m11_200 -> m11_66  [color=darkorchid, key=3, label="Parameter variable System.Func<T, System.Collections.Generic.IEnumerable<string>> valueTransformer", style=bold];
m11_200 -> m11_79  [color=darkorchid, key=3, label="Parameter variable System.Func<T, System.Collections.Generic.IEnumerable<string>> valueTransformer", style=bold];
m11_200 -> m11_86  [color=darkorchid, key=3, label="Parameter variable System.Func<T, System.Collections.Generic.IEnumerable<string>> valueTransformer", style=bold];
m11_200 -> m11_92  [color=darkorchid, key=3, label="Parameter variable System.Func<T, System.Collections.Generic.IEnumerable<string>> valueTransformer", style=bold];
m11_202 -> m11_203  [key=0, style=solid];
m11_202 -> m11_205  [key=0, style=solid];
m11_202 -> m11_181  [key=2, style=dotted];
m11_203 -> m11_205  [key=0, style=solid];
m11_203 -> m11_207  [key=2, style=dotted];
m11_204 -> m11_205  [key=0, style=solid];
m11_204 -> m11_182  [key=2, style=dotted];
m11_201 -> m11_202  [key=0, style=solid];
m11_201 -> m11_204  [key=0, style=solid];
m11_201 -> m11_206  [key=2, style=dotted];
m11_205 -> m11_200  [color=blue, key=0, style=bold];
m11_44 -> m11_32  [color=blue, key=0, style=bold];
m11_44 -> m11_102  [key=0, style=solid];
m11_97 -> m11_95  [color=blue, key=0, style=bold];
m11_0 -> m11_1  [key=0, style=solid];
m11_0 -> m11_2  [color=darkseagreen4, key=1, label="Nancy.Routing.IRoutePatternMatcher", style=dashed];
m11_0 -> m11_3  [color=darkseagreen4, key=1, label="Nancy.Routing.INancyModuleBuilder", style=dashed];
m11_0 -> m11_4  [color=darkseagreen4, key=1, label="Nancy.Routing.IRouteCache", style=dashed];
m11_0 -> m11_5  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Nancy.Responses.Negotiation.IResponseProcessor>", style=dashed];
m11_1 -> m11_2  [key=0, style=solid];
m11_1 -> m11_3  [key=2, style=dotted];
m11_2 -> m11_0  [color=blue, key=0, style=bold];
m11_2 -> m11_3  [key=0, style=solid];
m11_78 -> m11_79  [key=0, style=solid];
m11_78 -> m11_80  [key=0, style=solid];
m11_78 -> m11_99  [key=2, style=dotted];
m11_121 -> m11_122  [key=0, style=solid];
m11_173 -> m11_171  [color=darkorchid, key=3, label="Parameter variable System.Func<System.Collections.Generic.IEnumerable<string>, T> converter", style=bold];
m11_173 -> m11_177  [key=0, style=solid];
m11_173 -> m11_179  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_173 -> m11_109  [color=darkorchid, key=3, label="Parameter variable string name", style=bold];
m11_173 -> m11_41  [color=darkorchid, key=3, label="Parameter variable string name", style=bold];
m11_173 -> m11_57  [color=darkorchid, key=3, label="Parameter variable string name", style=bold];
m11_173 -> m11_72  [color=darkorchid, key=3, label="Parameter variable string name", style=bold];
m11_173 -> m11_11  [color=darkorchid, key=3, label="Parameter variable string name", style=bold];
m11_173 -> m11_20  [color=darkorchid, key=3, label="Parameter variable string name", style=bold];
m11_173 -> m11_27  [color=darkorchid, key=3, label="Parameter variable string name", style=bold];
m11_173 -> m11_34  [color=darkorchid, key=3, label="Parameter variable string name", style=bold];
m11_173 -> m11_48  [color=darkorchid, key=3, label="Parameter variable string name", style=bold];
m11_173 -> m11_66  [color=darkorchid, key=3, label="Parameter variable string name", style=bold];
m11_173 -> m11_79  [color=darkorchid, key=3, label="Parameter variable string name", style=bold];
m11_173 -> m11_86  [color=darkorchid, key=3, label="Parameter variable string name", style=bold];
m11_173 -> m11_92  [color=darkorchid, key=3, label="Parameter variable string name", style=bold];
m11_173 -> m11_7  [color=darkorchid, key=3, label="Parameter variable System.Func<System.Collections.Generic.IEnumerable<string>, T> converter", style=bold];
m11_173 -> m11_163  [color=darkorchid, key=3, label="Parameter variable System.Func<System.Collections.Generic.IEnumerable<string>, T> converter", style=bold];
m11_173 -> m11_17  [color=darkorchid, key=3, label="Parameter variable System.Func<System.Collections.Generic.IEnumerable<string>, T> converter", style=bold];
m11_173 -> m11_23  [color=darkorchid, key=3, label="Parameter variable System.Func<System.Collections.Generic.IEnumerable<string>, T> converter", style=bold];
m11_173 -> m11_31  [color=darkorchid, key=3, label="Parameter variable System.Func<System.Collections.Generic.IEnumerable<string>, T> converter", style=bold];
m11_173 -> m11_37  [color=darkorchid, key=3, label="Parameter variable System.Func<System.Collections.Generic.IEnumerable<string>, T> converter", style=bold];
m11_173 -> m11_45  [color=darkorchid, key=3, label="Parameter variable System.Func<System.Collections.Generic.IEnumerable<string>, T> converter", style=bold];
m11_173 -> m11_54  [color=darkorchid, key=3, label="Parameter variable System.Func<System.Collections.Generic.IEnumerable<string>, T> converter", style=bold];
m11_173 -> m11_63  [color=darkorchid, key=3, label="Parameter variable System.Func<System.Collections.Generic.IEnumerable<string>, T> converter", style=bold];
m11_173 -> m11_69  [color=darkorchid, key=3, label="Parameter variable System.Func<System.Collections.Generic.IEnumerable<string>, T> converter", style=bold];
m11_173 -> m11_75  [color=darkorchid, key=3, label="Parameter variable System.Func<System.Collections.Generic.IEnumerable<string>, T> converter", style=bold];
m11_173 -> m11_83  [color=darkorchid, key=3, label="Parameter variable System.Func<System.Collections.Generic.IEnumerable<string>, T> converter", style=bold];
m11_173 -> m11_89  [color=darkorchid, key=3, label="Parameter variable System.Func<System.Collections.Generic.IEnumerable<string>, T> converter", style=bold];
m11_177 -> m11_178  [key=0, style=solid];
m11_177 -> m11_179  [key=0, style=solid];
m11_177 -> m11_181  [key=2, style=dotted];
m11_179 -> m11_180  [key=0, style=solid];
m11_179 -> m11_182  [key=2, style=dotted];
m11_178 -> m11_180  [key=0, style=solid];
m11_178 -> m11_150  [key=2, style=dotted];
m11_180 -> m11_173  [color=blue, key=0, style=bold];
m11_170 -> m11_117  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m11_168 -> m11_1  [color=darkseagreen4, key=1, label="Nancy.Routing.DefaultRouteResolver", style=dashed];
m11_168 -> m11_2  [color=darkseagreen4, key=1, label="Nancy.Routing.DefaultRouteResolver", style=dashed];
m11_168 -> m11_3  [color=darkseagreen4, key=1, label="Nancy.Routing.DefaultRouteResolver", style=dashed];
m11_168 -> m11_4  [color=darkseagreen4, key=1, label="Nancy.Routing.DefaultRouteResolver", style=dashed];
m11_168 -> m11_5  [color=darkseagreen4, key=1, label="Nancy.Routing.DefaultRouteResolver", style=dashed];
m11_168 -> m11_12  [color=darkseagreen4, key=1, label="Nancy.Routing.DefaultRouteResolver", style=dashed];
m11_168 -> m11_20  [color=darkseagreen4, key=1, label="Nancy.Routing.DefaultRouteResolver", style=dashed];
m11_168 -> m11_27  [color=darkseagreen4, key=1, label="Nancy.Routing.DefaultRouteResolver", style=dashed];
m11_168 -> m11_28  [color=darkseagreen4, key=1, label="Nancy.Routing.DefaultRouteResolver", style=dashed];
m11_168 -> m11_71  [color=darkseagreen4, key=1, label="Nancy.Routing.DefaultRouteResolver", style=dashed];
m11_168 -> m11_117  [color=darkseagreen4, key=1, label="Nancy.Routing.DefaultRouteResolver", style=dashed];
m11_168 -> m11_85  [color=darkseagreen4, key=1, label="Nancy.Routing.DefaultRouteResolver", style=dashed];
m11_168 -> m11_88  [color=darkseagreen4, key=1, label="Nancy.Routing.DefaultRouteResolver", style=dashed];
m11_208 -> m11_122  [color=darkseagreen4, key=1, label="Nancy.RequestHeaders", style=dashed];
m11_208 -> m11_1  [color=darkseagreen4, key=1, label="Nancy.RequestHeaders", style=dashed];
m11_208 -> m11_42  [color=darkseagreen4, key=1, label="Nancy.RequestHeaders", style=dashed];
m11_208 -> m11_58  [color=darkseagreen4, key=1, label="Nancy.RequestHeaders", style=dashed];
m11_208 -> m11_73  [color=darkseagreen4, key=1, label="Nancy.RequestHeaders", style=dashed];
m11_208 -> m11_96  [color=darkseagreen4, key=1, label="Nancy.RequestHeaders", style=dashed];
m11_208 -> m11_100  [color=darkseagreen4, key=1, label="Nancy.RequestHeaders", style=dashed];
m11_208 -> m11_106  [color=darkseagreen4, key=1, label="Nancy.RequestHeaders", style=dashed];
m11_208 -> m11_171  [color=darkseagreen4, key=1, label="Nancy.RequestHeaders", style=dashed];
m11_208 -> m11_177  [color=darkseagreen4, key=1, label="Nancy.RequestHeaders", style=dashed];
m11_208 -> m11_179  [color=darkseagreen4, key=1, label="Nancy.RequestHeaders", style=dashed];
m11_208 -> m11_202  [color=darkseagreen4, key=1, label="Nancy.RequestHeaders", style=dashed];
m11_208 -> m11_203  [color=darkseagreen4, key=1, label="Nancy.RequestHeaders", style=dashed];
m11_208 -> m11_204  [color=darkseagreen4, key=1, label="Nancy.RequestHeaders", style=dashed];
m12_78 -> m12_79  [key=0, style=solid];
m12_79 -> m12_80  [key=0, style=solid];
m12_80 -> m12_81  [key=0, style=solid];
m12_80 -> m12_10  [key=2, style=dotted];
m12_81 -> m12_82  [color=red, key=0, style=solid];
m12_81 -> m12_11  [key=2, style=dotted];
m12_81 -> m12_12  [key=2, style=dotted];
m12_81 -> m12_83  [color=darkseagreen4, key=1, label=headers, style=dashed];
m12_81 -> m12_84  [color=darkseagreen4, key=1, label=headers, style=dashed];
m12_81 -> m12_85  [color=darkseagreen4, key=1, label=headers, style=dashed];
m12_82 -> m12_83  [color=red, key=0, style=solid];
m12_82 -> m12_14  [color=red, key=2, style=dotted];
m12_83 -> m12_84  [key=0, style=solid];
m12_83 -> m12_14  [key=2, style=dotted];
m12_84 -> m12_85  [key=0, style=solid];
m12_84 -> m12_14  [key=2, style=dotted];
m12_85 -> m12_86  [key=0, style=solid];
m12_85 -> m12_14  [key=2, style=dotted];
m12_86 -> m12_78  [color=blue, key=0, style=bold];
m12_195 -> m12_196  [key=0, style=solid];
m12_196 -> m12_197  [key=0, style=solid];
m12_197 -> m12_198  [key=0, style=solid];
m12_197 -> m12_10  [key=2, style=dotted];
m12_198 -> m12_199  [color=red, key=0, style=solid];
m12_198 -> m12_11  [key=2, style=dotted];
m12_198 -> m12_12  [key=2, style=dotted];
m12_198 -> m12_200  [color=darkseagreen4, key=1, label=headers, style=dashed];
m12_198 -> m12_201  [color=darkseagreen4, key=1, label=headers, style=dashed];
m12_199 -> m12_200  [color=red, key=0, style=solid];
m12_199 -> m12_14  [color=red, key=2, style=dotted];
m12_200 -> m12_201  [key=0, style=solid];
m12_200 -> m12_14  [key=2, style=dotted];
m12_201 -> m12_202  [key=0, style=solid];
m12_201 -> m12_14  [key=2, style=dotted];
m12_202 -> m12_195  [color=blue, key=0, style=bold];
m12_482 -> m12_483  [key=0, style=solid];
m12_483 -> m12_484  [key=0, style=solid];
m12_483 -> m12_10  [key=2, style=dotted];
m12_484 -> m12_485  [key=0, style=solid];
m12_484 -> m12_11  [key=2, style=dotted];
m12_485 -> m12_486  [key=0, style=solid];
m12_485 -> m12_261  [key=2, style=dotted];
m12_486 -> m12_482  [color=blue, key=0, style=bold];
m12_292 -> m12_293  [key=0, style=solid];
m12_293 -> m12_294  [key=0, style=solid];
m12_293 -> m12_10  [key=2, style=dotted];
m12_294 -> m12_295  [key=0, style=solid];
m12_294 -> m12_11  [key=2, style=dotted];
m12_295 -> m12_296  [key=0, style=solid];
m12_295 -> m12_261  [key=2, style=dotted];
m12_296 -> m12_292  [color=blue, key=0, style=bold];
m12_504 -> m12_505  [key=0, style=solid];
m12_505 -> m12_506  [key=0, style=solid];
m12_505 -> m12_356  [key=2, style=dotted];
m12_505 -> m12_509  [color=darkseagreen4, key=1, label=expectedDate, style=dashed];
m12_506 -> m12_507  [key=0, style=solid];
m12_509 -> m12_510  [key=0, style=solid];
m12_509 -> m12_14  [key=2, style=dotted];
m12_507 -> m12_508  [key=0, style=solid];
m12_507 -> m12_10  [key=2, style=dotted];
m12_508 -> m12_509  [key=0, style=solid];
m12_508 -> m12_11  [key=2, style=dotted];
m12_510 -> m12_504  [color=blue, key=0, style=bold];
m12_326 -> m12_327  [key=0, style=solid];
m12_327 -> m12_328  [key=0, style=solid];
m12_327 -> m12_10  [key=2, style=dotted];
m12_328 -> m12_329  [key=0, style=solid];
m12_328 -> m12_11  [key=2, style=dotted];
m12_329 -> m12_330  [key=0, style=solid];
m12_329 -> m12_261  [key=2, style=dotted];
m12_330 -> m12_326  [color=blue, key=0, style=bold];
m12_94 -> m12_95  [key=0, style=solid];
m12_95 -> m12_96  [key=0, style=solid];
m12_95 -> m12_10  [key=2, style=dotted];
m12_96 -> m12_97  [key=0, style=solid];
m12_96 -> m12_11  [key=2, style=dotted];
m12_97 -> m12_98  [key=0, style=solid];
m12_97 -> m12_30  [key=2, style=dotted];
m12_98 -> m12_94  [color=blue, key=0, style=bold];
m12_107 -> m12_108  [key=0, style=solid];
m12_108 -> m12_109  [key=0, style=solid];
m12_109 -> m12_110  [key=0, style=solid];
m12_109 -> m12_10  [key=2, style=dotted];
m12_110 -> m12_111  [color=red, key=0, style=solid];
m12_110 -> m12_11  [key=2, style=dotted];
m12_110 -> m12_12  [key=2, style=dotted];
m12_110 -> m12_112  [color=darkseagreen4, key=1, label=headers, style=dashed];
m12_110 -> m12_113  [color=darkseagreen4, key=1, label=headers, style=dashed];
m12_111 -> m12_112  [color=red, key=0, style=solid];
m12_111 -> m12_14  [color=red, key=2, style=dotted];
m12_112 -> m12_113  [key=0, style=solid];
m12_112 -> m12_14  [key=2, style=dotted];
m12_113 -> m12_114  [key=0, style=solid];
m12_113 -> m12_14  [key=2, style=dotted];
m12_114 -> m12_107  [color=blue, key=0, style=bold];
m12_630 -> m12_631  [key=0, style=solid];
m12_631 -> m12_632  [key=0, style=solid];
m12_631 -> m12_633  [color=darkseagreen4, key=1, label=expectedValues, style=dashed];
m12_632 -> m12_633  [key=0, style=solid];
m12_632 -> m12_10  [key=2, style=dotted];
m12_633 -> m12_634  [key=0, style=solid];
m12_633 -> m12_11  [key=2, style=dotted];
m12_634 -> m12_635  [key=0, style=solid];
m12_634 -> m12_12  [key=2, style=dotted];
m12_634 -> m12_636  [color=darkseagreen4, key=1, label=values, style=dashed];
m12_635 -> m12_636  [key=0, style=solid];
m12_635 -> m12_14  [key=2, style=dotted];
m12_636 -> m12_637  [key=0, style=solid];
m12_636 -> m12_14  [key=2, style=dotted];
m12_637 -> m12_630  [color=blue, key=0, style=bold];
m12_511 -> m12_512  [key=0, style=solid];
m12_512 -> m12_513  [key=0, style=solid];
m12_513 -> m12_514  [key=0, style=solid];
m12_513 -> m12_10  [key=2, style=dotted];
m12_514 -> m12_515  [key=0, style=solid];
m12_514 -> m12_11  [key=2, style=dotted];
m12_515 -> m12_516  [key=0, style=solid];
m12_515 -> m12_348  [key=2, style=dotted];
m12_516 -> m12_511  [color=blue, key=0, style=bold];
m12_241 -> m12_242  [key=0, style=solid];
m12_242 -> m12_243  [key=0, style=solid];
m12_243 -> m12_244  [key=0, style=solid];
m12_243 -> m12_10  [key=2, style=dotted];
m12_244 -> m12_245  [color=red, key=0, style=solid];
m12_244 -> m12_11  [key=2, style=dotted];
m12_244 -> m12_12  [key=2, style=dotted];
m12_244 -> m12_246  [color=darkseagreen4, key=1, label=headers, style=dashed];
m12_244 -> m12_247  [color=darkseagreen4, key=1, label=headers, style=dashed];
m12_244 -> m12_248  [color=darkseagreen4, key=1, label=headers, style=dashed];
m12_245 -> m12_246  [color=red, key=0, style=solid];
m12_245 -> m12_14  [color=red, key=2, style=dotted];
m12_246 -> m12_247  [key=0, style=solid];
m12_246 -> m12_14  [key=2, style=dotted];
m12_247 -> m12_248  [key=0, style=solid];
m12_247 -> m12_14  [key=2, style=dotted];
m12_248 -> m12_249  [key=0, style=solid];
m12_248 -> m12_14  [key=2, style=dotted];
m12_249 -> m12_241  [color=blue, key=0, style=bold];
m12_722 -> m12_723  [key=0, style=solid];
m12_723 -> m12_724  [key=0, style=solid];
m12_723 -> m12_356  [key=2, style=dotted];
m12_723 -> m12_725  [color=darkseagreen4, key=1, label=expectedValue, style=dashed];
m12_723 -> m12_727  [color=darkseagreen4, key=1, label=expectedValue, style=dashed];
m12_724 -> m12_725  [key=0, style=solid];
m12_724 -> m12_10  [key=2, style=dotted];
m12_725 -> m12_726  [key=0, style=solid];
m12_725 -> m12_11  [key=2, style=dotted];
m12_727 -> m12_728  [key=0, style=solid];
m12_727 -> m12_14  [key=2, style=dotted];
m12_726 -> m12_727  [key=0, style=solid];
m12_728 -> m12_722  [color=blue, key=0, style=bold];
m12_17 -> m12_18  [key=0, style=solid];
m12_18 -> m12_19  [key=0, style=solid];
m12_18 -> m12_10  [key=2, style=dotted];
m12_19 -> m12_20  [key=0, style=solid];
m12_19 -> m12_11  [key=2, style=dotted];
m12_20 -> m12_21  [color=red, key=0, style=solid];
m12_20 -> m12_12  [key=2, style=dotted];
m12_20 -> m12_22  [color=darkseagreen4, key=1, label=keys, style=dashed];
m12_20 -> m12_23  [color=darkseagreen4, key=1, label=keys, style=dashed];
m12_21 -> m12_22  [color=red, key=0, style=solid];
m12_21 -> m12_13  [color=red, key=2, style=dotted];
m12_21 -> m12_14  [color=red, key=2, style=dotted];
m12_22 -> m12_23  [key=0, style=solid];
m12_22 -> m12_15  [key=2, style=dotted];
m12_22 -> m12_14  [key=2, style=dotted];
m12_23 -> m12_24  [key=0, style=solid];
m12_23 -> m12_16  [key=2, style=dotted];
m12_23 -> m12_14  [key=2, style=dotted];
m12_24 -> m12_17  [color=blue, key=0, style=bold];
m12_493 -> m12_494  [key=0, style=solid];
m12_493 -> m12_495  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_494 -> m12_495  [key=0, style=solid];
m12_494 -> m12_497  [color=darkseagreen4, key=1, label=expectedValues, style=dashed];
m12_495 -> m12_496  [key=0, style=solid];
m12_495 -> m12_10  [key=2, style=dotted];
m12_497 -> m12_498  [key=0, style=solid];
m12_497 -> m12_14  [key=2, style=dotted];
m12_496 -> m12_497  [key=0, style=solid];
m12_496 -> m12_11  [key=2, style=dotted];
m12_498 -> m12_493  [color=blue, key=0, style=bold];
m12_31 -> m12_32  [key=0, style=solid];
m12_32 -> m12_33  [key=0, style=solid];
m12_32 -> m12_10  [key=2, style=dotted];
m12_33 -> m12_34  [color=red, key=0, style=solid];
m12_33 -> m12_11  [key=2, style=dotted];
m12_33 -> m12_12  [key=2, style=dotted];
m12_33 -> m12_35  [color=darkseagreen4, key=1, label=headers, style=dashed];
m12_33 -> m12_36  [color=darkseagreen4, key=1, label=headers, style=dashed];
m12_34 -> m12_35  [color=red, key=0, style=solid];
m12_34 -> m12_14  [color=red, key=2, style=dotted];
m12_35 -> m12_36  [key=0, style=solid];
m12_35 -> m12_14  [key=2, style=dotted];
m12_36 -> m12_37  [key=0, style=solid];
m12_36 -> m12_14  [key=2, style=dotted];
m12_37 -> m12_31  [color=blue, key=0, style=bold];
m12_303 -> m12_304  [key=0, style=solid];
m12_303 -> m12_305  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_304 -> m12_305  [key=0, style=solid];
m12_304 -> m12_307  [color=darkseagreen4, key=1, label=expectedValues, style=dashed];
m12_305 -> m12_306  [key=0, style=solid];
m12_305 -> m12_10  [key=2, style=dotted];
m12_307 -> m12_308  [key=0, style=solid];
m12_307 -> m12_268  [key=2, style=dotted];
m12_306 -> m12_307  [key=0, style=solid];
m12_306 -> m12_11  [key=2, style=dotted];
m12_308 -> m12_303  [color=blue, key=0, style=bold];
m12_46 -> m12_47  [key=0, style=solid];
m12_47 -> m12_48  [key=0, style=solid];
m12_48 -> m12_49  [key=0, style=solid];
m12_48 -> m12_10  [key=2, style=dotted];
m12_49 -> m12_50  [color=red, key=0, style=solid];
m12_49 -> m12_11  [key=2, style=dotted];
m12_49 -> m12_12  [key=2, style=dotted];
m12_49 -> m12_51  [color=darkseagreen4, key=1, label=headers, style=dashed];
m12_49 -> m12_52  [color=darkseagreen4, key=1, label=headers, style=dashed];
m12_50 -> m12_51  [color=red, key=0, style=solid];
m12_50 -> m12_14  [color=red, key=2, style=dotted];
m12_51 -> m12_52  [key=0, style=solid];
m12_51 -> m12_14  [key=2, style=dotted];
m12_52 -> m12_53  [key=0, style=solid];
m12_52 -> m12_14  [key=2, style=dotted];
m12_53 -> m12_46  [color=blue, key=0, style=bold];
m12_529 -> m12_530  [key=0, style=solid];
m12_530 -> m12_531  [key=0, style=solid];
m12_531 -> m12_532  [key=0, style=solid];
m12_531 -> m12_10  [key=2, style=dotted];
m12_532 -> m12_533  [key=0, style=solid];
m12_532 -> m12_11  [key=2, style=dotted];
m12_533 -> m12_534  [key=0, style=solid];
m12_533 -> m12_14  [key=2, style=dotted];
m12_534 -> m12_529  [color=blue, key=0, style=bold];
m12_848 -> m12_849  [key=0, style=solid];
m12_849 -> m12_850  [key=0, style=solid];
m12_849 -> m12_10  [key=2, style=dotted];
m12_850 -> m12_851  [key=0, style=solid];
m12_850 -> m12_11  [key=2, style=dotted];
m12_851 -> m12_852  [key=0, style=solid];
m12_852 -> m12_853  [key=0, style=solid];
m12_852 -> m12_612  [key=2, style=dotted];
m12_852 -> m12_613  [key=2, style=dotted];
m12_853 -> m12_848  [color=blue, key=0, style=bold];
m12_407 -> m12_408  [key=0, style=solid];
m12_408 -> m12_409  [key=0, style=solid];
m12_408 -> m12_10  [key=2, style=dotted];
m12_409 -> m12_410  [key=0, style=solid];
m12_409 -> m12_11  [key=2, style=dotted];
m12_410 -> m12_411  [key=0, style=solid];
m12_410 -> m12_30  [key=2, style=dotted];
m12_411 -> m12_407  [color=blue, key=0, style=bold];
m12_558 -> m12_559  [key=0, style=solid];
m12_559 -> m12_560  [key=0, style=solid];
m12_559 -> m12_10  [key=2, style=dotted];
m12_560 -> m12_561  [key=0, style=solid];
m12_560 -> m12_11  [key=2, style=dotted];
m12_561 -> m12_562  [key=0, style=solid];
m12_561 -> m12_261  [key=2, style=dotted];
m12_562 -> m12_558  [color=blue, key=0, style=bold];
m12_581 -> m12_582  [key=0, style=solid];
m12_582 -> m12_583  [key=0, style=solid];
m12_582 -> m12_586  [color=darkseagreen4, key=1, label=expectedValues, style=dashed];
m12_583 -> m12_584  [key=0, style=solid];
m12_583 -> m12_10  [key=2, style=dotted];
m12_586 -> m12_587  [key=0, style=solid];
m12_586 -> m12_268  [key=2, style=dotted];
m12_584 -> m12_585  [key=0, style=solid];
m12_584 -> m12_11  [key=2, style=dotted];
m12_585 -> m12_586  [key=0, style=solid];
m12_587 -> m12_581  [color=blue, key=0, style=bold];
m12_854 -> m12_855  [key=0, style=solid];
m12_854 -> m12_857  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_854 -> m12_862  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_855 -> m12_856  [key=0, style=solid];
m12_855 -> m12_10  [key=2, style=dotted];
m12_857 -> m12_858  [key=0, style=solid];
m12_857 -> m12_859  [key=2, style=dotted];
m12_857 -> m12_860  [key=2, style=dotted];
m12_857 -> m12_861  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_856 -> m12_857  [key=0, style=solid];
m12_856 -> m12_11  [key=2, style=dotted];
m12_858 -> m12_854  [color=blue, key=0, style=bold];
m12_87 -> m12_88  [key=0, style=solid];
m12_87 -> m12_89  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_88 -> m12_89  [key=0, style=solid];
m12_89 -> m12_90  [key=0, style=solid];
m12_89 -> m12_10  [key=2, style=dotted];
m12_90 -> m12_91  [key=0, style=solid];
m12_90 -> m12_11  [key=2, style=dotted];
m12_90 -> m12_12  [key=2, style=dotted];
m12_90 -> m12_92  [color=darkseagreen4, key=1, label=headers, style=dashed];
m12_91 -> m12_92  [key=0, style=solid];
m12_91 -> m12_14  [key=2, style=dotted];
m12_92 -> m12_93  [key=0, style=solid];
m12_92 -> m12_14  [key=2, style=dotted];
m12_93 -> m12_87  [color=blue, key=0, style=bold];
m12_776 -> m12_777  [key=0, style=solid];
m12_777 -> m12_778  [key=0, style=solid];
m12_777 -> m12_779  [color=darkseagreen4, key=1, label=expectedValues, style=dashed];
m12_777 -> m12_781  [color=darkseagreen4, key=1, label=expectedValues, style=dashed];
m12_778 -> m12_779  [key=0, style=solid];
m12_778 -> m12_10  [key=2, style=dotted];
m12_779 -> m12_780  [key=0, style=solid];
m12_779 -> m12_11  [key=2, style=dotted];
m12_781 -> m12_782  [key=0, style=solid];
m12_781 -> m12_756  [key=2, style=dotted];
m12_780 -> m12_781  [key=0, style=solid];
m12_780 -> m12_755  [key=2, style=dotted];
m12_782 -> m12_776  [color=blue, key=0, style=bold];
m12_757 -> m12_758  [key=0, style=solid];
m12_758 -> m12_759  [key=0, style=solid];
m12_758 -> m12_10  [key=2, style=dotted];
m12_759 -> m12_760  [key=0, style=solid];
m12_759 -> m12_11  [key=2, style=dotted];
m12_760 -> m12_761  [key=0, style=solid];
m12_761 -> m12_762  [key=0, style=solid];
m12_761 -> m12_612  [key=2, style=dotted];
m12_761 -> m12_613  [key=2, style=dotted];
m12_762 -> m12_757  [color=blue, key=0, style=bold];
m12_680 -> m12_681  [key=0, style=solid];
m12_681 -> m12_682  [key=0, style=solid];
m12_681 -> m12_10  [key=2, style=dotted];
m12_682 -> m12_683  [key=0, style=solid];
m12_682 -> m12_11  [key=2, style=dotted];
m12_683 -> m12_684  [key=0, style=solid];
m12_684 -> m12_685  [key=0, style=solid];
m12_684 -> m12_612  [key=2, style=dotted];
m12_684 -> m12_613  [key=2, style=dotted];
m12_685 -> m12_680  [color=blue, key=0, style=bold];
m12_672 -> m12_673  [key=0, style=solid];
m12_673 -> m12_674  [key=0, style=solid];
m12_673 -> m12_675  [color=darkseagreen4, key=1, label=expectedValues, style=dashed];
m12_674 -> m12_675  [key=0, style=solid];
m12_674 -> m12_10  [key=2, style=dotted];
m12_675 -> m12_676  [key=0, style=solid];
m12_675 -> m12_11  [key=2, style=dotted];
m12_676 -> m12_677  [key=0, style=solid];
m12_676 -> m12_12  [key=2, style=dotted];
m12_676 -> m12_678  [color=darkseagreen4, key=1, label=values, style=dashed];
m12_677 -> m12_678  [key=0, style=solid];
m12_677 -> m12_14  [key=2, style=dotted];
m12_678 -> m12_679  [key=0, style=solid];
m12_678 -> m12_14  [key=2, style=dotted];
m12_679 -> m12_672  [color=blue, key=0, style=bold];
m12_314 -> m12_315  [key=0, style=solid];
m12_315 -> m12_316  [key=0, style=solid];
m12_316 -> m12_317  [key=0, style=solid];
m12_316 -> m12_10  [key=2, style=dotted];
m12_317 -> m12_318  [key=0, style=solid];
m12_317 -> m12_11  [key=2, style=dotted];
m12_318 -> m12_319  [key=0, style=solid];
m12_318 -> m12_14  [key=2, style=dotted];
m12_319 -> m12_314  [color=blue, key=0, style=bold];
m12_275 -> m12_276  [key=0, style=solid];
m12_276 -> m12_277  [key=0, style=solid];
m12_276 -> m12_10  [key=2, style=dotted];
m12_277 -> m12_278  [key=0, style=solid];
m12_277 -> m12_11  [key=2, style=dotted];
m12_278 -> m12_279  [key=0, style=solid];
m12_278 -> m12_30  [key=2, style=dotted];
m12_279 -> m12_275  [color=blue, key=0, style=bold];
m12_357 -> m12_358  [key=0, style=solid];
m12_358 -> m12_359  [key=0, style=solid];
m12_359 -> m12_360  [key=0, style=solid];
m12_359 -> m12_10  [key=2, style=dotted];
m12_360 -> m12_361  [key=0, style=solid];
m12_360 -> m12_11  [key=2, style=dotted];
m12_361 -> m12_362  [key=0, style=solid];
m12_361 -> m12_348  [key=2, style=dotted];
m12_362 -> m12_357  [color=blue, key=0, style=bold];
m12_280 -> m12_281  [key=0, style=solid];
m12_281 -> m12_282  [key=0, style=solid];
m12_281 -> m12_284  [color=darkseagreen4, key=1, label=expectedValues, style=dashed];
m12_282 -> m12_283  [key=0, style=solid];
m12_282 -> m12_10  [key=2, style=dotted];
m12_284 -> m12_285  [key=0, style=solid];
m12_284 -> m12_268  [key=2, style=dotted];
m12_283 -> m12_284  [key=0, style=solid];
m12_283 -> m12_11  [key=2, style=dotted];
m12_285 -> m12_280  [color=blue, key=0, style=bold];
m12_123 -> m12_124  [key=0, style=solid];
m12_124 -> m12_125  [key=0, style=solid];
m12_125 -> m12_126  [key=0, style=solid];
m12_125 -> m12_10  [key=2, style=dotted];
m12_126 -> m12_127  [color=red, key=0, style=solid];
m12_126 -> m12_11  [key=2, style=dotted];
m12_126 -> m12_12  [key=2, style=dotted];
m12_126 -> m12_128  [color=darkseagreen4, key=1, label=headers, style=dashed];
m12_126 -> m12_129  [color=darkseagreen4, key=1, label=headers, style=dashed];
m12_127 -> m12_128  [color=red, key=0, style=solid];
m12_127 -> m12_14  [color=red, key=2, style=dotted];
m12_128 -> m12_129  [key=0, style=solid];
m12_128 -> m12_14  [key=2, style=dotted];
m12_129 -> m12_130  [key=0, style=solid];
m12_129 -> m12_14  [key=2, style=dotted];
m12_130 -> m12_123  [color=blue, key=0, style=bold];
m12_343 -> m12_344  [key=0, style=solid];
m12_344 -> m12_345  [key=0, style=solid];
m12_344 -> m12_10  [key=2, style=dotted];
m12_345 -> m12_346  [key=0, style=solid];
m12_345 -> m12_11  [key=2, style=dotted];
m12_346 -> m12_347  [key=0, style=solid];
m12_346 -> m12_348  [key=2, style=dotted];
m12_347 -> m12_343  [color=blue, key=0, style=bold];
m12_575 -> m12_576  [key=0, style=solid];
m12_576 -> m12_577  [key=0, style=solid];
m12_576 -> m12_10  [key=2, style=dotted];
m12_577 -> m12_578  [key=0, style=solid];
m12_577 -> m12_11  [key=2, style=dotted];
m12_578 -> m12_579  [key=0, style=solid];
m12_579 -> m12_580  [key=0, style=solid];
m12_579 -> m12_30  [key=2, style=dotted];
m12_580 -> m12_575  [color=blue, key=0, style=bold];
m12_666 -> m12_667  [key=0, style=solid];
m12_667 -> m12_668  [key=0, style=solid];
m12_667 -> m12_10  [key=2, style=dotted];
m12_668 -> m12_669  [key=0, style=solid];
m12_668 -> m12_11  [key=2, style=dotted];
m12_669 -> m12_670  [key=0, style=solid];
m12_670 -> m12_671  [key=0, style=solid];
m12_670 -> m12_612  [key=2, style=dotted];
m12_670 -> m12_613  [key=2, style=dotted];
m12_671 -> m12_666  [color=blue, key=0, style=bold];
m12_462 -> m12_463  [key=0, style=solid];
m12_463 -> m12_464  [key=0, style=solid];
m12_463 -> m12_466  [color=darkseagreen4, key=1, label=expectedValues, style=dashed];
m12_464 -> m12_465  [key=0, style=solid];
m12_464 -> m12_10  [key=2, style=dotted];
m12_466 -> m12_467  [key=0, style=solid];
m12_466 -> m12_268  [key=2, style=dotted];
m12_465 -> m12_466  [key=0, style=solid];
m12_465 -> m12_11  [key=2, style=dotted];
m12_467 -> m12_462  [color=blue, key=0, style=bold];
m12_444 -> m12_445  [key=0, style=solid];
m12_445 -> m12_446  [key=0, style=solid];
m12_446 -> m12_447  [key=0, style=solid];
m12_446 -> m12_10  [key=2, style=dotted];
m12_447 -> m12_448  [key=0, style=solid];
m12_447 -> m12_11  [key=2, style=dotted];
m12_448 -> m12_449  [key=0, style=solid];
m12_448 -> m12_348  [key=2, style=dotted];
m12_449 -> m12_444  [color=blue, key=0, style=bold];
m12_822 -> m12_823  [key=0, style=solid];
m12_823 -> m12_824  [key=0, style=solid];
m12_823 -> m12_10  [key=2, style=dotted];
m12_824 -> m12_825  [key=0, style=solid];
m12_824 -> m12_11  [key=2, style=dotted];
m12_825 -> m12_826  [key=0, style=solid];
m12_826 -> m12_827  [key=0, style=solid];
m12_826 -> m12_612  [key=2, style=dotted];
m12_826 -> m12_613  [key=2, style=dotted];
m12_827 -> m12_822  [color=blue, key=0, style=bold];
m12_25 -> m12_26  [key=0, style=solid];
m12_26 -> m12_27  [key=0, style=solid];
m12_26 -> m12_10  [key=2, style=dotted];
m12_27 -> m12_28  [key=0, style=solid];
m12_27 -> m12_11  [key=2, style=dotted];
m12_28 -> m12_29  [key=0, style=solid];
m12_28 -> m12_30  [key=2, style=dotted];
m12_29 -> m12_25  [color=blue, key=0, style=bold];
m12_62 -> m12_63  [key=0, style=solid];
m12_63 -> m12_64  [key=0, style=solid];
m12_64 -> m12_65  [key=0, style=solid];
m12_64 -> m12_10  [key=2, style=dotted];
m12_65 -> m12_66  [color=red, key=0, style=solid];
m12_65 -> m12_11  [key=2, style=dotted];
m12_65 -> m12_12  [key=2, style=dotted];
m12_65 -> m12_67  [color=red, key=1, label=headers, style=dashed];
m12_65 -> m12_68  [color=red, key=1, label=headers, style=dashed];
m12_66 -> m12_67  [color=red, key=0, style=solid];
m12_66 -> m12_14  [color=red, key=2, style=dotted];
m12_67 -> m12_68  [color=red, key=0, style=solid];
m12_67 -> m12_70  [color=red, key=2, style=dotted];
m12_67 -> m12_71  [color=red, key=2, style=dotted];
m12_67 -> m12_72  [color=red, key=1, label="lambda expression", style=dashed];
m12_68 -> m12_69  [color=red, key=0, style=solid];
m12_68 -> m12_70  [color=red, key=2, style=dotted];
m12_68 -> m12_71  [color=red, key=2, style=dotted];
m12_68 -> m12_75  [color=red, key=1, label="lambda expression", style=dashed];
m12_69 -> m12_62  [color=blue, key=0, style=bold];
m12_487 -> m12_488  [key=0, style=solid];
m12_488 -> m12_489  [key=0, style=solid];
m12_488 -> m12_491  [color=darkseagreen4, key=1, label=expectedValues, style=dashed];
m12_489 -> m12_490  [key=0, style=solid];
m12_489 -> m12_10  [key=2, style=dotted];
m12_491 -> m12_492  [key=0, style=solid];
m12_491 -> m12_14  [key=2, style=dotted];
m12_490 -> m12_491  [key=0, style=solid];
m12_490 -> m12_11  [key=2, style=dotted];
m12_492 -> m12_487  [color=blue, key=0, style=bold];
m12_190 -> m12_191  [key=0, style=solid];
m12_191 -> m12_192  [key=0, style=solid];
m12_191 -> m12_10  [key=2, style=dotted];
m12_192 -> m12_193  [color=red, key=0, style=solid];
m12_192 -> m12_11  [key=2, style=dotted];
m12_192 -> m12_12  [key=2, style=dotted];
m12_193 -> m12_194  [color=red, key=0, style=solid];
m12_193 -> m12_14  [color=red, key=2, style=dotted];
m12_194 -> m12_190  [color=blue, key=0, style=bold];
m12_476 -> m12_477  [key=0, style=solid];
m12_476 -> m12_478  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_477 -> m12_478  [key=0, style=solid];
m12_477 -> m12_480  [color=darkseagreen4, key=1, label=expectedValues, style=dashed];
m12_478 -> m12_479  [key=0, style=solid];
m12_478 -> m12_10  [key=2, style=dotted];
m12_480 -> m12_481  [key=0, style=solid];
m12_480 -> m12_268  [key=2, style=dotted];
m12_479 -> m12_480  [key=0, style=solid];
m12_479 -> m12_11  [key=2, style=dotted];
m12_481 -> m12_476  [color=blue, key=0, style=bold];
m12_742 -> m12_743  [key=0, style=solid];
m12_743 -> m12_744  [key=0, style=solid];
m12_743 -> m12_10  [key=2, style=dotted];
m12_744 -> m12_745  [key=0, style=solid];
m12_744 -> m12_11  [key=2, style=dotted];
m12_745 -> m12_746  [key=0, style=solid];
m12_746 -> m12_747  [key=0, style=solid];
m12_746 -> m12_612  [key=2, style=dotted];
m12_746 -> m12_613  [key=2, style=dotted];
m12_747 -> m12_742  [color=blue, key=0, style=bold];
m12_729 -> m12_730  [key=0, style=solid];
m12_730 -> m12_731  [key=0, style=solid];
m12_730 -> m12_10  [key=2, style=dotted];
m12_731 -> m12_732  [key=0, style=solid];
m12_731 -> m12_11  [key=2, style=dotted];
m12_732 -> m12_733  [key=0, style=solid];
m12_733 -> m12_734  [key=0, style=solid];
m12_733 -> m12_612  [key=2, style=dotted];
m12_733 -> m12_613  [key=2, style=dotted];
m12_734 -> m12_729  [color=blue, key=0, style=bold];
m12_748 -> m12_749  [key=0, style=solid];
m12_749 -> m12_750  [key=0, style=solid];
m12_749 -> m12_751  [color=darkseagreen4, key=1, label=expectedValues, style=dashed];
m12_749 -> m12_753  [color=darkseagreen4, key=1, label=expectedValues, style=dashed];
m12_750 -> m12_751  [key=0, style=solid];
m12_750 -> m12_10  [key=2, style=dotted];
m12_751 -> m12_752  [key=0, style=solid];
m12_751 -> m12_11  [key=2, style=dotted];
m12_753 -> m12_754  [key=0, style=solid];
m12_753 -> m12_756  [key=2, style=dotted];
m12_752 -> m12_753  [key=0, style=solid];
m12_752 -> m12_755  [key=2, style=dotted];
m12_754 -> m12_748  [color=blue, key=0, style=bold];
m12_286 -> m12_287  [key=0, style=solid];
m12_286 -> m12_288  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_287 -> m12_288  [key=0, style=solid];
m12_287 -> m12_290  [color=darkseagreen4, key=1, label=expectedValues, style=dashed];
m12_288 -> m12_289  [key=0, style=solid];
m12_288 -> m12_10  [key=2, style=dotted];
m12_290 -> m12_291  [key=0, style=solid];
m12_290 -> m12_268  [key=2, style=dotted];
m12_289 -> m12_290  [key=0, style=solid];
m12_289 -> m12_11  [key=2, style=dotted];
m12_291 -> m12_286  [color=blue, key=0, style=bold];
m12_861 -> m12_862  [key=0, style=solid];
m12_72 -> m12_73  [color=red, key=0, style=solid];
m12_75 -> m12_76  [color=red, key=0, style=solid];
m12_73 -> m12_74  [color=red, key=0, style=solid];
m12_74 -> m12_72  [color=blue, key=0, style=bold];
m12_76 -> m12_77  [color=red, key=0, style=solid];
m12_77 -> m12_75  [color=blue, key=0, style=bold];
m12_139 -> m12_140  [color=red, key=0, style=solid];
m12_142 -> m12_143  [color=red, key=0, style=solid];
m12_140 -> m12_141  [color=red, key=0, style=solid];
m12_141 -> m12_139  [color=blue, key=0, style=bold];
m12_143 -> m12_144  [color=red, key=0, style=solid];
m12_144 -> m12_142  [color=blue, key=0, style=bold];
m12_235 -> m12_236  [color=red, key=0, style=solid];
m12_238 -> m12_239  [color=red, key=0, style=solid];
m12_236 -> m12_237  [color=red, key=0, style=solid];
m12_237 -> m12_235  [color=blue, key=0, style=bold];
m12_239 -> m12_240  [color=red, key=0, style=solid];
m12_240 -> m12_238  [color=blue, key=0, style=bold];
m12_862 -> m12_863  [key=0, style=solid];
m12_863 -> m12_861  [color=blue, key=0, style=bold];
m12_704 -> m12_705  [key=0, style=solid];
m12_705 -> m12_706  [key=0, style=solid];
m12_705 -> m12_10  [key=2, style=dotted];
m12_706 -> m12_707  [key=0, style=solid];
m12_706 -> m12_11  [key=2, style=dotted];
m12_707 -> m12_708  [key=0, style=solid];
m12_708 -> m12_709  [key=0, style=solid];
m12_708 -> m12_612  [key=2, style=dotted];
m12_708 -> m12_613  [key=2, style=dotted];
m12_709 -> m12_704  [color=blue, key=0, style=bold];
m12_654 -> m12_655  [key=0, style=solid];
m12_655 -> m12_656  [key=0, style=solid];
m12_655 -> m12_10  [key=2, style=dotted];
m12_656 -> m12_657  [key=0, style=solid];
m12_656 -> m12_11  [key=2, style=dotted];
m12_657 -> m12_658  [key=0, style=solid];
m12_658 -> m12_659  [key=0, style=solid];
m12_658 -> m12_612  [key=2, style=dotted];
m12_658 -> m12_613  [key=2, style=dotted];
m12_659 -> m12_654  [color=blue, key=0, style=bold];
m12_375 -> m12_864  [key=0, style=solid];
m12_375 -> m12_865  [color=darkseagreen4, key=1, label="Nancy.Cookies.INancyCookie", style=dashed];
m12_375 -> m12_372  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
m12_375 -> m12_373  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
m12_864 -> m12_865  [key=0, style=solid];
m12_864 -> m12_14  [key=2, style=dotted];
m12_865 -> m12_866  [key=0, style=solid];
m12_865 -> m12_14  [key=2, style=dotted];
m12_866 -> m12_375  [color=blue, key=0, style=bold];
m12_841 -> m12_842  [key=0, style=solid];
m12_842 -> m12_843  [key=0, style=solid];
m12_842 -> m12_844  [color=darkseagreen4, key=1, label=expectedValue, style=dashed];
m12_842 -> m12_846  [color=darkseagreen4, key=1, label=expectedValue, style=dashed];
m12_842 -> m12_842  [color=darkorchid, key=3, label="Local variable string expectedValue", style=bold];
m12_843 -> m12_844  [key=0, style=solid];
m12_843 -> m12_10  [key=2, style=dotted];
m12_844 -> m12_845  [key=0, style=solid];
m12_844 -> m12_11  [key=2, style=dotted];
m12_846 -> m12_847  [key=0, style=solid];
m12_846 -> m12_14  [key=2, style=dotted];
m12_845 -> m12_846  [key=0, style=solid];
m12_847 -> m12_841  [color=blue, key=0, style=bold];
m12_203 -> m12_204  [key=0, style=solid];
m12_204 -> m12_205  [key=0, style=solid];
m12_205 -> m12_206  [key=0, style=solid];
m12_205 -> m12_10  [key=2, style=dotted];
m12_206 -> m12_207  [color=red, key=0, style=solid];
m12_206 -> m12_11  [key=2, style=dotted];
m12_206 -> m12_12  [key=2, style=dotted];
m12_206 -> m12_208  [color=darkseagreen4, key=1, label=headers, style=dashed];
m12_206 -> m12_209  [color=darkseagreen4, key=1, label=headers, style=dashed];
m12_207 -> m12_208  [color=red, key=0, style=solid];
m12_207 -> m12_14  [color=red, key=2, style=dotted];
m12_208 -> m12_209  [key=0, style=solid];
m12_208 -> m12_14  [key=2, style=dotted];
m12_209 -> m12_210  [key=0, style=solid];
m12_209 -> m12_14  [key=2, style=dotted];
m12_210 -> m12_203  [color=blue, key=0, style=bold];
m12_395 -> m12_396  [key=0, style=solid];
m12_396 -> m12_397  [key=0, style=solid];
m12_396 -> m12_399  [color=darkseagreen4, key=1, label=expectedValues, style=dashed];
m12_397 -> m12_398  [key=0, style=solid];
m12_397 -> m12_10  [key=2, style=dotted];
m12_399 -> m12_400  [key=0, style=solid];
m12_399 -> m12_268  [key=2, style=dotted];
m12_398 -> m12_399  [key=0, style=solid];
m12_398 -> m12_11  [key=2, style=dotted];
m12_400 -> m12_395  [color=blue, key=0, style=bold];
m12_457 -> m12_458  [key=0, style=solid];
m12_458 -> m12_459  [key=0, style=solid];
m12_458 -> m12_10  [key=2, style=dotted];
m12_459 -> m12_460  [key=0, style=solid];
m12_459 -> m12_11  [key=2, style=dotted];
m12_460 -> m12_461  [key=0, style=solid];
m12_460 -> m12_30  [key=2, style=dotted];
m12_461 -> m12_457  [color=blue, key=0, style=bold];
m12_710 -> m12_711  [key=0, style=solid];
m12_711 -> m12_712  [key=0, style=solid];
m12_711 -> m12_10  [key=2, style=dotted];
m12_712 -> m12_713  [key=0, style=solid];
m12_712 -> m12_11  [key=2, style=dotted];
m12_713 -> m12_714  [key=0, style=solid];
m12_714 -> m12_715  [key=0, style=solid];
m12_714 -> m12_14  [key=2, style=dotted];
m12_715 -> m12_710  [color=blue, key=0, style=bold];
m12_815 -> m12_816  [key=0, style=solid];
m12_816 -> m12_817  [key=0, style=solid];
m12_816 -> m12_818  [color=darkseagreen4, key=1, label=expectedValue, style=dashed];
m12_816 -> m12_820  [color=darkseagreen4, key=1, label=expectedValue, style=dashed];
m12_816 -> m12_816  [color=darkorchid, key=3, label="Local variable int expectedValue", style=bold];
m12_817 -> m12_818  [key=0, style=solid];
m12_817 -> m12_10  [key=2, style=dotted];
m12_818 -> m12_819  [key=0, style=solid];
m12_818 -> m12_11  [key=2, style=dotted];
m12_820 -> m12_821  [key=0, style=solid];
m12_820 -> m12_14  [key=2, style=dotted];
m12_819 -> m12_820  [key=0, style=solid];
m12_821 -> m12_815  [color=blue, key=0, style=bold];
m12_390 -> m12_391  [key=0, style=solid];
m12_391 -> m12_392  [key=0, style=solid];
m12_391 -> m12_10  [key=2, style=dotted];
m12_392 -> m12_393  [key=0, style=solid];
m12_392 -> m12_11  [key=2, style=dotted];
m12_393 -> m12_394  [key=0, style=solid];
m12_393 -> m12_261  [key=2, style=dotted];
m12_394 -> m12_390  [color=blue, key=0, style=bold];
m12_624 -> m12_625  [key=0, style=solid];
m12_625 -> m12_626  [key=0, style=solid];
m12_625 -> m12_10  [key=2, style=dotted];
m12_626 -> m12_627  [key=0, style=solid];
m12_626 -> m12_11  [key=2, style=dotted];
m12_627 -> m12_628  [key=0, style=solid];
m12_628 -> m12_629  [key=0, style=solid];
m12_628 -> m12_612  [key=2, style=dotted];
m12_628 -> m12_613  [key=2, style=dotted];
m12_629 -> m12_624  [color=blue, key=0, style=bold];
m12_154 -> m12_155  [key=0, style=solid];
m12_154 -> m12_156  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_155 -> m12_156  [key=0, style=solid];
m12_156 -> m12_157  [key=0, style=solid];
m12_156 -> m12_10  [key=2, style=dotted];
m12_157 -> m12_158  [key=0, style=solid];
m12_157 -> m12_11  [key=2, style=dotted];
m12_157 -> m12_12  [key=2, style=dotted];
m12_157 -> m12_159  [color=darkseagreen4, key=1, label=headers, style=dashed];
m12_158 -> m12_159  [key=0, style=solid];
m12_158 -> m12_14  [key=2, style=dotted];
m12_159 -> m12_160  [key=0, style=solid];
m12_159 -> m12_14  [key=2, style=dotted];
m12_160 -> m12_154  [color=blue, key=0, style=bold];
m12_535 -> m12_536  [key=0, style=solid];
m12_535 -> m12_537  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_536 -> m12_537  [key=0, style=solid];
m12_537 -> m12_538  [key=0, style=solid];
m12_537 -> m12_10  [key=2, style=dotted];
m12_538 -> m12_539  [key=0, style=solid];
m12_538 -> m12_11  [key=2, style=dotted];
m12_539 -> m12_540  [key=0, style=solid];
m12_539 -> m12_14  [key=2, style=dotted];
m12_540 -> m12_535  [color=blue, key=0, style=bold];
m12_802 -> m12_803  [key=0, style=solid];
m12_803 -> m12_804  [key=0, style=solid];
m12_803 -> m12_356  [key=2, style=dotted];
m12_803 -> m12_805  [color=darkseagreen4, key=1, label=expectedValue, style=dashed];
m12_803 -> m12_807  [color=darkseagreen4, key=1, label=expectedValue, style=dashed];
m12_804 -> m12_805  [key=0, style=solid];
m12_804 -> m12_10  [key=2, style=dotted];
m12_805 -> m12_806  [key=0, style=solid];
m12_805 -> m12_11  [key=2, style=dotted];
m12_807 -> m12_808  [key=0, style=solid];
m12_807 -> m12_14  [key=2, style=dotted];
m12_806 -> m12_807  [key=0, style=solid];
m12_808 -> m12_802  [color=blue, key=0, style=bold];
m12_614 -> m12_615  [key=0, style=solid];
m12_615 -> m12_616  [key=0, style=solid];
m12_615 -> m12_605  [key=2, style=dotted];
m12_615 -> m12_617  [color=darkseagreen4, key=1, label=expectedValues, style=dashed];
m12_616 -> m12_617  [key=0, style=solid];
m12_616 -> m12_10  [key=2, style=dotted];
m12_617 -> m12_618  [key=0, style=solid];
m12_617 -> m12_11  [key=2, style=dotted];
m12_618 -> m12_619  [key=0, style=solid];
m12_618 -> m12_12  [key=2, style=dotted];
m12_618 -> m12_620  [color=darkseagreen4, key=1, label=values, style=dashed];
m12_618 -> m12_621  [color=darkseagreen4, key=1, label=values, style=dashed];
m12_618 -> m12_622  [color=darkseagreen4, key=1, label=values, style=dashed];
m12_619 -> m12_620  [key=0, style=solid];
m12_619 -> m12_14  [key=2, style=dotted];
m12_620 -> m12_621  [key=0, style=solid];
m12_620 -> m12_14  [key=2, style=dotted];
m12_621 -> m12_622  [key=0, style=solid];
m12_621 -> m12_14  [key=2, style=dotted];
m12_622 -> m12_623  [key=0, style=solid];
m12_622 -> m12_14  [key=2, style=dotted];
m12_623 -> m12_614  [color=blue, key=0, style=bold];
m12_468 -> m12_469  [key=0, style=solid];
m12_469 -> m12_470  [key=0, style=solid];
m12_470 -> m12_471  [key=0, style=solid];
m12_470 -> m12_10  [key=2, style=dotted];
m12_471 -> m12_472  [color=red, key=0, style=solid];
m12_471 -> m12_11  [key=2, style=dotted];
m12_471 -> m12_12  [key=2, style=dotted];
m12_471 -> m12_473  [color=darkseagreen4, key=1, label=headers, style=dashed];
m12_471 -> m12_474  [color=darkseagreen4, key=1, label=headers, style=dashed];
m12_472 -> m12_473  [color=red, key=0, style=solid];
m12_472 -> m12_14  [color=red, key=2, style=dotted];
m12_473 -> m12_474  [key=0, style=solid];
m12_473 -> m12_14  [key=2, style=dotted];
m12_474 -> m12_475  [key=0, style=solid];
m12_474 -> m12_14  [key=2, style=dotted];
m12_475 -> m12_468  [color=blue, key=0, style=bold];
m12_783 -> m12_784  [key=0, style=solid];
m12_784 -> m12_785  [key=0, style=solid];
m12_784 -> m12_10  [key=2, style=dotted];
m12_785 -> m12_786  [key=0, style=solid];
m12_785 -> m12_11  [key=2, style=dotted];
m12_786 -> m12_787  [key=0, style=solid];
m12_787 -> m12_788  [key=0, style=solid];
m12_787 -> m12_612  [key=2, style=dotted];
m12_787 -> m12_613  [key=2, style=dotted];
m12_788 -> m12_783  [color=blue, key=0, style=bold];
m12_432 -> m12_433  [key=0, style=solid];
m12_433 -> m12_434  [key=0, style=solid];
m12_433 -> m12_10  [key=2, style=dotted];
m12_434 -> m12_435  [key=0, style=solid];
m12_434 -> m12_11  [key=2, style=dotted];
m12_435 -> m12_436  [key=0, style=solid];
m12_435 -> m12_348  [key=2, style=dotted];
m12_436 -> m12_432  [color=blue, key=0, style=bold];
m12_331 -> m12_332  [key=0, style=solid];
m12_332 -> m12_333  [key=0, style=solid];
m12_333 -> m12_334  [key=0, style=solid];
m12_333 -> m12_10  [key=2, style=dotted];
m12_334 -> m12_335  [key=0, style=solid];
m12_334 -> m12_11  [key=2, style=dotted];
m12_335 -> m12_336  [key=0, style=solid];
m12_335 -> m12_14  [key=2, style=dotted];
m12_336 -> m12_331  [color=blue, key=0, style=bold];
m12_401 -> m12_402  [key=0, style=solid];
m12_401 -> m12_403  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_402 -> m12_403  [key=0, style=solid];
m12_402 -> m12_405  [color=darkseagreen4, key=1, label=expectedValues, style=dashed];
m12_403 -> m12_404  [key=0, style=solid];
m12_403 -> m12_10  [key=2, style=dotted];
m12_405 -> m12_406  [key=0, style=solid];
m12_405 -> m12_268  [key=2, style=dotted];
m12_404 -> m12_405  [key=0, style=solid];
m12_404 -> m12_11  [key=2, style=dotted];
m12_406 -> m12_401  [color=blue, key=0, style=bold];
m12_166 -> m12_167  [key=0, style=solid];
m12_167 -> m12_168  [key=0, style=solid];
m12_168 -> m12_169  [key=0, style=solid];
m12_168 -> m12_10  [key=2, style=dotted];
m12_169 -> m12_170  [color=red, key=0, style=solid];
m12_169 -> m12_11  [key=2, style=dotted];
m12_169 -> m12_12  [key=2, style=dotted];
m12_169 -> m12_171  [color=darkseagreen4, key=1, label=headers, style=dashed];
m12_169 -> m12_172  [color=darkseagreen4, key=1, label=headers, style=dashed];
m12_170 -> m12_171  [color=red, key=0, style=solid];
m12_170 -> m12_14  [color=red, key=2, style=dotted];
m12_171 -> m12_172  [key=0, style=solid];
m12_171 -> m12_14  [key=2, style=dotted];
m12_172 -> m12_173  [key=0, style=solid];
m12_172 -> m12_14  [key=2, style=dotted];
m12_173 -> m12_166  [color=blue, key=0, style=bold];
m12_256 -> m12_257  [key=0, style=solid];
m12_257 -> m12_258  [key=0, style=solid];
m12_257 -> m12_10  [key=2, style=dotted];
m12_258 -> m12_259  [key=0, style=solid];
m12_258 -> m12_11  [key=2, style=dotted];
m12_259 -> m12_260  [key=0, style=solid];
m12_259 -> m12_261  [key=2, style=dotted];
m12_260 -> m12_256  [color=blue, key=0, style=bold];
m12_115 -> m12_116  [key=0, style=solid];
m12_116 -> m12_117  [key=0, style=solid];
m12_117 -> m12_118  [key=0, style=solid];
m12_117 -> m12_10  [key=2, style=dotted];
m12_118 -> m12_119  [color=red, key=0, style=solid];
m12_118 -> m12_11  [key=2, style=dotted];
m12_118 -> m12_12  [key=2, style=dotted];
m12_118 -> m12_120  [color=darkseagreen4, key=1, label=headers, style=dashed];
m12_118 -> m12_121  [color=darkseagreen4, key=1, label=headers, style=dashed];
m12_119 -> m12_120  [color=red, key=0, style=solid];
m12_119 -> m12_14  [color=red, key=2, style=dotted];
m12_120 -> m12_121  [key=0, style=solid];
m12_120 -> m12_14  [key=2, style=dotted];
m12_121 -> m12_122  [key=0, style=solid];
m12_121 -> m12_14  [key=2, style=dotted];
m12_122 -> m12_115  [color=blue, key=0, style=bold];
m12_161 -> m12_162  [key=0, style=solid];
m12_162 -> m12_163  [key=0, style=solid];
m12_162 -> m12_10  [key=2, style=dotted];
m12_163 -> m12_164  [key=0, style=solid];
m12_163 -> m12_11  [key=2, style=dotted];
m12_164 -> m12_165  [key=0, style=solid];
m12_164 -> m12_30  [key=2, style=dotted];
m12_165 -> m12_161  [color=blue, key=0, style=bold];
m12_99 -> m12_100  [key=0, style=solid];
m12_100 -> m12_101  [key=0, style=solid];
m12_101 -> m12_102  [key=0, style=solid];
m12_101 -> m12_10  [key=2, style=dotted];
m12_102 -> m12_103  [color=red, key=0, style=solid];
m12_102 -> m12_11  [key=2, style=dotted];
m12_102 -> m12_12  [key=2, style=dotted];
m12_102 -> m12_104  [color=darkseagreen4, key=1, label=headers, style=dashed];
m12_102 -> m12_105  [color=darkseagreen4, key=1, label=headers, style=dashed];
m12_103 -> m12_104  [color=red, key=0, style=solid];
m12_103 -> m12_14  [color=red, key=2, style=dotted];
m12_104 -> m12_105  [key=0, style=solid];
m12_104 -> m12_14  [key=2, style=dotted];
m12_105 -> m12_106  [key=0, style=solid];
m12_105 -> m12_14  [key=2, style=dotted];
m12_106 -> m12_99  [color=blue, key=0, style=bold];
m12_437 -> m12_438  [key=0, style=solid];
m12_438 -> m12_439  [key=0, style=solid];
m12_438 -> m12_356  [key=2, style=dotted];
m12_438 -> m12_442  [color=darkseagreen4, key=1, label=expectedDate, style=dashed];
m12_439 -> m12_440  [key=0, style=solid];
m12_442 -> m12_443  [key=0, style=solid];
m12_442 -> m12_14  [key=2, style=dotted];
m12_440 -> m12_441  [key=0, style=solid];
m12_440 -> m12_10  [key=2, style=dotted];
m12_441 -> m12_442  [key=0, style=solid];
m12_441 -> m12_11  [key=2, style=dotted];
m12_443 -> m12_437  [color=blue, key=0, style=bold];
m12_595 -> m12_596  [key=0, style=solid];
m12_596 -> m12_597  [key=0, style=solid];
m12_596 -> m12_605  [key=2, style=dotted];
m12_596 -> m12_598  [color=darkseagreen4, key=1, label=expectedValues, style=dashed];
m12_597 -> m12_598  [key=0, style=solid];
m12_597 -> m12_10  [key=2, style=dotted];
m12_598 -> m12_599  [key=0, style=solid];
m12_598 -> m12_11  [key=2, style=dotted];
m12_599 -> m12_600  [key=0, style=solid];
m12_599 -> m12_12  [key=2, style=dotted];
m12_599 -> m12_601  [color=darkseagreen4, key=1, label=values, style=dashed];
m12_599 -> m12_602  [color=darkseagreen4, key=1, label=values, style=dashed];
m12_599 -> m12_603  [color=darkseagreen4, key=1, label=values, style=dashed];
m12_600 -> m12_601  [key=0, style=solid];
m12_600 -> m12_14  [key=2, style=dotted];
m12_601 -> m12_602  [key=0, style=solid];
m12_601 -> m12_14  [key=2, style=dotted];
m12_602 -> m12_603  [key=0, style=solid];
m12_602 -> m12_14  [key=2, style=dotted];
m12_603 -> m12_604  [key=0, style=solid];
m12_603 -> m12_14  [key=2, style=dotted];
m12_604 -> m12_595  [color=blue, key=0, style=bold];
m12_320 -> m12_321  [key=0, style=solid];
m12_320 -> m12_322  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_321 -> m12_322  [key=0, style=solid];
m12_322 -> m12_323  [key=0, style=solid];
m12_322 -> m12_10  [key=2, style=dotted];
m12_323 -> m12_324  [key=0, style=solid];
m12_323 -> m12_11  [key=2, style=dotted];
m12_324 -> m12_325  [key=0, style=solid];
m12_324 -> m12_14  [key=2, style=dotted];
m12_325 -> m12_320  [color=blue, key=0, style=bold];
m12_227 -> m12_228  [key=0, style=solid];
m12_228 -> m12_229  [key=0, style=solid];
m12_229 -> m12_230  [key=0, style=solid];
m12_229 -> m12_10  [key=2, style=dotted];
m12_230 -> m12_231  [color=red, key=0, style=solid];
m12_230 -> m12_11  [key=2, style=dotted];
m12_230 -> m12_12  [key=2, style=dotted];
m12_230 -> m12_232  [color=red, key=1, label=headers, style=dashed];
m12_230 -> m12_233  [color=red, key=1, label=headers, style=dashed];
m12_231 -> m12_232  [color=red, key=0, style=solid];
m12_231 -> m12_14  [color=red, key=2, style=dotted];
m12_232 -> m12_233  [color=red, key=0, style=solid];
m12_232 -> m12_70  [color=red, key=2, style=dotted];
m12_232 -> m12_71  [color=red, key=2, style=dotted];
m12_232 -> m12_235  [color=red, key=1, label="lambda expression", style=dashed];
m12_233 -> m12_234  [color=red, key=0, style=solid];
m12_233 -> m12_70  [color=red, key=2, style=dotted];
m12_233 -> m12_71  [color=red, key=2, style=dotted];
m12_233 -> m12_238  [color=red, key=1, label="lambda expression", style=dashed];
m12_234 -> m12_227  [color=blue, key=0, style=bold];
m12_412 -> m12_413  [key=0, style=solid];
m12_413 -> m12_414  [key=0, style=solid];
m12_413 -> m12_416  [color=darkseagreen4, key=1, label=expectedValues, style=dashed];
m12_414 -> m12_415  [key=0, style=solid];
m12_414 -> m12_10  [key=2, style=dotted];
m12_416 -> m12_417  [key=0, style=solid];
m12_416 -> m12_268  [key=2, style=dotted];
m12_415 -> m12_416  [key=0, style=solid];
m12_415 -> m12_11  [key=2, style=dotted];
m12_417 -> m12_412  [color=blue, key=0, style=bold];
m12_297 -> m12_298  [key=0, style=solid];
m12_298 -> m12_299  [key=0, style=solid];
m12_298 -> m12_301  [color=darkseagreen4, key=1, label=expectedValues, style=dashed];
m12_299 -> m12_300  [key=0, style=solid];
m12_299 -> m12_10  [key=2, style=dotted];
m12_301 -> m12_302  [key=0, style=solid];
m12_301 -> m12_268  [key=2, style=dotted];
m12_300 -> m12_301  [key=0, style=solid];
m12_300 -> m12_11  [key=2, style=dotted];
m12_302 -> m12_297  [color=blue, key=0, style=bold];
m12_363 -> m12_364  [key=0, style=solid];
m12_364 -> m12_365  [key=0, style=solid];
m12_364 -> m12_10  [key=2, style=dotted];
m12_365 -> m12_366  [key=0, style=solid];
m12_365 -> m12_11  [key=2, style=dotted];
m12_366 -> m12_367  [key=0, style=solid];
m12_366 -> m12_30  [key=2, style=dotted];
m12_367 -> m12_363  [color=blue, key=0, style=bold];
m12_383 -> m12_384  [key=0, style=solid];
m12_383 -> m12_386  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_384 -> m12_385  [key=0, style=solid];
m12_384 -> m12_356  [key=2, style=dotted];
m12_384 -> m12_388  [color=darkseagreen4, key=1, label=expectedDate, style=dashed];
m12_386 -> m12_387  [key=0, style=solid];
m12_386 -> m12_10  [key=2, style=dotted];
m12_385 -> m12_386  [key=0, style=solid];
m12_388 -> m12_389  [key=0, style=solid];
m12_388 -> m12_14  [key=2, style=dotted];
m12_387 -> m12_388  [key=0, style=solid];
m12_387 -> m12_11  [key=2, style=dotted];
m12_389 -> m12_383  [color=blue, key=0, style=bold];
m12_716 -> m12_717  [key=0, style=solid];
m12_717 -> m12_718  [key=0, style=solid];
m12_717 -> m12_10  [key=2, style=dotted];
m12_718 -> m12_719  [key=0, style=solid];
m12_718 -> m12_11  [key=2, style=dotted];
m12_719 -> m12_720  [key=0, style=solid];
m12_720 -> m12_721  [key=0, style=solid];
m12_720 -> m12_612  [key=2, style=dotted];
m12_720 -> m12_613  [key=2, style=dotted];
m12_721 -> m12_716  [color=blue, key=0, style=bold];
m12_644 -> m12_645  [key=0, style=solid];
m12_645 -> m12_646  [key=0, style=solid];
m12_645 -> m12_605  [key=2, style=dotted];
m12_645 -> m12_647  [color=darkseagreen4, key=1, label=expectedValues, style=dashed];
m12_646 -> m12_647  [key=0, style=solid];
m12_646 -> m12_10  [key=2, style=dotted];
m12_647 -> m12_648  [key=0, style=solid];
m12_647 -> m12_11  [key=2, style=dotted];
m12_648 -> m12_649  [key=0, style=solid];
m12_648 -> m12_12  [key=2, style=dotted];
m12_648 -> m12_650  [color=darkseagreen4, key=1, label=values, style=dashed];
m12_648 -> m12_651  [color=darkseagreen4, key=1, label=values, style=dashed];
m12_648 -> m12_652  [color=darkseagreen4, key=1, label=values, style=dashed];
m12_649 -> m12_650  [key=0, style=solid];
m12_649 -> m12_14  [key=2, style=dotted];
m12_650 -> m12_651  [key=0, style=solid];
m12_650 -> m12_14  [key=2, style=dotted];
m12_651 -> m12_652  [key=0, style=solid];
m12_651 -> m12_14  [key=2, style=dotted];
m12_652 -> m12_653  [key=0, style=solid];
m12_652 -> m12_14  [key=2, style=dotted];
m12_653 -> m12_644  [color=blue, key=0, style=bold];
m12_174 -> m12_175  [key=0, style=solid];
m12_175 -> m12_176  [key=0, style=solid];
m12_176 -> m12_177  [key=0, style=solid];
m12_176 -> m12_10  [key=2, style=dotted];
m12_177 -> m12_178  [color=red, key=0, style=solid];
m12_177 -> m12_11  [key=2, style=dotted];
m12_177 -> m12_12  [key=2, style=dotted];
m12_177 -> m12_179  [color=darkseagreen4, key=1, label=headers, style=dashed];
m12_177 -> m12_180  [color=darkseagreen4, key=1, label=headers, style=dashed];
m12_178 -> m12_179  [color=red, key=0, style=solid];
m12_178 -> m12_14  [color=red, key=2, style=dotted];
m12_179 -> m12_180  [key=0, style=solid];
m12_179 -> m12_14  [key=2, style=dotted];
m12_180 -> m12_181  [key=0, style=solid];
m12_180 -> m12_14  [key=2, style=dotted];
m12_181 -> m12_174  [color=blue, key=0, style=bold];
m12_426 -> m12_427  [key=0, style=solid];
m12_426 -> m12_428  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_427 -> m12_428  [key=0, style=solid];
m12_427 -> m12_430  [color=darkseagreen4, key=1, label=expectedValues, style=dashed];
m12_428 -> m12_429  [key=0, style=solid];
m12_428 -> m12_10  [key=2, style=dotted];
m12_430 -> m12_431  [key=0, style=solid];
m12_430 -> m12_268  [key=2, style=dotted];
m12_429 -> m12_430  [key=0, style=solid];
m12_429 -> m12_11  [key=2, style=dotted];
m12_431 -> m12_426  [color=blue, key=0, style=bold];
m12_269 -> m12_270  [key=0, style=solid];
m12_269 -> m12_271  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_270 -> m12_271  [key=0, style=solid];
m12_270 -> m12_273  [color=darkseagreen4, key=1, label=expectedValues, style=dashed];
m12_271 -> m12_272  [key=0, style=solid];
m12_271 -> m12_10  [key=2, style=dotted];
m12_273 -> m12_274  [key=0, style=solid];
m12_273 -> m12_268  [key=2, style=dotted];
m12_272 -> m12_273  [key=0, style=solid];
m12_272 -> m12_11  [key=2, style=dotted];
m12_274 -> m12_269  [color=blue, key=0, style=bold];
m12_376 -> m12_377  [key=0, style=solid];
m12_376 -> m12_378  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_377 -> m12_378  [key=0, style=solid];
m12_378 -> m12_379  [key=0, style=solid];
m12_378 -> m12_10  [key=2, style=dotted];
m12_379 -> m12_380  [key=0, style=solid];
m12_379 -> m12_11  [key=2, style=dotted];
m12_379 -> m12_381  [color=darkseagreen4, key=1, label=headers, style=dashed];
m12_380 -> m12_381  [key=0, style=solid];
m12_380 -> m12_15  [key=2, style=dotted];
m12_380 -> m12_375  [key=2, style=dotted];
m12_381 -> m12_382  [key=0, style=solid];
m12_381 -> m12_16  [key=2, style=dotted];
m12_381 -> m12_375  [key=2, style=dotted];
m12_382 -> m12_376  [color=blue, key=0, style=bold];
m12_563 -> m12_564  [key=0, style=solid];
m12_564 -> m12_565  [key=0, style=solid];
m12_564 -> m12_567  [color=darkseagreen4, key=1, label=expectedValues, style=dashed];
m12_565 -> m12_566  [key=0, style=solid];
m12_565 -> m12_10  [key=2, style=dotted];
m12_567 -> m12_568  [key=0, style=solid];
m12_567 -> m12_268  [key=2, style=dotted];
m12_566 -> m12_567  [key=0, style=solid];
m12_566 -> m12_11  [key=2, style=dotted];
m12_568 -> m12_563  [color=blue, key=0, style=bold];
m12_524 -> m12_525  [key=0, style=solid];
m12_525 -> m12_526  [key=0, style=solid];
m12_525 -> m12_10  [key=2, style=dotted];
m12_526 -> m12_527  [key=0, style=solid];
m12_526 -> m12_11  [key=2, style=dotted];
m12_527 -> m12_528  [key=0, style=solid];
m12_527 -> m12_14  [key=2, style=dotted];
m12_528 -> m12_524  [color=blue, key=0, style=bold];
m12_660 -> m12_661  [key=0, style=solid];
m12_661 -> m12_662  [key=0, style=solid];
m12_661 -> m12_10  [key=2, style=dotted];
m12_662 -> m12_663  [key=0, style=solid];
m12_662 -> m12_11  [key=2, style=dotted];
m12_663 -> m12_664  [key=0, style=solid];
m12_664 -> m12_665  [key=0, style=solid];
m12_664 -> m12_14  [key=2, style=dotted];
m12_665 -> m12_660  [color=blue, key=0, style=bold];
m12_250 -> m12_251  [key=0, style=solid];
m12_250 -> m12_252  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_251 -> m12_252  [key=0, style=solid];
m12_252 -> m12_253  [key=0, style=solid];
m12_252 -> m12_10  [key=2, style=dotted];
m12_253 -> m12_254  [color=red, key=0, style=solid];
m12_253 -> m12_11  [key=2, style=dotted];
m12_253 -> m12_12  [key=2, style=dotted];
m12_254 -> m12_255  [color=red, key=0, style=solid];
m12_254 -> m12_14  [color=red, key=2, style=dotted];
m12_255 -> m12_250  [color=blue, key=0, style=bold];
m12_686 -> m12_687  [key=0, style=solid];
m12_687 -> m12_688  [key=0, style=solid];
m12_687 -> m12_10  [key=2, style=dotted];
m12_688 -> m12_689  [key=0, style=solid];
m12_688 -> m12_11  [key=2, style=dotted];
m12_689 -> m12_690  [key=0, style=solid];
m12_690 -> m12_691  [key=0, style=solid];
m12_690 -> m12_14  [key=2, style=dotted];
m12_691 -> m12_686  [color=blue, key=0, style=bold];
m12_517 -> m12_518  [key=0, style=solid];
m12_517 -> m12_520  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_518 -> m12_519  [key=0, style=solid];
m12_518 -> m12_356  [key=2, style=dotted];
m12_518 -> m12_522  [color=darkseagreen4, key=1, label=expectedDate, style=dashed];
m12_520 -> m12_521  [key=0, style=solid];
m12_520 -> m12_10  [key=2, style=dotted];
m12_519 -> m12_520  [key=0, style=solid];
m12_522 -> m12_523  [key=0, style=solid];
m12_522 -> m12_14  [key=2, style=dotted];
m12_521 -> m12_522  [key=0, style=solid];
m12_521 -> m12_11  [key=2, style=dotted];
m12_523 -> m12_517  [color=blue, key=0, style=bold];
m12_337 -> m12_338  [key=0, style=solid];
m12_337 -> m12_339  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_338 -> m12_339  [key=0, style=solid];
m12_339 -> m12_340  [key=0, style=solid];
m12_339 -> m12_10  [key=2, style=dotted];
m12_340 -> m12_341  [key=0, style=solid];
m12_340 -> m12_11  [key=2, style=dotted];
m12_341 -> m12_342  [key=0, style=solid];
m12_341 -> m12_14  [key=2, style=dotted];
m12_342 -> m12_337  [color=blue, key=0, style=bold];
m12_638 -> m12_639  [key=0, style=solid];
m12_639 -> m12_640  [key=0, style=solid];
m12_639 -> m12_10  [key=2, style=dotted];
m12_640 -> m12_641  [key=0, style=solid];
m12_640 -> m12_11  [key=2, style=dotted];
m12_641 -> m12_642  [key=0, style=solid];
m12_642 -> m12_643  [key=0, style=solid];
m12_642 -> m12_612  [key=2, style=dotted];
m12_642 -> m12_613  [key=2, style=dotted];
m12_643 -> m12_638  [color=blue, key=0, style=bold];
m12_789 -> m12_790  [key=0, style=solid];
m12_790 -> m12_791  [key=0, style=solid];
m12_790 -> m12_792  [color=darkseagreen4, key=1, label=expectedValue, style=dashed];
m12_790 -> m12_794  [color=darkseagreen4, key=1, label=expectedValue, style=dashed];
m12_790 -> m12_790  [color=darkorchid, key=3, label="Local variable string expectedValue", style=bold];
m12_791 -> m12_792  [key=0, style=solid];
m12_791 -> m12_10  [key=2, style=dotted];
m12_792 -> m12_793  [key=0, style=solid];
m12_792 -> m12_11  [key=2, style=dotted];
m12_794 -> m12_795  [key=0, style=solid];
m12_794 -> m12_14  [key=2, style=dotted];
m12_793 -> m12_794  [key=0, style=solid];
m12_795 -> m12_789  [color=blue, key=0, style=bold];
m12_54 -> m12_55  [key=0, style=solid];
m12_55 -> m12_56  [key=0, style=solid];
m12_56 -> m12_57  [key=0, style=solid];
m12_56 -> m12_10  [key=2, style=dotted];
m12_57 -> m12_58  [color=red, key=0, style=solid];
m12_57 -> m12_11  [key=2, style=dotted];
m12_57 -> m12_12  [key=2, style=dotted];
m12_57 -> m12_59  [color=darkseagreen4, key=1, label=headers, style=dashed];
m12_57 -> m12_60  [color=darkseagreen4, key=1, label=headers, style=dashed];
m12_58 -> m12_59  [color=red, key=0, style=solid];
m12_58 -> m12_14  [color=red, key=2, style=dotted];
m12_59 -> m12_60  [key=0, style=solid];
m12_59 -> m12_14  [key=2, style=dotted];
m12_60 -> m12_61  [key=0, style=solid];
m12_60 -> m12_14  [key=2, style=dotted];
m12_61 -> m12_54  [color=blue, key=0, style=bold];
m12_692 -> m12_693  [key=0, style=solid];
m12_693 -> m12_694  [key=0, style=solid];
m12_693 -> m12_10  [key=2, style=dotted];
m12_694 -> m12_695  [key=0, style=solid];
m12_694 -> m12_11  [key=2, style=dotted];
m12_695 -> m12_696  [key=0, style=solid];
m12_696 -> m12_697  [key=0, style=solid];
m12_696 -> m12_612  [key=2, style=dotted];
m12_696 -> m12_613  [key=2, style=dotted];
m12_697 -> m12_692  [color=blue, key=0, style=bold];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_2  [key=0, style=solid];
m12_1 -> m12_10  [key=2, style=dotted];
m12_2 -> m12_3  [key=0, style=solid];
m12_2 -> m12_11  [key=2, style=dotted];
m12_3 -> m12_4  [color=red, key=0, style=solid];
m12_3 -> m12_12  [key=2, style=dotted];
m12_3 -> m12_5  [color=red, key=1, label=values, style=dashed];
m12_3 -> m12_6  [color=darkseagreen4, key=1, label=values, style=dashed];
m12_3 -> m12_7  [color=darkseagreen4, key=1, label=values, style=dashed];
m12_3 -> m12_8  [color=darkseagreen4, key=1, label=values, style=dashed];
m12_4 -> m12_5  [color=red, key=0, style=solid];
m12_4 -> m12_13  [color=red, key=2, style=dotted];
m12_4 -> m12_14  [color=red, key=2, style=dotted];
m12_5 -> m12_6  [color=red, key=0, style=solid];
m12_5 -> m12_15  [color=red, key=2, style=dotted];
m12_5 -> m12_13  [color=red, key=2, style=dotted];
m12_5 -> m12_14  [color=red, key=2, style=dotted];
m12_6 -> m12_7  [key=0, style=solid];
m12_6 -> m12_15  [key=2, style=dotted];
m12_6 -> m12_14  [key=2, style=dotted];
m12_7 -> m12_8  [key=0, style=solid];
m12_7 -> m12_15  [key=2, style=dotted];
m12_7 -> m12_16  [key=2, style=dotted];
m12_7 -> m12_14  [key=2, style=dotted];
m12_8 -> m12_9  [key=0, style=solid];
m12_8 -> m12_16  [key=2, style=dotted];
m12_8 -> m12_15  [key=2, style=dotted];
m12_8 -> m12_14  [key=2, style=dotted];
m12_9 -> m12_0  [color=blue, key=0, style=bold];
m12_541 -> m12_542  [key=0, style=solid];
m12_542 -> m12_543  [key=0, style=solid];
m12_542 -> m12_10  [key=2, style=dotted];
m12_543 -> m12_544  [key=0, style=solid];
m12_543 -> m12_11  [key=2, style=dotted];
m12_544 -> m12_545  [key=0, style=solid];
m12_544 -> m12_261  [key=2, style=dotted];
m12_545 -> m12_541  [color=blue, key=0, style=bold];
m12_796 -> m12_797  [key=0, style=solid];
m12_797 -> m12_798  [key=0, style=solid];
m12_797 -> m12_10  [key=2, style=dotted];
m12_798 -> m12_799  [key=0, style=solid];
m12_798 -> m12_11  [key=2, style=dotted];
m12_799 -> m12_800  [key=0, style=solid];
m12_800 -> m12_801  [key=0, style=solid];
m12_800 -> m12_612  [key=2, style=dotted];
m12_800 -> m12_613  [key=2, style=dotted];
m12_801 -> m12_796  [color=blue, key=0, style=bold];
m12_735 -> m12_736  [key=0, style=solid];
m12_736 -> m12_737  [key=0, style=solid];
m12_736 -> m12_738  [color=darkseagreen4, key=1, label=expectedValue, style=dashed];
m12_736 -> m12_740  [color=darkseagreen4, key=1, label=expectedValue, style=dashed];
m12_736 -> m12_736  [color=darkorchid, key=3, label="Local variable string expectedValue", style=bold];
m12_737 -> m12_738  [key=0, style=solid];
m12_737 -> m12_10  [key=2, style=dotted];
m12_738 -> m12_739  [key=0, style=solid];
m12_738 -> m12_11  [key=2, style=dotted];
m12_740 -> m12_741  [key=0, style=solid];
m12_740 -> m12_14  [key=2, style=dotted];
m12_739 -> m12_740  [key=0, style=solid];
m12_741 -> m12_735  [color=blue, key=0, style=bold];
m12_38 -> m12_39  [key=0, style=solid];
m12_39 -> m12_40  [key=0, style=solid];
m12_40 -> m12_41  [key=0, style=solid];
m12_40 -> m12_10  [key=2, style=dotted];
m12_41 -> m12_42  [color=red, key=0, style=solid];
m12_41 -> m12_11  [key=2, style=dotted];
m12_41 -> m12_12  [key=2, style=dotted];
m12_41 -> m12_43  [color=darkseagreen4, key=1, label=headers, style=dashed];
m12_41 -> m12_44  [color=darkseagreen4, key=1, label=headers, style=dashed];
m12_42 -> m12_43  [color=red, key=0, style=solid];
m12_42 -> m12_14  [color=red, key=2, style=dotted];
m12_43 -> m12_44  [key=0, style=solid];
m12_43 -> m12_14  [key=2, style=dotted];
m12_44 -> m12_45  [key=0, style=solid];
m12_44 -> m12_14  [key=2, style=dotted];
m12_45 -> m12_38  [color=blue, key=0, style=bold];
m12_770 -> m12_771  [key=0, style=solid];
m12_771 -> m12_772  [key=0, style=solid];
m12_771 -> m12_10  [key=2, style=dotted];
m12_772 -> m12_773  [key=0, style=solid];
m12_772 -> m12_11  [key=2, style=dotted];
m12_773 -> m12_774  [key=0, style=solid];
m12_774 -> m12_775  [key=0, style=solid];
m12_774 -> m12_612  [key=2, style=dotted];
m12_774 -> m12_613  [key=2, style=dotted];
m12_775 -> m12_770  [color=blue, key=0, style=bold];
m12_182 -> m12_183  [key=0, style=solid];
m12_182 -> m12_184  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_183 -> m12_184  [key=0, style=solid];
m12_184 -> m12_185  [key=0, style=solid];
m12_184 -> m12_10  [key=2, style=dotted];
m12_185 -> m12_186  [color=red, key=0, style=solid];
m12_185 -> m12_11  [key=2, style=dotted];
m12_185 -> m12_12  [key=2, style=dotted];
m12_185 -> m12_187  [color=darkseagreen4, key=1, label=headers, style=dashed];
m12_185 -> m12_188  [color=darkseagreen4, key=1, label=headers, style=dashed];
m12_186 -> m12_187  [color=red, key=0, style=solid];
m12_186 -> m12_14  [color=red, key=2, style=dotted];
m12_187 -> m12_188  [key=0, style=solid];
m12_187 -> m12_14  [key=2, style=dotted];
m12_188 -> m12_189  [key=0, style=solid];
m12_188 -> m12_14  [key=2, style=dotted];
m12_189 -> m12_182  [color=blue, key=0, style=bold];
m12_368 -> m12_369  [key=0, style=solid];
m12_369 -> m12_370  [key=0, style=solid];
m12_370 -> m12_371  [key=0, style=solid];
m12_370 -> m12_10  [key=2, style=dotted];
m12_371 -> m12_372  [key=0, style=solid];
m12_371 -> m12_11  [key=2, style=dotted];
m12_371 -> m12_373  [color=darkseagreen4, key=1, label=headers, style=dashed];
m12_372 -> m12_373  [key=0, style=solid];
m12_372 -> m12_15  [key=2, style=dotted];
m12_372 -> m12_375  [key=2, style=dotted];
m12_373 -> m12_374  [key=0, style=solid];
m12_373 -> m12_16  [key=2, style=dotted];
m12_373 -> m12_375  [key=2, style=dotted];
m12_374 -> m12_368  [color=blue, key=0, style=bold];
m12_763 -> m12_764  [key=0, style=solid];
m12_764 -> m12_765  [key=0, style=solid];
m12_764 -> m12_356  [key=2, style=dotted];
m12_764 -> m12_766  [color=darkseagreen4, key=1, label=expectedValue, style=dashed];
m12_764 -> m12_768  [color=darkseagreen4, key=1, label=expectedValue, style=dashed];
m12_765 -> m12_766  [key=0, style=solid];
m12_765 -> m12_10  [key=2, style=dotted];
m12_766 -> m12_767  [key=0, style=solid];
m12_766 -> m12_11  [key=2, style=dotted];
m12_768 -> m12_769  [key=0, style=solid];
m12_768 -> m12_14  [key=2, style=dotted];
m12_767 -> m12_768  [key=0, style=solid];
m12_769 -> m12_763  [color=blue, key=0, style=bold];
m12_588 -> m12_589  [key=0, style=solid];
m12_589 -> m12_590  [key=0, style=solid];
m12_589 -> m12_593  [color=darkseagreen4, key=1, label=expectedValues, style=dashed];
m12_590 -> m12_591  [key=0, style=solid];
m12_590 -> m12_10  [key=2, style=dotted];
m12_593 -> m12_594  [key=0, style=solid];
m12_593 -> m12_268  [key=2, style=dotted];
m12_591 -> m12_592  [key=0, style=solid];
m12_591 -> m12_11  [key=2, style=dotted];
m12_592 -> m12_593  [key=0, style=solid];
m12_594 -> m12_588  [color=blue, key=0, style=bold];
m12_349 -> m12_350  [key=0, style=solid];
m12_350 -> m12_351  [key=0, style=solid];
m12_350 -> m12_356  [key=2, style=dotted];
m12_350 -> m12_354  [color=darkseagreen4, key=1, label=expectedDate, style=dashed];
m12_351 -> m12_352  [key=0, style=solid];
m12_354 -> m12_355  [key=0, style=solid];
m12_354 -> m12_14  [key=2, style=dotted];
m12_352 -> m12_353  [key=0, style=solid];
m12_352 -> m12_10  [key=2, style=dotted];
m12_353 -> m12_354  [key=0, style=solid];
m12_353 -> m12_11  [key=2, style=dotted];
m12_355 -> m12_349  [color=blue, key=0, style=bold];
m12_569 -> m12_570  [key=0, style=solid];
m12_569 -> m12_571  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_570 -> m12_571  [key=0, style=solid];
m12_570 -> m12_573  [color=darkseagreen4, key=1, label=expectedValues, style=dashed];
m12_571 -> m12_572  [key=0, style=solid];
m12_571 -> m12_10  [key=2, style=dotted];
m12_573 -> m12_574  [key=0, style=solid];
m12_573 -> m12_268  [key=2, style=dotted];
m12_572 -> m12_573  [key=0, style=solid];
m12_572 -> m12_11  [key=2, style=dotted];
m12_574 -> m12_569  [color=blue, key=0, style=bold];
m12_262 -> m12_263  [key=0, style=solid];
m12_263 -> m12_264  [key=0, style=solid];
m12_263 -> m12_266  [color=darkseagreen4, key=1, label=expectedValues, style=dashed];
m12_264 -> m12_265  [key=0, style=solid];
m12_264 -> m12_10  [key=2, style=dotted];
m12_266 -> m12_267  [key=0, style=solid];
m12_266 -> m12_268  [key=2, style=dotted];
m12_265 -> m12_266  [key=0, style=solid];
m12_265 -> m12_11  [key=2, style=dotted];
m12_267 -> m12_262  [color=blue, key=0, style=bold];
m12_835 -> m12_836  [key=0, style=solid];
m12_836 -> m12_837  [key=0, style=solid];
m12_836 -> m12_10  [key=2, style=dotted];
m12_837 -> m12_838  [key=0, style=solid];
m12_837 -> m12_11  [key=2, style=dotted];
m12_838 -> m12_839  [key=0, style=solid];
m12_839 -> m12_840  [key=0, style=solid];
m12_839 -> m12_612  [key=2, style=dotted];
m12_839 -> m12_613  [key=2, style=dotted];
m12_840 -> m12_835  [color=blue, key=0, style=bold];
m12_219 -> m12_220  [key=0, style=solid];
m12_220 -> m12_221  [key=0, style=solid];
m12_221 -> m12_222  [key=0, style=solid];
m12_221 -> m12_10  [key=2, style=dotted];
m12_222 -> m12_223  [color=red, key=0, style=solid];
m12_222 -> m12_11  [key=2, style=dotted];
m12_222 -> m12_12  [key=2, style=dotted];
m12_222 -> m12_224  [color=darkseagreen4, key=1, label=headers, style=dashed];
m12_222 -> m12_225  [color=darkseagreen4, key=1, label=headers, style=dashed];
m12_223 -> m12_224  [color=red, key=0, style=solid];
m12_223 -> m12_14  [color=red, key=2, style=dotted];
m12_224 -> m12_225  [key=0, style=solid];
m12_224 -> m12_14  [key=2, style=dotted];
m12_225 -> m12_226  [key=0, style=solid];
m12_225 -> m12_14  [key=2, style=dotted];
m12_226 -> m12_219  [color=blue, key=0, style=bold];
m12_698 -> m12_699  [key=0, style=solid];
m12_699 -> m12_700  [key=0, style=solid];
m12_699 -> m12_10  [key=2, style=dotted];
m12_700 -> m12_701  [key=0, style=solid];
m12_700 -> m12_11  [key=2, style=dotted];
m12_701 -> m12_702  [key=0, style=solid];
m12_702 -> m12_703  [key=0, style=solid];
m12_702 -> m12_14  [key=2, style=dotted];
m12_703 -> m12_698  [color=blue, key=0, style=bold];
m12_145 -> m12_146  [key=0, style=solid];
m12_146 -> m12_147  [key=0, style=solid];
m12_147 -> m12_148  [key=0, style=solid];
m12_147 -> m12_10  [key=2, style=dotted];
m12_148 -> m12_149  [color=red, key=0, style=solid];
m12_148 -> m12_11  [key=2, style=dotted];
m12_148 -> m12_12  [key=2, style=dotted];
m12_148 -> m12_150  [color=darkseagreen4, key=1, label=headers, style=dashed];
m12_148 -> m12_151  [color=darkseagreen4, key=1, label=headers, style=dashed];
m12_148 -> m12_152  [color=darkseagreen4, key=1, label=headers, style=dashed];
m12_149 -> m12_150  [color=red, key=0, style=solid];
m12_149 -> m12_14  [color=red, key=2, style=dotted];
m12_150 -> m12_151  [key=0, style=solid];
m12_150 -> m12_14  [key=2, style=dotted];
m12_151 -> m12_152  [key=0, style=solid];
m12_151 -> m12_14  [key=2, style=dotted];
m12_152 -> m12_153  [key=0, style=solid];
m12_152 -> m12_14  [key=2, style=dotted];
m12_153 -> m12_145  [color=blue, key=0, style=bold];
m12_418 -> m12_419  [key=0, style=solid];
m12_419 -> m12_420  [key=0, style=solid];
m12_420 -> m12_421  [key=0, style=solid];
m12_420 -> m12_10  [key=2, style=dotted];
m12_421 -> m12_422  [color=red, key=0, style=solid];
m12_421 -> m12_11  [key=2, style=dotted];
m12_421 -> m12_12  [key=2, style=dotted];
m12_421 -> m12_423  [color=darkseagreen4, key=1, label=headers, style=dashed];
m12_421 -> m12_424  [color=darkseagreen4, key=1, label=headers, style=dashed];
m12_422 -> m12_423  [color=red, key=0, style=solid];
m12_422 -> m12_14  [color=red, key=2, style=dotted];
m12_423 -> m12_424  [key=0, style=solid];
m12_423 -> m12_14  [key=2, style=dotted];
m12_424 -> m12_425  [key=0, style=solid];
m12_424 -> m12_14  [key=2, style=dotted];
m12_425 -> m12_418  [color=blue, key=0, style=bold];
m12_450 -> m12_451  [key=0, style=solid];
m12_450 -> m12_453  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_451 -> m12_452  [key=0, style=solid];
m12_451 -> m12_356  [key=2, style=dotted];
m12_451 -> m12_455  [color=darkseagreen4, key=1, label=expectedDate, style=dashed];
m12_453 -> m12_454  [key=0, style=solid];
m12_453 -> m12_10  [key=2, style=dotted];
m12_452 -> m12_453  [key=0, style=solid];
m12_455 -> m12_456  [key=0, style=solid];
m12_455 -> m12_14  [key=2, style=dotted];
m12_454 -> m12_455  [key=0, style=solid];
m12_454 -> m12_11  [key=2, style=dotted];
m12_456 -> m12_450  [color=blue, key=0, style=bold];
m12_828 -> m12_829  [key=0, style=solid];
m12_829 -> m12_830  [key=0, style=solid];
m12_829 -> m12_831  [color=darkseagreen4, key=1, label=expectedValue, style=dashed];
m12_829 -> m12_833  [color=darkseagreen4, key=1, label=expectedValue, style=dashed];
m12_829 -> m12_736  [color=darkorchid, key=3, label="Local variable string expectedValue", style=bold];
m12_830 -> m12_831  [key=0, style=solid];
m12_830 -> m12_10  [key=2, style=dotted];
m12_831 -> m12_832  [key=0, style=solid];
m12_831 -> m12_11  [key=2, style=dotted];
m12_833 -> m12_834  [key=0, style=solid];
m12_833 -> m12_14  [key=2, style=dotted];
m12_832 -> m12_833  [key=0, style=solid];
m12_834 -> m12_828  [color=blue, key=0, style=bold];
m12_131 -> m12_132  [key=0, style=solid];
m12_132 -> m12_133  [key=0, style=solid];
m12_133 -> m12_134  [key=0, style=solid];
m12_133 -> m12_10  [key=2, style=dotted];
m12_134 -> m12_135  [color=red, key=0, style=solid];
m12_134 -> m12_11  [key=2, style=dotted];
m12_134 -> m12_12  [key=2, style=dotted];
m12_134 -> m12_136  [color=red, key=1, label=headers, style=dashed];
m12_134 -> m12_137  [color=red, key=1, label=headers, style=dashed];
m12_135 -> m12_136  [color=red, key=0, style=solid];
m12_135 -> m12_14  [color=red, key=2, style=dotted];
m12_136 -> m12_137  [color=red, key=0, style=solid];
m12_136 -> m12_70  [color=red, key=2, style=dotted];
m12_136 -> m12_71  [color=red, key=2, style=dotted];
m12_136 -> m12_139  [color=red, key=1, label="lambda expression", style=dashed];
m12_137 -> m12_138  [color=red, key=0, style=solid];
m12_137 -> m12_70  [color=red, key=2, style=dotted];
m12_137 -> m12_71  [color=red, key=2, style=dotted];
m12_137 -> m12_142  [color=red, key=1, label="lambda expression", style=dashed];
m12_138 -> m12_131  [color=blue, key=0, style=bold];
m12_546 -> m12_547  [key=0, style=solid];
m12_547 -> m12_548  [key=0, style=solid];
m12_547 -> m12_550  [color=darkseagreen4, key=1, label=expectedValues, style=dashed];
m12_548 -> m12_549  [key=0, style=solid];
m12_548 -> m12_10  [key=2, style=dotted];
m12_550 -> m12_551  [key=0, style=solid];
m12_550 -> m12_268  [key=2, style=dotted];
m12_549 -> m12_550  [key=0, style=solid];
m12_549 -> m12_11  [key=2, style=dotted];
m12_551 -> m12_546  [color=blue, key=0, style=bold];
m12_809 -> m12_810  [key=0, style=solid];
m12_810 -> m12_811  [key=0, style=solid];
m12_810 -> m12_10  [key=2, style=dotted];
m12_811 -> m12_812  [key=0, style=solid];
m12_811 -> m12_11  [key=2, style=dotted];
m12_812 -> m12_813  [key=0, style=solid];
m12_813 -> m12_814  [key=0, style=solid];
m12_813 -> m12_612  [key=2, style=dotted];
m12_813 -> m12_613  [key=2, style=dotted];
m12_814 -> m12_809  [color=blue, key=0, style=bold];
m12_606 -> m12_607  [key=0, style=solid];
m12_607 -> m12_608  [key=0, style=solid];
m12_607 -> m12_10  [key=2, style=dotted];
m12_608 -> m12_609  [key=0, style=solid];
m12_608 -> m12_11  [key=2, style=dotted];
m12_609 -> m12_610  [key=0, style=solid];
m12_610 -> m12_611  [key=0, style=solid];
m12_610 -> m12_612  [key=2, style=dotted];
m12_610 -> m12_613  [key=2, style=dotted];
m12_611 -> m12_606  [color=blue, key=0, style=bold];
m12_499 -> m12_500  [key=0, style=solid];
m12_500 -> m12_501  [key=0, style=solid];
m12_500 -> m12_10  [key=2, style=dotted];
m12_501 -> m12_502  [key=0, style=solid];
m12_501 -> m12_11  [key=2, style=dotted];
m12_502 -> m12_503  [key=0, style=solid];
m12_502 -> m12_348  [key=2, style=dotted];
m12_503 -> m12_499  [color=blue, key=0, style=bold];
m12_309 -> m12_310  [key=0, style=solid];
m12_310 -> m12_311  [key=0, style=solid];
m12_310 -> m12_10  [key=2, style=dotted];
m12_311 -> m12_312  [key=0, style=solid];
m12_311 -> m12_11  [key=2, style=dotted];
m12_312 -> m12_313  [key=0, style=solid];
m12_312 -> m12_14  [key=2, style=dotted];
m12_313 -> m12_309  [color=blue, key=0, style=bold];
m12_552 -> m12_553  [key=0, style=solid];
m12_552 -> m12_554  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_553 -> m12_554  [key=0, style=solid];
m12_553 -> m12_556  [color=darkseagreen4, key=1, label=expectedValues, style=dashed];
m12_554 -> m12_555  [key=0, style=solid];
m12_554 -> m12_10  [key=2, style=dotted];
m12_556 -> m12_557  [key=0, style=solid];
m12_556 -> m12_268  [key=2, style=dotted];
m12_555 -> m12_556  [key=0, style=solid];
m12_555 -> m12_11  [key=2, style=dotted];
m12_557 -> m12_552  [color=blue, key=0, style=bold];
m12_211 -> m12_212  [key=0, style=solid];
m12_212 -> m12_213  [key=0, style=solid];
m12_213 -> m12_214  [key=0, style=solid];
m12_213 -> m12_10  [key=2, style=dotted];
m12_214 -> m12_215  [color=red, key=0, style=solid];
m12_214 -> m12_11  [key=2, style=dotted];
m12_214 -> m12_12  [key=2, style=dotted];
m12_214 -> m12_216  [color=darkseagreen4, key=1, label=headers, style=dashed];
m12_214 -> m12_217  [color=darkseagreen4, key=1, label=headers, style=dashed];
m12_215 -> m12_216  [color=red, key=0, style=solid];
m12_215 -> m12_14  [color=red, key=2, style=dotted];
m12_216 -> m12_217  [key=0, style=solid];
m12_216 -> m12_14  [key=2, style=dotted];
m12_217 -> m12_218  [key=0, style=solid];
m12_217 -> m12_14  [key=2, style=dotted];
m12_218 -> m12_211  [color=blue, key=0, style=bold];
m12_867 -> m12_862  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_0 -> m13_1  [key=0, style=solid];
m13_1 -> m13_2  [key=0, style=solid];
m13_1 -> m13_3  [key=2, style=dotted];
m13_2 -> m13_0  [color=blue, key=0, style=bold];
m13_4 -> m13_5  [color=red, key=0, style=solid];
m13_4 -> m13_22  [color=darkorchid, key=3, label="method methodReturn System.Func<Nancy.NancyContext, Nancy.Response> op_Implicit", style=bold];
m13_5 -> m13_6  [color=red, key=0, style=solid];
m13_6 -> m13_4  [color=blue, key=0, style=bold];
m13_13 -> m13_14  [key=0, style=solid];
m13_13 -> m13_15  [color=darkseagreen4, key=1, label="Nancy.BeforePipeline", style=dashed];
m13_13 -> m13_13  [color=darkorchid, key=3, label="method methodReturn Nancy.BeforePipeline op_Addition", style=bold];
m13_14 -> m13_15  [key=0, style=solid];
m13_14 -> m13_12  [key=2, style=dotted];
m13_15 -> m13_16  [key=0, style=solid];
m13_16 -> m13_13  [color=blue, key=0, style=bold];
m13_32 -> m13_33  [key=0, style=solid];
m13_33 -> m13_34  [key=0, style=solid];
m13_33 -> m13_35  [key=2, style=dotted];
m13_34 -> m13_32  [color=blue, key=0, style=bold];
m13_35 -> m13_39  [key=0, style=solid];
m13_35 -> m13_33  [color=darkorchid, key=3, label="Parameter variable int index", style=bold];
m13_35 -> m13_32  [color=darkorchid, key=3, label="Parameter variable System.Func<Nancy.NancyContext, Nancy.Response> item", style=bold];
m13_39 -> m13_40  [key=0, style=solid];
m13_39 -> m13_41  [key=2, style=dotted];
m13_40 -> m13_35  [color=blue, key=0, style=bold];
m13_22 -> m13_23  [key=0, style=solid];
m13_22 -> m13_26  [color=darkseagreen4, key=1, label="Nancy.NancyContext", style=dashed];
m13_23 -> m13_24  [key=0, style=solid];
m13_23 -> m13_25  [color=darkseagreen4, key=1, label=returnValue, style=dashed];
m13_23 -> m13_27  [color=darkseagreen4, key=1, label=returnValue, style=dashed];
m13_23 -> m13_23  [color=darkorchid, key=3, label="Local variable Nancy.Response returnValue", style=bold];
m13_26 -> m13_25  [key=0, style=solid];
m13_26 -> m13_31  [key=2, style=dotted];
m13_26 -> m13_27  [color=darkseagreen4, key=1, label=returnValue, style=dashed];
m13_24 -> m13_25  [key=0, style=solid];
m13_24 -> m13_29  [key=2, style=dotted];
m13_24 -> m13_26  [color=darkseagreen4, key=1, label=enumerator, style=dashed];
m13_25 -> m13_26  [key=0, style=solid];
m13_25 -> m13_27  [key=0, style=solid];
m13_25 -> m13_30  [key=2, style=dotted];
m13_27 -> m13_28  [key=0, style=solid];
m13_28 -> m13_22  [color=blue, key=0, style=bold];
m13_12 -> m13_36  [key=0, style=solid];
m13_12 -> m13_7  [color=darkorchid, key=3, label="Parameter variable System.Func<Nancy.NancyContext, Nancy.Response> item", style=bold];
m13_12 -> m13_13  [color=darkorchid, key=3, label="Parameter variable System.Func<Nancy.NancyContext, Nancy.Response> item", style=bold];
m13_36 -> m13_37  [key=0, style=solid];
m13_36 -> m13_38  [key=2, style=dotted];
m13_37 -> m13_12  [color=blue, key=0, style=bold];
m13_17 -> m13_18  [key=0, style=solid];
m13_17 -> m13_19  [color=darkseagreen4, key=1, label="Nancy.BeforePipeline", style=dashed];
m13_17 -> m13_17  [color=darkorchid, key=3, label="method methodReturn Nancy.BeforePipeline op_Addition", style=bold];
m13_18 -> m13_19  [key=0, style=solid];
m13_18 -> m13_21  [key=2, style=dotted];
m13_19 -> m13_20  [key=0, style=solid];
m13_20 -> m13_17  [color=blue, key=0, style=bold];
m13_7 -> m13_8  [key=0, style=solid];
m13_7 -> m13_9  [color=darkseagreen4, key=1, label="System.Func<Nancy.NancyContext, Nancy.Response>", style=dashed];
m13_8 -> m13_9  [key=0, style=solid];
m13_8 -> m13_0  [key=2, style=dotted];
m13_8 -> m13_10  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m13_9 -> m13_10  [key=0, style=solid];
m13_9 -> m13_12  [key=2, style=dotted];
m13_10 -> m13_11  [key=0, style=solid];
m13_11 -> m13_7  [color=blue, key=0, style=bold];
m13_42 -> m13_1  [color=darkseagreen4, key=1, label="Nancy.BeforePipeline", style=dashed];
m13_42 -> m13_24  [color=darkseagreen4, key=1, label="Nancy.BeforePipeline", style=dashed];
m13_42 -> m13_33  [color=darkseagreen4, key=1, label="Nancy.BeforePipeline", style=dashed];
m13_42 -> m13_36  [color=darkseagreen4, key=1, label="Nancy.BeforePipeline", style=dashed];
m13_42 -> m13_39  [color=darkseagreen4, key=1, label="Nancy.BeforePipeline", style=dashed];
m14_0 -> m14_1  [key=0, style=solid];
m14_0 -> m14_3  [color=red, key=1, label=string, style=dashed];
m14_0 -> m14_4  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.Nodes.TrieNode", style=dashed];
m14_0 -> m14_5  [color=red, key=1, label=string, style=dashed];
m14_0 -> m14_6  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.Nodes.TrieNode", style=dashed];
m14_0 -> m14_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_0 -> m14_8  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.Nodes.TrieNode", style=dashed];
m14_0 -> m14_9  [color=red, key=1, label=string, style=dashed];
m14_0 -> m14_10  [color=red, key=1, label="Nancy.Routing.Trie.Nodes.TrieNode", style=dashed];
m14_0 -> m14_11  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.Nodes.TrieNode", style=dashed];
m14_0 -> m14_17  [color=darkorchid, key=3, label="method methodReturn Nancy.Routing.Trie.Nodes.TrieNode GetNodeForSegment", style=bold];
m14_1 -> m14_2  [key=0, style=solid];
m14_1 -> m14_3  [color=red, key=0, style=solid];
m14_3 -> m14_4  [color=red, key=0, style=solid];
m14_3 -> m14_5  [color=red, key=0, style=solid];
m14_3 -> m14_14  [color=red, key=2, style=dotted];
m14_3 -> m14_15  [color=red, key=2, style=dotted];
m14_4 -> m14_12  [key=0, style=solid];
m14_4 -> m14_16  [key=2, style=dotted];
m14_5 -> m14_6  [color=red, key=0, style=solid];
m14_5 -> m14_7  [color=red, key=0, style=solid];
m14_5 -> m14_14  [color=red, key=2, style=dotted];
m14_5 -> m14_15  [color=red, key=2, style=dotted];
m14_6 -> m14_12  [key=0, style=solid];
m14_6 -> m14_17  [key=2, style=dotted];
m14_7 -> m14_8  [key=0, style=solid];
m14_7 -> m14_9  [color=red, key=0, style=solid];
m14_7 -> m14_14  [key=2, style=dotted];
m14_7 -> m14_15  [key=2, style=dotted];
m14_8 -> m14_12  [key=0, style=solid];
m14_8 -> m14_18  [key=2, style=dotted];
m14_9 -> m14_10  [color=red, key=0, style=solid];
m14_9 -> m14_11  [color=red, key=0, style=solid];
m14_9 -> m14_19  [color=red, key=2, style=dotted];
m14_10 -> m14_12  [color=red, key=0, style=solid];
m14_10 -> m14_20  [color=red, key=2, style=dotted];
m14_11 -> m14_12  [key=0, style=solid];
m14_11 -> m14_21  [key=2, style=dotted];
m14_2 -> m14_12  [key=0, style=solid];
m14_2 -> m14_13  [key=2, style=dotted];
m14_12 -> m14_0  [color=blue, key=0, style=bold];
m14_17 -> m14_22  [key=0, style=solid];
m14_17 -> m14_23  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.Nodes.TrieNode", style=dashed];
m14_17 -> m14_24  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_17 -> m14_25  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.Nodes.TrieNode", style=dashed];
m14_17 -> m14_26  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_17 -> m14_27  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.Nodes.TrieNode", style=dashed];
m14_17 -> m14_28  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_17 -> m14_29  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.Nodes.TrieNode", style=dashed];
m14_17 -> m14_30  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.Nodes.TrieNode", style=dashed];
m14_17 -> m14_0  [color=darkorchid, key=3, label="Parameter variable string segment", style=bold];
m14_22 -> m14_23  [key=0, style=solid];
m14_22 -> m14_24  [key=0, style=solid];
m14_22 -> m14_32  [key=2, style=dotted];
m14_23 -> m14_31  [key=0, style=solid];
m14_23 -> m14_33  [key=2, style=dotted];
m14_24 -> m14_25  [key=0, style=solid];
m14_24 -> m14_26  [key=0, style=solid];
m14_24 -> m14_15  [key=2, style=dotted];
m14_25 -> m14_31  [key=0, style=solid];
m14_25 -> m14_34  [key=2, style=dotted];
m14_26 -> m14_27  [key=0, style=solid];
m14_26 -> m14_28  [key=0, style=solid];
m14_26 -> m14_15  [key=2, style=dotted];
m14_27 -> m14_31  [key=0, style=solid];
m14_27 -> m14_35  [key=2, style=dotted];
m14_28 -> m14_29  [key=0, style=solid];
m14_28 -> m14_30  [key=0, style=solid];
m14_28 -> m14_32  [key=2, style=dotted];
m14_29 -> m14_31  [key=0, style=solid];
m14_29 -> m14_36  [key=2, style=dotted];
m14_30 -> m14_31  [key=0, style=solid];
m14_30 -> m14_37  [key=2, style=dotted];
m14_31 -> m14_17  [color=blue, key=0, style=bold];
m14_38 -> m14_2  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.TrieNodeFactory", style=dashed];
m14_38 -> m14_4  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.TrieNodeFactory", style=dashed];
m14_38 -> m14_6  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.TrieNodeFactory", style=dashed];
m14_38 -> m14_8  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.TrieNodeFactory", style=dashed];
m14_38 -> m14_10  [color=red, key=1, label="Nancy.Routing.Trie.TrieNodeFactory", style=dashed];
m14_38 -> m14_11  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.TrieNodeFactory", style=dashed];
m14_38 -> m14_23  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.TrieNodeFactory", style=dashed];
m14_38 -> m14_25  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.TrieNodeFactory", style=dashed];
m14_38 -> m14_27  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.TrieNodeFactory", style=dashed];
m14_38 -> m14_29  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.TrieNodeFactory", style=dashed];
m14_38 -> m14_30  [color=darkseagreen4, key=1, label="Nancy.Routing.Trie.TrieNodeFactory", style=dashed];
}
