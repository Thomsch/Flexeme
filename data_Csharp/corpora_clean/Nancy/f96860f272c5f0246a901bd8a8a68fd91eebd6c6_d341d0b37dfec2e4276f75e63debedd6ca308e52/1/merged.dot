digraph  {
n95 [label=response, span=""];
n96 [label="Nancy.Tests.Unit.ResponseExtensionsFixture", span=""];
n0 [label="Entry Nancy.Tests.Unit.ResponseExtensionsFixture.Should_add_content_disposition_header_for_attachments()", span="13-13", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_add_content_disposition_header_for_attachments()"];
n1 [label="var response = new Response()", span="15-15", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_add_content_disposition_header_for_attachments()"];
n2 [label="var result = response.AsAttachment(''testing.html'', ''text/html'')", span="17-17", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_add_content_disposition_header_for_attachments()", color=red, community=0];
n6 [label="Entry Nancy.Response.Response()", span="15-15", cluster="Nancy.Response.Response()"];
n3 [label="result.Headers.ShouldNotBeNull()", span="19-19", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_add_content_disposition_header_for_attachments()"];
n7 [label="Entry Nancy.Response.AsAttachment(string, string)", span="17-17", cluster="Nancy.Response.AsAttachment(string, string)"];
n4 [label="result.Headers.ContainsKey(''Content-Disposition'').ShouldBeTrue()", span="20-20", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_add_content_disposition_header_for_attachments()"];
n8 [label="Entry object.ShouldNotBeNull()", span="125-125", cluster="object.ShouldNotBeNull()"];
n5 [label="Exit Nancy.Tests.Unit.ResponseExtensionsFixture.Should_add_content_disposition_header_for_attachments()", span="13-13", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_add_content_disposition_header_for_attachments()"];
n9 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)"];
n10 [label="Entry bool.ShouldBeTrue()", span="70-70", cluster="bool.ShouldBeTrue()"];
n11 [label="Entry Nancy.Tests.Unit.ResponseExtensionsFixture.Should_have_filename_in_content_disposition_header()", span="24-24", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_have_filename_in_content_disposition_header()"];
n12 [label="var response = new Response()", span="26-26", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_have_filename_in_content_disposition_header()"];
n13 [label="var result = response.AsAttachment(''testing.html'', ''text/html'')", span="28-28", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_have_filename_in_content_disposition_header()"];
n14 [label="result.Headers[''Content-Disposition''].ShouldContain(''testing.html'')", span="30-30", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_have_filename_in_content_disposition_header()"];
n15 [label="Exit Nancy.Tests.Unit.ResponseExtensionsFixture.Should_have_filename_in_content_disposition_header()", span="24-24", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_have_filename_in_content_disposition_header()"];
n16 [label="Entry string.ShouldContain(string)", span="55-55", cluster="string.ShouldContain(string)"];
n17 [label="Entry Nancy.Tests.Unit.ResponseExtensionsFixture.Should_not_allow_null_filename_on_generic_responses_as_attachments()", span="34-34", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_not_allow_null_filename_on_generic_responses_as_attachments()"];
n18 [label="var response = new Response()", span="36-36", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_not_allow_null_filename_on_generic_responses_as_attachments()"];
n19 [label="var result = Record.Exception(() => response.AsAttachment(null, ''text/html''))", span="38-38", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_not_allow_null_filename_on_generic_responses_as_attachments()"];
n25 [label="response.AsAttachment(null, ''text/html'')", span="38-38", cluster="lambda expression"];
n20 [label="result.ShouldBeOfType(typeof(ArgumentException))", span="40-40", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_not_allow_null_filename_on_generic_responses_as_attachments()"];
n22 [label="Entry Unk.Exception", span="", cluster="Unk.Exception"];
n24 [label="Entry lambda expression", span="38-38", cluster="lambda expression"];
n21 [label="Exit Nancy.Tests.Unit.ResponseExtensionsFixture.Should_not_allow_null_filename_on_generic_responses_as_attachments()", span="34-34", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_not_allow_null_filename_on_generic_responses_as_attachments()"];
n23 [label="Entry Unk.ShouldBeOfType", span="", cluster="Unk.ShouldBeOfType"];
n26 [label="Exit lambda expression", span="38-38", cluster="lambda expression"];
n27 [label="Entry Nancy.Tests.Unit.ResponseExtensionsFixture.Should_use_filename_and_content_type_for_attachments_from_file_response_if_not_overridden()", span="44-44", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_use_filename_and_content_type_for_attachments_from_file_response_if_not_overridden()"];
n28 [label="var assemblyPath =\r\n                Path.GetDirectoryName(this.GetType().Assembly.Location)", span="47-48", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_use_filename_and_content_type_for_attachments_from_file_response_if_not_overridden()"];
n29 [label="GenericFileResponse.RootPath = assemblyPath", span="50-50", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_use_filename_and_content_type_for_attachments_from_file_response_if_not_overridden()"];
n36 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()"];
n37 [label="Entry System.IO.Path.GetDirectoryName(string)", span="0-0", cluster="System.IO.Path.GetDirectoryName(string)"];
n30 [label="var filename = Path.GetFileName(this.GetType().Assembly.Location)", span="52-52", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_use_filename_and_content_type_for_attachments_from_file_response_if_not_overridden()"];
n31 [label="var response = new GenericFileResponse(filename, ''image/png'')", span="53-53", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_use_filename_and_content_type_for_attachments_from_file_response_if_not_overridden()"];
n38 [label="Entry System.IO.Path.GetFileName(string)", span="0-0", cluster="System.IO.Path.GetFileName(string)"];
n33 [label="result.Headers[''Content-Disposition''].ShouldContain(filename)", span="59-59", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_use_filename_and_content_type_for_attachments_from_file_response_if_not_overridden()"];
n32 [label="var result = response.AsAttachment()", span="56-56", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_use_filename_and_content_type_for_attachments_from_file_response_if_not_overridden()"];
n39 [label="Entry Nancy.Responses.GenericFileResponse.GenericFileResponse(string, string)", span="30-30", cluster="Nancy.Responses.GenericFileResponse.GenericFileResponse(string, string)"];
n34 [label="result.ContentType.ShouldEqual(''image/png'')", span="60-60", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_use_filename_and_content_type_for_attachments_from_file_response_if_not_overridden()"];
n35 [label="Exit Nancy.Tests.Unit.ResponseExtensionsFixture.Should_use_filename_and_content_type_for_attachments_from_file_response_if_not_overridden()", span="44-44", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_use_filename_and_content_type_for_attachments_from_file_response_if_not_overridden()"];
n40 [label="Entry object.ShouldEqual(object)", span="80-80", cluster="object.ShouldEqual(object)"];
n41 [label="Entry Nancy.Tests.Unit.ResponseExtensionsFixture.Should_allow_overriding_of_content_type_for_attachments()", span="64-64", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_allow_overriding_of_content_type_for_attachments()"];
n42 [label="var response = new Response()", span="66-66", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_allow_overriding_of_content_type_for_attachments()"];
n43 [label="response.ContentType = ''test/test''", span="67-67", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_allow_overriding_of_content_type_for_attachments()"];
n44 [label="var result = response.AsAttachment(''testing.html'', ''text/html'')", span="69-69", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_allow_overriding_of_content_type_for_attachments()"];
n45 [label="result.ContentType.ShouldEqual(''text/html'')", span="71-71", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_allow_overriding_of_content_type_for_attachments()"];
n46 [label="Exit Nancy.Tests.Unit.ResponseExtensionsFixture.Should_allow_overriding_of_content_type_for_attachments()", span="64-64", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_allow_overriding_of_content_type_for_attachments()"];
n47 [label="Entry Nancy.Tests.Unit.ResponseExtensionsFixture.Should_not_set_content_type_for_attachment_if_null()", span="75-75", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_not_set_content_type_for_attachment_if_null()"];
n48 [label="var response = new Response()", span="77-77", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_not_set_content_type_for_attachment_if_null()"];
n49 [label="response.ContentType = ''test/test''", span="78-78", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_not_set_content_type_for_attachment_if_null()"];
n50 [label="var result = response.AsAttachment(''testing.html'')", span="80-80", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_not_set_content_type_for_attachment_if_null()"];
n51 [label="result.ContentType.ShouldEqual(''test/test'')", span="82-82", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_not_set_content_type_for_attachment_if_null()"];
n52 [label="Exit Nancy.Tests.Unit.ResponseExtensionsFixture.Should_not_set_content_type_for_attachment_if_null()", span="75-75", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_not_set_content_type_for_attachment_if_null()"];
n53 [label="Entry Nancy.Tests.Unit.ResponseExtensionsFixture.Should_handle_null_response_headers_using_withheaders()", span="86-86", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_handle_null_response_headers_using_withheaders()"];
n54 [label="var response = new Response()", span="88-88", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_handle_null_response_headers_using_withheaders()"];
n55 [label="response.Headers = null", span="89-89", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_handle_null_response_headers_using_withheaders()"];
n56 [label="var result = response.WithHeaders(new[] { Tuple.Create(''test'', ''test'') })", span="91-91", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_handle_null_response_headers_using_withheaders()"];
n57 [label="result.Headers.ShouldNotBeNull()", span="93-93", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_handle_null_response_headers_using_withheaders()"];
n60 [label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0", cluster="System.Tuple.Create<T1, T2>(T1, T2)"];
n61 [label="Entry Nancy.Response.WithHeaders(params System.Tuple<string, string>[])", span="74-74", cluster="Nancy.Response.WithHeaders(params System.Tuple<string, string>[])"];
n58 [label="result.Headers.Count.ShouldEqual(1)", span="94-94", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_handle_null_response_headers_using_withheaders()"];
n59 [label="Exit Nancy.Tests.Unit.ResponseExtensionsFixture.Should_handle_null_response_headers_using_withheaders()", span="86-86", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_handle_null_response_headers_using_withheaders()"];
n62 [label="Entry Nancy.Tests.Unit.ResponseExtensionsFixture.Should_append_to_existing_headers_if_already_in_response()", span="98-98", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_append_to_existing_headers_if_already_in_response()"];
n63 [label="var response = new Response()", span="100-100", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_append_to_existing_headers_if_already_in_response()"];
n64 [label="response.Headers = new Dictionary<string, string>()", span="101-101", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_append_to_existing_headers_if_already_in_response()"];
n65 [label="response.Headers.Add(''Existing'', ''Test'')", span="102-102", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_append_to_existing_headers_if_already_in_response()"];
n66 [label="var result = response.WithHeaders(new[] { Tuple.Create(''test'', ''test'') })", span="104-104", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_append_to_existing_headers_if_already_in_response()"];
n70 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()"];
n71 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)"];
n67 [label="result.Headers.ShouldNotBeNull()", span="106-106", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_append_to_existing_headers_if_already_in_response()"];
n68 [label="result.Headers.Count.ShouldEqual(2)", span="107-107", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_append_to_existing_headers_if_already_in_response()"];
n69 [label="Exit Nancy.Tests.Unit.ResponseExtensionsFixture.Should_append_to_existing_headers_if_already_in_response()", span="98-98", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_append_to_existing_headers_if_already_in_response()"];
n72 [label="Entry Nancy.Tests.Unit.ResponseExtensionsFixture.Should_add_all_headers_using_withheaders()", span="111-111", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_add_all_headers_using_withheaders()"];
n73 [label="var response = new Response()", span="113-113", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_add_all_headers_using_withheaders()"];
n74 [label="var result = response.WithHeaders(\r\n                            Tuple.Create(''test'', ''testvalue''), \r\n                            Tuple.Create(''test2'', ''test2value''))", span="115-117", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_add_all_headers_using_withheaders()"];
n75 [label="result.Headers.ShouldNotBeNull()", span="119-119", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_add_all_headers_using_withheaders()"];
n76 [label="result.Headers[''test''].ShouldEqual(''testvalue'')", span="120-120", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_add_all_headers_using_withheaders()"];
n77 [label="result.Headers[''test2''].ShouldEqual(''test2value'')", span="121-121", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_add_all_headers_using_withheaders()"];
n78 [label="Exit Nancy.Tests.Unit.ResponseExtensionsFixture.Should_add_all_headers_using_withheaders()", span="111-111", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_add_all_headers_using_withheaders()"];
n79 [label="Entry Nancy.Tests.Unit.ResponseExtensionsFixture.Should_be_able_to_supply_withHeaders_headers_as_anonymous_types()", span="125-125", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_be_able_to_supply_withHeaders_headers_as_anonymous_types()"];
n80 [label="var response = new Response()", span="127-127", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_be_able_to_supply_withHeaders_headers_as_anonymous_types()"];
n81 [label="var result = response.WithHeaders(\r\n                new { Header = ''test'', Value = ''testvalue'' }, \r\n                new { Header = ''test2'', Value = ''test2value'' })", span="129-131", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_be_able_to_supply_withHeaders_headers_as_anonymous_types()"];
n82 [label="result.Headers.ShouldNotBeNull()", span="133-133", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_be_able_to_supply_withHeaders_headers_as_anonymous_types()"];
n86 [label="Entry Nancy.Response.WithHeaders(params object[])", span="60-60", cluster="Nancy.Response.WithHeaders(params object[])"];
n83 [label="result.Headers[''test''].ShouldEqual(''testvalue'')", span="134-134", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_be_able_to_supply_withHeaders_headers_as_anonymous_types()"];
n84 [label="result.Headers[''test2''].ShouldEqual(''test2value'')", span="135-135", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_be_able_to_supply_withHeaders_headers_as_anonymous_types()"];
n85 [label="Exit Nancy.Tests.Unit.ResponseExtensionsFixture.Should_be_able_to_supply_withHeaders_headers_as_anonymous_types()", span="125-125", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_be_able_to_supply_withHeaders_headers_as_anonymous_types()"];
n87 [label="Entry Nancy.Tests.Unit.ResponseExtensionsFixture.Should_be_able_to_chain_setting_single_headers()", span="139-139", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_be_able_to_chain_setting_single_headers()"];
n88 [label="var response = new Response()", span="141-141", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_be_able_to_chain_setting_single_headers()"];
n89 [label="var result = response.WithHeader(''test'', ''testvalue'').WithHeader(''test2'', ''test2value'')", span="143-143", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_be_able_to_chain_setting_single_headers()"];
n90 [label="result.Headers.ShouldNotBeNull()", span="145-145", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_be_able_to_chain_setting_single_headers()"];
n94 [label="Entry Nancy.Response.WithHeader(string, string)", span="46-46", cluster="Nancy.Response.WithHeader(string, string)"];
n91 [label="result.Headers[''test''].ShouldEqual(''testvalue'')", span="146-146", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_be_able_to_chain_setting_single_headers()"];
n92 [label="result.Headers[''test2''].ShouldEqual(''test2value'')", span="147-147", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_be_able_to_chain_setting_single_headers()"];
n93 [label="Exit Nancy.Tests.Unit.ResponseExtensionsFixture.Should_be_able_to_chain_setting_single_headers()", span="139-139", cluster="Nancy.Tests.Unit.ResponseExtensionsFixture.Should_be_able_to_chain_setting_single_headers()"];
d1 [label="return IsJsonType(contentType);", span="18-18", cluster="Nancy.Responses.DefaultJsonSerializer.CanSerialize(string)", color=green, community=0];
d0 [label="Entry Nancy.Responses.DefaultJsonSerializer.CanSerialize(string)", span="16-16", cluster="Nancy.Responses.DefaultJsonSerializer.CanSerialize(string)"];
d2 [label="Exit Nancy.Responses.DefaultJsonSerializer.CanSerialize(string)", span="16-16", cluster="Nancy.Responses.DefaultJsonSerializer.CanSerialize(string)"];
d3 [label="Entry Nancy.Responses.DefaultJsonSerializer.IsJsonType(string)", span="59-59", cluster="Nancy.Responses.DefaultJsonSerializer.IsJsonType(string)"];
d19 [label="Exit Nancy.Responses.DefaultJsonSerializer.IsJsonType(string)", span="59-59", cluster="Nancy.Responses.DefaultJsonSerializer.IsJsonType(string)"];
d15 [label="string.IsNullOrEmpty(contentType)", span="61-61", cluster="Nancy.Responses.DefaultJsonSerializer.IsJsonType(string)"];
d17 [label="var contentMimeType = contentType.Split(';')[0]", span="66-66", cluster="Nancy.Responses.DefaultJsonSerializer.IsJsonType(string)"];
d16 [label="return false;", span="63-63", cluster="Nancy.Responses.DefaultJsonSerializer.IsJsonType(string)"];
d18 [label="return contentMimeType.Equals(''application/json'', StringComparison.InvariantCultureIgnoreCase) ||\r\n                   contentMimeType.Equals(''text/json'', StringComparison.InvariantCultureIgnoreCase) ||\r\n                  (contentMimeType.StartsWith(''application/vnd'', StringComparison.InvariantCultureIgnoreCase) &&\r\n                   contentMimeType.EndsWith(''+json'', StringComparison.InvariantCultureIgnoreCase));", span="68-71", cluster="Nancy.Responses.DefaultJsonSerializer.IsJsonType(string)"];
d20 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)"];
d21 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])"];
d22 [label="Entry string.Equals(string, System.StringComparison)", span="0-0", cluster="string.Equals(string, System.StringComparison)"];
d23 [label="Entry string.StartsWith(string, System.StringComparison)", span="0-0", cluster="string.StartsWith(string, System.StringComparison)"];
d24 [label="Entry string.EndsWith(string, System.StringComparison)", span="0-0", cluster="string.EndsWith(string, System.StringComparison)"];
m0_4 [label="Entry Nancy.Routing.Route.Invoke(Nancy.DynamicDictionary)", span="54-54", cluster="Nancy.Routing.Route.Invoke(Nancy.DynamicDictionary)", file="DefaultRouteInvoker.cs"];
m0_0 [label="Entry Nancy.Routing.DefaultRouteInvoker.Invoke(Nancy.Routing.Route, Nancy.DynamicDictionary, Nancy.NancyContext)", span="14-14", cluster="Nancy.Routing.DefaultRouteInvoker.Invoke(Nancy.Routing.Route, Nancy.DynamicDictionary, Nancy.NancyContext)", file="DefaultRouteInvoker.cs"];
m0_1 [label="var result =\r\n                route.Invoke(parameters)", span="16-17", cluster="Nancy.Routing.DefaultRouteInvoker.Invoke(Nancy.Routing.Route, Nancy.DynamicDictionary, Nancy.NancyContext)", file="DefaultRouteInvoker.cs"];
m0_2 [label="return result;", span="19-19", cluster="Nancy.Routing.DefaultRouteInvoker.Invoke(Nancy.Routing.Route, Nancy.DynamicDictionary, Nancy.NancyContext)", file="DefaultRouteInvoker.cs"];
m0_3 [label="Exit Nancy.Routing.DefaultRouteInvoker.Invoke(Nancy.Routing.Route, Nancy.DynamicDictionary, Nancy.NancyContext)", span="14-14", cluster="Nancy.Routing.DefaultRouteInvoker.Invoke(Nancy.Routing.Route, Nancy.DynamicDictionary, Nancy.NancyContext)", file="DefaultRouteInvoker.cs"];
m2_4 [label="Entry Nancy.Responses.DefaultXmlSerializer.Serialize<TModel>(string, TModel, System.IO.Stream)", span="25-25", cluster="Nancy.Responses.DefaultXmlSerializer.Serialize<TModel>(string, TModel, System.IO.Stream)", file="DefaultXmlSerializer.cs"];
m2_5 [label="var serializer = new XmlSerializer(typeof(TModel))", span="27-27", cluster="Nancy.Responses.DefaultXmlSerializer.Serialize<TModel>(string, TModel, System.IO.Stream)", file="DefaultXmlSerializer.cs"];
m2_6 [label="serializer.Serialize(outputStream, model)", span="28-28", cluster="Nancy.Responses.DefaultXmlSerializer.Serialize<TModel>(string, TModel, System.IO.Stream)", file="DefaultXmlSerializer.cs"];
m2_7 [label="Exit Nancy.Responses.DefaultXmlSerializer.Serialize<TModel>(string, TModel, System.IO.Stream)", span="25-25", cluster="Nancy.Responses.DefaultXmlSerializer.Serialize<TModel>(string, TModel, System.IO.Stream)", file="DefaultXmlSerializer.cs"];
m2_15 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="DefaultXmlSerializer.cs"];
m2_8 [label="Entry XmlSerializer.cstr", span="", cluster="XmlSerializer.cstr", file="DefaultXmlSerializer.cs"];
m2_3 [label="Entry Nancy.Responses.DefaultXmlSerializer.IsXmlType(string)", span="31-31", cluster="Nancy.Responses.DefaultXmlSerializer.IsXmlType(string)", file="DefaultXmlSerializer.cs"];
m2_10 [label="string.IsNullOrEmpty(contentType)", span="33-33", cluster="Nancy.Responses.DefaultXmlSerializer.IsXmlType(string)", file="DefaultXmlSerializer.cs"];
m2_12 [label="var contentMimeType = contentType.Split(';')[0]", span="38-38", cluster="Nancy.Responses.DefaultXmlSerializer.IsXmlType(string)", file="DefaultXmlSerializer.cs"];
m2_11 [label="return false;", span="35-35", cluster="Nancy.Responses.DefaultXmlSerializer.IsXmlType(string)", file="DefaultXmlSerializer.cs"];
m2_13 [label="return contentMimeType.Equals(''application/xml'', StringComparison.InvariantCultureIgnoreCase) ||\r\n                   contentMimeType.Equals(''text/xml'', StringComparison.InvariantCultureIgnoreCase) ||\r\n                  (contentMimeType.StartsWith(''application/vnd'', StringComparison.InvariantCultureIgnoreCase) &&\r\n                   contentMimeType.EndsWith(''+xml'', StringComparison.InvariantCultureIgnoreCase));", span="40-43", cluster="Nancy.Responses.DefaultXmlSerializer.IsXmlType(string)", file="DefaultXmlSerializer.cs"];
m2_14 [label="Exit Nancy.Responses.DefaultXmlSerializer.IsXmlType(string)", span="31-31", cluster="Nancy.Responses.DefaultXmlSerializer.IsXmlType(string)", file="DefaultXmlSerializer.cs"];
m2_19 [label="Entry string.EndsWith(string, System.StringComparison)", span="0-0", cluster="string.EndsWith(string, System.StringComparison)", file="DefaultXmlSerializer.cs"];
m2_17 [label="Entry string.Equals(string, System.StringComparison)", span="0-0", cluster="string.Equals(string, System.StringComparison)", file="DefaultXmlSerializer.cs"];
m2_9 [label="Entry Unk.Serialize", span="", cluster="Unk.Serialize", file="DefaultXmlSerializer.cs"];
m2_0 [label="Entry Nancy.Responses.DefaultXmlSerializer.CanSerialize(string)", span="13-13", cluster="Nancy.Responses.DefaultXmlSerializer.CanSerialize(string)", file="DefaultXmlSerializer.cs"];
m2_1 [label="return IsXmlType(contentType);", span="16-16", cluster="Nancy.Responses.DefaultXmlSerializer.CanSerialize(string)", color=green, community=0, file="DefaultXmlSerializer.cs"];
m2_2 [label="Exit Nancy.Responses.DefaultXmlSerializer.CanSerialize(string)", span="13-13", cluster="Nancy.Responses.DefaultXmlSerializer.CanSerialize(string)", file="DefaultXmlSerializer.cs"];
m2_18 [label="Entry string.StartsWith(string, System.StringComparison)", span="0-0", cluster="string.StartsWith(string, System.StringComparison)", file="DefaultXmlSerializer.cs"];
m2_20 [label="Nancy.Responses.DefaultXmlSerializer", span="", file="DefaultXmlSerializer.cs"];
m3_8 [label="Entry lambda expression", span="17-20", cluster="lambda expression", file="FakeRoute.cs"];
m3_10 [label="return response;", span="19-19", cluster="lambda expression", file="FakeRoute.cs", color=green, community=0];
m3_5 [label="Entry lambda expression", span="15-15", cluster="lambda expression", file="FakeRoute.cs"];
m3_6 [label=response, span="15-15", cluster="lambda expression", file="FakeRoute.cs"];
m3_7 [label="Exit lambda expression", span="15-15", cluster="lambda expression", file="FakeRoute.cs"];
m3_9 [label="this.ActionWasInvoked = true", span="18-18", cluster="lambda expression", file="FakeRoute.cs"];
m3_11 [label="Exit lambda expression", span="17-20", cluster="lambda expression", file="FakeRoute.cs"];
m3_0 [label="Entry Nancy.Tests.Fakes.FakeRoute.FakeRoute()", span="8-8", cluster="Nancy.Tests.Fakes.FakeRoute.FakeRoute()", file="FakeRoute.cs"];
m3_1 [label="Exit Nancy.Tests.Fakes.FakeRoute.FakeRoute()", span="8-8", cluster="Nancy.Tests.Fakes.FakeRoute.FakeRoute()", file="FakeRoute.cs"];
m3_2 [label="Entry Nancy.Tests.Fakes.FakeRoute.FakeRoute(Nancy.Response)", span="14-14", cluster="Nancy.Tests.Fakes.FakeRoute.FakeRoute(Nancy.Response)", file="FakeRoute.cs"];
m3_3 [label="this.Action = x => {\r\n                this.ActionWasInvoked = true;\r\n                return response;\r\n            }", span="17-20", cluster="Nancy.Tests.Fakes.FakeRoute.FakeRoute(Nancy.Response)", file="FakeRoute.cs", color=green, community=0];
m3_4 [label="Exit Nancy.Tests.Fakes.FakeRoute.FakeRoute(Nancy.Response)", span="14-14", cluster="Nancy.Tests.Fakes.FakeRoute.FakeRoute(Nancy.Response)", file="FakeRoute.cs"];
m3_12 [label="Nancy.Tests.Fakes.FakeRoute", span="", file="FakeRoute.cs"];
m3_13 [label="Nancy.Response", span="", file="FakeRoute.cs"];
m4_0 [label="Entry Nancy.ISerializer.CanSerialize(string)", span="11-11", cluster="Nancy.ISerializer.CanSerialize(string)", file="ISerializer.cs"];
m4_1 [label="Exit Nancy.ISerializer.CanSerialize(string)", span="11-11", cluster="Nancy.ISerializer.CanSerialize(string)", file="ISerializer.cs"];
m4_2 [label="Entry Nancy.ISerializer.Serialize<TModel>(string, TModel, System.IO.Stream)", span="20-20", cluster="Nancy.ISerializer.Serialize<TModel>(string, TModel, System.IO.Stream)", file="ISerializer.cs"];
m4_3 [label="Exit Nancy.ISerializer.Serialize<TModel>(string, TModel, System.IO.Stream)", span="20-20", cluster="Nancy.ISerializer.Serialize<TModel>(string, TModel, System.IO.Stream)", file="ISerializer.cs"];
m5_9 [label="Entry Nancy.Routing.Route.Invoke(Nancy.DynamicDictionary)", span="54-54", cluster="Nancy.Routing.Route.Invoke(Nancy.DynamicDictionary)", file="Route.cs"];
m5_10 [label="return this.Action.Invoke(parameters);", span="56-56", cluster="Nancy.Routing.Route.Invoke(Nancy.DynamicDictionary)", file="Route.cs"];
m5_11 [label="Exit Nancy.Routing.Route.Invoke(Nancy.DynamicDictionary)", span="54-54", cluster="Nancy.Routing.Route.Invoke(Nancy.DynamicDictionary)", file="Route.cs"];
m5_6 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Route.cs"];
m5_12 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="Route.cs"];
m5_0 [label="Entry Nancy.Routing.Route.Route(Nancy.Routing.RouteDescription, System.Func<dynamic, dynamic>)", span="14-14", cluster="Nancy.Routing.Route.Route(Nancy.Routing.RouteDescription, System.Func<dynamic, dynamic>)", file="Route.cs"];
m5_1 [label="action == null", span="16-16", cluster="Nancy.Routing.Route.Route(Nancy.Routing.RouteDescription, System.Func<dynamic, dynamic>)", file="Route.cs"];
m5_3 [label="this.Description = description", span="21-21", cluster="Nancy.Routing.Route.Route(Nancy.Routing.RouteDescription, System.Func<dynamic, dynamic>)", file="Route.cs"];
m5_4 [label="this.Action = action", span="22-22", cluster="Nancy.Routing.Route.Route(Nancy.Routing.RouteDescription, System.Func<dynamic, dynamic>)", file="Route.cs"];
m5_2 [label="throw new ArgumentNullException(''action'');", span="18-18", cluster="Nancy.Routing.Route.Route(Nancy.Routing.RouteDescription, System.Func<dynamic, dynamic>)", file="Route.cs"];
m5_5 [label="Exit Nancy.Routing.Route.Route(Nancy.Routing.RouteDescription, System.Func<dynamic, dynamic>)", span="14-14", cluster="Nancy.Routing.Route.Route(Nancy.Routing.RouteDescription, System.Func<dynamic, dynamic>)", file="Route.cs"];
m5_7 [label="Entry Nancy.Routing.Route.Route(string, string, System.Func<Nancy.NancyContext, bool>, System.Func<dynamic, dynamic>)", span="32-32", cluster="Nancy.Routing.Route.Route(string, string, System.Func<Nancy.NancyContext, bool>, System.Func<dynamic, dynamic>)", file="Route.cs"];
m5_8 [label="Exit Nancy.Routing.Route.Route(string, string, System.Func<Nancy.NancyContext, bool>, System.Func<dynamic, dynamic>)", span="32-32", cluster="Nancy.Routing.Route.Route(string, string, System.Func<Nancy.NancyContext, bool>, System.Func<dynamic, dynamic>)", file="Route.cs"];
m5_13 [label="Nancy.Routing.Route", span="", file="Route.cs"];
n95 -> n25  [key=1, style=dashed, color=darkseagreen4, label=response];
n96 -> n28  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.ResponseExtensionsFixture"];
n96 -> n30  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.ResponseExtensionsFixture"];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid, color=red];
n1 -> n6  [key=2, style=dotted];
n2 -> n3  [key=0, style=solid, color=red];
n2 -> n7  [key=2, style=dotted, color=red];
n2 -> n4  [key=1, style=dashed, color=red, label=result];
n3 -> n4  [key=0, style=solid];
n3 -> n8  [key=2, style=dotted];
n4 -> n5  [key=0, style=solid];
n4 -> n9  [key=2, style=dotted];
n4 -> n10  [key=2, style=dotted];
n5 -> n0  [key=0, style=bold, color=blue];
n11 -> n12  [key=0, style=solid];
n12 -> n13  [key=0, style=solid];
n12 -> n6  [key=2, style=dotted];
n13 -> n14  [key=0, style=solid];
n13 -> n7  [key=2, style=dotted];
n14 -> n15  [key=0, style=solid];
n14 -> n16  [key=2, style=dotted];
n15 -> n11  [key=0, style=bold, color=blue];
n17 -> n18  [key=0, style=solid];
n18 -> n19  [key=0, style=solid];
n18 -> n6  [key=2, style=dotted];
n18 -> n25  [key=1, style=dashed, color=darkseagreen4, label=response];
n19 -> n20  [key=0, style=solid];
n19 -> n22  [key=2, style=dotted];
n19 -> n24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n25 -> n26  [key=0, style=solid];
n25 -> n7  [key=2, style=dotted];
n20 -> n21  [key=0, style=solid];
n20 -> n23  [key=2, style=dotted];
n24 -> n25  [key=0, style=solid];
n21 -> n17  [key=0, style=bold, color=blue];
n26 -> n24  [key=0, style=bold, color=blue];
n27 -> n28  [key=0, style=solid];
n28 -> n29  [key=0, style=solid];
n28 -> n36  [key=2, style=dotted];
n28 -> n37  [key=2, style=dotted];
n29 -> n30  [key=0, style=solid];
n30 -> n31  [key=0, style=solid];
n30 -> n36  [key=2, style=dotted];
n30 -> n38  [key=2, style=dotted];
n30 -> n33  [key=1, style=dashed, color=darkseagreen4, label=filename];
n31 -> n32  [key=0, style=solid];
n31 -> n39  [key=2, style=dotted];
n33 -> n34  [key=0, style=solid];
n33 -> n16  [key=2, style=dotted];
n32 -> n33  [key=0, style=solid];
n32 -> n7  [key=2, style=dotted];
n32 -> n34  [key=1, style=dashed, color=darkseagreen4, label=result];
n34 -> n35  [key=0, style=solid];
n34 -> n40  [key=2, style=dotted];
n35 -> n27  [key=0, style=bold, color=blue];
n41 -> n42  [key=0, style=solid];
n42 -> n43  [key=0, style=solid];
n42 -> n6  [key=2, style=dotted];
n42 -> n44  [key=1, style=dashed, color=darkseagreen4, label=response];
n43 -> n44  [key=0, style=solid];
n44 -> n45  [key=0, style=solid];
n44 -> n7  [key=2, style=dotted];
n45 -> n46  [key=0, style=solid];
n45 -> n40  [key=2, style=dotted];
n46 -> n41  [key=0, style=bold, color=blue];
n47 -> n48  [key=0, style=solid];
n48 -> n49  [key=0, style=solid];
n48 -> n6  [key=2, style=dotted];
n48 -> n50  [key=1, style=dashed, color=darkseagreen4, label=response];
n49 -> n50  [key=0, style=solid];
n50 -> n51  [key=0, style=solid];
n50 -> n7  [key=2, style=dotted];
n51 -> n52  [key=0, style=solid];
n51 -> n40  [key=2, style=dotted];
n52 -> n47  [key=0, style=bold, color=blue];
n53 -> n54  [key=0, style=solid];
n54 -> n55  [key=0, style=solid];
n54 -> n6  [key=2, style=dotted];
n54 -> n56  [key=1, style=dashed, color=darkseagreen4, label=response];
n55 -> n56  [key=0, style=solid];
n56 -> n57  [key=0, style=solid];
n56 -> n60  [key=2, style=dotted];
n56 -> n61  [key=2, style=dotted];
n56 -> n58  [key=1, style=dashed, color=darkseagreen4, label=result];
n57 -> n58  [key=0, style=solid];
n57 -> n8  [key=2, style=dotted];
n58 -> n59  [key=0, style=solid];
n58 -> n40  [key=2, style=dotted];
n59 -> n53  [key=0, style=bold, color=blue];
n62 -> n63  [key=0, style=solid];
n63 -> n64  [key=0, style=solid];
n63 -> n6  [key=2, style=dotted];
n63 -> n65  [key=1, style=dashed, color=darkseagreen4, label=response];
n63 -> n66  [key=1, style=dashed, color=darkseagreen4, label=response];
n64 -> n65  [key=0, style=solid];
n64 -> n70  [key=2, style=dotted];
n65 -> n66  [key=0, style=solid];
n65 -> n71  [key=2, style=dotted];
n66 -> n67  [key=0, style=solid];
n66 -> n60  [key=2, style=dotted];
n66 -> n61  [key=2, style=dotted];
n66 -> n68  [key=1, style=dashed, color=darkseagreen4, label=result];
n67 -> n68  [key=0, style=solid];
n67 -> n8  [key=2, style=dotted];
n68 -> n69  [key=0, style=solid];
n68 -> n40  [key=2, style=dotted];
n69 -> n62  [key=0, style=bold, color=blue];
n72 -> n73  [key=0, style=solid];
n73 -> n74  [key=0, style=solid];
n73 -> n6  [key=2, style=dotted];
n74 -> n75  [key=0, style=solid];
n74 -> n60  [key=2, style=dotted];
n74 -> n61  [key=2, style=dotted];
n74 -> n76  [key=1, style=dashed, color=darkseagreen4, label=result];
n74 -> n77  [key=1, style=dashed, color=darkseagreen4, label=result];
n75 -> n76  [key=0, style=solid];
n75 -> n8  [key=2, style=dotted];
n76 -> n77  [key=0, style=solid];
n76 -> n40  [key=2, style=dotted];
n77 -> n78  [key=0, style=solid];
n77 -> n40  [key=2, style=dotted];
n78 -> n72  [key=0, style=bold, color=blue];
n79 -> n80  [key=0, style=solid];
n80 -> n81  [key=0, style=solid];
n80 -> n6  [key=2, style=dotted];
n81 -> n82  [key=0, style=solid];
n81 -> n86  [key=2, style=dotted];
n81 -> n83  [key=1, style=dashed, color=darkseagreen4, label=result];
n81 -> n84  [key=1, style=dashed, color=darkseagreen4, label=result];
n82 -> n83  [key=0, style=solid];
n82 -> n8  [key=2, style=dotted];
n83 -> n84  [key=0, style=solid];
n83 -> n40  [key=2, style=dotted];
n84 -> n85  [key=0, style=solid];
n84 -> n40  [key=2, style=dotted];
n85 -> n79  [key=0, style=bold, color=blue];
n87 -> n88  [key=0, style=solid];
n88 -> n89  [key=0, style=solid];
n88 -> n6  [key=2, style=dotted];
n89 -> n90  [key=0, style=solid];
n89 -> n94  [key=2, style=dotted];
n89 -> n91  [key=1, style=dashed, color=darkseagreen4, label=result];
n89 -> n92  [key=1, style=dashed, color=darkseagreen4, label=result];
n90 -> n91  [key=0, style=solid];
n90 -> n8  [key=2, style=dotted];
n91 -> n92  [key=0, style=solid];
n91 -> n40  [key=2, style=dotted];
n92 -> n93  [key=0, style=solid];
n92 -> n40  [key=2, style=dotted];
n93 -> n87  [key=0, style=bold, color=blue];
d1 -> d2  [key=0, style=solid, color=green];
d1 -> d3  [key=2, style=dotted, color=green];
d0 -> d1  [key=0, style=solid, color=green];
d0 -> d3  [key=3, color=darkorchid, style=bold, label="method methodReturn bool CanSerialize"];
d2 -> d0  [key=0, style=bold, color=blue];
d3 -> d0  [key=3, color=darkorchid, style=bold, label="Parameter variable string contentType"];
d3 -> d15  [key=0, style=solid];
d3 -> d17  [key=1, style=dashed, color=darkseagreen4, label=string];
d3 -> d16  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsJsonType"];
d19 -> d3  [key=0, style=bold, color=blue];
d15 -> d16  [key=0, style=solid];
d15 -> d17  [key=0, style=solid];
d15 -> d20  [key=2, style=dotted];
d17 -> d18  [key=0, style=solid];
d17 -> d21  [key=2, style=dotted];
d16 -> d19  [key=0, style=solid];
d18 -> d19  [key=0, style=solid];
d18 -> d22  [key=2, style=dotted];
d18 -> d23  [key=2, style=dotted];
d18 -> d24  [key=2, style=dotted];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_4  [key=2, style=dotted];
m0_2 -> m0_3  [key=0, style=solid];
m0_3 -> m0_0  [key=0, style=bold, color=blue];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_6  [key=1, style=dashed, color=darkseagreen4, label=TModel];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_8  [key=2, style=dotted];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_9  [key=2, style=dotted];
m2_7 -> m2_4  [key=0, style=bold, color=blue];
m2_3 -> m2_10  [key=0, style=solid];
m2_3 -> m2_12  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_3 -> m2_0  [key=3, color=darkorchid, style=bold, label="Parameter variable string contentType"];
m2_3 -> m2_11  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsXmlType"];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_12  [key=0, style=solid];
m2_10 -> m2_15  [key=2, style=dotted];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> d21  [key=2, style=dotted];
m2_11 -> m2_14  [key=0, style=solid];
m2_13 -> m2_14  [key=0, style=solid];
m2_13 -> m2_17  [key=2, style=dotted];
m2_13 -> m2_18  [key=2, style=dotted];
m2_13 -> m2_19  [key=2, style=dotted];
m2_14 -> m2_3  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid, color=green];
m2_0 -> m2_3  [key=3, color=darkorchid, style=bold, label="method methodReturn bool CanSerialize"];
m2_1 -> m2_2  [key=0, style=solid, color=green];
m2_1 -> m2_3  [key=2, style=dotted, color=green];
m2_2 -> m2_0  [key=0, style=bold, color=blue];
m2_20 -> m2_1  [key=1, style=dashed, color=red, label="Nancy.Responses.DefaultXmlSerializer"];
m3_8 -> m3_9  [key=0, style=solid];
m3_10 -> m3_11  [key=0, style=solid, color=green];
m3_5 -> m3_6  [key=0, style=solid];
m3_6 -> m3_7  [key=0, style=solid];
m3_7 -> m3_5  [key=0, style=bold, color=blue];
m3_9 -> m3_10  [key=0, style=solid, color=green];
m3_11 -> m3_8  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_0  [key=0, style=bold, color=blue];
m3_2 -> m3_3  [key=0, style=solid, color=green];
m3_2 -> m3_10  [key=1, style=dashed, color=green, label="Nancy.Response"];
m3_3 -> m3_4  [key=0, style=solid, color=green];
m3_3 -> m3_2  [key=3, color=green, style=bold, label="method methodReturn dynamic "];
m3_4 -> m3_2  [key=0, style=bold, color=blue];
m3_12 -> m3_3  [key=1, style=dashed, color=green, label="Nancy.Tests.Fakes.FakeRoute"];
m3_12 -> m3_9  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Fakes.FakeRoute"];
m3_13 -> m3_6  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Response"];
m3_13 -> m3_10  [key=1, style=dashed, color=green, label="Nancy.Response"];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_0  [key=0, style=bold, color=blue];
m4_2 -> m4_3  [key=0, style=solid];
m4_3 -> m4_2  [key=0, style=bold, color=blue];
m5_9 -> m5_10  [key=0, style=solid];
m5_10 -> m5_11  [key=0, style=solid];
m5_10 -> m5_12  [key=2, style=dotted];
m5_11 -> m5_9  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid];
m5_0 -> m5_3  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Routing.RouteDescription"];
m5_0 -> m5_4  [key=1, style=dashed, color=darkseagreen4, label="System.Func<dynamic, dynamic>"];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_3  [key=0, style=solid];
m5_3 -> m5_4  [key=0, style=solid];
m5_4 -> m5_5  [key=0, style=solid];
m5_2 -> m5_5  [key=0, style=solid];
m5_2 -> m5_6  [key=2, style=dotted];
m5_5 -> m5_0  [key=0, style=bold, color=blue];
m5_7 -> m5_8  [key=0, style=solid];
m5_8 -> m5_7  [key=0, style=bold, color=blue];
m5_13 -> m5_3  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Routing.Route"];
m5_13 -> m5_4  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Routing.Route"];
m5_13 -> m5_10  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Routing.Route"];
}
