digraph  {
n0 [cluster="Nancy.ViewEngines.DotLiquid.Tests.Functional.RootPathProvider.GetRootPath()", label="Entry Nancy.ViewEngines.DotLiquid.Tests.Functional.RootPathProvider.GetRootPath()", span="10-10"];
n1 [cluster="Nancy.ViewEngines.DotLiquid.Tests.Functional.RootPathProvider.GetRootPath()", color=red, community=0, label="4: var assemblyPath =\r\n                System.IO.Path.GetDirectoryName(typeof(RootPathProvider).Assembly.CodeBase).Replace(@''file:\'', string.Empty)", span="12-13"];
n2 [cluster="Nancy.ViewEngines.DotLiquid.Tests.Functional.RootPathProvider.GetRootPath()", label="return PathHelper.GetParent(assemblyPath, 2);", span="15-15"];
n4 [cluster="System.IO.Path.GetDirectoryName(string)", label="Entry System.IO.Path.GetDirectoryName(string)", span="0-0"];
n5 [cluster="string.Replace(string, string)", label="Entry string.Replace(string, string)", span="0-0"];
n3 [cluster="Nancy.ViewEngines.DotLiquid.Tests.Functional.RootPathProvider.GetRootPath()", label="Exit Nancy.ViewEngines.DotLiquid.Tests.Functional.RootPathProvider.GetRootPath()", span="10-10"];
n6 [cluster="Nancy.Testing.PathHelper.GetParent(string, int)", label="Entry Nancy.Testing.PathHelper.GetParent(string, int)", span="14-14"];
d1 [cluster="Nancy.ViewEngines.DotLiquid.Tests.Functional.RootPathProvider.GetRootPath()", color=green, community=0, label="5: var assemblyFilePath =\r\n                new Uri(typeof (RootPathProvider).Assembly.CodeBase).LocalPath", span="13-14"];
d2 [cluster="Nancy.ViewEngines.DotLiquid.Tests.Functional.RootPathProvider.GetRootPath()", color=green, community=0, label="1: var assemblyPath =\r\n                System.IO.Path.GetDirectoryName(assemblyFilePath)", span="16-17"];
d5 [cluster="System.Uri.Uri(string)", label="Entry System.Uri.Uri(string)", span="0-0"];
n0 -> n1  [color=red, key=0, style=solid];
n0 -> d1  [color=green, key=0, style=solid];
n1 -> n2  [color=red, key=0, style=solid];
n1 -> n4  [color=red, key=2, style=dotted];
n1 -> n5  [color=red, key=2, style=dotted];
n2 -> n3  [key=0, style=solid];
n2 -> n6  [key=2, style=dotted];
n3 -> n0  [color=blue, key=0, style=bold];
d1 -> d2  [color=green, key=0, style=solid];
d1 -> d5  [color=green, key=2, style=dotted];
d2 -> n2  [color=green, key=0, style=solid];
d2 -> n4  [color=green, key=2, style=dotted];
}
