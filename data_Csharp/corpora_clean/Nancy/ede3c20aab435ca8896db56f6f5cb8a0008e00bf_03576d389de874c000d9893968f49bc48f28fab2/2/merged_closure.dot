digraph  {
n427 [label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture", span=""];
n428 [label=hooks, span=""];
n429 [label=hooks, span=""];
n430 [label=hooks, span=""];
n431 [label=fakeFormatter, span=""];
n432 [label=fakeFormatter, span=""];
n433 [label=hooks, span=""];
n434 [label=fakeFormatter, span=""];
n435 [label=storeConfig, span=""];
n436 [label=storeConfig, span=""];
n437 [label=storeConfig, span=""];
n0 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CookieBasedSessionsFixture()", label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CookieBasedSessionsFixture()", span="32-32"];
n1 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CookieBasedSessionsFixture()", label="this.fakeEncryptionProvider = A.Fake<IEncryptionProvider>()", span="34-34"];
n2 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CookieBasedSessionsFixture()", label="this.fakeHmacProvider = A.Fake<IHmacProvider>()", span="35-35"];
n9 [cluster="Unk.>", label="Entry Unk.>", span=""];
n3 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CookieBasedSessionsFixture()", label="this.fakeObjectSerializer = new FakeObjectSerializer()", span="36-36"];
n4 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CookieBasedSessionsFixture()", label="this.cookieStore = new CookieBasedSessions(this.fakeEncryptionProvider, this.fakeHmacProvider, this.fakeObjectSerializer)", span="37-37"];
n10 [cluster="Nancy.Tests.Fakes.FakeObjectSerializer.FakeObjectSerializer()", label="Entry Nancy.Tests.Fakes.FakeObjectSerializer.FakeObjectSerializer()", span="2-2"];
n5 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CookieBasedSessionsFixture()", label="this.aesEncryptionProvider = new AesEncryptionProvider(new PassphraseKeyGenerator(''password'', new byte[] { 1, 2, 3, 4, 5, 6, 7, 8 }, 1000))", span="39-39"];
n11 [cluster="Nancy.Session.CookieBasedSessions.CookieBasedSessions(Nancy.Cryptography.IEncryptionProvider, Nancy.Cryptography.IHmacProvider, Nancy.IObjectSerializer)", label="Entry Nancy.Session.CookieBasedSessions.CookieBasedSessions(Nancy.Cryptography.IEncryptionProvider, Nancy.Cryptography.IHmacProvider, Nancy.IObjectSerializer)", span="34-34"];
n6 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CookieBasedSessionsFixture()", label="this.defaultHmacProvider = new DefaultHmacProvider(new PassphraseKeyGenerator(''anotherpassword'', new byte[] { 1, 2, 3, 4, 5, 6, 7, 8 }, 1000))", span="40-40"];
n12 [cluster="Nancy.Cryptography.AesEncryptionProvider.AesEncryptionProvider(Nancy.Cryptography.IKeyGenerator)", label="Entry Nancy.Cryptography.AesEncryptionProvider.AesEncryptionProvider(Nancy.Cryptography.IKeyGenerator)", span="19-19"];
n13 [cluster="Nancy.Cryptography.PassphraseKeyGenerator.PassphraseKeyGenerator(string, byte[], int)", label="Entry Nancy.Cryptography.PassphraseKeyGenerator.PassphraseKeyGenerator(string, byte[], int)", span="23-23"];
n7 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CookieBasedSessionsFixture()", label="this.defaultObjectSerializer = new DefaultObjectSerializer()", span="41-41"];
n14 [cluster="Nancy.Cryptography.DefaultHmacProvider.DefaultHmacProvider(Nancy.Cryptography.IKeyGenerator)", label="Entry Nancy.Cryptography.DefaultHmacProvider.DefaultHmacProvider(Nancy.Cryptography.IKeyGenerator)", span="29-29"];
n8 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CookieBasedSessionsFixture()", label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CookieBasedSessionsFixture()", span="32-32"];
n15 [cluster="Nancy.DefaultObjectSerializer.DefaultObjectSerializer()", label="Entry Nancy.DefaultObjectSerializer.DefaultObjectSerializer()", span="12-12"];
n16 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_nothing_if_the_session_is_null()", label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_nothing_if_the_session_is_null()", span="45-45"];
n17 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_nothing_if_the_session_is_null()", label="var response = new Response()", span="47-47"];
n18 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_nothing_if_the_session_is_null()", label="cookieStore.Save(null, response)", span="49-49"];
n21 [cluster="Nancy.Response.Response()", label="Entry Nancy.Response.Response()", span="29-29"];
n19 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_nothing_if_the_session_is_null()", label="response.Cookies.Count.ShouldEqual(0)", span="51-51"];
n22 [cluster="Nancy.Session.CookieBasedSessions.Save(Nancy.Session.ISession, Nancy.Response)", label="Entry Nancy.Session.CookieBasedSessions.Save(Nancy.Session.ISession, Nancy.Response)", span="124-124"];
n20 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_nothing_if_the_session_is_null()", label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_nothing_if_the_session_is_null()", span="45-45"];
n23 [cluster="object.ShouldEqual(object)", label="Entry object.ShouldEqual(object)", span="106-106"];
n24 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_nothing_if_the_session_has_not_changed()", label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_nothing_if_the_session_has_not_changed()", span="55-55"];
n25 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_nothing_if_the_session_has_not_changed()", label="var response = new Response()", span="57-57"];
n26 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_nothing_if_the_session_has_not_changed()", label="cookieStore.Save(new Session(new Dictionary<string, object> { { ''key'', ''value'' } }), response)", span="59-59"];
n27 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_nothing_if_the_session_has_not_changed()", label="response.Cookies.Count.ShouldEqual(0)", span="61-61"];
n29 [cluster="Nancy.Session.Session.Session(System.Collections.Generic.IDictionary<string, object>)", label="Entry Nancy.Session.Session.Session(System.Collections.Generic.IDictionary<string, object>)", span="24-24"];
n30 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
n28 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_nothing_if_the_session_has_not_changed()", label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_nothing_if_the_session_has_not_changed()", span="55-55"];
n31 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_the_session_cookie()", label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_the_session_cookie()", span="65-65"];
n32 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_the_session_cookie()", label="var response = new Response()", span="67-67"];
n33 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_the_session_cookie()", label="var session = new Session(new Dictionary<string, object>\r\n                                      {\r\n                                          {''key1'', ''val1''},\r\n                                      })", span="68-71"];
n36 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_the_session_cookie()", label="cookieStore.Save(session, response)", span="75-75"];
n37 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_the_session_cookie()", label="response.Cookies.Count.ShouldEqual(1)", span="77-77"];
n38 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_the_session_cookie()", label="var cookie = response.Cookies.First()", span="78-78"];
n34 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_the_session_cookie()", label="session[''key2''] = ''val2''", span="72-72"];
n35 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_the_session_cookie()", label="A.CallTo(() => this.fakeEncryptionProvider.Encrypt(''key1=val1;key2=val2;'')).Returns(''encrypted=key1=val1;key2=val2;'')", span="73-73"];
n45 [cluster="Unk.CallTo", label="Entry Unk.CallTo", span=""];
n46 [cluster="Unk.Returns", label="Entry Unk.Returns", span=""];
n49 [cluster="lambda expression", label="Entry lambda expression", span="73-73"];
n39 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_the_session_cookie()", label="cookie.Name.ShouldEqual(this.cookieStore.CookieName)", span="79-79"];
n47 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
n40 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_the_session_cookie()", label="cookie.Value.ShouldEqual(''encrypted%3dkey1%3dval1%3bkey2%3dval2%3b'')", span="80-80"];
n41 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_the_session_cookie()", label="cookie.Expires.ShouldBeNull()", span="81-81"];
n42 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_the_session_cookie()", label="cookie.Path.ShouldBeNull()", span="82-82"];
n43 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_the_session_cookie()", label="cookie.Domain.ShouldBeNull()", span="83-83"];
n48 [cluster="object.ShouldBeNull()", label="Entry object.ShouldBeNull()", span="146-146"];
n44 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_the_session_cookie()", label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_the_session_cookie()", span="65-65"];
n50 [cluster="lambda expression", label="this.fakeEncryptionProvider.Encrypt(''key1=val1;key2=val2;'')", span="73-73"];
n51 [cluster="lambda expression", label="Exit lambda expression", span="73-73"];
n52 [cluster="Nancy.Cryptography.IEncryptionProvider.Encrypt(string)", label="Entry Nancy.Cryptography.IEncryptionProvider.Encrypt(string)", span="12-12"];
n53 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_cookie_as_http_only()", label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_cookie_as_http_only()", span="87-87"];
n54 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_cookie_as_http_only()", label="var response = new Response()", span="89-89"];
n55 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_cookie_as_http_only()", label="var session = new Session()", span="90-90"];
n58 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_cookie_as_http_only()", label="cookieStore.Save(session, response)", span="94-94"];
n59 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_cookie_as_http_only()", label="response.Cookies.First().HttpOnly.ShouldEqual(true)", span="96-96"];
n56 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_cookie_as_http_only()", label="session[''key 1''] = ''val=1''", span="91-91"];
n61 [cluster="Nancy.Session.Session.Session()", label="Entry Nancy.Session.Session.Session()", span="17-17"];
n57 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_cookie_as_http_only()", label="A.CallTo(() => this.fakeEncryptionProvider.Encrypt(''key+1=val%3d1;'')).Returns(''encryptedkey+1=val%3d1;'')", span="92-92"];
n62 [cluster="lambda expression", label="Entry lambda expression", span="92-92"];
n60 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_cookie_as_http_only()", label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_cookie_as_http_only()", span="87-87"];
n63 [cluster="lambda expression", label="this.fakeEncryptionProvider.Encrypt(''key+1=val%3d1;'')", span="92-92"];
n64 [cluster="lambda expression", label="Exit lambda expression", span="92-92"];
n65 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_saves_url_safe_keys_and_values()", label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_saves_url_safe_keys_and_values()", span="100-100"];
n66 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_saves_url_safe_keys_and_values()", label="var response = new Response()", span="102-102"];
n67 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_saves_url_safe_keys_and_values()", label="var session = new Session()", span="103-103"];
n70 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_saves_url_safe_keys_and_values()", label="cookieStore.Save(session, response)", span="107-107"];
n71 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_saves_url_safe_keys_and_values()", label="response.Cookies.First().Value.ShouldEqual(''encryptedkey%2b1%3dval%253d1%3b'')", span="109-109"];
n68 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_saves_url_safe_keys_and_values()", label="session[''key 1''] = ''val=1''", span="104-104"];
n69 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_saves_url_safe_keys_and_values()", label="A.CallTo(() => this.fakeEncryptionProvider.Encrypt(''key+1=val%3d1;'')).Returns(''encryptedkey+1=val%3d1;'')", span="105-105"];
n73 [cluster="lambda expression", label="Entry lambda expression", span="105-105"];
n72 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_saves_url_safe_keys_and_values()", label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_saves_url_safe_keys_and_values()", span="100-100"];
n74 [cluster="lambda expression", label="this.fakeEncryptionProvider.Encrypt(''key+1=val%3d1;'')", span="105-105"];
n75 [cluster="lambda expression", label="Exit lambda expression", span="105-105"];
n76 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_an_empty_session_if_no_session_cookie_exists()", label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_an_empty_session_if_no_session_cookie_exists()", span="113-113"];
n77 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_an_empty_session_if_no_session_cookie_exists()", label="var request = CreateRequest(null)", span="115-115"];
n78 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_an_empty_session_if_no_session_cookie_exists()", label="var result = cookieStore.Load(request)", span="117-117"];
n81 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CreateRequest(string, bool)", label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CreateRequest(string, bool)", span="494-494"];
n79 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_an_empty_session_if_no_session_cookie_exists()", label="result.Count.ShouldEqual(0)", span="119-119"];
n82 [cluster="Nancy.Session.CookieBasedSessions.Load(Nancy.Request)", label="Entry Nancy.Session.CookieBasedSessions.Load(Nancy.Request)", span="161-161"];
n80 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_an_empty_session_if_no_session_cookie_exists()", label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_an_empty_session_if_no_session_cookie_exists()", span="113-113"];
n83 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_an_empty_session_if_session_cookie_is_invalid()", label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_an_empty_session_if_session_cookie_is_invalid()", span="123-123"];
n92 [cluster="string.Substring(int, int)", label="Entry string.Substring(int, int)", span="0-0"];
n93 [cluster="Nancy.Helpers.HttpUtility.UrlEncode(string)", label="Entry Nancy.Helpers.HttpUtility.UrlEncode(string)", span="384-384"];
n94 [cluster="Nancy.Request.Request(string, string, string)", label="Entry Nancy.Request.Request(string, string, string)", span="33-33"];
n95 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
n91 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_an_empty_session_if_session_cookie_is_invalid()", label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_an_empty_session_if_session_cookie_is_invalid()", span="123-123"];
n96 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_a_single_valued_session()", label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_a_single_valued_session()", span="140-140"];
n97 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_a_single_valued_session()", label="var request = CreateRequest(''encryptedkey1=value1'')", span="142-142"];
n98 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_a_single_valued_session()", label="A.CallTo(() => this.fakeEncryptionProvider.Decrypt(''encryptedkey1=value1'')).Returns(''key1=value1;'')", span="143-143"];
n99 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_a_single_valued_session()", label="var session = cookieStore.Load(request)", span="145-145"];
n103 [cluster="lambda expression", label="Entry lambda expression", span="143-143"];
n100 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_a_single_valued_session()", label="session.Count.ShouldEqual(1)", span="147-147"];
n101 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_a_single_valued_session()", label="session[''key1''].ShouldEqual(''value1'')", span="148-148"];
n102 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_a_single_valued_session()", label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_a_single_valued_session()", span="140-140"];
n104 [cluster="lambda expression", label="this.fakeEncryptionProvider.Decrypt(''encryptedkey1=value1'')", span="143-143"];
n105 [cluster="lambda expression", label="Exit lambda expression", span="143-143"];
n106 [cluster="Nancy.Cryptography.IEncryptionProvider.Decrypt(string)", label="Entry Nancy.Cryptography.IEncryptionProvider.Decrypt(string)", span="19-19"];
n107 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_a_multi_valued_session()", label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_a_multi_valued_session()", span="152-152"];
n108 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_a_multi_valued_session()", label="var request = CreateRequest(''encryptedkey1=value1;key2=value2'')", span="154-154"];
n109 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_a_multi_valued_session()", label="A.CallTo(() => this.fakeEncryptionProvider.Decrypt(''encryptedkey1=value1;key2=value2'')).Returns(''key1=value1;key2=value2'')", span="155-155"];
n110 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_a_multi_valued_session()", label="var session = cookieStore.Load(request)", span="157-157"];
n115 [cluster="lambda expression", label="Entry lambda expression", span="155-155"];
n111 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_a_multi_valued_session()", label="session.Count.ShouldEqual(2)", span="159-159"];
n112 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_a_multi_valued_session()", label="session[''key1''].ShouldEqual(''value1'')", span="160-160"];
n113 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_a_multi_valued_session()", label="session[''key2''].ShouldEqual(''value2'')", span="161-161"];
n114 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_a_multi_valued_session()", label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_a_multi_valued_session()", span="152-152"];
n116 [cluster="lambda expression", label="this.fakeEncryptionProvider.Decrypt(''encryptedkey1=value1;key2=value2'')", span="155-155"];
n117 [cluster="lambda expression", label="Exit lambda expression", span="155-155"];
n118 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_properly_decode_the_url_safe_session()", label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_properly_decode_the_url_safe_session()", span="165-165"];
n119 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_properly_decode_the_url_safe_session()", label="var request = CreateRequest(HttpUtility.UrlEncode(''encryptedkey+1=val%3D1;''))", span="167-167"];
n120 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_properly_decode_the_url_safe_session()", label="A.CallTo(() => this.fakeEncryptionProvider.Decrypt(''encryptedkey+1=val%3D1;'')).Returns(''key+1=val%3D1;'')", span="168-168"];
n121 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_properly_decode_the_url_safe_session()", label="var session = cookieStore.Load(request)", span="170-170"];
n125 [cluster="lambda expression", label="Entry lambda expression", span="168-168"];
n122 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_properly_decode_the_url_safe_session()", label="session.Count.ShouldEqual(1)", span="172-172"];
n123 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_properly_decode_the_url_safe_session()", label="session[''key 1''].ShouldEqual(''val=1'')", span="173-173"];
n124 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_properly_decode_the_url_safe_session()", label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_properly_decode_the_url_safe_session()", span="165-165"];
n126 [cluster="lambda expression", label="this.fakeEncryptionProvider.Decrypt(''encryptedkey+1=val%3D1;'')", span="168-168"];
n127 [cluster="lambda expression", label="Exit lambda expression", span="168-168"];
n128 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_pre_and_post_hooks_when_enabled()", label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_pre_and_post_hooks_when_enabled()", span="177-177"];
n129 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_pre_and_post_hooks_when_enabled()", label="var beforePipeline = new BeforePipeline()", span="179-179"];
n130 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_pre_and_post_hooks_when_enabled()", label="var afterPipeline = new AfterPipeline()", span="180-180"];
n138 [cluster="Nancy.BeforePipeline.BeforePipeline()", label="Entry Nancy.BeforePipeline.BeforePipeline()", span="19-19"];
n132 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_pre_and_post_hooks_when_enabled()", label="A.CallTo(() => hooks.BeforeRequest).Returns(beforePipeline)", span="182-182"];
n135 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_pre_and_post_hooks_when_enabled()", label="beforePipeline.PipelineDelegates.Count().ShouldEqual(1)", span="187-187"];
n131 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_pre_and_post_hooks_when_enabled()", label="var hooks = A.Fake<IPipelines>()", span="181-181"];
n139 [cluster="Nancy.AfterPipeline.AfterPipeline()", label="Entry Nancy.AfterPipeline.AfterPipeline()", span="18-18"];
n133 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_pre_and_post_hooks_when_enabled()", label="A.CallTo(() => hooks.AfterRequest).Returns(afterPipeline)", span="183-183"];
n136 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_pre_and_post_hooks_when_enabled()", label="afterPipeline.PipelineItems.Count().ShouldEqual(1)", span="188-188"];
n144 [cluster="lambda expression", label="hooks.BeforeRequest", span="182-182"];
n147 [cluster="lambda expression", label="hooks.AfterRequest", span="183-183"];
n134 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_pre_and_post_hooks_when_enabled()", label="CookieBasedSessions.Enable(hooks, new CryptographyConfiguration(this.fakeEncryptionProvider, this.fakeHmacProvider))", span="185-185"];
n143 [cluster="lambda expression", label="Entry lambda expression", span="182-182"];
n146 [cluster="lambda expression", label="Entry lambda expression", span="183-183"];
n140 [cluster="Nancy.Cryptography.CryptographyConfiguration.CryptographyConfiguration(Nancy.Cryptography.IEncryptionProvider, Nancy.Cryptography.IHmacProvider)", label="Entry Nancy.Cryptography.CryptographyConfiguration.CryptographyConfiguration(Nancy.Cryptography.IEncryptionProvider, Nancy.Cryptography.IHmacProvider)", span="24-24"];
n141 [cluster="Unk.Enable", label="Entry Unk.Enable", span=""];
n142 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
n137 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_pre_and_post_hooks_when_enabled()", label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_pre_and_post_hooks_when_enabled()", span="177-177"];
n145 [cluster="lambda expression", label="Exit lambda expression", span="182-182"];
n148 [cluster="lambda expression", label="Exit lambda expression", span="183-183"];
n149 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_only_not_add_response_cookie_if_it_has_not_changed()", label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_only_not_add_response_cookie_if_it_has_not_changed()", span="192-192"];
n150 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_only_not_add_response_cookie_if_it_has_not_changed()", label="var beforePipeline = new BeforePipeline()", span="194-194"];
n151 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_only_not_add_response_cookie_if_it_has_not_changed()", label="var afterPipeline = new AfterPipeline()", span="195-195"];
n153 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_only_not_add_response_cookie_if_it_has_not_changed()", label="A.CallTo(() => hooks.BeforeRequest).Returns(beforePipeline)", span="197-197"];
n160 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_only_not_add_response_cookie_if_it_has_not_changed()", label="beforePipeline.Invoke(nancyContext, new CancellationToken())", span="204-204"];
n152 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_only_not_add_response_cookie_if_it_has_not_changed()", label="var hooks = A.Fake<IPipelines>()", span="196-196"];
n154 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_only_not_add_response_cookie_if_it_has_not_changed()", label="A.CallTo(() => hooks.AfterRequest).Returns(afterPipeline)", span="198-198"];
n161 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_only_not_add_response_cookie_if_it_has_not_changed()", label="afterPipeline.Invoke(nancyContext, new CancellationToken())", span="206-206"];
n171 [cluster="lambda expression", label="hooks.BeforeRequest", span="197-197"];
n174 [cluster="lambda expression", label="hooks.AfterRequest", span="198-198"];
n155 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_only_not_add_response_cookie_if_it_has_not_changed()", label="CookieBasedSessions.Enable(hooks, new CryptographyConfiguration(this.fakeEncryptionProvider, this.fakeHmacProvider)).WithSerializer(this.fakeObjectSerializer)", span="199-199"];
n170 [cluster="lambda expression", label="Entry lambda expression", span="197-197"];
n173 [cluster="lambda expression", label="Entry lambda expression", span="198-198"];
n156 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_only_not_add_response_cookie_if_it_has_not_changed()", label="var request = CreateRequest(''encryptedkey1=value1'')", span="200-200"];
n164 [cluster="Nancy.IObjectSerializerSelector.WithSerializer(Nancy.IObjectSerializer)", label="Entry Nancy.IObjectSerializerSelector.WithSerializer(Nancy.IObjectSerializer)", span="11-11"];
n157 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_only_not_add_response_cookie_if_it_has_not_changed()", label="A.CallTo(() => this.fakeEncryptionProvider.Decrypt(''encryptedkey1=value1'')).Returns(''key1=value1;'')", span="201-201"];
n159 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_only_not_add_response_cookie_if_it_has_not_changed()", label="var nancyContext = new NancyContext() { Request = request, Response = response }", span="203-203"];
n158 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_only_not_add_response_cookie_if_it_has_not_changed()", label="var response = A.Fake<Response>()", span="202-202"];
n176 [cluster="lambda expression", label="Entry lambda expression", span="201-201"];
n162 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_only_not_add_response_cookie_if_it_has_not_changed()", label="response.Cookies.Count.ShouldEqual(0)", span="208-208"];
n165 [cluster="Nancy.NancyContext.NancyContext()", label="Entry Nancy.NancyContext.NancyContext()", span="26-26"];
n166 [cluster="System.Threading.CancellationToken.CancellationToken()", label="Entry System.Threading.CancellationToken.CancellationToken()", span="0-0"];
n167 [cluster="Nancy.BeforePipeline.Invoke(Nancy.NancyContext, System.Threading.CancellationToken)", label="Entry Nancy.BeforePipeline.Invoke(Nancy.NancyContext, System.Threading.CancellationToken)", span="116-116"];
n168 [cluster="Nancy.AfterPipeline.Invoke(Nancy.NancyContext, System.Threading.CancellationToken)", label="Entry Nancy.AfterPipeline.Invoke(Nancy.NancyContext, System.Threading.CancellationToken)", span="107-107"];
n163 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_only_not_add_response_cookie_if_it_has_not_changed()", label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_only_not_add_response_cookie_if_it_has_not_changed()", span="192-192"];
n169 [cluster="Unk.ShouldEqual", label="Entry Unk.ShouldEqual", span=""];
n172 [cluster="lambda expression", label="Exit lambda expression", span="197-197"];
n175 [cluster="lambda expression", label="Exit lambda expression", span="198-198"];
n177 [cluster="lambda expression", label="this.fakeEncryptionProvider.Decrypt(''encryptedkey1=value1'')", span="201-201"];
n178 [cluster="lambda expression", label="Exit lambda expression", span="201-201"];
n179 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_response_cookie_if_it_has_changed()", label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_response_cookie_if_it_has_changed()", span="212-212"];
n180 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_response_cookie_if_it_has_changed()", label="var beforePipeline = new BeforePipeline()", span="214-214"];
n181 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_response_cookie_if_it_has_changed()", label="var afterPipeline = new AfterPipeline()", span="215-215"];
n183 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_response_cookie_if_it_has_changed()", label="A.CallTo(() => hooks.BeforeRequest).Returns(beforePipeline)", span="217-217"];
n190 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_response_cookie_if_it_has_changed()", label="beforePipeline.Invoke(nancyContext, new CancellationToken())", span="224-224"];
n182 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_response_cookie_if_it_has_changed()", label="var hooks = A.Fake<IPipelines>()", span="216-216"];
n184 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_response_cookie_if_it_has_changed()", label="A.CallTo(() => hooks.AfterRequest).Returns(afterPipeline)", span="218-218"];
n192 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_response_cookie_if_it_has_changed()", label="afterPipeline.Invoke(nancyContext, new CancellationToken())", span="227-227"];
n196 [cluster="lambda expression", label="hooks.BeforeRequest", span="217-217"];
n199 [cluster="lambda expression", label="hooks.AfterRequest", span="218-218"];
n185 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_response_cookie_if_it_has_changed()", label="CookieBasedSessions.Enable(hooks, new CryptographyConfiguration(this.fakeEncryptionProvider, this.fakeHmacProvider)).WithSerializer(this.fakeObjectSerializer)", span="219-219"];
n195 [cluster="lambda expression", label="Entry lambda expression", span="217-217"];
n198 [cluster="lambda expression", label="Entry lambda expression", span="218-218"];
n186 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_response_cookie_if_it_has_changed()", label="var request = CreateRequest(''encryptedkey1=value1'')", span="220-220"];
n187 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_response_cookie_if_it_has_changed()", label="A.CallTo(() => this.fakeEncryptionProvider.Decrypt(''encryptedkey1=value1'')).Returns(''key1=value1;'')", span="221-221"];
n189 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_response_cookie_if_it_has_changed()", label="var nancyContext = new NancyContext() { Request = request, Response = response }", span="223-223"];
n191 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_response_cookie_if_it_has_changed()", label="request.Session[''Testing''] = ''Test''", span="225-225"];
n188 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_response_cookie_if_it_has_changed()", label="var response = A.Fake<Response>()", span="222-222"];
n201 [cluster="lambda expression", label="Entry lambda expression", span="221-221"];
n193 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_response_cookie_if_it_has_changed()", label="response.Cookies.Count.ShouldEqual(1)", span="229-229"];
n194 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_response_cookie_if_it_has_changed()", label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_response_cookie_if_it_has_changed()", span="212-212"];
n197 [cluster="lambda expression", label="Exit lambda expression", span="217-217"];
n200 [cluster="lambda expression", label="Exit lambda expression", span="218-218"];
n202 [cluster="lambda expression", label="this.fakeEncryptionProvider.Decrypt(''encryptedkey1=value1'')", span="221-221"];
n203 [cluster="lambda expression", label="Exit lambda expression", span="221-221"];
n204 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_call_formatter_on_load()", label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_call_formatter_on_load()", span="233-233"];
n205 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_call_formatter_on_load()", label="var fakeFormatter = A.Fake<IObjectSerializer>()", span="235-235"];
n206 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_call_formatter_on_load()", label="A.CallTo(() => this.fakeEncryptionProvider.Decrypt(''encryptedkey1=value1'')).Returns(''key1=value1;'')", span="236-236"];
n207 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_call_formatter_on_load()", label="var store = new CookieBasedSessions(this.fakeEncryptionProvider, this.fakeHmacProvider, fakeFormatter)", span="237-237"];
n210 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_call_formatter_on_load()", label="A.CallTo(() => fakeFormatter.Deserialize(''value1'')).MustHaveHappened(Repeated.Exactly.Once)", span="242-242"];
n218 [cluster="lambda expression", label="fakeFormatter.Deserialize(''value1'')", span="242-242"];
n214 [cluster="lambda expression", label="Entry lambda expression", span="236-236"];
n208 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_call_formatter_on_load()", label="var request = CreateRequest(''encryptedkey1=value1'', false)", span="238-238"];
n212 [cluster="CookieBasedSessions.cstr", label="Entry CookieBasedSessions.cstr", span=""];
n209 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_call_formatter_on_load()", label="store.Load(request)", span="240-240"];
n211 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_call_formatter_on_load()", label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_call_formatter_on_load()", span="233-233"];
n213 [cluster="Unk.MustHaveHappened", label="Entry Unk.MustHaveHappened", span=""];
n217 [cluster="lambda expression", label="Entry lambda expression", span="242-242"];
n215 [cluster="lambda expression", label="this.fakeEncryptionProvider.Decrypt(''encryptedkey1=value1'')", span="236-236"];
n216 [cluster="lambda expression", label="Exit lambda expression", span="236-236"];
n219 [cluster="lambda expression", label="Exit lambda expression", span="242-242"];
n220 [cluster="Unk.Deserialize", label="Entry Unk.Deserialize", span=""];
n221 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_call_the_formatter_on_save()", label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_call_the_formatter_on_save()", span="246-246"];
n222 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_call_the_formatter_on_save()", label="var response = new Response()", span="248-248"];
n223 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_call_the_formatter_on_save()", label="var session = new Session(new Dictionary<string, object>())", span="249-249"];
n227 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_call_the_formatter_on_save()", label="store.Save(session, response)", span="254-254"];
n224 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_call_the_formatter_on_save()", label="session[''key1''] = ''value1''", span="250-250"];
n225 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_call_the_formatter_on_save()", label="var fakeFormatter = A.Fake<IObjectSerializer>()", span="251-251"];
n226 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_call_the_formatter_on_save()", label="var store = new CookieBasedSessions(this.fakeEncryptionProvider, this.fakeHmacProvider, fakeFormatter)", span="252-252"];
n228 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_call_the_formatter_on_save()", label="A.CallTo(() => fakeFormatter.Serialize(''value1'')).MustHaveHappened(Repeated.Exactly.Once)", span="256-256"];
n231 [cluster="lambda expression", label="fakeFormatter.Serialize(''value1'')", span="256-256"];
n229 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_call_the_formatter_on_save()", label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_call_the_formatter_on_save()", span="246-246"];
n230 [cluster="lambda expression", label="Entry lambda expression", span="256-256"];
n232 [cluster="lambda expression", label="Exit lambda expression", span="256-256"];
n233 [cluster="Unk.Serialize", label="Entry Unk.Serialize", span=""];
n234 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_formatter_when_using_formatter_selector()", label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_formatter_when_using_formatter_selector()", span="260-260"];
n235 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_formatter_when_using_formatter_selector()", label="var beforePipeline = new BeforePipeline()", span="262-262"];
n236 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_formatter_when_using_formatter_selector()", label="var afterPipeline = new AfterPipeline()", span="263-263"];
n238 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_formatter_when_using_formatter_selector()", label="A.CallTo(() => hooks.BeforeRequest).Returns(beforePipeline)", span="265-265"];
n245 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_formatter_when_using_formatter_selector()", label="beforePipeline.Invoke(nancyContext, new CancellationToken())", span="273-273"];
n237 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_formatter_when_using_formatter_selector()", label="var hooks = A.Fake<IPipelines>()", span="264-264"];
n239 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_formatter_when_using_formatter_selector()", label="A.CallTo(() => hooks.AfterRequest).Returns(afterPipeline)", span="266-266"];
n250 [cluster="lambda expression", label="hooks.BeforeRequest", span="265-265"];
n253 [cluster="lambda expression", label="hooks.AfterRequest", span="266-266"];
n242 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_formatter_when_using_formatter_selector()", label="CookieBasedSessions.Enable(hooks, new CryptographyConfiguration(this.fakeEncryptionProvider, this.fakeHmacProvider)).WithSerializer(fakeFormatter)", span="269-269"];
n249 [cluster="lambda expression", label="Entry lambda expression", span="265-265"];
n240 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_formatter_when_using_formatter_selector()", label="var fakeFormatter = A.Fake<IObjectSerializer>()", span="267-267"];
n252 [cluster="lambda expression", label="Entry lambda expression", span="266-266"];
n241 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_formatter_when_using_formatter_selector()", label="A.CallTo(() => this.fakeEncryptionProvider.Decrypt(''encryptedkey1=value1'')).Returns(''key1=value1;'')", span="268-268"];
n246 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_formatter_when_using_formatter_selector()", label="A.CallTo(() => fakeFormatter.Deserialize(A<string>.Ignored)).MustHaveHappened(Repeated.Exactly.Once)", span="275-275"];
n259 [cluster="lambda expression", label="fakeFormatter.Deserialize(A<string>.Ignored)", span="275-275"];
n255 [cluster="lambda expression", label="Entry lambda expression", span="268-268"];
n243 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_formatter_when_using_formatter_selector()", label="var request = CreateRequest(''encryptedkey1=value1'')", span="270-270"];
n248 [cluster="Unk.WithSerializer", label="Entry Unk.WithSerializer", span=""];
n244 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_formatter_when_using_formatter_selector()", label="var nancyContext = new NancyContext() { Request = request }", span="271-271"];
n247 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_formatter_when_using_formatter_selector()", label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_formatter_when_using_formatter_selector()", span="260-260"];
n258 [cluster="lambda expression", label="Entry lambda expression", span="275-275"];
n251 [cluster="lambda expression", label="Exit lambda expression", span="265-265"];
n254 [cluster="lambda expression", label="Exit lambda expression", span="266-266"];
n256 [cluster="lambda expression", label="this.fakeEncryptionProvider.Decrypt(''encryptedkey1=value1'')", span="268-268"];
n257 [cluster="lambda expression", label="Exit lambda expression", span="268-268"];
n260 [cluster="lambda expression", label="Exit lambda expression", span="275-275"];
n261 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_be_able_to_save_a_complex_object_to_session()", label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_be_able_to_save_a_complex_object_to_session()", span="279-279"];
n262 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_be_able_to_save_a_complex_object_to_session()", label="var response = new Response()", span="281-281"];
n263 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_be_able_to_save_a_complex_object_to_session()", label="var session = new Session(new Dictionary<string, object>())", span="282-282"];
n267 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_be_able_to_save_a_complex_object_to_session()", label="store.Save(session, response)", span="287-287"];
n268 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_be_able_to_save_a_complex_object_to_session()", label="response.Cookies.Count.ShouldEqual(1)", span="289-289"];
n269 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_be_able_to_save_a_complex_object_to_session()", label="var cookie = response.Cookies.First()", span="290-290"];
n264 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_be_able_to_save_a_complex_object_to_session()", label="var payload = new DefaultSessionObjectFormatterFixture.Payload(27, true, ''Test string'')", span="283-283"];
n266 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_be_able_to_save_a_complex_object_to_session()", label="session[''testObject''] = payload", span="285-285"];
n265 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_be_able_to_save_a_complex_object_to_session()", label="var store = new CookieBasedSessions(this.aesEncryptionProvider, this.defaultHmacProvider, this.defaultObjectSerializer)", span="284-284"];
n274 [cluster="Nancy.Tests.Unit.Sessions.DefaultSessionObjectFormatterFixture.Payload.Payload(int, bool, string)", label="Entry Nancy.Tests.Unit.Sessions.DefaultSessionObjectFormatterFixture.Payload.Payload(int, bool, string)", span="85-85"];
n270 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_be_able_to_save_a_complex_object_to_session()", label="cookie.Name.ShouldEqual(store.CookieName)", span="291-291"];
n271 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_be_able_to_save_a_complex_object_to_session()", label="cookie.Value.ShouldNotBeNull()", span="292-292"];
n272 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_be_able_to_save_a_complex_object_to_session()", label="cookie.Value.ShouldNotBeEmpty()", span="293-293"];
n275 [cluster="object.ShouldNotBeNull()", label="Entry object.ShouldNotBeNull()", span="151-151"];
n273 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_be_able_to_save_a_complex_object_to_session()", label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_be_able_to_save_a_complex_object_to_session()", span="279-279"];
n276 [cluster="string.ShouldNotBeEmpty()", label="Entry string.ShouldNotBeEmpty()", span="32-32"];
n277 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_be_able_to_load_an_object_previously_saved_to_session()", label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_be_able_to_load_an_object_previously_saved_to_session()", span="297-297"];
n278 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_be_able_to_load_an_object_previously_saved_to_session()", label="var response = new Response()", span="299-299"];
n279 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_be_able_to_load_an_object_previously_saved_to_session()", label="var session = new Session(new Dictionary<string, object>())", span="300-300"];
n283 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_be_able_to_load_an_object_previously_saved_to_session()", label="store.Save(session, response)", span="304-304"];
n285 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_be_able_to_load_an_object_previously_saved_to_session()", label="request.Cookies.Add(response.Cookies.First().Name, response.Cookies.First().Value)", span="306-306"];
n280 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_be_able_to_load_an_object_previously_saved_to_session()", label="var payload = new DefaultSessionObjectFormatterFixture.Payload(27, true, ''Test string'')", span="301-301"];
n282 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_be_able_to_load_an_object_previously_saved_to_session()", label="session[''testObject''] = payload", span="303-303"];
n281 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_be_able_to_load_an_object_previously_saved_to_session()", label="var store = new CookieBasedSessions(this.aesEncryptionProvider, this.defaultHmacProvider, this.defaultObjectSerializer)", span="302-302"];
n287 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_be_able_to_load_an_object_previously_saved_to_session()", label="result[''testObject''].ShouldEqual(payload)", span="310-310"];
n286 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_be_able_to_load_an_object_previously_saved_to_session()", label="var result = store.Load(request)", span="308-308"];
n284 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_be_able_to_load_an_object_previously_saved_to_session()", label="var request = new Request(''GET'', ''/'', ''http'')", span="305-305"];
n288 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_be_able_to_load_an_object_previously_saved_to_session()", label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_be_able_to_load_an_object_previously_saved_to_session()", span="297-297"];
n289 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_encrypt_data()", label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_encrypt_data()", span="314-314"];
n290 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_encrypt_data()", label="var response = new Response()", span="316-316"];
n291 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_encrypt_data()", label="var session = new Session(new Dictionary<string, object>\r\n                                      {\r\n                                          {''key1'', ''val1''},\r\n                                      })", span="317-320"];
n293 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_encrypt_data()", label="cookieStore.Save(session, response)", span="323-323"];
n292 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_encrypt_data()", label="session[''key2''] = ''val2''", span="321-321"];
n294 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_encrypt_data()", label="A.CallTo(() => this.fakeEncryptionProvider.Encrypt(A<string>.Ignored))\r\n                .MustHaveHappened(Repeated.Exactly.Once)", span="325-326"];
n295 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_encrypt_data()", label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_encrypt_data()", span="314-314"];
n296 [cluster="lambda expression", label="Entry lambda expression", span="325-325"];
n297 [cluster="lambda expression", label="this.fakeEncryptionProvider.Encrypt(A<string>.Ignored)", span="325-325"];
n298 [cluster="lambda expression", label="Exit lambda expression", span="325-325"];
n299 [cluster="Unk.Encrypt", label="Entry Unk.Encrypt", span=""];
n300 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_generate_hmac()", label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_generate_hmac()", span="330-330"];
n301 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_generate_hmac()", label="var response = new Response()", span="332-332"];
n302 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_generate_hmac()", label="var session = new Session(new Dictionary<string, object>\r\n                                      {\r\n                                          {''key1'', ''val1''},\r\n                                      })", span="333-336"];
n304 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_generate_hmac()", label="cookieStore.Save(session, response)", span="339-339"];
n303 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_generate_hmac()", label="session[''key2''] = ''val2''", span="337-337"];
n305 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_generate_hmac()", label="A.CallTo(() => this.fakeHmacProvider.GenerateHmac(A<string>.Ignored))\r\n                .MustHaveHappened(Repeated.Exactly.Once)", span="341-342"];
n306 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_generate_hmac()", label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_generate_hmac()", span="330-330"];
n307 [cluster="lambda expression", label="Entry lambda expression", span="341-341"];
n308 [cluster="lambda expression", label="this.fakeHmacProvider.GenerateHmac(A<string>.Ignored)", span="341-341"];
n309 [cluster="lambda expression", label="Exit lambda expression", span="341-341"];
n310 [cluster="Unk.GenerateHmac", label="Entry Unk.GenerateHmac", span=""];
n311 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_valid_test_data()", label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_valid_test_data()", span="346-346"];
n317 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_valid_test_data()", label="var result = store.Load(request)", span="354-354"];
n318 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_valid_test_data()", label="result.Count.ShouldEqual(1)", span="356-356"];
n319 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_valid_test_data()", label="result.First().Value.ShouldBeOfType(typeof(DefaultSessionObjectFormatterFixture.Payload))", span="357-357"];
n320 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_valid_test_data()", label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_valid_test_data()", span="346-346"];
n321 [cluster="object.ShouldBeOfType(System.Type)", label="Entry object.ShouldBeOfType(System.Type)", span="166-166"];
n322 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_hmac_changed()", label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_hmac_changed()", span="361-361"];
n323 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_hmac_changed()", label="var inputValue = ''b'' + ValidHmac.Substring(1) + ValidData", span="363-363"];
n324 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_hmac_changed()", label="inputValue = HttpUtility.UrlEncode(inputValue)", span="364-364"];
n331 [cluster="string.Substring(int)", label="Entry string.Substring(int)", span="0-0"];
n325 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_hmac_changed()", label="var store = new CookieBasedSessions(this.aesEncryptionProvider, this.defaultHmacProvider, this.defaultObjectSerializer)", span="365-365"];
n327 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_hmac_changed()", label="request.Cookies.Add(store.CookieName, inputValue)", span="367-367"];
n326 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_hmac_changed()", label="var request = new Request(''GET'', ''/'', ''http'')", span="366-366"];
n328 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_hmac_changed()", label="var result = store.Load(request)", span="369-369"];
n329 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_hmac_changed()", label="result.Count.ShouldEqual(0)", span="371-371"];
n330 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_hmac_changed()", label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_hmac_changed()", span="361-361"];
n332 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_hmac_missing()", label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_hmac_missing()", span="375-375"];
n333 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_hmac_missing()", label="var inputValue = ValidData", span="377-377"];
n334 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_hmac_missing()", label="inputValue = HttpUtility.UrlEncode(inputValue)", span="378-378"];
n335 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_hmac_missing()", label="var store = new CookieBasedSessions(this.aesEncryptionProvider, this.defaultHmacProvider, this.defaultObjectSerializer)", span="379-379"];
n337 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_hmac_missing()", label="request.Cookies.Add(store.CookieName, inputValue)", span="381-381"];
n336 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_hmac_missing()", label="var request = new Request(''GET'', ''/'', ''http'')", span="380-380"];
n338 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_hmac_missing()", label="var result = store.Load(request)", span="383-383"];
n339 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_hmac_missing()", label="result.Count.ShouldEqual(0)", span="385-385"];
n340 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_hmac_missing()", label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_hmac_missing()", span="375-375"];
n341 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_encrypted_data_modified()", label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_encrypted_data_modified()", span="389-389"];
n342 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_encrypted_data_modified()", label="var inputValue = ValidHmac + ValidData.Substring(0, ValidData.Length - 1) + ''Z''", span="391-391"];
n343 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_encrypted_data_modified()", label="inputValue = HttpUtility.UrlEncode(inputValue)", span="392-392"];
n344 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_encrypted_data_modified()", label="var store = new CookieBasedSessions(this.aesEncryptionProvider, this.defaultHmacProvider, this.defaultObjectSerializer)", span="393-393"];
n346 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_encrypted_data_modified()", label="request.Cookies.Add(store.CookieName, inputValue)", span="395-395"];
n345 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_encrypted_data_modified()", label="var request = new Request(''GET'', ''/'', ''http'')", span="394-394"];
n347 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_encrypted_data_modified()", label="var result = store.Load(request)", span="397-397"];
n348 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_encrypted_data_modified()", label="result.Count.ShouldEqual(0)", span="399-399"];
n349 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_encrypted_data_modified()", label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_encrypted_data_modified()", span="389-389"];
n350 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_encrypted_data_are_invalid_but_contain_semicolon_when_decrypted()", label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_encrypted_data_are_invalid_but_contain_semicolon_when_decrypted()", span="403-403"];
n351 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_encrypted_data_are_invalid_but_contain_semicolon_when_decrypted()", label="var bogusEncrypted = this.aesEncryptionProvider.Encrypt(''foo;bar'')", span="405-405"];
n352 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_encrypted_data_are_invalid_but_contain_semicolon_when_decrypted()", label="var inputValue = ValidHmac + bogusEncrypted", span="406-406"];
n360 [cluster="Nancy.Cryptography.AesEncryptionProvider.Encrypt(string)", label="Entry Nancy.Cryptography.AesEncryptionProvider.Encrypt(string)", span="30-30"];
n353 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_encrypted_data_are_invalid_but_contain_semicolon_when_decrypted()", label="inputValue = HttpUtility.UrlEncode(inputValue)", span="407-407"];
n354 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_encrypted_data_are_invalid_but_contain_semicolon_when_decrypted()", label="var store = new CookieBasedSessions(this.aesEncryptionProvider, this.defaultHmacProvider, this.defaultObjectSerializer)", span="408-408"];
n356 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_encrypted_data_are_invalid_but_contain_semicolon_when_decrypted()", label="request.Cookies.Add(store.CookieName, inputValue)", span="410-410"];
n355 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_encrypted_data_are_invalid_but_contain_semicolon_when_decrypted()", label="var request = new Request(''GET'', ''/'', ''http'')", span="409-409"];
n357 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_encrypted_data_are_invalid_but_contain_semicolon_when_decrypted()", label="var result = store.Load(request)", span="412-412"];
n358 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_encrypted_data_are_invalid_but_contain_semicolon_when_decrypted()", label="result.Count.ShouldEqual(0)", span="414-414"];
n359 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_encrypted_data_are_invalid_but_contain_semicolon_when_decrypted()", label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_encrypted_data_are_invalid_but_contain_semicolon_when_decrypted()", span="403-403"];
n361 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_use_CookieName_when_config_provides_cookiename_value()", label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_use_CookieName_when_config_provides_cookiename_value()", span="418-418"];
n362 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_use_CookieName_when_config_provides_cookiename_value()", label="var cryptoConfig = new CryptographyConfiguration(this.fakeEncryptionProvider, this.fakeHmacProvider)", span="421-421"];
n363 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_use_CookieName_when_config_provides_cookiename_value()", label="var storeConfig = new CookieBasedSessionsConfiguration(cryptoConfig)\r\n            {\r\n                CookieName = ''NamedCookie'',\r\n                Serializer = this.fakeObjectSerializer\r\n            }", span="422-426"];
n364 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_use_CookieName_when_config_provides_cookiename_value()", label="var store = new CookieBasedSessions(storeConfig)", span="427-427"];
n371 [cluster="Nancy.Session.CookieBasedSessionsConfiguration.CookieBasedSessionsConfiguration(Nancy.Cryptography.CryptographyConfiguration)", label="Entry Nancy.Session.CookieBasedSessionsConfiguration.CookieBasedSessionsConfiguration(Nancy.Cryptography.CryptographyConfiguration)", span="21-21"];
n369 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_use_CookieName_when_config_provides_cookiename_value()", label="response.Cookies.ShouldHave(c => c.Name == storeConfig.CookieName)", span="439-439"];
n375 [cluster="lambda expression", label="c.Name == storeConfig.CookieName", span="439-439"];
n365 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_use_CookieName_when_config_provides_cookiename_value()", label="var response = new Response()", span="430-430"];
n372 [cluster="Nancy.Session.CookieBasedSessions.CookieBasedSessions(Nancy.Session.CookieBasedSessionsConfiguration)", label="Entry Nancy.Session.CookieBasedSessions.CookieBasedSessions(Nancy.Session.CookieBasedSessionsConfiguration)", span="47-47"];
n368 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_use_CookieName_when_config_provides_cookiename_value()", label="store.Save(session, response)", span="436-436"];
n366 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_use_CookieName_when_config_provides_cookiename_value()", label="var session = new Session(new Dictionary<string, object>\r\n                                        {\r\n                                            {''key1'', ''val1''},\r\n                                        })", span="431-434"];
n367 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_use_CookieName_when_config_provides_cookiename_value()", label="session[''key2''] = ''val2''", span="435-435"];
n370 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_use_CookieName_when_config_provides_cookiename_value()", label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_use_CookieName_when_config_provides_cookiename_value()", span="418-418"];
n373 [cluster="System.Collections.Generic.IEnumerable<T>.ShouldHave<T>(System.Func<T, bool>)", label="Entry System.Collections.Generic.IEnumerable<T>.ShouldHave<T>(System.Func<T, bool>)", span="86-86"];
n374 [cluster="lambda expression", label="Entry lambda expression", span="439-439"];
n376 [cluster="lambda expression", label="Exit lambda expression", span="439-439"];
n377 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_Domain_when_config_provides_domain_value()", label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_Domain_when_config_provides_domain_value()", span="443-443"];
n378 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_Domain_when_config_provides_domain_value()", label="var cryptoConfig = new CryptographyConfiguration(this.fakeEncryptionProvider, this.fakeHmacProvider)", span="446-446"];
n379 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_Domain_when_config_provides_domain_value()", label="var storeConfig = new CookieBasedSessionsConfiguration(cryptoConfig)\r\n            {\r\n                Domain = ''.nancyfx.org'',\r\n                Serializer = this.fakeObjectSerializer\r\n            }", span="447-451"];
n380 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_Domain_when_config_provides_domain_value()", label="var store = new CookieBasedSessions(storeConfig)", span="452-452"];
n385 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_Domain_when_config_provides_domain_value()", label="var cookie = response.Cookies.First(c => c.Name == storeConfig.CookieName)", span="464-464"];
n390 [cluster="lambda expression", label="c.Name == storeConfig.CookieName", span="464-464"];
n386 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_Domain_when_config_provides_domain_value()", label="cookie.Domain.ShouldEqual(storeConfig.Domain)", span="465-465"];
n381 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_Domain_when_config_provides_domain_value()", label="var response = new Response()", span="455-455"];
n384 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_Domain_when_config_provides_domain_value()", label="store.Save(session, response)", span="461-461"];
n382 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_Domain_when_config_provides_domain_value()", label="var session = new Session(new Dictionary<string, object>\r\n                                        {\r\n                                            {''key1'', ''val1''},\r\n                                        })", span="456-459"];
n383 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_Domain_when_config_provides_domain_value()", label="session[''key2''] = ''val2''", span="460-460"];
n388 [cluster="Unk.First", label="Entry Unk.First", span=""];
n389 [cluster="lambda expression", label="Entry lambda expression", span="464-464"];
n387 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_Domain_when_config_provides_domain_value()", label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_Domain_when_config_provides_domain_value()", span="443-443"];
n391 [cluster="lambda expression", label="Exit lambda expression", span="464-464"];
n392 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_Path_when_config_provides_path_value()", label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_Path_when_config_provides_path_value()", span="469-469"];
n393 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_Path_when_config_provides_path_value()", label="var cryptoConfig = new CryptographyConfiguration(this.fakeEncryptionProvider, this.fakeHmacProvider)", span="472-472"];
n394 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_Path_when_config_provides_path_value()", label="var storeConfig = new CookieBasedSessionsConfiguration(cryptoConfig)\r\n            {\r\n                Path = ''/'',\r\n                Serializer = this.fakeObjectSerializer\r\n            }", span="473-477"];
n395 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_Path_when_config_provides_path_value()", label="var store = new CookieBasedSessions(storeConfig)", span="478-478"];
n400 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_Path_when_config_provides_path_value()", label="var cookie = response.Cookies.First(c => c.Name == storeConfig.CookieName)", span="490-490"];
n404 [cluster="lambda expression", label="c.Name == storeConfig.CookieName", span="490-490"];
n401 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_Path_when_config_provides_path_value()", label="cookie.Path.ShouldEqual(storeConfig.Path)", span="491-491"];
n396 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_Path_when_config_provides_path_value()", label="var response = new Response()", span="481-481"];
n399 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_Path_when_config_provides_path_value()", label="store.Save(session, response)", span="487-487"];
n397 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_Path_when_config_provides_path_value()", label="var session = new Session(new Dictionary<string, object>\r\n                                          {\r\n                                              {''key1'', ''val1''},\r\n                                          })", span="482-485"];
n398 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_Path_when_config_provides_path_value()", label="session[''key2''] = ''val2''", span="486-486"];
n403 [cluster="lambda expression", label="Entry lambda expression", span="490-490"];
n402 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_Path_when_config_provides_path_value()", label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_Path_when_config_provides_path_value()", span="469-469"];
n405 [cluster="lambda expression", label="Exit lambda expression", span="490-490"];
n406 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CreateRequest(string, bool)", label="var headers = new Dictionary<string, IEnumerable<string>>(1)", span="496-496"];
n407 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CreateRequest(string, bool)", label="!string.IsNullOrEmpty(sessionValue)", span="498-498"];
n410 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CreateRequest(string, bool)", label=load, span="505-505"];
n414 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", span="0-0"];
n409 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CreateRequest(string, bool)", label="var request = new Request(''GET'', new Url { Path = ''/'', Scheme = ''http'', Port = 9001, BasePath = ''goku.power'' }, CreateRequestStream(), headers)", span="503-503"];
n415 [cluster="string.IsNullOrEmpty(string)", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
n416 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
n417 [cluster="Nancy.Request.Request(string, Nancy.Url, System.IO.Stream, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, string, System.Security.Cryptography.X509Certificates.X509Certificate, string)", label="Entry Nancy.Request.Request(string, Nancy.Url, System.IO.Stream, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, string, System.Security.Cryptography.X509Certificates.X509Certificate, string)", span="50-50"];
n418 [cluster="Nancy.Url.Url()", label="Entry Nancy.Url.Url()", span="21-21"];
n419 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CreateRequestStream()", label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CreateRequestStream()", span="513-513"];
n411 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CreateRequest(string, bool)", label="cookieStore.Load(request)", span="507-507"];
n412 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CreateRequest(string, bool)", label="return request;", span="510-510"];
n413 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CreateRequest(string, bool)", label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CreateRequest(string, bool)", span="494-494"];
n420 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CreateRequestStream()", label="return CreateRequestStream(new MemoryStream());", span="515-515"];
n421 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CreateRequestStream()", label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CreateRequestStream()", span="513-513"];
n422 [cluster="System.IO.MemoryStream.MemoryStream()", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
n423 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CreateRequestStream(System.IO.Stream)", label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CreateRequestStream(System.IO.Stream)", span="518-518"];
n424 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CreateRequestStream(System.IO.Stream)", label="return RequestStream.FromStream(stream, 0, 1, true);", span="520-520"];
n425 [cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CreateRequestStream(System.IO.Stream)", label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CreateRequestStream(System.IO.Stream)", span="518-518"];
n426 [cluster="Nancy.IO.RequestStream.FromStream(System.IO.Stream, long, long, bool)", label="Entry Nancy.IO.RequestStream.FromStream(System.IO.Stream, long, long, bool)", span="317-317"];
m0_9 [cluster="Nancy.ViewEngines.DefaultViewResolver.GetViewLocation(string, dynamic, Nancy.ViewEngines.ViewLocationContext)", file="EmbeddedStaticContentConventionBuilder.cs", label="Entry Nancy.ViewEngines.DefaultViewResolver.GetViewLocation(string, dynamic, Nancy.ViewEngines.ViewLocationContext)", span="41-41"];
m0_16 [cluster="Nancy.ViewEngines.DefaultViewResolver.GetViewLocation(string, dynamic, Nancy.ViewEngines.ViewLocationContext)", file="EmbeddedStaticContentConventionBuilder.cs", label="var conventionBasedViewName =\r\n                    SafeInvokeConvention(convention, viewName, model, viewLocationContext)", span="57-58"];
m0_15 [cluster="Nancy.ViewEngines.DefaultViewResolver.GetViewLocation(string, dynamic, Nancy.ViewEngines.ViewLocationContext)", file="EmbeddedStaticContentConventionBuilder.cs", label=conventions, span="55-55"];
m0_11 [cluster="Nancy.ViewEngines.DefaultViewResolver.GetViewLocation(string, dynamic, Nancy.ViewEngines.ViewLocationContext)", file="EmbeddedStaticContentConventionBuilder.cs", label="return null;", span="45-45"];
m0_17 [cluster="Nancy.ViewEngines.DefaultViewResolver.GetViewLocation(string, dynamic, Nancy.ViewEngines.ViewLocationContext)", file="EmbeddedStaticContentConventionBuilder.cs", label="String.IsNullOrEmpty(conventionBasedViewName)", span="60-60"];
m0_18 [cluster="Nancy.ViewEngines.DefaultViewResolver.GetViewLocation(string, dynamic, Nancy.ViewEngines.ViewLocationContext)", file="EmbeddedStaticContentConventionBuilder.cs", label="viewLocationContext.Context.Trace.TraceLog.WriteLog(x => x.AppendLine(string.Concat(''[DefaultViewResolver] Attempting to locate view using convention ''', conventionBasedViewName, ''''')))", span="65-65"];
m0_19 [cluster="Nancy.ViewEngines.DefaultViewResolver.GetViewLocation(string, dynamic, Nancy.ViewEngines.ViewLocationContext)", file="EmbeddedStaticContentConventionBuilder.cs", label="var locatedView = \r\n                    this.viewLocator.LocateView(conventionBasedViewName)", span="67-68"];
m0_21 [cluster="Nancy.ViewEngines.DefaultViewResolver.GetViewLocation(string, dynamic, Nancy.ViewEngines.ViewLocationContext)", file="EmbeddedStaticContentConventionBuilder.cs", label="viewLocationContext.Context.Trace.TraceLog.WriteLog(x => x.AppendLine(string.Concat(''[DefaultViewResolver] View resolved at ''', conventionBasedViewName, ''''')))", span="72-72"];
m0_14 [cluster="Nancy.ViewEngines.DefaultViewResolver.GetViewLocation(string, dynamic, Nancy.ViewEngines.ViewLocationContext)", file="EmbeddedStaticContentConventionBuilder.cs", label="viewLocationContext.Context.Trace.TraceLog.WriteLog(x => x.AppendLine(string.Concat(''[DefaultViewResolver] Resolving view for ''', viewName , ''', using view location conventions.'')))", span="53-53"];
m0_20 [cluster="Nancy.ViewEngines.DefaultViewResolver.GetViewLocation(string, dynamic, Nancy.ViewEngines.ViewLocationContext)", file="EmbeddedStaticContentConventionBuilder.cs", label="locatedView != null", span="70-70"];
m0_23 [cluster="Nancy.ViewEngines.DefaultViewResolver.GetViewLocation(string, dynamic, Nancy.ViewEngines.ViewLocationContext)", file="EmbeddedStaticContentConventionBuilder.cs", label="viewLocationContext.Context.Trace.TraceLog.WriteLog(x => x.AppendLine(''[DefaultViewResolver] No view could be resolved using the available view location conventions.''))", span="77-77"];
m0_10 [cluster="Nancy.ViewEngines.DefaultViewResolver.GetViewLocation(string, dynamic, Nancy.ViewEngines.ViewLocationContext)", file="EmbeddedStaticContentConventionBuilder.cs", label="string.IsNullOrEmpty(viewName)", span="43-43"];
m0_12 [cluster="Nancy.ViewEngines.DefaultViewResolver.GetViewLocation(string, dynamic, Nancy.ViewEngines.ViewLocationContext)", file="EmbeddedStaticContentConventionBuilder.cs", label="viewLocationContext == null", span="48-48"];
m0_22 [cluster="Nancy.ViewEngines.DefaultViewResolver.GetViewLocation(string, dynamic, Nancy.ViewEngines.ViewLocationContext)", file="EmbeddedStaticContentConventionBuilder.cs", label="return locatedView;", span="73-73"];
m0_24 [cluster="Nancy.ViewEngines.DefaultViewResolver.GetViewLocation(string, dynamic, Nancy.ViewEngines.ViewLocationContext)", file="EmbeddedStaticContentConventionBuilder.cs", label="return null;", span="79-79"];
m0_13 [cluster="Nancy.ViewEngines.DefaultViewResolver.GetViewLocation(string, dynamic, Nancy.ViewEngines.ViewLocationContext)", file="EmbeddedStaticContentConventionBuilder.cs", label="return null;", span="50-50"];
m0_25 [cluster="Nancy.ViewEngines.DefaultViewResolver.GetViewLocation(string, dynamic, Nancy.ViewEngines.ViewLocationContext)", file="EmbeddedStaticContentConventionBuilder.cs", label="Exit Nancy.ViewEngines.DefaultViewResolver.GetViewLocation(string, dynamic, Nancy.ViewEngines.ViewLocationContext)", span="41-41"];
m0_48 [cluster="System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", file="EmbeddedStaticContentConventionBuilder.cs", label="Entry System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", span="0-0"];
m0_27 [cluster="Nancy.Diagnostics.TraceLog.WriteLog(System.Action<System.Text.StringBuilder>)", file="EmbeddedStaticContentConventionBuilder.cs", label="Entry Nancy.Diagnostics.TraceLog.WriteLog(System.Action<System.Text.StringBuilder>)", span="14-14"];
m0_34 [cluster="System.Text.StringBuilder.AppendLine(string)", file="EmbeddedStaticContentConventionBuilder.cs", label="Entry System.Text.StringBuilder.AppendLine(string)", span="0-0"];
m0_38 [cluster="Unk.Concat", file="EmbeddedStaticContentConventionBuilder.cs", label="Entry Unk.Concat", span=""];
m0_28 [cluster="Nancy.ViewEngines.DefaultViewResolver.SafeInvokeConvention(System.Func<string, object, Nancy.ViewEngines.ViewLocationContext, string>, string, dynamic, Nancy.ViewEngines.ViewLocationContext)", file="EmbeddedStaticContentConventionBuilder.cs", label="Entry Nancy.ViewEngines.DefaultViewResolver.SafeInvokeConvention(System.Func<string, object, Nancy.ViewEngines.ViewLocationContext, string>, string, dynamic, Nancy.ViewEngines.ViewLocationContext)", span="82-82"];
m0_45 [cluster="Nancy.ViewEngines.DefaultViewResolver.SafeInvokeConvention(System.Func<string, object, Nancy.ViewEngines.ViewLocationContext, string>, string, dynamic, Nancy.ViewEngines.ViewLocationContext)", color=green, community=0, file="EmbeddedStaticContentConventionBuilder.cs", label="return convention.Invoke(viewName, model, viewLocationContext);", prediction=0, span="86-86"];
m0_46 [cluster="Nancy.ViewEngines.DefaultViewResolver.SafeInvokeConvention(System.Func<string, object, Nancy.ViewEngines.ViewLocationContext, string>, string, dynamic, Nancy.ViewEngines.ViewLocationContext)", color=green, community=0, file="EmbeddedStaticContentConventionBuilder.cs", label="return null;", prediction=1, span="90-90"];
m0_47 [cluster="Nancy.ViewEngines.DefaultViewResolver.SafeInvokeConvention(System.Func<string, object, Nancy.ViewEngines.ViewLocationContext, string>, string, dynamic, Nancy.ViewEngines.ViewLocationContext)", file="EmbeddedStaticContentConventionBuilder.cs", label="Exit Nancy.ViewEngines.DefaultViewResolver.SafeInvokeConvention(System.Func<string, object, Nancy.ViewEngines.ViewLocationContext, string>, string, dynamic, Nancy.ViewEngines.ViewLocationContext)", span="82-82"];
m0_0 [cluster="Nancy.ViewEngines.DefaultViewResolver.DefaultViewResolver(Nancy.ViewEngines.IViewLocator, Nancy.Conventions.ViewLocationConventions)", file="EmbeddedStaticContentConventionBuilder.cs", label="Entry Nancy.ViewEngines.DefaultViewResolver.DefaultViewResolver(Nancy.ViewEngines.IViewLocator, Nancy.Conventions.ViewLocationConventions)", span="18-18"];
m0_5 [cluster="Nancy.ViewEngines.DefaultViewResolver.DefaultViewResolver(Nancy.ViewEngines.IViewLocator, Nancy.Conventions.ViewLocationConventions)", file="EmbeddedStaticContentConventionBuilder.cs", label="this.viewLocator = viewLocator", span="30-30"];
m0_6 [cluster="Nancy.ViewEngines.DefaultViewResolver.DefaultViewResolver(Nancy.ViewEngines.IViewLocator, Nancy.Conventions.ViewLocationConventions)", file="EmbeddedStaticContentConventionBuilder.cs", label="this.conventions = conventions", span="31-31"];
m0_3 [cluster="Nancy.ViewEngines.DefaultViewResolver.DefaultViewResolver(Nancy.ViewEngines.IViewLocator, Nancy.Conventions.ViewLocationConventions)", file="EmbeddedStaticContentConventionBuilder.cs", label="conventions == null", span="25-25"];
m0_1 [cluster="Nancy.ViewEngines.DefaultViewResolver.DefaultViewResolver(Nancy.ViewEngines.IViewLocator, Nancy.Conventions.ViewLocationConventions)", file="EmbeddedStaticContentConventionBuilder.cs", label="viewLocator == null", span="20-20"];
m0_4 [cluster="Nancy.ViewEngines.DefaultViewResolver.DefaultViewResolver(Nancy.ViewEngines.IViewLocator, Nancy.Conventions.ViewLocationConventions)", file="EmbeddedStaticContentConventionBuilder.cs", label="throw new InvalidOperationException(''Cannot create an instance of DefaultViewResolver with conventions parameter having null value.'');", span="27-27"];
m0_2 [cluster="Nancy.ViewEngines.DefaultViewResolver.DefaultViewResolver(Nancy.ViewEngines.IViewLocator, Nancy.Conventions.ViewLocationConventions)", file="EmbeddedStaticContentConventionBuilder.cs", label="throw new InvalidOperationException(''Cannot create an instance of DefaultViewResolver with view locator parameter having null value.'');", span="22-22"];
m0_7 [cluster="Nancy.ViewEngines.DefaultViewResolver.DefaultViewResolver(Nancy.ViewEngines.IViewLocator, Nancy.Conventions.ViewLocationConventions)", file="EmbeddedStaticContentConventionBuilder.cs", label="Exit Nancy.ViewEngines.DefaultViewResolver.DefaultViewResolver(Nancy.ViewEngines.IViewLocator, Nancy.Conventions.ViewLocationConventions)", span="18-18"];
m0_33 [cluster="string.Concat(string, string, string)", file="EmbeddedStaticContentConventionBuilder.cs", label="Entry string.Concat(string, string, string)", span="0-0"];
m0_42 [cluster="lambda expression", file="EmbeddedStaticContentConventionBuilder.cs", label="Entry lambda expression", span="77-77"];
m0_36 [cluster="lambda expression", file="EmbeddedStaticContentConventionBuilder.cs", label="x.AppendLine(string.Concat(''[DefaultViewResolver] Attempting to locate view using convention ''', conventionBasedViewName, '''''))", span="65-65"];
m0_40 [cluster="lambda expression", file="EmbeddedStaticContentConventionBuilder.cs", label="x.AppendLine(string.Concat(''[DefaultViewResolver] View resolved at ''', conventionBasedViewName, '''''))", span="72-72"];
m0_31 [cluster="lambda expression", file="EmbeddedStaticContentConventionBuilder.cs", label="x.AppendLine(string.Concat(''[DefaultViewResolver] Resolving view for ''', viewName , ''', using view location conventions.''))", span="53-53"];
m0_35 [cluster="lambda expression", file="EmbeddedStaticContentConventionBuilder.cs", label="Entry lambda expression", span="65-65"];
m0_37 [cluster="lambda expression", file="EmbeddedStaticContentConventionBuilder.cs", label="Exit lambda expression", span="65-65"];
m0_39 [cluster="lambda expression", file="EmbeddedStaticContentConventionBuilder.cs", label="Entry lambda expression", span="72-72"];
m0_41 [cluster="lambda expression", file="EmbeddedStaticContentConventionBuilder.cs", label="Exit lambda expression", span="72-72"];
m0_30 [cluster="lambda expression", file="EmbeddedStaticContentConventionBuilder.cs", label="Entry lambda expression", span="53-53"];
m0_32 [cluster="lambda expression", file="EmbeddedStaticContentConventionBuilder.cs", label="Exit lambda expression", span="53-53"];
m0_43 [cluster="lambda expression", file="EmbeddedStaticContentConventionBuilder.cs", label="x.AppendLine(''[DefaultViewResolver] No view could be resolved using the available view location conventions.'')", span="77-77"];
m0_44 [cluster="lambda expression", file="EmbeddedStaticContentConventionBuilder.cs", label="Exit lambda expression", span="77-77"];
m0_29 [cluster="Nancy.ViewEngines.IViewLocator.LocateView(string)", file="EmbeddedStaticContentConventionBuilder.cs", label="Entry Nancy.ViewEngines.IViewLocator.LocateView(string)", span="12-12"];
m0_8 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="EmbeddedStaticContentConventionBuilder.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m0_49 [file="EmbeddedStaticContentConventionBuilder.cs", label="Nancy.ViewEngines.DefaultViewResolver", span=""];
m0_51 [file="EmbeddedStaticContentConventionBuilder.cs", label=conventionBasedViewName, span=""];
m0_50 [file="EmbeddedStaticContentConventionBuilder.cs", label=string, span=""];
m1_9 [cluster="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.Modules(params System.Type[])", file="PartialViewTests.cs", label="Entry Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.Modules(params System.Type[])", span="1004-1004"];
m1_20 [cluster="string.LastIndexOf(string, System.StringComparison)", file="PartialViewTests.cs", label="Entry string.LastIndexOf(string, System.StringComparison)", span="0-0"];
m1_0 [cluster="Nancy.Tests.Functional.Tests.PartialViewTests.PartialViewTests()", file="PartialViewTests.cs", label="Entry Nancy.Tests.Functional.Tests.PartialViewTests.PartialViewTests()", span="18-18"];
m1_1 [cluster="Nancy.Tests.Functional.Tests.PartialViewTests.PartialViewTests()", file="PartialViewTests.cs", label="this.bootstrapper = new ConfigurableBootstrapper(\r\n                    configuration => configuration.Modules(typeof(RazorTestModule)))", span="20-21"];
m1_2 [cluster="Nancy.Tests.Functional.Tests.PartialViewTests.PartialViewTests()", file="PartialViewTests.cs", label="this.browser = new Browser(bootstrapper)", span="23-23"];
m1_3 [cluster="Nancy.Tests.Functional.Tests.PartialViewTests.PartialViewTests()", file="PartialViewTests.cs", label="Exit Nancy.Tests.Functional.Tests.PartialViewTests.PartialViewTests()", span="18-18"];
m1_17 [cluster="Nancy.Testing.Browser.Get(string, System.Action<Nancy.Testing.BrowserContext>)", file="PartialViewTests.cs", label="Entry Nancy.Testing.Browser.Get(string, System.Action<Nancy.Testing.BrowserContext>)", span="76-76"];
m1_18 [cluster="Nancy.Testing.BrowserResponseBodyWrapper.AsString()", file="PartialViewTests.cs", label="Entry Nancy.Testing.BrowserResponseBodyWrapper.AsString()", span="30-30"];
m1_4 [cluster="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapper(System.Action<Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator>)", file="PartialViewTests.cs", label="Entry Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapper(System.Action<Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator>)", span="64-64"];
m1_21 [cluster="Unk.Equal", file="PartialViewTests.cs", label="Entry Unk.Equal", span=""];
m1_26 [cluster="Nancy.Tests.Functional.Tests.PartialViewTests.When_Partial_View_Could_Not_Be_Found_An_Meaningful_Exception_Should_Be_Thrown()", file="PartialViewTests.cs", label="Entry Nancy.Tests.Functional.Tests.PartialViewTests.When_Partial_View_Could_Not_Be_Found_An_Meaningful_Exception_Should_Be_Thrown()", span="49-49"];
m1_27 [cluster="Nancy.Tests.Functional.Tests.PartialViewTests.When_Partial_View_Could_Not_Be_Found_An_Meaningful_Exception_Should_Be_Thrown()", file="PartialViewTests.cs", label="var ex = await RecordAsync.Exception(async () =>\r\n            {\r\n                var response = await this.browser.Get(@''/razor-partialnotfound'');\r\n\r\n                response.Body.AsString();\r\n            })", span="51-56"];
m1_28 [cluster="Nancy.Tests.Functional.Tests.PartialViewTests.When_Partial_View_Could_Not_Be_Found_An_Meaningful_Exception_Should_Be_Thrown()", file="PartialViewTests.cs", label="Assert.IsType<ViewNotFoundException>(ex.GetBaseException())", span="58-58"];
m1_29 [cluster="Nancy.Tests.Functional.Tests.PartialViewTests.When_Partial_View_Could_Not_Be_Found_An_Meaningful_Exception_Should_Be_Thrown()", file="PartialViewTests.cs", label="Exit Nancy.Tests.Functional.Tests.PartialViewTests.When_Partial_View_Could_Not_Be_Found_An_Meaningful_Exception_Should_Be_Thrown()", span="49-49"];
m1_30 [cluster="Nancy.Tests.xUnitExtensions.RecordAsync.Exception(System.Func<System.Threading.Tasks.Task>)", file="PartialViewTests.cs", label="Entry Nancy.Tests.xUnitExtensions.RecordAsync.Exception(System.Func<System.Threading.Tasks.Task>)", span="8-8"];
m1_25 [cluster="Nancy.Testing.BrowserContext.HttpRequest()", file="PartialViewTests.cs", label="Entry Nancy.Testing.BrowserContext.HttpRequest()", span="156-156"];
m1_31 [cluster="System.Exception.GetBaseException()", file="PartialViewTests.cs", label="Entry System.Exception.GetBaseException()", span="0-0"];
m1_33 [cluster="lambda expression", file="PartialViewTests.cs", label="Entry lambda expression", span="51-56"];
m1_7 [cluster="lambda expression", file="PartialViewTests.cs", label="configuration.Modules(typeof(RazorTestModule))", span="21-21"];
m1_6 [cluster="lambda expression", file="PartialViewTests.cs", label="Entry lambda expression", span="21-21"];
m1_8 [cluster="lambda expression", file="PartialViewTests.cs", label="Exit lambda expression", span="21-21"];
m1_22 [cluster="lambda expression", file="PartialViewTests.cs", label="Entry lambda expression", span="33-36"];
m1_23 [cluster="lambda expression", file="PartialViewTests.cs", label="with.HttpRequest()", span="35-35"];
m1_24 [cluster="lambda expression", file="PartialViewTests.cs", label="Exit lambda expression", span="33-36"];
m1_34 [cluster="lambda expression", file="PartialViewTests.cs", label="var response = await this.browser.Get(@''/razor-partialnotfound'')", span="53-53"];
m1_35 [cluster="lambda expression", file="PartialViewTests.cs", label="response.Body.AsString()", span="55-55"];
m1_36 [cluster="lambda expression", file="PartialViewTests.cs", label="Exit lambda expression", span="51-56"];
m1_19 [cluster="string.IndexOf(string, System.StringComparison)", file="PartialViewTests.cs", label="Entry string.IndexOf(string, System.StringComparison)", span="0-0"];
m1_10 [cluster="Nancy.Tests.Functional.Tests.PartialViewTests.When_Using_Partial_View_Then_First_Index_Of_ViewStart_Should_Equal_Last_Index()", file="PartialViewTests.cs", label="Entry Nancy.Tests.Functional.Tests.PartialViewTests.When_Using_Partial_View_Then_First_Index_Of_ViewStart_Should_Equal_Last_Index()", span="27-27"];
m1_11 [cluster="Nancy.Tests.Functional.Tests.PartialViewTests.When_Using_Partial_View_Then_First_Index_Of_ViewStart_Should_Equal_Last_Index()", file="PartialViewTests.cs", label="var response = await browser.Get(\r\n                @''/razor-viewbag'',\r\n                with =>\r\n                {\r\n                    with.HttpRequest();\r\n                })", span="31-36"];
m1_12 [cluster="Nancy.Tests.Functional.Tests.PartialViewTests.When_Using_Partial_View_Then_First_Index_Of_ViewStart_Should_Equal_Last_Index()", file="PartialViewTests.cs", label="var body = response.Body.AsString()", span="39-39"];
m1_13 [cluster="Nancy.Tests.Functional.Tests.PartialViewTests.When_Using_Partial_View_Then_First_Index_Of_ViewStart_Should_Equal_Last_Index()", file="PartialViewTests.cs", label="var firstIndex = body.IndexOf(@''Hello World, this is the View Start...'', StringComparison.Ordinal)", span="41-41"];
m1_14 [cluster="Nancy.Tests.Functional.Tests.PartialViewTests.When_Using_Partial_View_Then_First_Index_Of_ViewStart_Should_Equal_Last_Index()", file="PartialViewTests.cs", label="var lastIndex = body.LastIndexOf(@''Hello World, this is the View Start...'', StringComparison.Ordinal)", span="42-42"];
m1_15 [cluster="Nancy.Tests.Functional.Tests.PartialViewTests.When_Using_Partial_View_Then_First_Index_Of_ViewStart_Should_Equal_Last_Index()", file="PartialViewTests.cs", label="Assert.Equal(firstIndex, lastIndex)", span="45-45"];
m1_16 [cluster="Nancy.Tests.Functional.Tests.PartialViewTests.When_Using_Partial_View_Then_First_Index_Of_ViewStart_Should_Equal_Last_Index()", file="PartialViewTests.cs", label="Exit Nancy.Tests.Functional.Tests.PartialViewTests.When_Using_Partial_View_Then_First_Index_Of_ViewStart_Should_Equal_Last_Index()", span="27-27"];
m1_5 [cluster="Nancy.Testing.Browser.Browser(Nancy.Bootstrapper.INancyBootstrapper, System.Action<Nancy.Testing.BrowserContext>)", file="PartialViewTests.cs", label="Entry Nancy.Testing.Browser.Browser(Nancy.Bootstrapper.INancyBootstrapper, System.Action<Nancy.Testing.BrowserContext>)", span="40-40"];
m1_37 [file="PartialViewTests.cs", label="Nancy.Tests.Functional.Tests.PartialViewTests", span=""];
m2_158 [cluster="string.Format(string, object, object)", file="StaticContentConventionBuilderFixture.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m2_13 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetStaticContent(string, string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StaticContentConventionBuilderFixture.cs", label="Entry Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetStaticContent(string, string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", span="258-258"];
m2_129 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetStaticContent(string, string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StaticContentConventionBuilderFixture.cs", label="var response = this.GetStaticContentResponse(virtualDirectory, requestedFilename, root, headers)", span="260-260"];
m2_130 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetStaticContent(string, string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StaticContentConventionBuilderFixture.cs", label="var fileResponse = response as GenericFileResponse", span="262-262"];
m2_135 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetStaticContent(string, string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StaticContentConventionBuilderFixture.cs", label="return string.Format(''Static content returned an invalid response of {0}'', response == null ? ''(null)'' : response.GetType().ToString());", span="273-273"];
m2_131 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetStaticContent(string, string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StaticContentConventionBuilderFixture.cs", label="fileResponse != null", span="264-264"];
m2_133 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetStaticContent(string, string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StaticContentConventionBuilderFixture.cs", label="fileResponse.Contents(stream)", span="268-268"];
m2_132 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetStaticContent(string, string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StaticContentConventionBuilderFixture.cs", label="var stream = new MemoryStream()", span="266-266"];
m2_134 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetStaticContent(string, string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StaticContentConventionBuilderFixture.cs", label="return Encoding.UTF8.GetString(stream.ToArray());", span="269-269"];
m2_136 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetStaticContent(string, string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StaticContentConventionBuilderFixture.cs", label="Exit Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetStaticContent(string, string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", span="258-258"];
m2_8 [cluster="Nancy.Configuration.INancyEnvironment.StaticContent(params string[])", file="StaticContentConventionBuilderFixture.cs", label="Entry Nancy.Configuration.INancyEnvironment.StaticContent(params string[])", span="15-15"];
m2_5 [cluster="System.IO.DirectoryInfo.DirectoryInfo(string)", file="StaticContentConventionBuilderFixture.cs", label="Entry System.IO.DirectoryInfo.DirectoryInfo(string)", span="0-0"];
m2_111 [cluster="System.DateTime.ToString(string, System.IFormatProvider)", file="StaticContentConventionBuilderFixture.cs", label="Entry System.DateTime.ToString(string, System.IFormatProvider)", span="0-0"];
m2_39 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_skip_the_request_if_resource_is_outside_the_content_folder()", file="StaticContentConventionBuilderFixture.cs", label="Entry Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_skip_the_request_if_resource_is_outside_the_content_folder()", span="115-115"];
m2_40 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_skip_the_request_if_resource_is_outside_the_content_folder()", file="StaticContentConventionBuilderFixture.cs", label="var result = GetStaticContent(''css'', ''../../outside/styles.css'')", span="119-119"];
m2_41 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_skip_the_request_if_resource_is_outside_the_content_folder()", file="StaticContentConventionBuilderFixture.cs", label="result.ShouldEqual(''Static content returned an invalid response of (null)'')", span="122-122"];
m2_42 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_skip_the_request_if_resource_is_outside_the_content_folder()", file="StaticContentConventionBuilderFixture.cs", label="Exit Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_skip_the_request_if_resource_is_outside_the_content_folder()", span="115-115"];
m2_66 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_throw_security_exception_when_content_path_is_null_and_requested_path_points_to_root()", file="StaticContentConventionBuilderFixture.cs", label="Entry Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_throw_security_exception_when_content_path_is_null_and_requested_path_points_to_root()", span="158-158"];
m2_67 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_throw_security_exception_when_content_path_is_null_and_requested_path_points_to_root()", file="StaticContentConventionBuilderFixture.cs", label="var convention = StaticContentConventionBuilder.AddDirectory(''/'')", span="161-161"];
m2_68 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_throw_security_exception_when_content_path_is_null_and_requested_path_points_to_root()", file="StaticContentConventionBuilderFixture.cs", label="var request = new Request(''GET'', ''/face.png'', ''http'')", span="162-162"];
m2_70 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_throw_security_exception_when_content_path_is_null_and_requested_path_points_to_root()", file="StaticContentConventionBuilderFixture.cs", label="var exception = Record.Exception(() => convention.Invoke(context, directory))", span="169-169"];
m2_69 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_throw_security_exception_when_content_path_is_null_and_requested_path_points_to_root()", file="StaticContentConventionBuilderFixture.cs", label="var context = new NancyContext\r\n            {\r\n                Request = request\r\n            }", span="163-166"];
m2_71 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_throw_security_exception_when_content_path_is_null_and_requested_path_points_to_root()", file="StaticContentConventionBuilderFixture.cs", label="exception.ShouldBeOfType<ArgumentException>()", span="172-172"];
m2_72 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_throw_security_exception_when_content_path_is_null_and_requested_path_points_to_root()", file="StaticContentConventionBuilderFixture.cs", label="Exit Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_throw_security_exception_when_content_path_is_null_and_requested_path_points_to_root()", span="158-158"];
m2_141 [cluster="object.GetType()", file="StaticContentConventionBuilderFixture.cs", label="Entry object.GetType()", span="0-0"];
m2_124 [cluster="string.Format(string, object)", file="StaticContentConventionBuilderFixture.cs", label="Entry string.Format(string, object)", span="0-0"];
m2_83 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetStaticContentResponse(string, string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StaticContentConventionBuilderFixture.cs", label="Entry Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetStaticContentResponse(string, string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", span="276-276"];
m2_143 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetStaticContentResponse(string, string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StaticContentConventionBuilderFixture.cs", label="var context = GetContext(virtualDirectory, requestedFilename, headers)", span="278-278"];
m2_144 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetStaticContentResponse(string, string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StaticContentConventionBuilderFixture.cs", label="var resolver = GetResolver(virtualDirectory)", span="280-280"];
m2_145 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetStaticContentResponse(string, string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StaticContentConventionBuilderFixture.cs", label="var rootFolder = root ?? this.directory", span="282-282"];
m2_146 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetStaticContentResponse(string, string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StaticContentConventionBuilderFixture.cs", label="context.Environment = new DefaultNancyEnvironment()", span="284-284"];
m2_147 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetStaticContentResponse(string, string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StaticContentConventionBuilderFixture.cs", label="context.Environment.StaticContent(safepaths:rootFolder)", span="285-285"];
m2_148 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetStaticContentResponse(string, string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StaticContentConventionBuilderFixture.cs", label="var response = resolver.Invoke(context, rootFolder)", span="287-287"];
m2_149 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetStaticContentResponse(string, string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StaticContentConventionBuilderFixture.cs", label="return response;", span="288-288"];
m2_150 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetStaticContentResponse(string, string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StaticContentConventionBuilderFixture.cs", label="Exit Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetStaticContentResponse(string, string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", span="276-276"];
m2_85 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_not_modified_if_not_changed_and_conditional_request_on_modified_sent()", file="StaticContentConventionBuilderFixture.cs", label="Entry Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_not_modified_if_not_changed_and_conditional_request_on_modified_sent()", span="188-188"];
m2_86 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_not_modified_if_not_changed_and_conditional_request_on_modified_sent()", file="StaticContentConventionBuilderFixture.cs", label="var initialResult = this.GetStaticContentResponse(''css/css'', ''styles.css'')", span="190-190"];
m2_87 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_not_modified_if_not_changed_and_conditional_request_on_modified_sent()", file="StaticContentConventionBuilderFixture.cs", label="var moddedTime = initialResult.Headers[''Last-Modified'']", span="191-191"];
m2_88 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_not_modified_if_not_changed_and_conditional_request_on_modified_sent()", file="StaticContentConventionBuilderFixture.cs", label="var headers = new Dictionary<string, IEnumerable<string>> { { ''If-Modified-Since'', new[] { moddedTime } } }", span="192-192"];
m2_89 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_not_modified_if_not_changed_and_conditional_request_on_modified_sent()", file="StaticContentConventionBuilderFixture.cs", label="var result = this.GetStaticContentResponse(''css/css'', ''styles.css'', headers: headers)", span="194-194"];
m2_90 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_not_modified_if_not_changed_and_conditional_request_on_modified_sent()", file="StaticContentConventionBuilderFixture.cs", label="result.StatusCode.ShouldEqual(HttpStatusCode.NotModified)", span="196-196"];
m2_91 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_not_modified_if_not_changed_and_conditional_request_on_modified_sent()", file="StaticContentConventionBuilderFixture.cs", label="Exit Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_not_modified_if_not_changed_and_conditional_request_on_modified_sent()", span="188-188"];
m2_35 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_path_contains_dot()", file="StaticContentConventionBuilderFixture.cs", label="Entry Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_path_contains_dot()", span="104-104"];
m2_36 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_path_contains_dot()", file="StaticContentConventionBuilderFixture.cs", label="var result = GetStaticContent(''css/Sub.folder'', ''styles.css'')", span="108-108"];
m2_37 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_path_contains_dot()", file="StaticContentConventionBuilderFixture.cs", label="result.ShouldEqual(StylesheetContents)", span="111-111"];
m2_38 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_path_contains_dot()", file="StaticContentConventionBuilderFixture.cs", label="Exit Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_path_contains_dot()", span="104-104"];
m2_50 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_throw_security_exception_when_content_path_points_to_root()", file="StaticContentConventionBuilderFixture.cs", label="Entry Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_throw_security_exception_when_content_path_points_to_root()", span="140-140"];
m2_51 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_throw_security_exception_when_content_path_points_to_root()", file="StaticContentConventionBuilderFixture.cs", label="var convention = StaticContentConventionBuilder.AddDirectory(''/'', ''/'')", span="143-143"];
m2_52 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_throw_security_exception_when_content_path_points_to_root()", file="StaticContentConventionBuilderFixture.cs", label="var request = new Request(''GET'', ''/face.png'', ''http'')", span="144-144"];
m2_54 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_throw_security_exception_when_content_path_points_to_root()", file="StaticContentConventionBuilderFixture.cs", label="var exception = Record.Exception(() => convention.Invoke(context, directory))", span="151-151"];
m2_53 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_throw_security_exception_when_content_path_points_to_root()", file="StaticContentConventionBuilderFixture.cs", label="var context = new NancyContext\r\n            {\r\n                Request = request\r\n            }", span="145-148"];
m2_55 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_throw_security_exception_when_content_path_points_to_root()", file="StaticContentConventionBuilderFixture.cs", label="exception.ShouldBeOfType<ArgumentException>()", span="154-154"];
m2_56 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_throw_security_exception_when_content_path_points_to_root()", file="StaticContentConventionBuilderFixture.cs", label="Exit Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_throw_security_exception_when_content_path_points_to_root()", span="140-140"];
m2_14 [cluster="object.ShouldEqual(object)", file="StaticContentConventionBuilderFixture.cs", label="Entry object.ShouldEqual(object)", span="106-106"];
m2_61 [cluster="Unk.>", file="StaticContentConventionBuilderFixture.cs", label="Entry Unk.>", span=""];
m2_142 [cluster="System.Type.ToString()", file="StaticContentConventionBuilderFixture.cs", label="Entry System.Type.ToString()", span="0-0"];
m2_112 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Not_modified_response_should_have_no_body()", file="StaticContentConventionBuilderFixture.cs", label="Entry Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Not_modified_response_should_have_no_body()", span="227-227"];
m2_113 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Not_modified_response_should_have_no_body()", file="StaticContentConventionBuilderFixture.cs", label="var initialResult = this.GetStaticContentResponse(''css/css'', ''styles.css'')", span="229-229"];
m2_114 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Not_modified_response_should_have_no_body()", file="StaticContentConventionBuilderFixture.cs", label="var etag = initialResult.Headers[''ETag'']", span="230-230"];
m2_115 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Not_modified_response_should_have_no_body()", file="StaticContentConventionBuilderFixture.cs", label="var headers = new Dictionary<string, IEnumerable<string>> { { ''If-None-Match'', new[] { etag } } }", span="231-231"];
m2_116 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Not_modified_response_should_have_no_body()", file="StaticContentConventionBuilderFixture.cs", label="var result = this.GetStaticContent(''css/css'', ''styles.css'', headers: headers)", span="233-233"];
m2_117 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Not_modified_response_should_have_no_body()", file="StaticContentConventionBuilderFixture.cs", label="result.ShouldEqual(string.Empty)", span="235-235"];
m2_118 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Not_modified_response_should_have_no_body()", file="StaticContentConventionBuilderFixture.cs", label="Exit Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Not_modified_response_should_have_no_body()", span="227-227"];
m2_160 [cluster="Nancy.Url.Url()", file="StaticContentConventionBuilderFixture.cs", label="Entry Nancy.Url.Url()", span="21-21"];
m2_43 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_root_is_relative_path()", file="StaticContentConventionBuilderFixture.cs", label="Entry Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_root_is_relative_path()", span="126-126"];
m2_44 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_root_is_relative_path()", file="StaticContentConventionBuilderFixture.cs", label="var resources = Path.Combine(directory, ''Resources'')", span="129-129"];
m2_45 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_root_is_relative_path()", file="StaticContentConventionBuilderFixture.cs", label="var relativeRootFolder = Path.Combine(resources, @''../'')", span="130-130"];
m2_46 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_root_is_relative_path()", file="StaticContentConventionBuilderFixture.cs", label="var result = GetStaticContent(''css'', ''styles.css'', relativeRootFolder)", span="133-133"];
m2_47 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_root_is_relative_path()", file="StaticContentConventionBuilderFixture.cs", label="result.ShouldEqual(StylesheetContents)", span="136-136"];
m2_48 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_root_is_relative_path()", file="StaticContentConventionBuilderFixture.cs", label="Exit Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_root_is_relative_path()", span="126-126"];
m2_57 [cluster="Nancy.Conventions.StaticContentConventionBuilder.AddDirectory(string, string, params string[])", file="StaticContentConventionBuilderFixture.cs", label="Entry Nancy.Conventions.StaticContentConventionBuilder.AddDirectory(string, string, params string[])", span="33-33"];
m2_138 [cluster="System.Action<T>.Invoke(T)", file="StaticContentConventionBuilderFixture.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m2_9 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_file_name_contains_url_encoded_spaces()", file="StaticContentConventionBuilderFixture.cs", label="Entry Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_file_name_contains_url_encoded_spaces()", span="38-38"];
m2_10 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_file_name_contains_url_encoded_spaces()", file="StaticContentConventionBuilderFixture.cs", label="var result = GetStaticContent(''css'', ''space%20in%20name.css'')", span="42-42"];
m2_11 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_file_name_contains_url_encoded_spaces()", file="StaticContentConventionBuilderFixture.cs", label="result.ShouldEqual(StylesheetContents)", span="45-45"];
m2_12 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_file_name_contains_url_encoded_spaces()", file="StaticContentConventionBuilderFixture.cs", label="Exit Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_file_name_contains_url_encoded_spaces()", span="38-38"];
m2_119 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_not_throw_exception_when_path_contains_invalid_filename_character(char)", file="StaticContentConventionBuilderFixture.cs", label="Entry Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_not_throw_exception_when_path_contains_invalid_filename_character(char)", span="243-243"];
m2_120 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_not_throw_exception_when_path_contains_invalid_filename_character(char)", file="StaticContentConventionBuilderFixture.cs", label="var fileName = string.Format(''name{0}.ext'', invalidCharacter)", span="246-246"];
m2_121 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_not_throw_exception_when_path_contains_invalid_filename_character(char)", file="StaticContentConventionBuilderFixture.cs", label="var exception = Record.Exception(() =>\r\n                {\r\n                    this.GetStaticContent(''css/css'', fileName);\r\n                })", span="249-252"];
m2_122 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_not_throw_exception_when_path_contains_invalid_filename_character(char)", file="StaticContentConventionBuilderFixture.cs", label="exception.ShouldBeNull()", span="255-255"];
m2_123 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_not_throw_exception_when_path_contains_invalid_filename_character(char)", file="StaticContentConventionBuilderFixture.cs", label="Exit Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_not_throw_exception_when_path_contains_invalid_filename_character(char)", span="243-243"];
m2_6 [cluster="System.Type.GetAssembly()", file="StaticContentConventionBuilderFixture.cs", label="Entry System.Type.GetAssembly()", span="42-42"];
m2_84 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="StaticContentConventionBuilderFixture.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m2_162 [cluster="Nancy.Diagnostics.DefaultTraceLog.DefaultTraceLog()", file="StaticContentConventionBuilderFixture.cs", label="Entry Nancy.Diagnostics.DefaultTraceLog.DefaultTraceLog()", span="15-15"];
m2_15 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_path_has_same_name_as_extension()", file="StaticContentConventionBuilderFixture.cs", label="Entry Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_path_has_same_name_as_extension()", span="49-49"];
m2_16 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_path_has_same_name_as_extension()", file="StaticContentConventionBuilderFixture.cs", label="var result = GetStaticContent(''css'', ''styles.css'')", span="53-53"];
m2_17 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_path_has_same_name_as_extension()", file="StaticContentConventionBuilderFixture.cs", label="result.ShouldEqual(StylesheetContents)", span="56-56"];
m2_18 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_path_has_same_name_as_extension()", file="StaticContentConventionBuilderFixture.cs", label="Exit Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_path_has_same_name_as_extension()", span="49-49"];
m2_92 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_full_response_if_changed_and_conditional_request_on_etag_sent()", file="StaticContentConventionBuilderFixture.cs", label="Entry Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_full_response_if_changed_and_conditional_request_on_etag_sent()", span="200-200"];
m2_93 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_full_response_if_changed_and_conditional_request_on_etag_sent()", file="StaticContentConventionBuilderFixture.cs", label="var initialResult = this.GetStaticContentResponse(''css/css'', ''styles.css'')", span="202-202"];
m2_94 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_full_response_if_changed_and_conditional_request_on_etag_sent()", file="StaticContentConventionBuilderFixture.cs", label="var etag = initialResult.Headers[''ETag'']", span="203-203"];
m2_95 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_full_response_if_changed_and_conditional_request_on_etag_sent()", file="StaticContentConventionBuilderFixture.cs", label="var headers = new Dictionary<string, IEnumerable<string>> { { ''If-None-Match'', new[] { etag.Substring(1) } } }", span="204-204"];
m2_96 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_full_response_if_changed_and_conditional_request_on_etag_sent()", file="StaticContentConventionBuilderFixture.cs", label="var result = this.GetStaticContentResponse(''css/css'', ''styles.css'', headers: headers)", span="206-206"];
m2_97 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_full_response_if_changed_and_conditional_request_on_etag_sent()", file="StaticContentConventionBuilderFixture.cs", label="result.StatusCode.ShouldEqual(HttpStatusCode.OK)", span="208-208"];
m2_98 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_full_response_if_changed_and_conditional_request_on_etag_sent()", file="StaticContentConventionBuilderFixture.cs", label="Exit Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_full_response_if_changed_and_conditional_request_on_etag_sent()", span="200-200"];
m2_161 [cluster="Nancy.Diagnostics.DefaultRequestTrace.DefaultRequestTrace()", file="StaticContentConventionBuilderFixture.cs", label="Entry Nancy.Diagnostics.DefaultRequestTrace.DefaultRequestTrace()", span="7-7"];
m2_7 [cluster="Nancy.Configuration.DefaultNancyEnvironment.DefaultNancyEnvironment()", file="StaticContentConventionBuilderFixture.cs", label="Entry Nancy.Configuration.DefaultNancyEnvironment.DefaultNancyEnvironment()", span="9-9"];
m2_19 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_virtual_directory_name_exists_in_static_route()", file="StaticContentConventionBuilderFixture.cs", label="Entry Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_virtual_directory_name_exists_in_static_route()", span="60-60"];
m2_20 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_virtual_directory_name_exists_in_static_route()", file="StaticContentConventionBuilderFixture.cs", label="var result = GetStaticContent(''css'', ''strange-css-filename.css'')", span="64-64"];
m2_21 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_virtual_directory_name_exists_in_static_route()", file="StaticContentConventionBuilderFixture.cs", label="result.ShouldEqual(StylesheetContents)", span="67-67"];
m2_22 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_virtual_directory_name_exists_in_static_route()", file="StaticContentConventionBuilderFixture.cs", label="Exit Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_virtual_directory_name_exists_in_static_route()", span="60-60"];
m2_59 [cluster="Nancy.NancyContext.NancyContext()", file="StaticContentConventionBuilderFixture.cs", label="Entry Nancy.NancyContext.NancyContext()", span="26-26"];
m2_126 [cluster="lambda expression", file="StaticContentConventionBuilderFixture.cs", label="Entry lambda expression", span="249-252"];
m2_63 [cluster="lambda expression", file="StaticContentConventionBuilderFixture.cs", label="convention.Invoke(context, directory)", span="151-151"];
m2_62 [cluster="lambda expression", file="StaticContentConventionBuilderFixture.cs", label="Entry lambda expression", span="151-151"];
m2_64 [cluster="lambda expression", file="StaticContentConventionBuilderFixture.cs", label="Exit lambda expression", span="151-151"];
m2_74 [cluster="lambda expression", file="StaticContentConventionBuilderFixture.cs", label="convention.Invoke(context, directory)", span="169-169"];
m2_73 [cluster="lambda expression", file="StaticContentConventionBuilderFixture.cs", label="Entry lambda expression", span="169-169"];
m2_75 [cluster="lambda expression", file="StaticContentConventionBuilderFixture.cs", label="Exit lambda expression", span="169-169"];
m2_127 [cluster="lambda expression", file="StaticContentConventionBuilderFixture.cs", label="this.GetStaticContent(''css/css'', fileName)", span="251-251"];
m2_128 [cluster="lambda expression", file="StaticContentConventionBuilderFixture.cs", label="Exit lambda expression", span="249-252"];
m2_31 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_filename_contains_dot()", file="StaticContentConventionBuilderFixture.cs", label="Entry Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_filename_contains_dot()", span="93-93"];
m2_32 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_filename_contains_dot()", file="StaticContentConventionBuilderFixture.cs", label="var result = GetStaticContent(''css'', ''dotted.filename.css'')", span="97-97"];
m2_33 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_filename_contains_dot()", file="StaticContentConventionBuilderFixture.cs", label="result.ShouldEqual(StylesheetContents)", span="100-100"];
m2_34 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_filename_contains_dot()", file="StaticContentConventionBuilderFixture.cs", label="Exit Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_filename_contains_dot()", span="93-93"];
m2_110 [cluster="System.DateTime.AddHours(double)", file="StaticContentConventionBuilderFixture.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m2_137 [cluster="System.IO.MemoryStream.MemoryStream()", file="StaticContentConventionBuilderFixture.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m2_60 [cluster="Unk.Exception", file="StaticContentConventionBuilderFixture.cs", label="Entry Unk.Exception", span=""];
m2_0 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.StaticContentConventionBuilderFixture()", file="StaticContentConventionBuilderFixture.cs", label="Entry Nancy.Tests.Unit.StaticContentConventionBuilderFixture.StaticContentConventionBuilderFixture()", span="25-25"];
m2_2 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.StaticContentConventionBuilderFixture()", file="StaticContentConventionBuilderFixture.cs", label="this.environment = new DefaultNancyEnvironment()", span="33-33"];
m2_3 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.StaticContentConventionBuilderFixture()", file="StaticContentConventionBuilderFixture.cs", label="this.environment.StaticContent(safepaths:this.directory)", span="34-34"];
m2_4 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.StaticContentConventionBuilderFixture()", file="StaticContentConventionBuilderFixture.cs", label="Exit Nancy.Tests.Unit.StaticContentConventionBuilderFixture.StaticContentConventionBuilderFixture()", span="25-25"];
m2_76 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_not_modified_if_not_changed_and_conditional_request_on_etag_sent()", file="StaticContentConventionBuilderFixture.cs", label="Entry Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_not_modified_if_not_changed_and_conditional_request_on_etag_sent()", span="176-176"];
m2_77 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_not_modified_if_not_changed_and_conditional_request_on_etag_sent()", file="StaticContentConventionBuilderFixture.cs", label="var initialResult = this.GetStaticContentResponse(''css/css'', ''styles.css'')", span="178-178"];
m2_78 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_not_modified_if_not_changed_and_conditional_request_on_etag_sent()", file="StaticContentConventionBuilderFixture.cs", label="var etag = initialResult.Headers[''ETag'']", span="179-179"];
m2_79 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_not_modified_if_not_changed_and_conditional_request_on_etag_sent()", file="StaticContentConventionBuilderFixture.cs", label="var headers = new Dictionary<string, IEnumerable<string>> { { ''If-None-Match'', new[] { etag } } }", span="180-180"];
m2_80 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_not_modified_if_not_changed_and_conditional_request_on_etag_sent()", file="StaticContentConventionBuilderFixture.cs", label="var result = this.GetStaticContentResponse(''css/css'', ''styles.css'', headers: headers)", span="182-182"];
m2_81 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_not_modified_if_not_changed_and_conditional_request_on_etag_sent()", file="StaticContentConventionBuilderFixture.cs", label="result.StatusCode.ShouldEqual(HttpStatusCode.NotModified)", span="184-184"];
m2_82 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_not_modified_if_not_changed_and_conditional_request_on_etag_sent()", file="StaticContentConventionBuilderFixture.cs", label="Exit Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_not_modified_if_not_changed_and_conditional_request_on_etag_sent()", span="176-176"];
m2_49 [cluster="System.IO.Path.Combine(string, string)", file="StaticContentConventionBuilderFixture.cs", label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m2_27 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_path_contains_nested_folders_with_duplicate_name()", file="StaticContentConventionBuilderFixture.cs", label="Entry Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_path_contains_nested_folders_with_duplicate_name()", span="82-82"];
m2_28 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_path_contains_nested_folders_with_duplicate_name()", file="StaticContentConventionBuilderFixture.cs", label="var result = GetStaticContent(''css/css'', ''styles.css'')", span="86-86"];
m2_29 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_path_contains_nested_folders_with_duplicate_name()", file="StaticContentConventionBuilderFixture.cs", label="result.ShouldEqual(StylesheetContents)", span="89-89"];
m2_30 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_path_contains_nested_folders_with_duplicate_name()", file="StaticContentConventionBuilderFixture.cs", label="Exit Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_path_contains_nested_folders_with_duplicate_name()", span="82-82"];
m2_152 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetResolver(string)", file="StaticContentConventionBuilderFixture.cs", label="Entry Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetResolver(string)", span="313-313"];
m2_163 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetResolver(string)", file="StaticContentConventionBuilderFixture.cs", label="return StaticContentConventionBuilder.AddDirectory(virtualDirectory, ''Resources/Assets/Styles'');", span="315-315"];
m2_164 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetResolver(string)", file="StaticContentConventionBuilderFixture.cs", label="Exit Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetResolver(string)", span="313-313"];
m2_139 [cluster="System.IO.MemoryStream.ToArray()", file="StaticContentConventionBuilderFixture.cs", label="Entry System.IO.MemoryStream.ToArray()", span="0-0"];
m2_23 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_path_is_nested()", file="StaticContentConventionBuilderFixture.cs", label="Entry Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_path_is_nested()", span="71-71"];
m2_24 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_path_is_nested()", file="StaticContentConventionBuilderFixture.cs", label="var result = GetStaticContent(''css/sub'', ''styles.css'')", span="75-75"];
m2_25 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_path_is_nested()", file="StaticContentConventionBuilderFixture.cs", label="result.ShouldEqual(StylesheetContents)", span="78-78"];
m2_26 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_path_is_nested()", file="StaticContentConventionBuilderFixture.cs", label="Exit Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_path_is_nested()", span="71-71"];
m2_109 [cluster="System.DateTime.ParseExact(string, string, System.IFormatProvider, System.Globalization.DateTimeStyles)", file="StaticContentConventionBuilderFixture.cs", label="Entry System.DateTime.ParseExact(string, string, System.IFormatProvider, System.Globalization.DateTimeStyles)", span="0-0"];
m2_65 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="StaticContentConventionBuilderFixture.cs", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
m2_140 [cluster="System.Text.Encoding.GetString(byte[])", file="StaticContentConventionBuilderFixture.cs", label="Entry System.Text.Encoding.GetString(byte[])", span="0-0"];
m2_125 [cluster="Unk.ShouldBeNull", file="StaticContentConventionBuilderFixture.cs", label="Entry Unk.ShouldBeNull", span=""];
m2_159 [cluster="Nancy.Request.Request(string, Nancy.Url, System.IO.Stream, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, string, System.Security.Cryptography.X509Certificates.X509Certificate, string)", file="StaticContentConventionBuilderFixture.cs", label="Entry Nancy.Request.Request(string, Nancy.Url, System.IO.Stream, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, string, System.Security.Cryptography.X509Certificates.X509Certificate, string)", span="50-50"];
m2_100 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_full_response_if_changed_and_conditional_request_on_modified_sent()", file="StaticContentConventionBuilderFixture.cs", label="Entry Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_full_response_if_changed_and_conditional_request_on_modified_sent()", span="212-212"];
m2_101 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_full_response_if_changed_and_conditional_request_on_modified_sent()", file="StaticContentConventionBuilderFixture.cs", label="var initialResult = this.GetStaticContentResponse(''css/css'', ''styles.css'')", span="214-214"];
m2_102 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_full_response_if_changed_and_conditional_request_on_modified_sent()", file="StaticContentConventionBuilderFixture.cs", label="var moddedTimeString = initialResult.Headers[''Last-Modified'']", span="215-215"];
m2_103 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_full_response_if_changed_and_conditional_request_on_modified_sent()", file="StaticContentConventionBuilderFixture.cs", label="var moddedTime = DateTime.ParseExact(moddedTimeString, ''R'', CultureInfo.InvariantCulture, DateTimeStyles.None)\r\n                                     .AddHours(-1)", span="216-217"];
m2_104 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_full_response_if_changed_and_conditional_request_on_modified_sent()", file="StaticContentConventionBuilderFixture.cs", label="moddedTimeString = moddedTime.ToString(''R'', CultureInfo.InvariantCulture)", span="218-218"];
m2_105 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_full_response_if_changed_and_conditional_request_on_modified_sent()", file="StaticContentConventionBuilderFixture.cs", label="var headers = new Dictionary<string, IEnumerable<string>> { { ''If-Modified-Since'', new[] { moddedTimeString } } }", span="219-219"];
m2_106 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_full_response_if_changed_and_conditional_request_on_modified_sent()", file="StaticContentConventionBuilderFixture.cs", label="var result = this.GetStaticContentResponse(''css/css'', ''styles.css'', headers: headers)", span="221-221"];
m2_107 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_full_response_if_changed_and_conditional_request_on_modified_sent()", file="StaticContentConventionBuilderFixture.cs", label="result.StatusCode.ShouldEqual(HttpStatusCode.OK)", span="223-223"];
m2_108 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_full_response_if_changed_and_conditional_request_on_modified_sent()", file="StaticContentConventionBuilderFixture.cs", label="Exit Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_full_response_if_changed_and_conditional_request_on_modified_sent()", span="212-212"];
m2_151 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetContext(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StaticContentConventionBuilderFixture.cs", label="Entry Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetContext(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", span="291-291"];
m2_153 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetContext(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StaticContentConventionBuilderFixture.cs", label="var resource = string.Format(''/{0}/{1}'', virtualDirectory, requestedFilename)", span="293-293"];
m2_154 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetContext(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StaticContentConventionBuilderFixture.cs", label="var request = new Request(\r\n                              ''GET'',\r\n                              new Url { Path = resource, Scheme = ''http'' },\r\n                              headers: headers ?? new Dictionary<string, IEnumerable<string>>())", span="295-298"];
m2_155 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetContext(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StaticContentConventionBuilderFixture.cs", label="var context = new NancyContext\r\n            {\r\n                Request = request,\r\n                Trace = new DefaultRequestTrace\r\n                {\r\n                    TraceLog = new DefaultTraceLog(),\r\n                },\r\n                Environment = this.environment\r\n            }", span="300-308"];
m2_156 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetContext(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StaticContentConventionBuilderFixture.cs", label="return context;", span="310-310"];
m2_157 [cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetContext(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StaticContentConventionBuilderFixture.cs", label="Exit Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetContext(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", span="291-291"];
m2_99 [cluster="string.Substring(int)", file="StaticContentConventionBuilderFixture.cs", label="Entry string.Substring(int)", span="0-0"];
m2_165 [file="StaticContentConventionBuilderFixture.cs", label="Nancy.Tests.Unit.StaticContentConventionBuilderFixture", span=""];
m2_166 [file="StaticContentConventionBuilderFixture.cs", label=convention, span=""];
m2_167 [file="StaticContentConventionBuilderFixture.cs", label=context, span=""];
m2_168 [file="StaticContentConventionBuilderFixture.cs", label=convention, span=""];
m2_169 [file="StaticContentConventionBuilderFixture.cs", label=context, span=""];
m2_170 [file="StaticContentConventionBuilderFixture.cs", label=fileName, span=""];
m3_38 [cluster="long.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out long)", file="StreamResponseFixture.cs", label="Entry long.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out long)", span="0-0"];
m3_9 [cluster="Nancy.INancyEngine.HandleRequest(Nancy.Request)", file="StreamResponseFixture.cs", label="Entry Nancy.INancyEngine.HandleRequest(Nancy.Request)", span="21-21"];
m3_15 [cluster="Unk.ToDictionary", file="StreamResponseFixture.cs", label="Entry Unk.ToDictionary", span=""];
m3_10 [cluster="Nancy.Hosting.Aspnet.NancyHandler.SetNancyResponseToHttpResponse(HttpContextBase, Nancy.Response)", file="StreamResponseFixture.cs", label="Entry Nancy.Hosting.Aspnet.NancyHandler.SetNancyResponseToHttpResponse(HttpContextBase, Nancy.Response)", span="82-82"];
m3_39 [cluster="Nancy.Hosting.Aspnet.NancyHandler.SetNancyResponseToHttpResponse(HttpContextBase, Nancy.Response)", file="StreamResponseFixture.cs", label="SetHttpResponseHeaders(context, response)", span="84-84"];
m3_40 [cluster="Nancy.Hosting.Aspnet.NancyHandler.SetNancyResponseToHttpResponse(HttpContextBase, Nancy.Response)", file="StreamResponseFixture.cs", label="context.Response.ContentType = response.ContentType", span="86-86"];
m3_41 [cluster="Nancy.Hosting.Aspnet.NancyHandler.SetNancyResponseToHttpResponse(HttpContextBase, Nancy.Response)", file="StreamResponseFixture.cs", label="context.Response.StatusCode = (int)response.StatusCode", span="87-87"];
m3_42 [cluster="Nancy.Hosting.Aspnet.NancyHandler.SetNancyResponseToHttpResponse(HttpContextBase, Nancy.Response)", file="StreamResponseFixture.cs", label="response.Contents.Invoke(context.Response.OutputStream)", span="88-88"];
m3_43 [cluster="Nancy.Hosting.Aspnet.NancyHandler.SetNancyResponseToHttpResponse(HttpContextBase, Nancy.Response)", file="StreamResponseFixture.cs", label="Exit Nancy.Hosting.Aspnet.NancyHandler.SetNancyResponseToHttpResponse(HttpContextBase, Nancy.Response)", span="82-82"];
m3_21 [cluster="Unk.ToUpperInvariant", file="StreamResponseFixture.cs", label="Entry Unk.ToUpperInvariant", span=""];
m3_20 [cluster="Request.cstr", file="StreamResponseFixture.cs", label="Entry Request.cstr", span=""];
m3_22 [cluster="Unk.FromStream", file="StreamResponseFixture.cs", label="Entry Unk.FromStream", span=""];
m3_8 [cluster="Nancy.Hosting.Aspnet.NancyHandler.CreateNancyRequest(HttpContextBase)", file="StreamResponseFixture.cs", label="Entry Nancy.Hosting.Aspnet.NancyHandler.CreateNancyRequest(HttpContextBase)", span="29-29"];
m3_11 [cluster="Nancy.Hosting.Aspnet.NancyHandler.CreateNancyRequest(HttpContextBase)", file="StreamResponseFixture.cs", label="var expectedRequestLength =\r\n                GetExpectedRequestLength(context.Request.Headers.ToDictionary())", span="31-32"];
m3_12 [cluster="Nancy.Hosting.Aspnet.NancyHandler.CreateNancyRequest(HttpContextBase)", file="StreamResponseFixture.cs", label="var nancyUrl = new Url\r\n                               {\r\n                                   Scheme = context.Request.Url.Scheme,\r\n                                   HostName = context.Request.Url.Host,\r\n                                   Port = context.Request.Url.Port,\r\n                                   BasePath = context.Request.ApplicationPath.TrimEnd('/'),\r\n                                   Path = context.Request.AppRelativeCurrentExecutionFilePath.Replace(''~'', string.Empty),\r\n                                   Query = context.Request.Url.Query,\r\n                                   Fragment = context.Request.Url.Fragment,\r\n                               }", span="34-43"];
m3_13 [cluster="Nancy.Hosting.Aspnet.NancyHandler.CreateNancyRequest(HttpContextBase)", file="StreamResponseFixture.cs", label="return new Request(\r\n                context.Request.HttpMethod.ToUpperInvariant(),\r\n                nancyUrl,\r\n                RequestStream.FromStream(context.Request.InputStream, expectedRequestLength, true),\r\n                context.Request.Headers.ToDictionary(),\r\n                context.Request.UserHostAddress);", span="45-50"];
m3_14 [cluster="Nancy.Hosting.Aspnet.NancyHandler.CreateNancyRequest(HttpContextBase)", file="StreamResponseFixture.cs", label="Exit Nancy.Hosting.Aspnet.NancyHandler.CreateNancyRequest(HttpContextBase)", span="29-29"];
m3_23 [cluster="Nancy.Hosting.Aspnet.NancyHandler.GetExpectedRequestLength(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StreamResponseFixture.cs", label="Entry Nancy.Hosting.Aspnet.NancyHandler.GetExpectedRequestLength(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", span="53-53"];
m3_24 [cluster="Nancy.Hosting.Aspnet.NancyHandler.GetExpectedRequestLength(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StreamResponseFixture.cs", label="incomingHeaders == null", span="55-55"];
m3_26 [cluster="Nancy.Hosting.Aspnet.NancyHandler.GetExpectedRequestLength(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StreamResponseFixture.cs", label="!incomingHeaders.ContainsKey(''Content-Length'')", span="60-60"];
m3_25 [cluster="Nancy.Hosting.Aspnet.NancyHandler.GetExpectedRequestLength(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StreamResponseFixture.cs", label="return 0;", span="57-57"];
m3_27 [cluster="Nancy.Hosting.Aspnet.NancyHandler.GetExpectedRequestLength(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StreamResponseFixture.cs", label="return 0;", span="62-62"];
m3_29 [cluster="Nancy.Hosting.Aspnet.NancyHandler.GetExpectedRequestLength(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StreamResponseFixture.cs", label="headerValue == null", span="68-68"];
m3_32 [cluster="Nancy.Hosting.Aspnet.NancyHandler.GetExpectedRequestLength(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StreamResponseFixture.cs", label="!long.TryParse(headerValue, NumberStyles.Any, CultureInfo.InvariantCulture, out contentLength)", span="74-74"];
m3_30 [cluster="Nancy.Hosting.Aspnet.NancyHandler.GetExpectedRequestLength(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StreamResponseFixture.cs", label="return 0;", span="70-70"];
m3_31 [cluster="Nancy.Hosting.Aspnet.NancyHandler.GetExpectedRequestLength(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StreamResponseFixture.cs", label="long contentLength", span="73-73"];
m3_33 [cluster="Nancy.Hosting.Aspnet.NancyHandler.GetExpectedRequestLength(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StreamResponseFixture.cs", label="return 0;", span="76-76"];
m3_34 [cluster="Nancy.Hosting.Aspnet.NancyHandler.GetExpectedRequestLength(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StreamResponseFixture.cs", label="return contentLength;", span="79-79"];
m3_35 [cluster="Nancy.Hosting.Aspnet.NancyHandler.GetExpectedRequestLength(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StreamResponseFixture.cs", label="Exit Nancy.Hosting.Aspnet.NancyHandler.GetExpectedRequestLength(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", span="53-53"];
m3_44 [cluster="Nancy.Hosting.Aspnet.NancyHandler.SetHttpResponseHeaders(HttpContextBase, Nancy.Response)", file="StreamResponseFixture.cs", label="Entry Nancy.Hosting.Aspnet.NancyHandler.SetHttpResponseHeaders(HttpContextBase, Nancy.Response)", span="91-91"];
m3_46 [cluster="Nancy.Hosting.Aspnet.NancyHandler.SetHttpResponseHeaders(HttpContextBase, Nancy.Response)", file="StreamResponseFixture.cs", label="response.Headers", span="93-93"];
m3_47 [cluster="Nancy.Hosting.Aspnet.NancyHandler.SetHttpResponseHeaders(HttpContextBase, Nancy.Response)", file="StreamResponseFixture.cs", label="context.Response.AddHeader(header.Key, header.Value)", span="95-95"];
m3_48 [cluster="Nancy.Hosting.Aspnet.NancyHandler.SetHttpResponseHeaders(HttpContextBase, Nancy.Response)", file="StreamResponseFixture.cs", label="response.Cookies", span="98-98"];
m3_49 [cluster="Nancy.Hosting.Aspnet.NancyHandler.SetHttpResponseHeaders(HttpContextBase, Nancy.Response)", file="StreamResponseFixture.cs", label="context.Response.AddHeader(''Set-Cookie'', cookie.ToString())", span="100-100"];
m3_50 [cluster="Nancy.Hosting.Aspnet.NancyHandler.SetHttpResponseHeaders(HttpContextBase, Nancy.Response)", file="StreamResponseFixture.cs", label="Exit Nancy.Hosting.Aspnet.NancyHandler.SetHttpResponseHeaders(HttpContextBase, Nancy.Response)", span="91-91"];
m3_37 [cluster="System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", file="StreamResponseFixture.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", span="0-0"];
m3_51 [cluster="Unk.AddHeader", file="StreamResponseFixture.cs", label="Entry Unk.AddHeader", span=""];
m3_3 [cluster="Nancy.Hosting.Aspnet.NancyHandler.ProcessRequest(HttpContextBase)", file="StreamResponseFixture.cs", label="Entry Nancy.Hosting.Aspnet.NancyHandler.ProcessRequest(HttpContextBase)", span="19-19"];
m3_6 [cluster="Nancy.Hosting.Aspnet.NancyHandler.ProcessRequest(HttpContextBase)", file="StreamResponseFixture.cs", label="SetNancyResponseToHttpResponse(context, nancyContext.Response)", span="25-25"];
m3_5 [cluster="Nancy.Hosting.Aspnet.NancyHandler.ProcessRequest(HttpContextBase)", file="StreamResponseFixture.cs", label="var nancyContext = this.engine.HandleRequest(request)", span="23-23"];
m3_7 [cluster="Nancy.Hosting.Aspnet.NancyHandler.ProcessRequest(HttpContextBase)", file="StreamResponseFixture.cs", label="Exit Nancy.Hosting.Aspnet.NancyHandler.ProcessRequest(HttpContextBase)", span="19-19"];
m3_45 [cluster="Unk.Invoke", file="StreamResponseFixture.cs", label="Entry Unk.Invoke", span=""];
m3_16 [cluster="Unk.GetExpectedRequestLength", file="StreamResponseFixture.cs", label="Entry Unk.GetExpectedRequestLength", span=""];
m3_36 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="StreamResponseFixture.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m3_0 [cluster="Nancy.Hosting.Aspnet.NancyHandler.NancyHandler(Nancy.INancyEngine)", file="StreamResponseFixture.cs", label="Entry Nancy.Hosting.Aspnet.NancyHandler.NancyHandler(Nancy.INancyEngine)", span="14-14"];
m3_1 [cluster="Nancy.Hosting.Aspnet.NancyHandler.NancyHandler(Nancy.INancyEngine)", file="StreamResponseFixture.cs", label="this.engine = engine", span="16-16"];
m3_2 [cluster="Nancy.Hosting.Aspnet.NancyHandler.NancyHandler(Nancy.INancyEngine)", file="StreamResponseFixture.cs", label="Exit Nancy.Hosting.Aspnet.NancyHandler.NancyHandler(Nancy.INancyEngine)", span="14-14"];
m3_19 [cluster="Unk.Replace", file="StreamResponseFixture.cs", label="Entry Unk.Replace", span=""];
m3_18 [cluster="Unk.TrimEnd", file="StreamResponseFixture.cs", label="Entry Unk.TrimEnd", span=""];
m3_52 [cluster="object.ToString()", file="StreamResponseFixture.cs", label="Entry object.ToString()", span="0-0"];
m3_53 [file="StreamResponseFixture.cs", label="Nancy.Hosting.Aspnet.NancyHandler", span=""];
m4_9 [cluster="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.Modules(params System.Type[])", file="TracingSmokeTests.cs", label="Entry Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.Modules(params System.Type[])", span="1004-1004"];
m4_0 [cluster="Nancy.Tests.Functional.Tests.TracingSmokeTests.TracingSmokeTests()", file="TracingSmokeTests.cs", label="Entry Nancy.Tests.Functional.Tests.TracingSmokeTests.TracingSmokeTests()", span="17-17"];
m4_1 [cluster="Nancy.Tests.Functional.Tests.TracingSmokeTests.TracingSmokeTests()", file="TracingSmokeTests.cs", label="this.bootstrapper = new ConfigurableBootstrapper(\r\n                    configuration => configuration.Modules(new Type[] { typeof(RazorWithTracingTestModule) }))", span="19-20"];
m4_2 [cluster="Nancy.Tests.Functional.Tests.TracingSmokeTests.TracingSmokeTests()", file="TracingSmokeTests.cs", label="this.browser = new Browser(bootstrapper)", span="22-22"];
m4_3 [cluster="Nancy.Tests.Functional.Tests.TracingSmokeTests.TracingSmokeTests()", file="TracingSmokeTests.cs", label="Exit Nancy.Tests.Functional.Tests.TracingSmokeTests.TracingSmokeTests()", span="17-17"];
m4_10 [cluster="Nancy.Tests.Functional.Tests.TracingSmokeTests.Should_render_content_from_viewbag()", file="TracingSmokeTests.cs", label="Entry Nancy.Tests.Functional.Tests.TracingSmokeTests.Should_render_content_from_viewbag()", span="26-26"];
m4_11 [cluster="Nancy.Tests.Functional.Tests.TracingSmokeTests.Should_render_content_from_viewbag()", file="TracingSmokeTests.cs", label="var response = await browser.Get(\r\n                @''/tracing/razor-viewbag'',\r\n                with =>\r\n                {\r\n                    with.HttpRequest();\r\n                })", span="30-35"];
m4_12 [cluster="Nancy.Tests.Functional.Tests.TracingSmokeTests.Should_render_content_from_viewbag()", file="TracingSmokeTests.cs", label="Assert.True(response.Body.AsString().Contains(@''Hello Bob''))", span="38-38"];
m4_13 [cluster="Nancy.Tests.Functional.Tests.TracingSmokeTests.Should_render_content_from_viewbag()", file="TracingSmokeTests.cs", label="Exit Nancy.Tests.Functional.Tests.TracingSmokeTests.Should_render_content_from_viewbag()", span="26-26"];
m4_16 [cluster="string.Contains(string)", file="TracingSmokeTests.cs", label="Entry string.Contains(string)", span="0-0"];
m4_14 [cluster="Nancy.Testing.Browser.Get(string, System.Action<Nancy.Testing.BrowserContext>)", file="TracingSmokeTests.cs", label="Entry Nancy.Testing.Browser.Get(string, System.Action<Nancy.Testing.BrowserContext>)", span="76-76"];
m4_17 [cluster="Unk.True", file="TracingSmokeTests.cs", label="Entry Unk.True", span=""];
m4_15 [cluster="Nancy.Testing.BrowserResponseBodyWrapper.AsString()", file="TracingSmokeTests.cs", label="Entry Nancy.Testing.BrowserResponseBodyWrapper.AsString()", span="30-30"];
m4_4 [cluster="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapper(System.Action<Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator>)", file="TracingSmokeTests.cs", label="Entry Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapper(System.Action<Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator>)", span="64-64"];
m4_21 [cluster="Nancy.Testing.BrowserContext.HttpRequest()", file="TracingSmokeTests.cs", label="Entry Nancy.Testing.BrowserContext.HttpRequest()", span="156-156"];
m4_18 [cluster="lambda expression", file="TracingSmokeTests.cs", label="Entry lambda expression", span="32-35"];
m4_7 [cluster="lambda expression", file="TracingSmokeTests.cs", label="configuration.Modules(new Type[] { typeof(RazorWithTracingTestModule) })", span="20-20"];
m4_6 [cluster="lambda expression", file="TracingSmokeTests.cs", label="Entry lambda expression", span="20-20"];
m4_8 [cluster="lambda expression", file="TracingSmokeTests.cs", label="Exit lambda expression", span="20-20"];
m4_19 [cluster="lambda expression", file="TracingSmokeTests.cs", label="with.HttpRequest()", span="34-34"];
m4_20 [cluster="lambda expression", file="TracingSmokeTests.cs", label="Exit lambda expression", span="32-35"];
m4_5 [cluster="Nancy.Testing.Browser.Browser(Nancy.Bootstrapper.INancyBootstrapper, System.Action<Nancy.Testing.BrowserContext>)", file="TracingSmokeTests.cs", label="Entry Nancy.Testing.Browser.Browser(Nancy.Bootstrapper.INancyBootstrapper, System.Action<Nancy.Testing.BrowserContext>)", span="40-40"];
m4_22 [file="TracingSmokeTests.cs", label="Nancy.Tests.Functional.Tests.TracingSmokeTests", span=""];
m5_29 [cluster="Nancy.Tests.Functional.Tests.ViewBagTests.Should_serialize_ViewBag()", file="ViewBagTests.cs", label="Entry Nancy.Tests.Functional.Tests.ViewBagTests.Should_serialize_ViewBag()", span="56-56"];
m5_30 [cluster="Nancy.Tests.Functional.Tests.ViewBagTests.Should_serialize_ViewBag()", file="ViewBagTests.cs", label="var response = await this.browser.Get(\r\n                @''/razor-viewbag-serialized'',\r\n                with =>\r\n                {\r\n                    with.HttpRequest();\r\n                    with.Accept(''application/json'');\r\n                })", span="59-65"];
m5_31 [cluster="Nancy.Tests.Functional.Tests.ViewBagTests.Should_serialize_ViewBag()", file="ViewBagTests.cs", label="var model = response.Body.DeserializeJson<ViewBagModel>()", span="68-68"];
m5_32 [cluster="Nancy.Tests.Functional.Tests.ViewBagTests.Should_serialize_ViewBag()", file="ViewBagTests.cs", label="Assert.Equal(''Bob'', model.Name)", span="71-71"];
m5_33 [cluster="Nancy.Tests.Functional.Tests.ViewBagTests.Should_serialize_ViewBag()", file="ViewBagTests.cs", label="Exit Nancy.Tests.Functional.Tests.ViewBagTests.Should_serialize_ViewBag()", span="56-56"];
m5_9 [cluster="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.Modules(params System.Type[])", file="ViewBagTests.cs", label="Entry Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.Modules(params System.Type[])", span="1004-1004"];
m5_45 [cluster="Nancy.Testing.Browser.Head(string, System.Action<Nancy.Testing.BrowserContext>)", file="ViewBagTests.cs", label="Entry Nancy.Testing.Browser.Head(string, System.Action<Nancy.Testing.BrowserContext>)", span="98-98"];
m5_10 [cluster="Nancy.Tests.Functional.Tests.ViewBagTests.Should_render_content_from_viewbag()", file="ViewBagTests.cs", label="Entry Nancy.Tests.Functional.Tests.ViewBagTests.Should_render_content_from_viewbag()", span="24-24"];
m5_11 [cluster="Nancy.Tests.Functional.Tests.ViewBagTests.Should_render_content_from_viewbag()", file="ViewBagTests.cs", label="var response = await browser.Get(\r\n                @''/razor-viewbag'',\r\n                with =>\r\n                {\r\n                    with.HttpRequest();\r\n                })", span="28-33"];
m5_12 [cluster="Nancy.Tests.Functional.Tests.ViewBagTests.Should_render_content_from_viewbag()", file="ViewBagTests.cs", label="Assert.True(response.Body.AsString().Contains(@''Hello Bob''))", span="36-36"];
m5_13 [cluster="Nancy.Tests.Functional.Tests.ViewBagTests.Should_render_content_from_viewbag()", file="ViewBagTests.cs", label="Exit Nancy.Tests.Functional.Tests.ViewBagTests.Should_render_content_from_viewbag()", span="24-24"];
m5_40 [cluster="Nancy.Testing.BrowserContext.Accept(Nancy.Responses.Negotiation.MediaRange)", file="ViewBagTests.cs", label="Entry Nancy.Testing.BrowserContext.Accept(Nancy.Responses.Negotiation.MediaRange)", span="173-173"];
m5_16 [cluster="string.Contains(string)", file="ViewBagTests.cs", label="Entry string.Contains(string)", span="0-0"];
m5_14 [cluster="Nancy.Testing.Browser.Get(string, System.Action<Nancy.Testing.BrowserContext>)", file="ViewBagTests.cs", label="Entry Nancy.Testing.Browser.Get(string, System.Action<Nancy.Testing.BrowserContext>)", span="76-76"];
m5_17 [cluster="Unk.True", file="ViewBagTests.cs", label="Entry Unk.True", span=""];
m5_34 [cluster="Nancy.Testing.BrowserResponseBodyWrapper.DeserializeJson<TModel>()", file="ViewBagTests.cs", label="Entry Nancy.Testing.BrowserResponseBodyWrapper.DeserializeJson<TModel>()", span="55-55"];
m5_15 [cluster="Nancy.Testing.BrowserResponseBodyWrapper.AsString()", file="ViewBagTests.cs", label="Entry Nancy.Testing.BrowserResponseBodyWrapper.AsString()", span="30-30"];
m5_4 [cluster="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapper(System.Action<Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator>)", file="ViewBagTests.cs", label="Entry Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapper(System.Action<Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator>)", span="64-64"];
m5_0 [cluster="Nancy.Tests.Functional.Tests.ViewBagTests.ViewBagTests()", file="ViewBagTests.cs", label="Entry Nancy.Tests.Functional.Tests.ViewBagTests.ViewBagTests()", span="15-15"];
m5_1 [cluster="Nancy.Tests.Functional.Tests.ViewBagTests.ViewBagTests()", file="ViewBagTests.cs", label="this.bootstrapper = new ConfigurableBootstrapper(\r\n                    configuration => configuration.Modules(typeof(RazorTestModule)))", span="17-18"];
m5_2 [cluster="Nancy.Tests.Functional.Tests.ViewBagTests.ViewBagTests()", file="ViewBagTests.cs", label="this.browser = new Browser(bootstrapper)", span="20-20"];
m5_3 [cluster="Nancy.Tests.Functional.Tests.ViewBagTests.ViewBagTests()", file="ViewBagTests.cs", label="Exit Nancy.Tests.Functional.Tests.ViewBagTests.ViewBagTests()", span="15-15"];
m5_35 [cluster="Unk.Equal", file="ViewBagTests.cs", label="Entry Unk.Equal", span=""];
m5_41 [cluster="Nancy.Tests.Functional.Tests.ViewBagTests.Should_return_200_on_head()", file="ViewBagTests.cs", label="Entry Nancy.Tests.Functional.Tests.ViewBagTests.Should_return_200_on_head()", span="75-75"];
m5_42 [cluster="Nancy.Tests.Functional.Tests.ViewBagTests.Should_return_200_on_head()", file="ViewBagTests.cs", label="var response = await this.browser.Head(@''/razor-viewbag'')", span="79-79"];
m5_43 [cluster="Nancy.Tests.Functional.Tests.ViewBagTests.Should_return_200_on_head()", file="ViewBagTests.cs", label="Assert.Equal(HttpStatusCode.OK, response.StatusCode)", span="82-82"];
m5_44 [cluster="Nancy.Tests.Functional.Tests.ViewBagTests.Should_return_200_on_head()", file="ViewBagTests.cs", label="Exit Nancy.Tests.Functional.Tests.ViewBagTests.Should_return_200_on_head()", span="75-75"];
m5_21 [cluster="Nancy.Testing.BrowserContext.HttpRequest()", file="ViewBagTests.cs", label="Entry Nancy.Testing.BrowserContext.HttpRequest()", span="156-156"];
m5_22 [cluster="Nancy.Tests.Functional.Tests.ViewBagTests.Should_render_content_from_viewbags()", file="ViewBagTests.cs", label="Entry Nancy.Tests.Functional.Tests.ViewBagTests.Should_render_content_from_viewbags()", span="40-40"];
m5_23 [cluster="Nancy.Tests.Functional.Tests.ViewBagTests.Should_render_content_from_viewbags()", file="ViewBagTests.cs", label="var response = await this.browser.Get(\r\n                @''/razor-viewbag'',\r\n                with =>\r\n                {\r\n                    with.HttpRequest();\r\n                })", span="44-49"];
m5_24 [cluster="Nancy.Tests.Functional.Tests.ViewBagTests.Should_render_content_from_viewbags()", file="ViewBagTests.cs", label="Assert.True(response.Body.AsString().Contains(@''Hello Bob''))", span="52-52"];
m5_25 [cluster="Nancy.Tests.Functional.Tests.ViewBagTests.Should_render_content_from_viewbags()", file="ViewBagTests.cs", label="Exit Nancy.Tests.Functional.Tests.ViewBagTests.Should_render_content_from_viewbags()", span="40-40"];
m5_36 [cluster="lambda expression", file="ViewBagTests.cs", label="Entry lambda expression", span="61-65"];
m5_7 [cluster="lambda expression", file="ViewBagTests.cs", label="configuration.Modules(typeof(RazorTestModule))", span="18-18"];
m5_6 [cluster="lambda expression", file="ViewBagTests.cs", label="Entry lambda expression", span="18-18"];
m5_8 [cluster="lambda expression", file="ViewBagTests.cs", label="Exit lambda expression", span="18-18"];
m5_18 [cluster="lambda expression", file="ViewBagTests.cs", label="Entry lambda expression", span="30-33"];
m5_19 [cluster="lambda expression", file="ViewBagTests.cs", label="with.HttpRequest()", span="32-32"];
m5_20 [cluster="lambda expression", file="ViewBagTests.cs", label="Exit lambda expression", span="30-33"];
m5_26 [cluster="lambda expression", file="ViewBagTests.cs", label="Entry lambda expression", span="46-49"];
m5_27 [cluster="lambda expression", file="ViewBagTests.cs", label="with.HttpRequest()", span="48-48"];
m5_28 [cluster="lambda expression", file="ViewBagTests.cs", label="Exit lambda expression", span="46-49"];
m5_37 [cluster="lambda expression", file="ViewBagTests.cs", label="with.HttpRequest()", span="63-63"];
m5_38 [cluster="lambda expression", file="ViewBagTests.cs", label="with.Accept(''application/json'')", span="64-64"];
m5_39 [cluster="lambda expression", file="ViewBagTests.cs", label="Exit lambda expression", span="61-65"];
m5_5 [cluster="Nancy.Testing.Browser.Browser(Nancy.Bootstrapper.INancyBootstrapper, System.Action<Nancy.Testing.BrowserContext>)", file="ViewBagTests.cs", label="Entry Nancy.Testing.Browser.Browser(Nancy.Bootstrapper.INancyBootstrapper, System.Action<Nancy.Testing.BrowserContext>)", span="40-40"];
m5_46 [file="ViewBagTests.cs", label="Nancy.Tests.Functional.Tests.ViewBagTests", span=""];
n427 -> n18  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture", style=dashed];
n427 -> n26  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture", style=dashed];
n427 -> n35  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture", style=dashed];
n427 -> n50  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture", style=dashed];
n427 -> n36  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture", style=dashed];
n427 -> n39  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture", style=dashed];
n427 -> n57  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture", style=dashed];
n427 -> n63  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture", style=dashed];
n427 -> n58  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture", style=dashed];
n427 -> n69  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture", style=dashed];
n427 -> n74  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture", style=dashed];
n427 -> n70  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture", style=dashed];
n427 -> n98  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture", style=dashed];
n427 -> n104  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture", style=dashed];
n427 -> n109  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture", style=dashed];
n427 -> n116  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture", style=dashed];
n427 -> n120  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture", style=dashed];
n427 -> n126  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture", style=dashed];
n427 -> n134  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture", style=dashed];
n427 -> n155  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture", style=dashed];
n427 -> n157  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture", style=dashed];
n427 -> n177  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture", style=dashed];
n427 -> n185  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture", style=dashed];
n427 -> n187  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture", style=dashed];
n427 -> n202  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture", style=dashed];
n427 -> n206  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture", style=dashed];
n427 -> n215  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture", style=dashed];
n427 -> n241  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture", style=dashed];
n427 -> n256  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture", style=dashed];
n427 -> n242  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture", style=dashed];
n427 -> n293  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture", style=dashed];
n427 -> n294  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture", style=dashed];
n427 -> n297  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture", style=dashed];
n427 -> n304  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture", style=dashed];
n427 -> n305  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture", style=dashed];
n427 -> n308  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture", style=dashed];
n427 -> n411  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture", style=dashed];
n428 -> n144  [color=darkseagreen4, key=1, label=hooks, style=dashed];
n428 -> n147  [color=darkseagreen4, key=1, label=hooks, style=dashed];
n429 -> n171  [color=darkseagreen4, key=1, label=hooks, style=dashed];
n429 -> n174  [color=darkseagreen4, key=1, label=hooks, style=dashed];
n430 -> n196  [color=darkseagreen4, key=1, label=hooks, style=dashed];
n430 -> n199  [color=darkseagreen4, key=1, label=hooks, style=dashed];
n431 -> n218  [color=darkseagreen4, key=1, label=fakeFormatter, style=dashed];
n432 -> n231  [color=darkseagreen4, key=1, label=fakeFormatter, style=dashed];
n433 -> n250  [color=darkseagreen4, key=1, label=hooks, style=dashed];
n433 -> n253  [color=darkseagreen4, key=1, label=hooks, style=dashed];
n434 -> n259  [color=darkseagreen4, key=1, label=fakeFormatter, style=dashed];
n435 -> n375  [color=darkseagreen4, key=1, label=storeConfig, style=dashed];
n436 -> n390  [color=darkseagreen4, key=1, label=storeConfig, style=dashed];
n437 -> n404  [color=darkseagreen4, key=1, label=storeConfig, style=dashed];
n17 -> n19  [color=darkseagreen4, key=1, label=response, style=dashed];
n25 -> n27  [color=darkseagreen4, key=1, label=response, style=dashed];
n32 -> n36  [color=darkseagreen4, key=1, label=response, style=dashed];
n32 -> n37  [color=darkseagreen4, key=1, label=response, style=dashed];
n33 -> n36  [color=darkseagreen4, key=1, label=session, style=dashed];
n38 -> n40  [color=darkseagreen4, key=1, label=cookie, style=dashed];
n38 -> n41  [color=darkseagreen4, key=1, label=cookie, style=dashed];
n38 -> n42  [color=darkseagreen4, key=1, label=cookie, style=dashed];
n38 -> n43  [color=darkseagreen4, key=1, label=cookie, style=dashed];
n35 -> n49  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n54 -> n58  [color=darkseagreen4, key=1, label=response, style=dashed];
n54 -> n59  [color=darkseagreen4, key=1, label=response, style=dashed];
n55 -> n58  [color=darkseagreen4, key=1, label=session, style=dashed];
n57 -> n62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n66 -> n70  [color=darkseagreen4, key=1, label=response, style=dashed];
n66 -> n71  [color=darkseagreen4, key=1, label=response, style=dashed];
n67 -> n70  [color=darkseagreen4, key=1, label=session, style=dashed];
n69 -> n73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n81 -> n407  [color=darkseagreen4, key=1, label=string, style=dashed];
n81 -> n410  [color=darkseagreen4, key=1, label=bool, style=dashed];
n98 -> n103  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n99 -> n101  [color=darkseagreen4, key=1, label=session, style=dashed];
n109 -> n115  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n110 -> n112  [color=darkseagreen4, key=1, label=session, style=dashed];
n110 -> n113  [color=darkseagreen4, key=1, label=session, style=dashed];
n120 -> n125  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n121 -> n123  [color=darkseagreen4, key=1, label=session, style=dashed];
n129 -> n132  [color=darkseagreen4, key=1, label=beforePipeline, style=dashed];
n129 -> n135  [color=darkseagreen4, key=1, label=beforePipeline, style=dashed];
n130 -> n133  [color=darkseagreen4, key=1, label=afterPipeline, style=dashed];
n130 -> n136  [color=darkseagreen4, key=1, label=afterPipeline, style=dashed];
n132 -> n143  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n131 -> n144  [color=darkseagreen4, key=1, label=hooks, style=dashed];
n131 -> n133  [color=darkseagreen4, key=1, label=hooks, style=dashed];
n131 -> n147  [color=darkseagreen4, key=1, label=hooks, style=dashed];
n131 -> n134  [color=darkseagreen4, key=1, label=hooks, style=dashed];
n133 -> n146  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n150 -> n153  [color=darkseagreen4, key=1, label=beforePipeline, style=dashed];
n150 -> n160  [color=darkseagreen4, key=1, label=beforePipeline, style=dashed];
n151 -> n154  [color=darkseagreen4, key=1, label=afterPipeline, style=dashed];
n151 -> n161  [color=darkseagreen4, key=1, label=afterPipeline, style=dashed];
n153 -> n170  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n152 -> n171  [color=darkseagreen4, key=1, label=hooks, style=dashed];
n152 -> n154  [color=darkseagreen4, key=1, label=hooks, style=dashed];
n152 -> n174  [color=darkseagreen4, key=1, label=hooks, style=dashed];
n152 -> n155  [color=darkseagreen4, key=1, label=hooks, style=dashed];
n154 -> n173  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n157 -> n176  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n159 -> n161  [color=darkseagreen4, key=1, label=nancyContext, style=dashed];
n158 -> n162  [color=darkseagreen4, key=1, label=response, style=dashed];
n180 -> n183  [color=darkseagreen4, key=1, label=beforePipeline, style=dashed];
n180 -> n190  [color=darkseagreen4, key=1, label=beforePipeline, style=dashed];
n181 -> n184  [color=darkseagreen4, key=1, label=afterPipeline, style=dashed];
n181 -> n192  [color=darkseagreen4, key=1, label=afterPipeline, style=dashed];
n183 -> n195  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n182 -> n196  [color=darkseagreen4, key=1, label=hooks, style=dashed];
n182 -> n184  [color=darkseagreen4, key=1, label=hooks, style=dashed];
n182 -> n199  [color=darkseagreen4, key=1, label=hooks, style=dashed];
n182 -> n185  [color=darkseagreen4, key=1, label=hooks, style=dashed];
n184 -> n198  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n187 -> n201  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n189 -> n192  [color=darkseagreen4, key=1, label=nancyContext, style=dashed];
n188 -> n193  [color=darkseagreen4, key=1, label=response, style=dashed];
n205 -> n210  [color=darkseagreen4, key=1, label=fakeFormatter, style=dashed];
n205 -> n218  [color=darkseagreen4, key=1, label=fakeFormatter, style=dashed];
n206 -> n214  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n207 -> n209  [color=darkseagreen4, key=1, label=store, style=dashed];
n210 -> n217  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n222 -> n227  [color=darkseagreen4, key=1, label=response, style=dashed];
n223 -> n227  [color=darkseagreen4, key=1, label=session, style=dashed];
n225 -> n228  [color=darkseagreen4, key=1, label=fakeFormatter, style=dashed];
n225 -> n231  [color=darkseagreen4, key=1, label=fakeFormatter, style=dashed];
n228 -> n230  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n235 -> n238  [color=darkseagreen4, key=1, label=beforePipeline, style=dashed];
n235 -> n245  [color=darkseagreen4, key=1, label=beforePipeline, style=dashed];
n236 -> n239  [color=darkseagreen4, key=1, label=afterPipeline, style=dashed];
n238 -> n249  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n237 -> n250  [color=darkseagreen4, key=1, label=hooks, style=dashed];
n237 -> n239  [color=darkseagreen4, key=1, label=hooks, style=dashed];
n237 -> n253  [color=darkseagreen4, key=1, label=hooks, style=dashed];
n237 -> n242  [color=darkseagreen4, key=1, label=hooks, style=dashed];
n239 -> n252  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n240 -> n242  [color=darkseagreen4, key=1, label=fakeFormatter, style=dashed];
n240 -> n246  [color=darkseagreen4, key=1, label=fakeFormatter, style=dashed];
n240 -> n259  [color=darkseagreen4, key=1, label=fakeFormatter, style=dashed];
n241 -> n255  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n246 -> n258  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n262 -> n267  [color=darkseagreen4, key=1, label=response, style=dashed];
n262 -> n268  [color=darkseagreen4, key=1, label=response, style=dashed];
n263 -> n267  [color=darkseagreen4, key=1, label=session, style=dashed];
n269 -> n271  [color=darkseagreen4, key=1, label=cookie, style=dashed];
n269 -> n272  [color=darkseagreen4, key=1, label=cookie, style=dashed];
n265 -> n267  [color=darkseagreen4, key=1, label=store, style=dashed];
n265 -> n270  [color=darkseagreen4, key=1, label=store, style=dashed];
n278 -> n283  [color=darkseagreen4, key=1, label=response, style=dashed];
n278 -> n285  [color=darkseagreen4, key=1, label=response, style=dashed];
n279 -> n283  [color=darkseagreen4, key=1, label=session, style=dashed];
n280 -> n287  [color=darkseagreen4, key=1, label=payload, style=dashed];
n281 -> n283  [color=darkseagreen4, key=1, label=store, style=dashed];
n290 -> n293  [color=darkseagreen4, key=1, label=response, style=dashed];
n291 -> n293  [color=darkseagreen4, key=1, label=session, style=dashed];
n294 -> n296  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n301 -> n304  [color=darkseagreen4, key=1, label=response, style=dashed];
n302 -> n304  [color=darkseagreen4, key=1, label=session, style=dashed];
n305 -> n307  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n317 -> n319  [color=darkseagreen4, key=1, label=result, style=dashed];
n324 -> n327  [color=darkseagreen4, key=1, label=inputValue, style=dashed];
n325 -> n327  [color=darkseagreen4, key=1, label=store, style=dashed];
n334 -> n337  [color=darkseagreen4, key=1, label=inputValue, style=dashed];
n335 -> n337  [color=darkseagreen4, key=1, label=store, style=dashed];
n343 -> n346  [color=darkseagreen4, key=1, label=inputValue, style=dashed];
n344 -> n346  [color=darkseagreen4, key=1, label=store, style=dashed];
n353 -> n356  [color=darkseagreen4, key=1, label=inputValue, style=dashed];
n354 -> n356  [color=darkseagreen4, key=1, label=store, style=dashed];
n363 -> n369  [color=darkseagreen4, key=1, label=storeConfig, style=dashed];
n363 -> n375  [color=darkseagreen4, key=1, label=storeConfig, style=dashed];
n364 -> n368  [color=darkseagreen4, key=1, label=store, style=dashed];
n369 -> n374  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n365 -> n368  [color=darkseagreen4, key=1, label=response, style=dashed];
n365 -> n369  [color=darkseagreen4, key=1, label=response, style=dashed];
n366 -> n368  [color=darkseagreen4, key=1, label=session, style=dashed];
n379 -> n390  [color=darkseagreen4, key=1, label=storeConfig, style=dashed];
n379 -> n386  [color=darkseagreen4, key=1, label=storeConfig, style=dashed];
n380 -> n384  [color=darkseagreen4, key=1, label=store, style=dashed];
n385 -> n389  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n381 -> n384  [color=darkseagreen4, key=1, label=response, style=dashed];
n382 -> n384  [color=darkseagreen4, key=1, label=session, style=dashed];
n394 -> n404  [color=darkseagreen4, key=1, label=storeConfig, style=dashed];
n394 -> n401  [color=darkseagreen4, key=1, label=storeConfig, style=dashed];
n395 -> n399  [color=darkseagreen4, key=1, label=store, style=dashed];
n400 -> n403  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n396 -> n399  [color=darkseagreen4, key=1, label=response, style=dashed];
n397 -> n399  [color=darkseagreen4, key=1, label=session, style=dashed];
n409 -> n411  [color=darkseagreen4, key=1, label=request, style=dashed];
n409 -> n412  [color=darkseagreen4, key=1, label=request, style=dashed];
m0_9 -> m0_16  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_9 -> m0_12  [color=darkseagreen4, key=1, label="Nancy.ViewEngines.ViewLocationContext", style=dashed];
m0_9 -> m0_14  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_9 -> m0_31  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_9 -> m0_18  [color=darkseagreen4, key=1, label="Nancy.ViewEngines.ViewLocationContext", style=dashed];
m0_9 -> m0_21  [color=darkseagreen4, key=1, label="Nancy.ViewEngines.ViewLocationContext", style=dashed];
m0_9 -> m0_23  [color=darkseagreen4, key=1, label="Nancy.ViewEngines.ViewLocationContext", style=dashed];
m0_16 -> m0_18  [color=darkseagreen4, key=1, label=conventionBasedViewName, style=dashed];
m0_16 -> m0_36  [color=darkseagreen4, key=1, label=conventionBasedViewName, style=dashed];
m0_16 -> m0_21  [color=darkseagreen4, key=1, label=conventionBasedViewName, style=dashed];
m0_16 -> m0_40  [color=darkseagreen4, key=1, label=conventionBasedViewName, style=dashed];
m0_18 -> m0_35  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_19 -> m0_22  [color=darkseagreen4, key=1, label=locatedView, style=dashed];
m0_21 -> m0_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_14 -> m0_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_23 -> m0_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_0 -> m0_3  [color=darkseagreen4, key=1, label="Nancy.Conventions.ViewLocationConventions", style=dashed];
m0_49 -> m0_16  [color=darkseagreen4, key=1, label="Nancy.ViewEngines.DefaultViewResolver", style=dashed];
m0_49 -> m0_15  [color=darkseagreen4, key=1, label="Nancy.ViewEngines.DefaultViewResolver", style=dashed];
m0_51 -> m0_36  [color=darkseagreen4, key=1, label=conventionBasedViewName, style=dashed];
m0_51 -> m0_40  [color=darkseagreen4, key=1, label=conventionBasedViewName, style=dashed];
m0_50 -> m0_31  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_1 -> m1_7  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m1_27 -> m1_33  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_11 -> m1_22  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_13 -> m1_15  [color=darkseagreen4, key=1, label=firstIndex, style=dashed];
m2_129 -> m2_135  [color=darkseagreen4, key=1, label=response, style=dashed];
m2_130 -> m2_133  [color=darkseagreen4, key=1, label=fileResponse, style=dashed];
m2_132 -> m2_134  [color=darkseagreen4, key=1, label=stream, style=dashed];
m2_67 -> m2_74  [color=darkseagreen4, key=1, label=convention, style=dashed];
m2_70 -> m2_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_69 -> m2_74  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_143 -> m2_147  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_145 -> m2_147  [color=darkseagreen4, key=1, label=rootFolder, style=dashed];
m2_51 -> m2_63  [color=darkseagreen4, key=1, label=convention, style=dashed];
m2_54 -> m2_62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_53 -> m2_63  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_120 -> m2_127  [color=darkseagreen4, key=1, label=fileName, style=dashed];
m2_121 -> m2_126  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_165 -> m2_3  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.StaticContentConventionBuilderFixture", style=dashed];
m2_165 -> m2_63  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.StaticContentConventionBuilderFixture", style=dashed];
m2_165 -> m2_74  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.StaticContentConventionBuilderFixture", style=dashed];
m2_165 -> m2_127  [color=darkseagreen4, key=1, label="Nancy.Tests.Unit.StaticContentConventionBuilderFixture", style=dashed];
m2_166 -> m2_63  [color=darkseagreen4, key=1, label=convention, style=dashed];
m2_167 -> m2_63  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_168 -> m2_74  [color=darkseagreen4, key=1, label=convention, style=dashed];
m2_169 -> m2_74  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_170 -> m2_127  [color=darkseagreen4, key=1, label=fileName, style=dashed];
m3_10 -> m3_42  [color=darkseagreen4, key=1, label="Nancy.Response", style=dashed];
m3_8 -> m3_13  [color=darkseagreen4, key=1, label=HttpContextBase, style=dashed];
m3_11 -> m3_13  [color=darkseagreen4, key=1, label=expectedRequestLength, style=dashed];
m3_23 -> m3_26  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>", style=dashed];
m3_44 -> m3_47  [color=darkseagreen4, key=1, label=HttpContextBase, style=dashed];
m3_44 -> m3_48  [color=darkseagreen4, key=1, label="Nancy.Response", style=dashed];
m3_44 -> m3_49  [color=darkseagreen4, key=1, label=HttpContextBase, style=dashed];
m3_47 -> m3_47  [color=darkseagreen4, key=1, label=header, style=dashed];
m3_3 -> m3_6  [color=darkseagreen4, key=1, label=HttpContextBase, style=dashed];
m4_1 -> m4_7  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m4_11 -> m4_18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_30 -> m5_36  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_11 -> m5_18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_1 -> m5_7  [color=darkseagreen4, key=1, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator", style=dashed];
m5_23 -> m5_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_36 -> m5_38  [color=darkseagreen4, key=1, label="Nancy.Testing.BrowserContext", style=dashed];
}
