digraph  {
n427 [label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture", span=""];
n428 [label=hooks, span=""];
n429 [label=hooks, span=""];
n430 [label=hooks, span=""];
n431 [label=fakeFormatter, span=""];
n432 [label=fakeFormatter, span=""];
n433 [label=hooks, span=""];
n434 [label=fakeFormatter, span=""];
n435 [label=storeConfig, span=""];
n436 [label=storeConfig, span=""];
n437 [label=storeConfig, span=""];
n0 [label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CookieBasedSessionsFixture()", span="32-32", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CookieBasedSessionsFixture()"];
n1 [label="this.fakeEncryptionProvider = A.Fake<IEncryptionProvider>()", span="34-34", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CookieBasedSessionsFixture()"];
n2 [label="this.fakeHmacProvider = A.Fake<IHmacProvider>()", span="35-35", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CookieBasedSessionsFixture()"];
n9 [label="Entry Unk.>", span="", cluster="Unk.>"];
n3 [label="this.fakeObjectSerializer = new FakeObjectSerializer()", span="36-36", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CookieBasedSessionsFixture()"];
n4 [label="this.cookieStore = new CookieBasedSessions(this.fakeEncryptionProvider, this.fakeHmacProvider, this.fakeObjectSerializer)", span="37-37", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CookieBasedSessionsFixture()"];
n10 [label="Entry Nancy.Tests.Fakes.FakeObjectSerializer.FakeObjectSerializer()", span="2-2", cluster="Nancy.Tests.Fakes.FakeObjectSerializer.FakeObjectSerializer()"];
n5 [label="this.aesEncryptionProvider = new AesEncryptionProvider(new PassphraseKeyGenerator(''password'', new byte[] { 1, 2, 3, 4, 5, 6, 7, 8 }, 1000))", span="39-39", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CookieBasedSessionsFixture()"];
n11 [label="Entry Nancy.Session.CookieBasedSessions.CookieBasedSessions(Nancy.Cryptography.IEncryptionProvider, Nancy.Cryptography.IHmacProvider, Nancy.IObjectSerializer)", span="34-34", cluster="Nancy.Session.CookieBasedSessions.CookieBasedSessions(Nancy.Cryptography.IEncryptionProvider, Nancy.Cryptography.IHmacProvider, Nancy.IObjectSerializer)"];
n6 [label="this.defaultHmacProvider = new DefaultHmacProvider(new PassphraseKeyGenerator(''anotherpassword'', new byte[] { 1, 2, 3, 4, 5, 6, 7, 8 }, 1000))", span="40-40", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CookieBasedSessionsFixture()"];
n12 [label="Entry Nancy.Cryptography.AesEncryptionProvider.AesEncryptionProvider(Nancy.Cryptography.IKeyGenerator)", span="19-19", cluster="Nancy.Cryptography.AesEncryptionProvider.AesEncryptionProvider(Nancy.Cryptography.IKeyGenerator)"];
n13 [label="Entry Nancy.Cryptography.PassphraseKeyGenerator.PassphraseKeyGenerator(string, byte[], int)", span="23-23", cluster="Nancy.Cryptography.PassphraseKeyGenerator.PassphraseKeyGenerator(string, byte[], int)"];
n7 [label="this.defaultObjectSerializer = new DefaultObjectSerializer()", span="41-41", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CookieBasedSessionsFixture()"];
n14 [label="Entry Nancy.Cryptography.DefaultHmacProvider.DefaultHmacProvider(Nancy.Cryptography.IKeyGenerator)", span="29-29", cluster="Nancy.Cryptography.DefaultHmacProvider.DefaultHmacProvider(Nancy.Cryptography.IKeyGenerator)"];
n8 [label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CookieBasedSessionsFixture()", span="32-32", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CookieBasedSessionsFixture()"];
n15 [label="Entry Nancy.DefaultObjectSerializer.DefaultObjectSerializer()", span="12-12", cluster="Nancy.DefaultObjectSerializer.DefaultObjectSerializer()"];
n16 [label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_nothing_if_the_session_is_null()", span="45-45", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_nothing_if_the_session_is_null()"];
n17 [label="var response = new Response()", span="47-47", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_nothing_if_the_session_is_null()"];
n18 [label="cookieStore.Save(null, response)", span="49-49", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_nothing_if_the_session_is_null()"];
n21 [label="Entry Nancy.Response.Response()", span="29-29", cluster="Nancy.Response.Response()"];
n19 [label="response.Cookies.Count.ShouldEqual(0)", span="51-51", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_nothing_if_the_session_is_null()"];
n22 [label="Entry Nancy.Session.CookieBasedSessions.Save(Nancy.Session.ISession, Nancy.Response)", span="124-124", cluster="Nancy.Session.CookieBasedSessions.Save(Nancy.Session.ISession, Nancy.Response)"];
n20 [label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_nothing_if_the_session_is_null()", span="45-45", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_nothing_if_the_session_is_null()"];
n23 [label="Entry object.ShouldEqual(object)", span="106-106", cluster="object.ShouldEqual(object)"];
n24 [label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_nothing_if_the_session_has_not_changed()", span="55-55", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_nothing_if_the_session_has_not_changed()"];
n25 [label="var response = new Response()", span="57-57", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_nothing_if_the_session_has_not_changed()"];
n26 [label="cookieStore.Save(new Session(new Dictionary<string, object> { { ''key'', ''value'' } }), response)", span="59-59", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_nothing_if_the_session_has_not_changed()"];
n27 [label="response.Cookies.Count.ShouldEqual(0)", span="61-61", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_nothing_if_the_session_has_not_changed()"];
n29 [label="Entry Nancy.Session.Session.Session(System.Collections.Generic.IDictionary<string, object>)", span="24-24", cluster="Nancy.Session.Session.Session(System.Collections.Generic.IDictionary<string, object>)"];
n30 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()"];
n28 [label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_nothing_if_the_session_has_not_changed()", span="55-55", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_nothing_if_the_session_has_not_changed()"];
n31 [label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_the_session_cookie()", span="65-65", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_the_session_cookie()"];
n32 [label="var response = new Response()", span="67-67", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_the_session_cookie()"];
n33 [label="var session = new Session(new Dictionary<string, object>\r\n                                      {\r\n                                          {''key1'', ''val1''},\r\n                                      })", span="68-71", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_the_session_cookie()"];
n36 [label="cookieStore.Save(session, response)", span="75-75", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_the_session_cookie()"];
n37 [label="response.Cookies.Count.ShouldEqual(1)", span="77-77", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_the_session_cookie()"];
n38 [label="var cookie = response.Cookies.First()", span="78-78", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_the_session_cookie()"];
n34 [label="session[''key2''] = ''val2''", span="72-72", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_the_session_cookie()"];
n35 [label="A.CallTo(() => this.fakeEncryptionProvider.Encrypt(''key1=val1;key2=val2;'')).Returns(''encrypted=key1=val1;key2=val2;'')", span="73-73", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_the_session_cookie()"];
n45 [label="Entry Unk.CallTo", span="", cluster="Unk.CallTo"];
n46 [label="Entry Unk.Returns", span="", cluster="Unk.Returns"];
n49 [label="Entry lambda expression", span="73-73", cluster="lambda expression"];
n39 [label="cookie.Name.ShouldEqual(this.cookieStore.CookieName)", span="79-79", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_the_session_cookie()"];
n47 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()"];
n40 [label="cookie.Value.ShouldEqual(''encrypted%3dkey1%3dval1%3bkey2%3dval2%3b'')", span="80-80", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_the_session_cookie()"];
n41 [label="cookie.Expires.ShouldBeNull()", span="81-81", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_the_session_cookie()"];
n42 [label="cookie.Path.ShouldBeNull()", span="82-82", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_the_session_cookie()"];
n43 [label="cookie.Domain.ShouldBeNull()", span="83-83", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_the_session_cookie()"];
n48 [label="Entry object.ShouldBeNull()", span="146-146", cluster="object.ShouldBeNull()"];
n44 [label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_the_session_cookie()", span="65-65", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_the_session_cookie()"];
n50 [label="this.fakeEncryptionProvider.Encrypt(''key1=val1;key2=val2;'')", span="73-73", cluster="lambda expression"];
n51 [label="Exit lambda expression", span="73-73", cluster="lambda expression"];
n52 [label="Entry Nancy.Cryptography.IEncryptionProvider.Encrypt(string)", span="12-12", cluster="Nancy.Cryptography.IEncryptionProvider.Encrypt(string)"];
n53 [label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_cookie_as_http_only()", span="87-87", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_cookie_as_http_only()"];
n54 [label="var response = new Response()", span="89-89", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_cookie_as_http_only()"];
n55 [label="var session = new Session()", span="90-90", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_cookie_as_http_only()"];
n58 [label="cookieStore.Save(session, response)", span="94-94", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_cookie_as_http_only()"];
n59 [label="response.Cookies.First().HttpOnly.ShouldEqual(true)", span="96-96", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_cookie_as_http_only()"];
n56 [label="session[''key 1''] = ''val=1''", span="91-91", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_cookie_as_http_only()"];
n61 [label="Entry Nancy.Session.Session.Session()", span="17-17", cluster="Nancy.Session.Session.Session()"];
n57 [label="A.CallTo(() => this.fakeEncryptionProvider.Encrypt(''key+1=val%3d1;'')).Returns(''encryptedkey+1=val%3d1;'')", span="92-92", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_cookie_as_http_only()"];
n62 [label="Entry lambda expression", span="92-92", cluster="lambda expression"];
n60 [label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_cookie_as_http_only()", span="87-87", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_save_cookie_as_http_only()"];
n63 [label="this.fakeEncryptionProvider.Encrypt(''key+1=val%3d1;'')", span="92-92", cluster="lambda expression"];
n64 [label="Exit lambda expression", span="92-92", cluster="lambda expression"];
n65 [label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_saves_url_safe_keys_and_values()", span="100-100", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_saves_url_safe_keys_and_values()"];
n66 [label="var response = new Response()", span="102-102", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_saves_url_safe_keys_and_values()"];
n67 [label="var session = new Session()", span="103-103", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_saves_url_safe_keys_and_values()"];
n70 [label="cookieStore.Save(session, response)", span="107-107", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_saves_url_safe_keys_and_values()"];
n71 [label="response.Cookies.First().Value.ShouldEqual(''encryptedkey%2b1%3dval%253d1%3b'')", span="109-109", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_saves_url_safe_keys_and_values()"];
n68 [label="session[''key 1''] = ''val=1''", span="104-104", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_saves_url_safe_keys_and_values()"];
n69 [label="A.CallTo(() => this.fakeEncryptionProvider.Encrypt(''key+1=val%3d1;'')).Returns(''encryptedkey+1=val%3d1;'')", span="105-105", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_saves_url_safe_keys_and_values()"];
n73 [label="Entry lambda expression", span="105-105", cluster="lambda expression"];
n72 [label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_saves_url_safe_keys_and_values()", span="100-100", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_saves_url_safe_keys_and_values()"];
n74 [label="this.fakeEncryptionProvider.Encrypt(''key+1=val%3d1;'')", span="105-105", cluster="lambda expression"];
n75 [label="Exit lambda expression", span="105-105", cluster="lambda expression"];
n76 [label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_an_empty_session_if_no_session_cookie_exists()", span="113-113", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_an_empty_session_if_no_session_cookie_exists()"];
n77 [label="var request = CreateRequest(null)", span="115-115", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_an_empty_session_if_no_session_cookie_exists()"];
n78 [label="var result = cookieStore.Load(request)", span="117-117", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_an_empty_session_if_no_session_cookie_exists()"];
n81 [label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CreateRequest(string, bool)", span="494-494", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CreateRequest(string, bool)"];
n79 [label="result.Count.ShouldEqual(0)", span="119-119", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_an_empty_session_if_no_session_cookie_exists()"];
n82 [label="Entry Nancy.Session.CookieBasedSessions.Load(Nancy.Request)", span="161-161", cluster="Nancy.Session.CookieBasedSessions.Load(Nancy.Request)"];
n80 [label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_an_empty_session_if_no_session_cookie_exists()", span="113-113", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_an_empty_session_if_no_session_cookie_exists()"];
n83 [label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_an_empty_session_if_session_cookie_is_invalid()", span="123-123", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_an_empty_session_if_session_cookie_is_invalid()"];
n84 [label="var inputValue = ValidHmac.Substring(0, 5)", span="126-126", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_an_empty_session_if_session_cookie_is_invalid()", color=red, community=0];
n85 [label="inputValue = HttpUtility.UrlEncode(inputValue)", span="127-127", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_an_empty_session_if_session_cookie_is_invalid()", color=red, community=0];
n92 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)"];
n86 [label="var store = new CookieBasedSessions(this.aesEncryptionProvider, this.defaultHmacProvider, this.defaultObjectSerializer)", span="128-128", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_an_empty_session_if_session_cookie_is_invalid()", color=red, community=0];
n93 [label="Entry Nancy.Helpers.HttpUtility.UrlEncode(string)", span="384-384", cluster="Nancy.Helpers.HttpUtility.UrlEncode(string)"];
n88 [label="request.Cookies.Add(store.CookieName, inputValue)", span="130-130", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_an_empty_session_if_session_cookie_is_invalid()", color=red, community=0];
n87 [label="var request = new Request(''GET'', ''/'', ''http'')", span="129-129", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_an_empty_session_if_session_cookie_is_invalid()", color=red, community=0];
n89 [label="var result = store.Load(request)", span="133-133", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_an_empty_session_if_session_cookie_is_invalid()", color=red, community=0];
n94 [label="Entry Nancy.Request.Request(string, string, string)", span="33-33", cluster="Nancy.Request.Request(string, string, string)"];
n95 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)"];
n90 [label="result.Count.ShouldEqual(0)", span="136-136", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_an_empty_session_if_session_cookie_is_invalid()", color=red, community=0];
n91 [label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_an_empty_session_if_session_cookie_is_invalid()", span="123-123", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_an_empty_session_if_session_cookie_is_invalid()"];
n96 [label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_a_single_valued_session()", span="140-140", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_a_single_valued_session()"];
n97 [label="var request = CreateRequest(''encryptedkey1=value1'')", span="142-142", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_a_single_valued_session()"];
n98 [label="A.CallTo(() => this.fakeEncryptionProvider.Decrypt(''encryptedkey1=value1'')).Returns(''key1=value1;'')", span="143-143", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_a_single_valued_session()"];
n99 [label="var session = cookieStore.Load(request)", span="145-145", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_a_single_valued_session()"];
n103 [label="Entry lambda expression", span="143-143", cluster="lambda expression"];
n100 [label="session.Count.ShouldEqual(1)", span="147-147", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_a_single_valued_session()"];
n101 [label="session[''key1''].ShouldEqual(''value1'')", span="148-148", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_a_single_valued_session()"];
n102 [label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_a_single_valued_session()", span="140-140", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_a_single_valued_session()"];
n104 [label="this.fakeEncryptionProvider.Decrypt(''encryptedkey1=value1'')", span="143-143", cluster="lambda expression"];
n105 [label="Exit lambda expression", span="143-143", cluster="lambda expression"];
n106 [label="Entry Nancy.Cryptography.IEncryptionProvider.Decrypt(string)", span="19-19", cluster="Nancy.Cryptography.IEncryptionProvider.Decrypt(string)"];
n107 [label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_a_multi_valued_session()", span="152-152", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_a_multi_valued_session()"];
n108 [label="var request = CreateRequest(''encryptedkey1=value1;key2=value2'')", span="154-154", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_a_multi_valued_session()"];
n109 [label="A.CallTo(() => this.fakeEncryptionProvider.Decrypt(''encryptedkey1=value1;key2=value2'')).Returns(''key1=value1;key2=value2'')", span="155-155", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_a_multi_valued_session()"];
n110 [label="var session = cookieStore.Load(request)", span="157-157", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_a_multi_valued_session()"];
n115 [label="Entry lambda expression", span="155-155", cluster="lambda expression"];
n111 [label="session.Count.ShouldEqual(2)", span="159-159", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_a_multi_valued_session()"];
n112 [label="session[''key1''].ShouldEqual(''value1'')", span="160-160", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_a_multi_valued_session()"];
n113 [label="session[''key2''].ShouldEqual(''value2'')", span="161-161", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_a_multi_valued_session()"];
n114 [label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_a_multi_valued_session()", span="152-152", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_a_multi_valued_session()"];
n116 [label="this.fakeEncryptionProvider.Decrypt(''encryptedkey1=value1;key2=value2'')", span="155-155", cluster="lambda expression"];
n117 [label="Exit lambda expression", span="155-155", cluster="lambda expression"];
n118 [label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_properly_decode_the_url_safe_session()", span="165-165", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_properly_decode_the_url_safe_session()"];
n119 [label="var request = CreateRequest(HttpUtility.UrlEncode(''encryptedkey+1=val%3D1;''))", span="167-167", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_properly_decode_the_url_safe_session()"];
n120 [label="A.CallTo(() => this.fakeEncryptionProvider.Decrypt(''encryptedkey+1=val%3D1;'')).Returns(''key+1=val%3D1;'')", span="168-168", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_properly_decode_the_url_safe_session()"];
n121 [label="var session = cookieStore.Load(request)", span="170-170", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_properly_decode_the_url_safe_session()"];
n125 [label="Entry lambda expression", span="168-168", cluster="lambda expression"];
n122 [label="session.Count.ShouldEqual(1)", span="172-172", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_properly_decode_the_url_safe_session()"];
n123 [label="session[''key 1''].ShouldEqual(''val=1'')", span="173-173", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_properly_decode_the_url_safe_session()"];
n124 [label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_properly_decode_the_url_safe_session()", span="165-165", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_properly_decode_the_url_safe_session()"];
n126 [label="this.fakeEncryptionProvider.Decrypt(''encryptedkey+1=val%3D1;'')", span="168-168", cluster="lambda expression"];
n127 [label="Exit lambda expression", span="168-168", cluster="lambda expression"];
n128 [label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_pre_and_post_hooks_when_enabled()", span="177-177", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_pre_and_post_hooks_when_enabled()"];
n129 [label="var beforePipeline = new BeforePipeline()", span="179-179", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_pre_and_post_hooks_when_enabled()"];
n130 [label="var afterPipeline = new AfterPipeline()", span="180-180", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_pre_and_post_hooks_when_enabled()"];
n138 [label="Entry Nancy.BeforePipeline.BeforePipeline()", span="19-19", cluster="Nancy.BeforePipeline.BeforePipeline()"];
n132 [label="A.CallTo(() => hooks.BeforeRequest).Returns(beforePipeline)", span="182-182", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_pre_and_post_hooks_when_enabled()"];
n135 [label="beforePipeline.PipelineDelegates.Count().ShouldEqual(1)", span="187-187", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_pre_and_post_hooks_when_enabled()"];
n131 [label="var hooks = A.Fake<IPipelines>()", span="181-181", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_pre_and_post_hooks_when_enabled()"];
n139 [label="Entry Nancy.AfterPipeline.AfterPipeline()", span="18-18", cluster="Nancy.AfterPipeline.AfterPipeline()"];
n133 [label="A.CallTo(() => hooks.AfterRequest).Returns(afterPipeline)", span="183-183", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_pre_and_post_hooks_when_enabled()"];
n136 [label="afterPipeline.PipelineItems.Count().ShouldEqual(1)", span="188-188", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_pre_and_post_hooks_when_enabled()"];
n144 [label="hooks.BeforeRequest", span="182-182", cluster="lambda expression"];
n147 [label="hooks.AfterRequest", span="183-183", cluster="lambda expression"];
n134 [label="CookieBasedSessions.Enable(hooks, new CryptographyConfiguration(this.fakeEncryptionProvider, this.fakeHmacProvider))", span="185-185", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_pre_and_post_hooks_when_enabled()"];
n143 [label="Entry lambda expression", span="182-182", cluster="lambda expression"];
n146 [label="Entry lambda expression", span="183-183", cluster="lambda expression"];
n140 [label="Entry Nancy.Cryptography.CryptographyConfiguration.CryptographyConfiguration(Nancy.Cryptography.IEncryptionProvider, Nancy.Cryptography.IHmacProvider)", span="24-24", cluster="Nancy.Cryptography.CryptographyConfiguration.CryptographyConfiguration(Nancy.Cryptography.IEncryptionProvider, Nancy.Cryptography.IHmacProvider)"];
n141 [label="Entry Unk.Enable", span="", cluster="Unk.Enable"];
n142 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()"];
n137 [label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_pre_and_post_hooks_when_enabled()", span="177-177", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_pre_and_post_hooks_when_enabled()"];
n145 [label="Exit lambda expression", span="182-182", cluster="lambda expression"];
n148 [label="Exit lambda expression", span="183-183", cluster="lambda expression"];
n149 [label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_only_not_add_response_cookie_if_it_has_not_changed()", span="192-192", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_only_not_add_response_cookie_if_it_has_not_changed()"];
n150 [label="var beforePipeline = new BeforePipeline()", span="194-194", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_only_not_add_response_cookie_if_it_has_not_changed()"];
n151 [label="var afterPipeline = new AfterPipeline()", span="195-195", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_only_not_add_response_cookie_if_it_has_not_changed()"];
n153 [label="A.CallTo(() => hooks.BeforeRequest).Returns(beforePipeline)", span="197-197", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_only_not_add_response_cookie_if_it_has_not_changed()"];
n160 [label="beforePipeline.Invoke(nancyContext, new CancellationToken())", span="204-204", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_only_not_add_response_cookie_if_it_has_not_changed()"];
n152 [label="var hooks = A.Fake<IPipelines>()", span="196-196", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_only_not_add_response_cookie_if_it_has_not_changed()"];
n154 [label="A.CallTo(() => hooks.AfterRequest).Returns(afterPipeline)", span="198-198", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_only_not_add_response_cookie_if_it_has_not_changed()"];
n161 [label="afterPipeline.Invoke(nancyContext, new CancellationToken())", span="206-206", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_only_not_add_response_cookie_if_it_has_not_changed()"];
n171 [label="hooks.BeforeRequest", span="197-197", cluster="lambda expression"];
n174 [label="hooks.AfterRequest", span="198-198", cluster="lambda expression"];
n155 [label="CookieBasedSessions.Enable(hooks, new CryptographyConfiguration(this.fakeEncryptionProvider, this.fakeHmacProvider)).WithSerializer(this.fakeObjectSerializer)", span="199-199", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_only_not_add_response_cookie_if_it_has_not_changed()"];
n170 [label="Entry lambda expression", span="197-197", cluster="lambda expression"];
n173 [label="Entry lambda expression", span="198-198", cluster="lambda expression"];
n156 [label="var request = CreateRequest(''encryptedkey1=value1'')", span="200-200", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_only_not_add_response_cookie_if_it_has_not_changed()"];
n164 [label="Entry Nancy.IObjectSerializerSelector.WithSerializer(Nancy.IObjectSerializer)", span="11-11", cluster="Nancy.IObjectSerializerSelector.WithSerializer(Nancy.IObjectSerializer)"];
n157 [label="A.CallTo(() => this.fakeEncryptionProvider.Decrypt(''encryptedkey1=value1'')).Returns(''key1=value1;'')", span="201-201", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_only_not_add_response_cookie_if_it_has_not_changed()"];
n159 [label="var nancyContext = new NancyContext() { Request = request, Response = response }", span="203-203", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_only_not_add_response_cookie_if_it_has_not_changed()"];
n158 [label="var response = A.Fake<Response>()", span="202-202", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_only_not_add_response_cookie_if_it_has_not_changed()"];
n176 [label="Entry lambda expression", span="201-201", cluster="lambda expression"];
n162 [label="response.Cookies.Count.ShouldEqual(0)", span="208-208", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_only_not_add_response_cookie_if_it_has_not_changed()"];
n165 [label="Entry Nancy.NancyContext.NancyContext()", span="26-26", cluster="Nancy.NancyContext.NancyContext()"];
n166 [label="Entry System.Threading.CancellationToken.CancellationToken()", span="0-0", cluster="System.Threading.CancellationToken.CancellationToken()"];
n167 [label="Entry Nancy.BeforePipeline.Invoke(Nancy.NancyContext, System.Threading.CancellationToken)", span="116-116", cluster="Nancy.BeforePipeline.Invoke(Nancy.NancyContext, System.Threading.CancellationToken)"];
n168 [label="Entry Nancy.AfterPipeline.Invoke(Nancy.NancyContext, System.Threading.CancellationToken)", span="107-107", cluster="Nancy.AfterPipeline.Invoke(Nancy.NancyContext, System.Threading.CancellationToken)"];
n163 [label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_only_not_add_response_cookie_if_it_has_not_changed()", span="192-192", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_only_not_add_response_cookie_if_it_has_not_changed()"];
n169 [label="Entry Unk.ShouldEqual", span="", cluster="Unk.ShouldEqual"];
n172 [label="Exit lambda expression", span="197-197", cluster="lambda expression"];
n175 [label="Exit lambda expression", span="198-198", cluster="lambda expression"];
n177 [label="this.fakeEncryptionProvider.Decrypt(''encryptedkey1=value1'')", span="201-201", cluster="lambda expression"];
n178 [label="Exit lambda expression", span="201-201", cluster="lambda expression"];
n179 [label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_response_cookie_if_it_has_changed()", span="212-212", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_response_cookie_if_it_has_changed()"];
n180 [label="var beforePipeline = new BeforePipeline()", span="214-214", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_response_cookie_if_it_has_changed()"];
n181 [label="var afterPipeline = new AfterPipeline()", span="215-215", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_response_cookie_if_it_has_changed()"];
n183 [label="A.CallTo(() => hooks.BeforeRequest).Returns(beforePipeline)", span="217-217", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_response_cookie_if_it_has_changed()"];
n190 [label="beforePipeline.Invoke(nancyContext, new CancellationToken())", span="224-224", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_response_cookie_if_it_has_changed()"];
n182 [label="var hooks = A.Fake<IPipelines>()", span="216-216", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_response_cookie_if_it_has_changed()"];
n184 [label="A.CallTo(() => hooks.AfterRequest).Returns(afterPipeline)", span="218-218", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_response_cookie_if_it_has_changed()"];
n192 [label="afterPipeline.Invoke(nancyContext, new CancellationToken())", span="227-227", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_response_cookie_if_it_has_changed()"];
n196 [label="hooks.BeforeRequest", span="217-217", cluster="lambda expression"];
n199 [label="hooks.AfterRequest", span="218-218", cluster="lambda expression"];
n185 [label="CookieBasedSessions.Enable(hooks, new CryptographyConfiguration(this.fakeEncryptionProvider, this.fakeHmacProvider)).WithSerializer(this.fakeObjectSerializer)", span="219-219", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_response_cookie_if_it_has_changed()"];
n195 [label="Entry lambda expression", span="217-217", cluster="lambda expression"];
n198 [label="Entry lambda expression", span="218-218", cluster="lambda expression"];
n186 [label="var request = CreateRequest(''encryptedkey1=value1'')", span="220-220", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_response_cookie_if_it_has_changed()"];
n187 [label="A.CallTo(() => this.fakeEncryptionProvider.Decrypt(''encryptedkey1=value1'')).Returns(''key1=value1;'')", span="221-221", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_response_cookie_if_it_has_changed()"];
n189 [label="var nancyContext = new NancyContext() { Request = request, Response = response }", span="223-223", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_response_cookie_if_it_has_changed()"];
n191 [label="request.Session[''Testing''] = ''Test''", span="225-225", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_response_cookie_if_it_has_changed()"];
n188 [label="var response = A.Fake<Response>()", span="222-222", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_response_cookie_if_it_has_changed()"];
n201 [label="Entry lambda expression", span="221-221", cluster="lambda expression"];
n193 [label="response.Cookies.Count.ShouldEqual(1)", span="229-229", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_response_cookie_if_it_has_changed()"];
n194 [label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_response_cookie_if_it_has_changed()", span="212-212", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_add_response_cookie_if_it_has_changed()"];
n197 [label="Exit lambda expression", span="217-217", cluster="lambda expression"];
n200 [label="Exit lambda expression", span="218-218", cluster="lambda expression"];
n202 [label="this.fakeEncryptionProvider.Decrypt(''encryptedkey1=value1'')", span="221-221", cluster="lambda expression"];
n203 [label="Exit lambda expression", span="221-221", cluster="lambda expression"];
n204 [label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_call_formatter_on_load()", span="233-233", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_call_formatter_on_load()"];
n205 [label="var fakeFormatter = A.Fake<IObjectSerializer>()", span="235-235", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_call_formatter_on_load()"];
n206 [label="A.CallTo(() => this.fakeEncryptionProvider.Decrypt(''encryptedkey1=value1'')).Returns(''key1=value1;'')", span="236-236", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_call_formatter_on_load()"];
n207 [label="var store = new CookieBasedSessions(this.fakeEncryptionProvider, this.fakeHmacProvider, fakeFormatter)", span="237-237", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_call_formatter_on_load()"];
n210 [label="A.CallTo(() => fakeFormatter.Deserialize(''value1'')).MustHaveHappened(Repeated.Exactly.Once)", span="242-242", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_call_formatter_on_load()"];
n218 [label="fakeFormatter.Deserialize(''value1'')", span="242-242", cluster="lambda expression"];
n214 [label="Entry lambda expression", span="236-236", cluster="lambda expression"];
n208 [label="var request = CreateRequest(''encryptedkey1=value1'', false)", span="238-238", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_call_formatter_on_load()"];
n212 [label="Entry CookieBasedSessions.cstr", span="", cluster="CookieBasedSessions.cstr"];
n209 [label="store.Load(request)", span="240-240", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_call_formatter_on_load()"];
n211 [label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_call_formatter_on_load()", span="233-233", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_call_formatter_on_load()"];
n213 [label="Entry Unk.MustHaveHappened", span="", cluster="Unk.MustHaveHappened"];
n217 [label="Entry lambda expression", span="242-242", cluster="lambda expression"];
n215 [label="this.fakeEncryptionProvider.Decrypt(''encryptedkey1=value1'')", span="236-236", cluster="lambda expression"];
n216 [label="Exit lambda expression", span="236-236", cluster="lambda expression"];
n219 [label="Exit lambda expression", span="242-242", cluster="lambda expression"];
n220 [label="Entry Unk.Deserialize", span="", cluster="Unk.Deserialize"];
n221 [label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_call_the_formatter_on_save()", span="246-246", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_call_the_formatter_on_save()"];
n222 [label="var response = new Response()", span="248-248", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_call_the_formatter_on_save()"];
n223 [label="var session = new Session(new Dictionary<string, object>())", span="249-249", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_call_the_formatter_on_save()"];
n227 [label="store.Save(session, response)", span="254-254", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_call_the_formatter_on_save()"];
n224 [label="session[''key1''] = ''value1''", span="250-250", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_call_the_formatter_on_save()"];
n225 [label="var fakeFormatter = A.Fake<IObjectSerializer>()", span="251-251", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_call_the_formatter_on_save()"];
n226 [label="var store = new CookieBasedSessions(this.fakeEncryptionProvider, this.fakeHmacProvider, fakeFormatter)", span="252-252", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_call_the_formatter_on_save()"];
n228 [label="A.CallTo(() => fakeFormatter.Serialize(''value1'')).MustHaveHappened(Repeated.Exactly.Once)", span="256-256", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_call_the_formatter_on_save()"];
n231 [label="fakeFormatter.Serialize(''value1'')", span="256-256", cluster="lambda expression"];
n229 [label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_call_the_formatter_on_save()", span="246-246", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_call_the_formatter_on_save()"];
n230 [label="Entry lambda expression", span="256-256", cluster="lambda expression"];
n232 [label="Exit lambda expression", span="256-256", cluster="lambda expression"];
n233 [label="Entry Unk.Serialize", span="", cluster="Unk.Serialize"];
n234 [label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_formatter_when_using_formatter_selector()", span="260-260", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_formatter_when_using_formatter_selector()"];
n235 [label="var beforePipeline = new BeforePipeline()", span="262-262", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_formatter_when_using_formatter_selector()"];
n236 [label="var afterPipeline = new AfterPipeline()", span="263-263", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_formatter_when_using_formatter_selector()"];
n238 [label="A.CallTo(() => hooks.BeforeRequest).Returns(beforePipeline)", span="265-265", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_formatter_when_using_formatter_selector()"];
n245 [label="beforePipeline.Invoke(nancyContext, new CancellationToken())", span="273-273", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_formatter_when_using_formatter_selector()"];
n237 [label="var hooks = A.Fake<IPipelines>()", span="264-264", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_formatter_when_using_formatter_selector()"];
n239 [label="A.CallTo(() => hooks.AfterRequest).Returns(afterPipeline)", span="266-266", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_formatter_when_using_formatter_selector()"];
n250 [label="hooks.BeforeRequest", span="265-265", cluster="lambda expression"];
n253 [label="hooks.AfterRequest", span="266-266", cluster="lambda expression"];
n242 [label="CookieBasedSessions.Enable(hooks, new CryptographyConfiguration(this.fakeEncryptionProvider, this.fakeHmacProvider)).WithSerializer(fakeFormatter)", span="269-269", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_formatter_when_using_formatter_selector()"];
n249 [label="Entry lambda expression", span="265-265", cluster="lambda expression"];
n240 [label="var fakeFormatter = A.Fake<IObjectSerializer>()", span="267-267", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_formatter_when_using_formatter_selector()"];
n252 [label="Entry lambda expression", span="266-266", cluster="lambda expression"];
n241 [label="A.CallTo(() => this.fakeEncryptionProvider.Decrypt(''encryptedkey1=value1'')).Returns(''key1=value1;'')", span="268-268", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_formatter_when_using_formatter_selector()"];
n246 [label="A.CallTo(() => fakeFormatter.Deserialize(A<string>.Ignored)).MustHaveHappened(Repeated.Exactly.Once)", span="275-275", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_formatter_when_using_formatter_selector()"];
n259 [label="fakeFormatter.Deserialize(A<string>.Ignored)", span="275-275", cluster="lambda expression"];
n255 [label="Entry lambda expression", span="268-268", cluster="lambda expression"];
n243 [label="var request = CreateRequest(''encryptedkey1=value1'')", span="270-270", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_formatter_when_using_formatter_selector()"];
n248 [label="Entry Unk.WithSerializer", span="", cluster="Unk.WithSerializer"];
n244 [label="var nancyContext = new NancyContext() { Request = request }", span="271-271", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_formatter_when_using_formatter_selector()"];
n247 [label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_formatter_when_using_formatter_selector()", span="260-260", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_formatter_when_using_formatter_selector()"];
n258 [label="Entry lambda expression", span="275-275", cluster="lambda expression"];
n251 [label="Exit lambda expression", span="265-265", cluster="lambda expression"];
n254 [label="Exit lambda expression", span="266-266", cluster="lambda expression"];
n256 [label="this.fakeEncryptionProvider.Decrypt(''encryptedkey1=value1'')", span="268-268", cluster="lambda expression"];
n257 [label="Exit lambda expression", span="268-268", cluster="lambda expression"];
n260 [label="Exit lambda expression", span="275-275", cluster="lambda expression"];
n261 [label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_be_able_to_save_a_complex_object_to_session()", span="279-279", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_be_able_to_save_a_complex_object_to_session()"];
n262 [label="var response = new Response()", span="281-281", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_be_able_to_save_a_complex_object_to_session()"];
n263 [label="var session = new Session(new Dictionary<string, object>())", span="282-282", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_be_able_to_save_a_complex_object_to_session()"];
n267 [label="store.Save(session, response)", span="287-287", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_be_able_to_save_a_complex_object_to_session()"];
n268 [label="response.Cookies.Count.ShouldEqual(1)", span="289-289", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_be_able_to_save_a_complex_object_to_session()"];
n269 [label="var cookie = response.Cookies.First()", span="290-290", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_be_able_to_save_a_complex_object_to_session()"];
n264 [label="var payload = new DefaultSessionObjectFormatterFixture.Payload(27, true, ''Test string'')", span="283-283", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_be_able_to_save_a_complex_object_to_session()"];
n266 [label="session[''testObject''] = payload", span="285-285", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_be_able_to_save_a_complex_object_to_session()"];
n265 [label="var store = new CookieBasedSessions(this.aesEncryptionProvider, this.defaultHmacProvider, this.defaultObjectSerializer)", span="284-284", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_be_able_to_save_a_complex_object_to_session()"];
n274 [label="Entry Nancy.Tests.Unit.Sessions.DefaultSessionObjectFormatterFixture.Payload.Payload(int, bool, string)", span="85-85", cluster="Nancy.Tests.Unit.Sessions.DefaultSessionObjectFormatterFixture.Payload.Payload(int, bool, string)"];
n270 [label="cookie.Name.ShouldEqual(store.CookieName)", span="291-291", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_be_able_to_save_a_complex_object_to_session()"];
n271 [label="cookie.Value.ShouldNotBeNull()", span="292-292", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_be_able_to_save_a_complex_object_to_session()"];
n272 [label="cookie.Value.ShouldNotBeEmpty()", span="293-293", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_be_able_to_save_a_complex_object_to_session()"];
n275 [label="Entry object.ShouldNotBeNull()", span="151-151", cluster="object.ShouldNotBeNull()"];
n273 [label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_be_able_to_save_a_complex_object_to_session()", span="279-279", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_be_able_to_save_a_complex_object_to_session()"];
n276 [label="Entry string.ShouldNotBeEmpty()", span="32-32", cluster="string.ShouldNotBeEmpty()"];
n277 [label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_be_able_to_load_an_object_previously_saved_to_session()", span="297-297", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_be_able_to_load_an_object_previously_saved_to_session()"];
n278 [label="var response = new Response()", span="299-299", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_be_able_to_load_an_object_previously_saved_to_session()"];
n279 [label="var session = new Session(new Dictionary<string, object>())", span="300-300", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_be_able_to_load_an_object_previously_saved_to_session()"];
n283 [label="store.Save(session, response)", span="304-304", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_be_able_to_load_an_object_previously_saved_to_session()"];
n285 [label="request.Cookies.Add(response.Cookies.First().Name, response.Cookies.First().Value)", span="306-306", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_be_able_to_load_an_object_previously_saved_to_session()"];
n280 [label="var payload = new DefaultSessionObjectFormatterFixture.Payload(27, true, ''Test string'')", span="301-301", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_be_able_to_load_an_object_previously_saved_to_session()"];
n282 [label="session[''testObject''] = payload", span="303-303", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_be_able_to_load_an_object_previously_saved_to_session()"];
n281 [label="var store = new CookieBasedSessions(this.aesEncryptionProvider, this.defaultHmacProvider, this.defaultObjectSerializer)", span="302-302", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_be_able_to_load_an_object_previously_saved_to_session()"];
n287 [label="result[''testObject''].ShouldEqual(payload)", span="310-310", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_be_able_to_load_an_object_previously_saved_to_session()"];
n286 [label="var result = store.Load(request)", span="308-308", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_be_able_to_load_an_object_previously_saved_to_session()"];
n284 [label="var request = new Request(''GET'', ''/'', ''http'')", span="305-305", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_be_able_to_load_an_object_previously_saved_to_session()"];
n288 [label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_be_able_to_load_an_object_previously_saved_to_session()", span="297-297", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_be_able_to_load_an_object_previously_saved_to_session()"];
n289 [label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_encrypt_data()", span="314-314", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_encrypt_data()"];
n290 [label="var response = new Response()", span="316-316", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_encrypt_data()"];
n291 [label="var session = new Session(new Dictionary<string, object>\r\n                                      {\r\n                                          {''key1'', ''val1''},\r\n                                      })", span="317-320", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_encrypt_data()"];
n293 [label="cookieStore.Save(session, response)", span="323-323", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_encrypt_data()"];
n292 [label="session[''key2''] = ''val2''", span="321-321", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_encrypt_data()"];
n294 [label="A.CallTo(() => this.fakeEncryptionProvider.Encrypt(A<string>.Ignored))\r\n                .MustHaveHappened(Repeated.Exactly.Once)", span="325-326", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_encrypt_data()"];
n295 [label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_encrypt_data()", span="314-314", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_encrypt_data()"];
n296 [label="Entry lambda expression", span="325-325", cluster="lambda expression"];
n297 [label="this.fakeEncryptionProvider.Encrypt(A<string>.Ignored)", span="325-325", cluster="lambda expression"];
n298 [label="Exit lambda expression", span="325-325", cluster="lambda expression"];
n299 [label="Entry Unk.Encrypt", span="", cluster="Unk.Encrypt"];
n300 [label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_generate_hmac()", span="330-330", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_generate_hmac()"];
n301 [label="var response = new Response()", span="332-332", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_generate_hmac()"];
n302 [label="var session = new Session(new Dictionary<string, object>\r\n                                      {\r\n                                          {''key1'', ''val1''},\r\n                                      })", span="333-336", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_generate_hmac()"];
n304 [label="cookieStore.Save(session, response)", span="339-339", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_generate_hmac()"];
n303 [label="session[''key2''] = ''val2''", span="337-337", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_generate_hmac()"];
n305 [label="A.CallTo(() => this.fakeHmacProvider.GenerateHmac(A<string>.Ignored))\r\n                .MustHaveHappened(Repeated.Exactly.Once)", span="341-342", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_generate_hmac()"];
n306 [label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_generate_hmac()", span="330-330", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_generate_hmac()"];
n307 [label="Entry lambda expression", span="341-341", cluster="lambda expression"];
n308 [label="this.fakeHmacProvider.GenerateHmac(A<string>.Ignored)", span="341-341", cluster="lambda expression"];
n309 [label="Exit lambda expression", span="341-341", cluster="lambda expression"];
n310 [label="Entry Unk.GenerateHmac", span="", cluster="Unk.GenerateHmac"];
n311 [label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_valid_test_data()", span="346-346", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_valid_test_data()"];
n312 [label="var inputValue = ValidHmac + ValidData", span="348-348", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_valid_test_data()", color=red, community=0];
n313 [label="inputValue = HttpUtility.UrlEncode(inputValue)", span="349-349", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_valid_test_data()", color=red, community=0];
n314 [label="var store = new CookieBasedSessions(this.aesEncryptionProvider, this.defaultHmacProvider, this.defaultObjectSerializer)", span="350-350", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_valid_test_data()", color=red, community=0];
n316 [label="request.Cookies.Add(store.CookieName, inputValue)", span="352-352", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_valid_test_data()", color=red, community=0];
n315 [label="var request = new Request(''GET'', ''/'', ''http'')", span="351-351", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_valid_test_data()", color=red, community=0];
n317 [label="var result = store.Load(request)", span="354-354", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_valid_test_data()"];
n318 [label="result.Count.ShouldEqual(1)", span="356-356", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_valid_test_data()"];
n319 [label="result.First().Value.ShouldBeOfType(typeof(DefaultSessionObjectFormatterFixture.Payload))", span="357-357", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_valid_test_data()"];
n320 [label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_valid_test_data()", span="346-346", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_load_valid_test_data()"];
n321 [label="Entry object.ShouldBeOfType(System.Type)", span="166-166", cluster="object.ShouldBeOfType(System.Type)"];
n322 [label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_hmac_changed()", span="361-361", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_hmac_changed()"];
n323 [label="var inputValue = ''b'' + ValidHmac.Substring(1) + ValidData", span="363-363", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_hmac_changed()"];
n324 [label="inputValue = HttpUtility.UrlEncode(inputValue)", span="364-364", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_hmac_changed()"];
n331 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)"];
n325 [label="var store = new CookieBasedSessions(this.aesEncryptionProvider, this.defaultHmacProvider, this.defaultObjectSerializer)", span="365-365", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_hmac_changed()"];
n327 [label="request.Cookies.Add(store.CookieName, inputValue)", span="367-367", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_hmac_changed()"];
n326 [label="var request = new Request(''GET'', ''/'', ''http'')", span="366-366", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_hmac_changed()"];
n328 [label="var result = store.Load(request)", span="369-369", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_hmac_changed()"];
n329 [label="result.Count.ShouldEqual(0)", span="371-371", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_hmac_changed()"];
n330 [label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_hmac_changed()", span="361-361", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_hmac_changed()"];
n332 [label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_hmac_missing()", span="375-375", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_hmac_missing()"];
n333 [label="var inputValue = ValidData", span="377-377", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_hmac_missing()"];
n334 [label="inputValue = HttpUtility.UrlEncode(inputValue)", span="378-378", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_hmac_missing()"];
n335 [label="var store = new CookieBasedSessions(this.aesEncryptionProvider, this.defaultHmacProvider, this.defaultObjectSerializer)", span="379-379", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_hmac_missing()"];
n337 [label="request.Cookies.Add(store.CookieName, inputValue)", span="381-381", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_hmac_missing()"];
n336 [label="var request = new Request(''GET'', ''/'', ''http'')", span="380-380", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_hmac_missing()"];
n338 [label="var result = store.Load(request)", span="383-383", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_hmac_missing()"];
n339 [label="result.Count.ShouldEqual(0)", span="385-385", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_hmac_missing()"];
n340 [label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_hmac_missing()", span="375-375", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_hmac_missing()"];
n341 [label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_encrypted_data_modified()", span="389-389", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_encrypted_data_modified()"];
n342 [label="var inputValue = ValidHmac + ValidData.Substring(0, ValidData.Length - 1) + ''Z''", span="391-391", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_encrypted_data_modified()"];
n343 [label="inputValue = HttpUtility.UrlEncode(inputValue)", span="392-392", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_encrypted_data_modified()"];
n344 [label="var store = new CookieBasedSessions(this.aesEncryptionProvider, this.defaultHmacProvider, this.defaultObjectSerializer)", span="393-393", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_encrypted_data_modified()"];
n346 [label="request.Cookies.Add(store.CookieName, inputValue)", span="395-395", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_encrypted_data_modified()"];
n345 [label="var request = new Request(''GET'', ''/'', ''http'')", span="394-394", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_encrypted_data_modified()"];
n347 [label="var result = store.Load(request)", span="397-397", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_encrypted_data_modified()"];
n348 [label="result.Count.ShouldEqual(0)", span="399-399", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_encrypted_data_modified()"];
n349 [label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_encrypted_data_modified()", span="389-389", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_encrypted_data_modified()"];
n350 [label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_encrypted_data_are_invalid_but_contain_semicolon_when_decrypted()", span="403-403", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_encrypted_data_are_invalid_but_contain_semicolon_when_decrypted()"];
n351 [label="var bogusEncrypted = this.aesEncryptionProvider.Encrypt(''foo;bar'')", span="405-405", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_encrypted_data_are_invalid_but_contain_semicolon_when_decrypted()"];
n352 [label="var inputValue = ValidHmac + bogusEncrypted", span="406-406", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_encrypted_data_are_invalid_but_contain_semicolon_when_decrypted()"];
n360 [label="Entry Nancy.Cryptography.AesEncryptionProvider.Encrypt(string)", span="30-30", cluster="Nancy.Cryptography.AesEncryptionProvider.Encrypt(string)"];
n353 [label="inputValue = HttpUtility.UrlEncode(inputValue)", span="407-407", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_encrypted_data_are_invalid_but_contain_semicolon_when_decrypted()"];
n354 [label="var store = new CookieBasedSessions(this.aesEncryptionProvider, this.defaultHmacProvider, this.defaultObjectSerializer)", span="408-408", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_encrypted_data_are_invalid_but_contain_semicolon_when_decrypted()"];
n356 [label="request.Cookies.Add(store.CookieName, inputValue)", span="410-410", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_encrypted_data_are_invalid_but_contain_semicolon_when_decrypted()"];
n355 [label="var request = new Request(''GET'', ''/'', ''http'')", span="409-409", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_encrypted_data_are_invalid_but_contain_semicolon_when_decrypted()"];
n357 [label="var result = store.Load(request)", span="412-412", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_encrypted_data_are_invalid_but_contain_semicolon_when_decrypted()"];
n358 [label="result.Count.ShouldEqual(0)", span="414-414", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_encrypted_data_are_invalid_but_contain_semicolon_when_decrypted()"];
n359 [label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_encrypted_data_are_invalid_but_contain_semicolon_when_decrypted()", span="403-403", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_return_blank_session_if_encrypted_data_are_invalid_but_contain_semicolon_when_decrypted()"];
n361 [label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_use_CookieName_when_config_provides_cookiename_value()", span="418-418", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_use_CookieName_when_config_provides_cookiename_value()"];
n362 [label="var cryptoConfig = new CryptographyConfiguration(this.fakeEncryptionProvider, this.fakeHmacProvider)", span="421-421", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_use_CookieName_when_config_provides_cookiename_value()"];
n363 [label="var storeConfig = new CookieBasedSessionsConfiguration(cryptoConfig)\r\n            {\r\n                CookieName = ''NamedCookie'',\r\n                Serializer = this.fakeObjectSerializer\r\n            }", span="422-426", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_use_CookieName_when_config_provides_cookiename_value()"];
n364 [label="var store = new CookieBasedSessions(storeConfig)", span="427-427", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_use_CookieName_when_config_provides_cookiename_value()"];
n371 [label="Entry Nancy.Session.CookieBasedSessionsConfiguration.CookieBasedSessionsConfiguration(Nancy.Cryptography.CryptographyConfiguration)", span="21-21", cluster="Nancy.Session.CookieBasedSessionsConfiguration.CookieBasedSessionsConfiguration(Nancy.Cryptography.CryptographyConfiguration)"];
n369 [label="response.Cookies.ShouldHave(c => c.Name == storeConfig.CookieName)", span="439-439", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_use_CookieName_when_config_provides_cookiename_value()"];
n375 [label="c.Name == storeConfig.CookieName", span="439-439", cluster="lambda expression"];
n365 [label="var response = new Response()", span="430-430", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_use_CookieName_when_config_provides_cookiename_value()"];
n372 [label="Entry Nancy.Session.CookieBasedSessions.CookieBasedSessions(Nancy.Session.CookieBasedSessionsConfiguration)", span="47-47", cluster="Nancy.Session.CookieBasedSessions.CookieBasedSessions(Nancy.Session.CookieBasedSessionsConfiguration)"];
n368 [label="store.Save(session, response)", span="436-436", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_use_CookieName_when_config_provides_cookiename_value()"];
n366 [label="var session = new Session(new Dictionary<string, object>\r\n                                        {\r\n                                            {''key1'', ''val1''},\r\n                                        })", span="431-434", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_use_CookieName_when_config_provides_cookiename_value()"];
n367 [label="session[''key2''] = ''val2''", span="435-435", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_use_CookieName_when_config_provides_cookiename_value()"];
n370 [label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_use_CookieName_when_config_provides_cookiename_value()", span="418-418", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_use_CookieName_when_config_provides_cookiename_value()"];
n373 [label="Entry System.Collections.Generic.IEnumerable<T>.ShouldHave<T>(System.Func<T, bool>)", span="86-86", cluster="System.Collections.Generic.IEnumerable<T>.ShouldHave<T>(System.Func<T, bool>)"];
n374 [label="Entry lambda expression", span="439-439", cluster="lambda expression"];
n376 [label="Exit lambda expression", span="439-439", cluster="lambda expression"];
n377 [label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_Domain_when_config_provides_domain_value()", span="443-443", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_Domain_when_config_provides_domain_value()"];
n378 [label="var cryptoConfig = new CryptographyConfiguration(this.fakeEncryptionProvider, this.fakeHmacProvider)", span="446-446", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_Domain_when_config_provides_domain_value()"];
n379 [label="var storeConfig = new CookieBasedSessionsConfiguration(cryptoConfig)\r\n            {\r\n                Domain = ''.nancyfx.org'',\r\n                Serializer = this.fakeObjectSerializer\r\n            }", span="447-451", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_Domain_when_config_provides_domain_value()"];
n380 [label="var store = new CookieBasedSessions(storeConfig)", span="452-452", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_Domain_when_config_provides_domain_value()"];
n385 [label="var cookie = response.Cookies.First(c => c.Name == storeConfig.CookieName)", span="464-464", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_Domain_when_config_provides_domain_value()"];
n390 [label="c.Name == storeConfig.CookieName", span="464-464", cluster="lambda expression"];
n386 [label="cookie.Domain.ShouldEqual(storeConfig.Domain)", span="465-465", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_Domain_when_config_provides_domain_value()"];
n381 [label="var response = new Response()", span="455-455", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_Domain_when_config_provides_domain_value()"];
n384 [label="store.Save(session, response)", span="461-461", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_Domain_when_config_provides_domain_value()"];
n382 [label="var session = new Session(new Dictionary<string, object>\r\n                                        {\r\n                                            {''key1'', ''val1''},\r\n                                        })", span="456-459", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_Domain_when_config_provides_domain_value()"];
n383 [label="session[''key2''] = ''val2''", span="460-460", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_Domain_when_config_provides_domain_value()"];
n388 [label="Entry Unk.First", span="", cluster="Unk.First"];
n389 [label="Entry lambda expression", span="464-464", cluster="lambda expression"];
n387 [label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_Domain_when_config_provides_domain_value()", span="443-443", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_Domain_when_config_provides_domain_value()"];
n391 [label="Exit lambda expression", span="464-464", cluster="lambda expression"];
n392 [label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_Path_when_config_provides_path_value()", span="469-469", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_Path_when_config_provides_path_value()"];
n393 [label="var cryptoConfig = new CryptographyConfiguration(this.fakeEncryptionProvider, this.fakeHmacProvider)", span="472-472", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_Path_when_config_provides_path_value()"];
n394 [label="var storeConfig = new CookieBasedSessionsConfiguration(cryptoConfig)\r\n            {\r\n                Path = ''/'',\r\n                Serializer = this.fakeObjectSerializer\r\n            }", span="473-477", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_Path_when_config_provides_path_value()"];
n395 [label="var store = new CookieBasedSessions(storeConfig)", span="478-478", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_Path_when_config_provides_path_value()"];
n400 [label="var cookie = response.Cookies.First(c => c.Name == storeConfig.CookieName)", span="490-490", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_Path_when_config_provides_path_value()"];
n404 [label="c.Name == storeConfig.CookieName", span="490-490", cluster="lambda expression"];
n401 [label="cookie.Path.ShouldEqual(storeConfig.Path)", span="491-491", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_Path_when_config_provides_path_value()"];
n396 [label="var response = new Response()", span="481-481", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_Path_when_config_provides_path_value()"];
n399 [label="store.Save(session, response)", span="487-487", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_Path_when_config_provides_path_value()"];
n397 [label="var session = new Session(new Dictionary<string, object>\r\n                                          {\r\n                                              {''key1'', ''val1''},\r\n                                          })", span="482-485", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_Path_when_config_provides_path_value()"];
n398 [label="session[''key2''] = ''val2''", span="486-486", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_Path_when_config_provides_path_value()"];
n403 [label="Entry lambda expression", span="490-490", cluster="lambda expression"];
n402 [label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_Path_when_config_provides_path_value()", span="469-469", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.Should_set_Path_when_config_provides_path_value()"];
n405 [label="Exit lambda expression", span="490-490", cluster="lambda expression"];
n406 [label="var headers = new Dictionary<string, IEnumerable<string>>(1)", span="496-496", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CreateRequest(string, bool)"];
n407 [label="!string.IsNullOrEmpty(sessionValue)", span="498-498", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CreateRequest(string, bool)"];
n408 [label="headers.Add(''cookie'', new[] { this.cookieStore.CookieName+ ''='' + HttpUtility.UrlEncode(sessionValue) })", span="500-500", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CreateRequest(string, bool)", color=red, community=0];
n410 [label=load, span="505-505", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CreateRequest(string, bool)"];
n414 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)"];
n409 [label="var request = new Request(''GET'', new Url { Path = ''/'', Scheme = ''http'', Port = 9001, BasePath = ''goku.power'' }, CreateRequestStream(), headers)", span="503-503", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CreateRequest(string, bool)"];
n415 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)"];
n416 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)"];
n417 [label="Entry Nancy.Request.Request(string, Nancy.Url, System.IO.Stream, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, string, System.Security.Cryptography.X509Certificates.X509Certificate, string)", span="50-50", cluster="Nancy.Request.Request(string, Nancy.Url, System.IO.Stream, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, string, System.Security.Cryptography.X509Certificates.X509Certificate, string)"];
n418 [label="Entry Nancy.Url.Url()", span="21-21", cluster="Nancy.Url.Url()"];
n419 [label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CreateRequestStream()", span="513-513", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CreateRequestStream()"];
n411 [label="cookieStore.Load(request)", span="507-507", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CreateRequest(string, bool)"];
n412 [label="return request;", span="510-510", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CreateRequest(string, bool)"];
n413 [label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CreateRequest(string, bool)", span="494-494", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CreateRequest(string, bool)"];
n420 [label="return CreateRequestStream(new MemoryStream());", span="515-515", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CreateRequestStream()"];
n421 [label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CreateRequestStream()", span="513-513", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CreateRequestStream()"];
n422 [label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0", cluster="System.IO.MemoryStream.MemoryStream()"];
n423 [label="Entry Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CreateRequestStream(System.IO.Stream)", span="518-518", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CreateRequestStream(System.IO.Stream)"];
n424 [label="return RequestStream.FromStream(stream, 0, 1, true);", span="520-520", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CreateRequestStream(System.IO.Stream)"];
n425 [label="Exit Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CreateRequestStream(System.IO.Stream)", span="518-518", cluster="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture.CreateRequestStream(System.IO.Stream)"];
n426 [label="Entry Nancy.IO.RequestStream.FromStream(System.IO.Stream, long, long, bool)", span="317-317", cluster="Nancy.IO.RequestStream.FromStream(System.IO.Stream, long, long, bool)"];
m0_9 [label="Entry Nancy.ViewEngines.DefaultViewResolver.GetViewLocation(string, dynamic, Nancy.ViewEngines.ViewLocationContext)", span="41-41", cluster="Nancy.ViewEngines.DefaultViewResolver.GetViewLocation(string, dynamic, Nancy.ViewEngines.ViewLocationContext)", file="EmbeddedStaticContentConventionBuilder.cs"];
m0_16 [label="var conventionBasedViewName =\r\n                    SafeInvokeConvention(convention, viewName, model, viewLocationContext)", span="57-58", cluster="Nancy.ViewEngines.DefaultViewResolver.GetViewLocation(string, dynamic, Nancy.ViewEngines.ViewLocationContext)", file="EmbeddedStaticContentConventionBuilder.cs"];
m0_15 [label=conventions, span="55-55", cluster="Nancy.ViewEngines.DefaultViewResolver.GetViewLocation(string, dynamic, Nancy.ViewEngines.ViewLocationContext)", file="EmbeddedStaticContentConventionBuilder.cs"];
m0_11 [label="return null;", span="45-45", cluster="Nancy.ViewEngines.DefaultViewResolver.GetViewLocation(string, dynamic, Nancy.ViewEngines.ViewLocationContext)", file="EmbeddedStaticContentConventionBuilder.cs"];
m0_17 [label="String.IsNullOrEmpty(conventionBasedViewName)", span="60-60", cluster="Nancy.ViewEngines.DefaultViewResolver.GetViewLocation(string, dynamic, Nancy.ViewEngines.ViewLocationContext)", file="EmbeddedStaticContentConventionBuilder.cs"];
m0_18 [label="viewLocationContext.Context.Trace.TraceLog.WriteLog(x => x.AppendLine(string.Concat(''[DefaultViewResolver] Attempting to locate view using convention ''', conventionBasedViewName, ''''')))", span="65-65", cluster="Nancy.ViewEngines.DefaultViewResolver.GetViewLocation(string, dynamic, Nancy.ViewEngines.ViewLocationContext)", file="EmbeddedStaticContentConventionBuilder.cs"];
m0_19 [label="var locatedView = \r\n                    this.viewLocator.LocateView(conventionBasedViewName)", span="67-68", cluster="Nancy.ViewEngines.DefaultViewResolver.GetViewLocation(string, dynamic, Nancy.ViewEngines.ViewLocationContext)", file="EmbeddedStaticContentConventionBuilder.cs"];
m0_21 [label="viewLocationContext.Context.Trace.TraceLog.WriteLog(x => x.AppendLine(string.Concat(''[DefaultViewResolver] View resolved at ''', conventionBasedViewName, ''''')))", span="72-72", cluster="Nancy.ViewEngines.DefaultViewResolver.GetViewLocation(string, dynamic, Nancy.ViewEngines.ViewLocationContext)", file="EmbeddedStaticContentConventionBuilder.cs"];
m0_14 [label="viewLocationContext.Context.Trace.TraceLog.WriteLog(x => x.AppendLine(string.Concat(''[DefaultViewResolver] Resolving view for ''', viewName , ''', using view location conventions.'')))", span="53-53", cluster="Nancy.ViewEngines.DefaultViewResolver.GetViewLocation(string, dynamic, Nancy.ViewEngines.ViewLocationContext)", file="EmbeddedStaticContentConventionBuilder.cs"];
m0_20 [label="locatedView != null", span="70-70", cluster="Nancy.ViewEngines.DefaultViewResolver.GetViewLocation(string, dynamic, Nancy.ViewEngines.ViewLocationContext)", file="EmbeddedStaticContentConventionBuilder.cs"];
m0_23 [label="viewLocationContext.Context.Trace.TraceLog.WriteLog(x => x.AppendLine(''[DefaultViewResolver] No view could be resolved using the available view location conventions.''))", span="77-77", cluster="Nancy.ViewEngines.DefaultViewResolver.GetViewLocation(string, dynamic, Nancy.ViewEngines.ViewLocationContext)", file="EmbeddedStaticContentConventionBuilder.cs"];
m0_10 [label="string.IsNullOrEmpty(viewName)", span="43-43", cluster="Nancy.ViewEngines.DefaultViewResolver.GetViewLocation(string, dynamic, Nancy.ViewEngines.ViewLocationContext)", file="EmbeddedStaticContentConventionBuilder.cs"];
m0_12 [label="viewLocationContext == null", span="48-48", cluster="Nancy.ViewEngines.DefaultViewResolver.GetViewLocation(string, dynamic, Nancy.ViewEngines.ViewLocationContext)", file="EmbeddedStaticContentConventionBuilder.cs"];
m0_22 [label="return locatedView;", span="73-73", cluster="Nancy.ViewEngines.DefaultViewResolver.GetViewLocation(string, dynamic, Nancy.ViewEngines.ViewLocationContext)", file="EmbeddedStaticContentConventionBuilder.cs"];
m0_24 [label="return null;", span="79-79", cluster="Nancy.ViewEngines.DefaultViewResolver.GetViewLocation(string, dynamic, Nancy.ViewEngines.ViewLocationContext)", file="EmbeddedStaticContentConventionBuilder.cs"];
m0_13 [label="return null;", span="50-50", cluster="Nancy.ViewEngines.DefaultViewResolver.GetViewLocation(string, dynamic, Nancy.ViewEngines.ViewLocationContext)", file="EmbeddedStaticContentConventionBuilder.cs"];
m0_25 [label="Exit Nancy.ViewEngines.DefaultViewResolver.GetViewLocation(string, dynamic, Nancy.ViewEngines.ViewLocationContext)", span="41-41", cluster="Nancy.ViewEngines.DefaultViewResolver.GetViewLocation(string, dynamic, Nancy.ViewEngines.ViewLocationContext)", file="EmbeddedStaticContentConventionBuilder.cs"];
m0_48 [label="Entry System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", span="0-0", cluster="System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", file="EmbeddedStaticContentConventionBuilder.cs"];
m0_27 [label="Entry Nancy.Diagnostics.TraceLog.WriteLog(System.Action<System.Text.StringBuilder>)", span="14-14", cluster="Nancy.Diagnostics.TraceLog.WriteLog(System.Action<System.Text.StringBuilder>)", file="EmbeddedStaticContentConventionBuilder.cs"];
m0_34 [label="Entry System.Text.StringBuilder.AppendLine(string)", span="0-0", cluster="System.Text.StringBuilder.AppendLine(string)", file="EmbeddedStaticContentConventionBuilder.cs"];
m0_38 [label="Entry Unk.Concat", span="", cluster="Unk.Concat", file="EmbeddedStaticContentConventionBuilder.cs"];
m0_28 [label="Entry Nancy.ViewEngines.DefaultViewResolver.SafeInvokeConvention(System.Func<string, object, Nancy.ViewEngines.ViewLocationContext, string>, string, dynamic, Nancy.ViewEngines.ViewLocationContext)", span="82-82", cluster="Nancy.ViewEngines.DefaultViewResolver.SafeInvokeConvention(System.Func<string, object, Nancy.ViewEngines.ViewLocationContext, string>, string, dynamic, Nancy.ViewEngines.ViewLocationContext)", file="EmbeddedStaticContentConventionBuilder.cs"];
m0_45 [label="return convention.Invoke(viewName, model, viewLocationContext);", span="86-86", cluster="Nancy.ViewEngines.DefaultViewResolver.SafeInvokeConvention(System.Func<string, object, Nancy.ViewEngines.ViewLocationContext, string>, string, dynamic, Nancy.ViewEngines.ViewLocationContext)", color=green, community=0, file="EmbeddedStaticContentConventionBuilder.cs"];
m0_46 [label="return null;", span="90-90", cluster="Nancy.ViewEngines.DefaultViewResolver.SafeInvokeConvention(System.Func<string, object, Nancy.ViewEngines.ViewLocationContext, string>, string, dynamic, Nancy.ViewEngines.ViewLocationContext)", color=green, community=0, file="EmbeddedStaticContentConventionBuilder.cs"];
m0_47 [label="Exit Nancy.ViewEngines.DefaultViewResolver.SafeInvokeConvention(System.Func<string, object, Nancy.ViewEngines.ViewLocationContext, string>, string, dynamic, Nancy.ViewEngines.ViewLocationContext)", span="82-82", cluster="Nancy.ViewEngines.DefaultViewResolver.SafeInvokeConvention(System.Func<string, object, Nancy.ViewEngines.ViewLocationContext, string>, string, dynamic, Nancy.ViewEngines.ViewLocationContext)", file="EmbeddedStaticContentConventionBuilder.cs"];
m0_0 [label="Entry Nancy.ViewEngines.DefaultViewResolver.DefaultViewResolver(Nancy.ViewEngines.IViewLocator, Nancy.Conventions.ViewLocationConventions)", span="18-18", cluster="Nancy.ViewEngines.DefaultViewResolver.DefaultViewResolver(Nancy.ViewEngines.IViewLocator, Nancy.Conventions.ViewLocationConventions)", file="EmbeddedStaticContentConventionBuilder.cs"];
m0_5 [label="this.viewLocator = viewLocator", span="30-30", cluster="Nancy.ViewEngines.DefaultViewResolver.DefaultViewResolver(Nancy.ViewEngines.IViewLocator, Nancy.Conventions.ViewLocationConventions)", file="EmbeddedStaticContentConventionBuilder.cs"];
m0_6 [label="this.conventions = conventions", span="31-31", cluster="Nancy.ViewEngines.DefaultViewResolver.DefaultViewResolver(Nancy.ViewEngines.IViewLocator, Nancy.Conventions.ViewLocationConventions)", file="EmbeddedStaticContentConventionBuilder.cs"];
m0_3 [label="conventions == null", span="25-25", cluster="Nancy.ViewEngines.DefaultViewResolver.DefaultViewResolver(Nancy.ViewEngines.IViewLocator, Nancy.Conventions.ViewLocationConventions)", file="EmbeddedStaticContentConventionBuilder.cs"];
m0_1 [label="viewLocator == null", span="20-20", cluster="Nancy.ViewEngines.DefaultViewResolver.DefaultViewResolver(Nancy.ViewEngines.IViewLocator, Nancy.Conventions.ViewLocationConventions)", file="EmbeddedStaticContentConventionBuilder.cs"];
m0_4 [label="throw new InvalidOperationException(''Cannot create an instance of DefaultViewResolver with conventions parameter having null value.'');", span="27-27", cluster="Nancy.ViewEngines.DefaultViewResolver.DefaultViewResolver(Nancy.ViewEngines.IViewLocator, Nancy.Conventions.ViewLocationConventions)", file="EmbeddedStaticContentConventionBuilder.cs"];
m0_2 [label="throw new InvalidOperationException(''Cannot create an instance of DefaultViewResolver with view locator parameter having null value.'');", span="22-22", cluster="Nancy.ViewEngines.DefaultViewResolver.DefaultViewResolver(Nancy.ViewEngines.IViewLocator, Nancy.Conventions.ViewLocationConventions)", file="EmbeddedStaticContentConventionBuilder.cs"];
m0_7 [label="Exit Nancy.ViewEngines.DefaultViewResolver.DefaultViewResolver(Nancy.ViewEngines.IViewLocator, Nancy.Conventions.ViewLocationConventions)", span="18-18", cluster="Nancy.ViewEngines.DefaultViewResolver.DefaultViewResolver(Nancy.ViewEngines.IViewLocator, Nancy.Conventions.ViewLocationConventions)", file="EmbeddedStaticContentConventionBuilder.cs"];
m0_33 [label="Entry string.Concat(string, string, string)", span="0-0", cluster="string.Concat(string, string, string)", file="EmbeddedStaticContentConventionBuilder.cs"];
m0_42 [label="Entry lambda expression", span="77-77", cluster="lambda expression", file="EmbeddedStaticContentConventionBuilder.cs"];
m0_36 [label="x.AppendLine(string.Concat(''[DefaultViewResolver] Attempting to locate view using convention ''', conventionBasedViewName, '''''))", span="65-65", cluster="lambda expression", file="EmbeddedStaticContentConventionBuilder.cs"];
m0_40 [label="x.AppendLine(string.Concat(''[DefaultViewResolver] View resolved at ''', conventionBasedViewName, '''''))", span="72-72", cluster="lambda expression", file="EmbeddedStaticContentConventionBuilder.cs"];
m0_31 [label="x.AppendLine(string.Concat(''[DefaultViewResolver] Resolving view for ''', viewName , ''', using view location conventions.''))", span="53-53", cluster="lambda expression", file="EmbeddedStaticContentConventionBuilder.cs"];
m0_35 [label="Entry lambda expression", span="65-65", cluster="lambda expression", file="EmbeddedStaticContentConventionBuilder.cs"];
m0_37 [label="Exit lambda expression", span="65-65", cluster="lambda expression", file="EmbeddedStaticContentConventionBuilder.cs"];
m0_39 [label="Entry lambda expression", span="72-72", cluster="lambda expression", file="EmbeddedStaticContentConventionBuilder.cs"];
m0_41 [label="Exit lambda expression", span="72-72", cluster="lambda expression", file="EmbeddedStaticContentConventionBuilder.cs"];
m0_30 [label="Entry lambda expression", span="53-53", cluster="lambda expression", file="EmbeddedStaticContentConventionBuilder.cs"];
m0_32 [label="Exit lambda expression", span="53-53", cluster="lambda expression", file="EmbeddedStaticContentConventionBuilder.cs"];
m0_43 [label="x.AppendLine(''[DefaultViewResolver] No view could be resolved using the available view location conventions.'')", span="77-77", cluster="lambda expression", file="EmbeddedStaticContentConventionBuilder.cs"];
m0_44 [label="Exit lambda expression", span="77-77", cluster="lambda expression", file="EmbeddedStaticContentConventionBuilder.cs"];
m0_29 [label="Entry Nancy.ViewEngines.IViewLocator.LocateView(string)", span="12-12", cluster="Nancy.ViewEngines.IViewLocator.LocateView(string)", file="EmbeddedStaticContentConventionBuilder.cs"];
m0_8 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="EmbeddedStaticContentConventionBuilder.cs"];
m0_49 [label="Nancy.ViewEngines.DefaultViewResolver", span="", file="EmbeddedStaticContentConventionBuilder.cs"];
m0_51 [label=conventionBasedViewName, span="", file="EmbeddedStaticContentConventionBuilder.cs"];
m0_50 [label=string, span="", file="EmbeddedStaticContentConventionBuilder.cs"];
m1_9 [label="Entry Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.Modules(params System.Type[])", span="1004-1004", cluster="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.Modules(params System.Type[])", file="PartialViewTests.cs"];
m1_20 [label="Entry string.LastIndexOf(string, System.StringComparison)", span="0-0", cluster="string.LastIndexOf(string, System.StringComparison)", file="PartialViewTests.cs"];
m1_0 [label="Entry Nancy.Tests.Functional.Tests.PartialViewTests.PartialViewTests()", span="18-18", cluster="Nancy.Tests.Functional.Tests.PartialViewTests.PartialViewTests()", file="PartialViewTests.cs"];
m1_1 [label="this.bootstrapper = new ConfigurableBootstrapper(\r\n                    configuration => configuration.Modules(typeof(RazorTestModule)))", span="20-21", cluster="Nancy.Tests.Functional.Tests.PartialViewTests.PartialViewTests()", file="PartialViewTests.cs"];
m1_2 [label="this.browser = new Browser(bootstrapper)", span="23-23", cluster="Nancy.Tests.Functional.Tests.PartialViewTests.PartialViewTests()", file="PartialViewTests.cs"];
m1_3 [label="Exit Nancy.Tests.Functional.Tests.PartialViewTests.PartialViewTests()", span="18-18", cluster="Nancy.Tests.Functional.Tests.PartialViewTests.PartialViewTests()", file="PartialViewTests.cs"];
m1_17 [label="Entry Nancy.Testing.Browser.Get(string, System.Action<Nancy.Testing.BrowserContext>)", span="76-76", cluster="Nancy.Testing.Browser.Get(string, System.Action<Nancy.Testing.BrowserContext>)", file="PartialViewTests.cs"];
m1_18 [label="Entry Nancy.Testing.BrowserResponseBodyWrapper.AsString()", span="30-30", cluster="Nancy.Testing.BrowserResponseBodyWrapper.AsString()", file="PartialViewTests.cs"];
m1_4 [label="Entry Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapper(System.Action<Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator>)", span="64-64", cluster="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapper(System.Action<Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator>)", file="PartialViewTests.cs"];
m1_21 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="PartialViewTests.cs"];
m1_26 [label="Entry Nancy.Tests.Functional.Tests.PartialViewTests.When_Partial_View_Could_Not_Be_Found_An_Meaningful_Exception_Should_Be_Thrown()", span="49-49", cluster="Nancy.Tests.Functional.Tests.PartialViewTests.When_Partial_View_Could_Not_Be_Found_An_Meaningful_Exception_Should_Be_Thrown()", file="PartialViewTests.cs"];
m1_27 [label="var ex = await RecordAsync.Exception(async () =>\r\n            {\r\n                var response = await this.browser.Get(@''/razor-partialnotfound'');\r\n\r\n                response.Body.AsString();\r\n            })", span="51-56", cluster="Nancy.Tests.Functional.Tests.PartialViewTests.When_Partial_View_Could_Not_Be_Found_An_Meaningful_Exception_Should_Be_Thrown()", file="PartialViewTests.cs"];
m1_28 [label="Assert.IsType<ViewNotFoundException>(ex.GetBaseException())", span="58-58", cluster="Nancy.Tests.Functional.Tests.PartialViewTests.When_Partial_View_Could_Not_Be_Found_An_Meaningful_Exception_Should_Be_Thrown()", file="PartialViewTests.cs"];
m1_29 [label="Exit Nancy.Tests.Functional.Tests.PartialViewTests.When_Partial_View_Could_Not_Be_Found_An_Meaningful_Exception_Should_Be_Thrown()", span="49-49", cluster="Nancy.Tests.Functional.Tests.PartialViewTests.When_Partial_View_Could_Not_Be_Found_An_Meaningful_Exception_Should_Be_Thrown()", file="PartialViewTests.cs"];
m1_30 [label="Entry Nancy.Tests.xUnitExtensions.RecordAsync.Exception(System.Func<System.Threading.Tasks.Task>)", span="8-8", cluster="Nancy.Tests.xUnitExtensions.RecordAsync.Exception(System.Func<System.Threading.Tasks.Task>)", file="PartialViewTests.cs"];
m1_25 [label="Entry Nancy.Testing.BrowserContext.HttpRequest()", span="156-156", cluster="Nancy.Testing.BrowserContext.HttpRequest()", file="PartialViewTests.cs"];
m1_31 [label="Entry System.Exception.GetBaseException()", span="0-0", cluster="System.Exception.GetBaseException()", file="PartialViewTests.cs"];
m1_33 [label="Entry lambda expression", span="51-56", cluster="lambda expression", file="PartialViewTests.cs"];
m1_7 [label="configuration.Modules(typeof(RazorTestModule))", span="21-21", cluster="lambda expression", file="PartialViewTests.cs"];
m1_6 [label="Entry lambda expression", span="21-21", cluster="lambda expression", file="PartialViewTests.cs"];
m1_8 [label="Exit lambda expression", span="21-21", cluster="lambda expression", file="PartialViewTests.cs"];
m1_22 [label="Entry lambda expression", span="33-36", cluster="lambda expression", file="PartialViewTests.cs"];
m1_23 [label="with.HttpRequest()", span="35-35", cluster="lambda expression", file="PartialViewTests.cs"];
m1_24 [label="Exit lambda expression", span="33-36", cluster="lambda expression", file="PartialViewTests.cs"];
m1_34 [label="var response = await this.browser.Get(@''/razor-partialnotfound'')", span="53-53", cluster="lambda expression", file="PartialViewTests.cs"];
m1_35 [label="response.Body.AsString()", span="55-55", cluster="lambda expression", file="PartialViewTests.cs"];
m1_36 [label="Exit lambda expression", span="51-56", cluster="lambda expression", file="PartialViewTests.cs"];
m1_19 [label="Entry string.IndexOf(string, System.StringComparison)", span="0-0", cluster="string.IndexOf(string, System.StringComparison)", file="PartialViewTests.cs"];
m1_10 [label="Entry Nancy.Tests.Functional.Tests.PartialViewTests.When_Using_Partial_View_Then_First_Index_Of_ViewStart_Should_Equal_Last_Index()", span="27-27", cluster="Nancy.Tests.Functional.Tests.PartialViewTests.When_Using_Partial_View_Then_First_Index_Of_ViewStart_Should_Equal_Last_Index()", file="PartialViewTests.cs"];
m1_11 [label="var response = await browser.Get(\r\n                @''/razor-viewbag'',\r\n                with =>\r\n                {\r\n                    with.HttpRequest();\r\n                })", span="31-36", cluster="Nancy.Tests.Functional.Tests.PartialViewTests.When_Using_Partial_View_Then_First_Index_Of_ViewStart_Should_Equal_Last_Index()", file="PartialViewTests.cs"];
m1_12 [label="var body = response.Body.AsString()", span="39-39", cluster="Nancy.Tests.Functional.Tests.PartialViewTests.When_Using_Partial_View_Then_First_Index_Of_ViewStart_Should_Equal_Last_Index()", file="PartialViewTests.cs"];
m1_13 [label="var firstIndex = body.IndexOf(@''Hello World, this is the View Start...'', StringComparison.Ordinal)", span="41-41", cluster="Nancy.Tests.Functional.Tests.PartialViewTests.When_Using_Partial_View_Then_First_Index_Of_ViewStart_Should_Equal_Last_Index()", file="PartialViewTests.cs"];
m1_14 [label="var lastIndex = body.LastIndexOf(@''Hello World, this is the View Start...'', StringComparison.Ordinal)", span="42-42", cluster="Nancy.Tests.Functional.Tests.PartialViewTests.When_Using_Partial_View_Then_First_Index_Of_ViewStart_Should_Equal_Last_Index()", file="PartialViewTests.cs"];
m1_15 [label="Assert.Equal(firstIndex, lastIndex)", span="45-45", cluster="Nancy.Tests.Functional.Tests.PartialViewTests.When_Using_Partial_View_Then_First_Index_Of_ViewStart_Should_Equal_Last_Index()", file="PartialViewTests.cs"];
m1_16 [label="Exit Nancy.Tests.Functional.Tests.PartialViewTests.When_Using_Partial_View_Then_First_Index_Of_ViewStart_Should_Equal_Last_Index()", span="27-27", cluster="Nancy.Tests.Functional.Tests.PartialViewTests.When_Using_Partial_View_Then_First_Index_Of_ViewStart_Should_Equal_Last_Index()", file="PartialViewTests.cs"];
m1_5 [label="Entry Nancy.Testing.Browser.Browser(Nancy.Bootstrapper.INancyBootstrapper, System.Action<Nancy.Testing.BrowserContext>)", span="40-40", cluster="Nancy.Testing.Browser.Browser(Nancy.Bootstrapper.INancyBootstrapper, System.Action<Nancy.Testing.BrowserContext>)", file="PartialViewTests.cs"];
m1_37 [label="Nancy.Tests.Functional.Tests.PartialViewTests", span="", file="PartialViewTests.cs"];
m2_158 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="StaticContentConventionBuilderFixture.cs"];
m2_13 [label="Entry Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetStaticContent(string, string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", span="258-258", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetStaticContent(string, string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StaticContentConventionBuilderFixture.cs"];
m2_129 [label="var response = this.GetStaticContentResponse(virtualDirectory, requestedFilename, root, headers)", span="260-260", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetStaticContent(string, string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StaticContentConventionBuilderFixture.cs"];
m2_130 [label="var fileResponse = response as GenericFileResponse", span="262-262", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetStaticContent(string, string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StaticContentConventionBuilderFixture.cs"];
m2_135 [label="return string.Format(''Static content returned an invalid response of {0}'', response == null ? ''(null)'' : response.GetType().ToString());", span="273-273", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetStaticContent(string, string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StaticContentConventionBuilderFixture.cs"];
m2_131 [label="fileResponse != null", span="264-264", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetStaticContent(string, string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StaticContentConventionBuilderFixture.cs"];
m2_133 [label="fileResponse.Contents(stream)", span="268-268", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetStaticContent(string, string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StaticContentConventionBuilderFixture.cs"];
m2_132 [label="var stream = new MemoryStream()", span="266-266", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetStaticContent(string, string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StaticContentConventionBuilderFixture.cs"];
m2_134 [label="return Encoding.UTF8.GetString(stream.ToArray());", span="269-269", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetStaticContent(string, string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StaticContentConventionBuilderFixture.cs"];
m2_136 [label="Exit Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetStaticContent(string, string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", span="258-258", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetStaticContent(string, string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StaticContentConventionBuilderFixture.cs"];
m2_8 [label="Entry Nancy.Configuration.INancyEnvironment.StaticContent(params string[])", span="15-15", cluster="Nancy.Configuration.INancyEnvironment.StaticContent(params string[])", file="StaticContentConventionBuilderFixture.cs"];
m2_5 [label="Entry System.IO.DirectoryInfo.DirectoryInfo(string)", span="0-0", cluster="System.IO.DirectoryInfo.DirectoryInfo(string)", file="StaticContentConventionBuilderFixture.cs"];
m2_111 [label="Entry System.DateTime.ToString(string, System.IFormatProvider)", span="0-0", cluster="System.DateTime.ToString(string, System.IFormatProvider)", file="StaticContentConventionBuilderFixture.cs"];
m2_39 [label="Entry Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_skip_the_request_if_resource_is_outside_the_content_folder()", span="115-115", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_skip_the_request_if_resource_is_outside_the_content_folder()", file="StaticContentConventionBuilderFixture.cs"];
m2_40 [label="var result = GetStaticContent(''css'', ''../../outside/styles.css'')", span="119-119", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_skip_the_request_if_resource_is_outside_the_content_folder()", file="StaticContentConventionBuilderFixture.cs"];
m2_41 [label="result.ShouldEqual(''Static content returned an invalid response of (null)'')", span="122-122", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_skip_the_request_if_resource_is_outside_the_content_folder()", file="StaticContentConventionBuilderFixture.cs"];
m2_42 [label="Exit Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_skip_the_request_if_resource_is_outside_the_content_folder()", span="115-115", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_skip_the_request_if_resource_is_outside_the_content_folder()", file="StaticContentConventionBuilderFixture.cs"];
m2_66 [label="Entry Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_throw_security_exception_when_content_path_is_null_and_requested_path_points_to_root()", span="158-158", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_throw_security_exception_when_content_path_is_null_and_requested_path_points_to_root()", file="StaticContentConventionBuilderFixture.cs"];
m2_67 [label="var convention = StaticContentConventionBuilder.AddDirectory(''/'')", span="161-161", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_throw_security_exception_when_content_path_is_null_and_requested_path_points_to_root()", file="StaticContentConventionBuilderFixture.cs"];
m2_68 [label="var request = new Request(''GET'', ''/face.png'', ''http'')", span="162-162", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_throw_security_exception_when_content_path_is_null_and_requested_path_points_to_root()", file="StaticContentConventionBuilderFixture.cs"];
m2_70 [label="var exception = Record.Exception(() => convention.Invoke(context, directory))", span="169-169", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_throw_security_exception_when_content_path_is_null_and_requested_path_points_to_root()", file="StaticContentConventionBuilderFixture.cs"];
m2_69 [label="var context = new NancyContext\r\n            {\r\n                Request = request\r\n            }", span="163-166", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_throw_security_exception_when_content_path_is_null_and_requested_path_points_to_root()", file="StaticContentConventionBuilderFixture.cs"];
m2_71 [label="exception.ShouldBeOfType<ArgumentException>()", span="172-172", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_throw_security_exception_when_content_path_is_null_and_requested_path_points_to_root()", file="StaticContentConventionBuilderFixture.cs"];
m2_72 [label="Exit Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_throw_security_exception_when_content_path_is_null_and_requested_path_points_to_root()", span="158-158", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_throw_security_exception_when_content_path_is_null_and_requested_path_points_to_root()", file="StaticContentConventionBuilderFixture.cs"];
m2_141 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="StaticContentConventionBuilderFixture.cs"];
m2_124 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="StaticContentConventionBuilderFixture.cs"];
m2_83 [label="Entry Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetStaticContentResponse(string, string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", span="276-276", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetStaticContentResponse(string, string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StaticContentConventionBuilderFixture.cs"];
m2_143 [label="var context = GetContext(virtualDirectory, requestedFilename, headers)", span="278-278", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetStaticContentResponse(string, string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StaticContentConventionBuilderFixture.cs"];
m2_144 [label="var resolver = GetResolver(virtualDirectory)", span="280-280", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetStaticContentResponse(string, string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StaticContentConventionBuilderFixture.cs"];
m2_145 [label="var rootFolder = root ?? this.directory", span="282-282", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetStaticContentResponse(string, string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StaticContentConventionBuilderFixture.cs"];
m2_146 [label="context.Environment = new DefaultNancyEnvironment()", span="284-284", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetStaticContentResponse(string, string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StaticContentConventionBuilderFixture.cs"];
m2_147 [label="context.Environment.StaticContent(safepaths:rootFolder)", span="285-285", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetStaticContentResponse(string, string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StaticContentConventionBuilderFixture.cs"];
m2_148 [label="var response = resolver.Invoke(context, rootFolder)", span="287-287", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetStaticContentResponse(string, string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StaticContentConventionBuilderFixture.cs"];
m2_149 [label="return response;", span="288-288", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetStaticContentResponse(string, string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StaticContentConventionBuilderFixture.cs"];
m2_150 [label="Exit Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetStaticContentResponse(string, string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", span="276-276", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetStaticContentResponse(string, string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StaticContentConventionBuilderFixture.cs"];
m2_85 [label="Entry Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_not_modified_if_not_changed_and_conditional_request_on_modified_sent()", span="188-188", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_not_modified_if_not_changed_and_conditional_request_on_modified_sent()", file="StaticContentConventionBuilderFixture.cs"];
m2_86 [label="var initialResult = this.GetStaticContentResponse(''css/css'', ''styles.css'')", span="190-190", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_not_modified_if_not_changed_and_conditional_request_on_modified_sent()", file="StaticContentConventionBuilderFixture.cs"];
m2_87 [label="var moddedTime = initialResult.Headers[''Last-Modified'']", span="191-191", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_not_modified_if_not_changed_and_conditional_request_on_modified_sent()", file="StaticContentConventionBuilderFixture.cs"];
m2_88 [label="var headers = new Dictionary<string, IEnumerable<string>> { { ''If-Modified-Since'', new[] { moddedTime } } }", span="192-192", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_not_modified_if_not_changed_and_conditional_request_on_modified_sent()", file="StaticContentConventionBuilderFixture.cs"];
m2_89 [label="var result = this.GetStaticContentResponse(''css/css'', ''styles.css'', headers: headers)", span="194-194", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_not_modified_if_not_changed_and_conditional_request_on_modified_sent()", file="StaticContentConventionBuilderFixture.cs"];
m2_90 [label="result.StatusCode.ShouldEqual(HttpStatusCode.NotModified)", span="196-196", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_not_modified_if_not_changed_and_conditional_request_on_modified_sent()", file="StaticContentConventionBuilderFixture.cs"];
m2_91 [label="Exit Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_not_modified_if_not_changed_and_conditional_request_on_modified_sent()", span="188-188", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_not_modified_if_not_changed_and_conditional_request_on_modified_sent()", file="StaticContentConventionBuilderFixture.cs"];
m2_35 [label="Entry Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_path_contains_dot()", span="104-104", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_path_contains_dot()", file="StaticContentConventionBuilderFixture.cs"];
m2_36 [label="var result = GetStaticContent(''css/Sub.folder'', ''styles.css'')", span="108-108", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_path_contains_dot()", file="StaticContentConventionBuilderFixture.cs"];
m2_37 [label="result.ShouldEqual(StylesheetContents)", span="111-111", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_path_contains_dot()", file="StaticContentConventionBuilderFixture.cs"];
m2_38 [label="Exit Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_path_contains_dot()", span="104-104", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_path_contains_dot()", file="StaticContentConventionBuilderFixture.cs"];
m2_50 [label="Entry Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_throw_security_exception_when_content_path_points_to_root()", span="140-140", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_throw_security_exception_when_content_path_points_to_root()", file="StaticContentConventionBuilderFixture.cs"];
m2_51 [label="var convention = StaticContentConventionBuilder.AddDirectory(''/'', ''/'')", span="143-143", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_throw_security_exception_when_content_path_points_to_root()", file="StaticContentConventionBuilderFixture.cs"];
m2_52 [label="var request = new Request(''GET'', ''/face.png'', ''http'')", span="144-144", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_throw_security_exception_when_content_path_points_to_root()", file="StaticContentConventionBuilderFixture.cs"];
m2_54 [label="var exception = Record.Exception(() => convention.Invoke(context, directory))", span="151-151", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_throw_security_exception_when_content_path_points_to_root()", file="StaticContentConventionBuilderFixture.cs"];
m2_53 [label="var context = new NancyContext\r\n            {\r\n                Request = request\r\n            }", span="145-148", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_throw_security_exception_when_content_path_points_to_root()", file="StaticContentConventionBuilderFixture.cs"];
m2_55 [label="exception.ShouldBeOfType<ArgumentException>()", span="154-154", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_throw_security_exception_when_content_path_points_to_root()", file="StaticContentConventionBuilderFixture.cs"];
m2_56 [label="Exit Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_throw_security_exception_when_content_path_points_to_root()", span="140-140", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_throw_security_exception_when_content_path_points_to_root()", file="StaticContentConventionBuilderFixture.cs"];
m2_14 [label="Entry object.ShouldEqual(object)", span="106-106", cluster="object.ShouldEqual(object)", file="StaticContentConventionBuilderFixture.cs"];
m2_61 [label="Entry Unk.>", span="", cluster="Unk.>", file="StaticContentConventionBuilderFixture.cs"];
m2_142 [label="Entry System.Type.ToString()", span="0-0", cluster="System.Type.ToString()", file="StaticContentConventionBuilderFixture.cs"];
m2_112 [label="Entry Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Not_modified_response_should_have_no_body()", span="227-227", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Not_modified_response_should_have_no_body()", file="StaticContentConventionBuilderFixture.cs"];
m2_113 [label="var initialResult = this.GetStaticContentResponse(''css/css'', ''styles.css'')", span="229-229", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Not_modified_response_should_have_no_body()", file="StaticContentConventionBuilderFixture.cs"];
m2_114 [label="var etag = initialResult.Headers[''ETag'']", span="230-230", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Not_modified_response_should_have_no_body()", file="StaticContentConventionBuilderFixture.cs"];
m2_115 [label="var headers = new Dictionary<string, IEnumerable<string>> { { ''If-None-Match'', new[] { etag } } }", span="231-231", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Not_modified_response_should_have_no_body()", file="StaticContentConventionBuilderFixture.cs"];
m2_116 [label="var result = this.GetStaticContent(''css/css'', ''styles.css'', headers: headers)", span="233-233", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Not_modified_response_should_have_no_body()", file="StaticContentConventionBuilderFixture.cs"];
m2_117 [label="result.ShouldEqual(string.Empty)", span="235-235", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Not_modified_response_should_have_no_body()", file="StaticContentConventionBuilderFixture.cs"];
m2_118 [label="Exit Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Not_modified_response_should_have_no_body()", span="227-227", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Not_modified_response_should_have_no_body()", file="StaticContentConventionBuilderFixture.cs"];
m2_160 [label="Entry Nancy.Url.Url()", span="21-21", cluster="Nancy.Url.Url()", file="StaticContentConventionBuilderFixture.cs"];
m2_43 [label="Entry Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_root_is_relative_path()", span="126-126", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_root_is_relative_path()", file="StaticContentConventionBuilderFixture.cs"];
m2_44 [label="var resources = Path.Combine(directory, ''Resources'')", span="129-129", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_root_is_relative_path()", file="StaticContentConventionBuilderFixture.cs"];
m2_45 [label="var relativeRootFolder = Path.Combine(resources, @''../'')", span="130-130", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_root_is_relative_path()", file="StaticContentConventionBuilderFixture.cs"];
m2_46 [label="var result = GetStaticContent(''css'', ''styles.css'', relativeRootFolder)", span="133-133", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_root_is_relative_path()", file="StaticContentConventionBuilderFixture.cs"];
m2_47 [label="result.ShouldEqual(StylesheetContents)", span="136-136", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_root_is_relative_path()", file="StaticContentConventionBuilderFixture.cs"];
m2_48 [label="Exit Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_root_is_relative_path()", span="126-126", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_root_is_relative_path()", file="StaticContentConventionBuilderFixture.cs"];
m2_57 [label="Entry Nancy.Conventions.StaticContentConventionBuilder.AddDirectory(string, string, params string[])", span="33-33", cluster="Nancy.Conventions.StaticContentConventionBuilder.AddDirectory(string, string, params string[])", file="StaticContentConventionBuilderFixture.cs"];
m2_138 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="StaticContentConventionBuilderFixture.cs"];
m2_9 [label="Entry Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_file_name_contains_url_encoded_spaces()", span="38-38", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_file_name_contains_url_encoded_spaces()", file="StaticContentConventionBuilderFixture.cs"];
m2_10 [label="var result = GetStaticContent(''css'', ''space%20in%20name.css'')", span="42-42", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_file_name_contains_url_encoded_spaces()", file="StaticContentConventionBuilderFixture.cs"];
m2_11 [label="result.ShouldEqual(StylesheetContents)", span="45-45", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_file_name_contains_url_encoded_spaces()", file="StaticContentConventionBuilderFixture.cs"];
m2_12 [label="Exit Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_file_name_contains_url_encoded_spaces()", span="38-38", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_file_name_contains_url_encoded_spaces()", file="StaticContentConventionBuilderFixture.cs"];
m2_119 [label="Entry Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_not_throw_exception_when_path_contains_invalid_filename_character(char)", span="243-243", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_not_throw_exception_when_path_contains_invalid_filename_character(char)", file="StaticContentConventionBuilderFixture.cs"];
m2_120 [label="var fileName = string.Format(''name{0}.ext'', invalidCharacter)", span="246-246", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_not_throw_exception_when_path_contains_invalid_filename_character(char)", file="StaticContentConventionBuilderFixture.cs"];
m2_121 [label="var exception = Record.Exception(() =>\r\n                {\r\n                    this.GetStaticContent(''css/css'', fileName);\r\n                })", span="249-252", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_not_throw_exception_when_path_contains_invalid_filename_character(char)", file="StaticContentConventionBuilderFixture.cs"];
m2_122 [label="exception.ShouldBeNull()", span="255-255", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_not_throw_exception_when_path_contains_invalid_filename_character(char)", file="StaticContentConventionBuilderFixture.cs"];
m2_123 [label="Exit Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_not_throw_exception_when_path_contains_invalid_filename_character(char)", span="243-243", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_not_throw_exception_when_path_contains_invalid_filename_character(char)", file="StaticContentConventionBuilderFixture.cs"];
m2_6 [label="Entry System.Type.GetAssembly()", span="42-42", cluster="System.Type.GetAssembly()", file="StaticContentConventionBuilderFixture.cs"];
m2_84 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="StaticContentConventionBuilderFixture.cs"];
m2_162 [label="Entry Nancy.Diagnostics.DefaultTraceLog.DefaultTraceLog()", span="15-15", cluster="Nancy.Diagnostics.DefaultTraceLog.DefaultTraceLog()", file="StaticContentConventionBuilderFixture.cs"];
m2_15 [label="Entry Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_path_has_same_name_as_extension()", span="49-49", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_path_has_same_name_as_extension()", file="StaticContentConventionBuilderFixture.cs"];
m2_16 [label="var result = GetStaticContent(''css'', ''styles.css'')", span="53-53", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_path_has_same_name_as_extension()", file="StaticContentConventionBuilderFixture.cs"];
m2_17 [label="result.ShouldEqual(StylesheetContents)", span="56-56", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_path_has_same_name_as_extension()", file="StaticContentConventionBuilderFixture.cs"];
m2_18 [label="Exit Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_path_has_same_name_as_extension()", span="49-49", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_path_has_same_name_as_extension()", file="StaticContentConventionBuilderFixture.cs"];
m2_92 [label="Entry Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_full_response_if_changed_and_conditional_request_on_etag_sent()", span="200-200", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_full_response_if_changed_and_conditional_request_on_etag_sent()", file="StaticContentConventionBuilderFixture.cs"];
m2_93 [label="var initialResult = this.GetStaticContentResponse(''css/css'', ''styles.css'')", span="202-202", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_full_response_if_changed_and_conditional_request_on_etag_sent()", file="StaticContentConventionBuilderFixture.cs"];
m2_94 [label="var etag = initialResult.Headers[''ETag'']", span="203-203", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_full_response_if_changed_and_conditional_request_on_etag_sent()", file="StaticContentConventionBuilderFixture.cs"];
m2_95 [label="var headers = new Dictionary<string, IEnumerable<string>> { { ''If-None-Match'', new[] { etag.Substring(1) } } }", span="204-204", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_full_response_if_changed_and_conditional_request_on_etag_sent()", file="StaticContentConventionBuilderFixture.cs"];
m2_96 [label="var result = this.GetStaticContentResponse(''css/css'', ''styles.css'', headers: headers)", span="206-206", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_full_response_if_changed_and_conditional_request_on_etag_sent()", file="StaticContentConventionBuilderFixture.cs"];
m2_97 [label="result.StatusCode.ShouldEqual(HttpStatusCode.OK)", span="208-208", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_full_response_if_changed_and_conditional_request_on_etag_sent()", file="StaticContentConventionBuilderFixture.cs"];
m2_98 [label="Exit Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_full_response_if_changed_and_conditional_request_on_etag_sent()", span="200-200", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_full_response_if_changed_and_conditional_request_on_etag_sent()", file="StaticContentConventionBuilderFixture.cs"];
m2_161 [label="Entry Nancy.Diagnostics.DefaultRequestTrace.DefaultRequestTrace()", span="7-7", cluster="Nancy.Diagnostics.DefaultRequestTrace.DefaultRequestTrace()", file="StaticContentConventionBuilderFixture.cs"];
m2_7 [label="Entry Nancy.Configuration.DefaultNancyEnvironment.DefaultNancyEnvironment()", span="9-9", cluster="Nancy.Configuration.DefaultNancyEnvironment.DefaultNancyEnvironment()", file="StaticContentConventionBuilderFixture.cs"];
m2_19 [label="Entry Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_virtual_directory_name_exists_in_static_route()", span="60-60", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_virtual_directory_name_exists_in_static_route()", file="StaticContentConventionBuilderFixture.cs"];
m2_20 [label="var result = GetStaticContent(''css'', ''strange-css-filename.css'')", span="64-64", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_virtual_directory_name_exists_in_static_route()", file="StaticContentConventionBuilderFixture.cs"];
m2_21 [label="result.ShouldEqual(StylesheetContents)", span="67-67", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_virtual_directory_name_exists_in_static_route()", file="StaticContentConventionBuilderFixture.cs"];
m2_22 [label="Exit Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_virtual_directory_name_exists_in_static_route()", span="60-60", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_virtual_directory_name_exists_in_static_route()", file="StaticContentConventionBuilderFixture.cs"];
m2_59 [label="Entry Nancy.NancyContext.NancyContext()", span="26-26", cluster="Nancy.NancyContext.NancyContext()", file="StaticContentConventionBuilderFixture.cs"];
m2_126 [label="Entry lambda expression", span="249-252", cluster="lambda expression", file="StaticContentConventionBuilderFixture.cs"];
m2_63 [label="convention.Invoke(context, directory)", span="151-151", cluster="lambda expression", file="StaticContentConventionBuilderFixture.cs"];
m2_62 [label="Entry lambda expression", span="151-151", cluster="lambda expression", file="StaticContentConventionBuilderFixture.cs"];
m2_64 [label="Exit lambda expression", span="151-151", cluster="lambda expression", file="StaticContentConventionBuilderFixture.cs"];
m2_74 [label="convention.Invoke(context, directory)", span="169-169", cluster="lambda expression", file="StaticContentConventionBuilderFixture.cs"];
m2_73 [label="Entry lambda expression", span="169-169", cluster="lambda expression", file="StaticContentConventionBuilderFixture.cs"];
m2_75 [label="Exit lambda expression", span="169-169", cluster="lambda expression", file="StaticContentConventionBuilderFixture.cs"];
m2_127 [label="this.GetStaticContent(''css/css'', fileName)", span="251-251", cluster="lambda expression", file="StaticContentConventionBuilderFixture.cs"];
m2_128 [label="Exit lambda expression", span="249-252", cluster="lambda expression", file="StaticContentConventionBuilderFixture.cs"];
m2_31 [label="Entry Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_filename_contains_dot()", span="93-93", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_filename_contains_dot()", file="StaticContentConventionBuilderFixture.cs"];
m2_32 [label="var result = GetStaticContent(''css'', ''dotted.filename.css'')", span="97-97", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_filename_contains_dot()", file="StaticContentConventionBuilderFixture.cs"];
m2_33 [label="result.ShouldEqual(StylesheetContents)", span="100-100", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_filename_contains_dot()", file="StaticContentConventionBuilderFixture.cs"];
m2_34 [label="Exit Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_filename_contains_dot()", span="93-93", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_filename_contains_dot()", file="StaticContentConventionBuilderFixture.cs"];
m2_110 [label="Entry System.DateTime.AddHours(double)", span="0-0", cluster="System.DateTime.AddHours(double)", file="StaticContentConventionBuilderFixture.cs"];
m2_137 [label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0", cluster="System.IO.MemoryStream.MemoryStream()", file="StaticContentConventionBuilderFixture.cs"];
m2_60 [label="Entry Unk.Exception", span="", cluster="Unk.Exception", file="StaticContentConventionBuilderFixture.cs"];
m2_0 [label="Entry Nancy.Tests.Unit.StaticContentConventionBuilderFixture.StaticContentConventionBuilderFixture()", span="25-25", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.StaticContentConventionBuilderFixture()", file="StaticContentConventionBuilderFixture.cs"];
m2_1 [label="this.directory = new DirectoryInfo(typeof(StaticContentConventionBuilderFixture).GetAssembly().Location)\r\n                .Parent.FullName", span="31-32", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.StaticContentConventionBuilderFixture()", color=red, community=1, file="StaticContentConventionBuilderFixture.cs"];
m2_2 [label="this.environment = new DefaultNancyEnvironment()", span="33-33", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.StaticContentConventionBuilderFixture()", file="StaticContentConventionBuilderFixture.cs"];
m2_3 [label="this.environment.StaticContent(safepaths:this.directory)", span="34-34", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.StaticContentConventionBuilderFixture()", file="StaticContentConventionBuilderFixture.cs"];
m2_4 [label="Exit Nancy.Tests.Unit.StaticContentConventionBuilderFixture.StaticContentConventionBuilderFixture()", span="25-25", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.StaticContentConventionBuilderFixture()", file="StaticContentConventionBuilderFixture.cs"];
m2_76 [label="Entry Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_not_modified_if_not_changed_and_conditional_request_on_etag_sent()", span="176-176", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_not_modified_if_not_changed_and_conditional_request_on_etag_sent()", file="StaticContentConventionBuilderFixture.cs"];
m2_77 [label="var initialResult = this.GetStaticContentResponse(''css/css'', ''styles.css'')", span="178-178", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_not_modified_if_not_changed_and_conditional_request_on_etag_sent()", file="StaticContentConventionBuilderFixture.cs"];
m2_78 [label="var etag = initialResult.Headers[''ETag'']", span="179-179", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_not_modified_if_not_changed_and_conditional_request_on_etag_sent()", file="StaticContentConventionBuilderFixture.cs"];
m2_79 [label="var headers = new Dictionary<string, IEnumerable<string>> { { ''If-None-Match'', new[] { etag } } }", span="180-180", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_not_modified_if_not_changed_and_conditional_request_on_etag_sent()", file="StaticContentConventionBuilderFixture.cs"];
m2_80 [label="var result = this.GetStaticContentResponse(''css/css'', ''styles.css'', headers: headers)", span="182-182", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_not_modified_if_not_changed_and_conditional_request_on_etag_sent()", file="StaticContentConventionBuilderFixture.cs"];
m2_81 [label="result.StatusCode.ShouldEqual(HttpStatusCode.NotModified)", span="184-184", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_not_modified_if_not_changed_and_conditional_request_on_etag_sent()", file="StaticContentConventionBuilderFixture.cs"];
m2_82 [label="Exit Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_not_modified_if_not_changed_and_conditional_request_on_etag_sent()", span="176-176", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_not_modified_if_not_changed_and_conditional_request_on_etag_sent()", file="StaticContentConventionBuilderFixture.cs"];
m2_49 [label="Entry System.IO.Path.Combine(string, string)", span="0-0", cluster="System.IO.Path.Combine(string, string)", file="StaticContentConventionBuilderFixture.cs"];
m2_27 [label="Entry Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_path_contains_nested_folders_with_duplicate_name()", span="82-82", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_path_contains_nested_folders_with_duplicate_name()", file="StaticContentConventionBuilderFixture.cs"];
m2_28 [label="var result = GetStaticContent(''css/css'', ''styles.css'')", span="86-86", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_path_contains_nested_folders_with_duplicate_name()", file="StaticContentConventionBuilderFixture.cs"];
m2_29 [label="result.ShouldEqual(StylesheetContents)", span="89-89", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_path_contains_nested_folders_with_duplicate_name()", file="StaticContentConventionBuilderFixture.cs"];
m2_30 [label="Exit Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_path_contains_nested_folders_with_duplicate_name()", span="82-82", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_path_contains_nested_folders_with_duplicate_name()", file="StaticContentConventionBuilderFixture.cs"];
m2_152 [label="Entry Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetResolver(string)", span="313-313", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetResolver(string)", file="StaticContentConventionBuilderFixture.cs"];
m2_163 [label="return StaticContentConventionBuilder.AddDirectory(virtualDirectory, ''Resources/Assets/Styles'');", span="315-315", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetResolver(string)", file="StaticContentConventionBuilderFixture.cs"];
m2_164 [label="Exit Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetResolver(string)", span="313-313", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetResolver(string)", file="StaticContentConventionBuilderFixture.cs"];
m2_139 [label="Entry System.IO.MemoryStream.ToArray()", span="0-0", cluster="System.IO.MemoryStream.ToArray()", file="StaticContentConventionBuilderFixture.cs"];
m2_23 [label="Entry Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_path_is_nested()", span="71-71", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_path_is_nested()", file="StaticContentConventionBuilderFixture.cs"];
m2_24 [label="var result = GetStaticContent(''css/sub'', ''styles.css'')", span="75-75", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_path_is_nested()", file="StaticContentConventionBuilderFixture.cs"];
m2_25 [label="result.ShouldEqual(StylesheetContents)", span="78-78", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_path_is_nested()", file="StaticContentConventionBuilderFixture.cs"];
m2_26 [label="Exit Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_path_is_nested()", span="71-71", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_retrieve_static_content_when_path_is_nested()", file="StaticContentConventionBuilderFixture.cs"];
m2_109 [label="Entry System.DateTime.ParseExact(string, string, System.IFormatProvider, System.Globalization.DateTimeStyles)", span="0-0", cluster="System.DateTime.ParseExact(string, string, System.IFormatProvider, System.Globalization.DateTimeStyles)", file="StaticContentConventionBuilderFixture.cs"];
m2_65 [label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0", cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="StaticContentConventionBuilderFixture.cs"];
m2_140 [label="Entry System.Text.Encoding.GetString(byte[])", span="0-0", cluster="System.Text.Encoding.GetString(byte[])", file="StaticContentConventionBuilderFixture.cs"];
m2_125 [label="Entry Unk.ShouldBeNull", span="", cluster="Unk.ShouldBeNull", file="StaticContentConventionBuilderFixture.cs"];
m2_159 [label="Entry Nancy.Request.Request(string, Nancy.Url, System.IO.Stream, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, string, System.Security.Cryptography.X509Certificates.X509Certificate, string)", span="50-50", cluster="Nancy.Request.Request(string, Nancy.Url, System.IO.Stream, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, string, System.Security.Cryptography.X509Certificates.X509Certificate, string)", file="StaticContentConventionBuilderFixture.cs"];
m2_100 [label="Entry Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_full_response_if_changed_and_conditional_request_on_modified_sent()", span="212-212", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_full_response_if_changed_and_conditional_request_on_modified_sent()", file="StaticContentConventionBuilderFixture.cs"];
m2_101 [label="var initialResult = this.GetStaticContentResponse(''css/css'', ''styles.css'')", span="214-214", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_full_response_if_changed_and_conditional_request_on_modified_sent()", file="StaticContentConventionBuilderFixture.cs"];
m2_102 [label="var moddedTimeString = initialResult.Headers[''Last-Modified'']", span="215-215", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_full_response_if_changed_and_conditional_request_on_modified_sent()", file="StaticContentConventionBuilderFixture.cs"];
m2_103 [label="var moddedTime = DateTime.ParseExact(moddedTimeString, ''R'', CultureInfo.InvariantCulture, DateTimeStyles.None)\r\n                                     .AddHours(-1)", span="216-217", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_full_response_if_changed_and_conditional_request_on_modified_sent()", file="StaticContentConventionBuilderFixture.cs"];
m2_104 [label="moddedTimeString = moddedTime.ToString(''R'', CultureInfo.InvariantCulture)", span="218-218", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_full_response_if_changed_and_conditional_request_on_modified_sent()", file="StaticContentConventionBuilderFixture.cs"];
m2_105 [label="var headers = new Dictionary<string, IEnumerable<string>> { { ''If-Modified-Since'', new[] { moddedTimeString } } }", span="219-219", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_full_response_if_changed_and_conditional_request_on_modified_sent()", file="StaticContentConventionBuilderFixture.cs"];
m2_106 [label="var result = this.GetStaticContentResponse(''css/css'', ''styles.css'', headers: headers)", span="221-221", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_full_response_if_changed_and_conditional_request_on_modified_sent()", file="StaticContentConventionBuilderFixture.cs"];
m2_107 [label="result.StatusCode.ShouldEqual(HttpStatusCode.OK)", span="223-223", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_full_response_if_changed_and_conditional_request_on_modified_sent()", file="StaticContentConventionBuilderFixture.cs"];
m2_108 [label="Exit Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_full_response_if_changed_and_conditional_request_on_modified_sent()", span="212-212", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.Should_return_full_response_if_changed_and_conditional_request_on_modified_sent()", file="StaticContentConventionBuilderFixture.cs"];
m2_151 [label="Entry Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetContext(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", span="291-291", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetContext(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StaticContentConventionBuilderFixture.cs"];
m2_153 [label="var resource = string.Format(''/{0}/{1}'', virtualDirectory, requestedFilename)", span="293-293", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetContext(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StaticContentConventionBuilderFixture.cs"];
m2_154 [label="var request = new Request(\r\n                              ''GET'',\r\n                              new Url { Path = resource, Scheme = ''http'' },\r\n                              headers: headers ?? new Dictionary<string, IEnumerable<string>>())", span="295-298", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetContext(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StaticContentConventionBuilderFixture.cs"];
m2_155 [label="var context = new NancyContext\r\n            {\r\n                Request = request,\r\n                Trace = new DefaultRequestTrace\r\n                {\r\n                    TraceLog = new DefaultTraceLog(),\r\n                },\r\n                Environment = this.environment\r\n            }", span="300-308", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetContext(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StaticContentConventionBuilderFixture.cs"];
m2_156 [label="return context;", span="310-310", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetContext(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StaticContentConventionBuilderFixture.cs"];
m2_157 [label="Exit Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetContext(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", span="291-291", cluster="Nancy.Tests.Unit.StaticContentConventionBuilderFixture.GetContext(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StaticContentConventionBuilderFixture.cs"];
m2_99 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)", file="StaticContentConventionBuilderFixture.cs"];
m2_165 [label="Nancy.Tests.Unit.StaticContentConventionBuilderFixture", span="", file="StaticContentConventionBuilderFixture.cs"];
m2_166 [label=convention, span="", file="StaticContentConventionBuilderFixture.cs"];
m2_167 [label=context, span="", file="StaticContentConventionBuilderFixture.cs"];
m2_168 [label=convention, span="", file="StaticContentConventionBuilderFixture.cs"];
m2_169 [label=context, span="", file="StaticContentConventionBuilderFixture.cs"];
m2_170 [label=fileName, span="", file="StaticContentConventionBuilderFixture.cs"];
m3_38 [label="Entry long.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out long)", span="0-0", cluster="long.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out long)", file="StreamResponseFixture.cs"];
m3_9 [label="Entry Nancy.INancyEngine.HandleRequest(Nancy.Request)", span="21-21", cluster="Nancy.INancyEngine.HandleRequest(Nancy.Request)", file="StreamResponseFixture.cs"];
m3_15 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="StreamResponseFixture.cs"];
m3_10 [label="Entry Nancy.Hosting.Aspnet.NancyHandler.SetNancyResponseToHttpResponse(HttpContextBase, Nancy.Response)", span="82-82", cluster="Nancy.Hosting.Aspnet.NancyHandler.SetNancyResponseToHttpResponse(HttpContextBase, Nancy.Response)", file="StreamResponseFixture.cs"];
m3_39 [label="SetHttpResponseHeaders(context, response)", span="84-84", cluster="Nancy.Hosting.Aspnet.NancyHandler.SetNancyResponseToHttpResponse(HttpContextBase, Nancy.Response)", file="StreamResponseFixture.cs"];
m3_40 [label="context.Response.ContentType = response.ContentType", span="86-86", cluster="Nancy.Hosting.Aspnet.NancyHandler.SetNancyResponseToHttpResponse(HttpContextBase, Nancy.Response)", file="StreamResponseFixture.cs"];
m3_41 [label="context.Response.StatusCode = (int)response.StatusCode", span="87-87", cluster="Nancy.Hosting.Aspnet.NancyHandler.SetNancyResponseToHttpResponse(HttpContextBase, Nancy.Response)", file="StreamResponseFixture.cs"];
m3_42 [label="response.Contents.Invoke(context.Response.OutputStream)", span="88-88", cluster="Nancy.Hosting.Aspnet.NancyHandler.SetNancyResponseToHttpResponse(HttpContextBase, Nancy.Response)", file="StreamResponseFixture.cs"];
m3_43 [label="Exit Nancy.Hosting.Aspnet.NancyHandler.SetNancyResponseToHttpResponse(HttpContextBase, Nancy.Response)", span="82-82", cluster="Nancy.Hosting.Aspnet.NancyHandler.SetNancyResponseToHttpResponse(HttpContextBase, Nancy.Response)", file="StreamResponseFixture.cs"];
m3_21 [label="Entry Unk.ToUpperInvariant", span="", cluster="Unk.ToUpperInvariant", file="StreamResponseFixture.cs"];
m3_20 [label="Entry Request.cstr", span="", cluster="Request.cstr", file="StreamResponseFixture.cs"];
m3_22 [label="Entry Unk.FromStream", span="", cluster="Unk.FromStream", file="StreamResponseFixture.cs"];
m3_8 [label="Entry Nancy.Hosting.Aspnet.NancyHandler.CreateNancyRequest(HttpContextBase)", span="29-29", cluster="Nancy.Hosting.Aspnet.NancyHandler.CreateNancyRequest(HttpContextBase)", file="StreamResponseFixture.cs"];
m3_11 [label="var expectedRequestLength =\r\n                GetExpectedRequestLength(context.Request.Headers.ToDictionary())", span="31-32", cluster="Nancy.Hosting.Aspnet.NancyHandler.CreateNancyRequest(HttpContextBase)", file="StreamResponseFixture.cs"];
m3_12 [label="var nancyUrl = new Url\r\n                               {\r\n                                   Scheme = context.Request.Url.Scheme,\r\n                                   HostName = context.Request.Url.Host,\r\n                                   Port = context.Request.Url.Port,\r\n                                   BasePath = context.Request.ApplicationPath.TrimEnd('/'),\r\n                                   Path = context.Request.AppRelativeCurrentExecutionFilePath.Replace(''~'', string.Empty),\r\n                                   Query = context.Request.Url.Query,\r\n                                   Fragment = context.Request.Url.Fragment,\r\n                               }", span="34-43", cluster="Nancy.Hosting.Aspnet.NancyHandler.CreateNancyRequest(HttpContextBase)", file="StreamResponseFixture.cs"];
m3_13 [label="return new Request(\r\n                context.Request.HttpMethod.ToUpperInvariant(),\r\n                nancyUrl,\r\n                RequestStream.FromStream(context.Request.InputStream, expectedRequestLength, true),\r\n                context.Request.Headers.ToDictionary(),\r\n                context.Request.UserHostAddress);", span="45-50", cluster="Nancy.Hosting.Aspnet.NancyHandler.CreateNancyRequest(HttpContextBase)", file="StreamResponseFixture.cs"];
m3_14 [label="Exit Nancy.Hosting.Aspnet.NancyHandler.CreateNancyRequest(HttpContextBase)", span="29-29", cluster="Nancy.Hosting.Aspnet.NancyHandler.CreateNancyRequest(HttpContextBase)", file="StreamResponseFixture.cs"];
m3_23 [label="Entry Nancy.Hosting.Aspnet.NancyHandler.GetExpectedRequestLength(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", span="53-53", cluster="Nancy.Hosting.Aspnet.NancyHandler.GetExpectedRequestLength(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StreamResponseFixture.cs"];
m3_24 [label="incomingHeaders == null", span="55-55", cluster="Nancy.Hosting.Aspnet.NancyHandler.GetExpectedRequestLength(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StreamResponseFixture.cs"];
m3_26 [label="!incomingHeaders.ContainsKey(''Content-Length'')", span="60-60", cluster="Nancy.Hosting.Aspnet.NancyHandler.GetExpectedRequestLength(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StreamResponseFixture.cs"];
m3_28 [label="var headerValue =\r\n                incomingHeaders[''Content-Length''].SingleOrDefault()", span="65-66", cluster="Nancy.Hosting.Aspnet.NancyHandler.GetExpectedRequestLength(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", color=red, community=0, file="StreamResponseFixture.cs"];
m3_25 [label="return 0;", span="57-57", cluster="Nancy.Hosting.Aspnet.NancyHandler.GetExpectedRequestLength(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StreamResponseFixture.cs"];
m3_27 [label="return 0;", span="62-62", cluster="Nancy.Hosting.Aspnet.NancyHandler.GetExpectedRequestLength(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StreamResponseFixture.cs"];
m3_29 [label="headerValue == null", span="68-68", cluster="Nancy.Hosting.Aspnet.NancyHandler.GetExpectedRequestLength(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StreamResponseFixture.cs"];
m3_32 [label="!long.TryParse(headerValue, NumberStyles.Any, CultureInfo.InvariantCulture, out contentLength)", span="74-74", cluster="Nancy.Hosting.Aspnet.NancyHandler.GetExpectedRequestLength(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StreamResponseFixture.cs"];
m3_30 [label="return 0;", span="70-70", cluster="Nancy.Hosting.Aspnet.NancyHandler.GetExpectedRequestLength(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StreamResponseFixture.cs"];
m3_31 [label="long contentLength", span="73-73", cluster="Nancy.Hosting.Aspnet.NancyHandler.GetExpectedRequestLength(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StreamResponseFixture.cs"];
m3_33 [label="return 0;", span="76-76", cluster="Nancy.Hosting.Aspnet.NancyHandler.GetExpectedRequestLength(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StreamResponseFixture.cs"];
m3_34 [label="return contentLength;", span="79-79", cluster="Nancy.Hosting.Aspnet.NancyHandler.GetExpectedRequestLength(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StreamResponseFixture.cs"];
m3_35 [label="Exit Nancy.Hosting.Aspnet.NancyHandler.GetExpectedRequestLength(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", span="53-53", cluster="Nancy.Hosting.Aspnet.NancyHandler.GetExpectedRequestLength(System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>)", file="StreamResponseFixture.cs"];
m3_44 [label="Entry Nancy.Hosting.Aspnet.NancyHandler.SetHttpResponseHeaders(HttpContextBase, Nancy.Response)", span="91-91", cluster="Nancy.Hosting.Aspnet.NancyHandler.SetHttpResponseHeaders(HttpContextBase, Nancy.Response)", file="StreamResponseFixture.cs"];
m3_46 [label="response.Headers", span="93-93", cluster="Nancy.Hosting.Aspnet.NancyHandler.SetHttpResponseHeaders(HttpContextBase, Nancy.Response)", file="StreamResponseFixture.cs"];
m3_47 [label="context.Response.AddHeader(header.Key, header.Value)", span="95-95", cluster="Nancy.Hosting.Aspnet.NancyHandler.SetHttpResponseHeaders(HttpContextBase, Nancy.Response)", file="StreamResponseFixture.cs"];
m3_48 [label="response.Cookies", span="98-98", cluster="Nancy.Hosting.Aspnet.NancyHandler.SetHttpResponseHeaders(HttpContextBase, Nancy.Response)", file="StreamResponseFixture.cs"];
m3_49 [label="context.Response.AddHeader(''Set-Cookie'', cookie.ToString())", span="100-100", cluster="Nancy.Hosting.Aspnet.NancyHandler.SetHttpResponseHeaders(HttpContextBase, Nancy.Response)", file="StreamResponseFixture.cs"];
m3_50 [label="Exit Nancy.Hosting.Aspnet.NancyHandler.SetHttpResponseHeaders(HttpContextBase, Nancy.Response)", span="91-91", cluster="Nancy.Hosting.Aspnet.NancyHandler.SetHttpResponseHeaders(HttpContextBase, Nancy.Response)", file="StreamResponseFixture.cs"];
m3_37 [label="Entry System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", file="StreamResponseFixture.cs"];
m3_51 [label="Entry Unk.AddHeader", span="", cluster="Unk.AddHeader", file="StreamResponseFixture.cs"];
m3_3 [label="Entry Nancy.Hosting.Aspnet.NancyHandler.ProcessRequest(HttpContextBase)", span="19-19", cluster="Nancy.Hosting.Aspnet.NancyHandler.ProcessRequest(HttpContextBase)", file="StreamResponseFixture.cs"];
m3_4 [label="var request = CreateNancyRequest(context)", span="21-21", cluster="Nancy.Hosting.Aspnet.NancyHandler.ProcessRequest(HttpContextBase)", color=red, community=0, file="StreamResponseFixture.cs"];
m3_6 [label="SetNancyResponseToHttpResponse(context, nancyContext.Response)", span="25-25", cluster="Nancy.Hosting.Aspnet.NancyHandler.ProcessRequest(HttpContextBase)", file="StreamResponseFixture.cs"];
m3_5 [label="var nancyContext = this.engine.HandleRequest(request)", span="23-23", cluster="Nancy.Hosting.Aspnet.NancyHandler.ProcessRequest(HttpContextBase)", file="StreamResponseFixture.cs"];
m3_7 [label="Exit Nancy.Hosting.Aspnet.NancyHandler.ProcessRequest(HttpContextBase)", span="19-19", cluster="Nancy.Hosting.Aspnet.NancyHandler.ProcessRequest(HttpContextBase)", file="StreamResponseFixture.cs"];
m3_45 [label="Entry Unk.Invoke", span="", cluster="Unk.Invoke", file="StreamResponseFixture.cs"];
m3_16 [label="Entry Unk.GetExpectedRequestLength", span="", cluster="Unk.GetExpectedRequestLength", file="StreamResponseFixture.cs"];
m3_36 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="StreamResponseFixture.cs"];
m3_0 [label="Entry Nancy.Hosting.Aspnet.NancyHandler.NancyHandler(Nancy.INancyEngine)", span="14-14", cluster="Nancy.Hosting.Aspnet.NancyHandler.NancyHandler(Nancy.INancyEngine)", file="StreamResponseFixture.cs"];
m3_1 [label="this.engine = engine", span="16-16", cluster="Nancy.Hosting.Aspnet.NancyHandler.NancyHandler(Nancy.INancyEngine)", file="StreamResponseFixture.cs"];
m3_2 [label="Exit Nancy.Hosting.Aspnet.NancyHandler.NancyHandler(Nancy.INancyEngine)", span="14-14", cluster="Nancy.Hosting.Aspnet.NancyHandler.NancyHandler(Nancy.INancyEngine)", file="StreamResponseFixture.cs"];
m3_19 [label="Entry Unk.Replace", span="", cluster="Unk.Replace", file="StreamResponseFixture.cs"];
m3_18 [label="Entry Unk.TrimEnd", span="", cluster="Unk.TrimEnd", file="StreamResponseFixture.cs"];
m3_52 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="StreamResponseFixture.cs"];
m3_53 [label="Nancy.Hosting.Aspnet.NancyHandler", span="", file="StreamResponseFixture.cs"];
m4_9 [label="Entry Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.Modules(params System.Type[])", span="1004-1004", cluster="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.Modules(params System.Type[])", file="TracingSmokeTests.cs"];
m4_0 [label="Entry Nancy.Tests.Functional.Tests.TracingSmokeTests.TracingSmokeTests()", span="17-17", cluster="Nancy.Tests.Functional.Tests.TracingSmokeTests.TracingSmokeTests()", file="TracingSmokeTests.cs"];
m4_1 [label="this.bootstrapper = new ConfigurableBootstrapper(\r\n                    configuration => configuration.Modules(new Type[] { typeof(RazorWithTracingTestModule) }))", span="19-20", cluster="Nancy.Tests.Functional.Tests.TracingSmokeTests.TracingSmokeTests()", file="TracingSmokeTests.cs"];
m4_2 [label="this.browser = new Browser(bootstrapper)", span="22-22", cluster="Nancy.Tests.Functional.Tests.TracingSmokeTests.TracingSmokeTests()", file="TracingSmokeTests.cs"];
m4_3 [label="Exit Nancy.Tests.Functional.Tests.TracingSmokeTests.TracingSmokeTests()", span="17-17", cluster="Nancy.Tests.Functional.Tests.TracingSmokeTests.TracingSmokeTests()", file="TracingSmokeTests.cs"];
m4_10 [label="Entry Nancy.Tests.Functional.Tests.TracingSmokeTests.Should_render_content_from_viewbag()", span="26-26", cluster="Nancy.Tests.Functional.Tests.TracingSmokeTests.Should_render_content_from_viewbag()", file="TracingSmokeTests.cs"];
m4_11 [label="var response = await browser.Get(\r\n                @''/tracing/razor-viewbag'',\r\n                with =>\r\n                {\r\n                    with.HttpRequest();\r\n                })", span="30-35", cluster="Nancy.Tests.Functional.Tests.TracingSmokeTests.Should_render_content_from_viewbag()", file="TracingSmokeTests.cs"];
m4_12 [label="Assert.True(response.Body.AsString().Contains(@''Hello Bob''))", span="38-38", cluster="Nancy.Tests.Functional.Tests.TracingSmokeTests.Should_render_content_from_viewbag()", file="TracingSmokeTests.cs"];
m4_13 [label="Exit Nancy.Tests.Functional.Tests.TracingSmokeTests.Should_render_content_from_viewbag()", span="26-26", cluster="Nancy.Tests.Functional.Tests.TracingSmokeTests.Should_render_content_from_viewbag()", file="TracingSmokeTests.cs"];
m4_16 [label="Entry string.Contains(string)", span="0-0", cluster="string.Contains(string)", file="TracingSmokeTests.cs"];
m4_14 [label="Entry Nancy.Testing.Browser.Get(string, System.Action<Nancy.Testing.BrowserContext>)", span="76-76", cluster="Nancy.Testing.Browser.Get(string, System.Action<Nancy.Testing.BrowserContext>)", file="TracingSmokeTests.cs"];
m4_17 [label="Entry Unk.True", span="", cluster="Unk.True", file="TracingSmokeTests.cs"];
m4_15 [label="Entry Nancy.Testing.BrowserResponseBodyWrapper.AsString()", span="30-30", cluster="Nancy.Testing.BrowserResponseBodyWrapper.AsString()", file="TracingSmokeTests.cs"];
m4_4 [label="Entry Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapper(System.Action<Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator>)", span="64-64", cluster="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapper(System.Action<Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator>)", file="TracingSmokeTests.cs"];
m4_21 [label="Entry Nancy.Testing.BrowserContext.HttpRequest()", span="156-156", cluster="Nancy.Testing.BrowserContext.HttpRequest()", file="TracingSmokeTests.cs"];
m4_18 [label="Entry lambda expression", span="32-35", cluster="lambda expression", file="TracingSmokeTests.cs"];
m4_7 [label="configuration.Modules(new Type[] { typeof(RazorWithTracingTestModule) })", span="20-20", cluster="lambda expression", file="TracingSmokeTests.cs"];
m4_6 [label="Entry lambda expression", span="20-20", cluster="lambda expression", file="TracingSmokeTests.cs"];
m4_8 [label="Exit lambda expression", span="20-20", cluster="lambda expression", file="TracingSmokeTests.cs"];
m4_19 [label="with.HttpRequest()", span="34-34", cluster="lambda expression", file="TracingSmokeTests.cs"];
m4_20 [label="Exit lambda expression", span="32-35", cluster="lambda expression", file="TracingSmokeTests.cs"];
m4_5 [label="Entry Nancy.Testing.Browser.Browser(Nancy.Bootstrapper.INancyBootstrapper, System.Action<Nancy.Testing.BrowserContext>)", span="40-40", cluster="Nancy.Testing.Browser.Browser(Nancy.Bootstrapper.INancyBootstrapper, System.Action<Nancy.Testing.BrowserContext>)", file="TracingSmokeTests.cs"];
m4_22 [label="Nancy.Tests.Functional.Tests.TracingSmokeTests", span="", file="TracingSmokeTests.cs"];
m5_29 [label="Entry Nancy.Tests.Functional.Tests.ViewBagTests.Should_serialize_ViewBag()", span="56-56", cluster="Nancy.Tests.Functional.Tests.ViewBagTests.Should_serialize_ViewBag()", file="ViewBagTests.cs"];
m5_30 [label="var response = await this.browser.Get(\r\n                @''/razor-viewbag-serialized'',\r\n                with =>\r\n                {\r\n                    with.HttpRequest();\r\n                    with.Accept(''application/json'');\r\n                })", span="59-65", cluster="Nancy.Tests.Functional.Tests.ViewBagTests.Should_serialize_ViewBag()", file="ViewBagTests.cs"];
m5_31 [label="var model = response.Body.DeserializeJson<ViewBagModel>()", span="68-68", cluster="Nancy.Tests.Functional.Tests.ViewBagTests.Should_serialize_ViewBag()", file="ViewBagTests.cs"];
m5_32 [label="Assert.Equal(''Bob'', model.Name)", span="71-71", cluster="Nancy.Tests.Functional.Tests.ViewBagTests.Should_serialize_ViewBag()", file="ViewBagTests.cs"];
m5_33 [label="Exit Nancy.Tests.Functional.Tests.ViewBagTests.Should_serialize_ViewBag()", span="56-56", cluster="Nancy.Tests.Functional.Tests.ViewBagTests.Should_serialize_ViewBag()", file="ViewBagTests.cs"];
m5_9 [label="Entry Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.Modules(params System.Type[])", span="1004-1004", cluster="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator.Modules(params System.Type[])", file="ViewBagTests.cs"];
m5_45 [label="Entry Nancy.Testing.Browser.Head(string, System.Action<Nancy.Testing.BrowserContext>)", span="98-98", cluster="Nancy.Testing.Browser.Head(string, System.Action<Nancy.Testing.BrowserContext>)", file="ViewBagTests.cs"];
m5_10 [label="Entry Nancy.Tests.Functional.Tests.ViewBagTests.Should_render_content_from_viewbag()", span="24-24", cluster="Nancy.Tests.Functional.Tests.ViewBagTests.Should_render_content_from_viewbag()", file="ViewBagTests.cs"];
m5_11 [label="var response = await browser.Get(\r\n                @''/razor-viewbag'',\r\n                with =>\r\n                {\r\n                    with.HttpRequest();\r\n                })", span="28-33", cluster="Nancy.Tests.Functional.Tests.ViewBagTests.Should_render_content_from_viewbag()", file="ViewBagTests.cs"];
m5_12 [label="Assert.True(response.Body.AsString().Contains(@''Hello Bob''))", span="36-36", cluster="Nancy.Tests.Functional.Tests.ViewBagTests.Should_render_content_from_viewbag()", file="ViewBagTests.cs"];
m5_13 [label="Exit Nancy.Tests.Functional.Tests.ViewBagTests.Should_render_content_from_viewbag()", span="24-24", cluster="Nancy.Tests.Functional.Tests.ViewBagTests.Should_render_content_from_viewbag()", file="ViewBagTests.cs"];
m5_40 [label="Entry Nancy.Testing.BrowserContext.Accept(Nancy.Responses.Negotiation.MediaRange)", span="173-173", cluster="Nancy.Testing.BrowserContext.Accept(Nancy.Responses.Negotiation.MediaRange)", file="ViewBagTests.cs"];
m5_16 [label="Entry string.Contains(string)", span="0-0", cluster="string.Contains(string)", file="ViewBagTests.cs"];
m5_14 [label="Entry Nancy.Testing.Browser.Get(string, System.Action<Nancy.Testing.BrowserContext>)", span="76-76", cluster="Nancy.Testing.Browser.Get(string, System.Action<Nancy.Testing.BrowserContext>)", file="ViewBagTests.cs"];
m5_17 [label="Entry Unk.True", span="", cluster="Unk.True", file="ViewBagTests.cs"];
m5_34 [label="Entry Nancy.Testing.BrowserResponseBodyWrapper.DeserializeJson<TModel>()", span="55-55", cluster="Nancy.Testing.BrowserResponseBodyWrapper.DeserializeJson<TModel>()", file="ViewBagTests.cs"];
m5_15 [label="Entry Nancy.Testing.BrowserResponseBodyWrapper.AsString()", span="30-30", cluster="Nancy.Testing.BrowserResponseBodyWrapper.AsString()", file="ViewBagTests.cs"];
m5_4 [label="Entry Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapper(System.Action<Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator>)", span="64-64", cluster="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapper(System.Action<Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator>)", file="ViewBagTests.cs"];
m5_0 [label="Entry Nancy.Tests.Functional.Tests.ViewBagTests.ViewBagTests()", span="15-15", cluster="Nancy.Tests.Functional.Tests.ViewBagTests.ViewBagTests()", file="ViewBagTests.cs"];
m5_1 [label="this.bootstrapper = new ConfigurableBootstrapper(\r\n                    configuration => configuration.Modules(typeof(RazorTestModule)))", span="17-18", cluster="Nancy.Tests.Functional.Tests.ViewBagTests.ViewBagTests()", file="ViewBagTests.cs"];
m5_2 [label="this.browser = new Browser(bootstrapper)", span="20-20", cluster="Nancy.Tests.Functional.Tests.ViewBagTests.ViewBagTests()", file="ViewBagTests.cs"];
m5_3 [label="Exit Nancy.Tests.Functional.Tests.ViewBagTests.ViewBagTests()", span="15-15", cluster="Nancy.Tests.Functional.Tests.ViewBagTests.ViewBagTests()", file="ViewBagTests.cs"];
m5_35 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="ViewBagTests.cs"];
m5_41 [label="Entry Nancy.Tests.Functional.Tests.ViewBagTests.Should_return_200_on_head()", span="75-75", cluster="Nancy.Tests.Functional.Tests.ViewBagTests.Should_return_200_on_head()", file="ViewBagTests.cs"];
m5_42 [label="var response = await this.browser.Head(@''/razor-viewbag'')", span="79-79", cluster="Nancy.Tests.Functional.Tests.ViewBagTests.Should_return_200_on_head()", file="ViewBagTests.cs"];
m5_43 [label="Assert.Equal(HttpStatusCode.OK, response.StatusCode)", span="82-82", cluster="Nancy.Tests.Functional.Tests.ViewBagTests.Should_return_200_on_head()", file="ViewBagTests.cs"];
m5_44 [label="Exit Nancy.Tests.Functional.Tests.ViewBagTests.Should_return_200_on_head()", span="75-75", cluster="Nancy.Tests.Functional.Tests.ViewBagTests.Should_return_200_on_head()", file="ViewBagTests.cs"];
m5_21 [label="Entry Nancy.Testing.BrowserContext.HttpRequest()", span="156-156", cluster="Nancy.Testing.BrowserContext.HttpRequest()", file="ViewBagTests.cs"];
m5_22 [label="Entry Nancy.Tests.Functional.Tests.ViewBagTests.Should_render_content_from_viewbags()", span="40-40", cluster="Nancy.Tests.Functional.Tests.ViewBagTests.Should_render_content_from_viewbags()", file="ViewBagTests.cs"];
m5_23 [label="var response = await this.browser.Get(\r\n                @''/razor-viewbag'',\r\n                with =>\r\n                {\r\n                    with.HttpRequest();\r\n                })", span="44-49", cluster="Nancy.Tests.Functional.Tests.ViewBagTests.Should_render_content_from_viewbags()", file="ViewBagTests.cs"];
m5_24 [label="Assert.True(response.Body.AsString().Contains(@''Hello Bob''))", span="52-52", cluster="Nancy.Tests.Functional.Tests.ViewBagTests.Should_render_content_from_viewbags()", file="ViewBagTests.cs"];
m5_25 [label="Exit Nancy.Tests.Functional.Tests.ViewBagTests.Should_render_content_from_viewbags()", span="40-40", cluster="Nancy.Tests.Functional.Tests.ViewBagTests.Should_render_content_from_viewbags()", file="ViewBagTests.cs"];
m5_36 [label="Entry lambda expression", span="61-65", cluster="lambda expression", file="ViewBagTests.cs"];
m5_7 [label="configuration.Modules(typeof(RazorTestModule))", span="18-18", cluster="lambda expression", file="ViewBagTests.cs"];
m5_6 [label="Entry lambda expression", span="18-18", cluster="lambda expression", file="ViewBagTests.cs"];
m5_8 [label="Exit lambda expression", span="18-18", cluster="lambda expression", file="ViewBagTests.cs"];
m5_18 [label="Entry lambda expression", span="30-33", cluster="lambda expression", file="ViewBagTests.cs"];
m5_19 [label="with.HttpRequest()", span="32-32", cluster="lambda expression", file="ViewBagTests.cs"];
m5_20 [label="Exit lambda expression", span="30-33", cluster="lambda expression", file="ViewBagTests.cs"];
m5_26 [label="Entry lambda expression", span="46-49", cluster="lambda expression", file="ViewBagTests.cs"];
m5_27 [label="with.HttpRequest()", span="48-48", cluster="lambda expression", file="ViewBagTests.cs"];
m5_28 [label="Exit lambda expression", span="46-49", cluster="lambda expression", file="ViewBagTests.cs"];
m5_37 [label="with.HttpRequest()", span="63-63", cluster="lambda expression", file="ViewBagTests.cs"];
m5_38 [label="with.Accept(''application/json'')", span="64-64", cluster="lambda expression", file="ViewBagTests.cs"];
m5_39 [label="Exit lambda expression", span="61-65", cluster="lambda expression", file="ViewBagTests.cs"];
m5_5 [label="Entry Nancy.Testing.Browser.Browser(Nancy.Bootstrapper.INancyBootstrapper, System.Action<Nancy.Testing.BrowserContext>)", span="40-40", cluster="Nancy.Testing.Browser.Browser(Nancy.Bootstrapper.INancyBootstrapper, System.Action<Nancy.Testing.BrowserContext>)", file="ViewBagTests.cs"];
m5_46 [label="Nancy.Tests.Functional.Tests.ViewBagTests", span="", file="ViewBagTests.cs"];
n427 -> n1  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n2  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n3  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n4  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n5  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n6  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n7  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n18  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n26  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n35  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n50  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n36  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n39  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n57  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n63  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n58  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n69  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n74  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n70  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n77  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n78  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n86  [key=1, style=dashed, color=red, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n97  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n98  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n104  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n99  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n108  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n109  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n116  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n110  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n119  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n120  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n126  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n121  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n134  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n155  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n156  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n157  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n177  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n185  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n186  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n187  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n202  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n206  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n215  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n207  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n208  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n226  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n241  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n256  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n242  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n243  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n265  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n281  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n293  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n294  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n297  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n304  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n305  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n308  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n314  [key=1, style=dashed, color=red, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n325  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n335  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n344  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n351  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n354  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n362  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n363  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n378  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n379  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n393  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n394  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n408  [key=1, style=dashed, color=red, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n427 -> n411  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.Sessions.CookieBasedSessionsFixture"];
n428 -> n144  [key=1, style=dashed, color=darkseagreen4, label=hooks];
n428 -> n147  [key=1, style=dashed, color=darkseagreen4, label=hooks];
n429 -> n171  [key=1, style=dashed, color=darkseagreen4, label=hooks];
n429 -> n174  [key=1, style=dashed, color=darkseagreen4, label=hooks];
n430 -> n196  [key=1, style=dashed, color=darkseagreen4, label=hooks];
n430 -> n199  [key=1, style=dashed, color=darkseagreen4, label=hooks];
n431 -> n218  [key=1, style=dashed, color=darkseagreen4, label=fakeFormatter];
n432 -> n231  [key=1, style=dashed, color=darkseagreen4, label=fakeFormatter];
n433 -> n250  [key=1, style=dashed, color=darkseagreen4, label=hooks];
n433 -> n253  [key=1, style=dashed, color=darkseagreen4, label=hooks];
n434 -> n259  [key=1, style=dashed, color=darkseagreen4, label=fakeFormatter];
n435 -> n375  [key=1, style=dashed, color=darkseagreen4, label=storeConfig];
n436 -> n390  [key=1, style=dashed, color=darkseagreen4, label=storeConfig];
n437 -> n404  [key=1, style=dashed, color=darkseagreen4, label=storeConfig];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n9  [key=2, style=dotted];
n2 -> n3  [key=0, style=solid];
n2 -> n9  [key=2, style=dotted];
n3 -> n4  [key=0, style=solid];
n3 -> n10  [key=2, style=dotted];
n4 -> n5  [key=0, style=solid];
n4 -> n11  [key=2, style=dotted];
n5 -> n6  [key=0, style=solid];
n5 -> n12  [key=2, style=dotted];
n5 -> n13  [key=2, style=dotted];
n6 -> n7  [key=0, style=solid];
n6 -> n14  [key=2, style=dotted];
n6 -> n13  [key=2, style=dotted];
n7 -> n8  [key=0, style=solid];
n7 -> n15  [key=2, style=dotted];
n8 -> n0  [key=0, style=bold, color=blue];
n16 -> n17  [key=0, style=solid];
n17 -> n18  [key=0, style=solid];
n17 -> n21  [key=2, style=dotted];
n17 -> n19  [key=1, style=dashed, color=darkseagreen4, label=response];
n18 -> n19  [key=0, style=solid];
n18 -> n22  [key=2, style=dotted];
n19 -> n20  [key=0, style=solid];
n19 -> n23  [key=2, style=dotted];
n20 -> n16  [key=0, style=bold, color=blue];
n24 -> n25  [key=0, style=solid];
n25 -> n26  [key=0, style=solid];
n25 -> n21  [key=2, style=dotted];
n25 -> n27  [key=1, style=dashed, color=darkseagreen4, label=response];
n26 -> n27  [key=0, style=solid];
n26 -> n29  [key=2, style=dotted];
n26 -> n30  [key=2, style=dotted];
n26 -> n22  [key=2, style=dotted];
n27 -> n28  [key=0, style=solid];
n27 -> n23  [key=2, style=dotted];
n28 -> n24  [key=0, style=bold, color=blue];
n31 -> n32  [key=0, style=solid];
n32 -> n33  [key=0, style=solid];
n32 -> n21  [key=2, style=dotted];
n32 -> n36  [key=1, style=dashed, color=darkseagreen4, label=response];
n32 -> n37  [key=1, style=dashed, color=darkseagreen4, label=response];
n32 -> n38  [key=1, style=dashed, color=darkseagreen4, label=response];
n33 -> n34  [key=0, style=solid];
n33 -> n29  [key=2, style=dotted];
n33 -> n30  [key=2, style=dotted];
n33 -> n36  [key=1, style=dashed, color=darkseagreen4, label=session];
n36 -> n37  [key=0, style=solid];
n36 -> n22  [key=2, style=dotted];
n37 -> n38  [key=0, style=solid];
n37 -> n23  [key=2, style=dotted];
n38 -> n39  [key=0, style=solid];
n38 -> n47  [key=2, style=dotted];
n38 -> n40  [key=1, style=dashed, color=darkseagreen4, label=cookie];
n38 -> n41  [key=1, style=dashed, color=darkseagreen4, label=cookie];
n38 -> n42  [key=1, style=dashed, color=darkseagreen4, label=cookie];
n38 -> n43  [key=1, style=dashed, color=darkseagreen4, label=cookie];
n34 -> n35  [key=0, style=solid];
n35 -> n36  [key=0, style=solid];
n35 -> n45  [key=2, style=dotted];
n35 -> n46  [key=2, style=dotted];
n35 -> n49  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n49 -> n50  [key=0, style=solid];
n39 -> n40  [key=0, style=solid];
n39 -> n23  [key=2, style=dotted];
n40 -> n41  [key=0, style=solid];
n40 -> n23  [key=2, style=dotted];
n41 -> n42  [key=0, style=solid];
n41 -> n48  [key=2, style=dotted];
n42 -> n43  [key=0, style=solid];
n42 -> n48  [key=2, style=dotted];
n43 -> n44  [key=0, style=solid];
n43 -> n48  [key=2, style=dotted];
n44 -> n31  [key=0, style=bold, color=blue];
n50 -> n51  [key=0, style=solid];
n50 -> n52  [key=2, style=dotted];
n51 -> n49  [key=0, style=bold, color=blue];
n53 -> n54  [key=0, style=solid];
n54 -> n55  [key=0, style=solid];
n54 -> n21  [key=2, style=dotted];
n54 -> n58  [key=1, style=dashed, color=darkseagreen4, label=response];
n54 -> n59  [key=1, style=dashed, color=darkseagreen4, label=response];
n55 -> n56  [key=0, style=solid];
n55 -> n61  [key=2, style=dotted];
n55 -> n58  [key=1, style=dashed, color=darkseagreen4, label=session];
n58 -> n59  [key=0, style=solid];
n58 -> n22  [key=2, style=dotted];
n59 -> n60  [key=0, style=solid];
n59 -> n47  [key=2, style=dotted];
n59 -> n23  [key=2, style=dotted];
n56 -> n57  [key=0, style=solid];
n57 -> n58  [key=0, style=solid];
n57 -> n45  [key=2, style=dotted];
n57 -> n46  [key=2, style=dotted];
n57 -> n62  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n62 -> n63  [key=0, style=solid];
n60 -> n53  [key=0, style=bold, color=blue];
n63 -> n64  [key=0, style=solid];
n63 -> n52  [key=2, style=dotted];
n64 -> n62  [key=0, style=bold, color=blue];
n65 -> n66  [key=0, style=solid];
n66 -> n67  [key=0, style=solid];
n66 -> n21  [key=2, style=dotted];
n66 -> n70  [key=1, style=dashed, color=darkseagreen4, label=response];
n66 -> n71  [key=1, style=dashed, color=darkseagreen4, label=response];
n67 -> n68  [key=0, style=solid];
n67 -> n61  [key=2, style=dotted];
n67 -> n70  [key=1, style=dashed, color=darkseagreen4, label=session];
n70 -> n71  [key=0, style=solid];
n70 -> n22  [key=2, style=dotted];
n71 -> n72  [key=0, style=solid];
n71 -> n47  [key=2, style=dotted];
n71 -> n23  [key=2, style=dotted];
n68 -> n69  [key=0, style=solid];
n69 -> n70  [key=0, style=solid];
n69 -> n45  [key=2, style=dotted];
n69 -> n46  [key=2, style=dotted];
n69 -> n73  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n73 -> n74  [key=0, style=solid];
n72 -> n65  [key=0, style=bold, color=blue];
n74 -> n75  [key=0, style=solid];
n74 -> n52  [key=2, style=dotted];
n75 -> n73  [key=0, style=bold, color=blue];
n76 -> n77  [key=0, style=solid];
n77 -> n78  [key=0, style=solid];
n77 -> n81  [key=2, style=dotted];
n78 -> n79  [key=0, style=solid];
n78 -> n82  [key=2, style=dotted];
n81 -> n406  [key=0, style=solid];
n81 -> n407  [key=1, style=dashed, color=darkseagreen4, label=string];
n81 -> n408  [key=1, style=dashed, color=red, label=string];
n81 -> n410  [key=1, style=dashed, color=darkseagreen4, label=bool];
n81 -> n18  [key=3, color=darkorchid, style=bold, label="Parameter variable string sessionValue"];
n81 -> n97  [key=3, color=darkorchid, style=bold, label="Parameter variable string sessionValue"];
n81 -> n108  [key=3, color=darkorchid, style=bold, label="Parameter variable string sessionValue"];
n81 -> n208  [key=3, color=darkorchid, style=bold, label="Parameter variable bool load"];
n81 -> n409  [key=3, color=darkorchid, style=bold, label="method methodReturn Nancy.Request CreateRequest"];
n79 -> n80  [key=0, style=solid];
n79 -> n23  [key=2, style=dotted];
n80 -> n76  [key=0, style=bold, color=blue];
n83 -> n84  [key=0, style=solid, color=red];
n84 -> n85  [key=0, style=solid, color=red];
n84 -> n92  [key=2, style=dotted, color=red];
n85 -> n86  [key=0, style=solid, color=red];
n85 -> n93  [key=2, style=dotted, color=red];
n85 -> n85  [key=1, style=dashed, color=red, label=inputValue];
n85 -> n88  [key=1, style=dashed, color=red, label=inputValue];
n86 -> n87  [key=0, style=solid, color=red];
n86 -> n11  [key=2, style=dotted, color=red];
n86 -> n88  [key=1, style=dashed, color=red, label=store];
n86 -> n89  [key=1, style=dashed, color=red, label=store];
n88 -> n89  [key=0, style=solid, color=red];
n88 -> n95  [key=2, style=dotted, color=red];
n87 -> n88  [key=0, style=solid, color=red];
n87 -> n94  [key=2, style=dotted, color=red];
n87 -> n89  [key=1, style=dashed, color=red, label=request];
n89 -> n90  [key=0, style=solid, color=red];
n89 -> n82  [key=2, style=dotted, color=red];
n90 -> n91  [key=0, style=solid, color=red];
n90 -> n23  [key=2, style=dotted, color=red];
n91 -> n83  [key=0, style=bold, color=blue];
n96 -> n97  [key=0, style=solid];
n97 -> n98  [key=0, style=solid];
n97 -> n81  [key=2, style=dotted];
n97 -> n99  [key=1, style=dashed, color=darkseagreen4, label=request];
n98 -> n99  [key=0, style=solid];
n98 -> n45  [key=2, style=dotted];
n98 -> n46  [key=2, style=dotted];
n98 -> n103  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n99 -> n100  [key=0, style=solid];
n99 -> n82  [key=2, style=dotted];
n99 -> n101  [key=1, style=dashed, color=darkseagreen4, label=session];
n103 -> n104  [key=0, style=solid];
n100 -> n101  [key=0, style=solid];
n100 -> n23  [key=2, style=dotted];
n101 -> n102  [key=0, style=solid];
n101 -> n23  [key=2, style=dotted];
n102 -> n96  [key=0, style=bold, color=blue];
n104 -> n105  [key=0, style=solid];
n104 -> n106  [key=2, style=dotted];
n105 -> n103  [key=0, style=bold, color=blue];
n107 -> n108  [key=0, style=solid];
n108 -> n109  [key=0, style=solid];
n108 -> n81  [key=2, style=dotted];
n108 -> n110  [key=1, style=dashed, color=darkseagreen4, label=request];
n109 -> n110  [key=0, style=solid];
n109 -> n45  [key=2, style=dotted];
n109 -> n46  [key=2, style=dotted];
n109 -> n115  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n110 -> n111  [key=0, style=solid];
n110 -> n82  [key=2, style=dotted];
n110 -> n112  [key=1, style=dashed, color=darkseagreen4, label=session];
n110 -> n113  [key=1, style=dashed, color=darkseagreen4, label=session];
n115 -> n116  [key=0, style=solid];
n111 -> n112  [key=0, style=solid];
n111 -> n23  [key=2, style=dotted];
n112 -> n113  [key=0, style=solid];
n112 -> n23  [key=2, style=dotted];
n113 -> n114  [key=0, style=solid];
n113 -> n23  [key=2, style=dotted];
n114 -> n107  [key=0, style=bold, color=blue];
n116 -> n117  [key=0, style=solid];
n116 -> n106  [key=2, style=dotted];
n117 -> n115  [key=0, style=bold, color=blue];
n118 -> n119  [key=0, style=solid];
n119 -> n120  [key=0, style=solid];
n119 -> n93  [key=2, style=dotted];
n119 -> n81  [key=2, style=dotted];
n119 -> n121  [key=1, style=dashed, color=darkseagreen4, label=request];
n120 -> n121  [key=0, style=solid];
n120 -> n45  [key=2, style=dotted];
n120 -> n46  [key=2, style=dotted];
n120 -> n125  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n121 -> n122  [key=0, style=solid];
n121 -> n82  [key=2, style=dotted];
n121 -> n123  [key=1, style=dashed, color=darkseagreen4, label=session];
n125 -> n126  [key=0, style=solid];
n122 -> n123  [key=0, style=solid];
n122 -> n23  [key=2, style=dotted];
n123 -> n124  [key=0, style=solid];
n123 -> n23  [key=2, style=dotted];
n124 -> n118  [key=0, style=bold, color=blue];
n126 -> n127  [key=0, style=solid];
n126 -> n106  [key=2, style=dotted];
n127 -> n125  [key=0, style=bold, color=blue];
n128 -> n129  [key=0, style=solid];
n129 -> n130  [key=0, style=solid];
n129 -> n138  [key=2, style=dotted];
n129 -> n132  [key=1, style=dashed, color=darkseagreen4, label=beforePipeline];
n129 -> n135  [key=1, style=dashed, color=darkseagreen4, label=beforePipeline];
n130 -> n131  [key=0, style=solid];
n130 -> n139  [key=2, style=dotted];
n130 -> n133  [key=1, style=dashed, color=darkseagreen4, label=afterPipeline];
n130 -> n136  [key=1, style=dashed, color=darkseagreen4, label=afterPipeline];
n132 -> n133  [key=0, style=solid];
n132 -> n45  [key=2, style=dotted];
n132 -> n46  [key=2, style=dotted];
n132 -> n143  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n135 -> n136  [key=0, style=solid];
n135 -> n142  [key=2, style=dotted];
n135 -> n23  [key=2, style=dotted];
n131 -> n132  [key=0, style=solid];
n131 -> n9  [key=2, style=dotted];
n131 -> n144  [key=1, style=dashed, color=darkseagreen4, label=hooks];
n131 -> n133  [key=1, style=dashed, color=darkseagreen4, label=hooks];
n131 -> n147  [key=1, style=dashed, color=darkseagreen4, label=hooks];
n131 -> n134  [key=1, style=dashed, color=darkseagreen4, label=hooks];
n133 -> n134  [key=0, style=solid];
n133 -> n45  [key=2, style=dotted];
n133 -> n46  [key=2, style=dotted];
n133 -> n146  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n136 -> n137  [key=0, style=solid];
n136 -> n142  [key=2, style=dotted];
n136 -> n23  [key=2, style=dotted];
n144 -> n145  [key=0, style=solid];
n147 -> n148  [key=0, style=solid];
n134 -> n135  [key=0, style=solid];
n134 -> n140  [key=2, style=dotted];
n134 -> n141  [key=2, style=dotted];
n143 -> n144  [key=0, style=solid];
n146 -> n147  [key=0, style=solid];
n137 -> n128  [key=0, style=bold, color=blue];
n145 -> n143  [key=0, style=bold, color=blue];
n148 -> n146  [key=0, style=bold, color=blue];
n149 -> n150  [key=0, style=solid];
n150 -> n151  [key=0, style=solid];
n150 -> n138  [key=2, style=dotted];
n150 -> n153  [key=1, style=dashed, color=darkseagreen4, label=beforePipeline];
n150 -> n160  [key=1, style=dashed, color=darkseagreen4, label=beforePipeline];
n151 -> n152  [key=0, style=solid];
n151 -> n139  [key=2, style=dotted];
n151 -> n154  [key=1, style=dashed, color=darkseagreen4, label=afterPipeline];
n151 -> n161  [key=1, style=dashed, color=darkseagreen4, label=afterPipeline];
n153 -> n154  [key=0, style=solid];
n153 -> n45  [key=2, style=dotted];
n153 -> n46  [key=2, style=dotted];
n153 -> n170  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n160 -> n161  [key=0, style=solid];
n160 -> n166  [key=2, style=dotted];
n160 -> n167  [key=2, style=dotted];
n152 -> n153  [key=0, style=solid];
n152 -> n9  [key=2, style=dotted];
n152 -> n171  [key=1, style=dashed, color=darkseagreen4, label=hooks];
n152 -> n154  [key=1, style=dashed, color=darkseagreen4, label=hooks];
n152 -> n174  [key=1, style=dashed, color=darkseagreen4, label=hooks];
n152 -> n155  [key=1, style=dashed, color=darkseagreen4, label=hooks];
n154 -> n155  [key=0, style=solid];
n154 -> n45  [key=2, style=dotted];
n154 -> n46  [key=2, style=dotted];
n154 -> n173  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n161 -> n162  [key=0, style=solid];
n161 -> n166  [key=2, style=dotted];
n161 -> n168  [key=2, style=dotted];
n171 -> n172  [key=0, style=solid];
n174 -> n175  [key=0, style=solid];
n155 -> n156  [key=0, style=solid];
n155 -> n140  [key=2, style=dotted];
n155 -> n141  [key=2, style=dotted];
n155 -> n164  [key=2, style=dotted];
n170 -> n171  [key=0, style=solid];
n173 -> n174  [key=0, style=solid];
n156 -> n157  [key=0, style=solid];
n156 -> n81  [key=2, style=dotted];
n156 -> n159  [key=1, style=dashed, color=darkseagreen4, label=request];
n157 -> n158  [key=0, style=solid];
n157 -> n45  [key=2, style=dotted];
n157 -> n46  [key=2, style=dotted];
n157 -> n176  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n159 -> n160  [key=0, style=solid];
n159 -> n165  [key=2, style=dotted];
n159 -> n161  [key=1, style=dashed, color=darkseagreen4, label=nancyContext];
n158 -> n159  [key=0, style=solid];
n158 -> n9  [key=2, style=dotted];
n158 -> n162  [key=1, style=dashed, color=darkseagreen4, label=response];
n176 -> n177  [key=0, style=solid];
n162 -> n163  [key=0, style=solid];
n162 -> n169  [key=2, style=dotted];
n163 -> n149  [key=0, style=bold, color=blue];
n172 -> n170  [key=0, style=bold, color=blue];
n175 -> n173  [key=0, style=bold, color=blue];
n177 -> n178  [key=0, style=solid];
n177 -> n106  [key=2, style=dotted];
n178 -> n176  [key=0, style=bold, color=blue];
n179 -> n180  [key=0, style=solid];
n180 -> n181  [key=0, style=solid];
n180 -> n138  [key=2, style=dotted];
n180 -> n183  [key=1, style=dashed, color=darkseagreen4, label=beforePipeline];
n180 -> n190  [key=1, style=dashed, color=darkseagreen4, label=beforePipeline];
n181 -> n182  [key=0, style=solid];
n181 -> n139  [key=2, style=dotted];
n181 -> n184  [key=1, style=dashed, color=darkseagreen4, label=afterPipeline];
n181 -> n192  [key=1, style=dashed, color=darkseagreen4, label=afterPipeline];
n183 -> n184  [key=0, style=solid];
n183 -> n45  [key=2, style=dotted];
n183 -> n46  [key=2, style=dotted];
n183 -> n195  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n190 -> n191  [key=0, style=solid];
n190 -> n166  [key=2, style=dotted];
n190 -> n167  [key=2, style=dotted];
n182 -> n183  [key=0, style=solid];
n182 -> n9  [key=2, style=dotted];
n182 -> n196  [key=1, style=dashed, color=darkseagreen4, label=hooks];
n182 -> n184  [key=1, style=dashed, color=darkseagreen4, label=hooks];
n182 -> n199  [key=1, style=dashed, color=darkseagreen4, label=hooks];
n182 -> n185  [key=1, style=dashed, color=darkseagreen4, label=hooks];
n184 -> n185  [key=0, style=solid];
n184 -> n45  [key=2, style=dotted];
n184 -> n46  [key=2, style=dotted];
n184 -> n198  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n192 -> n193  [key=0, style=solid];
n192 -> n166  [key=2, style=dotted];
n192 -> n168  [key=2, style=dotted];
n196 -> n197  [key=0, style=solid];
n199 -> n200  [key=0, style=solid];
n185 -> n186  [key=0, style=solid];
n185 -> n140  [key=2, style=dotted];
n185 -> n141  [key=2, style=dotted];
n185 -> n164  [key=2, style=dotted];
n195 -> n196  [key=0, style=solid];
n198 -> n199  [key=0, style=solid];
n186 -> n187  [key=0, style=solid];
n186 -> n81  [key=2, style=dotted];
n186 -> n189  [key=1, style=dashed, color=darkseagreen4, label=request];
n186 -> n191  [key=1, style=dashed, color=darkseagreen4, label=request];
n187 -> n188  [key=0, style=solid];
n187 -> n45  [key=2, style=dotted];
n187 -> n46  [key=2, style=dotted];
n187 -> n201  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n189 -> n190  [key=0, style=solid];
n189 -> n165  [key=2, style=dotted];
n189 -> n192  [key=1, style=dashed, color=darkseagreen4, label=nancyContext];
n191 -> n192  [key=0, style=solid];
n188 -> n189  [key=0, style=solid];
n188 -> n9  [key=2, style=dotted];
n188 -> n193  [key=1, style=dashed, color=darkseagreen4, label=response];
n201 -> n202  [key=0, style=solid];
n193 -> n194  [key=0, style=solid];
n193 -> n169  [key=2, style=dotted];
n194 -> n179  [key=0, style=bold, color=blue];
n197 -> n195  [key=0, style=bold, color=blue];
n200 -> n198  [key=0, style=bold, color=blue];
n202 -> n203  [key=0, style=solid];
n202 -> n106  [key=2, style=dotted];
n203 -> n201  [key=0, style=bold, color=blue];
n204 -> n205  [key=0, style=solid];
n205 -> n206  [key=0, style=solid];
n205 -> n9  [key=2, style=dotted];
n205 -> n207  [key=1, style=dashed, color=darkseagreen4, label=fakeFormatter];
n205 -> n210  [key=1, style=dashed, color=darkseagreen4, label=fakeFormatter];
n205 -> n218  [key=1, style=dashed, color=darkseagreen4, label=fakeFormatter];
n206 -> n207  [key=0, style=solid];
n206 -> n45  [key=2, style=dotted];
n206 -> n46  [key=2, style=dotted];
n206 -> n214  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n207 -> n208  [key=0, style=solid];
n207 -> n212  [key=2, style=dotted];
n207 -> n209  [key=1, style=dashed, color=darkseagreen4, label=store];
n210 -> n211  [key=0, style=solid];
n210 -> n45  [key=2, style=dotted];
n210 -> n213  [key=2, style=dotted];
n210 -> n217  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n218 -> n219  [key=0, style=solid];
n218 -> n220  [key=2, style=dotted];
n214 -> n215  [key=0, style=solid];
n208 -> n209  [key=0, style=solid];
n208 -> n81  [key=2, style=dotted];
n209 -> n210  [key=0, style=solid];
n209 -> n82  [key=2, style=dotted];
n211 -> n204  [key=0, style=bold, color=blue];
n217 -> n218  [key=0, style=solid];
n215 -> n216  [key=0, style=solid];
n215 -> n106  [key=2, style=dotted];
n216 -> n214  [key=0, style=bold, color=blue];
n219 -> n217  [key=0, style=bold, color=blue];
n221 -> n222  [key=0, style=solid];
n222 -> n223  [key=0, style=solid];
n222 -> n21  [key=2, style=dotted];
n222 -> n227  [key=1, style=dashed, color=darkseagreen4, label=response];
n223 -> n224  [key=0, style=solid];
n223 -> n29  [key=2, style=dotted];
n223 -> n30  [key=2, style=dotted];
n223 -> n227  [key=1, style=dashed, color=darkseagreen4, label=session];
n227 -> n228  [key=0, style=solid];
n227 -> n22  [key=2, style=dotted];
n224 -> n225  [key=0, style=solid];
n225 -> n226  [key=0, style=solid];
n225 -> n9  [key=2, style=dotted];
n225 -> n228  [key=1, style=dashed, color=darkseagreen4, label=fakeFormatter];
n225 -> n231  [key=1, style=dashed, color=darkseagreen4, label=fakeFormatter];
n226 -> n227  [key=0, style=solid];
n226 -> n212  [key=2, style=dotted];
n228 -> n229  [key=0, style=solid];
n228 -> n45  [key=2, style=dotted];
n228 -> n213  [key=2, style=dotted];
n228 -> n230  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n231 -> n232  [key=0, style=solid];
n231 -> n233  [key=2, style=dotted];
n229 -> n221  [key=0, style=bold, color=blue];
n230 -> n231  [key=0, style=solid];
n232 -> n230  [key=0, style=bold, color=blue];
n234 -> n235  [key=0, style=solid];
n235 -> n236  [key=0, style=solid];
n235 -> n138  [key=2, style=dotted];
n235 -> n238  [key=1, style=dashed, color=darkseagreen4, label=beforePipeline];
n235 -> n245  [key=1, style=dashed, color=darkseagreen4, label=beforePipeline];
n236 -> n237  [key=0, style=solid];
n236 -> n139  [key=2, style=dotted];
n236 -> n239  [key=1, style=dashed, color=darkseagreen4, label=afterPipeline];
n238 -> n239  [key=0, style=solid];
n238 -> n45  [key=2, style=dotted];
n238 -> n46  [key=2, style=dotted];
n238 -> n249  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n245 -> n246  [key=0, style=solid];
n245 -> n166  [key=2, style=dotted];
n245 -> n167  [key=2, style=dotted];
n237 -> n238  [key=0, style=solid];
n237 -> n9  [key=2, style=dotted];
n237 -> n250  [key=1, style=dashed, color=darkseagreen4, label=hooks];
n237 -> n239  [key=1, style=dashed, color=darkseagreen4, label=hooks];
n237 -> n253  [key=1, style=dashed, color=darkseagreen4, label=hooks];
n237 -> n242  [key=1, style=dashed, color=darkseagreen4, label=hooks];
n239 -> n240  [key=0, style=solid];
n239 -> n45  [key=2, style=dotted];
n239 -> n46  [key=2, style=dotted];
n239 -> n252  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n250 -> n251  [key=0, style=solid];
n253 -> n254  [key=0, style=solid];
n242 -> n243  [key=0, style=solid];
n242 -> n140  [key=2, style=dotted];
n242 -> n141  [key=2, style=dotted];
n242 -> n248  [key=2, style=dotted];
n249 -> n250  [key=0, style=solid];
n240 -> n241  [key=0, style=solid];
n240 -> n9  [key=2, style=dotted];
n240 -> n242  [key=1, style=dashed, color=darkseagreen4, label=fakeFormatter];
n240 -> n246  [key=1, style=dashed, color=darkseagreen4, label=fakeFormatter];
n240 -> n259  [key=1, style=dashed, color=darkseagreen4, label=fakeFormatter];
n252 -> n253  [key=0, style=solid];
n241 -> n242  [key=0, style=solid];
n241 -> n45  [key=2, style=dotted];
n241 -> n46  [key=2, style=dotted];
n241 -> n255  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n246 -> n247  [key=0, style=solid];
n246 -> n45  [key=2, style=dotted];
n246 -> n213  [key=2, style=dotted];
n246 -> n258  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n259 -> n260  [key=0, style=solid];
n259 -> n220  [key=2, style=dotted];
n255 -> n256  [key=0, style=solid];
n243 -> n244  [key=0, style=solid];
n243 -> n81  [key=2, style=dotted];
n244 -> n245  [key=0, style=solid];
n244 -> n165  [key=2, style=dotted];
n247 -> n234  [key=0, style=bold, color=blue];
n258 -> n259  [key=0, style=solid];
n251 -> n249  [key=0, style=bold, color=blue];
n254 -> n252  [key=0, style=bold, color=blue];
n256 -> n257  [key=0, style=solid];
n256 -> n106  [key=2, style=dotted];
n257 -> n255  [key=0, style=bold, color=blue];
n260 -> n258  [key=0, style=bold, color=blue];
n261 -> n262  [key=0, style=solid];
n262 -> n263  [key=0, style=solid];
n262 -> n21  [key=2, style=dotted];
n262 -> n267  [key=1, style=dashed, color=darkseagreen4, label=response];
n262 -> n268  [key=1, style=dashed, color=darkseagreen4, label=response];
n262 -> n269  [key=1, style=dashed, color=darkseagreen4, label=response];
n263 -> n264  [key=0, style=solid];
n263 -> n29  [key=2, style=dotted];
n263 -> n30  [key=2, style=dotted];
n263 -> n266  [key=1, style=dashed, color=darkseagreen4, label=session];
n263 -> n267  [key=1, style=dashed, color=darkseagreen4, label=session];
n267 -> n268  [key=0, style=solid];
n267 -> n22  [key=2, style=dotted];
n268 -> n269  [key=0, style=solid];
n268 -> n23  [key=2, style=dotted];
n269 -> n270  [key=0, style=solid];
n269 -> n47  [key=2, style=dotted];
n269 -> n271  [key=1, style=dashed, color=darkseagreen4, label=cookie];
n269 -> n272  [key=1, style=dashed, color=darkseagreen4, label=cookie];
n264 -> n265  [key=0, style=solid];
n264 -> n274  [key=2, style=dotted];
n264 -> n266  [key=1, style=dashed, color=darkseagreen4, label=payload];
n266 -> n267  [key=0, style=solid];
n265 -> n266  [key=0, style=solid];
n265 -> n11  [key=2, style=dotted];
n265 -> n267  [key=1, style=dashed, color=darkseagreen4, label=store];
n265 -> n270  [key=1, style=dashed, color=darkseagreen4, label=store];
n270 -> n271  [key=0, style=solid];
n270 -> n23  [key=2, style=dotted];
n271 -> n272  [key=0, style=solid];
n271 -> n275  [key=2, style=dotted];
n272 -> n273  [key=0, style=solid];
n272 -> n276  [key=2, style=dotted];
n273 -> n261  [key=0, style=bold, color=blue];
n277 -> n278  [key=0, style=solid];
n278 -> n279  [key=0, style=solid];
n278 -> n21  [key=2, style=dotted];
n278 -> n283  [key=1, style=dashed, color=darkseagreen4, label=response];
n278 -> n285  [key=1, style=dashed, color=darkseagreen4, label=response];
n279 -> n280  [key=0, style=solid];
n279 -> n29  [key=2, style=dotted];
n279 -> n30  [key=2, style=dotted];
n279 -> n282  [key=1, style=dashed, color=darkseagreen4, label=session];
n279 -> n283  [key=1, style=dashed, color=darkseagreen4, label=session];
n283 -> n284  [key=0, style=solid];
n283 -> n22  [key=2, style=dotted];
n285 -> n286  [key=0, style=solid];
n285 -> n47  [key=2, style=dotted];
n285 -> n95  [key=2, style=dotted];
n280 -> n281  [key=0, style=solid];
n280 -> n274  [key=2, style=dotted];
n280 -> n282  [key=1, style=dashed, color=darkseagreen4, label=payload];
n280 -> n287  [key=1, style=dashed, color=darkseagreen4, label=payload];
n282 -> n283  [key=0, style=solid];
n281 -> n282  [key=0, style=solid];
n281 -> n11  [key=2, style=dotted];
n281 -> n283  [key=1, style=dashed, color=darkseagreen4, label=store];
n281 -> n286  [key=1, style=dashed, color=darkseagreen4, label=store];
n287 -> n288  [key=0, style=solid];
n287 -> n23  [key=2, style=dotted];
n286 -> n287  [key=0, style=solid];
n286 -> n82  [key=2, style=dotted];
n284 -> n285  [key=0, style=solid];
n284 -> n94  [key=2, style=dotted];
n284 -> n286  [key=1, style=dashed, color=darkseagreen4, label=request];
n288 -> n277  [key=0, style=bold, color=blue];
n289 -> n290  [key=0, style=solid];
n290 -> n291  [key=0, style=solid];
n290 -> n21  [key=2, style=dotted];
n290 -> n293  [key=1, style=dashed, color=darkseagreen4, label=response];
n291 -> n292  [key=0, style=solid];
n291 -> n29  [key=2, style=dotted];
n291 -> n30  [key=2, style=dotted];
n291 -> n293  [key=1, style=dashed, color=darkseagreen4, label=session];
n293 -> n294  [key=0, style=solid];
n293 -> n22  [key=2, style=dotted];
n292 -> n293  [key=0, style=solid];
n294 -> n295  [key=0, style=solid];
n294 -> n45  [key=2, style=dotted];
n294 -> n213  [key=2, style=dotted];
n294 -> n296  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n295 -> n289  [key=0, style=bold, color=blue];
n296 -> n297  [key=0, style=solid];
n297 -> n298  [key=0, style=solid];
n297 -> n299  [key=2, style=dotted];
n298 -> n296  [key=0, style=bold, color=blue];
n300 -> n301  [key=0, style=solid];
n301 -> n302  [key=0, style=solid];
n301 -> n21  [key=2, style=dotted];
n301 -> n304  [key=1, style=dashed, color=darkseagreen4, label=response];
n302 -> n303  [key=0, style=solid];
n302 -> n29  [key=2, style=dotted];
n302 -> n30  [key=2, style=dotted];
n302 -> n304  [key=1, style=dashed, color=darkseagreen4, label=session];
n304 -> n305  [key=0, style=solid];
n304 -> n22  [key=2, style=dotted];
n303 -> n304  [key=0, style=solid];
n305 -> n306  [key=0, style=solid];
n305 -> n45  [key=2, style=dotted];
n305 -> n213  [key=2, style=dotted];
n305 -> n307  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n306 -> n300  [key=0, style=bold, color=blue];
n307 -> n308  [key=0, style=solid];
n308 -> n309  [key=0, style=solid];
n308 -> n310  [key=2, style=dotted];
n309 -> n307  [key=0, style=bold, color=blue];
n311 -> n312  [key=0, style=solid, color=red];
n312 -> n313  [key=0, style=solid, color=red];
n312 -> n312  [key=3, color=red, style=bold, label="Local variable string inputValue"];
n313 -> n314  [key=0, style=solid, color=red];
n313 -> n93  [key=2, style=dotted, color=red];
n313 -> n313  [key=1, style=dashed, color=red, label=inputValue];
n313 -> n316  [key=1, style=dashed, color=red, label=inputValue];
n314 -> n315  [key=0, style=solid, color=red];
n314 -> n11  [key=2, style=dotted, color=red];
n314 -> n316  [key=1, style=dashed, color=red, label=store];
n314 -> n317  [key=1, style=dashed, color=red, label=store];
n316 -> n317  [key=0, style=solid, color=red];
n316 -> n95  [key=2, style=dotted, color=red];
n315 -> n316  [key=0, style=solid, color=red];
n315 -> n94  [key=2, style=dotted, color=red];
n315 -> n317  [key=1, style=dashed, color=red, label=request];
n317 -> n318  [key=0, style=solid];
n317 -> n82  [key=2, style=dotted];
n317 -> n319  [key=1, style=dashed, color=darkseagreen4, label=result];
n318 -> n319  [key=0, style=solid];
n318 -> n23  [key=2, style=dotted];
n319 -> n320  [key=0, style=solid];
n319 -> n47  [key=2, style=dotted];
n319 -> n321  [key=2, style=dotted];
n320 -> n311  [key=0, style=bold, color=blue];
n322 -> n323  [key=0, style=solid];
n323 -> n324  [key=0, style=solid];
n323 -> n331  [key=2, style=dotted];
n324 -> n325  [key=0, style=solid];
n324 -> n93  [key=2, style=dotted];
n324 -> n324  [key=1, style=dashed, color=darkseagreen4, label=inputValue];
n324 -> n327  [key=1, style=dashed, color=darkseagreen4, label=inputValue];
n325 -> n326  [key=0, style=solid];
n325 -> n11  [key=2, style=dotted];
n325 -> n327  [key=1, style=dashed, color=darkseagreen4, label=store];
n325 -> n328  [key=1, style=dashed, color=darkseagreen4, label=store];
n327 -> n328  [key=0, style=solid];
n327 -> n95  [key=2, style=dotted];
n326 -> n327  [key=0, style=solid];
n326 -> n94  [key=2, style=dotted];
n326 -> n328  [key=1, style=dashed, color=darkseagreen4, label=request];
n328 -> n329  [key=0, style=solid];
n328 -> n82  [key=2, style=dotted];
n329 -> n330  [key=0, style=solid];
n329 -> n23  [key=2, style=dotted];
n330 -> n322  [key=0, style=bold, color=blue];
n332 -> n333  [key=0, style=solid];
n333 -> n334  [key=0, style=solid];
n333 -> n371  [key=3, color=darkorchid, style=bold, label="Local variable string inputValue"];
n334 -> n335  [key=0, style=solid];
n334 -> n93  [key=2, style=dotted];
n334 -> n334  [key=1, style=dashed, color=darkseagreen4, label=inputValue];
n334 -> n337  [key=1, style=dashed, color=darkseagreen4, label=inputValue];
n335 -> n336  [key=0, style=solid];
n335 -> n11  [key=2, style=dotted];
n335 -> n337  [key=1, style=dashed, color=darkseagreen4, label=store];
n335 -> n338  [key=1, style=dashed, color=darkseagreen4, label=store];
n337 -> n338  [key=0, style=solid];
n337 -> n95  [key=2, style=dotted];
n336 -> n337  [key=0, style=solid];
n336 -> n94  [key=2, style=dotted];
n336 -> n338  [key=1, style=dashed, color=darkseagreen4, label=request];
n338 -> n339  [key=0, style=solid];
n338 -> n82  [key=2, style=dotted];
n339 -> n340  [key=0, style=solid];
n339 -> n23  [key=2, style=dotted];
n340 -> n332  [key=0, style=bold, color=blue];
n341 -> n342  [key=0, style=solid];
n342 -> n343  [key=0, style=solid];
n342 -> n92  [key=2, style=dotted];
n343 -> n344  [key=0, style=solid];
n343 -> n93  [key=2, style=dotted];
n343 -> n343  [key=1, style=dashed, color=darkseagreen4, label=inputValue];
n343 -> n346  [key=1, style=dashed, color=darkseagreen4, label=inputValue];
n344 -> n345  [key=0, style=solid];
n344 -> n11  [key=2, style=dotted];
n344 -> n346  [key=1, style=dashed, color=darkseagreen4, label=store];
n344 -> n347  [key=1, style=dashed, color=darkseagreen4, label=store];
n346 -> n347  [key=0, style=solid];
n346 -> n95  [key=2, style=dotted];
n345 -> n346  [key=0, style=solid];
n345 -> n94  [key=2, style=dotted];
n345 -> n347  [key=1, style=dashed, color=darkseagreen4, label=request];
n347 -> n348  [key=0, style=solid];
n347 -> n82  [key=2, style=dotted];
n348 -> n349  [key=0, style=solid];
n348 -> n23  [key=2, style=dotted];
n349 -> n341  [key=0, style=bold, color=blue];
n350 -> n351  [key=0, style=solid];
n351 -> n352  [key=0, style=solid];
n351 -> n360  [key=2, style=dotted];
n352 -> n353  [key=0, style=solid];
n353 -> n354  [key=0, style=solid];
n353 -> n93  [key=2, style=dotted];
n353 -> n353  [key=1, style=dashed, color=darkseagreen4, label=inputValue];
n353 -> n356  [key=1, style=dashed, color=darkseagreen4, label=inputValue];
n354 -> n355  [key=0, style=solid];
n354 -> n11  [key=2, style=dotted];
n354 -> n356  [key=1, style=dashed, color=darkseagreen4, label=store];
n354 -> n357  [key=1, style=dashed, color=darkseagreen4, label=store];
n356 -> n357  [key=0, style=solid];
n356 -> n95  [key=2, style=dotted];
n355 -> n356  [key=0, style=solid];
n355 -> n94  [key=2, style=dotted];
n355 -> n357  [key=1, style=dashed, color=darkseagreen4, label=request];
n357 -> n358  [key=0, style=solid];
n357 -> n82  [key=2, style=dotted];
n358 -> n359  [key=0, style=solid];
n358 -> n23  [key=2, style=dotted];
n359 -> n350  [key=0, style=bold, color=blue];
n361 -> n362  [key=0, style=solid];
n362 -> n363  [key=0, style=solid];
n362 -> n140  [key=2, style=dotted];
n363 -> n364  [key=0, style=solid];
n363 -> n371  [key=2, style=dotted];
n363 -> n369  [key=1, style=dashed, color=darkseagreen4, label=storeConfig];
n363 -> n375  [key=1, style=dashed, color=darkseagreen4, label=storeConfig];
n364 -> n365  [key=0, style=solid];
n364 -> n372  [key=2, style=dotted];
n364 -> n368  [key=1, style=dashed, color=darkseagreen4, label=store];
n371 -> n371  [key=3, color=darkorchid, style=bold, label="Field variable string ValidData"];
n369 -> n370  [key=0, style=solid];
n369 -> n373  [key=2, style=dotted];
n369 -> n374  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n375 -> n376  [key=0, style=solid];
n365 -> n366  [key=0, style=solid];
n365 -> n21  [key=2, style=dotted];
n365 -> n368  [key=1, style=dashed, color=darkseagreen4, label=response];
n365 -> n369  [key=1, style=dashed, color=darkseagreen4, label=response];
n368 -> n369  [key=0, style=solid];
n368 -> n22  [key=2, style=dotted];
n366 -> n367  [key=0, style=solid];
n366 -> n29  [key=2, style=dotted];
n366 -> n30  [key=2, style=dotted];
n366 -> n368  [key=1, style=dashed, color=darkseagreen4, label=session];
n367 -> n368  [key=0, style=solid];
n370 -> n361  [key=0, style=bold, color=blue];
n374 -> n375  [key=0, style=solid];
n376 -> n374  [key=0, style=bold, color=blue];
n377 -> n378  [key=0, style=solid];
n378 -> n379  [key=0, style=solid];
n378 -> n140  [key=2, style=dotted];
n379 -> n380  [key=0, style=solid];
n379 -> n371  [key=2, style=dotted];
n379 -> n385  [key=1, style=dashed, color=darkseagreen4, label=storeConfig];
n379 -> n390  [key=1, style=dashed, color=darkseagreen4, label=storeConfig];
n379 -> n386  [key=1, style=dashed, color=darkseagreen4, label=storeConfig];
n380 -> n381  [key=0, style=solid];
n380 -> n372  [key=2, style=dotted];
n380 -> n384  [key=1, style=dashed, color=darkseagreen4, label=store];
n385 -> n386  [key=0, style=solid];
n385 -> n388  [key=2, style=dotted];
n385 -> n389  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n390 -> n391  [key=0, style=solid];
n386 -> n387  [key=0, style=solid];
n386 -> n169  [key=2, style=dotted];
n381 -> n382  [key=0, style=solid];
n381 -> n21  [key=2, style=dotted];
n381 -> n384  [key=1, style=dashed, color=darkseagreen4, label=response];
n381 -> n385  [key=1, style=dashed, color=darkseagreen4, label=response];
n384 -> n385  [key=0, style=solid];
n384 -> n22  [key=2, style=dotted];
n382 -> n383  [key=0, style=solid];
n382 -> n29  [key=2, style=dotted];
n382 -> n30  [key=2, style=dotted];
n382 -> n384  [key=1, style=dashed, color=darkseagreen4, label=session];
n383 -> n384  [key=0, style=solid];
n389 -> n390  [key=0, style=solid];
n387 -> n377  [key=0, style=bold, color=blue];
n391 -> n389  [key=0, style=bold, color=blue];
n392 -> n393  [key=0, style=solid];
n393 -> n394  [key=0, style=solid];
n393 -> n140  [key=2, style=dotted];
n394 -> n395  [key=0, style=solid];
n394 -> n371  [key=2, style=dotted];
n394 -> n400  [key=1, style=dashed, color=darkseagreen4, label=storeConfig];
n394 -> n404  [key=1, style=dashed, color=darkseagreen4, label=storeConfig];
n394 -> n401  [key=1, style=dashed, color=darkseagreen4, label=storeConfig];
n395 -> n396  [key=0, style=solid];
n395 -> n372  [key=2, style=dotted];
n395 -> n399  [key=1, style=dashed, color=darkseagreen4, label=store];
n400 -> n401  [key=0, style=solid];
n400 -> n388  [key=2, style=dotted];
n400 -> n403  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n404 -> n405  [key=0, style=solid];
n401 -> n402  [key=0, style=solid];
n401 -> n169  [key=2, style=dotted];
n396 -> n397  [key=0, style=solid];
n396 -> n21  [key=2, style=dotted];
n396 -> n399  [key=1, style=dashed, color=darkseagreen4, label=response];
n396 -> n400  [key=1, style=dashed, color=darkseagreen4, label=response];
n399 -> n400  [key=0, style=solid];
n399 -> n22  [key=2, style=dotted];
n397 -> n398  [key=0, style=solid];
n397 -> n29  [key=2, style=dotted];
n397 -> n30  [key=2, style=dotted];
n397 -> n399  [key=1, style=dashed, color=darkseagreen4, label=session];
n398 -> n399  [key=0, style=solid];
n403 -> n404  [key=0, style=solid];
n402 -> n392  [key=0, style=bold, color=blue];
n405 -> n403  [key=0, style=bold, color=blue];
n406 -> n407  [key=0, style=solid];
n406 -> n414  [key=2, style=dotted];
n406 -> n408  [key=1, style=dashed, color=red, label=headers];
n406 -> n409  [key=1, style=dashed, color=darkseagreen4, label=headers];
n407 -> n408  [key=0, style=solid, color=red];
n407 -> n409  [key=0, style=solid];
n407 -> n415  [key=2, style=dotted];
n408 -> n409  [key=0, style=solid, color=red];
n408 -> n93  [key=2, style=dotted, color=red];
n408 -> n416  [key=2, style=dotted, color=red];
n410 -> n411  [key=0, style=solid];
n410 -> n412  [key=0, style=solid];
n409 -> n410  [key=0, style=solid];
n409 -> n417  [key=2, style=dotted];
n409 -> n418  [key=2, style=dotted];
n409 -> n419  [key=2, style=dotted];
n409 -> n411  [key=1, style=dashed, color=darkseagreen4, label=request];
n409 -> n412  [key=1, style=dashed, color=darkseagreen4, label=request];
n419 -> n420  [key=0, style=solid];
n419 -> n423  [key=3, color=darkorchid, style=bold, label="method methodReturn Nancy.IO.RequestStream CreateRequestStream"];
n411 -> n412  [key=0, style=solid];
n411 -> n82  [key=2, style=dotted];
n412 -> n413  [key=0, style=solid];
n413 -> n81  [key=0, style=bold, color=blue];
n420 -> n421  [key=0, style=solid];
n420 -> n422  [key=2, style=dotted];
n420 -> n423  [key=2, style=dotted];
n421 -> n419  [key=0, style=bold, color=blue];
n423 -> n424  [key=0, style=solid];
n424 -> n425  [key=0, style=solid];
n424 -> n426  [key=2, style=dotted];
n425 -> n423  [key=0, style=bold, color=blue];
m0_9 -> m0_16  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label="Nancy.ViewEngines.ViewLocationContext"];
m0_9 -> m0_14  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_9 -> m0_31  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_9 -> m0_18  [key=1, style=dashed, color=darkseagreen4, label="Nancy.ViewEngines.ViewLocationContext"];
m0_9 -> m0_21  [key=1, style=dashed, color=darkseagreen4, label="Nancy.ViewEngines.ViewLocationContext"];
m0_9 -> m0_23  [key=1, style=dashed, color=darkseagreen4, label="Nancy.ViewEngines.ViewLocationContext"];
m0_9 -> m0_11  [key=3, color=darkorchid, style=bold, label="method methodReturn Nancy.ViewEngines.ViewLocationResult GetViewLocation"];
m0_9 -> m0_19  [key=3, color=darkorchid, style=bold, label="method methodReturn Nancy.ViewEngines.ViewLocationResult GetViewLocation"];
m0_16 -> m0_28  [key=2, style=dotted];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_18  [key=1, style=dashed, color=darkseagreen4, label=conventionBasedViewName];
m0_16 -> m0_36  [key=1, style=dashed, color=darkseagreen4, label=conventionBasedViewName];
m0_16 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label=conventionBasedViewName];
m0_16 -> m0_21  [key=1, style=dashed, color=darkseagreen4, label=conventionBasedViewName];
m0_16 -> m0_40  [key=1, style=dashed, color=darkseagreen4, label=conventionBasedViewName];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_23  [key=0, style=solid];
m0_11 -> m0_25  [key=0, style=solid];
m0_17 -> m0_15  [key=0, style=solid];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> n415  [key=2, style=dotted];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_27  [key=2, style=dotted];
m0_18 -> m0_35  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_29  [key=2, style=dotted];
m0_19 -> m0_22  [key=1, style=dashed, color=darkseagreen4, label=locatedView];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_27  [key=2, style=dotted];
m0_21 -> m0_39  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_27  [key=2, style=dotted];
m0_14 -> m0_30  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_20 -> m0_15  [key=0, style=solid];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_24  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Func<Nancy.Response> "];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_27  [key=2, style=dotted];
m0_23 -> m0_42  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_12  [key=0, style=solid];
m0_10 -> n415  [key=2, style=dotted];
m0_12 -> m0_14  [key=0, style=solid];
m0_12 -> m0_13  [key=0, style=solid];
m0_22 -> m0_25  [key=0, style=solid];
m0_24 -> m0_25  [key=0, style=solid];
m0_13 -> m0_25  [key=0, style=solid];
m0_25 -> m0_9  [key=0, style=bold, color=blue];
m0_28 -> m0_45  [key=0, style=solid, color=green];
m0_28 -> m0_15  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<string, object, Nancy.ViewEngines.ViewLocationContext, string> convention"];
m0_28 -> m0_9  [key=3, color=darkorchid, style=bold, label="Parameter variable Nancy.ViewEngines.ViewLocationContext viewLocationContext"];
m0_28 -> m0_11  [key=3, color=darkorchid, style=bold, label="method methodReturn string SafeInvokeConvention"];
m0_45 -> m0_47  [key=0, style=solid, color=green];
m0_45 -> m0_48  [key=2, style=dotted, color=green];
m0_46 -> m0_47  [key=0, style=solid, color=green];
m0_47 -> m0_28  [key=0, style=bold, color=blue];
m0_0 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label="Nancy.ViewEngines.IViewLocator"];
m0_0 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Conventions.ViewLocationConventions"];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Conventions.ViewLocationConventions"];
m0_5 -> m0_6  [key=0, style=solid];
m0_6 -> m0_7  [key=0, style=solid];
m0_3 -> m0_5  [key=0, style=solid];
m0_3 -> m0_4  [key=0, style=solid];
m0_1 -> m0_3  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_4 -> m0_7  [key=0, style=solid];
m0_4 -> m0_8  [key=2, style=dotted];
m0_2 -> m0_7  [key=0, style=solid];
m0_2 -> m0_8  [key=2, style=dotted];
m0_7 -> m0_0  [key=0, style=bold, color=blue];
m0_42 -> m0_43  [key=0, style=solid];
m0_36 -> m0_37  [key=0, style=solid];
m0_36 -> m0_38  [key=2, style=dotted];
m0_36 -> m0_34  [key=2, style=dotted];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_38  [key=2, style=dotted];
m0_40 -> m0_34  [key=2, style=dotted];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_33  [key=2, style=dotted];
m0_31 -> m0_34  [key=2, style=dotted];
m0_35 -> m0_36  [key=0, style=solid];
m0_37 -> m0_35  [key=0, style=bold, color=blue];
m0_39 -> m0_40  [key=0, style=solid];
m0_41 -> m0_39  [key=0, style=bold, color=blue];
m0_30 -> m0_31  [key=0, style=solid];
m0_32 -> m0_30  [key=0, style=bold, color=blue];
m0_43 -> m0_34  [key=2, style=dotted];
m0_43 -> m0_44  [key=0, style=solid];
m0_44 -> m0_42  [key=0, style=bold, color=blue];
m0_49 -> m0_16  [key=1, style=dashed, color=darkseagreen4, label="Nancy.ViewEngines.DefaultViewResolver"];
m0_49 -> m0_15  [key=1, style=dashed, color=darkseagreen4, label="Nancy.ViewEngines.DefaultViewResolver"];
m0_49 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label="Nancy.ViewEngines.DefaultViewResolver"];
m0_49 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label="Nancy.ViewEngines.DefaultViewResolver"];
m0_49 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label="Nancy.ViewEngines.DefaultViewResolver"];
m0_51 -> m0_36  [key=1, style=dashed, color=darkseagreen4, label=conventionBasedViewName];
m0_51 -> m0_40  [key=1, style=dashed, color=darkseagreen4, label=conventionBasedViewName];
m0_50 -> m0_31  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_4  [key=2, style=dotted];
m1_1 -> m1_7  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_5  [key=2, style=dotted];
m1_3 -> m1_0  [key=0, style=bold, color=blue];
m1_26 -> m1_27  [key=0, style=solid];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_30  [key=2, style=dotted];
m1_27 -> m1_33  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_31  [key=2, style=dotted];
m1_28 -> n9  [key=2, style=dotted];
m1_29 -> m1_26  [key=0, style=bold, color=blue];
m1_33 -> m1_34  [key=0, style=solid];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_9  [key=2, style=dotted];
m1_6 -> m1_7  [key=0, style=solid];
m1_8 -> m1_6  [key=0, style=bold, color=blue];
m1_22 -> m1_23  [key=0, style=solid];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_25  [key=2, style=dotted];
m1_24 -> m1_22  [key=0, style=bold, color=blue];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_17  [key=2, style=dotted];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_18  [key=2, style=dotted];
m1_36 -> m1_33  [key=0, style=bold, color=blue];
m1_10 -> m1_11  [key=0, style=solid];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_17  [key=2, style=dotted];
m1_11 -> m1_22  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_18  [key=2, style=dotted];
m1_12 -> m1_14  [key=1, style=dashed, color=darkseagreen4, label=body];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_19  [key=2, style=dotted];
m1_13 -> m1_15  [key=1, style=dashed, color=darkseagreen4, label=firstIndex];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_20  [key=2, style=dotted];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_21  [key=2, style=dotted];
m1_16 -> m1_10  [key=0, style=bold, color=blue];
m1_37 -> m1_1  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Functional.Tests.PartialViewTests"];
m1_37 -> m1_2  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Functional.Tests.PartialViewTests"];
m1_37 -> m1_11  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Functional.Tests.PartialViewTests"];
m1_37 -> m1_27  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Functional.Tests.PartialViewTests"];
m1_37 -> m1_34  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Functional.Tests.PartialViewTests"];
m2_13 -> m2_129  [key=0, style=solid];
m2_13 -> m2_6  [key=3, color=darkorchid, style=bold, label="Parameter variable string requestedFilename"];
m2_13 -> m2_24  [key=3, color=darkorchid, style=bold, label="Parameter variable string virtualDirectory"];
m2_13 -> m2_28  [key=3, color=darkorchid, style=bold, label="Parameter variable string virtualDirectory"];
m2_13 -> m2_36  [key=3, color=darkorchid, style=bold, label="Parameter variable string virtualDirectory"];
m2_13 -> m2_16  [key=3, color=darkorchid, style=bold, label="Parameter variable string requestedFilename"];
m2_13 -> m2_20  [key=3, color=darkorchid, style=bold, label="Parameter variable string requestedFilename"];
m2_13 -> m2_32  [key=3, color=darkorchid, style=bold, label="Parameter variable string requestedFilename"];
m2_13 -> m2_40  [key=3, color=darkorchid, style=bold, label="Parameter variable string requestedFilename"];
m2_13 -> m2_120  [key=3, color=darkorchid, style=bold, label="Parameter variable string requestedFilename"];
m2_13 -> m2_45  [key=3, color=darkorchid, style=bold, label="Parameter variable string root"];
m2_13 -> m2_115  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>> headers"];
m2_129 -> m2_130  [key=0, style=solid];
m2_129 -> m2_83  [key=2, style=dotted];
m2_129 -> m2_135  [key=1, style=dashed, color=darkseagreen4, label=response];
m2_130 -> m2_131  [key=0, style=solid];
m2_130 -> m2_133  [key=1, style=dashed, color=darkseagreen4, label=fileResponse];
m2_135 -> m2_136  [key=0, style=solid];
m2_135 -> m2_141  [key=2, style=dotted];
m2_135 -> m2_142  [key=2, style=dotted];
m2_135 -> m2_124  [key=2, style=dotted];
m2_131 -> m2_132  [key=0, style=solid];
m2_131 -> m2_135  [key=0, style=solid];
m2_133 -> m2_134  [key=0, style=solid];
m2_133 -> m2_138  [key=2, style=dotted];
m2_132 -> m2_133  [key=0, style=solid];
m2_132 -> m2_137  [key=2, style=dotted];
m2_132 -> m2_134  [key=1, style=dashed, color=darkseagreen4, label=stream];
m2_134 -> m2_136  [key=0, style=solid];
m2_134 -> m2_139  [key=2, style=dotted];
m2_134 -> m2_140  [key=2, style=dotted];
m2_136 -> m2_13  [key=0, style=bold, color=blue];
m2_39 -> m2_40  [key=0, style=solid];
m2_40 -> m2_41  [key=0, style=solid];
m2_40 -> m2_13  [key=2, style=dotted];
m2_41 -> m2_42  [key=0, style=solid];
m2_41 -> m2_14  [key=2, style=dotted];
m2_42 -> m2_39  [key=0, style=bold, color=blue];
m2_66 -> m2_67  [key=0, style=solid];
m2_67 -> m2_68  [key=0, style=solid];
m2_67 -> m2_57  [key=2, style=dotted];
m2_67 -> m2_70  [key=1, style=dashed, color=darkseagreen4, label=convention];
m2_67 -> m2_74  [key=1, style=dashed, color=darkseagreen4, label=convention];
m2_68 -> m2_69  [key=0, style=solid];
m2_68 -> n94  [key=2, style=dotted];
m2_70 -> m2_71  [key=0, style=solid];
m2_70 -> m2_60  [key=2, style=dotted];
m2_70 -> m2_73  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_69 -> m2_70  [key=0, style=solid];
m2_69 -> m2_59  [key=2, style=dotted];
m2_69 -> m2_74  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_71 -> m2_72  [key=0, style=solid];
m2_71 -> m2_61  [key=2, style=dotted];
m2_72 -> m2_66  [key=0, style=bold, color=blue];
m2_83 -> m2_143  [key=0, style=solid];
m2_83 -> m2_144  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_83 -> m2_145  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_83 -> m2_28  [key=3, color=darkorchid, style=bold, label="Parameter variable string virtualDirectory"];
m2_83 -> m2_13  [key=3, color=darkorchid, style=bold, label="Parameter variable string root"];
m2_83 -> m2_16  [key=3, color=darkorchid, style=bold, label="Parameter variable string requestedFilename"];
m2_83 -> m2_79  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>> headers"];
m2_83 -> m2_88  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>> headers"];
m2_83 -> m2_95  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>> headers"];
m2_83 -> m2_105  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>> headers"];
m2_83 -> m2_148  [key=3, color=darkorchid, style=bold, label="method methodReturn Nancy.Response GetStaticContentResponse"];
m2_143 -> m2_144  [key=0, style=solid];
m2_143 -> m2_151  [key=2, style=dotted];
m2_143 -> m2_146  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_143 -> m2_147  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_143 -> m2_148  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_144 -> m2_145  [key=0, style=solid];
m2_144 -> m2_152  [key=2, style=dotted];
m2_144 -> m2_148  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m2_145 -> m2_146  [key=0, style=solid];
m2_145 -> m2_147  [key=1, style=dashed, color=darkseagreen4, label=rootFolder];
m2_145 -> m2_148  [key=1, style=dashed, color=darkseagreen4, label=rootFolder];
m2_146 -> m2_147  [key=0, style=solid];
m2_146 -> m2_7  [key=2, style=dotted];
m2_147 -> m2_148  [key=0, style=solid];
m2_147 -> m2_8  [key=2, style=dotted];
m2_148 -> m2_149  [key=0, style=solid];
m2_148 -> m2_65  [key=2, style=dotted];
m2_149 -> m2_150  [key=0, style=solid];
m2_150 -> m2_83  [key=0, style=bold, color=blue];
m2_85 -> m2_86  [key=0, style=solid];
m2_86 -> m2_87  [key=0, style=solid];
m2_86 -> m2_83  [key=2, style=dotted];
m2_87 -> m2_88  [key=0, style=solid];
m2_88 -> m2_89  [key=0, style=solid];
m2_88 -> m2_84  [key=2, style=dotted];
m2_89 -> m2_90  [key=0, style=solid];
m2_89 -> m2_83  [key=2, style=dotted];
m2_90 -> m2_91  [key=0, style=solid];
m2_90 -> m2_14  [key=2, style=dotted];
m2_91 -> m2_85  [key=0, style=bold, color=blue];
m2_35 -> m2_36  [key=0, style=solid];
m2_36 -> m2_37  [key=0, style=solid];
m2_36 -> m2_13  [key=2, style=dotted];
m2_37 -> m2_38  [key=0, style=solid];
m2_37 -> m2_14  [key=2, style=dotted];
m2_38 -> m2_35  [key=0, style=bold, color=blue];
m2_50 -> m2_51  [key=0, style=solid];
m2_51 -> m2_52  [key=0, style=solid];
m2_51 -> m2_57  [key=2, style=dotted];
m2_51 -> m2_54  [key=1, style=dashed, color=darkseagreen4, label=convention];
m2_51 -> m2_63  [key=1, style=dashed, color=darkseagreen4, label=convention];
m2_52 -> m2_53  [key=0, style=solid];
m2_52 -> n94  [key=2, style=dotted];
m2_54 -> m2_55  [key=0, style=solid];
m2_54 -> m2_60  [key=2, style=dotted];
m2_54 -> m2_62  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_53 -> m2_54  [key=0, style=solid];
m2_53 -> m2_59  [key=2, style=dotted];
m2_53 -> m2_63  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_55 -> m2_56  [key=0, style=solid];
m2_55 -> m2_61  [key=2, style=dotted];
m2_56 -> m2_50  [key=0, style=bold, color=blue];
m2_112 -> m2_113  [key=0, style=solid];
m2_113 -> m2_114  [key=0, style=solid];
m2_113 -> m2_83  [key=2, style=dotted];
m2_114 -> m2_115  [key=0, style=solid];
m2_115 -> m2_116  [key=0, style=solid];
m2_115 -> m2_84  [key=2, style=dotted];
m2_116 -> m2_117  [key=0, style=solid];
m2_116 -> m2_13  [key=2, style=dotted];
m2_117 -> m2_118  [key=0, style=solid];
m2_117 -> m2_14  [key=2, style=dotted];
m2_118 -> m2_112  [key=0, style=bold, color=blue];
m2_43 -> m2_44  [key=0, style=solid];
m2_44 -> m2_45  [key=0, style=solid];
m2_44 -> m2_49  [key=2, style=dotted];
m2_45 -> m2_46  [key=0, style=solid];
m2_45 -> m2_49  [key=2, style=dotted];
m2_46 -> m2_47  [key=0, style=solid];
m2_46 -> m2_13  [key=2, style=dotted];
m2_47 -> m2_48  [key=0, style=solid];
m2_47 -> m2_14  [key=2, style=dotted];
m2_48 -> m2_43  [key=0, style=bold, color=blue];
m2_9 -> m2_10  [key=0, style=solid];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_13  [key=2, style=dotted];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_14  [key=2, style=dotted];
m2_12 -> m2_9  [key=0, style=bold, color=blue];
m2_119 -> m2_120  [key=0, style=solid];
m2_120 -> m2_121  [key=0, style=solid];
m2_120 -> m2_124  [key=2, style=dotted];
m2_120 -> m2_127  [key=1, style=dashed, color=darkseagreen4, label=fileName];
m2_121 -> m2_122  [key=0, style=solid];
m2_121 -> m2_60  [key=2, style=dotted];
m2_121 -> m2_126  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_122 -> m2_123  [key=0, style=solid];
m2_122 -> m2_125  [key=2, style=dotted];
m2_123 -> m2_119  [key=0, style=bold, color=blue];
m2_6 -> m2_13  [key=3, color=darkorchid, style=bold, label="Local variable string result"];
m2_15 -> m2_16  [key=0, style=solid];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_13  [key=2, style=dotted];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_14  [key=2, style=dotted];
m2_18 -> m2_15  [key=0, style=bold, color=blue];
m2_92 -> m2_93  [key=0, style=solid];
m2_93 -> m2_94  [key=0, style=solid];
m2_93 -> m2_83  [key=2, style=dotted];
m2_94 -> m2_95  [key=0, style=solid];
m2_95 -> m2_96  [key=0, style=solid];
m2_95 -> m2_84  [key=2, style=dotted];
m2_95 -> m2_99  [key=2, style=dotted];
m2_96 -> m2_97  [key=0, style=solid];
m2_96 -> m2_83  [key=2, style=dotted];
m2_97 -> m2_98  [key=0, style=solid];
m2_97 -> m2_14  [key=2, style=dotted];
m2_98 -> m2_92  [key=0, style=bold, color=blue];
m2_19 -> m2_20  [key=0, style=solid];
m2_20 -> m2_21  [key=0, style=solid];
m2_20 -> m2_13  [key=2, style=dotted];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_14  [key=2, style=dotted];
m2_22 -> m2_19  [key=0, style=bold, color=blue];
m2_126 -> m2_127  [key=0, style=solid];
m2_63 -> m2_64  [key=0, style=solid];
m2_63 -> m2_65  [key=2, style=dotted];
m2_62 -> m2_63  [key=0, style=solid];
m2_64 -> m2_62  [key=0, style=bold, color=blue];
m2_74 -> m2_75  [key=0, style=solid];
m2_74 -> m2_65  [key=2, style=dotted];
m2_73 -> m2_74  [key=0, style=solid];
m2_75 -> m2_73  [key=0, style=bold, color=blue];
m2_127 -> m2_128  [key=0, style=solid];
m2_127 -> m2_13  [key=2, style=dotted];
m2_128 -> m2_126  [key=0, style=bold, color=blue];
m2_31 -> m2_32  [key=0, style=solid];
m2_32 -> m2_33  [key=0, style=solid];
m2_32 -> m2_13  [key=2, style=dotted];
m2_33 -> m2_34  [key=0, style=solid];
m2_33 -> m2_14  [key=2, style=dotted];
m2_34 -> m2_31  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid, color=red];
m2_1 -> m2_2  [key=0, style=solid, color=red];
m2_1 -> m2_5  [key=2, style=dotted, color=red];
m2_1 -> m2_6  [key=2, style=dotted, color=red];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_7  [key=2, style=dotted];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_8  [key=2, style=dotted];
m2_4 -> m2_0  [key=0, style=bold, color=blue];
m2_76 -> m2_77  [key=0, style=solid];
m2_77 -> m2_78  [key=0, style=solid];
m2_77 -> m2_83  [key=2, style=dotted];
m2_78 -> m2_79  [key=0, style=solid];
m2_79 -> m2_80  [key=0, style=solid];
m2_79 -> m2_84  [key=2, style=dotted];
m2_80 -> m2_81  [key=0, style=solid];
m2_80 -> m2_83  [key=2, style=dotted];
m2_81 -> m2_82  [key=0, style=solid];
m2_81 -> m2_14  [key=2, style=dotted];
m2_82 -> m2_76  [key=0, style=bold, color=blue];
m2_27 -> m2_28  [key=0, style=solid];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_13  [key=2, style=dotted];
m2_29 -> m2_30  [key=0, style=solid];
m2_29 -> m2_14  [key=2, style=dotted];
m2_30 -> m2_27  [key=0, style=bold, color=blue];
m2_152 -> m2_163  [key=0, style=solid];
m2_152 -> m2_83  [key=3, color=darkorchid, style=bold, label="Parameter variable string virtualDirectory"];
m2_163 -> m2_164  [key=0, style=solid];
m2_163 -> m2_57  [key=2, style=dotted];
m2_164 -> m2_152  [key=0, style=bold, color=blue];
m2_23 -> m2_24  [key=0, style=solid];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_13  [key=2, style=dotted];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_14  [key=2, style=dotted];
m2_26 -> m2_23  [key=0, style=bold, color=blue];
m2_100 -> m2_101  [key=0, style=solid];
m2_101 -> m2_102  [key=0, style=solid];
m2_101 -> m2_83  [key=2, style=dotted];
m2_102 -> m2_103  [key=0, style=solid];
m2_103 -> m2_104  [key=0, style=solid];
m2_103 -> m2_109  [key=2, style=dotted];
m2_103 -> m2_110  [key=2, style=dotted];
m2_104 -> m2_105  [key=0, style=solid];
m2_104 -> m2_111  [key=2, style=dotted];
m2_105 -> m2_106  [key=0, style=solid];
m2_105 -> m2_84  [key=2, style=dotted];
m2_106 -> m2_107  [key=0, style=solid];
m2_106 -> m2_83  [key=2, style=dotted];
m2_107 -> m2_108  [key=0, style=solid];
m2_107 -> m2_14  [key=2, style=dotted];
m2_108 -> m2_100  [key=0, style=bold, color=blue];
m2_151 -> m2_153  [key=0, style=solid];
m2_151 -> m2_154  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>"];
m2_151 -> m2_83  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>> headers"];
m2_151 -> m2_155  [key=3, color=darkorchid, style=bold, label="method methodReturn Nancy.NancyContext GetContext"];
m2_153 -> m2_154  [key=0, style=solid];
m2_153 -> m2_158  [key=2, style=dotted];
m2_154 -> m2_155  [key=0, style=solid];
m2_154 -> m2_159  [key=2, style=dotted];
m2_154 -> m2_160  [key=2, style=dotted];
m2_154 -> m2_84  [key=2, style=dotted];
m2_155 -> m2_156  [key=0, style=solid];
m2_155 -> m2_59  [key=2, style=dotted];
m2_155 -> m2_161  [key=2, style=dotted];
m2_155 -> m2_162  [key=2, style=dotted];
m2_156 -> m2_157  [key=0, style=solid];
m2_157 -> m2_151  [key=0, style=bold, color=blue];
m2_165 -> m2_1  [key=1, style=dashed, color=red, label="Nancy.Tests.Unit.StaticContentConventionBuilderFixture"];
m2_165 -> m2_2  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.StaticContentConventionBuilderFixture"];
m2_165 -> m2_3  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.StaticContentConventionBuilderFixture"];
m2_165 -> m2_10  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.StaticContentConventionBuilderFixture"];
m2_165 -> m2_16  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.StaticContentConventionBuilderFixture"];
m2_165 -> m2_20  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.StaticContentConventionBuilderFixture"];
m2_165 -> m2_24  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.StaticContentConventionBuilderFixture"];
m2_165 -> m2_28  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.StaticContentConventionBuilderFixture"];
m2_165 -> m2_32  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.StaticContentConventionBuilderFixture"];
m2_165 -> m2_36  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.StaticContentConventionBuilderFixture"];
m2_165 -> m2_40  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.StaticContentConventionBuilderFixture"];
m2_165 -> m2_44  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.StaticContentConventionBuilderFixture"];
m2_165 -> m2_46  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.StaticContentConventionBuilderFixture"];
m2_165 -> m2_54  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.StaticContentConventionBuilderFixture"];
m2_165 -> m2_63  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.StaticContentConventionBuilderFixture"];
m2_165 -> m2_70  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.StaticContentConventionBuilderFixture"];
m2_165 -> m2_74  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.StaticContentConventionBuilderFixture"];
m2_165 -> m2_77  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.StaticContentConventionBuilderFixture"];
m2_165 -> m2_80  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.StaticContentConventionBuilderFixture"];
m2_165 -> m2_86  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.StaticContentConventionBuilderFixture"];
m2_165 -> m2_89  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.StaticContentConventionBuilderFixture"];
m2_165 -> m2_93  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.StaticContentConventionBuilderFixture"];
m2_165 -> m2_96  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.StaticContentConventionBuilderFixture"];
m2_165 -> m2_101  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.StaticContentConventionBuilderFixture"];
m2_165 -> m2_106  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.StaticContentConventionBuilderFixture"];
m2_165 -> m2_113  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.StaticContentConventionBuilderFixture"];
m2_165 -> m2_116  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.StaticContentConventionBuilderFixture"];
m2_165 -> m2_121  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.StaticContentConventionBuilderFixture"];
m2_165 -> m2_127  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.StaticContentConventionBuilderFixture"];
m2_165 -> m2_129  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.StaticContentConventionBuilderFixture"];
m2_165 -> m2_143  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.StaticContentConventionBuilderFixture"];
m2_165 -> m2_145  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.StaticContentConventionBuilderFixture"];
m2_165 -> m2_155  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Unit.StaticContentConventionBuilderFixture"];
m2_166 -> m2_63  [key=1, style=dashed, color=darkseagreen4, label=convention];
m2_167 -> m2_63  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_168 -> m2_74  [key=1, style=dashed, color=darkseagreen4, label=convention];
m2_169 -> m2_74  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_170 -> m2_127  [key=1, style=dashed, color=darkseagreen4, label=fileName];
m3_10 -> m3_39  [key=0, style=solid];
m3_10 -> m3_40  [key=1, style=dashed, color=darkseagreen4, label=HttpContextBase];
m3_10 -> m3_41  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Response"];
m3_10 -> m3_42  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Response"];
m3_39 -> m3_40  [key=0, style=solid];
m3_39 -> m3_44  [key=2, style=dotted];
m3_40 -> m3_41  [key=0, style=solid];
m3_40 -> m3_40  [key=1, style=dashed, color=darkseagreen4, label=HttpContextBase];
m3_41 -> m3_42  [key=0, style=solid];
m3_41 -> m3_41  [key=1, style=dashed, color=darkseagreen4, label=HttpContextBase];
m3_42 -> m3_43  [key=0, style=solid];
m3_42 -> m3_45  [key=2, style=dotted];
m3_43 -> m3_10  [key=0, style=bold, color=blue];
m3_8 -> m3_11  [key=0, style=solid];
m3_8 -> m3_12  [key=1, style=dashed, color=darkseagreen4, label=HttpContextBase];
m3_8 -> m3_13  [key=1, style=dashed, color=darkseagreen4, label=HttpContextBase];
m3_11 -> m3_12  [key=0, style=solid];
m3_11 -> m3_15  [key=2, style=dotted];
m3_11 -> m3_16  [key=2, style=dotted];
m3_11 -> m3_13  [key=1, style=dashed, color=darkseagreen4, label=expectedRequestLength];
m3_12 -> m3_13  [key=0, style=solid];
m3_12 -> n418  [key=2, style=dotted];
m3_12 -> m3_18  [key=2, style=dotted];
m3_12 -> m3_19  [key=2, style=dotted];
m3_13 -> m3_14  [key=0, style=solid];
m3_13 -> m3_20  [key=2, style=dotted];
m3_13 -> m3_21  [key=2, style=dotted];
m3_13 -> m3_22  [key=2, style=dotted];
m3_13 -> m3_15  [key=2, style=dotted];
m3_14 -> m3_8  [key=0, style=bold, color=blue];
m3_23 -> m3_24  [key=0, style=solid];
m3_23 -> m3_26  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>"];
m3_23 -> m3_28  [key=1, style=dashed, color=red, label="System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>"];
m3_24 -> m3_25  [key=0, style=solid];
m3_24 -> m3_26  [key=0, style=solid];
m3_26 -> m3_27  [key=0, style=solid];
m3_26 -> m3_28  [key=0, style=solid, color=red];
m3_26 -> m3_36  [key=2, style=dotted];
m3_28 -> m3_29  [key=0, style=solid, color=red];
m3_28 -> m3_37  [key=2, style=dotted, color=red];
m3_28 -> m3_32  [key=1, style=dashed, color=red, label=headerValue];
m3_25 -> m3_35  [key=0, style=solid];
m3_27 -> m3_35  [key=0, style=solid];
m3_29 -> m3_30  [key=0, style=solid];
m3_29 -> m3_31  [key=0, style=solid];
m3_32 -> m3_33  [key=0, style=solid];
m3_32 -> m3_34  [key=0, style=solid];
m3_32 -> m3_38  [key=2, style=dotted];
m3_30 -> m3_35  [key=0, style=solid];
m3_31 -> m3_32  [key=0, style=solid];
m3_33 -> m3_35  [key=0, style=solid];
m3_34 -> m3_35  [key=0, style=solid];
m3_35 -> m3_23  [key=0, style=bold, color=blue];
m3_44 -> m3_46  [key=0, style=solid];
m3_44 -> m3_47  [key=1, style=dashed, color=darkseagreen4, label=HttpContextBase];
m3_44 -> m3_48  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Response"];
m3_44 -> m3_49  [key=1, style=dashed, color=darkseagreen4, label=HttpContextBase];
m3_46 -> m3_47  [key=0, style=solid];
m3_46 -> m3_48  [key=0, style=solid];
m3_47 -> m3_46  [key=0, style=solid];
m3_47 -> m3_51  [key=2, style=dotted];
m3_47 -> m3_47  [key=1, style=dashed, color=darkseagreen4, label=header];
m3_48 -> m3_49  [key=0, style=solid];
m3_48 -> m3_50  [key=0, style=solid];
m3_49 -> m3_48  [key=0, style=solid];
m3_49 -> m3_52  [key=2, style=dotted];
m3_49 -> m3_51  [key=2, style=dotted];
m3_50 -> m3_44  [key=0, style=bold, color=blue];
m3_3 -> m3_4  [key=0, style=solid, color=red];
m3_3 -> m3_6  [key=1, style=dashed, color=darkseagreen4, label=HttpContextBase];
m3_4 -> m3_5  [key=0, style=solid, color=red];
m3_4 -> m3_8  [key=2, style=dotted, color=red];
m3_6 -> m3_7  [key=0, style=solid];
m3_6 -> m3_10  [key=2, style=dotted];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_9  [key=2, style=dotted];
m3_7 -> m3_3  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_2 -> m3_0  [key=0, style=bold, color=blue];
m3_53 -> m3_1  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Hosting.Aspnet.NancyHandler"];
m3_53 -> m3_5  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Hosting.Aspnet.NancyHandler"];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_4  [key=2, style=dotted];
m4_1 -> m4_7  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_5  [key=2, style=dotted];
m4_3 -> m4_0  [key=0, style=bold, color=blue];
m4_10 -> m4_11  [key=0, style=solid];
m4_11 -> m4_12  [key=0, style=solid];
m4_11 -> m4_14  [key=2, style=dotted];
m4_11 -> m4_18  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_12 -> m4_13  [key=0, style=solid];
m4_12 -> m4_15  [key=2, style=dotted];
m4_12 -> m4_16  [key=2, style=dotted];
m4_12 -> m4_17  [key=2, style=dotted];
m4_13 -> m4_10  [key=0, style=bold, color=blue];
m4_18 -> m4_19  [key=0, style=solid];
m4_7 -> m4_8  [key=0, style=solid];
m4_7 -> m4_9  [key=2, style=dotted];
m4_6 -> m4_7  [key=0, style=solid];
m4_8 -> m4_6  [key=0, style=bold, color=blue];
m4_19 -> m4_20  [key=0, style=solid];
m4_19 -> m4_21  [key=2, style=dotted];
m4_20 -> m4_18  [key=0, style=bold, color=blue];
m4_22 -> m4_1  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Functional.Tests.TracingSmokeTests"];
m4_22 -> m4_2  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Functional.Tests.TracingSmokeTests"];
m4_22 -> m4_11  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Functional.Tests.TracingSmokeTests"];
m5_29 -> m5_30  [key=0, style=solid];
m5_30 -> m5_31  [key=0, style=solid];
m5_30 -> m5_14  [key=2, style=dotted];
m5_30 -> m5_36  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_31 -> m5_32  [key=0, style=solid];
m5_31 -> m5_34  [key=2, style=dotted];
m5_32 -> m5_33  [key=0, style=solid];
m5_32 -> m5_35  [key=2, style=dotted];
m5_33 -> m5_29  [key=0, style=bold, color=blue];
m5_10 -> m5_11  [key=0, style=solid];
m5_11 -> m5_12  [key=0, style=solid];
m5_11 -> m5_14  [key=2, style=dotted];
m5_11 -> m5_18  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_12 -> m5_13  [key=0, style=solid];
m5_12 -> m5_15  [key=2, style=dotted];
m5_12 -> m5_16  [key=2, style=dotted];
m5_12 -> m5_17  [key=2, style=dotted];
m5_13 -> m5_10  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_4  [key=2, style=dotted];
m5_1 -> m5_7  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.ConfigurableBootstrapper.ConfigurableBootstrapperConfigurator"];
m5_2 -> m5_3  [key=0, style=solid];
m5_2 -> m5_5  [key=2, style=dotted];
m5_3 -> m5_0  [key=0, style=bold, color=blue];
m5_41 -> m5_42  [key=0, style=solid];
m5_42 -> m5_43  [key=0, style=solid];
m5_42 -> m5_45  [key=2, style=dotted];
m5_43 -> m5_44  [key=0, style=solid];
m5_43 -> m5_35  [key=2, style=dotted];
m5_44 -> m5_41  [key=0, style=bold, color=blue];
m5_22 -> m5_23  [key=0, style=solid];
m5_23 -> m5_24  [key=0, style=solid];
m5_23 -> m5_14  [key=2, style=dotted];
m5_23 -> m5_26  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_24 -> m5_25  [key=0, style=solid];
m5_24 -> m5_15  [key=2, style=dotted];
m5_24 -> m5_16  [key=2, style=dotted];
m5_24 -> m5_17  [key=2, style=dotted];
m5_25 -> m5_22  [key=0, style=bold, color=blue];
m5_36 -> m5_37  [key=0, style=solid];
m5_36 -> m5_38  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Testing.BrowserContext"];
m5_7 -> m5_8  [key=0, style=solid];
m5_7 -> m5_9  [key=2, style=dotted];
m5_6 -> m5_7  [key=0, style=solid];
m5_8 -> m5_6  [key=0, style=bold, color=blue];
m5_18 -> m5_19  [key=0, style=solid];
m5_19 -> m5_20  [key=0, style=solid];
m5_19 -> m5_21  [key=2, style=dotted];
m5_20 -> m5_18  [key=0, style=bold, color=blue];
m5_26 -> m5_27  [key=0, style=solid];
m5_27 -> m5_28  [key=0, style=solid];
m5_27 -> m5_21  [key=2, style=dotted];
m5_28 -> m5_26  [key=0, style=bold, color=blue];
m5_37 -> m5_38  [key=0, style=solid];
m5_37 -> m5_21  [key=2, style=dotted];
m5_38 -> m5_39  [key=0, style=solid];
m5_38 -> m5_40  [key=2, style=dotted];
m5_39 -> m5_36  [key=0, style=bold, color=blue];
m5_46 -> m5_1  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Functional.Tests.ViewBagTests"];
m5_46 -> m5_2  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Functional.Tests.ViewBagTests"];
m5_46 -> m5_11  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Functional.Tests.ViewBagTests"];
m5_46 -> m5_23  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Functional.Tests.ViewBagTests"];
m5_46 -> m5_30  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Functional.Tests.ViewBagTests"];
m5_46 -> m5_42  [key=1, style=dashed, color=darkseagreen4, label="Nancy.Tests.Functional.Tests.ViewBagTests"];
}
