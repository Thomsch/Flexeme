digraph  {
d44 [label="return this.dictionary.GetEnumerator();", span="162-162", cluster="Nancy.DynamicDictionary.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, object>>.GetEnumerator()", color=green, community=0];
d94 [label="Nancy.DynamicDictionary", span=""];
d43 [label="Entry Nancy.DynamicDictionary.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, object>>.GetEnumerator()", span="160-160", cluster="Nancy.DynamicDictionary.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, object>>.GetEnumerator()"];
d45 [label="Exit Nancy.DynamicDictionary.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, object>>.GetEnumerator()", span="160-160", cluster="Nancy.DynamicDictionary.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, object>>.GetEnumerator()"];
d24 [label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0", cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()"];
d68 [label="var dynamicValueKeyValuePair =\r\n                GetDynamicKeyValuePair(item)", span="249-250", cluster="Nancy.DynamicDictionary.Contains(System.Collections.Generic.KeyValuePair<string, dynamic>)", color=green, community=0];
d67 [label="Entry Nancy.DynamicDictionary.Contains(System.Collections.Generic.KeyValuePair<string, dynamic>)", span="247-247", cluster="Nancy.DynamicDictionary.Contains(System.Collections.Generic.KeyValuePair<string, dynamic>)"];
d69 [label="return this.dictionary.Contains(dynamicValueKeyValuePair);", span="252-252", cluster="Nancy.DynamicDictionary.Contains(System.Collections.Generic.KeyValuePair<string, dynamic>)"];
d71 [label="Entry Nancy.DynamicDictionary.GetDynamicKeyValuePair(System.Collections.Generic.KeyValuePair<string, dynamic>)", span="306-306", cluster="Nancy.DynamicDictionary.GetDynamicKeyValuePair(System.Collections.Generic.KeyValuePair<string, dynamic>)"];
d82 [label="var dynamicValueKeyValuePair = \r\n                GetDynamicKeyValuePair(item)", span="291-292", cluster="Nancy.DynamicDictionary.Remove(System.Collections.Generic.KeyValuePair<string, dynamic>)", color=green, community=0];
d81 [label="Entry Nancy.DynamicDictionary.Remove(System.Collections.Generic.KeyValuePair<string, dynamic>)", span="289-289", cluster="Nancy.DynamicDictionary.Remove(System.Collections.Generic.KeyValuePair<string, dynamic>)"];
d83 [label="return this.dictionary.Remove(dynamicValueKeyValuePair);", span="294-294", cluster="Nancy.DynamicDictionary.Remove(System.Collections.Generic.KeyValuePair<string, dynamic>)"];
d86 [label="var dynamicValueKeyValuePair =\r\n                new KeyValuePair<string, dynamic>(item.Key, new DynamicDictionaryValue(item.Value))", span="308-309", cluster="Nancy.DynamicDictionary.GetDynamicKeyValuePair(System.Collections.Generic.KeyValuePair<string, dynamic>)", color=green, community=0];
d87 [label="return dynamicValueKeyValuePair;", span="310-310", cluster="Nancy.DynamicDictionary.GetDynamicKeyValuePair(System.Collections.Generic.KeyValuePair<string, dynamic>)", color=green, community=0];
d89 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)"];
d17 [label="Entry Nancy.DynamicDictionaryValue.DynamicDictionaryValue(object)", span="15-15", cluster="Nancy.DynamicDictionaryValue.DynamicDictionaryValue(object)"];
d88 [label="Exit Nancy.DynamicDictionary.GetDynamicKeyValuePair(System.Collections.Generic.KeyValuePair<string, dynamic>)", span="306-306", cluster="Nancy.DynamicDictionary.GetDynamicKeyValuePair(System.Collections.Generic.KeyValuePair<string, dynamic>)"];
d8 [label="this[binder.Name] = value", span="48-48", cluster="Nancy.DynamicDictionary.TrySetMember(System.Dynamic.SetMemberBinder, object)"];
d12 [label="!dictionary.TryGetValue(binder.Name, out result)", span="59-59", cluster="Nancy.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder, out object)"];
d19 [label="return dictionary.Keys;", span="74-74", cluster="Nancy.DynamicDictionary.GetDynamicMemberNames()"];
d22 [label="return dictionary.Keys.GetEnumerator();", span="83-83", cluster="Nancy.DynamicDictionary.GetEnumerator()"];
d26 [label="return dictionary.Keys.GetEnumerator();", span="92-92", cluster="Nancy.DynamicDictionary.System.Collections.IEnumerable.GetEnumerator()"];
d31 [label="return ReferenceEquals(this, other) || Equals(other.dictionary, this.dictionary);", span="133-133", cluster="Nancy.DynamicDictionary.Equals(Nancy.DynamicDictionary)"];
d38 [label="ReferenceEquals(this, obj)", span="148-148", cluster="Nancy.DynamicDictionary.Equals(object)"];
d40 [label="return obj.GetType() == typeof (DynamicDictionary) && this.Equals((DynamicDictionary) obj);", span="153-153", cluster="Nancy.DynamicDictionary.Equals(object)"];
d47 [label="return (dictionary != null ? dictionary.GetHashCode() : 0);", span="171-171", cluster="Nancy.DynamicDictionary.GetHashCode()"];
d51 [label="this[key] = value", span="181-181", cluster="Nancy.DynamicDictionary.Add(string, dynamic)"];
d54 [label="this[item.Key] = item.Value", span="190-190", cluster="Nancy.DynamicDictionary.Add(System.Collections.Generic.KeyValuePair<string, dynamic>)"];
d57 [label="return this.dictionary.ContainsKey(key);", span="201-201", cluster="Nancy.DynamicDictionary.ContainsKey(string)"];
d61 [label="return this.dictionary.TryGetValue(key, out value);", span="221-221", cluster="Nancy.DynamicDictionary.TryGetValue(string, out dynamic)"];
d64 [label="this.dictionary.Clear()", span="229-229", cluster="Nancy.DynamicDictionary.Clear()"];
d74 [label="this.dictionary.CopyTo(array, arrayIndex)", span="262-262", cluster="Nancy.DynamicDictionary.CopyTo(System.Collections.Generic.KeyValuePair<string, dynamic>[], int)"];
d78 [label="return this.dictionary.Remove(key);", span="281-281", cluster="Nancy.DynamicDictionary.Remove(string)"];
d70 [label="Exit Nancy.DynamicDictionary.Contains(System.Collections.Generic.KeyValuePair<string, dynamic>)", span="247-247", cluster="Nancy.DynamicDictionary.Contains(System.Collections.Generic.KeyValuePair<string, dynamic>)"];
d72 [label="Entry System.Collections.Generic.ICollection<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Contains(T)"];
d84 [label="Exit Nancy.DynamicDictionary.Remove(System.Collections.Generic.KeyValuePair<string, dynamic>)", span="289-289", cluster="Nancy.DynamicDictionary.Remove(System.Collections.Generic.KeyValuePair<string, dynamic>)"];
d85 [label="Entry System.Collections.Generic.ICollection<T>.Remove(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Remove(T)"];
d13 [label="result = new DynamicDictionaryValue(null)", span="61-61", cluster="Nancy.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder, out object)"];
d7 [label="Entry Nancy.DynamicDictionary.TrySetMember(System.Dynamic.SetMemberBinder, object)", span="46-46", cluster="Nancy.DynamicDictionary.TrySetMember(System.Dynamic.SetMemberBinder, object)"];
d9 [label="return true;", span="49-49", cluster="Nancy.DynamicDictionary.TrySetMember(System.Dynamic.SetMemberBinder, object)"];
d11 [label="Entry Nancy.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder, out object)", span="57-57", cluster="Nancy.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder, out object)"];
d14 [label="return true;", span="64-64", cluster="Nancy.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder, out object)"];
d16 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)"];
d15 [label="Exit Nancy.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder, out object)", span="57-57", cluster="Nancy.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder, out object)"];
d18 [label="Entry Nancy.DynamicDictionary.GetDynamicMemberNames()", span="72-72", cluster="Nancy.DynamicDictionary.GetDynamicMemberNames()"];
d20 [label="Exit Nancy.DynamicDictionary.GetDynamicMemberNames()", span="72-72", cluster="Nancy.DynamicDictionary.GetDynamicMemberNames()"];
d21 [label="Entry Nancy.DynamicDictionary.GetEnumerator()", span="81-81", cluster="Nancy.DynamicDictionary.GetEnumerator()"];
d23 [label="Exit Nancy.DynamicDictionary.GetEnumerator()", span="81-81", cluster="Nancy.DynamicDictionary.GetEnumerator()"];
d25 [label="Entry Nancy.DynamicDictionary.System.Collections.IEnumerable.GetEnumerator()", span="90-90", cluster="Nancy.DynamicDictionary.System.Collections.IEnumerable.GetEnumerator()"];
d27 [label="Exit Nancy.DynamicDictionary.System.Collections.IEnumerable.GetEnumerator()", span="90-90", cluster="Nancy.DynamicDictionary.System.Collections.IEnumerable.GetEnumerator()"];
d28 [label="Entry Nancy.DynamicDictionary.Equals(Nancy.DynamicDictionary)", span="126-126", cluster="Nancy.DynamicDictionary.Equals(Nancy.DynamicDictionary)"];
d29 [label="ReferenceEquals(null, other)", span="128-128", cluster="Nancy.DynamicDictionary.Equals(Nancy.DynamicDictionary)"];
d32 [label="Exit Nancy.DynamicDictionary.Equals(Nancy.DynamicDictionary)", span="126-126", cluster="Nancy.DynamicDictionary.Equals(Nancy.DynamicDictionary)"];
d33 [label="Entry object.ReferenceEquals(object, object)", span="0-0", cluster="object.ReferenceEquals(object, object)"];
d34 [label="Entry object.Equals(object, object)", span="0-0", cluster="object.Equals(object, object)"];
d35 [label="Entry Nancy.DynamicDictionary.Equals(object)", span="141-141", cluster="Nancy.DynamicDictionary.Equals(object)"];
d36 [label="ReferenceEquals(null, obj)", span="143-143", cluster="Nancy.DynamicDictionary.Equals(object)"];
d39 [label="return true;", span="150-150", cluster="Nancy.DynamicDictionary.Equals(object)"];
d41 [label="Exit Nancy.DynamicDictionary.Equals(object)", span="141-141", cluster="Nancy.DynamicDictionary.Equals(object)"];
d42 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()"];
d46 [label="Entry Nancy.DynamicDictionary.GetHashCode()", span="169-169", cluster="Nancy.DynamicDictionary.GetHashCode()"];
d48 [label="Exit Nancy.DynamicDictionary.GetHashCode()", span="169-169", cluster="Nancy.DynamicDictionary.GetHashCode()"];
d49 [label="Entry object.GetHashCode()", span="0-0", cluster="object.GetHashCode()"];
d50 [label="Entry Nancy.DynamicDictionary.Add(string, dynamic)", span="179-179", cluster="Nancy.DynamicDictionary.Add(string, dynamic)"];
d52 [label="Exit Nancy.DynamicDictionary.Add(string, dynamic)", span="179-179", cluster="Nancy.DynamicDictionary.Add(string, dynamic)"];
d53 [label="Entry Nancy.DynamicDictionary.Add(System.Collections.Generic.KeyValuePair<string, dynamic>)", span="188-188", cluster="Nancy.DynamicDictionary.Add(System.Collections.Generic.KeyValuePair<string, dynamic>)"];
d55 [label="Exit Nancy.DynamicDictionary.Add(System.Collections.Generic.KeyValuePair<string, dynamic>)", span="188-188", cluster="Nancy.DynamicDictionary.Add(System.Collections.Generic.KeyValuePair<string, dynamic>)"];
d56 [label="Entry Nancy.DynamicDictionary.ContainsKey(string)", span="199-199", cluster="Nancy.DynamicDictionary.ContainsKey(string)"];
d58 [label="Exit Nancy.DynamicDictionary.ContainsKey(string)", span="199-199", cluster="Nancy.DynamicDictionary.ContainsKey(string)"];
d59 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)"];
d60 [label="Entry Nancy.DynamicDictionary.TryGetValue(string, out dynamic)", span="219-219", cluster="Nancy.DynamicDictionary.TryGetValue(string, out dynamic)"];
d62 [label="Exit Nancy.DynamicDictionary.TryGetValue(string, out dynamic)", span="219-219", cluster="Nancy.DynamicDictionary.TryGetValue(string, out dynamic)"];
d63 [label="Entry Nancy.DynamicDictionary.Clear()", span="227-227", cluster="Nancy.DynamicDictionary.Clear()"];
d65 [label="Exit Nancy.DynamicDictionary.Clear()", span="227-227", cluster="Nancy.DynamicDictionary.Clear()"];
d66 [label="Entry System.Collections.Generic.ICollection<T>.Clear()", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Clear()"];
d73 [label="Entry Nancy.DynamicDictionary.CopyTo(System.Collections.Generic.KeyValuePair<string, dynamic>[], int)", span="260-260", cluster="Nancy.DynamicDictionary.CopyTo(System.Collections.Generic.KeyValuePair<string, dynamic>[], int)"];
d75 [label="Exit Nancy.DynamicDictionary.CopyTo(System.Collections.Generic.KeyValuePair<string, dynamic>[], int)", span="260-260", cluster="Nancy.DynamicDictionary.CopyTo(System.Collections.Generic.KeyValuePair<string, dynamic>[], int)"];
d76 [label="Entry System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.CopyTo(T[], int)"];
d77 [label="Entry Nancy.DynamicDictionary.Remove(string)", span="279-279", cluster="Nancy.DynamicDictionary.Remove(string)"];
d79 [label="Exit Nancy.DynamicDictionary.Remove(string)", span="279-279", cluster="Nancy.DynamicDictionary.Remove(string)"];
d80 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Remove(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Remove(TKey)"];
d10 [label="Exit Nancy.DynamicDictionary.TrySetMember(System.Dynamic.SetMemberBinder, object)", span="46-46", cluster="Nancy.DynamicDictionary.TrySetMember(System.Dynamic.SetMemberBinder, object)"];
d30 [label="return false;", span="130-130", cluster="Nancy.DynamicDictionary.Equals(Nancy.DynamicDictionary)"];
d37 [label="return false;", span="145-145", cluster="Nancy.DynamicDictionary.Equals(object)"];
m0_29 [label="Entry Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_null_method()", span="60-60", cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_null_method()", file="DynamicDictionaryFixture.cs"];
m0_30 [label="var exception =\r\n                Record.Exception(() => new Request(null, ''/'', ''http''))", span="63-64", cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_null_method()", file="DynamicDictionaryFixture.cs"];
m0_31 [label="exception.ShouldBeOfType<ArgumentOutOfRangeException>()", span="67-67", cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_null_method()", file="DynamicDictionaryFixture.cs"];
m0_32 [label="Exit Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_null_method()", span="60-60", cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_null_method()", file="DynamicDictionaryFixture.cs"];
m0_38 [label="Entry Nancy.Request.Request(string, string, string)", span="27-27", cluster="Nancy.Request.Request(string, string, string)", file="DynamicDictionaryFixture.cs"];
m0_46 [label="Entry Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_null_uri()", span="82-82", cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_null_uri()", file="DynamicDictionaryFixture.cs"];
m0_47 [label="var exception =\r\n                Record.Exception(() => new Request(''GET'', null, ''http''))", span="85-86", cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_null_uri()", file="DynamicDictionaryFixture.cs"];
m0_48 [label="exception.ShouldBeOfType<ArgumentOutOfRangeException>()", span="89-89", cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_null_uri()", file="DynamicDictionaryFixture.cs"];
m0_49 [label="Exit Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_null_uri()", span="82-82", cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_null_uri()", file="DynamicDictionaryFixture.cs"];
m0_60 [label="Entry Nancy.Tests.Unit.RequestFixture.Should_set_method_parameter_value_to_method_property_when_initialized()", span="104-104", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_method_parameter_value_to_method_property_when_initialized()", file="DynamicDictionaryFixture.cs"];
m0_61 [label="string method = ''GET''", span="107-107", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_method_parameter_value_to_method_property_when_initialized()", file="DynamicDictionaryFixture.cs"];
m0_62 [label="var request = new Request(method, ''/'', ''http'')", span="110-110", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_method_parameter_value_to_method_property_when_initialized()", file="DynamicDictionaryFixture.cs"];
m0_63 [label="request.Method.ShouldEqual(method)", span="113-113", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_method_parameter_value_to_method_property_when_initialized()", file="DynamicDictionaryFixture.cs"];
m0_64 [label="Exit Nancy.Tests.Unit.RequestFixture.Should_set_method_parameter_value_to_method_property_when_initialized()", span="104-104", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_method_parameter_value_to_method_property_when_initialized()", file="DynamicDictionaryFixture.cs"];
m0_130 [label="Entry Nancy.Tests.Unit.RequestFixture.Should_set_name_on_file_extracted_from_multipart_form_data_body()", span="278-278", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_name_on_file_extracted_from_multipart_form_data_body()", file="DynamicDictionaryFixture.cs"];
m0_131 [label="var memory =\r\n                new MemoryStream(BuildMultipartFileValues(new Dictionary<string, Tuple<string, string>>\r\n                {\r\n                    { ''sample.txt'', new Tuple<string, string>(''content/type'', ''some test content'')}\r\n                }))", span="281-285", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_name_on_file_extracted_from_multipart_form_data_body()", file="DynamicDictionaryFixture.cs"];
m0_132 [label="var headers =\r\n                new Dictionary<string, IEnumerable<string>>\r\n                {\r\n                    { ''content-type'', new[] { ''multipart/form-data; boundary=----NancyFormBoundary'' } }\r\n                }", span="287-291", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_name_on_file_extracted_from_multipart_form_data_body()", file="DynamicDictionaryFixture.cs"];
m0_133 [label="var request = new Request(''POST'', ''/'', headers, CreateRequestStream(memory), ''http'')", span="294-294", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_name_on_file_extracted_from_multipart_form_data_body()", file="DynamicDictionaryFixture.cs"];
m0_134 [label="request.Files.First().Name.ShouldEqual(''sample.txt'')", span="297-297", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_name_on_file_extracted_from_multipart_form_data_body()", file="DynamicDictionaryFixture.cs"];
m0_135 [label="Exit Nancy.Tests.Unit.RequestFixture.Should_set_name_on_file_extracted_from_multipart_form_data_body()", span="278-278", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_name_on_file_extracted_from_multipart_form_data_body()", file="DynamicDictionaryFixture.cs"];
m0_208 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)", file="DynamicDictionaryFixture.cs"];
m0_16 [label="Entry Nancy.Request.Request(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, Nancy.IO.RequestStream, string, string)", span="41-41", cluster="Nancy.Request.Request(string, string, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IEnumerable<string>>, Nancy.IO.RequestStream, string, string)", file="DynamicDictionaryFixture.cs"];
m0_114 [label="Entry Nancy.Tests.Unit.RequestFixture.Should_set_extracted_files_to_files_collection_when_body_content_type_is_multipart_form_data()", span="232-232", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extracted_files_to_files_collection_when_body_content_type_is_multipart_form_data()", file="DynamicDictionaryFixture.cs"];
m0_115 [label="var memory =\r\n                new MemoryStream(BuildMultipartFileValues(new Dictionary<string, Tuple<string, string>>\r\n                {\r\n                    { ''test'', new Tuple<string, string>(''content/type'', ''some test content'')}\r\n                }))", span="235-239", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extracted_files_to_files_collection_when_body_content_type_is_multipart_form_data()", file="DynamicDictionaryFixture.cs"];
m0_116 [label="var headers =\r\n                new Dictionary<string, IEnumerable<string>>\r\n                {\r\n                    { ''content-type'', new[] { ''multipart/form-data; boundary=----NancyFormBoundary'' } }\r\n                }", span="241-245", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extracted_files_to_files_collection_when_body_content_type_is_multipart_form_data()", file="DynamicDictionaryFixture.cs"];
m0_117 [label="var request = new Request(''POST'', ''/'', headers, CreateRequestStream(memory), ''http'')", span="248-248", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extracted_files_to_files_collection_when_body_content_type_is_multipart_form_data()", file="DynamicDictionaryFixture.cs"];
m0_118 [label="request.Files.ShouldHaveCount(1)", span="251-251", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extracted_files_to_files_collection_when_body_content_type_is_multipart_form_data()", file="DynamicDictionaryFixture.cs"];
m0_119 [label="Exit Nancy.Tests.Unit.RequestFixture.Should_set_extracted_files_to_files_collection_when_body_content_type_is_multipart_form_data()", span="232-232", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extracted_files_to_files_collection_when_body_content_type_is_multipart_form_data()", file="DynamicDictionaryFixture.cs"];
m0_81 [label="Entry object.ShouldBeSameAs(object)", span="115-115", cluster="object.ShouldBeSameAs(object)", file="DynamicDictionaryFixture.cs"];
m0_104 [label="Entry Nancy.Tests.Unit.RequestFixture.Should_set_extracted_form_data_from_body_when_content_type_is_multipart_form_data()", span="207-207", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extracted_form_data_from_body_when_content_type_is_multipart_form_data()", file="DynamicDictionaryFixture.cs"];
m0_105 [label="var memory =\r\n                new MemoryStream(BuildMultipartFormValues(new Dictionary<string, string>\r\n                {\r\n                    { ''name'', ''John Doe''},\r\n                    { ''age'', ''42''}\r\n                }))", span="210-215", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extracted_form_data_from_body_when_content_type_is_multipart_form_data()", file="DynamicDictionaryFixture.cs"];
m0_106 [label="var headers =\r\n                new Dictionary<string, IEnumerable<string>>\r\n                {\r\n                    { ''content-type'', new[] { ''multipart/form-data; boundary=----NancyFormBoundary'' } }\r\n                }", span="217-221", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extracted_form_data_from_body_when_content_type_is_multipart_form_data()", file="DynamicDictionaryFixture.cs"];
m0_107 [label="var request = new Request(''POST'', ''/'', headers, CreateRequestStream(memory), ''http'')", span="224-224", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extracted_form_data_from_body_when_content_type_is_multipart_form_data()", file="DynamicDictionaryFixture.cs"];
m0_108 [label="((string)request.Form.name).ShouldEqual(''John Doe'')", span="227-227", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extracted_form_data_from_body_when_content_type_is_multipart_form_data()", file="DynamicDictionaryFixture.cs"];
m0_109 [label="((string)request.Form.age).ShouldEqual(''42'')", span="228-228", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extracted_form_data_from_body_when_content_type_is_multipart_form_data()", file="DynamicDictionaryFixture.cs"];
m0_110 [label="Exit Nancy.Tests.Unit.RequestFixture.Should_set_extracted_form_data_from_body_when_content_type_is_multipart_form_data()", span="207-207", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extracted_form_data_from_body_when_content_type_is_multipart_form_data()", file="DynamicDictionaryFixture.cs"];
m0_111 [label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0", cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="DynamicDictionaryFixture.cs"];
m0_121 [label="Entry Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", span="427-427", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="DynamicDictionaryFixture.cs"];
m0_212 [label="var boundaryBuilder = new StringBuilder()", span="429-429", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="DynamicDictionaryFixture.cs"];
m0_213 [label="formValues.Keys", span="431-431", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="DynamicDictionaryFixture.cs"];
m0_223 [label="boundaryBuilder.AppendFormat(''Content-Type: {0}'', formValues[key].Item1)", span="442-442", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="DynamicDictionaryFixture.cs"];
m0_228 [label="boundaryBuilder.Append(formValues[key].Item2)", span="447-447", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="DynamicDictionaryFixture.cs"];
m0_214 [label="boundaryBuilder.Append('\r')", span="433-433", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="DynamicDictionaryFixture.cs"];
m0_215 [label="boundaryBuilder.Append('\n')", span="434-434", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="DynamicDictionaryFixture.cs"];
m0_216 [label="boundaryBuilder.Append(''--'')", span="435-435", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="DynamicDictionaryFixture.cs"];
m0_217 [label="boundaryBuilder.Append(''----NancyFormBoundary'')", span="436-436", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="DynamicDictionaryFixture.cs"];
m0_218 [label="boundaryBuilder.Append('\r')", span="437-437", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="DynamicDictionaryFixture.cs"];
m0_219 [label="boundaryBuilder.Append('\n')", span="438-438", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="DynamicDictionaryFixture.cs"];
m0_220 [label="boundaryBuilder.AppendFormat(''Content-Disposition: form-data; name=\''whatever\''; filename=\''{0}\'''', key)", span="439-439", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="DynamicDictionaryFixture.cs"];
m0_221 [label="boundaryBuilder.Append('\r')", span="440-440", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="DynamicDictionaryFixture.cs"];
m0_222 [label="boundaryBuilder.Append('\n')", span="441-441", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="DynamicDictionaryFixture.cs"];
m0_224 [label="boundaryBuilder.Append('\r')", span="443-443", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="DynamicDictionaryFixture.cs"];
m0_225 [label="boundaryBuilder.Append('\n')", span="444-444", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="DynamicDictionaryFixture.cs"];
m0_226 [label="boundaryBuilder.Append('\r')", span="445-445", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="DynamicDictionaryFixture.cs"];
m0_227 [label="boundaryBuilder.Append('\n')", span="446-446", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="DynamicDictionaryFixture.cs"];
m0_229 [label="boundaryBuilder.Append('\r')", span="450-450", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="DynamicDictionaryFixture.cs"];
m0_230 [label="boundaryBuilder.Append('\n')", span="451-451", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="DynamicDictionaryFixture.cs"];
m0_231 [label="boundaryBuilder.Append(''------NancyFormBoundary--'')", span="452-452", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="DynamicDictionaryFixture.cs"];
m0_232 [label="var bytes =\r\n                Encoding.ASCII.GetBytes(boundaryBuilder.ToString())", span="454-455", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="DynamicDictionaryFixture.cs"];
m0_233 [label="return bytes;", span="457-457", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="DynamicDictionaryFixture.cs"];
m0_234 [label="Exit Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", span="427-427", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFileValues(System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>)", file="DynamicDictionaryFixture.cs"];
m0_17 [label="Entry object.ShouldEqual(object)", span="80-80", cluster="object.ShouldEqual(object)", file="DynamicDictionaryFixture.cs"];
m0_34 [label="Entry Unk.>", span="", cluster="Unk.>", file="DynamicDictionaryFixture.cs"];
m0_162 [label="Entry Nancy.Tests.Unit.RequestFixture.Should_throw_argumentnullexception_when_initialized_with_null_protocol()", span="353-353", cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentnullexception_when_initialized_with_null_protocol()", file="DynamicDictionaryFixture.cs"];
m0_163 [label="var exception =\r\n                Record.Exception(() => new Request(''GET'', ''/'', null))", span="356-357", cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentnullexception_when_initialized_with_null_protocol()", file="DynamicDictionaryFixture.cs"];
m0_164 [label="exception.ShouldBeOfType<ArgumentNullException>()", span="360-360", cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentnullexception_when_initialized_with_null_protocol()", file="DynamicDictionaryFixture.cs"];
m0_165 [label="Exit Nancy.Tests.Unit.RequestFixture.Should_throw_argumentnullexception_when_initialized_with_null_protocol()", span="353-353", cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentnullexception_when_initialized_with_null_protocol()", file="DynamicDictionaryFixture.cs"];
m0_206 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()", file="DynamicDictionaryFixture.cs"];
m0_11 [label="Entry Nancy.Tests.Unit.RequestFixture.CreateRequestStream()", span="387-387", cluster="Nancy.Tests.Unit.RequestFixture.CreateRequestStream()", file="DynamicDictionaryFixture.cs"];
m0_181 [label="return CreateRequestStream(new MemoryStream());", span="389-389", cluster="Nancy.Tests.Unit.RequestFixture.CreateRequestStream()", file="DynamicDictionaryFixture.cs"];
m0_182 [label="Exit Nancy.Tests.Unit.RequestFixture.CreateRequestStream()", span="387-387", cluster="Nancy.Tests.Unit.RequestFixture.CreateRequestStream()", file="DynamicDictionaryFixture.cs"];
m0_122 [label="Entry System.Collections.Generic.IEnumerable<T>.ShouldHaveCount<T>(int)", span="65-65", cluster="System.Collections.Generic.IEnumerable<T>.ShouldHaveCount<T>(int)", file="DynamicDictionaryFixture.cs"];
m0_142 [label="Entry Nancy.Tests.Unit.RequestFixture.GetStringValue(System.IO.Stream)", span="323-323", cluster="Nancy.Tests.Unit.RequestFixture.GetStringValue(System.IO.Stream)", file="DynamicDictionaryFixture.cs"];
m0_143 [label="var reader = new StreamReader(stream)", span="325-325", cluster="Nancy.Tests.Unit.RequestFixture.GetStringValue(System.IO.Stream)", file="DynamicDictionaryFixture.cs"];
m0_144 [label="return reader.ReadToEnd();", span="326-326", cluster="Nancy.Tests.Unit.RequestFixture.GetStringValue(System.IO.Stream)", file="DynamicDictionaryFixture.cs"];
m0_145 [label="Exit Nancy.Tests.Unit.RequestFixture.GetStringValue(System.IO.Stream)", span="323-323", cluster="Nancy.Tests.Unit.RequestFixture.GetStringValue(System.IO.Stream)", file="DynamicDictionaryFixture.cs"];
m0_210 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="DynamicDictionaryFixture.cs"];
m0_93 [label="Entry Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded_with_character_set()", span="183-183", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded_with_character_set()", file="DynamicDictionaryFixture.cs"];
m0_94 [label="string bodyContent = ''name=John+Doe&gender=male&family=5&city=kent&city=miami&other=abc%0D%0Adef&nickname=J%26D''", span="186-186", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded_with_character_set()", file="DynamicDictionaryFixture.cs"];
m0_95 [label="var memory = CreateRequestStream()", span="187-187", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded_with_character_set()", file="DynamicDictionaryFixture.cs"];
m0_97 [label="writer.Write(bodyContent)", span="189-189", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded_with_character_set()", file="DynamicDictionaryFixture.cs"];
m0_96 [label="var writer = new StreamWriter(memory)", span="188-188", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded_with_character_set()", file="DynamicDictionaryFixture.cs"];
m0_99 [label="memory.Position = 0", span="191-191", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded_with_character_set()", file="DynamicDictionaryFixture.cs"];
m0_101 [label="var request = new Request(''POST'', ''/'', headers, memory, ''http'')", span="200-200", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded_with_character_set()", file="DynamicDictionaryFixture.cs"];
m0_98 [label="writer.Flush()", span="190-190", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded_with_character_set()", file="DynamicDictionaryFixture.cs"];
m0_100 [label="var headers =\r\n                new Dictionary<string, IEnumerable<string>>\r\n                {\r\n                    { ''content-type'', new[] { ''application/x-www-form-urlencoded; charset=UTF-8'' } }\r\n                }", span="193-197", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded_with_character_set()", file="DynamicDictionaryFixture.cs"];
m0_102 [label="((string)request.Form.name).ShouldEqual(''John Doe'')", span="203-203", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded_with_character_set()", file="DynamicDictionaryFixture.cs"];
m0_103 [label="Exit Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded_with_character_set()", span="183-183", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded_with_character_set()", file="DynamicDictionaryFixture.cs"];
m0_76 [label="Entry Nancy.Tests.Unit.RequestFixture.Should_set_body_parameter_value_to_body_property_when_initialized()", span="146-146", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_body_parameter_value_to_body_property_when_initialized()", file="DynamicDictionaryFixture.cs"];
m0_77 [label="var body = CreateRequestStream()", span="149-149", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_body_parameter_value_to_body_property_when_initialized()", file="DynamicDictionaryFixture.cs"];
m0_78 [label="var request = new Request(''GET'', ''/'', new Dictionary<string, IEnumerable<string>>(), body, ''http'')", span="152-152", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_body_parameter_value_to_body_property_when_initialized()", file="DynamicDictionaryFixture.cs"];
m0_79 [label="request.Body.ShouldBeSameAs(body)", span="155-155", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_body_parameter_value_to_body_property_when_initialized()", file="DynamicDictionaryFixture.cs"];
m0_80 [label="Exit Nancy.Tests.Unit.RequestFixture.Should_set_body_parameter_value_to_body_property_when_initialized()", span="146-146", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_body_parameter_value_to_body_property_when_initialized()", file="DynamicDictionaryFixture.cs"];
m0_209 [label="Entry System.Text.StringBuilder.AppendFormat(string, object)", span="0-0", cluster="System.Text.StringBuilder.AppendFormat(string, object)", file="DynamicDictionaryFixture.cs"];
m0_161 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="DynamicDictionaryFixture.cs"];
m0_12 [label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0", cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", file="DynamicDictionaryFixture.cs"];
m0_70 [label="Entry Nancy.Tests.Unit.RequestFixture.Should_set_header_parameter_value_to_header_property_when_initialized()", span="130-130", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_header_parameter_value_to_header_property_when_initialized()", file="DynamicDictionaryFixture.cs"];
m0_71 [label="var headers = new Dictionary<string, IEnumerable<string>>()\r\n                {\r\n                    { ''content-type'', new[] {''foo''} }\r\n                }", span="133-136", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_header_parameter_value_to_header_property_when_initialized()", file="DynamicDictionaryFixture.cs"];
m0_72 [label="var request = new Request(''GET'', ''/'', headers, CreateRequestStream(), ''http'')", span="139-139", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_header_parameter_value_to_header_property_when_initialized()", file="DynamicDictionaryFixture.cs"];
m0_73 [label="request.Headers.ContentType.ShouldNotBeEmpty()", span="142-142", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_header_parameter_value_to_header_property_when_initialized()", file="DynamicDictionaryFixture.cs"];
m0_74 [label="Exit Nancy.Tests.Unit.RequestFixture.Should_set_header_parameter_value_to_header_property_when_initialized()", span="130-130", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_header_parameter_value_to_header_property_when_initialized()", file="DynamicDictionaryFixture.cs"];
m0_176 [label="Entry Nancy.Tests.Unit.RequestFixture.Should_set_protocol_parameter_value_to_protocol_property_when_initialized()", span="375-375", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_protocol_parameter_value_to_protocol_property_when_initialized()", file="DynamicDictionaryFixture.cs"];
m0_177 [label="string protocol = ''http''", span="378-378", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_protocol_parameter_value_to_protocol_property_when_initialized()", file="DynamicDictionaryFixture.cs"];
m0_178 [label="var request = new Request(''GET'', ''/'', protocol)", span="381-381", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_protocol_parameter_value_to_protocol_property_when_initialized()", file="DynamicDictionaryFixture.cs"];
m0_179 [label="request.Url.Scheme.ShouldEqual(protocol)", span="384-384", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_protocol_parameter_value_to_protocol_property_when_initialized()", file="DynamicDictionaryFixture.cs"];
m0_180 [label="Exit Nancy.Tests.Unit.RequestFixture.Should_set_protocol_parameter_value_to_protocol_property_when_initialized()", span="375-375", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_protocol_parameter_value_to_protocol_property_when_initialized()", file="DynamicDictionaryFixture.cs"];
m0_15 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="DynamicDictionaryFixture.cs"];
m0_169 [label="Entry Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_an_empty_protocol()", span="364-364", cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_an_empty_protocol()", file="DynamicDictionaryFixture.cs"];
m0_170 [label="var exception =\r\n                Record.Exception(() => new Request(''GET'', ''/'', string.Empty))", span="367-368", cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_an_empty_protocol()", file="DynamicDictionaryFixture.cs"];
m0_171 [label="exception.ShouldBeOfType<ArgumentOutOfRangeException>()", span="371-371", cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_an_empty_protocol()", file="DynamicDictionaryFixture.cs"];
m0_172 [label="Exit Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_an_empty_protocol()", span="364-364", cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_an_empty_protocol()", file="DynamicDictionaryFixture.cs"];
m0_120 [label="Entry System.Tuple<T1, T2>.Tuple(T1, T2)", span="0-0", cluster="System.Tuple<T1, T2>.Tuple(T1, T2)", file="DynamicDictionaryFixture.cs"];
m0_207 [label="Entry System.Text.StringBuilder.Append(char)", span="0-0", cluster="System.Text.StringBuilder.Append(char)", file="DynamicDictionaryFixture.cs"];
m0_0 [label="Entry Nancy.Tests.Unit.RequestFixture.Should_override_request_method_on_post()", span="14-14", cluster="Nancy.Tests.Unit.RequestFixture.Should_override_request_method_on_post()", file="DynamicDictionaryFixture.cs"];
m0_1 [label="string bodyContent = ''_method=GET''", span="17-17", cluster="Nancy.Tests.Unit.RequestFixture.Should_override_request_method_on_post()", file="DynamicDictionaryFixture.cs"];
m0_2 [label="var memory = CreateRequestStream()", span="18-18", cluster="Nancy.Tests.Unit.RequestFixture.Should_override_request_method_on_post()", file="DynamicDictionaryFixture.cs"];
m0_4 [label="writer.Write(bodyContent)", span="20-20", cluster="Nancy.Tests.Unit.RequestFixture.Should_override_request_method_on_post()", file="DynamicDictionaryFixture.cs"];
m0_3 [label="var writer = new StreamWriter(memory)", span="19-19", cluster="Nancy.Tests.Unit.RequestFixture.Should_override_request_method_on_post()", file="DynamicDictionaryFixture.cs"];
m0_6 [label="memory.Position = 0", span="22-22", cluster="Nancy.Tests.Unit.RequestFixture.Should_override_request_method_on_post()", file="DynamicDictionaryFixture.cs"];
m0_8 [label="var request = new Request(''POST'', ''/'', headers, memory, ''http'')", span="28-28", cluster="Nancy.Tests.Unit.RequestFixture.Should_override_request_method_on_post()", file="DynamicDictionaryFixture.cs"];
m0_5 [label="writer.Flush()", span="21-21", cluster="Nancy.Tests.Unit.RequestFixture.Should_override_request_method_on_post()", file="DynamicDictionaryFixture.cs"];
m0_7 [label="var headers =\r\n                new Dictionary<string, IEnumerable<string>> { { ''content-type'', new[] { ''application/x-www-form-urlencoded'' } } }", span="24-25", cluster="Nancy.Tests.Unit.RequestFixture.Should_override_request_method_on_post()", file="DynamicDictionaryFixture.cs"];
m0_9 [label="request.Method.ShouldEqual(''GET'')", span="31-31", cluster="Nancy.Tests.Unit.RequestFixture.Should_override_request_method_on_post()", file="DynamicDictionaryFixture.cs"];
m0_10 [label="Exit Nancy.Tests.Unit.RequestFixture.Should_override_request_method_on_post()", span="14-14", cluster="Nancy.Tests.Unit.RequestFixture.Should_override_request_method_on_post()", file="DynamicDictionaryFixture.cs"];
m0_113 [label="Entry Nancy.Tests.Unit.RequestFixture.CreateRequestStream(System.IO.Stream)", span="392-392", cluster="Nancy.Tests.Unit.RequestFixture.CreateRequestStream(System.IO.Stream)", file="DynamicDictionaryFixture.cs"];
m0_183 [label="return RequestStream.FromStream(stream);", span="394-394", cluster="Nancy.Tests.Unit.RequestFixture.CreateRequestStream(System.IO.Stream)", file="DynamicDictionaryFixture.cs"];
m0_184 [label="Exit Nancy.Tests.Unit.RequestFixture.CreateRequestStream(System.IO.Stream)", span="392-392", cluster="Nancy.Tests.Unit.RequestFixture.CreateRequestStream(System.IO.Stream)", file="DynamicDictionaryFixture.cs"];
m0_112 [label="Entry Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", span="397-397", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="DynamicDictionaryFixture.cs"];
m0_186 [label="var boundaryBuilder = new StringBuilder()", span="399-399", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="DynamicDictionaryFixture.cs"];
m0_187 [label="formValues.Keys", span="401-401", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="DynamicDictionaryFixture.cs"];
m0_199 [label="boundaryBuilder.Append(formValues[key])", span="414-414", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="DynamicDictionaryFixture.cs"];
m0_188 [label="boundaryBuilder.Append('\r')", span="403-403", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="DynamicDictionaryFixture.cs"];
m0_189 [label="boundaryBuilder.Append('\n')", span="404-404", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="DynamicDictionaryFixture.cs"];
m0_190 [label="boundaryBuilder.Append(''--'')", span="405-405", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="DynamicDictionaryFixture.cs"];
m0_191 [label="boundaryBuilder.Append(''----NancyFormBoundary'')", span="406-406", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="DynamicDictionaryFixture.cs"];
m0_192 [label="boundaryBuilder.Append('\r')", span="407-407", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="DynamicDictionaryFixture.cs"];
m0_193 [label="boundaryBuilder.Append('\n')", span="408-408", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="DynamicDictionaryFixture.cs"];
m0_194 [label="boundaryBuilder.AppendFormat(''Content-Disposition: form-data; name=\''{0}\'''', key)", span="409-409", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="DynamicDictionaryFixture.cs"];
m0_195 [label="boundaryBuilder.Append('\r')", span="410-410", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="DynamicDictionaryFixture.cs"];
m0_196 [label="boundaryBuilder.Append('\n')", span="411-411", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="DynamicDictionaryFixture.cs"];
m0_197 [label="boundaryBuilder.Append('\r')", span="412-412", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="DynamicDictionaryFixture.cs"];
m0_198 [label="boundaryBuilder.Append('\n')", span="413-413", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="DynamicDictionaryFixture.cs"];
m0_200 [label="boundaryBuilder.Append('\r')", span="417-417", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="DynamicDictionaryFixture.cs"];
m0_201 [label="boundaryBuilder.Append('\n')", span="418-418", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="DynamicDictionaryFixture.cs"];
m0_202 [label="boundaryBuilder.Append(''------NancyFormBoundary--'')", span="419-419", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="DynamicDictionaryFixture.cs"];
m0_203 [label="var bytes =\r\n                Encoding.ASCII.GetBytes(boundaryBuilder.ToString())", span="421-422", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="DynamicDictionaryFixture.cs"];
m0_204 [label="return bytes;", span="424-424", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="DynamicDictionaryFixture.cs"];
m0_205 [label="Exit Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", span="397-397", cluster="Nancy.Tests.Unit.RequestFixture.BuildMultipartFormValues(System.Collections.Generic.Dictionary<string, string>)", file="DynamicDictionaryFixture.cs"];
m0_129 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="DynamicDictionaryFixture.cs"];
m0_39 [label="Entry Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_empty_method()", span="71-71", cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_empty_method()", file="DynamicDictionaryFixture.cs"];
m0_40 [label="var exception =\r\n                Record.Exception(() => new Request(string.Empty, ''/'', ''http''))", span="74-75", cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_empty_method()", file="DynamicDictionaryFixture.cs"];
m0_41 [label="exception.ShouldBeOfType<ArgumentOutOfRangeException>()", span="78-78", cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_empty_method()", file="DynamicDictionaryFixture.cs"];
m0_42 [label="Exit Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_empty_method()", span="71-71", cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_empty_method()", file="DynamicDictionaryFixture.cs"];
m0_173 [label="Entry lambda expression", span="368-368", cluster="lambda expression", file="DynamicDictionaryFixture.cs"];
m0_35 [label="Entry lambda expression", span="64-64", cluster="lambda expression", file="DynamicDictionaryFixture.cs"];
m0_36 [label="new Request(null, ''/'', ''http'')", span="64-64", cluster="lambda expression", file="DynamicDictionaryFixture.cs"];
m0_37 [label="Exit lambda expression", span="64-64", cluster="lambda expression", file="DynamicDictionaryFixture.cs"];
m0_43 [label="Entry lambda expression", span="75-75", cluster="lambda expression", file="DynamicDictionaryFixture.cs"];
m0_44 [label="new Request(string.Empty, ''/'', ''http'')", span="75-75", cluster="lambda expression", file="DynamicDictionaryFixture.cs"];
m0_45 [label="Exit lambda expression", span="75-75", cluster="lambda expression", file="DynamicDictionaryFixture.cs"];
m0_50 [label="Entry lambda expression", span="86-86", cluster="lambda expression", file="DynamicDictionaryFixture.cs"];
m0_51 [label="new Request(''GET'', null, ''http'')", span="86-86", cluster="lambda expression", file="DynamicDictionaryFixture.cs"];
m0_52 [label="Exit lambda expression", span="86-86", cluster="lambda expression", file="DynamicDictionaryFixture.cs"];
m0_57 [label="Entry lambda expression", span="97-97", cluster="lambda expression", file="DynamicDictionaryFixture.cs"];
m0_58 [label="new Request(''GET'', string.Empty, ''http'')", span="97-97", cluster="lambda expression", file="DynamicDictionaryFixture.cs"];
m0_59 [label="Exit lambda expression", span="97-97", cluster="lambda expression", file="DynamicDictionaryFixture.cs"];
m0_166 [label="Entry lambda expression", span="357-357", cluster="lambda expression", file="DynamicDictionaryFixture.cs"];
m0_167 [label="new Request(''GET'', ''/'', null)", span="357-357", cluster="lambda expression", file="DynamicDictionaryFixture.cs"];
m0_168 [label="Exit lambda expression", span="357-357", cluster="lambda expression", file="DynamicDictionaryFixture.cs"];
m0_174 [label="new Request(''GET'', ''/'', string.Empty)", span="368-368", cluster="lambda expression", file="DynamicDictionaryFixture.cs"];
m0_175 [label="Exit lambda expression", span="368-368", cluster="lambda expression", file="DynamicDictionaryFixture.cs"];
m0_53 [label="Entry Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_empty_uri()", span="93-93", cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_empty_uri()", file="DynamicDictionaryFixture.cs"];
m0_54 [label="var exception =\r\n                Record.Exception(() => new Request(''GET'', string.Empty, ''http''))", span="96-97", cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_empty_uri()", file="DynamicDictionaryFixture.cs"];
m0_55 [label="exception.ShouldBeOfType<ArgumentOutOfRangeException>()", span="100-100", cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_empty_uri()", file="DynamicDictionaryFixture.cs"];
m0_56 [label="Exit Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_empty_uri()", span="93-93", cluster="Nancy.Tests.Unit.RequestFixture.Should_throw_argumentoutofrangeexception_when_initialized_with_empty_uri()", file="DynamicDictionaryFixture.cs"];
m0_65 [label="Entry Nancy.Tests.Unit.RequestFixture.Should_set_uri_parameter_value_to_uri_property_when_initialized()", span="117-117", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_uri_parameter_value_to_uri_property_when_initialized()", file="DynamicDictionaryFixture.cs"];
m0_66 [label="string path = ''/''", span="120-120", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_uri_parameter_value_to_uri_property_when_initialized()", file="DynamicDictionaryFixture.cs"];
m0_67 [label="var request = new Request(''GET'', path, ''http'')", span="123-123", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_uri_parameter_value_to_uri_property_when_initialized()", file="DynamicDictionaryFixture.cs"];
m0_68 [label="request.Path.ShouldEqual(path)", span="126-126", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_uri_parameter_value_to_uri_property_when_initialized()", file="DynamicDictionaryFixture.cs"];
m0_69 [label="Exit Nancy.Tests.Unit.RequestFixture.Should_set_uri_parameter_value_to_uri_property_when_initialized()", span="117-117", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_uri_parameter_value_to_uri_property_when_initialized()", file="DynamicDictionaryFixture.cs"];
m0_82 [label="Entry Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded()", span="159-159", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded()", file="DynamicDictionaryFixture.cs"];
m0_83 [label="string bodyContent = ''name=John+Doe&gender=male&family=5&city=kent&city=miami&other=abc%0D%0Adef&nickname=J%26D''", span="162-162", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded()", file="DynamicDictionaryFixture.cs"];
m0_84 [label="var memory = CreateRequestStream()", span="163-163", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded()", file="DynamicDictionaryFixture.cs"];
m0_86 [label="writer.Write(bodyContent)", span="165-165", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded()", file="DynamicDictionaryFixture.cs"];
m0_85 [label="var writer = new StreamWriter(memory)", span="164-164", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded()", file="DynamicDictionaryFixture.cs"];
m0_88 [label="memory.Position = 0", span="167-167", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded()", file="DynamicDictionaryFixture.cs"];
m0_90 [label="var request = new Request(''POST'', ''/'', headers, memory, ''http'')", span="176-176", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded()", file="DynamicDictionaryFixture.cs"];
m0_87 [label="writer.Flush()", span="166-166", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded()", file="DynamicDictionaryFixture.cs"];
m0_89 [label="var headers = \r\n                new Dictionary<string, IEnumerable<string>>\r\n                {\r\n                    { ''content-type'', new[] { ''application/x-www-form-urlencoded'' } }\r\n                }", span="169-173", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded()", file="DynamicDictionaryFixture.cs"];
m0_91 [label="((string)request.Form.name).ShouldEqual(''John Doe'')", span="179-179", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded()", file="DynamicDictionaryFixture.cs"];
m0_92 [label="Exit Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded()", span="159-159", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_extract_form_data_from_body_when_content_type_is_x_www_form_urlencoded()", file="DynamicDictionaryFixture.cs"];
m0_18 [label="Entry Nancy.Tests.Unit.RequestFixture.Should_only_override_method_on_post(string)", span="39-39", cluster="Nancy.Tests.Unit.RequestFixture.Should_only_override_method_on_post(string)", file="DynamicDictionaryFixture.cs"];
m0_19 [label="string bodyContent = ''_method=TEST''", span="42-42", cluster="Nancy.Tests.Unit.RequestFixture.Should_only_override_method_on_post(string)", file="DynamicDictionaryFixture.cs"];
m0_26 [label="var request = new Request(method, ''/'', headers, memory, ''http'')", span="53-53", cluster="Nancy.Tests.Unit.RequestFixture.Should_only_override_method_on_post(string)", file="DynamicDictionaryFixture.cs"];
m0_27 [label="request.Method.ShouldEqual(method)", span="56-56", cluster="Nancy.Tests.Unit.RequestFixture.Should_only_override_method_on_post(string)", file="DynamicDictionaryFixture.cs"];
m0_20 [label="var memory = CreateRequestStream()", span="43-43", cluster="Nancy.Tests.Unit.RequestFixture.Should_only_override_method_on_post(string)", file="DynamicDictionaryFixture.cs"];
m0_22 [label="writer.Write(bodyContent)", span="45-45", cluster="Nancy.Tests.Unit.RequestFixture.Should_only_override_method_on_post(string)", file="DynamicDictionaryFixture.cs"];
m0_21 [label="var writer = new StreamWriter(memory)", span="44-44", cluster="Nancy.Tests.Unit.RequestFixture.Should_only_override_method_on_post(string)", file="DynamicDictionaryFixture.cs"];
m0_24 [label="memory.Position = 0", span="47-47", cluster="Nancy.Tests.Unit.RequestFixture.Should_only_override_method_on_post(string)", file="DynamicDictionaryFixture.cs"];
m0_23 [label="writer.Flush()", span="46-46", cluster="Nancy.Tests.Unit.RequestFixture.Should_only_override_method_on_post(string)", file="DynamicDictionaryFixture.cs"];
m0_25 [label="var headers =\r\n                new Dictionary<string, IEnumerable<string>> { { ''content-type'', new[] { ''application/x-www-form-urlencoded'' } } }", span="49-50", cluster="Nancy.Tests.Unit.RequestFixture.Should_only_override_method_on_post(string)", file="DynamicDictionaryFixture.cs"];
m0_28 [label="Exit Nancy.Tests.Unit.RequestFixture.Should_only_override_method_on_post(string)", span="39-39", cluster="Nancy.Tests.Unit.RequestFixture.Should_only_override_method_on_post(string)", file="DynamicDictionaryFixture.cs"];
m0_160 [label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0", cluster="System.IO.MemoryStream.MemoryStream()", file="DynamicDictionaryFixture.cs"];
m0_13 [label="Entry System.IO.StreamWriter.Write(string)", span="0-0", cluster="System.IO.StreamWriter.Write(string)", file="DynamicDictionaryFixture.cs"];
m0_33 [label="Entry Unk.Exception", span="", cluster="Unk.Exception", file="DynamicDictionaryFixture.cs"];
m0_146 [label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0", cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="DynamicDictionaryFixture.cs"];
m0_148 [label="Entry Nancy.Tests.Unit.RequestFixture.Should_be_able_to_invoke_form_repeatedly()", span="330-330", cluster="Nancy.Tests.Unit.RequestFixture.Should_be_able_to_invoke_form_repeatedly()", file="DynamicDictionaryFixture.cs"];
m0_149 [label="string bodyContent = ''name=John+Doe&gender=male&family=5&city=kent&city=miami&other=abc%0D%0Adef&nickname=J%26D''", span="332-332", cluster="Nancy.Tests.Unit.RequestFixture.Should_be_able_to_invoke_form_repeatedly()", file="DynamicDictionaryFixture.cs"];
m0_150 [label="var memory = new MemoryStream()", span="333-333", cluster="Nancy.Tests.Unit.RequestFixture.Should_be_able_to_invoke_form_repeatedly()", file="DynamicDictionaryFixture.cs"];
m0_152 [label="writer.Write(bodyContent)", span="335-335", cluster="Nancy.Tests.Unit.RequestFixture.Should_be_able_to_invoke_form_repeatedly()", file="DynamicDictionaryFixture.cs"];
m0_151 [label="var writer = new StreamWriter(memory)", span="334-334", cluster="Nancy.Tests.Unit.RequestFixture.Should_be_able_to_invoke_form_repeatedly()", file="DynamicDictionaryFixture.cs"];
m0_154 [label="memory.Position = 0", span="337-337", cluster="Nancy.Tests.Unit.RequestFixture.Should_be_able_to_invoke_form_repeatedly()", file="DynamicDictionaryFixture.cs"];
m0_156 [label="var request = new Request(''POST'', ''/'', headers, CreateRequestStream(memory), ''http'')", span="346-346", cluster="Nancy.Tests.Unit.RequestFixture.Should_be_able_to_invoke_form_repeatedly()", file="DynamicDictionaryFixture.cs"];
m0_153 [label="writer.Flush()", span="336-336", cluster="Nancy.Tests.Unit.RequestFixture.Should_be_able_to_invoke_form_repeatedly()", file="DynamicDictionaryFixture.cs"];
m0_155 [label="var headers =\r\n				new Dictionary<string, IEnumerable<string>>\r\n                {\r\n                    { ''content-type'', new[] { ''application/x-www-form-urlencoded'' } }\r\n                }", span="339-343", cluster="Nancy.Tests.Unit.RequestFixture.Should_be_able_to_invoke_form_repeatedly()", file="DynamicDictionaryFixture.cs"];
m0_157 [label="request.Form.ToString()", span="347-347", cluster="Nancy.Tests.Unit.RequestFixture.Should_be_able_to_invoke_form_repeatedly()", file="DynamicDictionaryFixture.cs"];
m0_158 [label="((string)request.Form.name).ShouldEqual(''John Doe'')", span="349-349", cluster="Nancy.Tests.Unit.RequestFixture.Should_be_able_to_invoke_form_repeatedly()", file="DynamicDictionaryFixture.cs"];
m0_159 [label="Exit Nancy.Tests.Unit.RequestFixture.Should_be_able_to_invoke_form_repeatedly()", span="330-330", cluster="Nancy.Tests.Unit.RequestFixture.Should_be_able_to_invoke_form_repeatedly()", file="DynamicDictionaryFixture.cs"];
m0_14 [label="Entry System.IO.StreamWriter.Flush()", span="0-0", cluster="System.IO.StreamWriter.Flush()", file="DynamicDictionaryFixture.cs"];
m0_123 [label="Entry Nancy.Tests.Unit.RequestFixture.Should_set_content_type_on_file_extracted_from_multipart_form_data_body()", span="255-255", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_content_type_on_file_extracted_from_multipart_form_data_body()", file="DynamicDictionaryFixture.cs"];
m0_124 [label="var memory =\r\n                new MemoryStream(BuildMultipartFileValues(new Dictionary<string, Tuple<string, string>>\r\n                {\r\n                    { ''sample.txt'', new Tuple<string, string>(''content/type'', ''some test content'')}\r\n                }))", span="258-262", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_content_type_on_file_extracted_from_multipart_form_data_body()", file="DynamicDictionaryFixture.cs"];
m0_125 [label="var headers =\r\n                new Dictionary<string, IEnumerable<string>>\r\n                {\r\n                    { ''content-type'', new[] { ''multipart/form-data; boundary=----NancyFormBoundary'' } }\r\n                }", span="264-268", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_content_type_on_file_extracted_from_multipart_form_data_body()", file="DynamicDictionaryFixture.cs"];
m0_126 [label="var request = new Request(''POST'', ''/'', headers, CreateRequestStream(memory), ''http'')", span="271-271", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_content_type_on_file_extracted_from_multipart_form_data_body()", file="DynamicDictionaryFixture.cs"];
m0_127 [label="request.Files.First().ContentType.ShouldEqual(''content/type'')", span="274-274", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_content_type_on_file_extracted_from_multipart_form_data_body()", file="DynamicDictionaryFixture.cs"];
m0_128 [label="Exit Nancy.Tests.Unit.RequestFixture.Should_set_content_type_on_file_extracted_from_multipart_form_data_body()", span="255-255", cluster="Nancy.Tests.Unit.RequestFixture.Should_set_content_type_on_file_extracted_from_multipart_form_data_body()", file="DynamicDictionaryFixture.cs"];
m0_211 [label="Entry System.Text.Encoding.GetBytes(string)", span="0-0", cluster="System.Text.Encoding.GetBytes(string)", file="DynamicDictionaryFixture.cs"];
m0_147 [label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0", cluster="System.IO.StreamReader.ReadToEnd()", file="DynamicDictionaryFixture.cs"];
m0_185 [label="Entry Nancy.IO.RequestStream.FromStream(System.IO.Stream)", span="209-209", cluster="Nancy.IO.RequestStream.FromStream(System.IO.Stream)", file="DynamicDictionaryFixture.cs"];
m0_136 [label="Entry Nancy.Tests.Unit.RequestFixture.Should_value_on_file_extracted_from_multipart_form_data_body()", span="301-301", cluster="Nancy.Tests.Unit.RequestFixture.Should_value_on_file_extracted_from_multipart_form_data_body()", file="DynamicDictionaryFixture.cs"];
m0_137 [label="var memory =\r\n                new MemoryStream(BuildMultipartFileValues(new Dictionary<string, Tuple<string, string>>\r\n                {\r\n                    { ''sample.txt'', new Tuple<string, string>(''content/type'', ''some test content'')}\r\n                }))", span="304-308", cluster="Nancy.Tests.Unit.RequestFixture.Should_value_on_file_extracted_from_multipart_form_data_body()", file="DynamicDictionaryFixture.cs"];
m0_138 [label="var headers =\r\n                new Dictionary<string, IEnumerable<string>>\r\n                {\r\n                    { ''content-type'', new[] { ''multipart/form-data; boundary=----NancyFormBoundary'' } }\r\n                }", span="310-314", cluster="Nancy.Tests.Unit.RequestFixture.Should_value_on_file_extracted_from_multipart_form_data_body()", file="DynamicDictionaryFixture.cs"];
m0_139 [label="var request = new Request(''POST'', ''/'', headers, CreateRequestStream(memory), ''http'')", span="317-317", cluster="Nancy.Tests.Unit.RequestFixture.Should_value_on_file_extracted_from_multipart_form_data_body()", file="DynamicDictionaryFixture.cs"];
m0_140 [label="GetStringValue(request.Files.First().Value).ShouldEqual(''some test content'')", span="320-320", cluster="Nancy.Tests.Unit.RequestFixture.Should_value_on_file_extracted_from_multipart_form_data_body()", file="DynamicDictionaryFixture.cs"];
m0_141 [label="Exit Nancy.Tests.Unit.RequestFixture.Should_value_on_file_extracted_from_multipart_form_data_body()", span="301-301", cluster="Nancy.Tests.Unit.RequestFixture.Should_value_on_file_extracted_from_multipart_form_data_body()", file="DynamicDictionaryFixture.cs"];
m0_75 [label="Entry string.ShouldNotBeEmpty()", span="21-21", cluster="string.ShouldNotBeEmpty()", file="DynamicDictionaryFixture.cs"];
d44 -> d45  [key=0, style=solid, color=green];
d44 -> d24  [key=2, style=dotted, color=green];
d94 -> d44  [key=1, style=dashed, color=green, label="Nancy.DynamicDictionary"];
d94 -> d8  [key=1, style=dashed, color=darkseagreen4, label="Nancy.DynamicDictionary"];
d94 -> d12  [key=1, style=dashed, color=darkseagreen4, label="Nancy.DynamicDictionary"];
d94 -> d19  [key=1, style=dashed, color=darkseagreen4, label="Nancy.DynamicDictionary"];
d94 -> d22  [key=1, style=dashed, color=darkseagreen4, label="Nancy.DynamicDictionary"];
d94 -> d26  [key=1, style=dashed, color=darkseagreen4, label="Nancy.DynamicDictionary"];
d94 -> d31  [key=1, style=dashed, color=darkseagreen4, label="Nancy.DynamicDictionary"];
d94 -> d38  [key=1, style=dashed, color=darkseagreen4, label="Nancy.DynamicDictionary"];
d94 -> d40  [key=1, style=dashed, color=darkseagreen4, label="Nancy.DynamicDictionary"];
d94 -> d47  [key=1, style=dashed, color=darkseagreen4, label="Nancy.DynamicDictionary"];
d94 -> d51  [key=1, style=dashed, color=darkseagreen4, label="Nancy.DynamicDictionary"];
d94 -> d54  [key=1, style=dashed, color=darkseagreen4, label="Nancy.DynamicDictionary"];
d94 -> d57  [key=1, style=dashed, color=darkseagreen4, label="Nancy.DynamicDictionary"];
d94 -> d61  [key=1, style=dashed, color=darkseagreen4, label="Nancy.DynamicDictionary"];
d94 -> d64  [key=1, style=dashed, color=darkseagreen4, label="Nancy.DynamicDictionary"];
d94 -> d69  [key=1, style=dashed, color=darkseagreen4, label="Nancy.DynamicDictionary"];
d94 -> d74  [key=1, style=dashed, color=darkseagreen4, label="Nancy.DynamicDictionary"];
d94 -> d78  [key=1, style=dashed, color=darkseagreen4, label="Nancy.DynamicDictionary"];
d94 -> d83  [key=1, style=dashed, color=darkseagreen4, label="Nancy.DynamicDictionary"];
d43 -> d44  [key=0, style=solid, color=green];
d45 -> d43  [key=0, style=bold, color=blue];
d68 -> d69  [key=0, style=solid, color=green];
d68 -> d71  [key=2, style=dotted, color=green];
d67 -> d68  [key=0, style=solid, color=green];
d69 -> d70  [key=0, style=solid];
d69 -> d72  [key=2, style=dotted];
d71 -> d86  [key=0, style=solid, color=green];
d82 -> d83  [key=0, style=solid, color=green];
d82 -> d71  [key=2, style=dotted, color=green];
d81 -> d82  [key=0, style=solid, color=green];
d83 -> d84  [key=0, style=solid];
d83 -> d85  [key=2, style=dotted];
d86 -> d86  [key=1, style=dashed, color=green, label="System.Collections.Generic.KeyValuePair<string, dynamic>"];
d86 -> d87  [key=0, style=solid, color=green];
d86 -> d89  [key=2, style=dotted, color=green];
d86 -> d17  [key=2, style=dotted, color=green];
d87 -> d88  [key=0, style=solid, color=green];
d88 -> d71  [key=0, style=bold, color=blue];
d8 -> d9  [key=0, style=solid];
d12 -> d13  [key=0, style=solid];
d12 -> d14  [key=0, style=solid];
d12 -> d16  [key=2, style=dotted];
d12 -> d15  [key=1, style=dashed, color=darkseagreen4, label="out object"];
d19 -> d20  [key=0, style=solid];
d22 -> d24  [key=2, style=dotted];
d22 -> d23  [key=0, style=solid];
d26 -> d24  [key=2, style=dotted];
d26 -> d27  [key=0, style=solid];
d31 -> d32  [key=0, style=solid];
d31 -> d33  [key=2, style=dotted];
d31 -> d34  [key=2, style=dotted];
d38 -> d39  [key=0, style=solid];
d38 -> d40  [key=0, style=solid];
d38 -> d33  [key=2, style=dotted];
d40 -> d41  [key=0, style=solid];
d40 -> d42  [key=2, style=dotted];
d40 -> d28  [key=2, style=dotted];
d47 -> d48  [key=0, style=solid];
d47 -> d49  [key=2, style=dotted];
d51 -> d52  [key=0, style=solid];
d54 -> d54  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, dynamic>"];
d54 -> d55  [key=0, style=solid];
d57 -> d58  [key=0, style=solid];
d57 -> d59  [key=2, style=dotted];
d61 -> d62  [key=0, style=solid];
d61 -> d16  [key=2, style=dotted];
d64 -> d65  [key=0, style=solid];
d64 -> d66  [key=2, style=dotted];
d74 -> d75  [key=0, style=solid];
d74 -> d76  [key=2, style=dotted];
d78 -> d79  [key=0, style=solid];
d78 -> d80  [key=2, style=dotted];
d70 -> d67  [key=0, style=bold, color=blue];
d84 -> d81  [key=0, style=bold, color=blue];
d13 -> d17  [key=2, style=dotted];
d13 -> d14  [key=0, style=solid];
d13 -> d15  [key=1, style=dashed, color=darkseagreen4, label="out object"];
d7 -> d8  [key=0, style=solid];
d9 -> d10  [key=0, style=solid];
d11 -> d12  [key=0, style=solid];
d14 -> d15  [key=0, style=solid];
d15 -> d11  [key=0, style=bold, color=blue];
d18 -> d19  [key=0, style=solid];
d20 -> d18  [key=0, style=bold, color=blue];
d21 -> d22  [key=0, style=solid];
d23 -> d21  [key=0, style=bold, color=blue];
d25 -> d26  [key=0, style=solid];
d27 -> d25  [key=0, style=bold, color=blue];
d28 -> d31  [key=1, style=dashed, color=darkseagreen4, label="Nancy.DynamicDictionary"];
d28 -> d29  [key=0, style=solid];
d29 -> d31  [key=0, style=solid];
d29 -> d30  [key=0, style=solid];
d29 -> d33  [key=2, style=dotted];
d32 -> d28  [key=0, style=bold, color=blue];
d35 -> d38  [key=1, style=dashed, color=darkseagreen4, label=object];
d35 -> d40  [key=1, style=dashed, color=darkseagreen4, label=object];
d35 -> d36  [key=0, style=solid];
d36 -> d38  [key=0, style=solid];
d36 -> d33  [key=2, style=dotted];
d36 -> d37  [key=0, style=solid];
d39 -> d41  [key=0, style=solid];
d41 -> d35  [key=0, style=bold, color=blue];
d46 -> d47  [key=0, style=solid];
d48 -> d46  [key=0, style=bold, color=blue];
d50 -> d51  [key=0, style=solid];
d52 -> d50  [key=0, style=bold, color=blue];
d53 -> d54  [key=0, style=solid];
d55 -> d53  [key=0, style=bold, color=blue];
d56 -> d57  [key=0, style=solid];
d58 -> d56  [key=0, style=bold, color=blue];
d60 -> d61  [key=0, style=solid];
d62 -> d60  [key=0, style=bold, color=blue];
d63 -> d64  [key=0, style=solid];
d65 -> d63  [key=0, style=bold, color=blue];
d73 -> d74  [key=0, style=solid];
d75 -> d73  [key=0, style=bold, color=blue];
d77 -> d78  [key=0, style=solid];
d79 -> d77  [key=0, style=bold, color=blue];
d10 -> d7  [key=0, style=bold, color=blue];
d30 -> d32  [key=0, style=solid];
d37 -> d41  [key=0, style=solid];
m0_29 -> m0_30  [key=0, style=solid];
m0_30 -> m0_31  [key=0, style=solid];
m0_30 -> m0_33  [key=2, style=dotted];
m0_30 -> m0_35  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_34  [key=2, style=dotted];
m0_32 -> m0_29  [key=0, style=bold, color=blue];
m0_46 -> m0_47  [key=0, style=solid];
m0_47 -> m0_48  [key=0, style=solid];
m0_47 -> m0_33  [key=2, style=dotted];
m0_47 -> m0_50  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_48 -> m0_49  [key=0, style=solid];
m0_48 -> m0_34  [key=2, style=dotted];
m0_49 -> m0_46  [key=0, style=bold, color=blue];
m0_60 -> m0_61  [key=0, style=solid];
m0_61 -> m0_62  [key=0, style=solid];
m0_61 -> m0_63  [key=1, style=dashed, color=darkseagreen4, label=method];
m0_62 -> m0_63  [key=0, style=solid];
m0_62 -> m0_38  [key=2, style=dotted];
m0_63 -> m0_64  [key=0, style=solid];
m0_63 -> m0_17  [key=2, style=dotted];
m0_64 -> m0_60  [key=0, style=bold, color=blue];
m0_130 -> m0_131  [key=0, style=solid];
m0_131 -> m0_132  [key=0, style=solid];
m0_131 -> m0_111  [key=2, style=dotted];
m0_131 -> m0_15  [key=2, style=dotted];
m0_131 -> m0_120  [key=2, style=dotted];
m0_131 -> m0_121  [key=2, style=dotted];
m0_131 -> m0_133  [key=1, style=dashed, color=darkseagreen4, label=memory];
m0_132 -> m0_133  [key=0, style=solid];
m0_132 -> m0_15  [key=2, style=dotted];
m0_133 -> m0_134  [key=0, style=solid];
m0_133 -> m0_16  [key=2, style=dotted];
m0_133 -> m0_113  [key=2, style=dotted];
m0_134 -> m0_135  [key=0, style=solid];
m0_134 -> m0_129  [key=2, style=dotted];
m0_134 -> m0_17  [key=2, style=dotted];
m0_135 -> m0_130  [key=0, style=bold, color=blue];
m0_114 -> m0_115  [key=0, style=solid];
m0_115 -> m0_116  [key=0, style=solid];
m0_115 -> m0_111  [key=2, style=dotted];
m0_115 -> m0_15  [key=2, style=dotted];
m0_115 -> m0_120  [key=2, style=dotted];
m0_115 -> m0_121  [key=2, style=dotted];
m0_115 -> m0_117  [key=1, style=dashed, color=darkseagreen4, label=memory];
m0_116 -> m0_117  [key=0, style=solid];
m0_116 -> m0_15  [key=2, style=dotted];
m0_117 -> m0_118  [key=0, style=solid];
m0_117 -> m0_16  [key=2, style=dotted];
m0_117 -> m0_113  [key=2, style=dotted];
m0_118 -> m0_119  [key=0, style=solid];
m0_118 -> m0_122  [key=2, style=dotted];
m0_119 -> m0_114  [key=0, style=bold, color=blue];
m0_104 -> m0_105  [key=0, style=solid];
m0_105 -> m0_106  [key=0, style=solid];
m0_105 -> m0_111  [key=2, style=dotted];
m0_105 -> m0_15  [key=2, style=dotted];
m0_105 -> m0_112  [key=2, style=dotted];
m0_105 -> m0_107  [key=1, style=dashed, color=darkseagreen4, label=memory];
m0_106 -> m0_107  [key=0, style=solid];
m0_106 -> m0_15  [key=2, style=dotted];
m0_107 -> m0_108  [key=0, style=solid];
m0_107 -> m0_16  [key=2, style=dotted];
m0_107 -> m0_113  [key=2, style=dotted];
m0_107 -> m0_109  [key=1, style=dashed, color=darkseagreen4, label=request];
m0_108 -> m0_109  [key=0, style=solid];
m0_108 -> m0_17  [key=2, style=dotted];
m0_109 -> m0_110  [key=0, style=solid];
m0_109 -> m0_17  [key=2, style=dotted];
m0_110 -> m0_104  [key=0, style=bold, color=blue];
m0_121 -> m0_212  [key=0, style=solid];
m0_121 -> m0_213  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>"];
m0_121 -> m0_223  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>"];
m0_121 -> m0_228  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, System.Tuple<string, string>>"];
m0_212 -> m0_213  [key=0, style=solid];
m0_212 -> m0_206  [key=2, style=dotted];
m0_212 -> m0_214  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m0_212 -> m0_215  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m0_212 -> m0_216  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m0_212 -> m0_217  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m0_212 -> m0_218  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m0_212 -> m0_219  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m0_212 -> m0_220  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m0_212 -> m0_221  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m0_212 -> m0_222  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m0_212 -> m0_223  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m0_212 -> m0_224  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m0_212 -> m0_225  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m0_212 -> m0_226  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m0_212 -> m0_227  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m0_212 -> m0_228  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m0_212 -> m0_229  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m0_212 -> m0_230  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m0_212 -> m0_231  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m0_212 -> m0_232  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m0_213 -> m0_214  [key=0, style=solid];
m0_213 -> m0_229  [key=0, style=solid];
m0_213 -> m0_220  [key=1, style=dashed, color=darkseagreen4, label=key];
m0_213 -> m0_223  [key=1, style=dashed, color=darkseagreen4, label=key];
m0_213 -> m0_228  [key=1, style=dashed, color=darkseagreen4, label=key];
m0_223 -> m0_224  [key=0, style=solid];
m0_223 -> m0_209  [key=2, style=dotted];
m0_228 -> m0_213  [key=0, style=solid];
m0_228 -> m0_208  [key=2, style=dotted];
m0_214 -> m0_215  [key=0, style=solid];
m0_214 -> m0_207  [key=2, style=dotted];
m0_215 -> m0_216  [key=0, style=solid];
m0_215 -> m0_207  [key=2, style=dotted];
m0_216 -> m0_217  [key=0, style=solid];
m0_216 -> m0_208  [key=2, style=dotted];
m0_217 -> m0_218  [key=0, style=solid];
m0_217 -> m0_208  [key=2, style=dotted];
m0_218 -> m0_219  [key=0, style=solid];
m0_218 -> m0_207  [key=2, style=dotted];
m0_219 -> m0_220  [key=0, style=solid];
m0_219 -> m0_207  [key=2, style=dotted];
m0_220 -> m0_221  [key=0, style=solid];
m0_220 -> m0_209  [key=2, style=dotted];
m0_221 -> m0_222  [key=0, style=solid];
m0_221 -> m0_207  [key=2, style=dotted];
m0_222 -> m0_223  [key=0, style=solid];
m0_222 -> m0_207  [key=2, style=dotted];
m0_224 -> m0_225  [key=0, style=solid];
m0_224 -> m0_207  [key=2, style=dotted];
m0_225 -> m0_226  [key=0, style=solid];
m0_225 -> m0_207  [key=2, style=dotted];
m0_226 -> m0_227  [key=0, style=solid];
m0_226 -> m0_207  [key=2, style=dotted];
m0_227 -> m0_228  [key=0, style=solid];
m0_227 -> m0_207  [key=2, style=dotted];
m0_229 -> m0_230  [key=0, style=solid];
m0_229 -> m0_207  [key=2, style=dotted];
m0_230 -> m0_231  [key=0, style=solid];
m0_230 -> m0_207  [key=2, style=dotted];
m0_231 -> m0_232  [key=0, style=solid];
m0_231 -> m0_208  [key=2, style=dotted];
m0_232 -> m0_233  [key=0, style=solid];
m0_232 -> m0_210  [key=2, style=dotted];
m0_232 -> m0_211  [key=2, style=dotted];
m0_233 -> m0_234  [key=0, style=solid];
m0_234 -> m0_121  [key=0, style=bold, color=blue];
m0_162 -> m0_163  [key=0, style=solid];
m0_163 -> m0_164  [key=0, style=solid];
m0_163 -> m0_33  [key=2, style=dotted];
m0_163 -> m0_166  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_164 -> m0_165  [key=0, style=solid];
m0_164 -> m0_34  [key=2, style=dotted];
m0_165 -> m0_162  [key=0, style=bold, color=blue];
m0_11 -> m0_181  [key=0, style=solid];
m0_181 -> m0_182  [key=0, style=solid];
m0_181 -> m0_160  [key=2, style=dotted];
m0_181 -> m0_113  [key=2, style=dotted];
m0_182 -> m0_11  [key=0, style=bold, color=blue];
m0_142 -> m0_143  [key=0, style=solid];
m0_143 -> m0_144  [key=0, style=solid];
m0_143 -> m0_146  [key=2, style=dotted];
m0_144 -> m0_145  [key=0, style=solid];
m0_144 -> m0_147  [key=2, style=dotted];
m0_145 -> m0_142  [key=0, style=bold, color=blue];
m0_93 -> m0_94  [key=0, style=solid];
m0_94 -> m0_95  [key=0, style=solid];
m0_94 -> m0_97  [key=1, style=dashed, color=darkseagreen4, label=bodyContent];
m0_95 -> m0_96  [key=0, style=solid];
m0_95 -> m0_11  [key=2, style=dotted];
m0_95 -> m0_99  [key=1, style=dashed, color=darkseagreen4, label=memory];
m0_95 -> m0_101  [key=1, style=dashed, color=darkseagreen4, label=memory];
m0_97 -> m0_98  [key=0, style=solid];
m0_97 -> m0_13  [key=2, style=dotted];
m0_96 -> m0_97  [key=0, style=solid];
m0_96 -> m0_12  [key=2, style=dotted];
m0_96 -> m0_98  [key=1, style=dashed, color=darkseagreen4, label=writer];
m0_99 -> m0_100  [key=0, style=solid];
m0_101 -> m0_102  [key=0, style=solid];
m0_101 -> m0_16  [key=2, style=dotted];
m0_98 -> m0_99  [key=0, style=solid];
m0_98 -> m0_14  [key=2, style=dotted];
m0_100 -> m0_101  [key=0, style=solid];
m0_100 -> m0_15  [key=2, style=dotted];
m0_102 -> m0_103  [key=0, style=solid];
m0_102 -> m0_17  [key=2, style=dotted];
m0_103 -> m0_93  [key=0, style=bold, color=blue];
m0_76 -> m0_77  [key=0, style=solid];
m0_77 -> m0_78  [key=0, style=solid];
m0_77 -> m0_11  [key=2, style=dotted];
m0_77 -> m0_79  [key=1, style=dashed, color=darkseagreen4, label=body];
m0_78 -> m0_79  [key=0, style=solid];
m0_78 -> m0_16  [key=2, style=dotted];
m0_78 -> m0_15  [key=2, style=dotted];
m0_79 -> m0_80  [key=0, style=solid];
m0_79 -> m0_81  [key=2, style=dotted];
m0_80 -> m0_76  [key=0, style=bold, color=blue];
m0_70 -> m0_71  [key=0, style=solid];
m0_71 -> m0_72  [key=0, style=solid];
m0_71 -> m0_15  [key=2, style=dotted];
m0_72 -> m0_73  [key=0, style=solid];
m0_72 -> m0_16  [key=2, style=dotted];
m0_72 -> m0_11  [key=2, style=dotted];
m0_73 -> m0_74  [key=0, style=solid];
m0_73 -> m0_75  [key=2, style=dotted];
m0_74 -> m0_70  [key=0, style=bold, color=blue];
m0_176 -> m0_177  [key=0, style=solid];
m0_177 -> m0_178  [key=0, style=solid];
m0_177 -> m0_179  [key=1, style=dashed, color=darkseagreen4, label=protocol];
m0_178 -> m0_179  [key=0, style=solid];
m0_178 -> m0_38  [key=2, style=dotted];
m0_179 -> m0_180  [key=0, style=solid];
m0_179 -> m0_17  [key=2, style=dotted];
m0_180 -> m0_176  [key=0, style=bold, color=blue];
m0_169 -> m0_170  [key=0, style=solid];
m0_170 -> m0_171  [key=0, style=solid];
m0_170 -> m0_33  [key=2, style=dotted];
m0_170 -> m0_173  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_171 -> m0_172  [key=0, style=solid];
m0_171 -> m0_34  [key=2, style=dotted];
m0_172 -> m0_169  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label=bodyContent];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_11  [key=2, style=dotted];
m0_2 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label=memory];
m0_2 -> m0_8  [key=1, style=dashed, color=darkseagreen4, label=memory];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_13  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_12  [key=2, style=dotted];
m0_3 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label=writer];
m0_6 -> m0_7  [key=0, style=solid];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_16  [key=2, style=dotted];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_14  [key=2, style=dotted];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_15  [key=2, style=dotted];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_17  [key=2, style=dotted];
m0_10 -> m0_0  [key=0, style=bold, color=blue];
m0_113 -> m0_183  [key=0, style=solid];
m0_183 -> m0_184  [key=0, style=solid];
m0_183 -> m0_185  [key=2, style=dotted];
m0_184 -> m0_113  [key=0, style=bold, color=blue];
m0_112 -> m0_186  [key=0, style=solid];
m0_112 -> m0_187  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, string>"];
m0_112 -> m0_199  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, string>"];
m0_186 -> m0_187  [key=0, style=solid];
m0_186 -> m0_206  [key=2, style=dotted];
m0_186 -> m0_188  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m0_186 -> m0_189  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m0_186 -> m0_190  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m0_186 -> m0_191  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m0_186 -> m0_192  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m0_186 -> m0_193  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m0_186 -> m0_194  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m0_186 -> m0_195  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m0_186 -> m0_196  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m0_186 -> m0_197  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m0_186 -> m0_198  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m0_186 -> m0_199  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m0_186 -> m0_200  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m0_186 -> m0_201  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m0_186 -> m0_202  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m0_186 -> m0_203  [key=1, style=dashed, color=darkseagreen4, label=boundaryBuilder];
m0_187 -> m0_188  [key=0, style=solid];
m0_187 -> m0_200  [key=0, style=solid];
m0_187 -> m0_194  [key=1, style=dashed, color=darkseagreen4, label=key];
m0_187 -> m0_199  [key=1, style=dashed, color=darkseagreen4, label=key];
m0_199 -> m0_187  [key=0, style=solid];
m0_199 -> m0_208  [key=2, style=dotted];
m0_188 -> m0_189  [key=0, style=solid];
m0_188 -> m0_207  [key=2, style=dotted];
m0_189 -> m0_190  [key=0, style=solid];
m0_189 -> m0_207  [key=2, style=dotted];
m0_190 -> m0_191  [key=0, style=solid];
m0_190 -> m0_208  [key=2, style=dotted];
m0_191 -> m0_192  [key=0, style=solid];
m0_191 -> m0_208  [key=2, style=dotted];
m0_192 -> m0_193  [key=0, style=solid];
m0_192 -> m0_207  [key=2, style=dotted];
m0_193 -> m0_194  [key=0, style=solid];
m0_193 -> m0_207  [key=2, style=dotted];
m0_194 -> m0_195  [key=0, style=solid];
m0_194 -> m0_209  [key=2, style=dotted];
m0_195 -> m0_196  [key=0, style=solid];
m0_195 -> m0_207  [key=2, style=dotted];
m0_196 -> m0_197  [key=0, style=solid];
m0_196 -> m0_207  [key=2, style=dotted];
m0_197 -> m0_198  [key=0, style=solid];
m0_197 -> m0_207  [key=2, style=dotted];
m0_198 -> m0_199  [key=0, style=solid];
m0_198 -> m0_207  [key=2, style=dotted];
m0_200 -> m0_201  [key=0, style=solid];
m0_200 -> m0_207  [key=2, style=dotted];
m0_201 -> m0_202  [key=0, style=solid];
m0_201 -> m0_207  [key=2, style=dotted];
m0_202 -> m0_203  [key=0, style=solid];
m0_202 -> m0_208  [key=2, style=dotted];
m0_203 -> m0_204  [key=0, style=solid];
m0_203 -> m0_210  [key=2, style=dotted];
m0_203 -> m0_211  [key=2, style=dotted];
m0_204 -> m0_205  [key=0, style=solid];
m0_205 -> m0_112  [key=0, style=bold, color=blue];
m0_39 -> m0_40  [key=0, style=solid];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_33  [key=2, style=dotted];
m0_40 -> m0_43  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_34  [key=2, style=dotted];
m0_42 -> m0_39  [key=0, style=bold, color=blue];
m0_173 -> m0_174  [key=0, style=solid];
m0_35 -> m0_36  [key=0, style=solid];
m0_36 -> m0_37  [key=0, style=solid];
m0_36 -> m0_38  [key=2, style=dotted];
m0_37 -> m0_35  [key=0, style=bold, color=blue];
m0_43 -> m0_44  [key=0, style=solid];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_38  [key=2, style=dotted];
m0_45 -> m0_43  [key=0, style=bold, color=blue];
m0_50 -> m0_51  [key=0, style=solid];
m0_51 -> m0_52  [key=0, style=solid];
m0_51 -> m0_38  [key=2, style=dotted];
m0_52 -> m0_50  [key=0, style=bold, color=blue];
m0_57 -> m0_58  [key=0, style=solid];
m0_58 -> m0_59  [key=0, style=solid];
m0_58 -> m0_38  [key=2, style=dotted];
m0_59 -> m0_57  [key=0, style=bold, color=blue];
m0_166 -> m0_167  [key=0, style=solid];
m0_167 -> m0_168  [key=0, style=solid];
m0_167 -> m0_38  [key=2, style=dotted];
m0_168 -> m0_166  [key=0, style=bold, color=blue];
m0_174 -> m0_175  [key=0, style=solid];
m0_174 -> m0_38  [key=2, style=dotted];
m0_175 -> m0_173  [key=0, style=bold, color=blue];
m0_53 -> m0_54  [key=0, style=solid];
m0_54 -> m0_55  [key=0, style=solid];
m0_54 -> m0_33  [key=2, style=dotted];
m0_54 -> m0_57  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_55 -> m0_56  [key=0, style=solid];
m0_55 -> m0_34  [key=2, style=dotted];
m0_56 -> m0_53  [key=0, style=bold, color=blue];
m0_65 -> m0_66  [key=0, style=solid];
m0_66 -> m0_67  [key=0, style=solid];
m0_66 -> m0_68  [key=1, style=dashed, color=darkseagreen4, label=path];
m0_67 -> m0_68  [key=0, style=solid];
m0_67 -> m0_38  [key=2, style=dotted];
m0_68 -> m0_69  [key=0, style=solid];
m0_68 -> m0_17  [key=2, style=dotted];
m0_69 -> m0_65  [key=0, style=bold, color=blue];
m0_82 -> m0_83  [key=0, style=solid];
m0_83 -> m0_84  [key=0, style=solid];
m0_83 -> m0_86  [key=1, style=dashed, color=darkseagreen4, label=bodyContent];
m0_84 -> m0_85  [key=0, style=solid];
m0_84 -> m0_11  [key=2, style=dotted];
m0_84 -> m0_88  [key=1, style=dashed, color=darkseagreen4, label=memory];
m0_84 -> m0_90  [key=1, style=dashed, color=darkseagreen4, label=memory];
m0_86 -> m0_87  [key=0, style=solid];
m0_86 -> m0_13  [key=2, style=dotted];
m0_85 -> m0_86  [key=0, style=solid];
m0_85 -> m0_12  [key=2, style=dotted];
m0_85 -> m0_87  [key=1, style=dashed, color=darkseagreen4, label=writer];
m0_88 -> m0_89  [key=0, style=solid];
m0_90 -> m0_91  [key=0, style=solid];
m0_90 -> m0_16  [key=2, style=dotted];
m0_87 -> m0_88  [key=0, style=solid];
m0_87 -> m0_14  [key=2, style=dotted];
m0_89 -> m0_90  [key=0, style=solid];
m0_89 -> m0_15  [key=2, style=dotted];
m0_91 -> m0_92  [key=0, style=solid];
m0_91 -> m0_17  [key=2, style=dotted];
m0_92 -> m0_82  [key=0, style=bold, color=blue];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_26  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_18 -> m0_27  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_22  [key=1, style=dashed, color=darkseagreen4, label=bodyContent];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_16  [key=2, style=dotted];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_17  [key=2, style=dotted];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_11  [key=2, style=dotted];
m0_20 -> m0_24  [key=1, style=dashed, color=darkseagreen4, label=memory];
m0_20 -> m0_26  [key=1, style=dashed, color=darkseagreen4, label=memory];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_13  [key=2, style=dotted];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_12  [key=2, style=dotted];
m0_21 -> m0_23  [key=1, style=dashed, color=darkseagreen4, label=writer];
m0_24 -> m0_25  [key=0, style=solid];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_14  [key=2, style=dotted];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_15  [key=2, style=dotted];
m0_28 -> m0_18  [key=0, style=bold, color=blue];
m0_148 -> m0_149  [key=0, style=solid];
m0_149 -> m0_150  [key=0, style=solid];
m0_149 -> m0_152  [key=1, style=dashed, color=darkseagreen4, label=bodyContent];
m0_150 -> m0_151  [key=0, style=solid];
m0_150 -> m0_160  [key=2, style=dotted];
m0_150 -> m0_154  [key=1, style=dashed, color=darkseagreen4, label=memory];
m0_150 -> m0_156  [key=1, style=dashed, color=darkseagreen4, label=memory];
m0_152 -> m0_153  [key=0, style=solid];
m0_152 -> m0_13  [key=2, style=dotted];
m0_151 -> m0_152  [key=0, style=solid];
m0_151 -> m0_12  [key=2, style=dotted];
m0_151 -> m0_153  [key=1, style=dashed, color=darkseagreen4, label=writer];
m0_154 -> m0_155  [key=0, style=solid];
m0_156 -> m0_157  [key=0, style=solid];
m0_156 -> m0_16  [key=2, style=dotted];
m0_156 -> m0_113  [key=2, style=dotted];
m0_156 -> m0_158  [key=1, style=dashed, color=darkseagreen4, label=request];
m0_153 -> m0_154  [key=0, style=solid];
m0_153 -> m0_14  [key=2, style=dotted];
m0_155 -> m0_156  [key=0, style=solid];
m0_155 -> m0_15  [key=2, style=dotted];
m0_157 -> m0_158  [key=0, style=solid];
m0_157 -> m0_161  [key=2, style=dotted];
m0_158 -> m0_159  [key=0, style=solid];
m0_158 -> m0_17  [key=2, style=dotted];
m0_159 -> m0_148  [key=0, style=bold, color=blue];
m0_123 -> m0_124  [key=0, style=solid];
m0_124 -> m0_125  [key=0, style=solid];
m0_124 -> m0_111  [key=2, style=dotted];
m0_124 -> m0_15  [key=2, style=dotted];
m0_124 -> m0_120  [key=2, style=dotted];
m0_124 -> m0_121  [key=2, style=dotted];
m0_124 -> m0_126  [key=1, style=dashed, color=darkseagreen4, label=memory];
m0_125 -> m0_126  [key=0, style=solid];
m0_125 -> m0_15  [key=2, style=dotted];
m0_126 -> m0_127  [key=0, style=solid];
m0_126 -> m0_16  [key=2, style=dotted];
m0_126 -> m0_113  [key=2, style=dotted];
m0_127 -> m0_128  [key=0, style=solid];
m0_127 -> m0_129  [key=2, style=dotted];
m0_127 -> m0_17  [key=2, style=dotted];
m0_128 -> m0_123  [key=0, style=bold, color=blue];
m0_136 -> m0_137  [key=0, style=solid];
m0_137 -> m0_138  [key=0, style=solid];
m0_137 -> m0_111  [key=2, style=dotted];
m0_137 -> m0_15  [key=2, style=dotted];
m0_137 -> m0_120  [key=2, style=dotted];
m0_137 -> m0_121  [key=2, style=dotted];
m0_137 -> m0_139  [key=1, style=dashed, color=darkseagreen4, label=memory];
m0_138 -> m0_139  [key=0, style=solid];
m0_138 -> m0_15  [key=2, style=dotted];
m0_139 -> m0_140  [key=0, style=solid];
m0_139 -> m0_16  [key=2, style=dotted];
m0_139 -> m0_113  [key=2, style=dotted];
m0_140 -> m0_141  [key=0, style=solid];
m0_140 -> m0_129  [key=2, style=dotted];
m0_140 -> m0_142  [key=2, style=dotted];
m0_140 -> m0_17  [key=2, style=dotted];
m0_141 -> m0_136  [key=0, style=bold, color=blue];
}
